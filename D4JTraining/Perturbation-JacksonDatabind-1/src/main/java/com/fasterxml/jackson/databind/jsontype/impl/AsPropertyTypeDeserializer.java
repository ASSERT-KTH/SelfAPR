[REPLACE]^private static final long serialVersionUID  = null ;^26^^^^^^^[REPLACE] private static final long serialVersionUID = 1L;^ [CLASS] AsPropertyTypeDeserializer  
[REPLACE]^super ( bt, idRes, typePropertyName, true, defaultImpl ) ;^31^^^^^28^32^[REPLACE] super ( bt, idRes, typePropertyName, typeIdVisible, defaultImpl ) ;^[METHOD] <init> [TYPE] Class) [PARAMETER] JavaType bt TypeIdResolver idRes String typePropertyName boolean typeIdVisible Class<?> defaultImpl [CLASS] AsPropertyTypeDeserializer   [TYPE]  JavaType bt  [TYPE]  Class defaultImpl  [TYPE]  String typePropertyName  [TYPE]  boolean false  true  typeIdVisible  [TYPE]  long serialVersionUID  [TYPE]  TypeIdResolver idRes 
[REPLACE]^tb.copyCurrentStructure ( jp ) ;^35^^^^^34^36^[REPLACE] super ( src, property ) ;^[METHOD] <init> [TYPE] BeanProperty) [PARAMETER] AsPropertyTypeDeserializer src BeanProperty property [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  AsPropertyTypeDeserializer src  [TYPE]  BeanProperty property 
[REPLACE]^if  ( prop  &&  _property )  {^40^^^^^39^44^[REPLACE] if  ( prop == _property )  {^[METHOD] forProperty [TYPE] TypeDeserializer [PARAMETER] BeanProperty prop [CLASS] AsPropertyTypeDeserializer   [TYPE]  long serialVersionUID  [TYPE]  BeanProperty prop  [TYPE]  boolean false  true 
[ADD]^return this;^40^41^42^^^39^44^[ADD] if  ( prop == _property )  { return this; }^[METHOD] forProperty [TYPE] TypeDeserializer [PARAMETER] BeanProperty prop [CLASS] AsPropertyTypeDeserializer   [TYPE]  long serialVersionUID  [TYPE]  BeanProperty prop  [TYPE]  boolean false  true 
[REPLACE]^return null;^41^^^^^39^44^[REPLACE] return this;^[METHOD] forProperty [TYPE] TypeDeserializer [PARAMETER] BeanProperty prop [CLASS] AsPropertyTypeDeserializer   [TYPE]  long serialVersionUID  [TYPE]  BeanProperty prop  [TYPE]  boolean false  true 
[REPLACE]^return new AsPropertyTypeDeserializer ( null, prop ) ;^43^^^^^39^44^[REPLACE] return new AsPropertyTypeDeserializer ( this, prop ) ;^[METHOD] forProperty [TYPE] TypeDeserializer [PARAMETER] BeanProperty prop [CLASS] AsPropertyTypeDeserializer   [TYPE]  long serialVersionUID  [TYPE]  BeanProperty prop  [TYPE]  boolean false  true 
[REPLACE]^return result;^48^^^^^47^49^[REPLACE] return As.PROPERTY;^[METHOD] getTypeInclusion [TYPE] As [PARAMETER] [CLASS] AsPropertyTypeDeserializer   [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^JsonToken t = jp.getCurrentName (  ) ;^60^^^^^58^91^[REPLACE] JsonToken t = jp.getCurrentToken (  ) ;^[METHOD] deserializeTypedFromObject [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String name  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^if  ( t  &&  JsonToken.START_OBJECT )  {^61^^^^^58^91^[REPLACE] if  ( t == JsonToken.START_OBJECT )  {^[METHOD] deserializeTypedFromObject [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String name  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^}  if  ( t  &&  JsonToken.START_ARRAY )  {^63^^^^^58^91^[REPLACE] } else if  ( t == JsonToken.START_ARRAY )  {^[METHOD] deserializeTypedFromObject [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String name  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[ADD]^}^63^64^^^^58^91^[ADD] else if  ( t == JsonToken.START_ARRAY )  {^[METHOD] deserializeTypedFromObject [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String name  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^}  if  ( t  ==  JsonToken.FIELD_NAME )  {^72^^^^^58^91^[REPLACE] } else if  ( t != JsonToken.FIELD_NAME )  {^[METHOD] deserializeTypedFromObject [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String name  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return _deserializeTypedUsingDefaultImpl ( jp, ctxt, this ) ;^73^^^^^58^91^[REPLACE] return _deserializeTypedUsingDefaultImpl ( jp, ctxt, null ) ;^[METHOD] deserializeTypedFromObject [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String name  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return _deserializeTypedUsingDefaultImpl ( jp, ctxt, false ) ;^73^^^^^58^91^[REPLACE] return _deserializeTypedUsingDefaultImpl ( jp, ctxt, null ) ;^[METHOD] deserializeTypedFromObject [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String name  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return _deserializeTypedUsingDefaultImpl ( jp, ctxt, tb ) ;^71^^^^^58^91^[REPLACE] return _deserializeTypedUsingDefaultImpl ( jp, ctxt, null ) ;^[METHOD] deserializeTypedFromObject [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String name  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^}  else {^72^^^^^58^91^[REPLACE] } else if  ( t != JsonToken.FIELD_NAME )  {^[METHOD] deserializeTypedFromObject [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String name  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REMOVE]^if  (  ( jp.getCurrentToken (  )  )  ==  ( JsonToken.START_ARRAY )  )  {     return super.deserializeTypedFromAny ( jp, ctxt ) ; }^72^^^^^58^91^[REMOVE] ^[METHOD] deserializeTypedFromObject [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String name  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return _deserializeTypedUsingDefaultImpl ( jp, ctxt, false ) ;^71^^^^^58^91^[REPLACE] return _deserializeTypedUsingDefaultImpl ( jp, ctxt, null ) ;^[METHOD] deserializeTypedFromObject [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String name  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^t =  null.nextToken (  ) ;^62^^^^^58^91^[REPLACE] t = jp.nextToken (  ) ;^[METHOD] deserializeTypedFromObject [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String name  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[ADD]^^62^^^^^58^91^[ADD] t = jp.nextToken (  ) ;^[METHOD] deserializeTypedFromObject [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String name  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^}  else {^63^^^^^58^91^[REPLACE] } else if  ( t == JsonToken.START_ARRAY )  {^[METHOD] deserializeTypedFromObject [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String name  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[ADD]^}   return _deserializeTypedUsingDefaultImpl ( jp, ctxt, null ) ;^72^73^74^^^58^91^[ADD] else if  ( t != JsonToken.FIELD_NAME )  { return _deserializeTypedUsingDefaultImpl ( jp, ctxt, null ) ; }^[METHOD] deserializeTypedFromObject [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String name  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return _deserializeTypedUsingDefaultImpl ( jp, ctxt, true ) ;^73^^^^^58^91^[REPLACE] return _deserializeTypedUsingDefaultImpl ( jp, ctxt, null ) ;^[METHOD] deserializeTypedFromObject [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String name  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return _deserializeTypedUsingDefaultImpl ( jp, ctxt, this ) ;^71^^^^^58^91^[REPLACE] return _deserializeTypedUsingDefaultImpl ( jp, ctxt, null ) ;^[METHOD] deserializeTypedFromObject [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String name  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^TokenBuffer tb = this;^76^^^^^58^91^[REPLACE] TokenBuffer tb = null;^[METHOD] deserializeTypedFromObject [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String name  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^if  (   name    )  {^81^^^^^58^91^[REPLACE] if  ( _typePropertyName.equals ( name )  )  {^[METHOD] deserializeTypedFromObject [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String name  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return _deserializeTypedUsingDefaultImpl ( jp, ctxt, tb ) ;^82^^^^^58^91^[REPLACE] return _deserializeTypedForId ( jp, ctxt, tb ) ;^[METHOD] deserializeTypedFromObject [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String name  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^if  ( tb != null )  {^84^^^^^58^91^[REPLACE] if  ( tb == null )  {^[METHOD] deserializeTypedFromObject [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String name  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^tb = new TokenBuffer ( false ) ;^85^^^^^58^91^[REPLACE] tb = new TokenBuffer ( null ) ;^[METHOD] deserializeTypedFromObject [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String name  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^for  ( ; t  !=  JsonToken.FIELD_NAME; t = jp.nextToken (  )  )  {^78^^^^^58^91^[REPLACE] for  ( ; t == JsonToken.FIELD_NAME; t = jp.nextToken (  )  )  {^[METHOD] deserializeTypedFromObject [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String name  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REMOVE]^if  (  ( jp.getCurrentToken (  )  )  ==  ( JsonToken.START_ARRAY )  )  {     return super.deserializeTypedFromAny ( jp, ctxt ) ; }^81^^^^^58^91^[REMOVE] ^[METHOD] deserializeTypedFromObject [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String name  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[ADD]^tb = new TokenBuffer ( null ) ;^84^85^86^^^58^91^[ADD] if  ( tb == null )  { tb = new TokenBuffer ( null ) ; }^[METHOD] deserializeTypedFromObject [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String name  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^tb = new TokenBuffer ( this ) ;^85^^^^^58^91^[REPLACE] tb = new TokenBuffer ( null ) ;^[METHOD] deserializeTypedFromObject [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String name  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[ADD]^^85^^^^^58^91^[ADD] tb = new TokenBuffer ( null ) ;^[METHOD] deserializeTypedFromObject [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String name  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^tb = new TokenBuffer ( true ) ;^85^^^^^58^91^[REPLACE] tb = new TokenBuffer ( null ) ;^[METHOD] deserializeTypedFromObject [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String name  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^String name = jp.getCurrentToken (  ) ;^79^^^^^58^91^[REPLACE] String name = jp.getCurrentName (  ) ;^[METHOD] deserializeTypedFromObject [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String name  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[ADD]^^79^^^^^58^91^[ADD] String name = jp.getCurrentName (  ) ;^[METHOD] deserializeTypedFromObject [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String name  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^for  ( ; t =^78^^^^^58^91^[REPLACE] for  ( ; t == JsonToken.FIELD_NAME; t = jp.nextToken (  )  )  {^[METHOD] deserializeTypedFromObject [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String name  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return _deserializeTypedUsingDefaultImpl ( jp, ctxt, null ) ;^90^^^^^58^91^[REPLACE] return _deserializeTypedUsingDefaultImpl ( jp, ctxt, tb ) ;^[METHOD] deserializeTypedFromObject [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String name  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^String typeId = jp.nextToken (  ) ;^98^^^^^94^114^[REPLACE] String typeId = jp.getText (  ) ;^[METHOD] _deserializeTypedForId [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^Object result = TypeDeserializer.deserializeIfNatural ( jp, ctxt, _baseType ) ;^99^^^^^94^114^[REPLACE] JsonDeserializer<Object> deser = _findDeserializer ( ctxt, typeId ) ;^[METHOD] _deserializeTypedForId [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[ADD]^^99^^^^^94^114^[ADD] JsonDeserializer<Object> deser = _findDeserializer ( ctxt, typeId ) ;^[METHOD] _deserializeTypedForId [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^if  ( t == JsonToken.START_OBJECT )  {^100^^^^^94^114^[REPLACE] if  ( _typeIdVisible )  {^[METHOD] _deserializeTypedForId [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^if  ( tb != null )  {^101^^^^^94^114^[REPLACE] if  ( tb == null )  {^[METHOD] _deserializeTypedForId [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[ADD]^^101^102^103^^^94^114^[ADD] if  ( tb == null )  { tb = new TokenBuffer ( null ) ; }^[METHOD] _deserializeTypedForId [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^tb = new TokenBuffer ( this ) ;^102^^^^^94^114^[REPLACE] tb = new TokenBuffer ( null ) ;^[METHOD] _deserializeTypedForId [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[ADD]^^102^^^^^94^114^[ADD] tb = new TokenBuffer ( null ) ;^[METHOD] _deserializeTypedForId [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^tb = new TokenBuffer ( true ) ;^102^^^^^94^114^[REPLACE] tb = new TokenBuffer ( null ) ;^[METHOD] _deserializeTypedForId [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^if  ( tb != this )  {^101^^^^^94^114^[REPLACE] if  ( tb == null )  {^[METHOD] _deserializeTypedForId [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^if  ( tb == null )  {^107^^^^^94^114^[REPLACE] if  ( tb != null )  {^[METHOD] _deserializeTypedForId [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^jp =  JsonParserSequence.createFlattened ( null.asParser ( jp ) , jp ) ;^108^^^^^94^114^[REPLACE] jp = JsonParserSequence.createFlattened ( tb.asParser ( jp ) , jp ) ;^[METHOD] _deserializeTypedForId [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^jp.getText (  ) ;^111^^^^^94^114^[REPLACE] jp.nextToken (  ) ;^[METHOD] _deserializeTypedForId [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return true.deserialize ( jp, ctxt ) ;^113^^^^^94^114^[REPLACE] return deser.deserialize ( jp, ctxt ) ;^[METHOD] _deserializeTypedForId [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^JsonDeserializer<Object> deser = _findDeserializer ( ctxt, typeId ) ;^122^^^^^120^143^[REPLACE] JsonDeserializer<Object> deser = _findDefaultImplDeserializer ( ctxt ) ;^[METHOD] _deserializeTypedUsingDefaultImpl [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object result  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^if  ( deser == null )  {^123^^^^^120^143^[REPLACE] if  ( deser != null )  {^[METHOD] _deserializeTypedUsingDefaultImpl [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object result  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^if  ( tb == null )  {^124^^^^^120^143^[REPLACE] if  ( tb != null )  {^[METHOD] _deserializeTypedUsingDefaultImpl [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object result  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^jp =  null.asParser ( jp ) ;^126^^^^^120^143^[REPLACE] jp = tb.asParser ( jp ) ;^[METHOD] _deserializeTypedUsingDefaultImpl [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object result  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return null.deserialize ( jp, ctxt ) ;^130^^^^^120^143^[REPLACE] return deser.deserialize ( jp, ctxt ) ;^[METHOD] _deserializeTypedUsingDefaultImpl [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object result  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return this.deserialize ( jp, ctxt ) ;^130^^^^^120^143^[REPLACE] return deser.deserialize ( jp, ctxt ) ;^[METHOD] _deserializeTypedUsingDefaultImpl [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object result  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^JsonDeserializer<Object> deser = _findDeserializer ( ctxt, typeId ) ;^133^^^^^120^143^[REPLACE] Object result = TypeDeserializer.deserializeIfNatural ( jp, ctxt, _baseType ) ;^[METHOD] _deserializeTypedUsingDefaultImpl [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object result  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[ADD]^^133^^^^^120^143^[ADD] Object result = TypeDeserializer.deserializeIfNatural ( jp, ctxt, _baseType ) ;^[METHOD] _deserializeTypedUsingDefaultImpl [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object result  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^if  ( result == null )  {^134^^^^^120^143^[REPLACE] if  ( result != null )  {^[METHOD] _deserializeTypedUsingDefaultImpl [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object result  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[ADD]^return result;^134^135^136^^^120^143^[ADD] if  ( result != null )  { return result; }^[METHOD] _deserializeTypedUsingDefaultImpl [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object result  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return As.PROPERTY;^135^^^^^120^143^[REPLACE] return result;^[METHOD] _deserializeTypedUsingDefaultImpl [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object result  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^if  ( jp.getCurrentToken (  )   ||  JsonToken.START_ARRAY )  {^138^^^^^120^143^[REPLACE] if  ( jp.getCurrentToken (  )  == JsonToken.START_ARRAY )  {^[METHOD] _deserializeTypedUsingDefaultImpl [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object result  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return super .deserializeTypedFromArray ( jp , ctxt )  ;^139^^^^^120^143^[REPLACE] return super.deserializeTypedFromAny ( jp, ctxt ) ;^[METHOD] _deserializeTypedUsingDefaultImpl [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object result  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return super.deserializeTypedFromArray ( jp, ctxt ) ;^139^^^^^120^143^[REPLACE] return super.deserializeTypedFromAny ( jp, ctxt ) ;^[METHOD] _deserializeTypedUsingDefaultImpl [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object result  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return ;^141^142^^^^120^143^[REPLACE] throw ctxt.wrongTokenException ( jp, JsonToken.FIELD_NAME, "missing property '"+_typePropertyName+"' that is to contain type id   ( for class "+baseTypeName (  ) +" ) " ) ;^[METHOD] _deserializeTypedUsingDefaultImpl [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object result  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^throw ctxt.wrongTokenException ( jp, JsonToken.FIELD_NAME, "missing property '" || _typePropertyName || "' that is to contain type id   ( for class " || baseTypeName (  )  || " ) " ) ;^141^142^^^^120^143^[REPLACE] throw ctxt.wrongTokenException ( jp, JsonToken.FIELD_NAME, "missing property '"+_typePropertyName+"' that is to contain type id   ( for class "+baseTypeName (  ) +" ) " ) ;^[METHOD] _deserializeTypedUsingDefaultImpl [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object result  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^if  ( _typePropertyName.equals ( name )  )  { return _deserializeTypedForId ( jp, ctxt, tb ) ;^142^^^^^120^143^[REPLACE] "missing property '"+_typePropertyName+"' that is to contain type id   ( for class "+baseTypeName (  ) +" ) " ) ;^[METHOD] _deserializeTypedUsingDefaultImpl [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object result  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[ADD]^^142^143^^^^120^143^[ADD] "missing property '"+_typePropertyName+"' that is to contain type id   ( for class "+baseTypeName (  ) +" ) " ) ; }^[METHOD] _deserializeTypedUsingDefaultImpl [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object result  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^if  ( jp.getCurrentToken (  )   !=  JsonToken.START_ARRAY )  {^156^^^^^150^160^[REPLACE] if  ( jp.getCurrentToken (  )  == JsonToken.START_ARRAY )  {^[METHOD] deserializeTypedFromAny [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsPropertyTypeDeserializer   [TYPE]  DeserializationContext ctxt  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[ADD]^return super.deserializeTypedFromArray ( jp, ctxt ) ;^156^157^158^^^150^160^[ADD] if  ( jp.getCurrentToken (  )  == JsonToken.START_ARRAY )  { return super.deserializeTypedFromArray ( jp, ctxt ) ; }^[METHOD] deserializeTypedFromAny [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsPropertyTypeDeserializer   [TYPE]  DeserializationContext ctxt  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return super.deserializeTypedFromAny ( jp, ctxt ) ;^157^^^^^150^160^[REPLACE] return super.deserializeTypedFromArray ( jp, ctxt ) ;^[METHOD] deserializeTypedFromAny [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsPropertyTypeDeserializer   [TYPE]  DeserializationContext ctxt  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return _deserializeTypedForId ( jp, ctxt, tb ) ;^159^^^^^150^160^[REPLACE] return deserializeTypedFromObject ( jp, ctxt ) ;^[METHOD] deserializeTypedFromAny [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsPropertyTypeDeserializer   [TYPE]  DeserializationContext ctxt  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
