[REPLACE]^private static final long serialVersionUID  = null ;^26^^^^^^^[REPLACE] private static final long serialVersionUID = 1L;^ [CLASS] AsPropertyTypeDeserializer  
[REPLACE]^JsonToken t = jp.getCurrentName (  ) ;^60^^^^^58^91^[REPLACE] JsonToken t = jp.getCurrentToken (  ) ;^[METHOD] deserializeTypedFromObject [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String name  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^if  ( t  ||  JsonToken.START_OBJECT )  {^61^^^^^58^91^[REPLACE] if  ( t == JsonToken.START_OBJECT )  {^[METHOD] deserializeTypedFromObject [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String name  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^}  else {^63^^^^^58^91^[REPLACE] } else if  ( t == JsonToken.START_ARRAY )  {^[METHOD] deserializeTypedFromObject [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String name  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^}  else {^72^^^^^58^91^[REPLACE] } else if  ( t != JsonToken.FIELD_NAME )  {^[METHOD] deserializeTypedFromObject [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String name  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[ADD]^}   return _deserializeTypedUsingDefaultImpl ( jp, ctxt, null ) ;^72^73^74^^^58^91^[ADD] else if  ( t != JsonToken.FIELD_NAME )  { return _deserializeTypedUsingDefaultImpl ( jp, ctxt, null ) ; }^[METHOD] deserializeTypedFromObject [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String name  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return _deserializeTypedUsingDefaultImpl ( jp, ctxt, false ) ;^73^^^^^58^91^[REPLACE] return _deserializeTypedUsingDefaultImpl ( jp, ctxt, null ) ;^[METHOD] deserializeTypedFromObject [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String name  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return _deserializeTypedUsingDefaultImpl ( jp, ctxt, false ) ;^71^^^^^58^91^[REPLACE] return _deserializeTypedUsingDefaultImpl ( jp, ctxt, null ) ;^[METHOD] deserializeTypedFromObject [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String name  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^} else if  ( t  ==  JsonToken.FIELD_NAME )  {^72^^^^^58^91^[REPLACE] } else if  ( t != JsonToken.FIELD_NAME )  {^[METHOD] deserializeTypedFromObject [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String name  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return _deserializeTypedUsingDefaultImpl ( jp, ctxt, this ) ;^71^^^^^58^91^[REPLACE] return _deserializeTypedUsingDefaultImpl ( jp, ctxt, null ) ;^[METHOD] deserializeTypedFromObject [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String name  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return _deserializeTypedUsingDefaultImpl ( jp, ctxt, true ) ;^73^^^^^58^91^[REPLACE] return _deserializeTypedUsingDefaultImpl ( jp, ctxt, null ) ;^[METHOD] deserializeTypedFromObject [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String name  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[ADD]^^62^^^^^58^91^[ADD] t = jp.nextToken (  ) ;^[METHOD] deserializeTypedFromObject [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String name  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[ADD]^}^63^64^^^^58^91^[ADD] else if  ( t == JsonToken.START_ARRAY )  {^[METHOD] deserializeTypedFromObject [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String name  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return _deserializeTypedUsingDefaultImpl ( jp, ctxt, this ) ;^73^^^^^58^91^[REPLACE] return _deserializeTypedUsingDefaultImpl ( jp, ctxt, null ) ;^[METHOD] deserializeTypedFromObject [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String name  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return _deserializeTypedUsingDefaultImpl  (  jp, ctxt, tb  )  ;  ;^71^^^^^58^91^[REPLACE] return _deserializeTypedUsingDefaultImpl ( jp, ctxt, null ) ;^[METHOD] deserializeTypedFromObject [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String name  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^}  if  ( t  ==  JsonToken.FIELD_NAME )  {^72^^^^^58^91^[REPLACE] } else if  ( t != JsonToken.FIELD_NAME )  {^[METHOD] deserializeTypedFromObject [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String name  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^t =  null.nextToken (  ) ;^62^^^^^58^91^[REPLACE] t = jp.nextToken (  ) ;^[METHOD] deserializeTypedFromObject [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String name  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^TokenBuffer tb = true;^76^^^^^58^91^[REPLACE] TokenBuffer tb = null;^[METHOD] deserializeTypedFromObject [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String name  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^if   (  t == JsonToken.START_OBJECT  )   {  ;^81^^^^^58^91^[REPLACE] if  ( _typePropertyName.equals ( name )  )  {^[METHOD] deserializeTypedFromObject [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String name  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return _deserializeTypedForId  (  jp, ctxt, tb  )  ;  ;^82^^^^^58^91^[REPLACE] return _deserializeTypedForId ( jp, ctxt, tb ) ;^[METHOD] deserializeTypedFromObject [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String name  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^if  ( tb != null )  {^84^^^^^58^91^[REPLACE] if  ( tb == null )  {^[METHOD] deserializeTypedFromObject [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String name  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^tb = new TokenBuffer ( false ) ;^85^^^^^58^91^[REPLACE] tb = new TokenBuffer ( null ) ;^[METHOD] deserializeTypedFromObject [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String name  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^for  ( ; t =^78^^^^^58^91^[REPLACE] for  ( ; t == JsonToken.FIELD_NAME; t = jp.nextToken (  )  )  {^[METHOD] deserializeTypedFromObject [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String name  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^tb = new TokenBuffer ( true ) ;^85^^^^^58^91^[REPLACE] tb = new TokenBuffer ( null ) ;^[METHOD] deserializeTypedFromObject [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String name  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^String typeId = jp.getText (  )  ;^79^^^^^58^91^[REPLACE] String name = jp.getCurrentName (  ) ;^[METHOD] deserializeTypedFromObject [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String name  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return _deserializeTypedUsingDefaultImpl  (  jp, ctxt, tb  )  ;  ;^90^^^^^58^91^[REPLACE] return _deserializeTypedUsingDefaultImpl ( jp, ctxt, tb ) ;^[METHOD] deserializeTypedFromObject [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String name  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^String typeId = jp .getCurrentName (  )  ;^98^^^^^97^114^[REPLACE] String typeId = jp.getText (  ) ;^[METHOD] _deserializeTypedForId [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^Object> deser = _findDefaultImplDeserializer ( ctxt )  ;^99^^^^^97^114^[REPLACE] JsonDeserializer<Object> deser = _findDeserializer ( ctxt, typeId ) ;^[METHOD] _deserializeTypedForId [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^if   (  t == JsonToken.START_OBJECT  )   {  ;^100^^^^^97^114^[REPLACE] if  ( _typeIdVisible )  {^[METHOD] _deserializeTypedForId [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^if  ( tb != true )  {^101^^^^^97^114^[REPLACE] if  ( tb == null )  {^[METHOD] _deserializeTypedForId [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^tb = new TokenBuffer ( this ) ;^102^^^^^97^114^[REPLACE] tb = new TokenBuffer ( null ) ;^[METHOD] _deserializeTypedForId [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^tb = new TokenBuffer ( false ) ;^102^^^^^97^114^[REPLACE] tb = new TokenBuffer ( null ) ;^[METHOD] _deserializeTypedForId [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^if   (  tb != null  )   {  ;^101^^^^^97^114^[REPLACE] if  ( tb == null )  {^[METHOD] _deserializeTypedForId [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[ADD]^^102^^^^^97^114^[ADD] tb = new TokenBuffer ( null ) ;^[METHOD] _deserializeTypedForId [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^if  ( tb == null )  {^107^^^^^97^114^[REPLACE] if  ( tb != null )  {^[METHOD] _deserializeTypedForId [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^jp =  JsonParserSequence.createFlattened ( null.asParser ( jp ) , jp ) ;^108^^^^^97^114^[REPLACE] jp = JsonParserSequence.createFlattened ( tb.asParser ( jp ) , jp ) ;^[METHOD] _deserializeTypedForId [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^jp .getCurrentToken (  )  ;^111^^^^^97^114^[REPLACE] jp.nextToken (  ) ;^[METHOD] _deserializeTypedForId [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return deser.deserialize  (  jp, ctxt  )  ;  ;^113^^^^^97^114^[REPLACE] return deser.deserialize ( jp, ctxt ) ;^[METHOD] _deserializeTypedForId [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[ADD]^^122^^^^^120^143^[ADD] JsonDeserializer<Object> deser = _findDefaultImplDeserializer ( ctxt ) ;^[METHOD] _deserializeTypedUsingDefaultImpl [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object result  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^if   (  tb != null  )   {  ;^123^^^^^120^143^[REPLACE] if  ( deser != null )  {^[METHOD] _deserializeTypedUsingDefaultImpl [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object result  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^if  ( tb == this )  {^124^^^^^120^143^[REPLACE] if  ( tb != null )  {^[METHOD] _deserializeTypedUsingDefaultImpl [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object result  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^jp =  null.asParser ( jp ) ;^126^^^^^120^143^[REPLACE] jp = tb.asParser ( jp ) ;^[METHOD] _deserializeTypedUsingDefaultImpl [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object result  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return deser.deserialize  (  jp, ctxt  )  ;  ;^130^^^^^120^143^[REPLACE] return deser.deserialize ( jp, ctxt ) ;^[METHOD] _deserializeTypedUsingDefaultImpl [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object result  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^if  ( tb == true )  {^124^^^^^120^143^[REPLACE] if  ( tb != null )  {^[METHOD] _deserializeTypedUsingDefaultImpl [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object result  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return null.deserialize ( jp, ctxt ) ;^130^^^^^120^143^[REPLACE] return deser.deserialize ( jp, ctxt ) ;^[METHOD] _deserializeTypedUsingDefaultImpl [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object result  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[ADD]^^133^^^^^120^143^[ADD] Object result = TypeDeserializer.deserializeIfNatural ( jp, ctxt, _baseType ) ;^[METHOD] _deserializeTypedUsingDefaultImpl [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object result  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^if  ( result == null )  {^134^^^^^120^143^[REPLACE] if  ( result != null )  {^[METHOD] _deserializeTypedUsingDefaultImpl [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object result  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[ADD]^^134^135^136^^^120^143^[ADD] if  ( result != null )  { return result; }^[METHOD] _deserializeTypedUsingDefaultImpl [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object result  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return result;  ;^135^^^^^120^143^[REPLACE] return result;^[METHOD] _deserializeTypedUsingDefaultImpl [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object result  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^if  ( jp.getCurrentToken (  )   !=  JsonToken.START_ARRAY )  {^138^^^^^120^143^[REPLACE] if  ( jp.getCurrentToken (  )  == JsonToken.START_ARRAY )  {^[METHOD] _deserializeTypedUsingDefaultImpl [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object result  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return super.deserializeTypedFromArray ( jp, ctxt ) ;^139^^^^^120^143^[REPLACE] return super.deserializeTypedFromAny ( jp, ctxt ) ;^[METHOD] _deserializeTypedUsingDefaultImpl [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object result  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return super .deserializeTypedFromArray ( jp , ctxt )  ;^139^^^^^120^143^[REPLACE] return super.deserializeTypedFromAny ( jp, ctxt ) ;^[METHOD] _deserializeTypedUsingDefaultImpl [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object result  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return ;^141^142^^^^120^143^[REPLACE] throw ctxt.wrongTokenException ( jp, JsonToken.FIELD_NAME, "missing property '"+_typePropertyName+"' that is to contain type id   ( for class "+baseTypeName (  ) +" ) " ) ;^[METHOD] _deserializeTypedUsingDefaultImpl [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object result  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^throw ctxt.wrongTokenException ( jp, JsonToken.FIELD_NAME, "missing property '"_typePropertyName"' that is to contain type id   ( for class "baseTypeName (  ) " ) " ) ;^141^142^^^^120^143^[REPLACE] throw ctxt.wrongTokenException ( jp, JsonToken.FIELD_NAME, "missing property '"+_typePropertyName+"' that is to contain type id   ( for class "+baseTypeName (  ) +" ) " ) ;^[METHOD] _deserializeTypedUsingDefaultImpl [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object result  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[ADD]^^141^142^^^^120^143^[ADD] throw ctxt.wrongTokenException ( jp, JsonToken.FIELD_NAME, "missing property '"+_typePropertyName+"' that is to contain type id   ( for class "+baseTypeName (  ) +" ) " ) ;^[METHOD] _deserializeTypedUsingDefaultImpl [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object result  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^_deserializeTypedForId ( jp, ctxt, tb )  ;^142^^^^^120^143^[REPLACE] "missing property '"+_typePropertyName+"' that is to contain type id   ( for class "+baseTypeName (  ) +" ) " ) ;^[METHOD] _deserializeTypedUsingDefaultImpl [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TokenBuffer tb [CLASS] AsPropertyTypeDeserializer   [TYPE]  boolean false  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object result  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
