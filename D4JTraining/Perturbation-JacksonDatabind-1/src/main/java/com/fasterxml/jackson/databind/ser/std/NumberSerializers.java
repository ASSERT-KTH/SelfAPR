[REPLACE]^final static ShortSerializer instance ;^52^^^^^^^[REPLACE] final static ShortSerializer instance = new ShortSerializer (  ) ;^ [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer  
[REPLACE]^final static IntLikeSerializer instance ;^126^^^^^^^[REPLACE] final static IntLikeSerializer instance = new IntLikeSerializer (  ) ;^ [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer  
[REPLACE]^final static LongSerializer instance  = null ;^158^^^^^^^[REPLACE] final static LongSerializer instance = new LongSerializer (  ) ;^ [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer  
[REPLACE]^final  FloatSerializer instance = new FloatSerializer (  ) ;^190^^^^^^^[REPLACE] final static FloatSerializer instance = new FloatSerializer (  ) ;^ [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer  
[REPLACE]^static DoubleSerializer instance = new DoubleSerializer (  ) ;^229^^^^^^^[REPLACE] final static DoubleSerializer instance = new DoubleSerializer (  ) ;^ [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer  
[REPLACE]^public final static NumberSerializer instance ;^265^^^^^^^[REPLACE] public final static NumberSerializer instance = new NumberSerializer (  ) ;^ [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer  
[REPLACE]^public FloatSerializer (  )  { super ( Float.class ) ; }^54^^^^^^^[REPLACE] public ShortSerializer (  )  { super ( Short.class ) ; }^[METHOD] <init> [TYPE] NumberSerializers$ShortSerializer() [PARAMETER] [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  ShortSerializer instance  [TYPE]  IntLikeSerializer instance 
[REPLACE]^public ShortSerializer (  )  { super ( Short.class ) ; }^91^^^^^^^[REPLACE] public IntegerSerializer (  )  { super ( Integer.class ) ; }^[METHOD] <init> [TYPE] NumberSerializers$IntegerSerializer() [PARAMETER] [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  ShortSerializer instance  [TYPE]  IntLikeSerializer instance 
[REPLACE]^public IntegerSerializer (  )  { super ( Integer.class ) ; }^128^^^^^^^[REPLACE] public IntLikeSerializer (  )  { super ( Number.class ) ; }^[METHOD] <init> [TYPE] NumberSerializers$IntLikeSerializer() [PARAMETER] [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  ShortSerializer instance  [TYPE]  IntLikeSerializer instance 
[ADD]^^128^129^130^^^^^[ADD] public IntLikeSerializer (  )  { super ( Number.class ) ; }  @Override^[METHOD] <init> [TYPE] NumberSerializers$IntLikeSerializer() [PARAMETER] [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  ShortSerializer instance  [TYPE]  IntLikeSerializer instance 
[REPLACE]^public FloatSerializer (  )  { super ( Float.class ) ; }^160^^^^^^^[REPLACE] public LongSerializer (  )  { super ( Long.class ) ; }^[METHOD] <init> [TYPE] NumberSerializers$LongSerializer() [PARAMETER] [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  ShortSerializer instance  [TYPE]  IntLikeSerializer instance 
[ADD]^^160^161^162^^^^^[ADD] public LongSerializer (  )  { super ( Long.class ) ; }  @Override^[METHOD] <init> [TYPE] NumberSerializers$LongSerializer() [PARAMETER] [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  ShortSerializer instance  [TYPE]  IntLikeSerializer instance 
[REPLACE]^public ShortSerializer (  )  { super ( Short.class ) ; }^192^^^^^^^[REPLACE] public FloatSerializer (  )  { super ( Float.class ) ; }^[METHOD] <init> [TYPE] NumberSerializers$FloatSerializer() [PARAMETER] [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  ShortSerializer instance  [TYPE]  IntLikeSerializer instance 
[REPLACE]^public IntegerSerializer (  )  { super ( Integer.class ) ; }^231^^^^^^^[REPLACE] public DoubleSerializer (  )  { super ( Double.class ) ; }^[METHOD] <init> [TYPE] NumberSerializers$DoubleSerializer() [PARAMETER] [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  ShortSerializer instance  [TYPE]  IntLikeSerializer instance 
[ADD]^^231^232^233^^^^^[ADD] public DoubleSerializer (  )  { super ( Double.class ) ; }  @Override^[METHOD] <init> [TYPE] NumberSerializers$DoubleSerializer() [PARAMETER] [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  ShortSerializer instance  [TYPE]  IntLikeSerializer instance 
[REPLACE]^public IntegerSerializer (  )  { super ( Integer.class ) ; }^267^^^^^^^[REPLACE] public NumberSerializer (  )  { super ( Number.class ) ; }^[METHOD] <init> [TYPE] NumberSerializers$NumberSerializer() [PARAMETER] [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  ShortSerializer instance  [TYPE]  IntLikeSerializer instance 
[REPLACE]^JsonIntegerFormatVisitor v2 = visitor.expectIntegerFormat ( typeHint ) ;^25^^^^^23^40^[REPLACE] final JsonSerializer<?> intS = new IntegerSerializer (  ) ;^[METHOD] addAll [TYPE] void [PARAMETER] JsonSerializer<?>> allDeserializers [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  ShortSerializer instance  [TYPE]  JsonSerializer intS  [TYPE]  Map allDeserializers  [TYPE]  IntLikeSerializer instance 
[REPLACE]^allDeserializers.put ( Integer.TYPE.getName (  ) , intS ) ;^26^^^^^23^40^[REPLACE] allDeserializers.put ( Integer.class.getName (  ) , intS ) ;^[METHOD] addAll [TYPE] void [PARAMETER] JsonSerializer<?>> allDeserializers [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  ShortSerializer instance  [TYPE]  JsonSerializer intS  [TYPE]  Map allDeserializers  [TYPE]  IntLikeSerializer instance 
[REPLACE]^allDeserializers.put ( Integer.class.getName (  ) , intS ) ;^27^^^^^23^40^[REPLACE] allDeserializers.put ( Integer.TYPE.getName (  ) , intS ) ;^[METHOD] addAll [TYPE] void [PARAMETER] JsonSerializer<?>> allDeserializers [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  ShortSerializer instance  [TYPE]  JsonSerializer intS  [TYPE]  Map allDeserializers  [TYPE]  IntLikeSerializer instance 
[REPLACE]^allDeserializers.put ( Double.class.getName (  ) , DoubleSerializer.instance ) ;^28^^^^^23^40^[REPLACE] allDeserializers.put ( Long.class.getName (  ) , LongSerializer.instance ) ;^[METHOD] addAll [TYPE] void [PARAMETER] JsonSerializer<?>> allDeserializers [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  ShortSerializer instance  [TYPE]  JsonSerializer intS  [TYPE]  Map allDeserializers  [TYPE]  IntLikeSerializer instance 
[REMOVE]^allDeserializers.put ( Integer.class.getName (  ) , intS ) ;^28^^^^^23^40^[REMOVE] ^[METHOD] addAll [TYPE] void [PARAMETER] JsonSerializer<?>> allDeserializers [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  ShortSerializer instance  [TYPE]  JsonSerializer intS  [TYPE]  Map allDeserializers  [TYPE]  IntLikeSerializer instance 
[REPLACE]^allDeserializers.put ( Double.TYPE.getName (  ) , DoubleSerializer.instance ) ;^29^^^^^23^40^[REPLACE] allDeserializers.put ( Long.TYPE.getName (  ) , LongSerializer.instance ) ;^[METHOD] addAll [TYPE] void [PARAMETER] JsonSerializer<?>> allDeserializers [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  ShortSerializer instance  [TYPE]  JsonSerializer intS  [TYPE]  Map allDeserializers  [TYPE]  IntLikeSerializer instance 
[REPLACE]^allDeserializers.put ( Double.class.getName (  ) , DoubleSerializer.instance ) ;^30^^^^^23^40^[REPLACE] allDeserializers.put ( Byte.class.getName (  ) , IntLikeSerializer.instance ) ;^[METHOD] addAll [TYPE] void [PARAMETER] JsonSerializer<?>> allDeserializers [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  ShortSerializer instance  [TYPE]  JsonSerializer intS  [TYPE]  Map allDeserializers  [TYPE]  IntLikeSerializer instance 
[REPLACE]^allDeserializers.put ( Double.TYPE.getName (  ) , DoubleSerializer.instance ) ;^31^^^^^23^40^[REPLACE] allDeserializers.put ( Byte.TYPE.getName (  ) , IntLikeSerializer.instance ) ;^[METHOD] addAll [TYPE] void [PARAMETER] JsonSerializer<?>> allDeserializers [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  ShortSerializer instance  [TYPE]  JsonSerializer intS  [TYPE]  Map allDeserializers  [TYPE]  IntLikeSerializer instance 
[ADD]^^31^^^^^23^40^[ADD] allDeserializers.put ( Byte.TYPE.getName (  ) , IntLikeSerializer.instance ) ;^[METHOD] addAll [TYPE] void [PARAMETER] JsonSerializer<?>> allDeserializers [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  ShortSerializer instance  [TYPE]  JsonSerializer intS  [TYPE]  Map allDeserializers  [TYPE]  IntLikeSerializer instance 
[REPLACE]^allDeserializers.put ( Long.class.getName (  ) , LongSerializer.instance ) ;^32^^^^^23^40^[REPLACE] allDeserializers.put ( Short.class.getName (  ) , ShortSerializer.instance ) ;^[METHOD] addAll [TYPE] void [PARAMETER] JsonSerializer<?>> allDeserializers [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  ShortSerializer instance  [TYPE]  JsonSerializer intS  [TYPE]  Map allDeserializers  [TYPE]  IntLikeSerializer instance 
[ADD]^^32^33^^^^23^40^[ADD] allDeserializers.put ( Short.class.getName (  ) , ShortSerializer.instance ) ; allDeserializers.put ( Short.TYPE.getName (  ) , ShortSerializer.instance ) ;^[METHOD] addAll [TYPE] void [PARAMETER] JsonSerializer<?>> allDeserializers [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  ShortSerializer instance  [TYPE]  JsonSerializer intS  [TYPE]  Map allDeserializers  [TYPE]  IntLikeSerializer instance 
[REPLACE]^allDeserializers.put ( Long.TYPE.getName (  ) , LongSerializer.instance ) ;^33^^^^^23^40^[REPLACE] allDeserializers.put ( Short.TYPE.getName (  ) , ShortSerializer.instance ) ;^[METHOD] addAll [TYPE] void [PARAMETER] JsonSerializer<?>> allDeserializers [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  ShortSerializer instance  [TYPE]  JsonSerializer intS  [TYPE]  Map allDeserializers  [TYPE]  IntLikeSerializer instance 
[REPLACE]^allDeserializers .put ( this , false )  ;^36^^^^^23^40^[REPLACE] allDeserializers.put ( Float.class.getName (  ) , FloatSerializer.instance ) ;^[METHOD] addAll [TYPE] void [PARAMETER] JsonSerializer<?>> allDeserializers [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  ShortSerializer instance  [TYPE]  JsonSerializer intS  [TYPE]  Map allDeserializers  [TYPE]  IntLikeSerializer instance 
[REPLACE]^allDeserializers.put ( Long.class.getName (  ) , LongSerializer.instance ) ;^36^^^^^23^40^[REPLACE] allDeserializers.put ( Float.class.getName (  ) , FloatSerializer.instance ) ;^[METHOD] addAll [TYPE] void [PARAMETER] JsonSerializer<?>> allDeserializers [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  ShortSerializer instance  [TYPE]  JsonSerializer intS  [TYPE]  Map allDeserializers  [TYPE]  IntLikeSerializer instance 
[REPLACE]^allDeserializers .put ( null , true )  ;^37^^^^^23^40^[REPLACE] allDeserializers.put ( Float.TYPE.getName (  ) , FloatSerializer.instance ) ;^[METHOD] addAll [TYPE] void [PARAMETER] JsonSerializer<?>> allDeserializers [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  ShortSerializer instance  [TYPE]  JsonSerializer intS  [TYPE]  Map allDeserializers  [TYPE]  IntLikeSerializer instance 
[REPLACE]^allDeserializers.put ( Byte.TYPE.getName (  ) , IntLikeSerializer.instance ) ;^37^^^^^23^40^[REPLACE] allDeserializers.put ( Float.TYPE.getName (  ) , FloatSerializer.instance ) ;^[METHOD] addAll [TYPE] void [PARAMETER] JsonSerializer<?>> allDeserializers [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  ShortSerializer instance  [TYPE]  JsonSerializer intS  [TYPE]  Map allDeserializers  [TYPE]  IntLikeSerializer instance 
[REPLACE]^allDeserializers.put ( Double.TYPE.getName (  ) , DoubleSerializer.instance ) ;^38^^^^^23^40^[REPLACE] allDeserializers.put ( Double.class.getName (  ) , DoubleSerializer.instance ) ;^[METHOD] addAll [TYPE] void [PARAMETER] JsonSerializer<?>> allDeserializers [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  ShortSerializer instance  [TYPE]  JsonSerializer intS  [TYPE]  Map allDeserializers  [TYPE]  IntLikeSerializer instance 
[ADD]^^38^^^^^23^40^[ADD] allDeserializers.put ( Double.class.getName (  ) , DoubleSerializer.instance ) ;^[METHOD] addAll [TYPE] void [PARAMETER] JsonSerializer<?>> allDeserializers [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  ShortSerializer instance  [TYPE]  JsonSerializer intS  [TYPE]  Map allDeserializers  [TYPE]  IntLikeSerializer instance 
[REPLACE]^allDeserializers.put ( Double.class.getName (  ) , DoubleSerializer.instance ) ;^39^^^^^23^40^[REPLACE] allDeserializers.put ( Double.TYPE.getName (  ) , DoubleSerializer.instance ) ;^[METHOD] addAll [TYPE] void [PARAMETER] JsonSerializer<?>> allDeserializers [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  ShortSerializer instance  [TYPE]  JsonSerializer intS  [TYPE]  Map allDeserializers  [TYPE]  IntLikeSerializer instance 
[REPLACE]^jgen.writeNumber ( value.longValue (  )  ) ;^60^^^^^57^61^[REPLACE] jgen.writeNumber ( value.shortValue (  )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Short value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  ShortSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  SerializerProvider provider  [TYPE]  Short value  [TYPE]  IntLikeSerializer instance 
[ADD]^^60^^^^^57^61^[ADD] jgen.writeNumber ( value.shortValue (  )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Short value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  ShortSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  SerializerProvider provider  [TYPE]  Short value  [TYPE]  IntLikeSerializer instance 
[REPLACE]^return createSchemaNode ( "integer", true ) ;^66^^^^^64^67^[REPLACE] return createSchemaNode ( "number", true ) ;^[METHOD] getSchema [TYPE] JsonNode [PARAMETER] SerializerProvider provider Type typeHint [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  Type typeHint  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  ShortSerializer instance  [TYPE]  SerializerProvider provider  [TYPE]  IntLikeSerializer instance 
[REPLACE]^JsonIntegerFormatVisitor v2 = visitor .expectNumberFormat ( typeHint )  ;^73^^^^^70^77^[REPLACE] JsonIntegerFormatVisitor v2 = visitor.expectIntegerFormat ( typeHint ) ;^[METHOD] acceptJsonFormatVisitor [TYPE] void [PARAMETER] JsonFormatVisitorWrapper visitor JavaType typeHint [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  JavaType typeHint  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  JsonFormatVisitorWrapper visitor  [TYPE]  JsonIntegerFormatVisitor v2  [TYPE]  ShortSerializer instance  [TYPE]  IntLikeSerializer instance 
[REPLACE]^if  ( v2 == null )  {^74^^^^^70^77^[REPLACE] if  ( v2 != null )  {^[METHOD] acceptJsonFormatVisitor [TYPE] void [PARAMETER] JsonFormatVisitorWrapper visitor JavaType typeHint [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  JavaType typeHint  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  JsonFormatVisitorWrapper visitor  [TYPE]  JsonIntegerFormatVisitor v2  [TYPE]  ShortSerializer instance  [TYPE]  IntLikeSerializer instance 
[REPLACE]^v2.numberType ( JsonParser.NumberType.FLOAT ) ;^75^^^^^70^77^[REPLACE] v2.numberType ( JsonParser.NumberType.INT ) ;^[METHOD] acceptJsonFormatVisitor [TYPE] void [PARAMETER] JsonFormatVisitorWrapper visitor JavaType typeHint [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  JavaType typeHint  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  JsonFormatVisitorWrapper visitor  [TYPE]  JsonIntegerFormatVisitor v2  [TYPE]  ShortSerializer instance  [TYPE]  IntLikeSerializer instance 
[REPLACE]^jgen.writeNumber ( value.shortValue (  )  ) ;^97^^^^^94^98^[REPLACE] jgen.writeNumber ( value.intValue (  )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Integer value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  Integer value  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  ShortSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  SerializerProvider provider  [TYPE]  IntLikeSerializer instance 
[ADD]^^97^^^^^94^98^[ADD] jgen.writeNumber ( value.intValue (  )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Integer value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  Integer value  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  ShortSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  SerializerProvider provider  [TYPE]  IntLikeSerializer instance 
[REPLACE]^return createSchemaNode ( "number", true ) ;^103^^^^^101^104^[REPLACE] return createSchemaNode ( "integer", true ) ;^[METHOD] getSchema [TYPE] JsonNode [PARAMETER] SerializerProvider provider Type typeHint [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  Type typeHint  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  ShortSerializer instance  [TYPE]  SerializerProvider provider  [TYPE]  IntLikeSerializer instance 
[REPLACE]^JsonIntegerFormatVisitor v2 = visitor .expectNumberFormat ( typeHint )  ;^110^^^^^107^114^[REPLACE] JsonIntegerFormatVisitor v2 = visitor.expectIntegerFormat ( typeHint ) ;^[METHOD] acceptJsonFormatVisitor [TYPE] void [PARAMETER] JsonFormatVisitorWrapper visitor JavaType typeHint [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  JavaType typeHint  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  JsonFormatVisitorWrapper visitor  [TYPE]  JsonIntegerFormatVisitor v2  [TYPE]  ShortSerializer instance  [TYPE]  IntLikeSerializer instance 
[REPLACE]^if  ( v2 == true )  {^111^^^^^107^114^[REPLACE] if  ( v2 != null )  {^[METHOD] acceptJsonFormatVisitor [TYPE] void [PARAMETER] JsonFormatVisitorWrapper visitor JavaType typeHint [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  JavaType typeHint  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  JsonFormatVisitorWrapper visitor  [TYPE]  JsonIntegerFormatVisitor v2  [TYPE]  ShortSerializer instance  [TYPE]  IntLikeSerializer instance 
[REPLACE]^v2.numberType ( JsonParser.NumberType.FLOAT ) ;^112^^^^^107^114^[REPLACE] v2.numberType ( JsonParser.NumberType.INT ) ;^[METHOD] acceptJsonFormatVisitor [TYPE] void [PARAMETER] JsonFormatVisitorWrapper visitor JavaType typeHint [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  JavaType typeHint  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  JsonFormatVisitorWrapper visitor  [TYPE]  JsonIntegerFormatVisitor v2  [TYPE]  ShortSerializer instance  [TYPE]  IntLikeSerializer instance 
[REPLACE]^jgen.writeNumber ( value.longValue (  )  ) ;^134^^^^^131^135^[REPLACE] jgen.writeNumber ( value.intValue (  )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  ShortSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  SerializerProvider provider  [TYPE]  IntLikeSerializer instance 
[REMOVE]^allDeserializers.put ( Integer.class.getName (  ) , intS ) ;^134^^^^^131^135^[REMOVE] ^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  ShortSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  SerializerProvider provider  [TYPE]  IntLikeSerializer instance 
[REPLACE]^jgen.writeNumber ( value.shortValue (  )  ) ;^134^^^^^131^135^[REPLACE] jgen.writeNumber ( value.intValue (  )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  ShortSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  SerializerProvider provider  [TYPE]  IntLikeSerializer instance 
[REPLACE]^return createSchemaNode ( "number", true ) ;^140^^^^^138^141^[REPLACE] return createSchemaNode ( "integer", true ) ;^[METHOD] getSchema [TYPE] JsonNode [PARAMETER] SerializerProvider provider Type typeHint [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  Type typeHint  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  ShortSerializer instance  [TYPE]  SerializerProvider provider  [TYPE]  IntLikeSerializer instance 
[REPLACE]^JsonIntegerFormatVisitor v2 = visitor.expectNumberFormat ( typeHint ) ;^147^^^^^144^151^[REPLACE] JsonIntegerFormatVisitor v2 = visitor.expectIntegerFormat ( typeHint ) ;^[METHOD] acceptJsonFormatVisitor [TYPE] void [PARAMETER] JsonFormatVisitorWrapper visitor JavaType typeHint [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  JavaType typeHint  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  JsonFormatVisitorWrapper visitor  [TYPE]  JsonIntegerFormatVisitor v2  [TYPE]  ShortSerializer instance  [TYPE]  IntLikeSerializer instance 
[REPLACE]^if  ( v2 == null )  {^148^^^^^144^151^[REPLACE] if  ( v2 != null )  {^[METHOD] acceptJsonFormatVisitor [TYPE] void [PARAMETER] JsonFormatVisitorWrapper visitor JavaType typeHint [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  JavaType typeHint  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  JsonFormatVisitorWrapper visitor  [TYPE]  JsonIntegerFormatVisitor v2  [TYPE]  ShortSerializer instance  [TYPE]  IntLikeSerializer instance 
[REPLACE]^v2.numberType ( JsonParser.NumberType.FLOAT ) ;^149^^^^^144^151^[REPLACE] v2.numberType ( JsonParser.NumberType.INT ) ;^[METHOD] acceptJsonFormatVisitor [TYPE] void [PARAMETER] JsonFormatVisitorWrapper visitor JavaType typeHint [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  JavaType typeHint  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  JsonFormatVisitorWrapper visitor  [TYPE]  JsonIntegerFormatVisitor v2  [TYPE]  ShortSerializer instance  [TYPE]  IntLikeSerializer instance 
[REPLACE]^jgen.writeNumber ( value.shortValue (  )  ) ;^166^^^^^163^167^[REPLACE] jgen.writeNumber ( value.longValue (  )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Long value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  Long value  [TYPE]  ShortSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  SerializerProvider provider  [TYPE]  IntLikeSerializer instance 
[ADD]^^166^^^^^163^167^[ADD] jgen.writeNumber ( value.longValue (  )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Long value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  Long value  [TYPE]  ShortSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  SerializerProvider provider  [TYPE]  IntLikeSerializer instance 
[REPLACE]^return createSchemaNode ( "integer", true ) ;^172^^^^^170^173^[REPLACE] return createSchemaNode ( "number", true ) ;^[METHOD] getSchema [TYPE] JsonNode [PARAMETER] SerializerProvider provider Type typeHint [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  Type typeHint  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  ShortSerializer instance  [TYPE]  SerializerProvider provider  [TYPE]  IntLikeSerializer instance 
[REPLACE]^JsonIntegerFormatVisitor v2 = visitor.expectNumberFormat ( typeHint ) ;^179^^^^^176^183^[REPLACE] JsonIntegerFormatVisitor v2 = visitor.expectIntegerFormat ( typeHint ) ;^[METHOD] acceptJsonFormatVisitor [TYPE] void [PARAMETER] JsonFormatVisitorWrapper visitor JavaType typeHint [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  JavaType typeHint  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  JsonFormatVisitorWrapper visitor  [TYPE]  JsonIntegerFormatVisitor v2  [TYPE]  ShortSerializer instance  [TYPE]  IntLikeSerializer instance 
[ADD]^^179^^^^^176^183^[ADD] JsonIntegerFormatVisitor v2 = visitor.expectIntegerFormat ( typeHint ) ;^[METHOD] acceptJsonFormatVisitor [TYPE] void [PARAMETER] JsonFormatVisitorWrapper visitor JavaType typeHint [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  JavaType typeHint  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  JsonFormatVisitorWrapper visitor  [TYPE]  JsonIntegerFormatVisitor v2  [TYPE]  ShortSerializer instance  [TYPE]  IntLikeSerializer instance 
[REPLACE]^if  ( v2 == null )  {^180^^^^^176^183^[REPLACE] if  ( v2 != null )  {^[METHOD] acceptJsonFormatVisitor [TYPE] void [PARAMETER] JsonFormatVisitorWrapper visitor JavaType typeHint [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  JavaType typeHint  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  JsonFormatVisitorWrapper visitor  [TYPE]  JsonIntegerFormatVisitor v2  [TYPE]  ShortSerializer instance  [TYPE]  IntLikeSerializer instance 
[REPLACE]^v2.numberType ( JsonParser.NumberType.FLOAT ) ;^181^^^^^176^183^[REPLACE] v2.numberType ( JsonParser.NumberType.LONG ) ;^[METHOD] acceptJsonFormatVisitor [TYPE] void [PARAMETER] JsonFormatVisitorWrapper visitor JavaType typeHint [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  JavaType typeHint  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  JsonFormatVisitorWrapper visitor  [TYPE]  JsonIntegerFormatVisitor v2  [TYPE]  ShortSerializer instance  [TYPE]  IntLikeSerializer instance 
[REPLACE]^jgen.writeNumber ( value.shortValue (  )  ) ;^198^^^^^195^199^[REPLACE] jgen.writeNumber ( value.floatValue (  )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Float value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  Float value  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  ShortSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  SerializerProvider provider  [TYPE]  IntLikeSerializer instance 
[REPLACE]^return createSchemaNode ( "integer", true ) ;^204^^^^^202^205^[REPLACE] return createSchemaNode ( "number", true ) ;^[METHOD] getSchema [TYPE] JsonNode [PARAMETER] SerializerProvider provider Type typeHint [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  Type typeHint  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  ShortSerializer instance  [TYPE]  SerializerProvider provider  [TYPE]  IntLikeSerializer instance 
[REPLACE]^JsonNumberFormatVisitor v2 = visitor .expectIntegerFormat ( typeHint )  ;^211^^^^^208^215^[REPLACE] JsonNumberFormatVisitor v2 = visitor.expectNumberFormat ( typeHint ) ;^[METHOD] acceptJsonFormatVisitor [TYPE] void [PARAMETER] JsonFormatVisitorWrapper visitor JavaType typeHint [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  JavaType typeHint  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  JsonNumberFormatVisitor v2  [TYPE]  JsonFormatVisitorWrapper visitor  [TYPE]  ShortSerializer instance  [TYPE]  IntLikeSerializer instance 
[REPLACE]^if  ( v2 == null )  {^212^^^^^208^215^[REPLACE] if  ( v2 != null )  {^[METHOD] acceptJsonFormatVisitor [TYPE] void [PARAMETER] JsonFormatVisitorWrapper visitor JavaType typeHint [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  JavaType typeHint  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  JsonNumberFormatVisitor v2  [TYPE]  JsonFormatVisitorWrapper visitor  [TYPE]  ShortSerializer instance  [TYPE]  IntLikeSerializer instance 
[ADD]^^212^213^214^^^208^215^[ADD] if  ( v2 != null )  { v2.numberType ( JsonParser.NumberType.FLOAT ) ; }^[METHOD] acceptJsonFormatVisitor [TYPE] void [PARAMETER] JsonFormatVisitorWrapper visitor JavaType typeHint [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  JavaType typeHint  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  JsonNumberFormatVisitor v2  [TYPE]  JsonFormatVisitorWrapper visitor  [TYPE]  ShortSerializer instance  [TYPE]  IntLikeSerializer instance 
[REPLACE]^v2.numberType ( JsonParser.NumberType.INT ) ;^213^^^^^208^215^[REPLACE] v2.numberType ( JsonParser.NumberType.FLOAT ) ;^[METHOD] acceptJsonFormatVisitor [TYPE] void [PARAMETER] JsonFormatVisitorWrapper visitor JavaType typeHint [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  JavaType typeHint  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  JsonNumberFormatVisitor v2  [TYPE]  JsonFormatVisitorWrapper visitor  [TYPE]  ShortSerializer instance  [TYPE]  IntLikeSerializer instance 
[REPLACE]^jgen.writeNumber ( value.shortValue (  )  ) ;^237^^^^^234^238^[REPLACE] jgen.writeNumber ( value.doubleValue (  )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Double value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  ShortSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  SerializerProvider provider  [TYPE]  Double value  [TYPE]  IntLikeSerializer instance 
[REPLACE]^return createSchemaNode ( "integer", true ) ;^243^^^^^241^244^[REPLACE] return createSchemaNode ( "number", true ) ;^[METHOD] getSchema [TYPE] JsonNode [PARAMETER] SerializerProvider provider Type typeHint [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  Type typeHint  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  ShortSerializer instance  [TYPE]  SerializerProvider provider  [TYPE]  IntLikeSerializer instance 
[REPLACE]^JsonNumberFormatVisitor v2 = visitor .expectIntegerFormat ( typeHint )  ;^250^^^^^247^254^[REPLACE] JsonNumberFormatVisitor v2 = visitor.expectNumberFormat ( typeHint ) ;^[METHOD] acceptJsonFormatVisitor [TYPE] void [PARAMETER] JsonFormatVisitorWrapper visitor JavaType typeHint [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  JavaType typeHint  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  JsonNumberFormatVisitor v2  [TYPE]  JsonFormatVisitorWrapper visitor  [TYPE]  ShortSerializer instance  [TYPE]  IntLikeSerializer instance 
[REPLACE]^if  ( v2 == null )  {^251^^^^^247^254^[REPLACE] if  ( v2 != null )  {^[METHOD] acceptJsonFormatVisitor [TYPE] void [PARAMETER] JsonFormatVisitorWrapper visitor JavaType typeHint [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  JavaType typeHint  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  JsonNumberFormatVisitor v2  [TYPE]  JsonFormatVisitorWrapper visitor  [TYPE]  ShortSerializer instance  [TYPE]  IntLikeSerializer instance 
[REPLACE]^v2.numberType ( JsonParser.NumberType.FLOAT ) ;^252^^^^^247^254^[REPLACE] v2.numberType ( JsonParser.NumberType.DOUBLE ) ;^[METHOD] acceptJsonFormatVisitor [TYPE] void [PARAMETER] JsonFormatVisitorWrapper visitor JavaType typeHint [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  JavaType typeHint  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  JsonNumberFormatVisitor v2  [TYPE]  JsonFormatVisitorWrapper visitor  [TYPE]  ShortSerializer instance  [TYPE]  IntLikeSerializer instance 
[REPLACE]^if  ( ! value instanceof BigDecimal )  {^274^^^^^272^300^[REPLACE] if  ( value instanceof BigDecimal )  {^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  ShortSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  SerializerProvider provider  [TYPE]  IntLikeSerializer instance 
[REPLACE]^}  if  ( ! value instanceof BigInteger )  {^280^^^^^272^300^[REPLACE] } else if  ( value instanceof BigInteger )  {^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  ShortSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  SerializerProvider provider  [TYPE]  IntLikeSerializer instance 
[ADD]^}^280^281^^^^272^300^[ADD] else if  ( value instanceof BigInteger )  { jgen.writeNumber (  ( BigInteger )  value ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  ShortSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  SerializerProvider provider  [TYPE]  IntLikeSerializer instance 
[REPLACE]^}  if  ( ! value instanceof Integer )  {^286^^^^^272^300^[REPLACE] } else if  ( value instanceof Integer )  {^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  ShortSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  SerializerProvider provider  [TYPE]  IntLikeSerializer instance 
[REPLACE]^} else if  ( ! value instanceof Long )  {^288^^^^^272^300^[REPLACE] } else if  ( value instanceof Long )  {^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  ShortSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  SerializerProvider provider  [TYPE]  IntLikeSerializer instance 
[ADD]^}   jgen.writeNumber ( value.longValue (  )  ) ;jgen.writeNumber ( value.doubleValue (  )  ) ;^288^289^290^291^^272^300^[ADD] else if  ( value instanceof Long )  { jgen.writeNumber ( value.longValue (  )  ) ; } else if  ( value instanceof Double )  { jgen.writeNumber ( value.doubleValue (  )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  ShortSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  SerializerProvider provider  [TYPE]  IntLikeSerializer instance 
[REPLACE]^}  else {^290^^^^^272^300^[REPLACE] } else if  ( value instanceof Double )  {^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  ShortSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  SerializerProvider provider  [TYPE]  IntLikeSerializer instance 
[REPLACE]^}  else {^292^^^^^272^300^[REPLACE] } else if  ( value instanceof Float )  {^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  ShortSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  SerializerProvider provider  [TYPE]  IntLikeSerializer instance 
[REPLACE]^} else if  ( !  ( value instanceof Byte )  ) {^294^^^^^272^300^[REPLACE] } else if  (  ( value instanceof Byte )  ||  ( value instanceof Short )  )  {^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  ShortSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  SerializerProvider provider  [TYPE]  IntLikeSerializer instance 
[REPLACE]^jgen.writeNumber (  ( BigDecimal )  value ) ;^298^^^^^294^299^[REPLACE] jgen.writeNumber ( value.toString (  )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  ShortSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  SerializerProvider provider  [TYPE]  IntLikeSerializer instance 
[REPLACE]^jgen.writeNumber ( value .Object (  )   ) ;^298^^^^^294^299^[REPLACE] jgen.writeNumber ( value.toString (  )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  ShortSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  SerializerProvider provider  [TYPE]  IntLikeSerializer instance 
[REPLACE]^jgen.writeNumber ( value.longValue (  )  ) ;^295^^^^^272^300^[REPLACE] jgen.writeNumber ( value.intValue (  )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  ShortSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  SerializerProvider provider  [TYPE]  IntLikeSerializer instance 
[REPLACE]^jgen.writeNumber ( value.longValue (  )  ) ;^293^^^^^272^300^[REPLACE] jgen.writeNumber ( value.floatValue (  )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  ShortSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  SerializerProvider provider  [TYPE]  IntLikeSerializer instance 
[ADD]^^293^^^^^272^300^[ADD] jgen.writeNumber ( value.floatValue (  )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  ShortSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  SerializerProvider provider  [TYPE]  IntLikeSerializer instance 
[REPLACE]^jgen.writeNumber ( value.shortValue (  )  ) ;^293^^^^^272^300^[REPLACE] jgen.writeNumber ( value.floatValue (  )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  ShortSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  SerializerProvider provider  [TYPE]  IntLikeSerializer instance 
[REPLACE]^}  else {^294^^^^^272^300^[REPLACE] } else if  (  ( value instanceof Byte )  ||  ( value instanceof Short )  )  {^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  ShortSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  SerializerProvider provider  [TYPE]  IntLikeSerializer instance 
[ADD]^^298^^^^^294^299^[ADD] jgen.writeNumber ( value.toString (  )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  ShortSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  SerializerProvider provider  [TYPE]  IntLikeSerializer instance 
[REPLACE]^jgen.writeNumber ( value.shortValue (  )  ) ;^295^^^^^272^300^[REPLACE] jgen.writeNumber ( value.intValue (  )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  ShortSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  SerializerProvider provider  [TYPE]  IntLikeSerializer instance 
[REPLACE]^jgen.writeNumber ( value.longValue (  )  ) ;^291^^^^^272^300^[REPLACE] jgen.writeNumber ( value.doubleValue (  )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  ShortSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  SerializerProvider provider  [TYPE]  IntLikeSerializer instance 
[REPLACE]^jgen.writeNumber ( value.shortValue (  )  ) ;^291^^^^^272^300^[REPLACE] jgen.writeNumber ( value.doubleValue (  )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  ShortSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  SerializerProvider provider  [TYPE]  IntLikeSerializer instance 
[REPLACE]^} else if  ( ! value instanceof Float )  {^292^^^^^272^300^[REPLACE] } else if  ( value instanceof Float )  {^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  ShortSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  SerializerProvider provider  [TYPE]  IntLikeSerializer instance 
[REPLACE]^}  if  (   ( value instanceof Short )  )  {^294^^^^^272^300^[REPLACE] } else if  (  ( value instanceof Byte )  ||  ( value instanceof Short )  )  {^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  ShortSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  SerializerProvider provider  [TYPE]  IntLikeSerializer instance 
[ADD]^}   jgen.writeNumber ( value.toString (  )  ) ;^294^295^296^^298^272^300^[ADD] else if  (  ( value instanceof Byte )  ||  ( value instanceof Short )  )  { jgen.writeNumber ( value.intValue (  )  ) ; } else { jgen.writeNumber ( value.toString (  )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  ShortSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  SerializerProvider provider  [TYPE]  IntLikeSerializer instance 
[ADD]^^295^^^^^272^300^[ADD] jgen.writeNumber ( value.intValue (  )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  ShortSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  SerializerProvider provider  [TYPE]  IntLikeSerializer instance 
[REMOVE]^allDeserializers.put ( Integer.class.getName (  ) , intS ) ;^293^^^^^272^300^[REMOVE] ^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  ShortSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  SerializerProvider provider  [TYPE]  IntLikeSerializer instance 
[REPLACE]^}  if  ( !  ( value instanceof Byte )  ||  ( value instanceof Short )  )  {^294^^^^^272^300^[REPLACE] } else if  (  ( value instanceof Byte )  ||  ( value instanceof Short )  )  {^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  ShortSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  SerializerProvider provider  [TYPE]  IntLikeSerializer instance 
[REMOVE]^allDeserializers.put ( Integer.class.getName (  ) , intS ) ;^298^^^^^294^299^[REMOVE] ^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  ShortSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  SerializerProvider provider  [TYPE]  IntLikeSerializer instance 
[REPLACE]^jgen.writeNumber ( value.floatValue (  )  ) ;^289^^^^^272^300^[REPLACE] jgen.writeNumber ( value.longValue (  )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  ShortSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  SerializerProvider provider  [TYPE]  IntLikeSerializer instance 
[ADD]^^289^^^^^272^300^[ADD] jgen.writeNumber ( value.longValue (  )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  ShortSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  SerializerProvider provider  [TYPE]  IntLikeSerializer instance 
[REPLACE]^}  if  ( ! value instanceof Double )  {^290^^^^^272^300^[REPLACE] } else if  ( value instanceof Double )  {^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  ShortSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  SerializerProvider provider  [TYPE]  IntLikeSerializer instance 
[ADD]^}   jgen.writeNumber ( value.intValue (  )  ) ;jgen.writeNumber ( value.toString (  )  ) ;^294^295^296^^298^272^300^[ADD] else if  (  ( value instanceof Byte )  ||  ( value instanceof Short )  )  { jgen.writeNumber ( value.intValue (  )  ) ; } else { jgen.writeNumber ( value.toString (  )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  ShortSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  SerializerProvider provider  [TYPE]  IntLikeSerializer instance 
[REPLACE]^jgen.writeNumber ( value.longValue (  )  ) ;^287^^^^^272^300^[REPLACE] jgen.writeNumber ( value.intValue (  )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  ShortSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  SerializerProvider provider  [TYPE]  IntLikeSerializer instance 
[ADD]^^287^^^^^272^300^[ADD] jgen.writeNumber ( value.intValue (  )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  ShortSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  SerializerProvider provider  [TYPE]  IntLikeSerializer instance 
[REPLACE]^} else if  ( ! value instanceof Double )  {^290^^^^^272^300^[REPLACE] } else if  ( value instanceof Double )  {^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  ShortSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  SerializerProvider provider  [TYPE]  IntLikeSerializer instance 
[REPLACE]^}  if  ( ! value instanceof Float )  {^292^^^^^272^300^[REPLACE] } else if  ( value instanceof Float )  {^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  ShortSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  SerializerProvider provider  [TYPE]  IntLikeSerializer instance 
[ADD]^}   jgen.writeNumber ( value.intValue (  )  ) ;^292^293^294^295^^272^300^[ADD] else if  ( value instanceof Float )  { jgen.writeNumber ( value.floatValue (  )  ) ; } else if  (  ( value instanceof Byte )  ||  ( value instanceof Short )  )  { jgen.writeNumber ( value.intValue (  )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  ShortSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  SerializerProvider provider  [TYPE]  IntLikeSerializer instance 
[REPLACE]^}  if  ( !  ( value instanceof Byte )  ) {^294^^^^^272^300^[REPLACE] } else if  (  ( value instanceof Byte )  ||  ( value instanceof Short )  )  {^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  ShortSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  SerializerProvider provider  [TYPE]  IntLikeSerializer instance 
[REPLACE]^jgen.writeNumber ( value.shortValue (  )  ) ;^289^^^^^272^300^[REPLACE] jgen.writeNumber ( value.longValue (  )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  ShortSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  SerializerProvider provider  [TYPE]  IntLikeSerializer instance 
[ADD]^}   jgen.writeNumber ( value.floatValue (  )  ) ;^290^291^292^293^^272^300^[ADD] else if  ( value instanceof Double )  { jgen.writeNumber ( value.doubleValue (  )  ) ; } else if  ( value instanceof Float )  { jgen.writeNumber ( value.floatValue (  )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  ShortSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  SerializerProvider provider  [TYPE]  IntLikeSerializer instance 
[REPLACE]^} else if  ( !  ( value instanceof Byte )  ||  ( value instanceof Short )  )  {^294^^^^^272^300^[REPLACE] } else if  (  ( value instanceof Byte )  ||  ( value instanceof Short )  )  {^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  ShortSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  SerializerProvider provider  [TYPE]  IntLikeSerializer instance 
[REMOVE]^allDeserializers.put ( Integer.class.getName (  ) , intS ) ;^295^^^^^272^300^[REMOVE] ^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  ShortSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  SerializerProvider provider  [TYPE]  IntLikeSerializer instance 
[REPLACE]^jgen .writeNumber ( null )  ;^281^^^^^272^300^[REPLACE] jgen.writeNumber (  ( BigInteger )  value ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  ShortSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  SerializerProvider provider  [TYPE]  IntLikeSerializer instance 
[REPLACE]^}  if  ( ! value instanceof Long )  {^288^^^^^272^300^[REPLACE] } else if  ( value instanceof Long )  {^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  ShortSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  SerializerProvider provider  [TYPE]  IntLikeSerializer instance 
[ADD]^^291^^^^^272^300^[ADD] jgen.writeNumber ( value.doubleValue (  )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  ShortSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  SerializerProvider provider  [TYPE]  IntLikeSerializer instance 
[ADD]^}   jgen.writeNumber ( value.floatValue (  )  ) ;jgen.writeNumber ( value.intValue (  )  ) ;^292^293^294^295^^272^300^[ADD] else if  ( value instanceof Float )  { jgen.writeNumber ( value.floatValue (  )  ) ; } else if  (  ( value instanceof Byte )  ||  ( value instanceof Short )  )  { jgen.writeNumber ( value.intValue (  )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  ShortSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  SerializerProvider provider  [TYPE]  IntLikeSerializer instance 
[REPLACE]^jgen.writeNumber ( value.shortValue (  )  ) ;^287^^^^^272^300^[REPLACE] jgen.writeNumber ( value.intValue (  )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  ShortSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  SerializerProvider provider  [TYPE]  IntLikeSerializer instance 
[REMOVE]^if  ( value instanceof BigDecimal )  {     if  ( provider.isEnabled ( SerializationFeature.WRITE_BIGDECIMAL_AS_PLAIN )  )  {         jgen.writeNumber (  (  ( BigDecimal )   ( value )  ) .toPlainString (  )  ) ;     }else {         jgen.writeNumber (  (  ( BigDecimal )   ( value )  )  ) ;     } }else     if  ( value instanceof BigInteger )  {         jgen.writeNumber (  (  ( BigInteger )   ( value )  )  ) ;     }else         if  ( value instanceof Integer )  {             jgen.writeNumber ( value.intValue (  )  ) ;         }else             if  ( value instanceof Long )  {                 jgen.writeNumber ( value.longValue (  )  ) ;             }else                 if  ( value instanceof Double )  {                     jgen.writeNumber ( value.doubleValue (  )  ) ;                 }else                     if  ( value instanceof Float )  {                         jgen.writeNumber ( value.floatValue (  )  ) ;                     }else                         if  (  ( value instanceof Byte )  ||  ( value instanceof Short )  )  {                             jgen.writeNumber ( value.intValue (  )  ) ;                         }else {                             jgen.writeNumber ( value.toString (  )  ) ;                         }^288^^^^^272^300^[REMOVE] ^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  ShortSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  SerializerProvider provider  [TYPE]  IntLikeSerializer instance 
[ADD]^}   jgen.writeNumber ( value.doubleValue (  )  ) ;jgen.writeNumber ( value.floatValue (  )  ) ;^290^291^292^293^^272^300^[ADD] else if  ( value instanceof Double )  { jgen.writeNumber ( value.doubleValue (  )  ) ; } else if  ( value instanceof Float )  { jgen.writeNumber ( value.floatValue (  )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  ShortSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  SerializerProvider provider  [TYPE]  IntLikeSerializer instance 
[REPLACE]^if  ( value instanceof BigDecimal )  {^275^^^^^272^300^[REPLACE] if  ( provider.isEnabled ( SerializationFeature.WRITE_BIGDECIMAL_AS_PLAIN )  )  {^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  ShortSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  SerializerProvider provider  [TYPE]  IntLikeSerializer instance 
[REPLACE]^jgen.writeNumber ( value.shortValue (  )  ) ;^278^^^^^275^279^[REPLACE] jgen.writeNumber (  ( BigDecimal )  value ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  ShortSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  SerializerProvider provider  [TYPE]  IntLikeSerializer instance 
[REPLACE]^jgen .writeNumber ( false )  .toPlainString (  )  ) ;^276^^^^^272^300^[REPLACE] jgen.writeNumber (  (  ( BigDecimal )  value ) .toPlainString (  )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  ShortSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  SerializerProvider provider  [TYPE]  IntLikeSerializer instance 
[REMOVE]^if  ( provider.isEnabled ( SerializationFeature.WRITE_BIGDECIMAL_AS_PLAIN )  )  { jgen.writeNumber (  (  ( BigDecimal )  value ) .toPlainString (  )  ) ;^276^^^^^272^300^[REMOVE] ^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  ShortSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  SerializerProvider provider  [TYPE]  IntLikeSerializer instance 
[REPLACE]^if  ( provider.isEnabled ( SerializationFeature.WRITE_BIGDECIMAL_AS_PLAIN )  )  { jgen.writeNumber (  (  ( BigDecimal )  value ) .toPlainString (  )  ) ;^276^^^^^272^300^[REPLACE] jgen.writeNumber (  (  ( BigDecimal )  value ) .toPlainString (  )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  ShortSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  SerializerProvider provider  [TYPE]  IntLikeSerializer instance 
[ADD]^^278^^^^^275^279^[ADD] jgen.writeNumber (  ( BigDecimal )  value ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  ShortSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  SerializerProvider provider  [TYPE]  IntLikeSerializer instance 
[REPLACE]^jgen .writeNumber ( null )  .toPlainString (  )  ) ;^276^^^^^272^300^[REPLACE] jgen.writeNumber (  (  ( BigDecimal )  value ) .toPlainString (  )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  ShortSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  SerializerProvider provider  [TYPE]  IntLikeSerializer instance 
[REPLACE]^}  else {^280^^^^^272^300^[REPLACE] } else if  ( value instanceof BigInteger )  {^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  ShortSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  SerializerProvider provider  [TYPE]  IntLikeSerializer instance 
[REMOVE]^allDeserializers.put ( Integer.class.getName (  ) , intS ) ;^287^^^^^272^300^[REMOVE] ^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  ShortSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  SerializerProvider provider  [TYPE]  IntLikeSerializer instance 
[REMOVE]^if  ( provider.isEnabled ( SerializationFeature.WRITE_BIGDECIMAL_AS_PLAIN )  )  {     jgen.writeNumber (  (  ( BigDecimal )   ( value )  ) .toPlainString (  )  ) ; }else {     jgen.writeNumber (  (  ( BigDecimal )   ( value )  )  ) ; }^294^^^^^272^300^[REMOVE] ^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  ShortSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  SerializerProvider provider  [TYPE]  IntLikeSerializer instance 
[REPLACE]^} else if  (   ( value instanceof Short )  )  {^294^^^^^272^300^[REPLACE] } else if  (  ( value instanceof Byte )  ||  ( value instanceof Short )  )  {^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  ShortSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  SerializerProvider provider  [TYPE]  IntLikeSerializer instance 
[REPLACE]^jgen.writeNumber (  ( BigDecimal )  value ) ;^281^^^^^272^300^[REPLACE] jgen.writeNumber (  ( BigInteger )  value ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  ShortSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  SerializerProvider provider  [TYPE]  IntLikeSerializer instance 
[REPLACE]^}  else {^288^^^^^272^300^[REPLACE] } else if  ( value instanceof Long )  {^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  ShortSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  SerializerProvider provider  [TYPE]  IntLikeSerializer instance 
[REMOVE]^allDeserializers.put ( Integer.class.getName (  ) , intS ) ;^291^^^^^272^300^[REMOVE] ^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  ShortSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  SerializerProvider provider  [TYPE]  IntLikeSerializer instance 
[REPLACE]^return createSchemaNode ( "integer", true ) ;^305^^^^^303^306^[REPLACE] return createSchemaNode ( "number", true ) ;^[METHOD] getSchema [TYPE] JsonNode [PARAMETER] SerializerProvider provider Type typeHint [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  Type typeHint  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  ShortSerializer instance  [TYPE]  SerializerProvider provider  [TYPE]  IntLikeSerializer instance 
[REPLACE]^JsonNumberFormatVisitor v2 = visitor.expectIntegerFormat ( typeHint ) ;^314^^^^^309^318^[REPLACE] JsonNumberFormatVisitor v2 = visitor.expectNumberFormat ( typeHint ) ;^[METHOD] acceptJsonFormatVisitor [TYPE] void [PARAMETER] JsonFormatVisitorWrapper visitor JavaType typeHint [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  JavaType typeHint  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  JsonNumberFormatVisitor v2  [TYPE]  JsonFormatVisitorWrapper visitor  [TYPE]  ShortSerializer instance  [TYPE]  IntLikeSerializer instance 
[REPLACE]^if  ( v2 == null )  {^315^^^^^309^318^[REPLACE] if  ( v2 != null )  {^[METHOD] acceptJsonFormatVisitor [TYPE] void [PARAMETER] JsonFormatVisitorWrapper visitor JavaType typeHint [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  JavaType typeHint  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  JsonNumberFormatVisitor v2  [TYPE]  JsonFormatVisitorWrapper visitor  [TYPE]  ShortSerializer instance  [TYPE]  IntLikeSerializer instance 
[REPLACE]^v2.numberType ( JsonParser.NumberType.FLOAT ) ;^316^^^^^309^318^[REPLACE] v2.numberType ( JsonParser.NumberType.BIG_DECIMAL ) ;^[METHOD] acceptJsonFormatVisitor [TYPE] void [PARAMETER] JsonFormatVisitorWrapper visitor JavaType typeHint [CLASS] NumberSerializers ShortSerializer IntegerSerializer IntLikeSerializer LongSerializer FloatSerializer DoubleSerializer NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  JavaType typeHint  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  JsonNumberFormatVisitor v2  [TYPE]  JsonFormatVisitorWrapper visitor  [TYPE]  ShortSerializer instance  [TYPE]  IntLikeSerializer instance 
[REPLACE]^static ShortSerializer instance = new ShortSerializer (  ) ;^52^^^^^^^[REPLACE] final static ShortSerializer instance = new ShortSerializer (  ) ;^[METHOD] acceptJsonFormatVisitor [TYPE] void [PARAMETER] JsonFormatVisitorWrapper visitor JavaType typeHint [CLASS] ShortSerializer   [TYPE]  NumberSerializer instance  [TYPE]  DoubleSerializer instance  [TYPE]  JavaType typeHint  [TYPE]  LongSerializer instance  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  JsonNumberFormatVisitor v2  [TYPE]  JsonFormatVisitorWrapper visitor  [TYPE]  ShortSerializer instance  [TYPE]  IntLikeSerializer instance 
[REPLACE]^jgen.writeNumber ( value.shortValue (  )  ) ;^54^^^^^^^[REPLACE] public ShortSerializer (  )  { super ( Short.class ) ; }^[METHOD] <init> [TYPE] NumberSerializers$ShortSerializer() [PARAMETER] [CLASS] ShortSerializer   [TYPE]  ShortSerializer instance  [TYPE]  boolean false  true 
[REPLACE]^public ShortSerializer (  )  { super ( Short.class ) ; }^60^^^^^57^61^[REPLACE] jgen.writeNumber ( value.shortValue (  )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Short value JsonGenerator jgen SerializerProvider provider [CLASS] ShortSerializer   [TYPE]  ShortSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  SerializerProvider provider  [TYPE]  Short value 
[ADD]^^60^^^^^57^61^[ADD] jgen.writeNumber ( value.shortValue (  )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Short value JsonGenerator jgen SerializerProvider provider [CLASS] ShortSerializer   [TYPE]  ShortSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  SerializerProvider provider  [TYPE]  Short value 
[REPLACE]^if  ( v2 == null )  {^74^^^^^70^77^[REPLACE] if  ( v2 != null )  {^[METHOD] acceptJsonFormatVisitor [TYPE] void [PARAMETER] JsonFormatVisitorWrapper visitor JavaType typeHint [CLASS] ShortSerializer   [TYPE]  JsonIntegerFormatVisitor v2  [TYPE]  ShortSerializer instance  [TYPE]  JavaType typeHint  [TYPE]  boolean false  true  [TYPE]  JsonFormatVisitorWrapper visitor 
[REPLACE]^jgen.writeNumber ( value.shortValue (  )  ) ;^75^^^^^70^77^[REPLACE] v2.numberType ( JsonParser.NumberType.INT ) ;^[METHOD] acceptJsonFormatVisitor [TYPE] void [PARAMETER] JsonFormatVisitorWrapper visitor JavaType typeHint [CLASS] ShortSerializer   [TYPE]  JsonIntegerFormatVisitor v2  [TYPE]  ShortSerializer instance  [TYPE]  JavaType typeHint  [TYPE]  boolean false  true  [TYPE]  JsonFormatVisitorWrapper visitor 
[ADD]^^75^^^^^70^77^[ADD] v2.numberType ( JsonParser.NumberType.INT ) ;^[METHOD] acceptJsonFormatVisitor [TYPE] void [PARAMETER] JsonFormatVisitorWrapper visitor JavaType typeHint [CLASS] ShortSerializer   [TYPE]  JsonIntegerFormatVisitor v2  [TYPE]  ShortSerializer instance  [TYPE]  JavaType typeHint  [TYPE]  boolean false  true  [TYPE]  JsonFormatVisitorWrapper visitor 
[REPLACE]^JsonIntegerFormatVisitor v2 = visitor.expectIntegerFormat ( typeHint ) ;^91^^^^^^^[REPLACE] public IntegerSerializer (  )  { super ( Integer.class ) ; }^[METHOD] <init> [TYPE] NumberSerializers$IntegerSerializer() [PARAMETER] [CLASS] IntegerSerializer   [TYPE]  boolean false  true 
[ADD]^^91^92^93^^^^^[ADD] public IntegerSerializer (  )  { super ( Integer.class ) ; }  @Override^[METHOD] <init> [TYPE] NumberSerializers$IntegerSerializer() [PARAMETER] [CLASS] IntegerSerializer   [TYPE]  boolean false  true 
[REPLACE]^public IntegerSerializer (  )  { super ( Integer.class ) ; }^97^^^^^94^98^[REPLACE] jgen.writeNumber ( value.intValue (  )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Integer value JsonGenerator jgen SerializerProvider provider [CLASS] IntegerSerializer   [TYPE]  Integer value  [TYPE]  boolean false  true  [TYPE]  JsonGenerator jgen  [TYPE]  SerializerProvider provider 
[REPLACE]^if  ( v2 == null )  {^111^^^^^107^114^[REPLACE] if  ( v2 != null )  {^[METHOD] acceptJsonFormatVisitor [TYPE] void [PARAMETER] JsonFormatVisitorWrapper visitor JavaType typeHint [CLASS] IntegerSerializer   [TYPE]  JavaType typeHint  [TYPE]  boolean false  true  [TYPE]  JsonFormatVisitorWrapper visitor  [TYPE]  JsonIntegerFormatVisitor v2 
[REPLACE]^public IntegerSerializer (  )  { super ( Integer.class ) ; }^112^^^^^107^114^[REPLACE] v2.numberType ( JsonParser.NumberType.INT ) ;^[METHOD] acceptJsonFormatVisitor [TYPE] void [PARAMETER] JsonFormatVisitorWrapper visitor JavaType typeHint [CLASS] IntegerSerializer   [TYPE]  JavaType typeHint  [TYPE]  boolean false  true  [TYPE]  JsonFormatVisitorWrapper visitor  [TYPE]  JsonIntegerFormatVisitor v2 
[ADD]^^112^^^^^107^114^[ADD] v2.numberType ( JsonParser.NumberType.INT ) ;^[METHOD] acceptJsonFormatVisitor [TYPE] void [PARAMETER] JsonFormatVisitorWrapper visitor JavaType typeHint [CLASS] IntegerSerializer   [TYPE]  JavaType typeHint  [TYPE]  boolean false  true  [TYPE]  JsonFormatVisitorWrapper visitor  [TYPE]  JsonIntegerFormatVisitor v2 
[REPLACE]^static IntLikeSerializer instance = new IntLikeSerializer (  ) ;^126^^^^^^^[REPLACE] final static IntLikeSerializer instance = new IntLikeSerializer (  ) ;^[METHOD] acceptJsonFormatVisitor [TYPE] void [PARAMETER] JsonFormatVisitorWrapper visitor JavaType typeHint [CLASS] IntLikeSerializer   [TYPE]  JavaType typeHint  [TYPE]  boolean false  true  [TYPE]  JsonFormatVisitorWrapper visitor  [TYPE]  JsonIntegerFormatVisitor v2 
[REPLACE]^JsonIntegerFormatVisitor v2 = visitor.expectIntegerFormat ( typeHint ) ;^128^^^^^^^[REPLACE] public IntLikeSerializer (  )  { super ( Number.class ) ; }^[METHOD] <init> [TYPE] NumberSerializers$IntLikeSerializer() [PARAMETER] [CLASS] IntLikeSerializer   [TYPE]  IntLikeSerializer instance  [TYPE]  boolean false  true 
[ADD]^^128^129^130^^^^^[ADD] public IntLikeSerializer (  )  { super ( Number.class ) ; }  @Override^[METHOD] <init> [TYPE] NumberSerializers$IntLikeSerializer() [PARAMETER] [CLASS] IntLikeSerializer   [TYPE]  IntLikeSerializer instance  [TYPE]  boolean false  true 
[REPLACE]^public IntLikeSerializer (  )  { super ( Number.class ) ; }^134^^^^^131^135^[REPLACE] jgen.writeNumber ( value.intValue (  )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] IntLikeSerializer   [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  SerializerProvider provider  [TYPE]  IntLikeSerializer instance 
[REPLACE]^if  ( v2 == true )  {^148^^^^^144^151^[REPLACE] if  ( v2 != null )  {^[METHOD] acceptJsonFormatVisitor [TYPE] void [PARAMETER] JsonFormatVisitorWrapper visitor JavaType typeHint [CLASS] IntLikeSerializer   [TYPE]  JsonIntegerFormatVisitor v2  [TYPE]  JavaType typeHint  [TYPE]  boolean false  true  [TYPE]  JsonFormatVisitorWrapper visitor  [TYPE]  IntLikeSerializer instance 
[ADD]^^148^149^150^^^144^151^[ADD] if  ( v2 != null )  { v2.numberType ( JsonParser.NumberType.INT ) ; }^[METHOD] acceptJsonFormatVisitor [TYPE] void [PARAMETER] JsonFormatVisitorWrapper visitor JavaType typeHint [CLASS] IntLikeSerializer   [TYPE]  JsonIntegerFormatVisitor v2  [TYPE]  JavaType typeHint  [TYPE]  boolean false  true  [TYPE]  JsonFormatVisitorWrapper visitor  [TYPE]  IntLikeSerializer instance 
[REPLACE]^public IntLikeSerializer (  )  { super ( Number.class ) ; }^149^^^^^144^151^[REPLACE] v2.numberType ( JsonParser.NumberType.INT ) ;^[METHOD] acceptJsonFormatVisitor [TYPE] void [PARAMETER] JsonFormatVisitorWrapper visitor JavaType typeHint [CLASS] IntLikeSerializer   [TYPE]  JsonIntegerFormatVisitor v2  [TYPE]  JavaType typeHint  [TYPE]  boolean false  true  [TYPE]  JsonFormatVisitorWrapper visitor  [TYPE]  IntLikeSerializer instance 
[ADD]^^149^^^^^144^151^[ADD] v2.numberType ( JsonParser.NumberType.INT ) ;^[METHOD] acceptJsonFormatVisitor [TYPE] void [PARAMETER] JsonFormatVisitorWrapper visitor JavaType typeHint [CLASS] IntLikeSerializer   [TYPE]  JsonIntegerFormatVisitor v2  [TYPE]  JavaType typeHint  [TYPE]  boolean false  true  [TYPE]  JsonFormatVisitorWrapper visitor  [TYPE]  IntLikeSerializer instance 
[REPLACE]^static LongSerializer instance = new LongSerializer (  ) ;^158^^^^^^^[REPLACE] final static LongSerializer instance = new LongSerializer (  ) ;^[METHOD] acceptJsonFormatVisitor [TYPE] void [PARAMETER] JsonFormatVisitorWrapper visitor JavaType typeHint [CLASS] LongSerializer   [TYPE]  JsonIntegerFormatVisitor v2  [TYPE]  JavaType typeHint  [TYPE]  boolean false  true  [TYPE]  JsonFormatVisitorWrapper visitor  [TYPE]  IntLikeSerializer instance 
[REPLACE]^jgen.writeNumber ( value.longValue (  )  ) ;^160^^^^^^^[REPLACE] public LongSerializer (  )  { super ( Long.class ) ; }^[METHOD] <init> [TYPE] NumberSerializers$LongSerializer() [PARAMETER] [CLASS] LongSerializer   [TYPE]  LongSerializer instance  [TYPE]  boolean false  true 
[ADD]^^160^161^162^^^^^[ADD] public LongSerializer (  )  { super ( Long.class ) ; }  @Override^[METHOD] <init> [TYPE] NumberSerializers$LongSerializer() [PARAMETER] [CLASS] LongSerializer   [TYPE]  LongSerializer instance  [TYPE]  boolean false  true 
[REPLACE]^public LongSerializer (  )  { super ( Long.class ) ; }^166^^^^^163^167^[REPLACE] jgen.writeNumber ( value.longValue (  )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Long value JsonGenerator jgen SerializerProvider provider [CLASS] LongSerializer   [TYPE]  Long value  [TYPE]  JsonGenerator jgen  [TYPE]  LongSerializer instance  [TYPE]  boolean false  true  [TYPE]  SerializerProvider provider 
[REPLACE]^if  ( v2 == this )  {^180^^^^^176^183^[REPLACE] if  ( v2 != null )  {^[METHOD] acceptJsonFormatVisitor [TYPE] void [PARAMETER] JsonFormatVisitorWrapper visitor JavaType typeHint [CLASS] LongSerializer   [TYPE]  JsonIntegerFormatVisitor v2  [TYPE]  JavaType typeHint  [TYPE]  LongSerializer instance  [TYPE]  boolean false  true  [TYPE]  JsonFormatVisitorWrapper visitor 
[REPLACE]^public LongSerializer (  )  { super ( Long.class ) ; }^181^^^^^176^183^[REPLACE] v2.numberType ( JsonParser.NumberType.LONG ) ;^[METHOD] acceptJsonFormatVisitor [TYPE] void [PARAMETER] JsonFormatVisitorWrapper visitor JavaType typeHint [CLASS] LongSerializer   [TYPE]  JsonIntegerFormatVisitor v2  [TYPE]  JavaType typeHint  [TYPE]  LongSerializer instance  [TYPE]  boolean false  true  [TYPE]  JsonFormatVisitorWrapper visitor 
[REPLACE]^final static FloatSerializer instance  = null ;^190^^^^^^^[REPLACE] final static FloatSerializer instance = new FloatSerializer (  ) ;^[METHOD] acceptJsonFormatVisitor [TYPE] void [PARAMETER] JsonFormatVisitorWrapper visitor JavaType typeHint [CLASS] FloatSerializer   [TYPE]  JsonIntegerFormatVisitor v2  [TYPE]  JavaType typeHint  [TYPE]  LongSerializer instance  [TYPE]  boolean false  true  [TYPE]  JsonFormatVisitorWrapper visitor 
[REPLACE]^v2.numberType ( JsonParser.NumberType.FLOAT ) ;^192^^^^^^^[REPLACE] public FloatSerializer (  )  { super ( Float.class ) ; }^[METHOD] <init> [TYPE] NumberSerializers$FloatSerializer() [PARAMETER] [CLASS] FloatSerializer   [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true 
[REPLACE]^v2.numberType ( JsonParser.NumberType.FLOAT ) ;^198^^^^^195^199^[REPLACE] jgen.writeNumber ( value.floatValue (  )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Float value JsonGenerator jgen SerializerProvider provider [CLASS] FloatSerializer   [TYPE]  Float value  [TYPE]  JsonGenerator jgen  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  SerializerProvider provider 
[ADD]^^198^^^^^195^199^[ADD] jgen.writeNumber ( value.floatValue (  )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Float value JsonGenerator jgen SerializerProvider provider [CLASS] FloatSerializer   [TYPE]  Float value  [TYPE]  JsonGenerator jgen  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  SerializerProvider provider 
[REPLACE]^if  ( v2 == null )  {^212^^^^^208^215^[REPLACE] if  ( v2 != null )  {^[METHOD] acceptJsonFormatVisitor [TYPE] void [PARAMETER] JsonFormatVisitorWrapper visitor JavaType typeHint [CLASS] FloatSerializer   [TYPE]  JavaType typeHint  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  JsonNumberFormatVisitor v2  [TYPE]  JsonFormatVisitorWrapper visitor 
[REPLACE]^JsonNumberFormatVisitor v2 = visitor.expectNumberFormat ( typeHint ) ;^213^^^^^208^215^[REPLACE] v2.numberType ( JsonParser.NumberType.FLOAT ) ;^[METHOD] acceptJsonFormatVisitor [TYPE] void [PARAMETER] JsonFormatVisitorWrapper visitor JavaType typeHint [CLASS] FloatSerializer   [TYPE]  JavaType typeHint  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  JsonNumberFormatVisitor v2  [TYPE]  JsonFormatVisitorWrapper visitor 
[REPLACE]^final  DoubleSerializer instance = new DoubleSerializer (  ) ;^229^^^^^^^[REPLACE] final static DoubleSerializer instance = new DoubleSerializer (  ) ;^[METHOD] acceptJsonFormatVisitor [TYPE] void [PARAMETER] JsonFormatVisitorWrapper visitor JavaType typeHint [CLASS] DoubleSerializer   [TYPE]  JavaType typeHint  [TYPE]  FloatSerializer instance  [TYPE]  boolean false  true  [TYPE]  JsonNumberFormatVisitor v2  [TYPE]  JsonFormatVisitorWrapper visitor 
[REPLACE]^jgen.writeNumber ( value.doubleValue (  )  ) ;^231^^^^^^^[REPLACE] public DoubleSerializer (  )  { super ( Double.class ) ; }^[METHOD] <init> [TYPE] NumberSerializers$DoubleSerializer() [PARAMETER] [CLASS] DoubleSerializer   [TYPE]  DoubleSerializer instance  [TYPE]  boolean false  true 
[REPLACE]^public DoubleSerializer (  )  { super ( Double.class ) ; }^237^^^^^234^238^[REPLACE] jgen.writeNumber ( value.doubleValue (  )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Double value JsonGenerator jgen SerializerProvider provider [CLASS] DoubleSerializer   [TYPE]  JsonGenerator jgen  [TYPE]  DoubleSerializer instance  [TYPE]  boolean false  true  [TYPE]  SerializerProvider provider  [TYPE]  Double value 
[REPLACE]^if  ( v2 == null )  {^251^^^^^247^254^[REPLACE] if  ( v2 != null )  {^[METHOD] acceptJsonFormatVisitor [TYPE] void [PARAMETER] JsonFormatVisitorWrapper visitor JavaType typeHint [CLASS] DoubleSerializer   [TYPE]  DoubleSerializer instance  [TYPE]  JavaType typeHint  [TYPE]  boolean false  true  [TYPE]  JsonNumberFormatVisitor v2  [TYPE]  JsonFormatVisitorWrapper visitor 
[REPLACE]^jgen.writeNumber ( value.doubleValue (  )  ) ;^252^^^^^247^254^[REPLACE] v2.numberType ( JsonParser.NumberType.DOUBLE ) ;^[METHOD] acceptJsonFormatVisitor [TYPE] void [PARAMETER] JsonFormatVisitorWrapper visitor JavaType typeHint [CLASS] DoubleSerializer   [TYPE]  DoubleSerializer instance  [TYPE]  JavaType typeHint  [TYPE]  boolean false  true  [TYPE]  JsonNumberFormatVisitor v2  [TYPE]  JsonFormatVisitorWrapper visitor 
[REPLACE]^public final static NumberSerializer instance ;^265^^^^^^^[REPLACE] public final static NumberSerializer instance = new NumberSerializer (  ) ;^[METHOD] acceptJsonFormatVisitor [TYPE] void [PARAMETER] JsonFormatVisitorWrapper visitor JavaType typeHint [CLASS] NumberSerializer   [TYPE]  DoubleSerializer instance  [TYPE]  JavaType typeHint  [TYPE]  boolean false  true  [TYPE]  JsonNumberFormatVisitor v2  [TYPE]  JsonFormatVisitorWrapper visitor 
[REPLACE]^jgen.writeNumber ( value.doubleValue (  )  ) ;^267^^^^^^^[REPLACE] public NumberSerializer (  )  { super ( Number.class ) ; }^[METHOD] <init> [TYPE] NumberSerializers$NumberSerializer() [PARAMETER] [CLASS] NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  boolean false  true 
[ADD]^^267^268^269^^^^^[ADD] public NumberSerializer (  )  { super ( Number.class ) ; }  @Override^[METHOD] <init> [TYPE] NumberSerializers$NumberSerializer() [PARAMETER] [CLASS] NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  boolean false  true 
[REPLACE]^if  ( ! value instanceof BigDecimal )  {^274^^^^^272^300^[REPLACE] if  ( value instanceof BigDecimal )  {^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  SerializerProvider provider 
[REMOVE]^if  ( value instanceof BigInteger )  {     jgen.writeNumber (  (  ( BigInteger )   ( value )  )  ) ; }else     if  ( value instanceof Integer )  {         jgen.writeNumber ( value.intValue (  )  ) ;     }else         if  ( value instanceof Long )  {             jgen.writeNumber ( value.longValue (  )  ) ;         }else             if  ( value instanceof Double )  {                 jgen.writeNumber ( value.doubleValue (  )  ) ;             }else                 if  ( value instanceof Float )  {                     jgen.writeNumber ( value.floatValue (  )  ) ;                 }else                     if  (  ( value instanceof Byte )  ||  ( value instanceof Short )  )  {                         jgen.writeNumber ( value.intValue (  )  ) ;                     }else {                         jgen.writeNumber ( value.toString (  )  ) ;                     }^274^^^^^272^300^[REMOVE] ^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  SerializerProvider provider 
[REPLACE]^}  if  ( ! value instanceof BigInteger )  {^280^^^^^272^300^[REPLACE] } else if  ( value instanceof BigInteger )  {^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  SerializerProvider provider 
[ADD]^}^280^281^^^^272^300^[ADD] else if  ( value instanceof BigInteger )  { jgen.writeNumber (  ( BigInteger )  value ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  SerializerProvider provider 
[REPLACE]^}  if  ( ! value instanceof Integer )  {^286^^^^^272^300^[REPLACE] } else if  ( value instanceof Integer )  {^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  SerializerProvider provider 
[REMOVE]^if  ( value instanceof BigInteger )  {     jgen.writeNumber (  (  ( BigInteger )   ( value )  )  ) ; }else     if  ( value instanceof Integer )  {         jgen.writeNumber ( value.intValue (  )  ) ;     }else         if  ( value instanceof Long )  {             jgen.writeNumber ( value.longValue (  )  ) ;         }else             if  ( value instanceof Double )  {                 jgen.writeNumber ( value.doubleValue (  )  ) ;             }else                 if  ( value instanceof Float )  {                     jgen.writeNumber ( value.floatValue (  )  ) ;                 }else                     if  (  ( value instanceof Byte )  ||  ( value instanceof Short )  )  {                         jgen.writeNumber ( value.intValue (  )  ) ;                     }else {                         jgen.writeNumber ( value.toString (  )  ) ;                     }^286^^^^^272^300^[REMOVE] ^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  SerializerProvider provider 
[REPLACE]^}  else {^288^^^^^272^300^[REPLACE] } else if  ( value instanceof Long )  {^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  SerializerProvider provider 
[REPLACE]^}  else {^290^^^^^272^300^[REPLACE] } else if  ( value instanceof Double )  {^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  SerializerProvider provider 
[REPLACE]^}  else {^292^^^^^272^300^[REPLACE] } else if  ( value instanceof Float )  {^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  SerializerProvider provider 
[REPLACE]^}  else {^294^^^^^272^300^[REPLACE] } else if  (  ( value instanceof Byte )  ||  ( value instanceof Short )  )  {^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  SerializerProvider provider 
[ADD]^}   jgen.writeNumber ( value.intValue (  )  ) ;jgen.writeNumber ( value.toString (  )  ) ;^294^295^296^^298^272^300^[ADD] else if  (  ( value instanceof Byte )  ||  ( value instanceof Short )  )  { jgen.writeNumber ( value.intValue (  )  ) ; } else { jgen.writeNumber ( value.toString (  )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  SerializerProvider provider 
[REPLACE]^jgen.writeNumber ( value.doubleValue (  )  ) ;^298^^^^^294^299^[REPLACE] jgen.writeNumber ( value.toString (  )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  SerializerProvider provider 
[ADD]^^298^^^^^294^299^[ADD] jgen.writeNumber ( value.toString (  )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  SerializerProvider provider 
[REPLACE]^jgen.writeNumber ( value.longValue (  )  ) ;^295^^^^^272^300^[REPLACE] jgen.writeNumber ( value.intValue (  )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  SerializerProvider provider 
[REPLACE]^jgen.writeNumber ( value.doubleValue (  )  ) ;^293^^^^^272^300^[REPLACE] jgen.writeNumber ( value.floatValue (  )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  SerializerProvider provider 
[REPLACE]^jgen.writeNumber ( value .longValue (  )   ) ;^293^^^^^272^300^[REPLACE] jgen.writeNumber ( value.floatValue (  )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  SerializerProvider provider 
[REPLACE]^jgen.writeNumber ( value.doubleValue (  )  ) ;^295^^^^^272^300^[REPLACE] jgen.writeNumber ( value.intValue (  )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  SerializerProvider provider 
[REMOVE]^jgen.writeNumber ( value.doubleValue (  )  ) ;^295^^^^^272^300^[REMOVE] ^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  SerializerProvider provider 
[REPLACE]^jgen.writeNumber ( value.floatValue (  )  ) ;^291^^^^^272^300^[REPLACE] jgen.writeNumber ( value.doubleValue (  )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  SerializerProvider provider 
[ADD]^^291^^^^^272^300^[ADD] jgen.writeNumber ( value.doubleValue (  )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  SerializerProvider provider 
[REPLACE]^jgen.writeNumber ( value .longValue (  )   ) ;^291^^^^^272^300^[REPLACE] jgen.writeNumber ( value.doubleValue (  )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  SerializerProvider provider 
[REMOVE]^if  (  ( value instanceof Byte )  ||  ( value instanceof Short )  )  {     jgen.writeNumber ( value.intValue (  )  ) ; }else {     jgen.writeNumber ( value.toString (  )  ) ; }^292^^^^^272^300^[REMOVE] ^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  SerializerProvider provider 
[REPLACE]^jgen.writeNumber ( value.longValue (  )  ) ;^293^^^^^272^300^[REPLACE] jgen.writeNumber ( value.floatValue (  )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  SerializerProvider provider 
[REPLACE]^}  if  ( !  ( value instanceof Byte )  ||  ( value instanceof Short )  )  {^294^^^^^272^300^[REPLACE] } else if  (  ( value instanceof Byte )  ||  ( value instanceof Short )  )  {^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  SerializerProvider provider 
[REPLACE]^jgen.writeNumber ( value .longValue (  )   ) ;^295^^^^^272^300^[REPLACE] jgen.writeNumber ( value.intValue (  )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  SerializerProvider provider 
[REPLACE]^jgen.writeNumber ( value.doubleValue (  )  ) ;^289^^^^^272^300^[REPLACE] jgen.writeNumber ( value.longValue (  )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  SerializerProvider provider 
[REPLACE]^jgen.writeNumber ( value.floatValue (  )  ) ;^289^^^^^272^300^[REPLACE] jgen.writeNumber ( value.longValue (  )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  SerializerProvider provider 
[REPLACE]^}  if  ( ! value instanceof Double )  {^290^^^^^272^300^[REPLACE] } else if  ( value instanceof Double )  {^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  SerializerProvider provider 
[REPLACE]^}  if  (   ( value instanceof Short )  )  {^294^^^^^272^300^[REPLACE] } else if  (  ( value instanceof Byte )  ||  ( value instanceof Short )  )  {^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  SerializerProvider provider 
[ADD]^^295^^^^^272^300^[ADD] jgen.writeNumber ( value.intValue (  )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  SerializerProvider provider 
[REPLACE]^jgen.writeNumber ( value.longValue (  )  ) ;^291^^^^^272^300^[REPLACE] jgen.writeNumber ( value.doubleValue (  )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  SerializerProvider provider 
[ADD]^^293^^^^^272^300^[ADD] jgen.writeNumber ( value.floatValue (  )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  SerializerProvider provider 
[REPLACE]^jgen.writeNumber ( value .longValue (  )   ) ;^287^^^^^272^300^[REPLACE] jgen.writeNumber ( value.intValue (  )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  SerializerProvider provider 
[REPLACE]^jgen.writeNumber ( value.longValue (  )  ) ;^287^^^^^272^300^[REPLACE] jgen.writeNumber ( value.intValue (  )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  SerializerProvider provider 
[REPLACE]^}  if  ( ! value instanceof Long )  {^288^^^^^272^300^[REPLACE] } else if  ( value instanceof Long )  {^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  SerializerProvider provider 
[REMOVE]^if  ( value instanceof BigInteger )  {     jgen.writeNumber (  (  ( BigInteger )   ( value )  )  ) ; }else     if  ( value instanceof Integer )  {         jgen.writeNumber ( value.intValue (  )  ) ;     }else         if  ( value instanceof Long )  {             jgen.writeNumber ( value.longValue (  )  ) ;         }else             if  ( value instanceof Double )  {                 jgen.writeNumber ( value.doubleValue (  )  ) ;             }else                 if  ( value instanceof Float )  {                     jgen.writeNumber ( value.floatValue (  )  ) ;                 }else                     if  (  ( value instanceof Byte )  ||  ( value instanceof Short )  )  {                         jgen.writeNumber ( value.intValue (  )  ) ;                     }else {                         jgen.writeNumber ( value.toString (  )  ) ;                     }^288^^^^^272^300^[REMOVE] ^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  SerializerProvider provider 
[REMOVE]^if  ( value instanceof BigInteger )  {     jgen.writeNumber (  (  ( BigInteger )   ( value )  )  ) ; }else     if  ( value instanceof Integer )  {         jgen.writeNumber ( value.intValue (  )  ) ;     }else         if  ( value instanceof Long )  {             jgen.writeNumber ( value.longValue (  )  ) ;         }else             if  ( value instanceof Double )  {                 jgen.writeNumber ( value.doubleValue (  )  ) ;             }else                 if  ( value instanceof Float )  {                     jgen.writeNumber ( value.floatValue (  )  ) ;                 }else                     if  (  ( value instanceof Byte )  ||  ( value instanceof Short )  )  {                         jgen.writeNumber ( value.intValue (  )  ) ;                     }else {                         jgen.writeNumber ( value.toString (  )  ) ;                     }^290^^^^^272^300^[REMOVE] ^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  SerializerProvider provider 
[REPLACE]^}  if  ( ! value instanceof Float )  {^292^^^^^272^300^[REPLACE] } else if  ( value instanceof Float )  {^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  SerializerProvider provider 
[ADD]^}   jgen.writeNumber ( value.intValue (  )  ) ;^292^293^294^295^^272^300^[ADD] else if  ( value instanceof Float )  { jgen.writeNumber ( value.floatValue (  )  ) ; } else if  (  ( value instanceof Byte )  ||  ( value instanceof Short )  )  { jgen.writeNumber ( value.intValue (  )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  SerializerProvider provider 
[REPLACE]^} else if  (   ( value instanceof Short )  )  {^294^^^^^272^300^[REPLACE] } else if  (  ( value instanceof Byte )  ||  ( value instanceof Short )  )  {^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  SerializerProvider provider 
[ADD]^}   jgen.writeNumber ( value.floatValue (  )  ) ;jgen.writeNumber ( value.intValue (  )  ) ;^292^293^294^295^^272^300^[ADD] else if  ( value instanceof Float )  { jgen.writeNumber ( value.floatValue (  )  ) ; } else if  (  ( value instanceof Byte )  ||  ( value instanceof Short )  )  { jgen.writeNumber ( value.intValue (  )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  SerializerProvider provider 
[REPLACE]^}  if  ( !  ( value instanceof Byte )  ) {^294^^^^^272^300^[REPLACE] } else if  (  ( value instanceof Byte )  ||  ( value instanceof Short )  )  {^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  SerializerProvider provider 
[REMOVE]^if  ( value instanceof Double )  {     jgen.writeNumber ( value.doubleValue (  )  ) ; }else     if  ( value instanceof Float )  {         jgen.writeNumber ( value.floatValue (  )  ) ;     }else         if  (  ( value instanceof Byte )  ||  ( value instanceof Short )  )  {             jgen.writeNumber ( value.intValue (  )  ) ;         }else {             jgen.writeNumber ( value.toString (  )  ) ;         }^294^^^^^272^300^[REMOVE] ^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  SerializerProvider provider 
[ADD]^}   jgen.writeNumber ( value.doubleValue (  )  ) ;jgen.writeNumber ( value.floatValue (  )  ) ;^290^291^292^293^^272^300^[ADD] else if  ( value instanceof Double )  { jgen.writeNumber ( value.doubleValue (  )  ) ; } else if  ( value instanceof Float )  { jgen.writeNumber ( value.floatValue (  )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  SerializerProvider provider 
[REMOVE]^jgen.writeNumber ( value.doubleValue (  )  ) ;^298^^^^^294^299^[REMOVE] ^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  SerializerProvider provider 
[ADD]^}   jgen.writeNumber ( value.toString (  )  ) ;^294^295^296^^298^272^300^[ADD] else if  (  ( value instanceof Byte )  ||  ( value instanceof Short )  )  { jgen.writeNumber ( value.intValue (  )  ) ; } else { jgen.writeNumber ( value.toString (  )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  SerializerProvider provider 
[REMOVE]^jgen.writeNumber ( value.floatValue (  )  ) ;^291^^^^^272^300^[REMOVE] ^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  SerializerProvider provider 
[REPLACE]^jgen.writeNumber ( value.doubleValue (  )  ) ;^281^^^^^272^300^[REPLACE] jgen.writeNumber (  ( BigInteger )  value ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  SerializerProvider provider 
[REPLACE]^} else if  ( ! value instanceof Integer )  {^286^^^^^272^300^[REPLACE] } else if  ( value instanceof Integer )  {^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  SerializerProvider provider 
[REPLACE]^} else if  ( ! value instanceof Double )  {^290^^^^^272^300^[REPLACE] } else if  ( value instanceof Double )  {^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  SerializerProvider provider 
[REPLACE]^} else if  ( !  ( value instanceof Byte )  ) {^294^^^^^272^300^[REPLACE] } else if  (  ( value instanceof Byte )  ||  ( value instanceof Short )  )  {^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  SerializerProvider provider 
[REMOVE]^jgen.writeNumber ( value.doubleValue (  )  ) ;^293^^^^^272^300^[REMOVE] ^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  SerializerProvider provider 
[REPLACE]^jgen.writeNumber ( value.doubleValue (  )  ) ;^287^^^^^272^300^[REPLACE] jgen.writeNumber ( value.intValue (  )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  SerializerProvider provider 
[REMOVE]^jgen.writeNumber ( value.doubleValue (  )  ) ;^287^^^^^272^300^[REMOVE] ^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  SerializerProvider provider 
[ADD]^}   jgen.writeNumber ( value.doubleValue (  )  ) ;^288^289^290^291^^272^300^[ADD] else if  ( value instanceof Long )  { jgen.writeNumber ( value.longValue (  )  ) ; } else if  ( value instanceof Double )  { jgen.writeNumber ( value.doubleValue (  )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  SerializerProvider provider 
[REPLACE]^} else if  ( ! value instanceof Float )  {^292^^^^^272^300^[REPLACE] } else if  ( value instanceof Float )  {^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  SerializerProvider provider 
[ADD]^^289^^^^^272^300^[ADD] jgen.writeNumber ( value.longValue (  )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  SerializerProvider provider 
[REMOVE]^jgen.writeNumber ( value.doubleValue (  )  ) ;^289^^^^^272^300^[REMOVE] ^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  SerializerProvider provider 
[REPLACE]^}  if  ( !  ( value instanceof true )  ||  ( value instanceof Short )  )  {^294^^^^^272^300^[REPLACE] } else if  (  ( value instanceof Byte )  ||  ( value instanceof Short )  )  {^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  SerializerProvider provider 
[REPLACE]^} else if  ( !  ( value instanceof Byte )  ||  ( value instanceof Short )  )  {^294^^^^^272^300^[REPLACE] } else if  (  ( value instanceof Byte )  ||  ( value instanceof Short )  )  {^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  SerializerProvider provider 
[REPLACE]^if  ( value instanceof BigDecimal )  {^275^^^^^272^300^[REPLACE] if  ( provider.isEnabled ( SerializationFeature.WRITE_BIGDECIMAL_AS_PLAIN )  )  {^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  SerializerProvider provider 
[REPLACE]^jgen .writeNumber ( true )  ;^278^^^^^275^279^[REPLACE] jgen.writeNumber (  ( BigDecimal )  value ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  SerializerProvider provider 
[REPLACE]^jgen.writeNumber ( value.doubleValue (  )  ) ;^276^^^^^272^300^[REPLACE] jgen.writeNumber (  (  ( BigDecimal )  value ) .toPlainString (  )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  SerializerProvider provider 
[ADD]^^276^^^^^272^300^[ADD] jgen.writeNumber (  (  ( BigDecimal )  value ) .toPlainString (  )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  SerializerProvider provider 
[ADD]^^275^276^277^278^279^272^300^[ADD] if  ( provider.isEnabled ( SerializationFeature.WRITE_BIGDECIMAL_AS_PLAIN )  )  { jgen.writeNumber (  (  ( BigDecimal )  value ) .toPlainString (  )  ) ; } else { jgen.writeNumber (  ( BigDecimal )  value ) ; }^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  SerializerProvider provider 
[REPLACE]^jgen.writeNumber ( value.doubleValue (  )  ) ;^278^^^^^275^279^[REPLACE] jgen.writeNumber (  ( BigDecimal )  value ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  SerializerProvider provider 
[REPLACE]^jgen .writeNumber ( null )  .toPlainString (  )  ) ;^276^^^^^272^300^[REPLACE] jgen.writeNumber (  (  ( BigDecimal )  value ) .toPlainString (  )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  SerializerProvider provider 
[REPLACE]^}  else {^280^^^^^272^300^[REPLACE] } else if  ( value instanceof BigInteger )  {^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  SerializerProvider provider 
[REMOVE]^if  ( value instanceof Double )  {     jgen.writeNumber ( value.doubleValue (  )  ) ; }else     if  ( value instanceof Float )  {         jgen.writeNumber ( value.floatValue (  )  ) ;     }else         if  (  ( value instanceof Byte )  ||  ( value instanceof Short )  )  {             jgen.writeNumber ( value.intValue (  )  ) ;         }else {             jgen.writeNumber ( value.toString (  )  ) ;         }^280^^^^^272^300^[REMOVE] ^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  SerializerProvider provider 
[ADD]^}   jgen.writeNumber ( value.intValue (  )  ) ;jgen.writeNumber ( value.longValue (  )  ) ;^286^287^288^289^^272^300^[ADD] else if  ( value instanceof Integer )  { jgen.writeNumber ( value.intValue (  )  ) ; } else if  ( value instanceof Long )  { jgen.writeNumber ( value.longValue (  )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  SerializerProvider provider 
[REPLACE]^} else if  ( ! value instanceof Long )  {^288^^^^^272^300^[REPLACE] } else if  ( value instanceof Long )  {^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  SerializerProvider provider 
[ADD]^^287^^^^^272^300^[ADD] jgen.writeNumber ( value.intValue (  )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  SerializerProvider provider 
[REPLACE]^jgen.writeNumber ( value .floatValue (  )   ) ;^289^^^^^272^300^[REPLACE] jgen.writeNumber ( value.longValue (  )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  SerializerProvider provider 
[ADD]^^281^^^^^272^300^[ADD] jgen.writeNumber (  ( BigInteger )  value ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  SerializerProvider provider 
[REPLACE]^}  else {^286^^^^^272^300^[REPLACE] } else if  ( value instanceof Integer )  {^[METHOD] serialize [TYPE] void [PARAMETER] Number value JsonGenerator jgen SerializerProvider provider [CLASS] NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  Number value  [TYPE]  SerializerProvider provider 
[ADD]^^314^^^^^309^318^[ADD] JsonNumberFormatVisitor v2 = visitor.expectNumberFormat ( typeHint ) ;^[METHOD] acceptJsonFormatVisitor [TYPE] void [PARAMETER] JsonFormatVisitorWrapper visitor JavaType typeHint [CLASS] NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  JavaType typeHint  [TYPE]  boolean false  true  [TYPE]  JsonNumberFormatVisitor v2  [TYPE]  JsonFormatVisitorWrapper visitor 
[REPLACE]^if  ( v2 == null )  {^315^^^^^309^318^[REPLACE] if  ( v2 != null )  {^[METHOD] acceptJsonFormatVisitor [TYPE] void [PARAMETER] JsonFormatVisitorWrapper visitor JavaType typeHint [CLASS] NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  JavaType typeHint  [TYPE]  boolean false  true  [TYPE]  JsonNumberFormatVisitor v2  [TYPE]  JsonFormatVisitorWrapper visitor 
[REPLACE]^jgen.writeNumber ( value.doubleValue (  )  ) ;^316^^^^^309^318^[REPLACE] v2.numberType ( JsonParser.NumberType.BIG_DECIMAL ) ;^[METHOD] acceptJsonFormatVisitor [TYPE] void [PARAMETER] JsonFormatVisitorWrapper visitor JavaType typeHint [CLASS] NumberSerializer   [TYPE]  NumberSerializer instance  [TYPE]  JavaType typeHint  [TYPE]  boolean false  true  [TYPE]  JsonNumberFormatVisitor v2  [TYPE]  JsonFormatVisitorWrapper visitor 
