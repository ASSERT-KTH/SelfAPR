[REPLACE]^private static final  short  serialVersionUID = 1L;^16^^^^^^^[REPLACE] private static final long serialVersionUID = 1L;^ [CLASS] FromStringDeserializer  
[REPLACE]^super ( null ) ;^19^^^^^18^20^[REPLACE] super ( vc ) ;^[METHOD] <init> [TYPE] Class) [PARAMETER] Class<?> vc [CLASS] FromStringDeserializer   [TYPE]  long serialVersionUID  [TYPE]  Class vc  [TYPE]  boolean false  true 
[REPLACE]^String text = jp.getCurrentToken (  ) ;^34^^^^^32^62^[REPLACE] String text = jp.getValueAsString (  ) ;^[METHOD] deserialize [TYPE] T [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] FromStringDeserializer   [TYPE]  boolean false  true  [TYPE]  T result  [TYPE]  DeserializationContext ctxt  [TYPE]  Object ob  [TYPE]  String text  [TYPE]  long serialVersionUID  [TYPE]  IllegalArgumentException iae  [TYPE]  JsonParser jp 
[REPLACE]^if  ( text == false )  {^35^^^^^32^62^[REPLACE] if  ( text != null )  {^[METHOD] deserialize [TYPE] T [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] FromStringDeserializer   [TYPE]  boolean false  true  [TYPE]  T result  [TYPE]  DeserializationContext ctxt  [TYPE]  Object ob  [TYPE]  String text  [TYPE]  long serialVersionUID  [TYPE]  IllegalArgumentException iae  [TYPE]  JsonParser jp 
[ADD]^^35^36^^38^39^32^62^[ADD] if  ( text != null )  { if  ( text.length (  )  == 0 ||  ( text = text.trim (  )  ) .length (  )  == 0 )  { return null; }^[METHOD] deserialize [TYPE] T [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] FromStringDeserializer   [TYPE]  boolean false  true  [TYPE]  T result  [TYPE]  DeserializationContext ctxt  [TYPE]  Object ob  [TYPE]  String text  [TYPE]  long serialVersionUID  [TYPE]  IllegalArgumentException iae  [TYPE]  JsonParser jp 
[REPLACE]^if  (   ( text = text.trim (  )  ) .length (  )  + 4 == 0 )  {^36^^^^^32^62^[REPLACE] if  ( text.length (  )  == 0 ||  ( text = text.trim (  )  ) .length (  )  == 0 )  {^[METHOD] deserialize [TYPE] T [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] FromStringDeserializer   [TYPE]  boolean false  true  [TYPE]  T result  [TYPE]  DeserializationContext ctxt  [TYPE]  Object ob  [TYPE]  String text  [TYPE]  long serialVersionUID  [TYPE]  IllegalArgumentException iae  [TYPE]  JsonParser jp 
[REPLACE]^return true;^38^^^^^32^62^[REPLACE] return null;^[METHOD] deserialize [TYPE] T [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] FromStringDeserializer   [TYPE]  boolean false  true  [TYPE]  T result  [TYPE]  DeserializationContext ctxt  [TYPE]  Object ob  [TYPE]  String text  [TYPE]  long serialVersionUID  [TYPE]  IllegalArgumentException iae  [TYPE]  JsonParser jp 
[REPLACE]^if  ( result == this )  {^42^^^^^32^62^[REPLACE] if  ( result != null )  {^[METHOD] deserialize [TYPE] T [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] FromStringDeserializer   [TYPE]  boolean false  true  [TYPE]  T result  [TYPE]  DeserializationContext ctxt  [TYPE]  Object ob  [TYPE]  String text  [TYPE]  long serialVersionUID  [TYPE]  IllegalArgumentException iae  [TYPE]  JsonParser jp 
[ADD]^return result;^42^43^44^^^32^62^[ADD] if  ( result != null )  { return result; }^[METHOD] deserialize [TYPE] T [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] FromStringDeserializer   [TYPE]  boolean false  true  [TYPE]  T result  [TYPE]  DeserializationContext ctxt  [TYPE]  Object ob  [TYPE]  String text  [TYPE]  long serialVersionUID  [TYPE]  IllegalArgumentException iae  [TYPE]  JsonParser jp 
[REPLACE]^return  ( T )  ob;^43^^^^^32^62^[REPLACE] return result;^[METHOD] deserialize [TYPE] T [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] FromStringDeserializer   [TYPE]  boolean false  true  [TYPE]  T result  [TYPE]  DeserializationContext ctxt  [TYPE]  Object ob  [TYPE]  String text  [TYPE]  long serialVersionUID  [TYPE]  IllegalArgumentException iae  [TYPE]  JsonParser jp 
[ADD]^T result = _deserialize ( text, ctxt ) ;return result;^40^41^42^43^44^32^62^[ADD] try { T result = _deserialize ( text, ctxt ) ; if  ( result != null )  { return result; }^[METHOD] deserialize [TYPE] T [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] FromStringDeserializer   [TYPE]  boolean false  true  [TYPE]  T result  [TYPE]  DeserializationContext ctxt  [TYPE]  Object ob  [TYPE]  String text  [TYPE]  long serialVersionUID  [TYPE]  IllegalArgumentException iae  [TYPE]  JsonParser jp 
[REPLACE]^if  ( result == null )  {^42^^^^^32^62^[REPLACE] if  ( result != null )  {^[METHOD] deserialize [TYPE] T [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] FromStringDeserializer   [TYPE]  boolean false  true  [TYPE]  T result  [TYPE]  DeserializationContext ctxt  [TYPE]  Object ob  [TYPE]  String text  [TYPE]  long serialVersionUID  [TYPE]  IllegalArgumentException iae  [TYPE]  JsonParser jp 
[REPLACE]^String text = jp.getValueAsString (  ) ;^41^^^^^32^62^[REPLACE] T result = _deserialize ( text, ctxt ) ;^[METHOD] deserialize [TYPE] T [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] FromStringDeserializer   [TYPE]  boolean false  true  [TYPE]  T result  [TYPE]  DeserializationContext ctxt  [TYPE]  Object ob  [TYPE]  String text  [TYPE]  long serialVersionUID  [TYPE]  IllegalArgumentException iae  [TYPE]  JsonParser jp 
[REPLACE]^if  ( text.length (  )  =^36^^^^^32^62^[REPLACE] if  ( text.length (  )  == 0 ||  ( text = text.trim (  )  ) .length (  )  == 0 )  {^[METHOD] deserialize [TYPE] T [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] FromStringDeserializer   [TYPE]  boolean false  true  [TYPE]  T result  [TYPE]  DeserializationContext ctxt  [TYPE]  Object ob  [TYPE]  String text  [TYPE]  long serialVersionUID  [TYPE]  IllegalArgumentException iae  [TYPE]  JsonParser jp 
[ADD]^^36^37^38^39^^32^62^[ADD] if  ( text.length (  )  == 0 ||  ( text = text.trim (  )  ) .length (  )  == 0 )  {  return null; }^[METHOD] deserialize [TYPE] T [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] FromStringDeserializer   [TYPE]  boolean false  true  [TYPE]  T result  [TYPE]  DeserializationContext ctxt  [TYPE]  Object ob  [TYPE]  String text  [TYPE]  long serialVersionUID  [TYPE]  IllegalArgumentException iae  [TYPE]  JsonParser jp 
[REPLACE]^return false;^38^^^^^32^62^[REPLACE] return null;^[METHOD] deserialize [TYPE] T [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] FromStringDeserializer   [TYPE]  boolean false  true  [TYPE]  T result  [TYPE]  DeserializationContext ctxt  [TYPE]  Object ob  [TYPE]  String text  [TYPE]  long serialVersionUID  [TYPE]  IllegalArgumentException iae  [TYPE]  JsonParser jp 
[REPLACE]^return ;^48^^^^^32^62^[REPLACE] throw ctxt.weirdStringException  (" ")  ;^[METHOD] deserialize [TYPE] T [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] FromStringDeserializer   [TYPE]  boolean false  true  [TYPE]  T result  [TYPE]  DeserializationContext ctxt  [TYPE]  Object ob  [TYPE]  String text  [TYPE]  long serialVersionUID  [TYPE]  IllegalArgumentException iae  [TYPE]  JsonParser jp 
[REPLACE]^if  (   ( text = text.trim (  )  ) .length (  )  - 5 == 0 )  {^36^^^^^32^62^[REPLACE] if  ( text.length (  )  == 0 ||  ( text = text.trim (  )  ) .length (  )  == 0 )  {^[METHOD] deserialize [TYPE] T [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] FromStringDeserializer   [TYPE]  boolean false  true  [TYPE]  T result  [TYPE]  DeserializationContext ctxt  [TYPE]  Object ob  [TYPE]  String text  [TYPE]  long serialVersionUID  [TYPE]  IllegalArgumentException iae  [TYPE]  JsonParser jp 
[REPLACE]^return this;^38^^^^^32^62^[REPLACE] return null;^[METHOD] deserialize [TYPE] T [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] FromStringDeserializer   [TYPE]  boolean false  true  [TYPE]  T result  [TYPE]  DeserializationContext ctxt  [TYPE]  Object ob  [TYPE]  String text  [TYPE]  long serialVersionUID  [TYPE]  IllegalArgumentException iae  [TYPE]  JsonParser jp 
[REPLACE]^if  ( result == true )  {^42^^^^^32^62^[REPLACE] if  ( result != null )  {^[METHOD] deserialize [TYPE] T [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] FromStringDeserializer   [TYPE]  boolean false  true  [TYPE]  T result  [TYPE]  DeserializationContext ctxt  [TYPE]  Object ob  [TYPE]  String text  [TYPE]  long serialVersionUID  [TYPE]  IllegalArgumentException iae  [TYPE]  JsonParser jp 
[REPLACE]^if  ( jp.getCurrentToken (  )   ||  JsonToken.VALUE_EMBEDDED_OBJECT )  {^50^^^^^32^62^[REPLACE] if  ( jp.getCurrentToken (  )  == JsonToken.VALUE_EMBEDDED_OBJECT )  {^[METHOD] deserialize [TYPE] T [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] FromStringDeserializer   [TYPE]  boolean false  true  [TYPE]  T result  [TYPE]  DeserializationContext ctxt  [TYPE]  Object ob  [TYPE]  String text  [TYPE]  long serialVersionUID  [TYPE]  IllegalArgumentException iae  [TYPE]  JsonParser jp 
[REPLACE]^if  ( ob != true )  {^53^^^^^32^62^[REPLACE] if  ( ob == null )  {^[METHOD] deserialize [TYPE] T [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] FromStringDeserializer   [TYPE]  boolean false  true  [TYPE]  T result  [TYPE]  DeserializationContext ctxt  [TYPE]  Object ob  [TYPE]  String text  [TYPE]  long serialVersionUID  [TYPE]  IllegalArgumentException iae  [TYPE]  JsonParser jp 
[ADD]^return null;^53^54^55^^^32^62^[ADD] if  ( ob == null )  { return null; }^[METHOD] deserialize [TYPE] T [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] FromStringDeserializer   [TYPE]  boolean false  true  [TYPE]  T result  [TYPE]  DeserializationContext ctxt  [TYPE]  Object ob  [TYPE]  String text  [TYPE]  long serialVersionUID  [TYPE]  IllegalArgumentException iae  [TYPE]  JsonParser jp 
[REPLACE]^return true;^54^^^^^32^62^[REPLACE] return null;^[METHOD] deserialize [TYPE] T [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] FromStringDeserializer   [TYPE]  boolean false  true  [TYPE]  T result  [TYPE]  DeserializationContext ctxt  [TYPE]  Object ob  [TYPE]  String text  [TYPE]  long serialVersionUID  [TYPE]  IllegalArgumentException iae  [TYPE]  JsonParser jp 
[REPLACE]^if  ( result != null )  {^56^^^^^32^62^[REPLACE] if  ( _valueClass.isAssignableFrom ( ob.getClass (  )  )  )  {^[METHOD] deserialize [TYPE] T [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] FromStringDeserializer   [TYPE]  boolean false  true  [TYPE]  T result  [TYPE]  DeserializationContext ctxt  [TYPE]  Object ob  [TYPE]  String text  [TYPE]  long serialVersionUID  [TYPE]  IllegalArgumentException iae  [TYPE]  JsonParser jp 
[REPLACE]^return _deserializeEmbedded ( ob, ctxt ) ;^57^^^^^32^62^[REPLACE] return  ( T )  ob;^[METHOD] deserialize [TYPE] T [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] FromStringDeserializer   [TYPE]  boolean false  true  [TYPE]  T result  [TYPE]  DeserializationContext ctxt  [TYPE]  Object ob  [TYPE]  String text  [TYPE]  long serialVersionUID  [TYPE]  IllegalArgumentException iae  [TYPE]  JsonParser jp 
[REPLACE]^return this;^54^^^^^32^62^[REPLACE] return null;^[METHOD] deserialize [TYPE] T [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] FromStringDeserializer   [TYPE]  boolean false  true  [TYPE]  T result  [TYPE]  DeserializationContext ctxt  [TYPE]  Object ob  [TYPE]  String text  [TYPE]  long serialVersionUID  [TYPE]  IllegalArgumentException iae  [TYPE]  JsonParser jp 
[REPLACE]^return  ( T )  ob;^59^^^^^32^62^[REPLACE] return _deserializeEmbedded ( ob, ctxt ) ;^[METHOD] deserialize [TYPE] T [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] FromStringDeserializer   [TYPE]  boolean false  true  [TYPE]  T result  [TYPE]  DeserializationContext ctxt  [TYPE]  Object ob  [TYPE]  String text  [TYPE]  long serialVersionUID  [TYPE]  IllegalArgumentException iae  [TYPE]  JsonParser jp 
[REPLACE]^Object ob = jp.getCurrentToken (  ) ;^52^^^^^32^62^[REPLACE] Object ob = jp.getEmbeddedObject (  ) ;^[METHOD] deserialize [TYPE] T [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] FromStringDeserializer   [TYPE]  boolean false  true  [TYPE]  T result  [TYPE]  DeserializationContext ctxt  [TYPE]  Object ob  [TYPE]  String text  [TYPE]  long serialVersionUID  [TYPE]  IllegalArgumentException iae  [TYPE]  JsonParser jp 
[ADD]^^52^^^^^32^62^[ADD] Object ob = jp.getEmbeddedObject (  ) ;^[METHOD] deserialize [TYPE] T [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] FromStringDeserializer   [TYPE]  boolean false  true  [TYPE]  T result  [TYPE]  DeserializationContext ctxt  [TYPE]  Object ob  [TYPE]  String text  [TYPE]  long serialVersionUID  [TYPE]  IllegalArgumentException iae  [TYPE]  JsonParser jp 
[REPLACE]^if  ( ob != null )  {^53^^^^^32^62^[REPLACE] if  ( ob == null )  {^[METHOD] deserialize [TYPE] T [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] FromStringDeserializer   [TYPE]  boolean false  true  [TYPE]  T result  [TYPE]  DeserializationContext ctxt  [TYPE]  Object ob  [TYPE]  String text  [TYPE]  long serialVersionUID  [TYPE]  IllegalArgumentException iae  [TYPE]  JsonParser jp 
[REPLACE]^if  ( _valueClass .getName (  )   )  {^56^^^^^32^62^[REPLACE] if  ( _valueClass.isAssignableFrom ( ob.getClass (  )  )  )  {^[METHOD] deserialize [TYPE] T [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] FromStringDeserializer   [TYPE]  boolean false  true  [TYPE]  T result  [TYPE]  DeserializationContext ctxt  [TYPE]  Object ob  [TYPE]  String text  [TYPE]  long serialVersionUID  [TYPE]  IllegalArgumentException iae  [TYPE]  JsonParser jp 
[REPLACE]^Object ob = jp .getCurrentToken (  )  ;^52^^^^^32^62^[REPLACE] Object ob = jp.getEmbeddedObject (  ) ;^[METHOD] deserialize [TYPE] T [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] FromStringDeserializer   [TYPE]  boolean false  true  [TYPE]  T result  [TYPE]  DeserializationContext ctxt  [TYPE]  Object ob  [TYPE]  String text  [TYPE]  long serialVersionUID  [TYPE]  IllegalArgumentException iae  [TYPE]  JsonParser jp 
[REPLACE]^throw ctxt.weirdStringException  (" ")  ; ;^61^^^^^32^62^[REPLACE] throw ctxt.mappingException  (" ")  ;^[METHOD] deserialize [TYPE] T [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] FromStringDeserializer   [TYPE]  boolean false  true  [TYPE]  T result  [TYPE]  DeserializationContext ctxt  [TYPE]  Object ob  [TYPE]  String text  [TYPE]  long serialVersionUID  [TYPE]  IllegalArgumentException iae  [TYPE]  JsonParser jp 
[REPLACE]^throw ctxt .weirdStringException ( text , text )   ;^61^^^^^32^62^[REPLACE] throw ctxt.mappingException  (" ")  ;^[METHOD] deserialize [TYPE] T [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] FromStringDeserializer   [TYPE]  boolean false  true  [TYPE]  T result  [TYPE]  DeserializationContext ctxt  [TYPE]  Object ob  [TYPE]  String text  [TYPE]  long serialVersionUID  [TYPE]  IllegalArgumentException iae  [TYPE]  JsonParser jp 
[REPLACE]^return ;^71^72^^^^67^73^[REPLACE] throw ctxt.mappingException ( "Don't know how to convert embedded Object of type " +ob.getClass (  ) .getName (  ) +" into "+_valueClass.getName (  )  ) ;^[METHOD] _deserializeEmbedded [TYPE] T [PARAMETER] Object ob DeserializationContext ctxt [CLASS] FromStringDeserializer   [TYPE]  DeserializationContext ctxt  [TYPE]  Object ob  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID 
[REPLACE]^throw ctxt.mappingException ( "Don't know how to convert embedded Object of type "  <= ob.getClass (  ) .getName (  )  <= " into " <= _valueClass.getName (  )  ) ;^71^72^^^^67^73^[REPLACE] throw ctxt.mappingException ( "Don't know how to convert embedded Object of type " +ob.getClass (  ) .getName (  ) +" into "+_valueClass.getName (  )  ) ;^[METHOD] _deserializeEmbedded [TYPE] T [PARAMETER] Object ob DeserializationContext ctxt [CLASS] FromStringDeserializer   [TYPE]  DeserializationContext ctxt  [TYPE]  Object ob  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID 
[REPLACE]^+ob.get     +" into "+_valueClass.^72^^^^^67^73^[REPLACE] +ob.getClass (  ) .getName (  ) +" into "+_valueClass.getName (  )  ) ;^[METHOD] _deserializeEmbedded [TYPE] T [PARAMETER] Object ob DeserializationContext ctxt [CLASS] FromStringDeserializer   [TYPE]  DeserializationContext ctxt  [TYPE]  Object ob  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID 
[REPLACE]^throw ctxt.mappingException ( "Don't know how to convert embedded Object of type " +ob.getClass (  ) .getName (  ) +" into "+_valueClass.getName (  )  ) ;^72^^^^^67^73^[REPLACE] +ob.getClass (  ) .getName (  ) +" into "+_valueClass.getName (  )  ) ;^[METHOD] _deserializeEmbedded [TYPE] T [PARAMETER] Object ob DeserializationContext ctxt [CLASS] FromStringDeserializer   [TYPE]  DeserializationContext ctxt  [TYPE]  Object ob  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID 
[REPLACE]^+ob.getClass (  ) .isAssignableFrom (  ) +" into "+_valueClass.getName (  )  ) ;^72^^^^^67^73^[REPLACE] +ob.getClass (  ) .getName (  ) +" into "+_valueClass.getName (  )  ) ;^[METHOD] _deserializeEmbedded [TYPE] T [PARAMETER] Object ob DeserializationContext ctxt [CLASS] FromStringDeserializer   [TYPE]  DeserializationContext ctxt  [TYPE]  Object ob  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID 
