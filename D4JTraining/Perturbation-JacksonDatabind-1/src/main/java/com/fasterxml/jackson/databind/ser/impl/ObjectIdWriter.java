[REPLACE]^private final JavaType idType;^13^^^^^^^[REPLACE] public final JavaType idType;^ [CLASS] ObjectIdWriter  
[REPLACE]^public  SerializedString propertyName;^20^^^^^^^[REPLACE] public final SerializedString propertyName;^ [CLASS] ObjectIdWriter  
[REPLACE]^public  ObjectIdGenerator<?> generator;^27^^^^^^^[REPLACE] public final ObjectIdGenerator<?> generator;^ [CLASS] ObjectIdWriter  
[REPLACE]^public  JsonSerializer<Object> serializer;^32^^^^^^^[REPLACE] public final JsonSerializer<Object> serializer;^ [CLASS] ObjectIdWriter  
[REPLACE]^idType =  null;^53^^^^^50^58^[REPLACE] idType = t;^[METHOD] <init> [TYPE] JsonSerializer,boolean) [PARAMETER] JavaType t SerializedString propName ObjectIdGenerator<?> gen JsonSerializer<?> ser boolean alwaysAsId [CLASS] ObjectIdWriter   [TYPE]  SerializedString propName  propertyName  [TYPE]  JavaType idType  t  [TYPE]  ObjectIdGenerator gen  generator  [TYPE]  boolean alwaysAsId  false  true  [TYPE]  JsonSerializer ser  serializer 
[REPLACE]^propertyName =  null;^54^^^^^50^58^[REPLACE] propertyName = propName;^[METHOD] <init> [TYPE] JsonSerializer,boolean) [PARAMETER] JavaType t SerializedString propName ObjectIdGenerator<?> gen JsonSerializer<?> ser boolean alwaysAsId [CLASS] ObjectIdWriter   [TYPE]  SerializedString propName  propertyName  [TYPE]  JavaType idType  t  [TYPE]  ObjectIdGenerator gen  generator  [TYPE]  boolean alwaysAsId  false  true  [TYPE]  JsonSerializer ser  serializer 
[ADD]^^54^55^^^^50^58^[ADD] propertyName = propName; generator = gen;^[METHOD] <init> [TYPE] JsonSerializer,boolean) [PARAMETER] JavaType t SerializedString propName ObjectIdGenerator<?> gen JsonSerializer<?> ser boolean alwaysAsId [CLASS] ObjectIdWriter   [TYPE]  SerializedString propName  propertyName  [TYPE]  JavaType idType  t  [TYPE]  ObjectIdGenerator gen  generator  [TYPE]  boolean alwaysAsId  false  true  [TYPE]  JsonSerializer ser  serializer 
[REPLACE]^generator =  this;^55^^^^^50^58^[REPLACE] generator = gen;^[METHOD] <init> [TYPE] JsonSerializer,boolean) [PARAMETER] JavaType t SerializedString propName ObjectIdGenerator<?> gen JsonSerializer<?> ser boolean alwaysAsId [CLASS] ObjectIdWriter   [TYPE]  SerializedString propName  propertyName  [TYPE]  JavaType idType  t  [TYPE]  ObjectIdGenerator gen  generator  [TYPE]  boolean alwaysAsId  false  true  [TYPE]  JsonSerializer ser  serializer 
[REPLACE]^serializer =   ( JsonSerializer<Object> )  ser;^56^^^^^50^58^[REPLACE] serializer =  ( JsonSerializer<Object> )  ser;^[METHOD] <init> [TYPE] JsonSerializer,boolean) [PARAMETER] JavaType t SerializedString propName ObjectIdGenerator<?> gen JsonSerializer<?> ser boolean alwaysAsId [CLASS] ObjectIdWriter   [TYPE]  SerializedString propName  propertyName  [TYPE]  JavaType idType  t  [TYPE]  ObjectIdGenerator gen  generator  [TYPE]  boolean alwaysAsId  false  true  [TYPE]  JsonSerializer ser  serializer 
[ADD]^^56^^^^^50^58^[ADD] serializer =  ( JsonSerializer<Object> )  ser;^[METHOD] <init> [TYPE] JsonSerializer,boolean) [PARAMETER] JavaType t SerializedString propName ObjectIdGenerator<?> gen JsonSerializer<?> ser boolean alwaysAsId [CLASS] ObjectIdWriter   [TYPE]  SerializedString propName  propertyName  [TYPE]  JavaType idType  t  [TYPE]  ObjectIdGenerator gen  generator  [TYPE]  boolean alwaysAsId  false  true  [TYPE]  JsonSerializer ser  serializer 
[REPLACE]^this.alwaysAsId =  false;^57^^^^^50^58^[REPLACE] this.alwaysAsId = alwaysAsId;^[METHOD] <init> [TYPE] JsonSerializer,boolean) [PARAMETER] JavaType t SerializedString propName ObjectIdGenerator<?> gen JsonSerializer<?> ser boolean alwaysAsId [CLASS] ObjectIdWriter   [TYPE]  SerializedString propName  propertyName  [TYPE]  JavaType idType  t  [TYPE]  ObjectIdGenerator gen  generator  [TYPE]  boolean alwaysAsId  false  true  [TYPE]  JsonSerializer ser  serializer 
[REPLACE]^SerializedString serName  =  new SerializedString ( propName ) ;^68^^^^^65^70^[REPLACE] SerializedString serName =  ( propName == null )  ? null : new SerializedString ( propName ) ;^[METHOD] construct [TYPE] ObjectIdWriter [PARAMETER] JavaType idType String propName ObjectIdGenerator<?> generator boolean alwaysAsId [CLASS] ObjectIdWriter   [TYPE]  SerializedString propName  propertyName  serName  [TYPE]  JavaType idType  t  [TYPE]  ObjectIdGenerator gen  generator  [TYPE]  boolean alwaysAsId  false  true  [TYPE]  JsonSerializer ser  serializer  [TYPE]  String propName 
[ADD]^^68^69^^^^65^70^[ADD] SerializedString serName =  ( propName == null )  ? null : new SerializedString ( propName ) ; return new ObjectIdWriter ( idType, serName, generator, null, alwaysAsId ) ;^[METHOD] construct [TYPE] ObjectIdWriter [PARAMETER] JavaType idType String propName ObjectIdGenerator<?> generator boolean alwaysAsId [CLASS] ObjectIdWriter   [TYPE]  SerializedString propName  propertyName  serName  [TYPE]  JavaType idType  t  [TYPE]  ObjectIdGenerator gen  generator  [TYPE]  boolean alwaysAsId  false  true  [TYPE]  JsonSerializer ser  serializer  [TYPE]  String propName 
[REPLACE]^return new ObjectIdWriter ( idType, propertyName, generator, ser, alwaysAsId ) ;^69^^^^^65^70^[REPLACE] return new ObjectIdWriter ( idType, serName, generator, null, alwaysAsId ) ;^[METHOD] construct [TYPE] ObjectIdWriter [PARAMETER] JavaType idType String propName ObjectIdGenerator<?> generator boolean alwaysAsId [CLASS] ObjectIdWriter   [TYPE]  SerializedString propName  propertyName  serName  [TYPE]  JavaType idType  t  [TYPE]  ObjectIdGenerator gen  generator  [TYPE]  boolean alwaysAsId  false  true  [TYPE]  JsonSerializer ser  serializer  [TYPE]  String propName 
[REPLACE]^return  new ObjectIdWriter ( idType, serName, generator, null, alwaysAsId )  ;^73^^^^^72^74^[REPLACE] return new ObjectIdWriter ( idType, propertyName, generator, ser, alwaysAsId ) ;^[METHOD] withSerializer [TYPE] ObjectIdWriter [PARAMETER] JsonSerializer<?> ser [CLASS] ObjectIdWriter   [TYPE]  SerializedString propName  propertyName  serName  [TYPE]  JavaType idType  t  [TYPE]  ObjectIdGenerator gen  generator  [TYPE]  boolean alwaysAsId  false  true  [TYPE]  JsonSerializer ser  serializer 
[REPLACE]^if  ( true  ||  alwaysAsId )  {^80^^^^^79^84^[REPLACE] if  ( newState == alwaysAsId )  {^[METHOD] withAlwaysAsId [TYPE] ObjectIdWriter [PARAMETER] boolean newState [CLASS] ObjectIdWriter   [TYPE]  SerializedString propName  propertyName  serName  [TYPE]  JavaType idType  t  [TYPE]  ObjectIdGenerator gen  generator  [TYPE]  boolean alwaysAsId  false  newState  true  [TYPE]  JsonSerializer ser  serializer 
[REPLACE]^return null;^81^^^^^79^84^[REPLACE] return this;^[METHOD] withAlwaysAsId [TYPE] ObjectIdWriter [PARAMETER] boolean newState [CLASS] ObjectIdWriter   [TYPE]  SerializedString propName  propertyName  serName  [TYPE]  JavaType idType  t  [TYPE]  ObjectIdGenerator gen  generator  [TYPE]  boolean alwaysAsId  false  newState  true  [TYPE]  JsonSerializer ser  serializer 
[REPLACE]^return  new ObjectIdWriter ( idType, propertyName, generator, ser, alwaysAsId )  ;^83^^^^^79^84^[REPLACE] return new ObjectIdWriter ( idType, propertyName, generator, serializer, newState ) ;^[METHOD] withAlwaysAsId [TYPE] ObjectIdWriter [PARAMETER] boolean newState [CLASS] ObjectIdWriter   [TYPE]  SerializedString propName  propertyName  serName  [TYPE]  JavaType idType  t  [TYPE]  ObjectIdGenerator gen  generator  [TYPE]  boolean alwaysAsId  false  newState  true  [TYPE]  JsonSerializer ser  serializer 
