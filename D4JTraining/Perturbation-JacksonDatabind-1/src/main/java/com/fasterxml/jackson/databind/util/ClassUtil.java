[REPLACE]^final static EnumTypeLocator instance ;^619^^^^^^^[REPLACE] final static EnumTypeLocator instance = new EnumTypeLocator (  ) ;^ [CLASS] ClassUtil EnumTypeLocator  
[REPLACE]^private  Field enumSetTypeField;^621^^^^^^^[REPLACE] private final Field enumSetTypeField;^ [CLASS] ClassUtil EnumTypeLocator  
[REPLACE]^if   (  type.isPrimitive  (    )    )   {  ;^69^^^^^67^84^[REPLACE] if  ( type.isAnnotation (  )  )  {^[METHOD] canBeABeanType [TYPE] String [PARAMETER] Class<?> type [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Class type  [TYPE]  boolean false  true 
[REPLACE]^return "annotation";  ;^70^^^^^67^84^[REPLACE] return "annotation";^[METHOD] canBeABeanType [TYPE] String [PARAMETER] Class<?> type [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Class type  [TYPE]  boolean false  true 
[REPLACE]^if  ( true.isArray (  )  )  {^72^^^^^67^84^[REPLACE] if  ( type.isArray (  )  )  {^[METHOD] canBeABeanType [TYPE] String [PARAMETER] Class<?> type [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Class type  [TYPE]  boolean false  true 
[REMOVE]^if  (  ( TYPE )  ==  ( m.getReturnType (  )  )  )  {     return false; }^72^^^^^67^84^[REMOVE] ^[METHOD] canBeABeanType [TYPE] String [PARAMETER] Class<?> type [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Class type  [TYPE]  boolean false  true 
[REPLACE]^return "array";  ;^73^^^^^67^84^[REPLACE] return "array";^[METHOD] canBeABeanType [TYPE] String [PARAMETER] Class<?> type [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Class type  [TYPE]  boolean false  true 
[REPLACE]^if  ( null.isEnum (  )  )  {^75^^^^^67^84^[REPLACE] if  ( type.isEnum (  )  )  {^[METHOD] canBeABeanType [TYPE] String [PARAMETER] Class<?> type [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Class type  [TYPE]  boolean false  true 
[REMOVE]^if  ( type.isArray (  )  )  {     return "array"; }^75^^^^^67^84^[REMOVE] ^[METHOD] canBeABeanType [TYPE] String [PARAMETER] Class<?> type [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Class type  [TYPE]  boolean false  true 
[REPLACE]^return "enum";  ;^76^^^^^67^84^[REPLACE] return "enum";^[METHOD] canBeABeanType [TYPE] String [PARAMETER] Class<?> type [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Class type  [TYPE]  boolean false  true 
[REPLACE]^if  ( type .isAnnotation (  )   )  {^78^^^^^67^84^[REPLACE] if  ( type.isPrimitive (  )  )  {^[METHOD] canBeABeanType [TYPE] String [PARAMETER] Class<?> type [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Class type  [TYPE]  boolean false  true 
[REPLACE]^return "primitive";  ;^79^^^^^67^84^[REPLACE] return "primitive";^[METHOD] canBeABeanType [TYPE] String [PARAMETER] Class<?> type [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Class type  [TYPE]  boolean false  true 
[REPLACE]^return true;^83^^^^^67^84^[REPLACE] return null;^[METHOD] canBeABeanType [TYPE] String [PARAMETER] Class<?> type [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Class type  [TYPE]  boolean false  true 
[REPLACE]^if  ( this (  )  == null )  {^94^^^^^87^113^[REPLACE] if  ( type.getEnclosingMethod (  )  != null )  {^[METHOD] isLocalType [TYPE] String [PARAMETER] Class<?> type boolean allowNonStatic [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Class type  [TYPE]  SecurityException e  [TYPE]  boolean allowNonStatic  false  true  [TYPE]  NullPointerException e 
[REPLACE]^return "local/anonymous";  ;^95^^^^^87^113^[REPLACE] return "local/anonymous";^[METHOD] isLocalType [TYPE] String [PARAMETER] Class<?> type boolean allowNonStatic [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Class type  [TYPE]  SecurityException e  [TYPE]  boolean allowNonStatic  false  true  [TYPE]  NullPointerException e 
[REPLACE]^if  ( allowNonStatic )  {^102^^^^^87^113^[REPLACE] if  ( !allowNonStatic )  {^[METHOD] isLocalType [TYPE] String [PARAMETER] Class<?> type boolean allowNonStatic [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Class type  [TYPE]  SecurityException e  [TYPE]  boolean allowNonStatic  false  true  [TYPE]  NullPointerException e 
[REPLACE]^if  ( null.getEnclosingClass (  )  == null )  {^103^^^^^87^113^[REPLACE] if  ( type.getEnclosingClass (  )  != null )  {^[METHOD] isLocalType [TYPE] String [PARAMETER] Class<?> type boolean allowNonStatic [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Class type  [TYPE]  SecurityException e  [TYPE]  boolean allowNonStatic  false  true  [TYPE]  NullPointerException e 
[ADD]^^103^104^105^106^^87^113^[ADD] if  ( type.getEnclosingClass (  )  != null )  { if  ( !Modifier.isStatic ( type.getModifiers (  )  )  )  { return "non-static member class"; }^[METHOD] isLocalType [TYPE] String [PARAMETER] Class<?> type boolean allowNonStatic [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Class type  [TYPE]  SecurityException e  [TYPE]  boolean allowNonStatic  false  true  [TYPE]  NullPointerException e 
[REPLACE]^if  ( !Modifier.isStatic ( 1.getModifiers (  )  )  )  {^104^^^^^87^113^[REPLACE] if  ( !Modifier.isStatic ( type.getModifiers (  )  )  )  {^[METHOD] isLocalType [TYPE] String [PARAMETER] Class<?> type boolean allowNonStatic [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Class type  [TYPE]  SecurityException e  [TYPE]  boolean allowNonStatic  false  true  [TYPE]  NullPointerException e 
[REPLACE]^return "non-static member class";  ;^105^^^^^87^113^[REPLACE] return "non-static member class";^[METHOD] isLocalType [TYPE] String [PARAMETER] Class<?> type boolean allowNonStatic [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Class type  [TYPE]  SecurityException e  [TYPE]  boolean allowNonStatic  false  true  [TYPE]  NullPointerException e 
[REPLACE]^if  ( !Modifier.isStatic ( null.getModifiers (  )  )  )  {^104^^^^^87^113^[REPLACE] if  ( !Modifier.isStatic ( type.getModifiers (  )  )  )  {^[METHOD] isLocalType [TYPE] String [PARAMETER] Class<?> type boolean allowNonStatic [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Class type  [TYPE]  SecurityException e  [TYPE]  boolean allowNonStatic  false  true  [TYPE]  NullPointerException e 
[REPLACE]^if  ( 1.getEnclosingClass (  )  == false )  {^103^^^^^87^113^[REPLACE] if  ( type.getEnclosingClass (  )  != null )  {^[METHOD] isLocalType [TYPE] String [PARAMETER] Class<?> type boolean allowNonStatic [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Class type  [TYPE]  SecurityException e  [TYPE]  boolean allowNonStatic  false  true  [TYPE]  NullPointerException e 
[REPLACE]^if   (  !Modifier.isPublic  (  ctor.getModifiers  (    )    )    )   {  ;^104^^^^^87^113^[REPLACE] if  ( !Modifier.isStatic ( type.getModifiers (  )  )  )  {^[METHOD] isLocalType [TYPE] String [PARAMETER] Class<?> type boolean allowNonStatic [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Class type  [TYPE]  SecurityException e  [TYPE]  boolean allowNonStatic  false  true  [TYPE]  NullPointerException e 
[REMOVE]^if  (  ( TYPE )  ==  ( m.getReturnType (  )  )  )  {     return false; }^104^^^^^87^113^[REMOVE] ^[METHOD] isLocalType [TYPE] String [PARAMETER] Class<?> type boolean allowNonStatic [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Class type  [TYPE]  SecurityException e  [TYPE]  boolean allowNonStatic  false  true  [TYPE]  NullPointerException e 
[ADD]^return "local/anonymous";^92^93^94^95^96^87^113^[ADD] try {  if  ( type.getEnclosingMethod (  )  != null )  { return "local/anonymous"; }^[METHOD] isLocalType [TYPE] String [PARAMETER] Class<?> type boolean allowNonStatic [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Class type  [TYPE]  SecurityException e  [TYPE]  boolean allowNonStatic  false  true  [TYPE]  NullPointerException e 
[REPLACE]^if  ( null.getEnclosingMethod (  )  == null )  {^94^^^^^87^113^[REPLACE] if  ( type.getEnclosingMethod (  )  != null )  {^[METHOD] isLocalType [TYPE] String [PARAMETER] Class<?> type boolean allowNonStatic [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Class type  [TYPE]  SecurityException e  [TYPE]  boolean allowNonStatic  false  true  [TYPE]  NullPointerException e 
[REPLACE]^if  ( true )  {^102^^^^^87^113^[REPLACE] if  ( !allowNonStatic )  {^[METHOD] isLocalType [TYPE] String [PARAMETER] Class<?> type boolean allowNonStatic [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Class type  [TYPE]  SecurityException e  [TYPE]  boolean allowNonStatic  false  true  [TYPE]  NullPointerException e 
[REPLACE]^if  ( type.getEnclosingClass (  )  == null )  {^103^^^^^87^113^[REPLACE] if  ( type.getEnclosingClass (  )  != null )  {^[METHOD] isLocalType [TYPE] String [PARAMETER] Class<?> type boolean allowNonStatic [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Class type  [TYPE]  SecurityException e  [TYPE]  boolean allowNonStatic  false  true  [TYPE]  NullPointerException e 
[REPLACE]^if  ( !Modifier.isStatic ( false.getModifiers (  )  )  )  {^104^^^^^87^113^[REPLACE] if  ( !Modifier.isStatic ( type.getModifiers (  )  )  )  {^[METHOD] isLocalType [TYPE] String [PARAMETER] Class<?> type boolean allowNonStatic [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Class type  [TYPE]  SecurityException e  [TYPE]  boolean allowNonStatic  false  true  [TYPE]  NullPointerException e 
[REPLACE]^if  ( !Modifier.isPublic ( this.getModifiers (  )  )  )  {^104^^^^^87^113^[REPLACE] if  ( !Modifier.isStatic ( type.getModifiers (  )  )  )  {^[METHOD] isLocalType [TYPE] String [PARAMETER] Class<?> type boolean allowNonStatic [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Class type  [TYPE]  SecurityException e  [TYPE]  boolean allowNonStatic  false  true  [TYPE]  NullPointerException e 
[REPLACE]^if  ( !Modifier.isPublic ( type.getModifiers (  )  )  )  {^104^^^^^87^113^[REPLACE] if  ( !Modifier.isStatic ( type.getModifiers (  )  )  )  {^[METHOD] isLocalType [TYPE] String [PARAMETER] Class<?> type boolean allowNonStatic [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Class type  [TYPE]  SecurityException e  [TYPE]  boolean allowNonStatic  false  true  [TYPE]  NullPointerException e 
[REPLACE]^return true;^112^^^^^87^113^[REPLACE] return null;^[METHOD] isLocalType [TYPE] String [PARAMETER] Class<?> type boolean allowNonStatic [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Class type  [TYPE]  SecurityException e  [TYPE]  boolean allowNonStatic  false  true  [TYPE]  NullPointerException e 
[REPLACE]^String name = null.getName (  ) ;^149^^^^^141^157^[REPLACE] String name = type.getName (  ) ;^[METHOD] isProxyType [TYPE] boolean [PARAMETER] Class<?> type [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Class type  [TYPE]  String name  [TYPE]  boolean false  true 
[REPLACE]^if  ( name.startsWith ( "net.sf.cglib.proxy." ) && name.startsWith ( "org.hibernate.proxy." )  )  {^151^152^^^^141^157^[REPLACE] if  ( name.startsWith ( "net.sf.cglib.proxy." ) || name.startsWith ( "org.hibernate.proxy." )  )  {^[METHOD] isProxyType [TYPE] boolean [PARAMETER] Class<?> type [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Class type  [TYPE]  String name  [TYPE]  boolean false  true 
[REPLACE]^return false;^153^^^^^151^154^[REPLACE] return true;^[METHOD] isProxyType [TYPE] boolean [PARAMETER] Class<?> type [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Class type  [TYPE]  String name  [TYPE]  boolean false  true 
[REPLACE]^return false;^153^^^^^141^157^[REPLACE] return true;^[METHOD] isProxyType [TYPE] boolean [PARAMETER] Class<?> type [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Class type  [TYPE]  String name  [TYPE]  boolean false  true 
[REPLACE]^return true;^156^^^^^141^157^[REPLACE] return false;^[METHOD] isProxyType [TYPE] boolean [PARAMETER] Class<?> type [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Class type  [TYPE]  String name  [TYPE]  boolean false  true 
[REPLACE]^if  ( className.indexOf ( '.' )   >= true )  {^213^^^^^211^246^[REPLACE] if  ( className.indexOf ( '.' )  < 0 )  {^[METHOD] findClass [TYPE] Class [PARAMETER] String className [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable prob  [TYPE]  ClassLoader loader  [TYPE]  String className  [TYPE]  Exception e 
[REPLACE]^if  ( "int".startsWith ( className )  )  return Integer.TYPE;^214^^^^^211^246^[REPLACE] if  ( "int".equals ( className )  )  return Integer.TYPE;^[METHOD] findClass [TYPE] Class [PARAMETER] String className [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable prob  [TYPE]  ClassLoader loader  [TYPE]  String className  [TYPE]  Exception e 
[REMOVE]^if  ( primitiveType ==  ( TYPE )  )  {     return class; }^214^^^^^211^246^[REMOVE] ^[METHOD] findClass [TYPE] Class [PARAMETER] String className [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable prob  [TYPE]  ClassLoader loader  [TYPE]  String className  [TYPE]  Exception e 
[REPLACE]^if   (  "short".equals  (  className  )    )   return Short.TYPE;  ;^214^^^^^211^246^[REPLACE] if  ( "int".equals ( className )  )  return Integer.TYPE;^[METHOD] findClass [TYPE] Class [PARAMETER] String className [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable prob  [TYPE]  ClassLoader loader  [TYPE]  String className  [TYPE]  Exception e 
[REPLACE]^if  ( "long".startsWith ( className )  )  return Long.TYPE;^215^^^^^211^246^[REPLACE] if  ( "long".equals ( className )  )  return Long.TYPE;^[METHOD] findClass [TYPE] Class [PARAMETER] String className [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable prob  [TYPE]  ClassLoader loader  [TYPE]  String className  [TYPE]  Exception e 
[REPLACE]^if   (  "short".equals  (  className  )    )   return Short.TYPE;  ;^215^^^^^211^246^[REPLACE] if  ( "long".equals ( className )  )  return Long.TYPE;^[METHOD] findClass [TYPE] Class [PARAMETER] String className [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable prob  [TYPE]  ClassLoader loader  [TYPE]  String className  [TYPE]  Exception e 
[REPLACE]^if  ( "float" .startsWith ( className )   )  return Float.TYPE;^216^^^^^211^246^[REPLACE] if  ( "float".equals ( className )  )  return Float.TYPE;^[METHOD] findClass [TYPE] Class [PARAMETER] String className [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable prob  [TYPE]  ClassLoader loader  [TYPE]  String className  [TYPE]  Exception e 
[ADD]^if  ( "double".equals ( className )  )  return Double.TYPE;if  ( "boolean".equals ( className )  )  return Boolean.TYPE;if  ( "byte".equals ( className )  )  return Byte.TYPE;if  ( "char".equals ( className )  )  return Character.TYPE;^216^217^218^219^220^211^246^[ADD] if  ( "float".equals ( className )  )  return Float.TYPE; if  ( "double".equals ( className )  )  return Double.TYPE; if  ( "boolean".equals ( className )  )  return Boolean.TYPE; if  ( "byte".equals ( className )  )  return Byte.TYPE; if  ( "char".equals ( className )  )  return Character.TYPE;^[METHOD] findClass [TYPE] Class [PARAMETER] String className [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable prob  [TYPE]  ClassLoader loader  [TYPE]  String className  [TYPE]  Exception e 
[REPLACE]^if   (  "short".equals  (  className  )    )   return Short.TYPE;  ;^216^^^^^211^246^[REPLACE] if  ( "float".equals ( className )  )  return Float.TYPE;^[METHOD] findClass [TYPE] Class [PARAMETER] String className [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable prob  [TYPE]  ClassLoader loader  [TYPE]  String className  [TYPE]  Exception e 
[REPLACE]^if  ( "double".startsWith ( className )  )  return Double.TYPE;^217^^^^^211^246^[REPLACE] if  ( "double".equals ( className )  )  return Double.TYPE;^[METHOD] findClass [TYPE] Class [PARAMETER] String className [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable prob  [TYPE]  ClassLoader loader  [TYPE]  String className  [TYPE]  Exception e 
[REPLACE]^if   (  "short".equals  (  className  )    )   return Short.TYPE;  ;^217^^^^^211^246^[REPLACE] if  ( "double".equals ( className )  )  return Double.TYPE;^[METHOD] findClass [TYPE] Class [PARAMETER] String className [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable prob  [TYPE]  ClassLoader loader  [TYPE]  String className  [TYPE]  Exception e 
[REPLACE]^if  ( "boolean" .startsWith ( className )   )  return Boolean.TYPE;^218^^^^^211^246^[REPLACE] if  ( "boolean".equals ( className )  )  return Boolean.TYPE;^[METHOD] findClass [TYPE] Class [PARAMETER] String className [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable prob  [TYPE]  ClassLoader loader  [TYPE]  String className  [TYPE]  Exception e 
[REPLACE]^if   (  "short".equals  (  className  )    )   return Short.TYPE;  ;^218^^^^^211^246^[REPLACE] if  ( "boolean".equals ( className )  )  return Boolean.TYPE;^[METHOD] findClass [TYPE] Class [PARAMETER] String className [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable prob  [TYPE]  ClassLoader loader  [TYPE]  String className  [TYPE]  Exception e 
[REPLACE]^if   (  "void".equals  (  className  )    )   return Void.TYPE; }  ;^219^^^^^211^246^[REPLACE] if  ( "byte".equals ( className )  )  return Byte.TYPE;^[METHOD] findClass [TYPE] Class [PARAMETER] String className [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable prob  [TYPE]  ClassLoader loader  [TYPE]  String className  [TYPE]  Exception e 
[REPLACE]^if   (  "short".equals  (  className  )    )   return Short.TYPE;  ;^219^^^^^211^246^[REPLACE] if  ( "byte".equals ( className )  )  return Byte.TYPE;^[METHOD] findClass [TYPE] Class [PARAMETER] String className [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable prob  [TYPE]  ClassLoader loader  [TYPE]  String className  [TYPE]  Exception e 
[REPLACE]^if  ( "char".startsWith ( className )  )  return Character.TYPE;^220^^^^^211^246^[REPLACE] if  ( "char".equals ( className )  )  return Character.TYPE;^[METHOD] findClass [TYPE] Class [PARAMETER] String className [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable prob  [TYPE]  ClassLoader loader  [TYPE]  String className  [TYPE]  Exception e 
[REPLACE]^if   (  "short".equals  (  className  )    )   return Short.TYPE;  ;^220^^^^^211^246^[REPLACE] if  ( "char".equals ( className )  )  return Character.TYPE;^[METHOD] findClass [TYPE] Class [PARAMETER] String className [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable prob  [TYPE]  ClassLoader loader  [TYPE]  String className  [TYPE]  Exception e 
[REPLACE]^if   (  "void".equals  (  className  )    )   return Void.TYPE; }  ;^221^^^^^211^246^[REPLACE] if  ( "short".equals ( className )  )  return Short.TYPE;^[METHOD] findClass [TYPE] Class [PARAMETER] String className [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable prob  [TYPE]  ClassLoader loader  [TYPE]  String className  [TYPE]  Exception e 
[REPLACE]^if   (  "short".equals  (  className  )    )   return Short.TYPE;  ;^221^^^^^211^246^[REPLACE] if  ( "short".equals ( className )  )  return Short.TYPE;^[METHOD] findClass [TYPE] Class [PARAMETER] String className [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable prob  [TYPE]  ClassLoader loader  [TYPE]  String className  [TYPE]  Exception e 
[REPLACE]^if  ( "void" .startsWith ( className )   )  return Void.TYPE;^222^^^^^211^246^[REPLACE] if  ( "void".equals ( className )  )  return Void.TYPE;^[METHOD] findClass [TYPE] Class [PARAMETER] String className [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable prob  [TYPE]  ClassLoader loader  [TYPE]  String className  [TYPE]  Exception e 
[REPLACE]^if   (  "short".equals  (  className  )    )   return Short.TYPE;  ;^222^^^^^211^246^[REPLACE] if  ( "void".equals ( className )  )  return Void.TYPE;^[METHOD] findClass [TYPE] Class [PARAMETER] String className [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable prob  [TYPE]  ClassLoader loader  [TYPE]  String className  [TYPE]  Exception e 
[REPLACE]^if   (  "void".equals  (  className  )    )   return Void.TYPE; }  ;^214^^^^^211^246^[REPLACE] if  ( "int".equals ( className )  )  return Integer.TYPE;^[METHOD] findClass [TYPE] Class [PARAMETER] String className [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable prob  [TYPE]  ClassLoader loader  [TYPE]  String className  [TYPE]  Exception e 
[ADD]^^214^215^216^217^218^211^246^[ADD] if  ( "int".equals ( className )  )  return Integer.TYPE; if  ( "long".equals ( className )  )  return Long.TYPE; if  ( "float".equals ( className )  )  return Float.TYPE; if  ( "double".equals ( className )  )  return Double.TYPE; if  ( "boolean".equals ( className )  )  return Boolean.TYPE;^[METHOD] findClass [TYPE] Class [PARAMETER] String className [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable prob  [TYPE]  ClassLoader loader  [TYPE]  String className  [TYPE]  Exception e 
[ADD]^^215^216^217^218^219^211^246^[ADD] if  ( "long".equals ( className )  )  return Long.TYPE; if  ( "float".equals ( className )  )  return Float.TYPE; if  ( "double".equals ( className )  )  return Double.TYPE; if  ( "boolean".equals ( className )  )  return Boolean.TYPE; if  ( "byte".equals ( className )  )  return Byte.TYPE;^[METHOD] findClass [TYPE] Class [PARAMETER] String className [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable prob  [TYPE]  ClassLoader loader  [TYPE]  String className  [TYPE]  Exception e 
[REPLACE]^if   (  "void".equals  (  className  )    )   return Void.TYPE; }  ;^216^^^^^211^246^[REPLACE] if  ( "float".equals ( className )  )  return Float.TYPE;^[METHOD] findClass [TYPE] Class [PARAMETER] String className [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable prob  [TYPE]  ClassLoader loader  [TYPE]  String className  [TYPE]  Exception e 
[ADD]^^216^217^218^219^220^211^246^[ADD] if  ( "float".equals ( className )  )  return Float.TYPE; if  ( "double".equals ( className )  )  return Double.TYPE; if  ( "boolean".equals ( className )  )  return Boolean.TYPE; if  ( "byte".equals ( className )  )  return Byte.TYPE; if  ( "char".equals ( className )  )  return Character.TYPE;^[METHOD] findClass [TYPE] Class [PARAMETER] String className [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable prob  [TYPE]  ClassLoader loader  [TYPE]  String className  [TYPE]  Exception e 
[REPLACE]^if  ( "double" .startsWith ( className )   )  return Double.TYPE;^217^^^^^211^246^[REPLACE] if  ( "double".equals ( className )  )  return Double.TYPE;^[METHOD] findClass [TYPE] Class [PARAMETER] String className [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable prob  [TYPE]  ClassLoader loader  [TYPE]  String className  [TYPE]  Exception e 
[ADD]^if  ( "boolean".equals ( className )  )  return Boolean.TYPE;if  ( "byte".equals ( className )  )  return Byte.TYPE;if  ( "char".equals ( className )  )  return Character.TYPE;if  ( "short".equals ( className )  )  return Short.TYPE;^217^218^219^220^221^211^246^[ADD] if  ( "double".equals ( className )  )  return Double.TYPE; if  ( "boolean".equals ( className )  )  return Boolean.TYPE; if  ( "byte".equals ( className )  )  return Byte.TYPE; if  ( "char".equals ( className )  )  return Character.TYPE; if  ( "short".equals ( className )  )  return Short.TYPE;^[METHOD] findClass [TYPE] Class [PARAMETER] String className [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable prob  [TYPE]  ClassLoader loader  [TYPE]  String className  [TYPE]  Exception e 
[ADD]^if  ( "byte".equals ( className )  )  return Byte.TYPE;if  ( "char".equals ( className )  )  return Character.TYPE;if  ( "short".equals ( className )  )  return Short.TYPE;if  ( "void".equals ( className )  )  return Void.TYPE;^218^219^220^221^222^211^246^[ADD] if  ( "boolean".equals ( className )  )  return Boolean.TYPE; if  ( "byte".equals ( className )  )  return Byte.TYPE; if  ( "char".equals ( className )  )  return Character.TYPE; if  ( "short".equals ( className )  )  return Short.TYPE; if  ( "void".equals ( className )  )  return Void.TYPE;^[METHOD] findClass [TYPE] Class [PARAMETER] String className [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable prob  [TYPE]  ClassLoader loader  [TYPE]  String className  [TYPE]  Exception e 
[REPLACE]^if  ( "byte" .startsWith ( className )   )  return Byte.TYPE;^219^^^^^211^246^[REPLACE] if  ( "byte".equals ( className )  )  return Byte.TYPE;^[METHOD] findClass [TYPE] Class [PARAMETER] String className [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable prob  [TYPE]  ClassLoader loader  [TYPE]  String className  [TYPE]  Exception e 
[REPLACE]^if   (  t instanceof RuntimeException  )   {  ;^220^^^^^211^246^[REPLACE] if  ( "char".equals ( className )  )  return Character.TYPE;^[METHOD] findClass [TYPE] Class [PARAMETER] String className [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable prob  [TYPE]  ClassLoader loader  [TYPE]  String className  [TYPE]  Exception e 
[REPLACE]^if  ( "short".startsWith ( className )  )  return Short.TYPE;^221^^^^^211^246^[REPLACE] if  ( "short".equals ( className )  )  return Short.TYPE;^[METHOD] findClass [TYPE] Class [PARAMETER] String className [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable prob  [TYPE]  ClassLoader loader  [TYPE]  String className  [TYPE]  Exception e 
[REPLACE]^if  ( "void".startsWith ( className )  )  return Void.TYPE;^222^^^^^211^246^[REPLACE] if  ( "void".equals ( className )  )  return Void.TYPE;^[METHOD] findClass [TYPE] Class [PARAMETER] String className [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable prob  [TYPE]  ClassLoader loader  [TYPE]  String className  [TYPE]  Exception e 
[ADD]^^225^^^^^211^246^[ADD] Throwable prob = null;^[METHOD] findClass [TYPE] Class [PARAMETER] String className [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable prob  [TYPE]  ClassLoader loader  [TYPE]  String className  [TYPE]  Exception e 
[REPLACE]^Class<?> ec = en.getClass (  )  ;^226^^^^^211^246^[REPLACE] ClassLoader loader = Thread.currentThread (  ) .getContextClassLoader (  ) ;^[METHOD] findClass [TYPE] Class [PARAMETER] String className [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable prob  [TYPE]  ClassLoader loader  [TYPE]  String className  [TYPE]  Exception e 
[REPLACE]^if   (  ctor == null  )   {  ;^228^^^^^211^246^[REPLACE] if  ( loader != null )  {^[METHOD] findClass [TYPE] Class [PARAMETER] String className [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable prob  [TYPE]  ClassLoader loader  [TYPE]  String className  [TYPE]  Exception e 
[ADD]^^228^229^230^231^232^211^246^[ADD] if  ( loader != null )  { try { return Class.forName ( className, true, loader ) ; } catch  ( Exception e )  { prob = getRootCause ( e ) ;^[METHOD] findClass [TYPE] Class [PARAMETER] String className [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable prob  [TYPE]  ClassLoader loader  [TYPE]  String className  [TYPE]  Exception e 
[ADD]^return Class.forName ( className, true, loader ) ;prob = getRootCause ( e ) ;^229^230^231^232^233^211^246^[ADD] try { return Class.forName ( className, true, loader ) ; } catch  ( Exception e )  { prob = getRootCause ( e ) ; }^[METHOD] findClass [TYPE] Class [PARAMETER] String className [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable prob  [TYPE]  ClassLoader loader  [TYPE]  String className  [TYPE]  Exception e 
[REPLACE]^return Class .forName ( className )  ;^230^^^^^211^246^[REPLACE] return Class.forName ( className, true, loader ) ;^[METHOD] findClass [TYPE] Class [PARAMETER] String className [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable prob  [TYPE]  ClassLoader loader  [TYPE]  String className  [TYPE]  Exception e 
[ADD]^^232^^^^^211^246^[ADD] prob = getRootCause ( e ) ;^[METHOD] findClass [TYPE] Class [PARAMETER] String className [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable prob  [TYPE]  ClassLoader loader  [TYPE]  String className  [TYPE]  Exception e 
[REPLACE]^return Class.forName ( className, false, loader ) ;^230^^^^^211^246^[REPLACE] return Class.forName ( className, true, loader ) ;^[METHOD] findClass [TYPE] Class [PARAMETER] String className [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable prob  [TYPE]  ClassLoader loader  [TYPE]  String className  [TYPE]  Exception e 
[REPLACE]^t = getRootCause ( t )  ;^232^^^^^211^246^[REPLACE] prob = getRootCause ( e ) ;^[METHOD] findClass [TYPE] Class [PARAMETER] String className [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable prob  [TYPE]  ClassLoader loader  [TYPE]  String className  [TYPE]  Exception e 
[REPLACE]^if  ( prob != null )  {^238^^^^^211^246^[REPLACE] if  ( prob == null )  {^[METHOD] findClass [TYPE] Class [PARAMETER] String className [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable prob  [TYPE]  ClassLoader loader  [TYPE]  String className  [TYPE]  Exception e 
[REPLACE]^t = getRootCause ( t )  ;^239^^^^^211^246^[REPLACE] prob = getRootCause ( e ) ;^[METHOD] findClass [TYPE] Class [PARAMETER] String className [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable prob  [TYPE]  ClassLoader loader  [TYPE]  String className  [TYPE]  Exception e 
[ADD]^return Class.forName ( className ) ;prob = getRootCause ( e ) ;^235^236^237^238^239^211^246^[ADD] try { return Class.forName ( className ) ; } catch  ( Exception e )  { if  ( prob == null )  { prob = getRootCause ( e ) ;^[METHOD] findClass [TYPE] Class [PARAMETER] String className [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable prob  [TYPE]  ClassLoader loader  [TYPE]  String className  [TYPE]  Exception e 
[REPLACE]^if   (  "short".equals  (  className  )    )   return Short.TYPE;  ;^236^^^^^211^246^[REPLACE] return Class.forName ( className ) ;^[METHOD] findClass [TYPE] Class [PARAMETER] String className [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable prob  [TYPE]  ClassLoader loader  [TYPE]  String className  [TYPE]  Exception e 
[REPLACE]^return Class.getAnnotation ( className ) ;^236^^^^^211^246^[REPLACE] return Class.forName ( className ) ;^[METHOD] findClass [TYPE] Class [PARAMETER] String className [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable prob  [TYPE]  ClassLoader loader  [TYPE]  String className  [TYPE]  Exception e 
[REPLACE]^if  ( ! prob instanceof RuntimeException )  {^242^^^^^211^246^[REPLACE] if  ( prob instanceof RuntimeException )  {^[METHOD] findClass [TYPE] Class [PARAMETER] String className [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable prob  [TYPE]  ClassLoader loader  [TYPE]  String className  [TYPE]  Exception e 
[REMOVE]^if  ( primitiveType ==  ( TYPE )  )  {     return class; }^242^^^^^211^246^[REMOVE] ^[METHOD] findClass [TYPE] Class [PARAMETER] String className [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable prob  [TYPE]  ClassLoader loader  [TYPE]  String className  [TYPE]  Exception e 
[ADD]^^243^^^^^211^246^[ADD] throw  ( RuntimeException )  prob;^[METHOD] findClass [TYPE] Class [PARAMETER] String className [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable prob  [TYPE]  ClassLoader loader  [TYPE]  String className  [TYPE]  Exception e 
[REPLACE]^return ;^243^^^^^211^246^[REPLACE] throw  ( RuntimeException )  prob;^[METHOD] findClass [TYPE] Class [PARAMETER] String className [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable prob  [TYPE]  ClassLoader loader  [TYPE]  String className  [TYPE]  Exception e 
[REPLACE]^return ;^245^^^^^211^246^[REPLACE] throw new ClassNotFoundException  (" ")  ;^[METHOD] findClass [TYPE] Class [PARAMETER] String className [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable prob  [TYPE]  ClassLoader loader  [TYPE]  String className  [TYPE]  Exception e 
[REPLACE]^( e.getMessage (  )  )  ;^245^^^^^211^246^[REPLACE] throw new ClassNotFoundException  (" ")  ;^[METHOD] findClass [TYPE] Class [PARAMETER] String className [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable prob  [TYPE]  ClassLoader loader  [TYPE]  String className  [TYPE]  Exception e 
[REPLACE]^if  ( Modifier.isStatic ( m.getParameterTypes (  )  )  )  {^257^^^^^255^271^[REPLACE] if  ( Modifier.isStatic ( m.getModifiers (  )  )  )  {^[METHOD] hasGetterSignature [TYPE] boolean [PARAMETER] Method m [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Method m  [TYPE]  Class[] pts  [TYPE]  boolean false  true 
[ADD]^^257^258^259^^^255^271^[ADD] if  ( Modifier.isStatic ( m.getModifiers (  )  )  )  { return false; }^[METHOD] hasGetterSignature [TYPE] boolean [PARAMETER] Method m [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Method m  [TYPE]  Class[] pts  [TYPE]  boolean false  true 
[REPLACE]^return true;^258^^^^^255^271^[REPLACE] return false;^[METHOD] hasGetterSignature [TYPE] boolean [PARAMETER] Method m [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Method m  [TYPE]  Class[] pts  [TYPE]  boolean false  true 
[REPLACE]^Class<?>[] pts = m .getReturnType (  )  ;^261^^^^^255^271^[REPLACE] Class<?>[] pts = m.getParameterTypes (  ) ;^[METHOD] hasGetterSignature [TYPE] boolean [PARAMETER] Method m [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Method m  [TYPE]  Class[] pts  [TYPE]  boolean false  true 
[REPLACE]^if  ( pts != null ) {^262^^^^^255^271^[REPLACE] if  ( pts != null && pts.length != 0 )  {^[METHOD] hasGetterSignature [TYPE] boolean [PARAMETER] Method m [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Method m  [TYPE]  Class[] pts  [TYPE]  boolean false  true 
[REPLACE]^return true;^263^^^^^255^271^[REPLACE] return false;^[METHOD] hasGetterSignature [TYPE] boolean [PARAMETER] Method m [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Method m  [TYPE]  Class[] pts  [TYPE]  boolean false  true 
[REPLACE]^if  ( Void.TYPE  &&  m.getReturnType (  )  )  {^266^^^^^255^271^[REPLACE] if  ( Void.TYPE == m.getReturnType (  )  )  {^[METHOD] hasGetterSignature [TYPE] boolean [PARAMETER] Method m [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Method m  [TYPE]  Class[] pts  [TYPE]  boolean false  true 
[ADD]^return false;^266^267^268^^^255^271^[ADD] if  ( Void.TYPE == m.getReturnType (  )  )  { return false; }^[METHOD] hasGetterSignature [TYPE] boolean [PARAMETER] Method m [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Method m  [TYPE]  Class[] pts  [TYPE]  boolean false  true 
[REPLACE]^return true;^267^^^^^255^271^[REPLACE] return false;^[METHOD] hasGetterSignature [TYPE] boolean [PARAMETER] Method m [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Method m  [TYPE]  Class[] pts  [TYPE]  boolean false  true 
[REPLACE]^return false;  ;^267^^^^^255^271^[REPLACE] return false;^[METHOD] hasGetterSignature [TYPE] boolean [PARAMETER] Method m [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Method m  [TYPE]  Class[] pts  [TYPE]  boolean false  true 
[REPLACE]^return false;^270^^^^^255^271^[REPLACE] return true;^[METHOD] hasGetterSignature [TYPE] boolean [PARAMETER] Method m [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Method m  [TYPE]  Class[] pts  [TYPE]  boolean false  true 
[REPLACE]^if   (  t instanceof RuntimeException  )   {  ;^390^^^^^387^405^[REPLACE] if  ( canFixAccess )  {^[METHOD] findConstructor [TYPE] <T> [PARAMETER] Class<T> cls boolean canFixAccess [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  boolean canFixAccess  false  true  [TYPE]  Constructor ctor  [TYPE]  EnumTypeLocator instance  [TYPE]  Class cls  [TYPE]  Exception e  [TYPE]  NoSuchMethodException e 
[REPLACE]^if   (  !Modifier.isStatic  (  type.getModifiers  (    )    )    )   {  ;^394^^^^^390^397^[REPLACE] if  ( !Modifier.isPublic ( ctor.getModifiers (  )  )  )  {^[METHOD] findConstructor [TYPE] <T> [PARAMETER] Class<T> cls boolean canFixAccess [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  boolean canFixAccess  false  true  [TYPE]  Constructor ctor  [TYPE]  EnumTypeLocator instance  [TYPE]  Class cls  [TYPE]  Exception e  [TYPE]  NoSuchMethodException e 
[REPLACE]^return ;^395^^^^^390^397^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] findConstructor [TYPE] <T> [PARAMETER] Class<T> cls boolean canFixAccess [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  boolean canFixAccess  false  true  [TYPE]  Constructor ctor  [TYPE]  EnumTypeLocator instance  [TYPE]  Class cls  [TYPE]  Exception e  [TYPE]  NoSuchMethodException e 
[REPLACE]^enumTypeFor ( s )  ;^391^^^^^387^405^[REPLACE] checkAndFixAccess ( ctor ) ;^[METHOD] findConstructor [TYPE] <T> [PARAMETER] Class<T> cls boolean canFixAccess [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  boolean canFixAccess  false  true  [TYPE]  Constructor ctor  [TYPE]  EnumTypeLocator instance  [TYPE]  Class cls  [TYPE]  Exception e  [TYPE]  NoSuchMethodException e 
[REPLACE]^if  ( Modifier.isPublic ( ctor.getModifiers (  )  )  )  {^394^^^^^387^405^[REPLACE] if  ( !Modifier.isPublic ( ctor.getModifiers (  )  )  )  {^[METHOD] findConstructor [TYPE] <T> [PARAMETER] Class<T> cls boolean canFixAccess [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  boolean canFixAccess  false  true  [TYPE]  Constructor ctor  [TYPE]  EnumTypeLocator instance  [TYPE]  Class cls  [TYPE]  Exception e  [TYPE]  NoSuchMethodException e 
[REPLACE]^return ;^395^^^^^387^405^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] findConstructor [TYPE] <T> [PARAMETER] Class<T> cls boolean canFixAccess [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  boolean canFixAccess  false  true  [TYPE]  Constructor ctor  [TYPE]  EnumTypeLocator instance  [TYPE]  Class cls  [TYPE]  Exception e  [TYPE]  NoSuchMethodException e 
[REPLACE]^cls.getName (  )  ;^395^^^^^387^405^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] findConstructor [TYPE] <T> [PARAMETER] Class<T> cls boolean canFixAccess [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  boolean canFixAccess  false  true  [TYPE]  Constructor ctor  [TYPE]  EnumTypeLocator instance  [TYPE]  Class cls  [TYPE]  Exception e  [TYPE]  NoSuchMethodException e 
[ADD]^Constructor<T> ctor = cls.getDeclaredConstructor (  ) ;checkAndFixAccess ( ctor ) ;^388^389^390^391^392^387^405^[ADD] try { Constructor<T> ctor = cls.getDeclaredConstructor (  ) ; if  ( canFixAccess )  { checkAndFixAccess ( ctor ) ; } else {^[METHOD] findConstructor [TYPE] <T> [PARAMETER] Class<T> cls boolean canFixAccess [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  boolean canFixAccess  false  true  [TYPE]  Constructor ctor  [TYPE]  EnumTypeLocator instance  [TYPE]  Class cls  [TYPE]  Exception e  [TYPE]  NoSuchMethodException e 
[ADD]^^390^391^392^^^387^405^[ADD] if  ( canFixAccess )  { checkAndFixAccess ( ctor ) ; } else {^[METHOD] findConstructor [TYPE] <T> [PARAMETER] Class<T> cls boolean canFixAccess [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  boolean canFixAccess  false  true  [TYPE]  Constructor ctor  [TYPE]  EnumTypeLocator instance  [TYPE]  Class cls  [TYPE]  Exception e  [TYPE]  NoSuchMethodException e 
[REPLACE]^if  ( Modifier.isStatic ( ctor.getModifiers (  )  )  )  {^394^^^^^390^397^[REPLACE] if  ( !Modifier.isPublic ( ctor.getModifiers (  )  )  )  {^[METHOD] findConstructor [TYPE] <T> [PARAMETER] Class<T> cls boolean canFixAccess [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  boolean canFixAccess  false  true  [TYPE]  Constructor ctor  [TYPE]  EnumTypeLocator instance  [TYPE]  Class cls  [TYPE]  Exception e  [TYPE]  NoSuchMethodException e 
[REPLACE]^checkAndFixAccess ( true ) ;^391^^^^^387^405^[REPLACE] checkAndFixAccess ( ctor ) ;^[METHOD] findConstructor [TYPE] <T> [PARAMETER] Class<T> cls boolean canFixAccess [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  boolean canFixAccess  false  true  [TYPE]  Constructor ctor  [TYPE]  EnumTypeLocator instance  [TYPE]  Class cls  [TYPE]  Exception e  [TYPE]  NoSuchMethodException e 
[REPLACE]^return ctor;  ;^398^^^^^387^405^[REPLACE] return ctor;^[METHOD] findConstructor [TYPE] <T> [PARAMETER] Class<T> cls boolean canFixAccess [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  boolean canFixAccess  false  true  [TYPE]  Constructor ctor  [TYPE]  EnumTypeLocator instance  [TYPE]  Class cls  [TYPE]  Exception e  [TYPE]  NoSuchMethodException e 
[REPLACE]^Constructor<T> ctor = this.getDeclaredConstructor (  ) ;^389^^^^^387^405^[REPLACE] Constructor<T> ctor = cls.getDeclaredConstructor (  ) ;^[METHOD] findConstructor [TYPE] <T> [PARAMETER] Class<T> cls boolean canFixAccess [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  boolean canFixAccess  false  true  [TYPE]  Constructor ctor  [TYPE]  EnumTypeLocator instance  [TYPE]  Class cls  [TYPE]  Exception e  [TYPE]  NoSuchMethodException e 
[ADD]^^395^^^^^387^405^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] findConstructor [TYPE] <T> [PARAMETER] Class<T> cls boolean canFixAccess [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  boolean canFixAccess  false  true  [TYPE]  Constructor ctor  [TYPE]  EnumTypeLocator instance  [TYPE]  Class cls  [TYPE]  Exception e  [TYPE]  NoSuchMethodException e 
[REPLACE]^Constructor<T> ctor = false.getDeclaredConstructor (  ) ;^389^^^^^387^405^[REPLACE] Constructor<T> ctor = cls.getDeclaredConstructor (  ) ;^[METHOD] findConstructor [TYPE] <T> [PARAMETER] Class<T> cls boolean canFixAccess [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  boolean canFixAccess  false  true  [TYPE]  Constructor ctor  [TYPE]  EnumTypeLocator instance  [TYPE]  Class cls  [TYPE]  Exception e  [TYPE]  NoSuchMethodException e 
[REPLACE]^return this;^404^^^^^387^405^[REPLACE] return null;^[METHOD] findConstructor [TYPE] <T> [PARAMETER] Class<T> cls boolean canFixAccess [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  boolean canFixAccess  false  true  [TYPE]  Constructor ctor  [TYPE]  EnumTypeLocator instance  [TYPE]  Class cls  [TYPE]  Exception e  [TYPE]  NoSuchMethodException e 
[REPLACE]^if  (   Integer.TYPE )  {^419^^^^^418^444^[REPLACE] if  ( cls == Integer.TYPE )  {^[METHOD] defaultValue [TYPE] Object [PARAMETER] Class<?> cls [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Class cls  [TYPE]  boolean false  true 
[ADD]^return Integer.valueOf ( 0 ) ;^419^420^421^^^418^444^[ADD] if  ( cls == Integer.TYPE )  { return Integer.valueOf ( 0 ) ; }^[METHOD] defaultValue [TYPE] Object [PARAMETER] Class<?> cls [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Class cls  [TYPE]  boolean false  true 
[REPLACE]^return Integer.valueOf ( 0 >>> 3 ) ;^420^^^^^418^444^[REPLACE] return Integer.valueOf ( 0 ) ;^[METHOD] defaultValue [TYPE] Object [PARAMETER] Class<?> cls [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Class cls  [TYPE]  boolean false  true 
[REPLACE]^return Integer.valueOf ( 1 ) ;^420^^^^^418^444^[REPLACE] return Integer.valueOf ( 0 ) ;^[METHOD] defaultValue [TYPE] Object [PARAMETER] Class<?> cls [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Class cls  [TYPE]  boolean false  true 
[REPLACE]^if  ( this  !=  Long.TYPE )  {^422^^^^^418^444^[REPLACE] if  ( cls == Long.TYPE )  {^[METHOD] defaultValue [TYPE] Object [PARAMETER] Class<?> cls [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Class cls  [TYPE]  boolean false  true 
[ADD]^return Long.valueOf ( 0L ) ;^422^423^424^^^418^444^[ADD] if  ( cls == Long.TYPE )  { return Long.valueOf ( 0L ) ; }^[METHOD] defaultValue [TYPE] Object [PARAMETER] Class<?> cls [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Class cls  [TYPE]  boolean false  true 
[REPLACE]^return Long.valueOf ( 0 ) ;^423^^^^^418^444^[REPLACE] return Long.valueOf ( 0L ) ;^[METHOD] defaultValue [TYPE] Object [PARAMETER] Class<?> cls [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Class cls  [TYPE]  boolean false  true 
[REPLACE]^if  ( 1  !=  Boolean.TYPE )  {^425^^^^^418^444^[REPLACE] if  ( cls == Boolean.TYPE )  {^[METHOD] defaultValue [TYPE] Object [PARAMETER] Class<?> cls [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Class cls  [TYPE]  boolean false  true 
[ADD]^return Boolean.FALSE;^425^426^427^^^418^444^[ADD] if  ( cls == Boolean.TYPE )  { return Boolean.FALSE; }^[METHOD] defaultValue [TYPE] Object [PARAMETER] Class<?> cls [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Class cls  [TYPE]  boolean false  true 
[REPLACE]^if   (  "short".equals  (  className  )    )   return Short.TYPE;  ;^426^^^^^418^444^[REPLACE] return Boolean.FALSE;^[METHOD] defaultValue [TYPE] Object [PARAMETER] Class<?> cls [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Class cls  [TYPE]  boolean false  true 
[REPLACE]^if  (   Double.TYPE )  {^428^^^^^418^444^[REPLACE] if  ( cls == Double.TYPE )  {^[METHOD] defaultValue [TYPE] Object [PARAMETER] Class<?> cls [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Class cls  [TYPE]  boolean false  true 
[ADD]^^428^429^430^^^418^444^[ADD] if  ( cls == Double.TYPE )  { return Double.valueOf ( 0.0 ) ; }^[METHOD] defaultValue [TYPE] Object [PARAMETER] Class<?> cls [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Class cls  [TYPE]  boolean false  true 
[REPLACE]^return Double.valueOf ( 0.0D ) ;^429^^^^^418^444^[REPLACE] return Double.valueOf ( 0.0 ) ;^[METHOD] defaultValue [TYPE] Object [PARAMETER] Class<?> cls [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Class cls  [TYPE]  boolean false  true 
[REPLACE]^if   (  cls == Byte.TYPE  )   {  ;^431^^^^^418^444^[REPLACE] if  ( cls == Float.TYPE )  {^[METHOD] defaultValue [TYPE] Object [PARAMETER] Class<?> cls [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Class cls  [TYPE]  boolean false  true 
[REPLACE]^if   (  "short".equals  (  className  )    )   return Short.TYPE;  ;^432^^^^^418^444^[REPLACE] return Float.valueOf ( 0.0f ) ;^[METHOD] defaultValue [TYPE] Object [PARAMETER] Class<?> cls [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Class cls  [TYPE]  boolean false  true 
[REPLACE]^if  ( cls  !=  Byte.TYPE )  {^434^^^^^418^444^[REPLACE] if  ( cls == Byte.TYPE )  {^[METHOD] defaultValue [TYPE] Object [PARAMETER] Class<?> cls [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Class cls  [TYPE]  boolean false  true 
[REPLACE]^return Byte .valueOf ( null )  ;^435^^^^^418^444^[REPLACE] return Byte.valueOf (  ( byte )  0 ) ;^[METHOD] defaultValue [TYPE] Object [PARAMETER] Class<?> cls [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Class cls  [TYPE]  boolean false  true 
[REPLACE]^if   (  "short".equals  (  className  )    )   return Short.TYPE;  ;^435^^^^^418^444^[REPLACE] return Byte.valueOf (  ( byte )  0 ) ;^[METHOD] defaultValue [TYPE] Object [PARAMETER] Class<?> cls [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Class cls  [TYPE]  boolean false  true 
[REPLACE]^if   (  cls == Byte.TYPE  )   {  ;^437^^^^^418^444^[REPLACE] if  ( cls == Short.TYPE )  {^[METHOD] defaultValue [TYPE] Object [PARAMETER] Class<?> cls [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Class cls  [TYPE]  boolean false  true 
[REPLACE]^if   (  "short".equals  (  className  )    )   return Short.TYPE;  ;^438^^^^^418^444^[REPLACE] return Short.valueOf (  ( short )  0 ) ;^[METHOD] defaultValue [TYPE] Object [PARAMETER] Class<?> cls [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Class cls  [TYPE]  boolean false  true 
[REPLACE]^if   (  cls == Byte.TYPE  )   {  ;^440^^^^^418^444^[REPLACE] if  ( cls == Character.TYPE )  {^[METHOD] defaultValue [TYPE] Object [PARAMETER] Class<?> cls [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Class cls  [TYPE]  boolean false  true 
[ADD]^return '\0';^440^441^442^^^418^444^[ADD] if  ( cls == Character.TYPE )  { return '\0'; }^[METHOD] defaultValue [TYPE] Object [PARAMETER] Class<?> cls [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Class cls  [TYPE]  boolean false  true 
[REPLACE]^return '\0';  ;^441^^^^^418^444^[REPLACE] return '\0';^[METHOD] defaultValue [TYPE] Object [PARAMETER] Class<?> cls [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Class cls  [TYPE]  boolean false  true 
[ADD]^^443^^^^^418^444^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] defaultValue [TYPE] Object [PARAMETER] Class<?> cls [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Class cls  [TYPE]  boolean false  true 
[REPLACE]^cls.getName (  )  ;^443^^^^^418^444^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] defaultValue [TYPE] Object [PARAMETER] Class<?> cls [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Class cls  [TYPE]  boolean false  true 
[REMOVE]^( f.getType (  )  )  ;^443^^^^^418^444^[REMOVE] ^[METHOD] defaultValue [TYPE] Object [PARAMETER] Class<?> cls [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Class cls  [TYPE]  boolean false  true 
[REPLACE]^if  ( null  !=  Integer.TYPE )  {^452^^^^^451^477^[REPLACE] if  ( primitiveType == Integer.TYPE )  {^[METHOD] wrapperType [TYPE] Class [PARAMETER] Class<?> primitiveType [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Class primitiveType  [TYPE]  boolean false  true 
[ADD]^return Integer.class;^452^453^454^^^451^477^[ADD] if  ( primitiveType == Integer.TYPE )  { return Integer.class; }^[METHOD] wrapperType [TYPE] Class [PARAMETER] Class<?> primitiveType [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Class primitiveType  [TYPE]  boolean false  true 
[REPLACE]^if   (  "short".equals  (  className  )    )   return Short.TYPE;  ;^453^^^^^451^477^[REPLACE] return Integer.class;^[METHOD] wrapperType [TYPE] Class [PARAMETER] Class<?> primitiveType [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Class primitiveType  [TYPE]  boolean false  true 
[REPLACE]^if   (  primitiveType == Short.TYPE  )   {  ;^455^^^^^451^477^[REPLACE] if  ( primitiveType == Long.TYPE )  {^[METHOD] wrapperType [TYPE] Class [PARAMETER] Class<?> primitiveType [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Class primitiveType  [TYPE]  boolean false  true 
[REMOVE]^if  ( primitiveType ==  ( TYPE )  )  {     return class; }^455^^^^^451^477^[REMOVE] ^[METHOD] wrapperType [TYPE] Class [PARAMETER] Class<?> primitiveType [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Class primitiveType  [TYPE]  boolean false  true 
[REPLACE]^if   (  "short".equals  (  className  )    )   return Short.TYPE;  ;^456^^^^^451^477^[REPLACE] return Long.class;^[METHOD] wrapperType [TYPE] Class [PARAMETER] Class<?> primitiveType [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Class primitiveType  [TYPE]  boolean false  true 
[REPLACE]^if  ( primitiveType  !=  Boolean.TYPE )  {^458^^^^^451^477^[REPLACE] if  ( primitiveType == Boolean.TYPE )  {^[METHOD] wrapperType [TYPE] Class [PARAMETER] Class<?> primitiveType [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Class primitiveType  [TYPE]  boolean false  true 
[REPLACE]^if   (  "short".equals  (  className  )    )   return Short.TYPE;  ;^459^^^^^451^477^[REPLACE] return Boolean.class;^[METHOD] wrapperType [TYPE] Class [PARAMETER] Class<?> primitiveType [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Class primitiveType  [TYPE]  boolean false  true 
[REPLACE]^if   (  primitiveType == Long.TYPE  )   {  ;^461^^^^^451^477^[REPLACE] if  ( primitiveType == Double.TYPE )  {^[METHOD] wrapperType [TYPE] Class [PARAMETER] Class<?> primitiveType [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Class primitiveType  [TYPE]  boolean false  true 
[REPLACE]^if   (  "short".equals  (  className  )    )   return Short.TYPE;  ;^462^^^^^451^477^[REPLACE] return Double.class;^[METHOD] wrapperType [TYPE] Class [PARAMETER] Class<?> primitiveType [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Class primitiveType  [TYPE]  boolean false  true 
[REPLACE]^if  ( null  !=  Float.TYPE )  {^464^^^^^451^477^[REPLACE] if  ( primitiveType == Float.TYPE )  {^[METHOD] wrapperType [TYPE] Class [PARAMETER] Class<?> primitiveType [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Class primitiveType  [TYPE]  boolean false  true 
[ADD]^return Float.class;^464^465^466^^^451^477^[ADD] if  ( primitiveType == Float.TYPE )  { return Float.class; }^[METHOD] wrapperType [TYPE] Class [PARAMETER] Class<?> primitiveType [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Class primitiveType  [TYPE]  boolean false  true 
[REPLACE]^if   (  "short".equals  (  className  )    )   return Short.TYPE;  ;^465^^^^^451^477^[REPLACE] return Float.class;^[METHOD] wrapperType [TYPE] Class [PARAMETER] Class<?> primitiveType [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Class primitiveType  [TYPE]  boolean false  true 
[REPLACE]^if   (  primitiveType == Long.TYPE  )   {  ;^467^^^^^451^477^[REPLACE] if  ( primitiveType == Byte.TYPE )  {^[METHOD] wrapperType [TYPE] Class [PARAMETER] Class<?> primitiveType [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Class primitiveType  [TYPE]  boolean false  true 
[REPLACE]^if   (  "short".equals  (  className  )    )   return Short.TYPE;  ;^468^^^^^451^477^[REPLACE] return Byte.class;^[METHOD] wrapperType [TYPE] Class [PARAMETER] Class<?> primitiveType [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Class primitiveType  [TYPE]  boolean false  true 
[REPLACE]^if  (   Short.TYPE )  {^470^^^^^451^477^[REPLACE] if  ( primitiveType == Short.TYPE )  {^[METHOD] wrapperType [TYPE] Class [PARAMETER] Class<?> primitiveType [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Class primitiveType  [TYPE]  boolean false  true 
[REPLACE]^if   (  "short".equals  (  className  )    )   return Short.TYPE;  ;^471^^^^^451^477^[REPLACE] return Short.class;^[METHOD] wrapperType [TYPE] Class [PARAMETER] Class<?> primitiveType [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Class primitiveType  [TYPE]  boolean false  true 
[REPLACE]^if  ( primitiveType  !=  Character.TYPE )  {^473^^^^^451^477^[REPLACE] if  ( primitiveType == Character.TYPE )  {^[METHOD] wrapperType [TYPE] Class [PARAMETER] Class<?> primitiveType [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Class primitiveType  [TYPE]  boolean false  true 
[REPLACE]^if   (  "short".equals  (  className  )    )   return Short.TYPE;  ;^474^^^^^451^477^[REPLACE] return Character.class;^[METHOD] wrapperType [TYPE] Class [PARAMETER] Class<?> primitiveType [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Class primitiveType  [TYPE]  boolean false  true 
[ADD]^^476^^^^^451^477^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] wrapperType [TYPE] Class [PARAMETER] Class<?> primitiveType [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Class primitiveType  [TYPE]  boolean false  true 
[REPLACE]^( f.getType (  )  )  ;^476^^^^^451^477^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] wrapperType [TYPE] Class [PARAMETER] Class<?> primitiveType [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  EnumTypeLocator instance  [TYPE]  Class primitiveType  [TYPE]  boolean false  true 
[REPLACE]^Class<?> ec = en.getClass (  )  ;^494^^^^^492^514^[REPLACE] AccessibleObject ao =  ( AccessibleObject )  member;^[METHOD] checkAndFixAccess [TYPE] void [PARAMETER] Member member [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  AccessibleObject ao  [TYPE]  SecurityException se  [TYPE]  Class declClass  [TYPE]  Member member 
[REPLACE]^if  ( ao.isAccessible (  )  )  {^508^^^^^492^514^[REPLACE] if  ( !ao.isAccessible (  )  )  {^[METHOD] checkAndFixAccess [TYPE] void [PARAMETER] Member member [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  AccessibleObject ao  [TYPE]  SecurityException se  [TYPE]  Class declClass  [TYPE]  Member member 
[REPLACE]^Class<?> declClass = member.getModifiers (  ) ;^509^^^^^492^514^[REPLACE] Class<?> declClass = member.getDeclaringClass (  ) ;^[METHOD] checkAndFixAccess [TYPE] void [PARAMETER] Member member [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  AccessibleObject ao  [TYPE]  SecurityException se  [TYPE]  Class declClass  [TYPE]  Member member 
[ADD]^^510^^^^^492^514^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] checkAndFixAccess [TYPE] void [PARAMETER] Member member [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  AccessibleObject ao  [TYPE]  SecurityException se  [TYPE]  Class declClass  [TYPE]  Member member 
[ADD]^ao.setAccessible ( true ) ;^501^502^503^^505^492^514^[ADD] try { ao.setAccessible ( true ) ; } catch  ( SecurityException se )  {^[METHOD] checkAndFixAccess [TYPE] void [PARAMETER] Member member [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  AccessibleObject ao  [TYPE]  SecurityException se  [TYPE]  Class declClass  [TYPE]  Member member 
[REPLACE]^ao.setAccessible ( false ) ;^502^^^^^492^514^[REPLACE] ao.setAccessible ( true ) ;^[METHOD] checkAndFixAccess [TYPE] void [PARAMETER] Member member [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  AccessibleObject ao  [TYPE]  SecurityException se  [TYPE]  Class declClass  [TYPE]  Member member 
[REPLACE]^throw new IllegalArgumentException (  (  ( "Class " +  ( primitiveType.getName (  )  )  )  + " is not a primitive type" )  )  ;^510^^^^^492^514^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] checkAndFixAccess [TYPE] void [PARAMETER] Member member [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  AccessibleObject ao  [TYPE]  SecurityException se  [TYPE]  Class declClass  [TYPE]  Member member 
[REPLACE]^Field found = true;^661^^^^^660^686^[REPLACE] Field found = null;^[METHOD] locateField [TYPE] Field [PARAMETER] Class<?> fromClass String expectedName Class<?> type [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  f  field  found  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable t  [TYPE]  Class fromClass  type  [TYPE]  String expectedName  [TYPE]  Field[] fields 
[ADD]^^663^^^^^660^686^[ADD] Field[] fields = fromClass.getDeclaredFields (  ) ;^[METHOD] locateField [TYPE] Field [PARAMETER] Class<?> fromClass String expectedName Class<?> type [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  f  field  found  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable t  [TYPE]  Class fromClass  type  [TYPE]  String expectedName  [TYPE]  Field[] fields 
[REPLACE]^if  ( expectedName.equals ( f.getType (  )  )  || f.getType (  )  == type )  {^665^^^^^660^686^[REPLACE] if  ( expectedName.equals ( f.getName (  )  )  && f.getType (  )  == type )  {^[METHOD] locateField [TYPE] Field [PARAMETER] Class<?> fromClass String expectedName Class<?> type [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  f  field  found  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable t  [TYPE]  Class fromClass  type  [TYPE]  String expectedName  [TYPE]  Field[] fields 
[REPLACE]^found =  field;^666^^^^^660^686^[REPLACE] found = f;^[METHOD] locateField [TYPE] Field [PARAMETER] Class<?> fromClass String expectedName Class<?> type [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  f  field  found  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable t  [TYPE]  Class fromClass  type  [TYPE]  String expectedName  [TYPE]  Field[] fields 
[REPLACE]^for  ( Field field : fields )  {^664^^^^^660^686^[REPLACE] for  ( Field f : fields )  {^[METHOD] locateField [TYPE] Field [PARAMETER] Class<?> fromClass String expectedName Class<?> type [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  f  field  found  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable t  [TYPE]  Class fromClass  type  [TYPE]  String expectedName  [TYPE]  Field[] fields 
[REPLACE]^if  ( expectedName.equals ( f.getName (  )  )  || f.getType (  )  == type )  {^665^^^^^660^686^[REPLACE] if  ( expectedName.equals ( f.getName (  )  )  && f.getType (  )  == type )  {^[METHOD] locateField [TYPE] Field [PARAMETER] Class<?> fromClass String expectedName Class<?> type [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  f  field  found  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable t  [TYPE]  Class fromClass  type  [TYPE]  String expectedName  [TYPE]  Field[] fields 
[ADD]^^666^667^^^^660^686^[ADD] found = f; break;^[METHOD] locateField [TYPE] Field [PARAMETER] Class<?> fromClass String expectedName Class<?> type [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  f  field  found  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable t  [TYPE]  Class fromClass  type  [TYPE]  String expectedName  [TYPE]  Field[] fields 
[REPLACE]^found =  null;^666^^^^^660^686^[REPLACE] found = f;^[METHOD] locateField [TYPE] Field [PARAMETER] Class<?> fromClass String expectedName Class<?> type [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  f  field  found  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable t  [TYPE]  Class fromClass  type  [TYPE]  String expectedName  [TYPE]  Field[] fields 
[REPLACE]^Field found = null  ;^664^^^^^660^686^[REPLACE] for  ( Field f : fields )  {^[METHOD] locateField [TYPE] Field [PARAMETER] Class<?> fromClass String expectedName Class<?> type [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  f  field  found  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable t  [TYPE]  Class fromClass  type  [TYPE]  String expectedName  [TYPE]  Field[] fields 
[REPLACE]^if  ( field != this )  {^671^^^^^660^686^[REPLACE] if  ( found == null )  {^[METHOD] locateField [TYPE] Field [PARAMETER] Class<?> fromClass String expectedName Class<?> type [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  f  field  found  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable t  [TYPE]  Class fromClass  type  [TYPE]  String expectedName  [TYPE]  Field[] fields 
[ADD]^^671^672^673^^675^660^686^[ADD] if  ( found == null )  { for  ( Field f : fields )  { if  ( f.getType (  )  == type )  { if  ( found != null )  return null;^[METHOD] locateField [TYPE] Field [PARAMETER] Class<?> fromClass String expectedName Class<?> type [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  f  field  found  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable t  [TYPE]  Class fromClass  type  [TYPE]  String expectedName  [TYPE]  Field[] fields 
[REPLACE]^if  ( f.getType (  )   != this )  {^673^^^^^660^686^[REPLACE] if  ( f.getType (  )  == type )  {^[METHOD] locateField [TYPE] Field [PARAMETER] Class<?> fromClass String expectedName Class<?> type [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  f  field  found  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable t  [TYPE]  Class fromClass  type  [TYPE]  String expectedName  [TYPE]  Field[] fields 
[REPLACE]^if   (  found != null  )   return null; found = f;  ;^675^^^^^660^686^[REPLACE] if  ( found != null )  return null;^[METHOD] locateField [TYPE] Field [PARAMETER] Class<?> fromClass String expectedName Class<?> type [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  f  field  found  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable t  [TYPE]  Class fromClass  type  [TYPE]  String expectedName  [TYPE]  Field[] fields 
[REPLACE]^if  ( found != this )  return this;^675^^^^^660^686^[REPLACE] if  ( found != null )  return null;^[METHOD] locateField [TYPE] Field [PARAMETER] Class<?> fromClass String expectedName Class<?> type [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  f  field  found  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable t  [TYPE]  Class fromClass  type  [TYPE]  String expectedName  [TYPE]  Field[] fields 
[REPLACE]^found =  field;^676^^^^^660^686^[REPLACE] found = f;^[METHOD] locateField [TYPE] Field [PARAMETER] Class<?> fromClass String expectedName Class<?> type [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  f  field  found  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable t  [TYPE]  Class fromClass  type  [TYPE]  String expectedName  [TYPE]  Field[] fields 
[REPLACE]^return null;  ;^675^^^^^660^686^[REPLACE] if  ( found != null )  return null;^[METHOD] locateField [TYPE] Field [PARAMETER] Class<?> fromClass String expectedName Class<?> type [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  f  field  found  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable t  [TYPE]  Class fromClass  type  [TYPE]  String expectedName  [TYPE]  Field[] fields 
[REMOVE]^if  ( type.isArray (  )  )  {     return "array"; }^675^^^^^660^686^[REMOVE] ^[METHOD] locateField [TYPE] Field [PARAMETER] Class<?> fromClass String expectedName Class<?> type [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  f  field  found  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable t  [TYPE]  Class fromClass  type  [TYPE]  String expectedName  [TYPE]  Field[] fields 
[REPLACE]^found =  field;^676^^^^^671^679^[REPLACE] found = f;^[METHOD] locateField [TYPE] Field [PARAMETER] Class<?> fromClass String expectedName Class<?> type [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  f  field  found  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable t  [TYPE]  Class fromClass  type  [TYPE]  String expectedName  [TYPE]  Field[] fields 
[REPLACE]^return null;  ;^675^^^^^671^679^[REPLACE] if  ( found != null )  return null;^[METHOD] locateField [TYPE] Field [PARAMETER] Class<?> fromClass String expectedName Class<?> type [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  f  field  found  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable t  [TYPE]  Class fromClass  type  [TYPE]  String expectedName  [TYPE]  Field[] fields 
[REPLACE]^Field found = null  ;^672^^^^^671^679^[REPLACE] for  ( Field f : fields )  {^[METHOD] locateField [TYPE] Field [PARAMETER] Class<?> fromClass String expectedName Class<?> type [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  f  field  found  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable t  [TYPE]  Class fromClass  type  [TYPE]  String expectedName  [TYPE]  Field[] fields 
[REPLACE]^if  ( f.getType (  )   !=  type )  {^673^^^^^660^686^[REPLACE] if  ( f.getType (  )  == type )  {^[METHOD] locateField [TYPE] Field [PARAMETER] Class<?> fromClass String expectedName Class<?> type [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  f  field  found  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable t  [TYPE]  Class fromClass  type  [TYPE]  String expectedName  [TYPE]  Field[] fields 
[REPLACE]^if  ( found == null )  return null;^675^^^^^660^686^[REPLACE] if  ( found != null )  return null;^[METHOD] locateField [TYPE] Field [PARAMETER] Class<?> fromClass String expectedName Class<?> type [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  f  field  found  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable t  [TYPE]  Class fromClass  type  [TYPE]  String expectedName  [TYPE]  Field[] fields 
[REPLACE]^if  ( found != true )  return true;^675^^^^^660^686^[REPLACE] if  ( found != null )  return null;^[METHOD] locateField [TYPE] Field [PARAMETER] Class<?> fromClass String expectedName Class<?> type [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  f  field  found  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable t  [TYPE]  Class fromClass  type  [TYPE]  String expectedName  [TYPE]  Field[] fields 
[REPLACE]^if  ( field == null )  return null;^675^^^^^660^686^[REPLACE] if  ( found != null )  return null;^[METHOD] locateField [TYPE] Field [PARAMETER] Class<?> fromClass String expectedName Class<?> type [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  f  field  found  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable t  [TYPE]  Class fromClass  type  [TYPE]  String expectedName  [TYPE]  Field[] fields 
[ADD]^found = f;^675^676^677^^^660^686^[ADD] if  ( found != null )  return null; found = f; }^[METHOD] locateField [TYPE] Field [PARAMETER] Class<?> fromClass String expectedName Class<?> type [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  f  field  found  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable t  [TYPE]  Class fromClass  type  [TYPE]  String expectedName  [TYPE]  Field[] fields 
[REPLACE]^if  ( found != false )  return false;^675^^^^^660^686^[REPLACE] if  ( found != null )  return null;^[METHOD] locateField [TYPE] Field [PARAMETER] Class<?> fromClass String expectedName Class<?> type [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  f  field  found  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable t  [TYPE]  Class fromClass  type  [TYPE]  String expectedName  [TYPE]  Field[] fields 
[ADD]^^672^673^^675^676^671^679^[ADD] for  ( Field f : fields )  { if  ( f.getType (  )  == type )  { if  ( found != null )  return null; found = f;^[METHOD] locateField [TYPE] Field [PARAMETER] Class<?> fromClass String expectedName Class<?> type [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  f  field  found  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable t  [TYPE]  Class fromClass  type  [TYPE]  String expectedName  [TYPE]  Field[] fields 
[ADD]^^676^^^^^671^679^[ADD] found = f;^[METHOD] locateField [TYPE] Field [PARAMETER] Class<?> fromClass String expectedName Class<?> type [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  f  field  found  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable t  [TYPE]  Class fromClass  type  [TYPE]  String expectedName  [TYPE]  Field[] fields 
[REPLACE]^if  ( found != true )  return true;^675^^^^^671^679^[REPLACE] if  ( found != null )  return null;^[METHOD] locateField [TYPE] Field [PARAMETER] Class<?> fromClass String expectedName Class<?> type [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  f  field  found  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable t  [TYPE]  Class fromClass  type  [TYPE]  String expectedName  [TYPE]  Field[] fields 
[REPLACE]^if  ( found == null )  {^680^^^^^660^686^[REPLACE] if  ( found != null )  {^[METHOD] locateField [TYPE] Field [PARAMETER] Class<?> fromClass String expectedName Class<?> type [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  f  field  found  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable t  [TYPE]  Class fromClass  type  [TYPE]  String expectedName  [TYPE]  Field[] fields 
[ADD]^found.setAccessible ( true ) ;^681^682^683^^^660^686^[ADD] try { found.setAccessible ( true ) ; } catch  ( Throwable t )  { }^[METHOD] locateField [TYPE] Field [PARAMETER] Class<?> fromClass String expectedName Class<?> type [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  f  field  found  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable t  [TYPE]  Class fromClass  type  [TYPE]  String expectedName  [TYPE]  Field[] fields 
[REPLACE]^found.setAccessible ( false ) ;^682^^^^^660^686^[REPLACE] found.setAccessible ( true ) ;^[METHOD] locateField [TYPE] Field [PARAMETER] Class<?> fromClass String expectedName Class<?> type [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  f  field  found  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable t  [TYPE]  Class fromClass  type  [TYPE]  String expectedName  [TYPE]  Field[] fields 
[ADD]^^682^^^^^660^686^[ADD] found.setAccessible ( true ) ;^[METHOD] locateField [TYPE] Field [PARAMETER] Class<?> fromClass String expectedName Class<?> type [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  f  field  found  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable t  [TYPE]  Class fromClass  type  [TYPE]  String expectedName  [TYPE]  Field[] fields 
[ADD]^^683^684^685^^^660^686^[ADD] catch  ( Throwable t )  { } } return found;^[METHOD] locateField [TYPE] Field [PARAMETER] Class<?> fromClass String expectedName Class<?> type [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  f  field  found  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable t  [TYPE]  Class fromClass  type  [TYPE]  String expectedName  [TYPE]  Field[] fields 
[REPLACE]^return found;  ;^685^^^^^660^686^[REPLACE] return found;^[METHOD] locateField [TYPE] Field [PARAMETER] Class<?> fromClass String expectedName Class<?> type [CLASS] ClassUtil EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  f  field  found  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable t  [TYPE]  Class fromClass  type  [TYPE]  String expectedName  [TYPE]  Field[] fields 
[REPLACE]^static EnumTypeLocator instance = new EnumTypeLocator (  ) ;^619^^^^^^^[REPLACE] final static EnumTypeLocator instance = new EnumTypeLocator (  ) ;^[METHOD] locateField [TYPE] Field [PARAMETER] Class<?> fromClass String expectedName Class<?> type [CLASS] EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  f  field  found  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable t  [TYPE]  Class fromClass  type  [TYPE]  String expectedName  [TYPE]  Field[] fields 
[REPLACE]^private  Field enumMapTypeField;^622^^^^^^^[REPLACE] private final Field enumMapTypeField;^[METHOD] locateField [TYPE] Field [PARAMETER] Class<?> fromClass String expectedName Class<?> type [CLASS] EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  f  field  found  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable t  [TYPE]  Class fromClass  type  [TYPE]  String expectedName  [TYPE]  Field[] fields 
[REPLACE]^Field f  ;^661^^^^^660^686^[REPLACE] Field found = null;^[METHOD] locateField [TYPE] Field [PARAMETER] Class<?> fromClass String expectedName Class<?> type [CLASS] EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  f  field  found  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable t  [TYPE]  Class fromClass  type  [TYPE]  String expectedName  [TYPE]  Field[] fields 
[ADD]^^663^^^^^660^686^[ADD] Field[] fields = fromClass.getDeclaredFields (  ) ;^[METHOD] locateField [TYPE] Field [PARAMETER] Class<?> fromClass String expectedName Class<?> type [CLASS] EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  f  field  found  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable t  [TYPE]  Class fromClass  type  [TYPE]  String expectedName  [TYPE]  Field[] fields 
[REPLACE]^if  (  f.getType (  )  == type )  {^665^^^^^660^686^[REPLACE] if  ( expectedName.equals ( f.getName (  )  )  && f.getType (  )  == type )  {^[METHOD] locateField [TYPE] Field [PARAMETER] Class<?> fromClass String expectedName Class<?> type [CLASS] EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  f  field  found  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable t  [TYPE]  Class fromClass  type  [TYPE]  String expectedName  [TYPE]  Field[] fields 
[ADD]^found = f;break;^665^666^667^668^^660^686^[ADD] if  ( expectedName.equals ( f.getName (  )  )  && f.getType (  )  == type )  { found = f; break; }^[METHOD] locateField [TYPE] Field [PARAMETER] Class<?> fromClass String expectedName Class<?> type [CLASS] EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  f  field  found  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable t  [TYPE]  Class fromClass  type  [TYPE]  String expectedName  [TYPE]  Field[] fields 
[REPLACE]^found =  field;^666^^^^^660^686^[REPLACE] found = f;^[METHOD] locateField [TYPE] Field [PARAMETER] Class<?> fromClass String expectedName Class<?> type [CLASS] EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  f  field  found  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable t  [TYPE]  Class fromClass  type  [TYPE]  String expectedName  [TYPE]  Field[] fields 
[ADD]^^664^665^666^667^668^660^686^[ADD] for  ( Field f : fields )  { if  ( expectedName.equals ( f.getName (  )  )  && f.getType (  )  == type )  { found = f; break; }^[METHOD] locateField [TYPE] Field [PARAMETER] Class<?> fromClass String expectedName Class<?> type [CLASS] EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  f  field  found  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable t  [TYPE]  Class fromClass  type  [TYPE]  String expectedName  [TYPE]  Field[] fields 
[REPLACE]^if  ( found !=f )  {^671^^^^^660^686^[REPLACE] if  ( found == null )  {^[METHOD] locateField [TYPE] Field [PARAMETER] Class<?> fromClass String expectedName Class<?> type [CLASS] EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  f  field  found  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable t  [TYPE]  Class fromClass  type  [TYPE]  String expectedName  [TYPE]  Field[] fields 
[REPLACE]^if  ( f.getType (  )   &&  type )  {^673^^^^^660^686^[REPLACE] if  ( f.getType (  )  == type )  {^[METHOD] locateField [TYPE] Field [PARAMETER] Class<?> fromClass String expectedName Class<?> type [CLASS] EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  f  field  found  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable t  [TYPE]  Class fromClass  type  [TYPE]  String expectedName  [TYPE]  Field[] fields 
[REPLACE]^if  ( field == null )  return null;^675^^^^^660^686^[REPLACE] if  ( found != null )  return null;^[METHOD] locateField [TYPE] Field [PARAMETER] Class<?> fromClass String expectedName Class<?> type [CLASS] EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  f  field  found  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable t  [TYPE]  Class fromClass  type  [TYPE]  String expectedName  [TYPE]  Field[] fields 
[ADD]^^675^676^677^^^660^686^[ADD] if  ( found != null )  return null; found = f; }^[METHOD] locateField [TYPE] Field [PARAMETER] Class<?> fromClass String expectedName Class<?> type [CLASS] EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  f  field  found  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable t  [TYPE]  Class fromClass  type  [TYPE]  String expectedName  [TYPE]  Field[] fields 
[REPLACE]^if  ( found != false )  return false;^675^^^^^660^686^[REPLACE] if  ( found != null )  return null;^[METHOD] locateField [TYPE] Field [PARAMETER] Class<?> fromClass String expectedName Class<?> type [CLASS] EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  f  field  found  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable t  [TYPE]  Class fromClass  type  [TYPE]  String expectedName  [TYPE]  Field[] fields 
[REPLACE]^found =  field;^676^^^^^660^686^[REPLACE] found = f;^[METHOD] locateField [TYPE] Field [PARAMETER] Class<?> fromClass String expectedName Class<?> type [CLASS] EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  f  field  found  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable t  [TYPE]  Class fromClass  type  [TYPE]  String expectedName  [TYPE]  Field[] fields 
[ADD]^found = f;^675^676^677^^^660^686^[ADD] if  ( found != null )  return null; found = f; }^[METHOD] locateField [TYPE] Field [PARAMETER] Class<?> fromClass String expectedName Class<?> type [CLASS] EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  f  field  found  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable t  [TYPE]  Class fromClass  type  [TYPE]  String expectedName  [TYPE]  Field[] fields 
[REPLACE]^found =  field;^676^^^^^671^679^[REPLACE] found = f;^[METHOD] locateField [TYPE] Field [PARAMETER] Class<?> fromClass String expectedName Class<?> type [CLASS] EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  f  field  found  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable t  [TYPE]  Class fromClass  type  [TYPE]  String expectedName  [TYPE]  Field[] fields 
[REPLACE]^if  ( found != this )  return this;^675^^^^^671^679^[REPLACE] if  ( found != null )  return null;^[METHOD] locateField [TYPE] Field [PARAMETER] Class<?> fromClass String expectedName Class<?> type [CLASS] EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  f  field  found  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable t  [TYPE]  Class fromClass  type  [TYPE]  String expectedName  [TYPE]  Field[] fields 
[REPLACE]^Field found = null  ;^672^^^^^671^679^[REPLACE] for  ( Field f : fields )  {^[METHOD] locateField [TYPE] Field [PARAMETER] Class<?> fromClass String expectedName Class<?> type [CLASS] EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  f  field  found  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable t  [TYPE]  Class fromClass  type  [TYPE]  String expectedName  [TYPE]  Field[] fields 
[REPLACE]^if  ( f .getName (  )    &&  type )  {^673^^^^^660^686^[REPLACE] if  ( f.getType (  )  == type )  {^[METHOD] locateField [TYPE] Field [PARAMETER] Class<?> fromClass String expectedName Class<?> type [CLASS] EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  f  field  found  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable t  [TYPE]  Class fromClass  type  [TYPE]  String expectedName  [TYPE]  Field[] fields 
[REPLACE]^if  ( found == this  )  return this ;^675^^^^^660^686^[REPLACE] if  ( found != null )  return null;^[METHOD] locateField [TYPE] Field [PARAMETER] Class<?> fromClass String expectedName Class<?> type [CLASS] EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  f  field  found  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable t  [TYPE]  Class fromClass  type  [TYPE]  String expectedName  [TYPE]  Field[] fields 
[REPLACE]^if  ( found != this )  return this;^675^^^^^660^686^[REPLACE] if  ( found != null )  return null;^[METHOD] locateField [TYPE] Field [PARAMETER] Class<?> fromClass String expectedName Class<?> type [CLASS] EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  f  field  found  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable t  [TYPE]  Class fromClass  type  [TYPE]  String expectedName  [TYPE]  Field[] fields 
[ADD]^^676^^^^^660^686^[ADD] found = f;^[METHOD] locateField [TYPE] Field [PARAMETER] Class<?> fromClass String expectedName Class<?> type [CLASS] EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  f  field  found  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable t  [TYPE]  Class fromClass  type  [TYPE]  String expectedName  [TYPE]  Field[] fields 
[REPLACE]^if  ( found == null )  return null;^675^^^^^660^686^[REPLACE] if  ( found != null )  return null;^[METHOD] locateField [TYPE] Field [PARAMETER] Class<?> fromClass String expectedName Class<?> type [CLASS] EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  f  field  found  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable t  [TYPE]  Class fromClass  type  [TYPE]  String expectedName  [TYPE]  Field[] fields 
[REPLACE]^if  ( found != true )  return true;^675^^^^^660^686^[REPLACE] if  ( found != null )  return null;^[METHOD] locateField [TYPE] Field [PARAMETER] Class<?> fromClass String expectedName Class<?> type [CLASS] EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  f  field  found  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable t  [TYPE]  Class fromClass  type  [TYPE]  String expectedName  [TYPE]  Field[] fields 
[REPLACE]^for  ( Field found : fields )  {^672^^^^^671^679^[REPLACE] for  ( Field f : fields )  {^[METHOD] locateField [TYPE] Field [PARAMETER] Class<?> fromClass String expectedName Class<?> type [CLASS] EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  f  field  found  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable t  [TYPE]  Class fromClass  type  [TYPE]  String expectedName  [TYPE]  Field[] fields 
[REPLACE]^if  ( found != true )  return true;^675^^^^^671^679^[REPLACE] if  ( found != null )  return null;^[METHOD] locateField [TYPE] Field [PARAMETER] Class<?> fromClass String expectedName Class<?> type [CLASS] EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  f  field  found  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable t  [TYPE]  Class fromClass  type  [TYPE]  String expectedName  [TYPE]  Field[] fields 
[REPLACE]^if  ( found == null )  {^680^^^^^660^686^[REPLACE] if  ( found != null )  {^[METHOD] locateField [TYPE] Field [PARAMETER] Class<?> fromClass String expectedName Class<?> type [CLASS] EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  f  field  found  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable t  [TYPE]  Class fromClass  type  [TYPE]  String expectedName  [TYPE]  Field[] fields 
[ADD]^found.setAccessible ( true ) ;^681^682^683^^^660^686^[ADD] try { found.setAccessible ( true ) ; } catch  ( Throwable t )  { }^[METHOD] locateField [TYPE] Field [PARAMETER] Class<?> fromClass String expectedName Class<?> type [CLASS] EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  f  field  found  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable t  [TYPE]  Class fromClass  type  [TYPE]  String expectedName  [TYPE]  Field[] fields 
[REPLACE]^found.setAccessible ( false ) ;^682^^^^^660^686^[REPLACE] found.setAccessible ( true ) ;^[METHOD] locateField [TYPE] Field [PARAMETER] Class<?> fromClass String expectedName Class<?> type [CLASS] EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  f  field  found  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable t  [TYPE]  Class fromClass  type  [TYPE]  String expectedName  [TYPE]  Field[] fields 
[REMOVE]^field.get ( bean )  ;^682^^^^^660^686^[REMOVE] ^[METHOD] locateField [TYPE] Field [PARAMETER] Class<?> fromClass String expectedName Class<?> type [CLASS] EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  f  field  found  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable t  [TYPE]  Class fromClass  type  [TYPE]  String expectedName  [TYPE]  Field[] fields 
[REPLACE]^return f;^685^^^^^660^686^[REPLACE] return found;^[METHOD] locateField [TYPE] Field [PARAMETER] Class<?> fromClass String expectedName Class<?> type [CLASS] EnumTypeLocator   [TYPE]  Field enumMapTypeField  enumSetTypeField  f  field  found  [TYPE]  boolean false  true  [TYPE]  EnumTypeLocator instance  [TYPE]  Throwable t  [TYPE]  Class fromClass  type  [TYPE]  String expectedName  [TYPE]  Field[] fields 
