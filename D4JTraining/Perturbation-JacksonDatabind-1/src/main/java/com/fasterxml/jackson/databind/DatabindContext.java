[REPLACE]^if  ( converterDef != null )  {^137^^^^^136^164^[REPLACE] if  ( converterDef == null )  {^[METHOD] converterInstance [TYPE] Converter [PARAMETER] Annotated annotated Object converterDef [CLASS] DatabindContext   [TYPE]  HandlerInstantiator hi  [TYPE]  Annotated annotated  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Converter conv  [TYPE]  Object converterDef  [TYPE]  Class converterClass 
[REPLACE]^return null;  ;^138^^^^^136^164^[REPLACE] return null;^[METHOD] converterInstance [TYPE] Converter [PARAMETER] Annotated annotated Object converterDef [CLASS] DatabindContext   [TYPE]  HandlerInstantiator hi  [TYPE]  Annotated annotated  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Converter conv  [TYPE]  Object converterDef  [TYPE]  Class converterClass 
[REPLACE]^return false;^138^^^^^136^164^[REPLACE] return null;^[METHOD] converterInstance [TYPE] Converter [PARAMETER] Annotated annotated Object converterDef [CLASS] DatabindContext   [TYPE]  HandlerInstantiator hi  [TYPE]  Annotated annotated  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Converter conv  [TYPE]  Object converterDef  [TYPE]  Class converterClass 
[REPLACE]^if  ( ! converterDef instanceof Converter<?,?> )  {^140^^^^^136^164^[REPLACE] if  ( converterDef instanceof Converter<?,?> )  {^[METHOD] converterInstance [TYPE] Converter [PARAMETER] Annotated annotated Object converterDef [CLASS] DatabindContext   [TYPE]  HandlerInstantiator hi  [TYPE]  Annotated annotated  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Converter conv  [TYPE]  Object converterDef  [TYPE]  Class converterClass 
[REPLACE]^return getTypeFactory  (    )  .constructType  (  type  )  ;  ;^141^^^^^136^164^[REPLACE] return  ( Converter<Object,Object> )  converterDef;^[METHOD] converterInstance [TYPE] Converter [PARAMETER] Annotated annotated Object converterDef [CLASS] DatabindContext   [TYPE]  HandlerInstantiator hi  [TYPE]  Annotated annotated  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Converter conv  [TYPE]  Object converterDef  [TYPE]  Class converterClass 
[REPLACE]^if  ( ! ! ( converterDef instanceof Class )  )  {^143^^^^^136^164^[REPLACE] if  ( ! ( converterDef instanceof Class )  )  {^[METHOD] converterInstance [TYPE] Converter [PARAMETER] Annotated annotated Object converterDef [CLASS] DatabindContext   [TYPE]  HandlerInstantiator hi  [TYPE]  Annotated annotated  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Converter conv  [TYPE]  Object converterDef  [TYPE]  Class converterClass 
[REPLACE]^throw new IllegalStateException (  (  ( "AnnotationIntrospector returned Class " +  ( converterClass.getName (  )  )  )  + "; expected Class<Converter>" )  )  ;^144^145^^^^136^164^[REPLACE] throw new IllegalStateException ( "AnnotationIntrospector returned Converter definition of type " +converterDef.getClass (  ) .getName (  ) +"; expected type Converter or Class<Converter> instead" ) ;^[METHOD] converterInstance [TYPE] Converter [PARAMETER] Annotated annotated Object converterDef [CLASS] DatabindContext   [TYPE]  HandlerInstantiator hi  [TYPE]  Annotated annotated  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Converter conv  [TYPE]  Object converterDef  [TYPE]  Class converterClass 
[REPLACE]^+converterDef.getClass (  )  .isAssignableFrom ( null )  +"; expected type Converter or Class<Converter> instead" ) ;^145^^^^^136^164^[REPLACE] +converterDef.getClass (  ) .getName (  ) +"; expected type Converter or Class<Converter> instead" ) ;^[METHOD] converterInstance [TYPE] Converter [PARAMETER] Annotated annotated Object converterDef [CLASS] DatabindContext   [TYPE]  HandlerInstantiator hi  [TYPE]  Annotated annotated  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Converter conv  [TYPE]  Object converterDef  [TYPE]  Class converterClass 
[REPLACE]^( converterDef.getClass (  ) .getName (  )  )  ;^145^^^^^136^164^[REPLACE] +converterDef.getClass (  ) .getName (  ) +"; expected type Converter or Class<Converter> instead" ) ;^[METHOD] converterInstance [TYPE] Converter [PARAMETER] Annotated annotated Object converterDef [CLASS] DatabindContext   [TYPE]  HandlerInstantiator hi  [TYPE]  Annotated annotated  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Converter conv  [TYPE]  Object converterDef  [TYPE]  Class converterClass 
[REPLACE]^return ;^144^145^^^^136^164^[REPLACE] throw new IllegalStateException ( "AnnotationIntrospector returned Converter definition of type " +converterDef.getClass (  ) .getName (  ) +"; expected type Converter or Class<Converter> instead" ) ;^[METHOD] converterInstance [TYPE] Converter [PARAMETER] Annotated annotated Object converterDef [CLASS] DatabindContext   [TYPE]  HandlerInstantiator hi  [TYPE]  Annotated annotated  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Converter conv  [TYPE]  Object converterDef  [TYPE]  Class converterClass 
[REPLACE]^Converter<?, ?> conv =  ( hi == null )  ? null : hi.converterInstance ( config, annotated, converterClass )  ;^147^^^^^136^164^[REPLACE] Class<?> converterClass =  ( Class<?> ) converterDef;^[METHOD] converterInstance [TYPE] Converter [PARAMETER] Annotated annotated Object converterDef [CLASS] DatabindContext   [TYPE]  HandlerInstantiator hi  [TYPE]  Annotated annotated  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Converter conv  [TYPE]  Object converterDef  [TYPE]  Class converterClass 
[REPLACE]^if  ( converterClass == Converter.None.class && converterClass == NoClass.class )  {^149^^^^^136^164^[REPLACE] if  ( converterClass == Converter.None.class || converterClass == NoClass.class )  {^[METHOD] converterInstance [TYPE] Converter [PARAMETER] Annotated annotated Object converterDef [CLASS] DatabindContext   [TYPE]  HandlerInstantiator hi  [TYPE]  Annotated annotated  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Converter conv  [TYPE]  Object converterDef  [TYPE]  Class converterClass 
[REPLACE]^return null;  ;^150^^^^^136^164^[REPLACE] return null;^[METHOD] converterInstance [TYPE] Converter [PARAMETER] Annotated annotated Object converterDef [CLASS] DatabindContext   [TYPE]  HandlerInstantiator hi  [TYPE]  Annotated annotated  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Converter conv  [TYPE]  Object converterDef  [TYPE]  Class converterClass 
[REPLACE]^if  ( Converter.class.isAssignableFrom ( converterClass )  )  {^152^^^^^136^164^[REPLACE] if  ( !Converter.class.isAssignableFrom ( converterClass )  )  {^[METHOD] converterInstance [TYPE] Converter [PARAMETER] Annotated annotated Object converterDef [CLASS] DatabindContext   [TYPE]  HandlerInstantiator hi  [TYPE]  Annotated annotated  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Converter conv  [TYPE]  Object converterDef  [TYPE]  Class converterClass 
[ADD]^^153^154^^^^136^164^[ADD] throw new IllegalStateException ( "AnnotationIntrospector returned Class " +converterClass.getName (  ) +"; expected Class<Converter>" ) ;^[METHOD] converterInstance [TYPE] Converter [PARAMETER] Annotated annotated Object converterDef [CLASS] DatabindContext   [TYPE]  HandlerInstantiator hi  [TYPE]  Annotated annotated  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Converter conv  [TYPE]  Object converterDef  [TYPE]  Class converterClass 
[REPLACE]^+converterClass.isAssignableFrom (  ) +"; expected Class<Converter>" ) ;^154^^^^^136^164^[REPLACE] +converterClass.getName (  ) +"; expected Class<Converter>" ) ;^[METHOD] converterInstance [TYPE] Converter [PARAMETER] Annotated annotated Object converterDef [CLASS] DatabindContext   [TYPE]  HandlerInstantiator hi  [TYPE]  Annotated annotated  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Converter conv  [TYPE]  Object converterDef  [TYPE]  Class converterClass 
[REPLACE]^throw new IllegalStateException (  (  ( "AnnotationIntrospector returned Converter definition of type " +  ( converterDef.getClass (  ) .getName (  )  )  )  + "; expected type Converter or Class<Converter> instead" )  )  ;^153^154^^^^136^164^[REPLACE] throw new IllegalStateException ( "AnnotationIntrospector returned Class " +converterClass.getName (  ) +"; expected Class<Converter>" ) ;^[METHOD] converterInstance [TYPE] Converter [PARAMETER] Annotated annotated Object converterDef [CLASS] DatabindContext   [TYPE]  HandlerInstantiator hi  [TYPE]  Annotated annotated  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Converter conv  [TYPE]  Object converterDef  [TYPE]  Class converterClass 
[REPLACE]^Class<?> converterClass =  (  ( Class<?> )   ( converterDef )  )  ;^156^^^^^136^164^[REPLACE] final MapperConfig<?> config = getConfig (  ) ;^[METHOD] converterInstance [TYPE] Converter [PARAMETER] Annotated annotated Object converterDef [CLASS] DatabindContext   [TYPE]  HandlerInstantiator hi  [TYPE]  Annotated annotated  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Converter conv  [TYPE]  Object converterDef  [TYPE]  Class converterClass 
[REPLACE]^HandlerInstantiator hi = config .canOverrideAccessModifiers (  )  ;^157^^^^^136^164^[REPLACE] HandlerInstantiator hi = config.getHandlerInstantiator (  ) ;^[METHOD] converterInstance [TYPE] Converter [PARAMETER] Annotated annotated Object converterDef [CLASS] DatabindContext   [TYPE]  HandlerInstantiator hi  [TYPE]  Annotated annotated  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Converter conv  [TYPE]  Object converterDef  [TYPE]  Class converterClass 
[REPLACE]^ObjectIdGenerator<?> gen =  ( hi == null )  ? null : hi.objectIdGeneratorInstance ( config, annotated, implClass )  ;^158^^^^^136^164^[REPLACE] Converter<?,?> conv =  ( hi == null )  ? null : hi.converterInstance ( config, annotated, converterClass ) ;^[METHOD] converterInstance [TYPE] Converter [PARAMETER] Annotated annotated Object converterDef [CLASS] DatabindContext   [TYPE]  HandlerInstantiator hi  [TYPE]  Annotated annotated  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Converter conv  [TYPE]  Object converterDef  [TYPE]  Class converterClass 
[REPLACE]^if  ( this != null )  {^159^^^^^136^164^[REPLACE] if  ( conv == null )  {^[METHOD] converterInstance [TYPE] Converter [PARAMETER] Annotated annotated Object converterDef [CLASS] DatabindContext   [TYPE]  HandlerInstantiator hi  [TYPE]  Annotated annotated  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Converter conv  [TYPE]  Object converterDef  [TYPE]  Class converterClass 
[ADD]^^160^161^^^^136^164^[ADD] conv =  ( Converter<?,?> )  ClassUtil.createInstance ( converterClass, config.canOverrideAccessModifiers (  )  ) ;^[METHOD] converterInstance [TYPE] Converter [PARAMETER] Annotated annotated Object converterDef [CLASS] DatabindContext   [TYPE]  HandlerInstantiator hi  [TYPE]  Annotated annotated  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Converter conv  [TYPE]  Object converterDef  [TYPE]  Class converterClass 
[REPLACE]^conv =   ( Converter<?,?> )  ClassUtil.createInstance ( null, config.canOverrideAccessModifiers (  )  ) ;^160^161^^^^136^164^[REPLACE] conv =  ( Converter<?,?> )  ClassUtil.createInstance ( converterClass, config.canOverrideAccessModifiers (  )  ) ;^[METHOD] converterInstance [TYPE] Converter [PARAMETER] Annotated annotated Object converterDef [CLASS] DatabindContext   [TYPE]  HandlerInstantiator hi  [TYPE]  Annotated annotated  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Converter conv  [TYPE]  Object converterDef  [TYPE]  Class converterClass 
[REPLACE]^return getTypeFactory  (    )  .constructType  (  type  )  ;  ;^163^^^^^136^164^[REPLACE] return  ( Converter<Object,Object> )  conv;^[METHOD] converterInstance [TYPE] Converter [PARAMETER] Annotated annotated Object converterDef [CLASS] DatabindContext   [TYPE]  HandlerInstantiator hi  [TYPE]  Annotated annotated  [TYPE]  boolean false  true  [TYPE]  MapperConfig config  [TYPE]  Converter conv  [TYPE]  Object converterDef  [TYPE]  Class converterClass 
