[REPLACE]^final ArgumentBuilder abuilder = new ArgumentBuilder (  )  ;^50^^^^^48^94^[REPLACE] final DefaultOptionBuilder obuilder = new DefaultOptionBuilder (  ) ;^[METHOD] option [TYPE] Option [PARAMETER] Option option1 [CLASS] CLI2Converter   [TYPE]  boolean false  true  [TYPE]  ArgumentBuilder abuilder  [TYPE]  Option option1  [TYPE]  DefaultOptionBuilder obuilder  [TYPE]  Object type  [TYPE]  String argName  description  longName  shortName 
[REPLACE]^obuilder.withId ( option1.getId (  )  )  ;^51^^^^^48^94^[REPLACE] obuilder.withRequired ( option1.isRequired (  )  ) ;^[METHOD] option [TYPE] Option [PARAMETER] Option option1 [CLASS] CLI2Converter   [TYPE]  boolean false  true  [TYPE]  ArgumentBuilder abuilder  [TYPE]  Option option1  [TYPE]  DefaultOptionBuilder obuilder  [TYPE]  Object type  [TYPE]  String argName  description  longName  shortName 
[REPLACE]^obuilder.withRequired ( option1 .getId (  )   ) ;^51^^^^^48^94^[REPLACE] obuilder.withRequired ( option1.isRequired (  )  ) ;^[METHOD] option [TYPE] Option [PARAMETER] Option option1 [CLASS] CLI2Converter   [TYPE]  boolean false  true  [TYPE]  ArgumentBuilder abuilder  [TYPE]  Option option1  [TYPE]  DefaultOptionBuilder obuilder  [TYPE]  Object type  [TYPE]  String argName  description  longName  shortName 
[ADD]^^51^^^^^48^94^[ADD] obuilder.withRequired ( option1.isRequired (  )  ) ;^[METHOD] option [TYPE] Option [PARAMETER] Option option1 [CLASS] CLI2Converter   [TYPE]  boolean false  true  [TYPE]  ArgumentBuilder abuilder  [TYPE]  Option option1  [TYPE]  DefaultOptionBuilder obuilder  [TYPE]  Object type  [TYPE]  String argName  description  longName  shortName 
[REPLACE]^final String argName = option1.getArgName (  )  ;^53^^^^^48^94^[REPLACE] final String shortName = option1.getOpt (  ) ;^[METHOD] option [TYPE] Option [PARAMETER] Option option1 [CLASS] CLI2Converter   [TYPE]  boolean false  true  [TYPE]  ArgumentBuilder abuilder  [TYPE]  Option option1  [TYPE]  DefaultOptionBuilder obuilder  [TYPE]  Object type  [TYPE]  String argName  description  longName  shortName 
[REPLACE]^if ( shortName==true && !" ".equals ( shortName )  ) {^54^^^^^48^94^[REPLACE] if ( shortName!=null && !" ".equals ( shortName )  ) {^[METHOD] option [TYPE] Option [PARAMETER] Option option1 [CLASS] CLI2Converter   [TYPE]  boolean false  true  [TYPE]  ArgumentBuilder abuilder  [TYPE]  Option option1  [TYPE]  DefaultOptionBuilder obuilder  [TYPE]  Object type  [TYPE]  String argName  description  longName  shortName 
[ADD]^obuilder.withShortName ( shortName ) ;^54^55^56^^^48^94^[ADD] if ( shortName!=null && !" ".equals ( shortName )  ) { obuilder.withShortName ( shortName ) ; }^[METHOD] option [TYPE] Option [PARAMETER] Option option1 [CLASS] CLI2Converter   [TYPE]  boolean false  true  [TYPE]  ArgumentBuilder abuilder  [TYPE]  Option option1  [TYPE]  DefaultOptionBuilder obuilder  [TYPE]  Object type  [TYPE]  String argName  description  longName  shortName 
[REPLACE]^obuilder.withShortName ( longName ) ;^55^^^^^48^94^[REPLACE] obuilder.withShortName ( shortName ) ;^[METHOD] option [TYPE] Option [PARAMETER] Option option1 [CLASS] CLI2Converter   [TYPE]  boolean false  true  [TYPE]  ArgumentBuilder abuilder  [TYPE]  Option option1  [TYPE]  DefaultOptionBuilder obuilder  [TYPE]  Object type  [TYPE]  String argName  description  longName  shortName 
[ADD]^^55^^^^^48^94^[ADD] obuilder.withShortName ( shortName ) ;^[METHOD] option [TYPE] Option [PARAMETER] Option option1 [CLASS] CLI2Converter   [TYPE]  boolean false  true  [TYPE]  ArgumentBuilder abuilder  [TYPE]  Option option1  [TYPE]  DefaultOptionBuilder obuilder  [TYPE]  Object type  [TYPE]  String argName  description  longName  shortName 
[ADD]^^58^^^^^48^94^[ADD] final String longName = option1.getLongOpt (  ) ;^[METHOD] option [TYPE] Option [PARAMETER] Option option1 [CLASS] CLI2Converter   [TYPE]  boolean false  true  [TYPE]  ArgumentBuilder abuilder  [TYPE]  Option option1  [TYPE]  DefaultOptionBuilder obuilder  [TYPE]  Object type  [TYPE]  String argName  description  longName  shortName 
[REPLACE]^if ( longName==null ) {^59^^^^^48^94^[REPLACE] if ( longName!=null ) {^[METHOD] option [TYPE] Option [PARAMETER] Option option1 [CLASS] CLI2Converter   [TYPE]  boolean false  true  [TYPE]  ArgumentBuilder abuilder  [TYPE]  Option option1  [TYPE]  DefaultOptionBuilder obuilder  [TYPE]  Object type  [TYPE]  String argName  description  longName  shortName 
[REPLACE]^obuilder.withShortName ( shortName )  ;^60^^^^^48^94^[REPLACE] obuilder.withLongName ( longName ) ;^[METHOD] option [TYPE] Option [PARAMETER] Option option1 [CLASS] CLI2Converter   [TYPE]  boolean false  true  [TYPE]  ArgumentBuilder abuilder  [TYPE]  Option option1  [TYPE]  DefaultOptionBuilder obuilder  [TYPE]  Object type  [TYPE]  String argName  description  longName  shortName 
[REPLACE]^obuilder.withId ( option1.getOpt (  )  ) ;^62^^^^^48^94^[REPLACE] obuilder.withId ( option1.getId (  )  ) ;^[METHOD] option [TYPE] Option [PARAMETER] Option option1 [CLASS] CLI2Converter   [TYPE]  boolean false  true  [TYPE]  ArgumentBuilder abuilder  [TYPE]  Option option1  [TYPE]  DefaultOptionBuilder obuilder  [TYPE]  Object type  [TYPE]  String argName  description  longName  shortName 
[REPLACE]^option1.getArgs (  )  ;^62^^^^^48^94^[REPLACE] obuilder.withId ( option1.getId (  )  ) ;^[METHOD] option [TYPE] Option [PARAMETER] Option option1 [CLASS] CLI2Converter   [TYPE]  boolean false  true  [TYPE]  ArgumentBuilder abuilder  [TYPE]  Option option1  [TYPE]  DefaultOptionBuilder obuilder  [TYPE]  Object type  [TYPE]  String argName  description  longName  shortName 
[ADD]^^62^^^^^48^94^[ADD] obuilder.withId ( option1.getId (  )  ) ;^[METHOD] option [TYPE] Option [PARAMETER] Option option1 [CLASS] CLI2Converter   [TYPE]  boolean false  true  [TYPE]  ArgumentBuilder abuilder  [TYPE]  Option option1  [TYPE]  DefaultOptionBuilder obuilder  [TYPE]  Object type  [TYPE]  String argName  description  longName  shortName 
[REPLACE]^final String description = option1 .getOpt (  )  ;^64^^^^^48^94^[REPLACE] final String description = option1.getDescription (  ) ;^[METHOD] option [TYPE] Option [PARAMETER] Option option1 [CLASS] CLI2Converter   [TYPE]  boolean false  true  [TYPE]  ArgumentBuilder abuilder  [TYPE]  Option option1  [TYPE]  DefaultOptionBuilder obuilder  [TYPE]  Object type  [TYPE]  String argName  description  longName  shortName 
[REPLACE]^if ( description==null ) {^65^^^^^48^94^[REPLACE] if ( description!=null ) {^[METHOD] option [TYPE] Option [PARAMETER] Option option1 [CLASS] CLI2Converter   [TYPE]  boolean false  true  [TYPE]  ArgumentBuilder abuilder  [TYPE]  Option option1  [TYPE]  DefaultOptionBuilder obuilder  [TYPE]  Object type  [TYPE]  String argName  description  longName  shortName 
[REPLACE]^obuilder.withDescription ( shortName ) ;^66^^^^^48^94^[REPLACE] obuilder.withDescription ( description ) ;^[METHOD] option [TYPE] Option [PARAMETER] Option option1 [CLASS] CLI2Converter   [TYPE]  boolean false  true  [TYPE]  ArgumentBuilder abuilder  [TYPE]  Option option1  [TYPE]  DefaultOptionBuilder obuilder  [TYPE]  Object type  [TYPE]  String argName  description  longName  shortName 
[REPLACE]^if ( ! option1.hasArg (  )  ) {^69^^^^^48^94^[REPLACE] if ( option1.hasArg (  )  ) {^[METHOD] option [TYPE] Option [PARAMETER] Option option1 [CLASS] CLI2Converter   [TYPE]  boolean false  true  [TYPE]  ArgumentBuilder abuilder  [TYPE]  Option option1  [TYPE]  DefaultOptionBuilder obuilder  [TYPE]  Object type  [TYPE]  String argName  description  longName  shortName 
[ADD]^final ArgumentBuilder abuilder = new ArgumentBuilder (  ) ;final String argName = option1.getArgName (  ) ;abuilder.withName ( argName ) ;abuilder.withMaximum ( option1.getArgs (  )  ) ;^69^70^71^72^73^48^94^[ADD] if ( option1.hasArg (  )  ) { final ArgumentBuilder abuilder = new ArgumentBuilder (  ) ; final String argName = option1.getArgName (  ) ; abuilder.withName ( argName ) ; abuilder.withMaximum ( option1.getArgs (  )  ) ;^[METHOD] option [TYPE] Option [PARAMETER] Option option1 [CLASS] CLI2Converter   [TYPE]  boolean false  true  [TYPE]  ArgumentBuilder abuilder  [TYPE]  Option option1  [TYPE]  DefaultOptionBuilder obuilder  [TYPE]  Object type  [TYPE]  String argName  description  longName  shortName 
[REPLACE]^if ( option1.getValueSeparator (  )  ) {^74^^^^^48^94^[REPLACE] if ( option1.hasValueSeparator (  )  ) {^[METHOD] option [TYPE] Option [PARAMETER] Option option1 [CLASS] CLI2Converter   [TYPE]  boolean false  true  [TYPE]  ArgumentBuilder abuilder  [TYPE]  Option option1  [TYPE]  DefaultOptionBuilder obuilder  [TYPE]  Object type  [TYPE]  String argName  description  longName  shortName 
[REPLACE]^abuilder.withName ( option1.getValueSeparator (  )  ) ;^75^^^^^48^94^[REPLACE] abuilder.withSubsequentSeparator ( option1.getValueSeparator (  )  ) ;^[METHOD] option [TYPE] Option [PARAMETER] Option option1 [CLASS] CLI2Converter   [TYPE]  boolean false  true  [TYPE]  ArgumentBuilder abuilder  [TYPE]  Option option1  [TYPE]  DefaultOptionBuilder obuilder  [TYPE]  Object type  [TYPE]  String argName  description  longName  shortName 
[ADD]^^75^^^^^48^94^[ADD] abuilder.withSubsequentSeparator ( option1.getValueSeparator (  )  ) ;^[METHOD] option [TYPE] Option [PARAMETER] Option option1 [CLASS] CLI2Converter   [TYPE]  boolean false  true  [TYPE]  ArgumentBuilder abuilder  [TYPE]  Option option1  [TYPE]  DefaultOptionBuilder obuilder  [TYPE]  Object type  [TYPE]  String argName  description  longName  shortName 
[REPLACE]^abuilder.withSubsequentSeparator ( option1.hasValueSeparator (  )  ) ;^75^^^^^48^94^[REPLACE] abuilder.withSubsequentSeparator ( option1.getValueSeparator (  )  ) ;^[METHOD] option [TYPE] Option [PARAMETER] Option option1 [CLASS] CLI2Converter   [TYPE]  boolean false  true  [TYPE]  ArgumentBuilder abuilder  [TYPE]  Option option1  [TYPE]  DefaultOptionBuilder obuilder  [TYPE]  Object type  [TYPE]  String argName  description  longName  shortName 
[REPLACE]^if ( option1.hasArg (  )  ) {^77^^^^^48^94^[REPLACE] if ( option1.hasOptionalArg (  )  ) {^[METHOD] option [TYPE] Option [PARAMETER] Option option1 [CLASS] CLI2Converter   [TYPE]  boolean false  true  [TYPE]  ArgumentBuilder abuilder  [TYPE]  Option option1  [TYPE]  DefaultOptionBuilder obuilder  [TYPE]  Object type  [TYPE]  String argName  description  longName  shortName 
[REPLACE]^obuilder.withId ( option1.getId (  )  )  ;^82^^^^^77^83^[REPLACE] abuilder.withMinimum ( option1.getArgs (  )  ) ;^[METHOD] option [TYPE] Option [PARAMETER] Option option1 [CLASS] CLI2Converter   [TYPE]  boolean false  true  [TYPE]  ArgumentBuilder abuilder  [TYPE]  Option option1  [TYPE]  DefaultOptionBuilder obuilder  [TYPE]  Object type  [TYPE]  String argName  description  longName  shortName 
[REPLACE]^abuilder.withMinimum ( option1.getArgName (  )  ) ;^82^^^^^77^83^[REPLACE] abuilder.withMinimum ( option1.getArgs (  )  ) ;^[METHOD] option [TYPE] Option [PARAMETER] Option option1 [CLASS] CLI2Converter   [TYPE]  boolean false  true  [TYPE]  ArgumentBuilder abuilder  [TYPE]  Option option1  [TYPE]  DefaultOptionBuilder obuilder  [TYPE]  Object type  [TYPE]  String argName  description  longName  shortName 
[REPLACE]^gbuilder.withMinimum ( 1 )  ;^78^^^^^48^94^[REPLACE] abuilder.withMinimum ( 0 ) ;^[METHOD] option [TYPE] Option [PARAMETER] Option option1 [CLASS] CLI2Converter   [TYPE]  boolean false  true  [TYPE]  ArgumentBuilder abuilder  [TYPE]  Option option1  [TYPE]  DefaultOptionBuilder obuilder  [TYPE]  Object type  [TYPE]  String argName  description  longName  shortName 
[REPLACE]^if ( type==null ) {^86^^^^^48^94^[REPLACE] if ( type!=null ) {^[METHOD] option [TYPE] Option [PARAMETER] Option option1 [CLASS] CLI2Converter   [TYPE]  boolean false  true  [TYPE]  ArgumentBuilder abuilder  [TYPE]  Option option1  [TYPE]  DefaultOptionBuilder obuilder  [TYPE]  Object type  [TYPE]  String argName  description  longName  shortName 
[REPLACE]^abuilder.withName ( new TypeHandlerValidator ( type )  ) ;^87^^^^^48^94^[REPLACE] abuilder.withValidator ( new TypeHandlerValidator ( type )  ) ;^[METHOD] option [TYPE] Option [PARAMETER] Option option1 [CLASS] CLI2Converter   [TYPE]  boolean false  true  [TYPE]  ArgumentBuilder abuilder  [TYPE]  Option option1  [TYPE]  DefaultOptionBuilder obuilder  [TYPE]  Object type  [TYPE]  String argName  description  longName  shortName 
[REPLACE]^final GroupBuilder gbuilder = new GroupBuilder (  )  ;^70^^^^^48^94^[REPLACE] final ArgumentBuilder abuilder = new ArgumentBuilder (  ) ;^[METHOD] option [TYPE] Option [PARAMETER] Option option1 [CLASS] CLI2Converter   [TYPE]  boolean false  true  [TYPE]  ArgumentBuilder abuilder  [TYPE]  Option option1  [TYPE]  DefaultOptionBuilder obuilder  [TYPE]  Object type  [TYPE]  String argName  description  longName  shortName 
[ADD]^^71^72^^^^48^94^[ADD] final String argName = option1.getArgName (  ) ; abuilder.withName ( argName ) ;^[METHOD] option [TYPE] Option [PARAMETER] Option option1 [CLASS] CLI2Converter   [TYPE]  boolean false  true  [TYPE]  ArgumentBuilder abuilder  [TYPE]  Option option1  [TYPE]  DefaultOptionBuilder obuilder  [TYPE]  Object type  [TYPE]  String argName  description  longName  shortName 
[REPLACE]^final Object type = option1 .getOpt (  )  ;^85^^^^^48^94^[REPLACE] final Object type = option1.getType (  ) ;^[METHOD] option [TYPE] Option [PARAMETER] Option option1 [CLASS] CLI2Converter   [TYPE]  boolean false  true  [TYPE]  ArgumentBuilder abuilder  [TYPE]  Option option1  [TYPE]  DefaultOptionBuilder obuilder  [TYPE]  Object type  [TYPE]  String argName  description  longName  shortName 
[REPLACE]^if ( ! option1.hasValueSeparator (  )  ) {^74^^^^^48^94^[REPLACE] if ( option1.hasValueSeparator (  )  ) {^[METHOD] option [TYPE] Option [PARAMETER] Option option1 [CLASS] CLI2Converter   [TYPE]  boolean false  true  [TYPE]  ArgumentBuilder abuilder  [TYPE]  Option option1  [TYPE]  DefaultOptionBuilder obuilder  [TYPE]  Object type  [TYPE]  String argName  description  longName  shortName 
[REPLACE]^abuilder.withSubsequentSeparator ( option1 .hasValueSeparator (  )   ) ;^75^^^^^48^94^[REPLACE] abuilder.withSubsequentSeparator ( option1.getValueSeparator (  )  ) ;^[METHOD] option [TYPE] Option [PARAMETER] Option option1 [CLASS] CLI2Converter   [TYPE]  boolean false  true  [TYPE]  ArgumentBuilder abuilder  [TYPE]  Option option1  [TYPE]  DefaultOptionBuilder obuilder  [TYPE]  Object type  [TYPE]  String argName  description  longName  shortName 
[REPLACE]^if ( ! option1.hasOptionalArg (  )  ) {^77^^^^^48^94^[REPLACE] if ( option1.hasOptionalArg (  )  ) {^[METHOD] option [TYPE] Option [PARAMETER] Option option1 [CLASS] CLI2Converter   [TYPE]  boolean false  true  [TYPE]  ArgumentBuilder abuilder  [TYPE]  Option option1  [TYPE]  DefaultOptionBuilder obuilder  [TYPE]  Object type  [TYPE]  String argName  description  longName  shortName 
[ADD]^^77^78^79^^^48^94^[ADD] if ( option1.hasOptionalArg (  )  ) { abuilder.withMinimum ( 0 ) ; }^[METHOD] option [TYPE] Option [PARAMETER] Option option1 [CLASS] CLI2Converter   [TYPE]  boolean false  true  [TYPE]  ArgumentBuilder abuilder  [TYPE]  Option option1  [TYPE]  DefaultOptionBuilder obuilder  [TYPE]  Object type  [TYPE]  String argName  description  longName  shortName 
[ADD]^^82^^^^^77^83^[ADD] abuilder.withMinimum ( option1.getArgs (  )  ) ;^[METHOD] option [TYPE] Option [PARAMETER] Option option1 [CLASS] CLI2Converter   [TYPE]  boolean false  true  [TYPE]  ArgumentBuilder abuilder  [TYPE]  Option option1  [TYPE]  DefaultOptionBuilder obuilder  [TYPE]  Object type  [TYPE]  String argName  description  longName  shortName 
[REPLACE]^abuilder.withMinimum ( 2 ) ;^78^^^^^48^94^[REPLACE] abuilder.withMinimum ( 0 ) ;^[METHOD] option [TYPE] Option [PARAMETER] Option option1 [CLASS] CLI2Converter   [TYPE]  boolean false  true  [TYPE]  ArgumentBuilder abuilder  [TYPE]  Option option1  [TYPE]  DefaultOptionBuilder obuilder  [TYPE]  Object type  [TYPE]  String argName  description  longName  shortName 
[REPLACE]^final String argName = option1.getArgs (  ) ;^71^^^^^48^94^[REPLACE] final String argName = option1.getArgName (  ) ;^[METHOD] option [TYPE] Option [PARAMETER] Option option1 [CLASS] CLI2Converter   [TYPE]  boolean false  true  [TYPE]  ArgumentBuilder abuilder  [TYPE]  Option option1  [TYPE]  DefaultOptionBuilder obuilder  [TYPE]  Object type  [TYPE]  String argName  description  longName  shortName 
[REPLACE]^final String argName = option1.getArgName (  )  ;^85^^^^^48^94^[REPLACE] final Object type = option1.getType (  ) ;^[METHOD] option [TYPE] Option [PARAMETER] Option option1 [CLASS] CLI2Converter   [TYPE]  boolean false  true  [TYPE]  ArgumentBuilder abuilder  [TYPE]  Option option1  [TYPE]  DefaultOptionBuilder obuilder  [TYPE]  Object type  [TYPE]  String argName  description  longName  shortName 
[REPLACE]^return obuilder .ArgumentBuilder (  )  ;^93^^^^^48^94^[REPLACE] return obuilder.create (  ) ;^[METHOD] option [TYPE] Option [PARAMETER] Option option1 [CLASS] CLI2Converter   [TYPE]  boolean false  true  [TYPE]  ArgumentBuilder abuilder  [TYPE]  Option option1  [TYPE]  DefaultOptionBuilder obuilder  [TYPE]  Object type  [TYPE]  String argName  description  longName  shortName 
[ADD]^^104^^^^^102^119^[ADD] final GroupBuilder gbuilder = new GroupBuilder (  ) ;^[METHOD] group [TYPE] Group [PARAMETER] OptionGroup optionGroup1 [CLASS] CLI2Converter   [TYPE]  OptionGroup optionGroup1  [TYPE]  boolean false  true  [TYPE]  GroupBuilder gbuilder  [TYPE]  Iterator i  [TYPE]  Option option1  option2 
[REPLACE]^Iterator i = optionGroups.iterator (  )  ;^106^^^^^102^119^[REPLACE] for ( final Iterator i = optionGroup1.getOptions (  ) .iterator (  ) ;i.hasNext (  ) ; ) {^[METHOD] group [TYPE] Group [PARAMETER] OptionGroup optionGroup1 [CLASS] CLI2Converter   [TYPE]  OptionGroup optionGroup1  [TYPE]  boolean false  true  [TYPE]  GroupBuilder gbuilder  [TYPE]  Iterator i  [TYPE]  Option option1  option2 
[REPLACE]^final org.apache.commons.cli.Option option1 =  ( org.apache.commons.cli.Option ) i.hasNext (  ) ;^107^^^^^102^119^[REPLACE] final org.apache.commons.cli.Option option1 =  ( org.apache.commons.cli.Option ) i.next (  ) ;^[METHOD] group [TYPE] Group [PARAMETER] OptionGroup optionGroup1 [CLASS] CLI2Converter   [TYPE]  OptionGroup optionGroup1  [TYPE]  boolean false  true  [TYPE]  GroupBuilder gbuilder  [TYPE]  Iterator i  [TYPE]  Option option1  option2 
[REPLACE]^final Option option2 = option ( option2 ) ;^108^^^^^102^119^[REPLACE] final Option option2 = option ( option1 ) ;^[METHOD] group [TYPE] Group [PARAMETER] OptionGroup optionGroup1 [CLASS] CLI2Converter   [TYPE]  OptionGroup optionGroup1  [TYPE]  boolean false  true  [TYPE]  GroupBuilder gbuilder  [TYPE]  Iterator i  [TYPE]  Option option1  option2 
[REPLACE]^abuilder.withMinimum ( 0 )  ;^112^^^^^102^119^[REPLACE] gbuilder.withMaximum ( 1 ) ;^[METHOD] group [TYPE] Group [PARAMETER] OptionGroup optionGroup1 [CLASS] CLI2Converter   [TYPE]  OptionGroup optionGroup1  [TYPE]  boolean false  true  [TYPE]  GroupBuilder gbuilder  [TYPE]  Iterator i  [TYPE]  Option option1  option2 
[REPLACE]^if ( optionGroup1 >> 3.isRequired (  )  ) {^114^^^^^102^119^[REPLACE] if ( optionGroup1.isRequired (  )  ) {^[METHOD] group [TYPE] Group [PARAMETER] OptionGroup optionGroup1 [CLASS] CLI2Converter   [TYPE]  OptionGroup optionGroup1  [TYPE]  boolean false  true  [TYPE]  GroupBuilder gbuilder  [TYPE]  Iterator i  [TYPE]  Option option1  option2 
[ADD]^gbuilder.withMinimum ( 1 ) ;^114^115^116^^^102^119^[ADD] if ( optionGroup1.isRequired (  )  ) { gbuilder.withMinimum ( 1 ) ; }^[METHOD] group [TYPE] Group [PARAMETER] OptionGroup optionGroup1 [CLASS] CLI2Converter   [TYPE]  OptionGroup optionGroup1  [TYPE]  boolean false  true  [TYPE]  GroupBuilder gbuilder  [TYPE]  Iterator i  [TYPE]  Option option1  option2 
[REPLACE]^abuilder.withMinimum ( 0 )  ;^115^^^^^102^119^[REPLACE] gbuilder.withMinimum ( 1 ) ;^[METHOD] group [TYPE] Group [PARAMETER] OptionGroup optionGroup1 [CLASS] CLI2Converter   [TYPE]  OptionGroup optionGroup1  [TYPE]  boolean false  true  [TYPE]  GroupBuilder gbuilder  [TYPE]  Iterator i  [TYPE]  Option option1  option2 
[REPLACE]^return gbuilder .ArgumentBuilder (  )  ;^118^^^^^102^119^[REPLACE] return gbuilder.create (  ) ;^[METHOD] group [TYPE] Group [PARAMETER] OptionGroup optionGroup1 [CLASS] CLI2Converter   [TYPE]  OptionGroup optionGroup1  [TYPE]  boolean false  true  [TYPE]  GroupBuilder gbuilder  [TYPE]  Iterator i  [TYPE]  Option option1  option2 
[REPLACE]^final ArgumentBuilder abuilder = new ArgumentBuilder (  )  ;^129^^^^^127^149^[REPLACE] final GroupBuilder gbuilder = new GroupBuilder (  ) ;^[METHOD] group [TYPE] Group [PARAMETER] Options options1 [CLASS] CLI2Converter   [TYPE]  Options options1  [TYPE]  Group group  [TYPE]  Set optionGroups  [TYPE]  OptionGroup optionGroup1  [TYPE]  boolean false  true  [TYPE]  GroupBuilder gbuilder  [TYPE]  Iterator i  [TYPE]  Option option1  option2 
[REPLACE]^final String argName = option1.getArgName (  )  ;^131^^^^^127^149^[REPLACE] final Set optionGroups = new HashSet (  ) ;^[METHOD] group [TYPE] Group [PARAMETER] Options options1 [CLASS] CLI2Converter   [TYPE]  Options options1  [TYPE]  Group group  [TYPE]  Set optionGroups  [TYPE]  OptionGroup optionGroup1  [TYPE]  boolean false  true  [TYPE]  GroupBuilder gbuilder  [TYPE]  Iterator i  [TYPE]  Option option1  option2 
[REPLACE]^Iterator i = optionGroups.iterator (  )  ;^133^^^^^127^149^[REPLACE] for ( final Iterator i = options1.getOptionGroups (  ) .iterator (  ) ;i.hasNext (  ) ; ) {^[METHOD] group [TYPE] Group [PARAMETER] Options options1 [CLASS] CLI2Converter   [TYPE]  Options options1  [TYPE]  Group group  [TYPE]  Set optionGroups  [TYPE]  OptionGroup optionGroup1  [TYPE]  boolean false  true  [TYPE]  GroupBuilder gbuilder  [TYPE]  Iterator i  [TYPE]  Option option1  option2 
[ADD]^Group group = group ( optionGroup1 ) ;^134^135^^^^127^149^[ADD] final OptionGroup optionGroup1 =  ( OptionGroup ) i.next (  ) ; Group group = group ( optionGroup1 ) ;^[METHOD] group [TYPE] Group [PARAMETER] Options options1 [CLASS] CLI2Converter   [TYPE]  Options options1  [TYPE]  Group group  [TYPE]  Set optionGroups  [TYPE]  OptionGroup optionGroup1  [TYPE]  boolean false  true  [TYPE]  GroupBuilder gbuilder  [TYPE]  Iterator i  [TYPE]  Option option1  option2 
[ADD]^^135^^^^^127^149^[ADD] Group group = group ( optionGroup1 ) ;^[METHOD] group [TYPE] Group [PARAMETER] Options options1 [CLASS] CLI2Converter   [TYPE]  Options options1  [TYPE]  Group group  [TYPE]  Set optionGroups  [TYPE]  OptionGroup optionGroup1  [TYPE]  boolean false  true  [TYPE]  GroupBuilder gbuilder  [TYPE]  Iterator i  [TYPE]  Option option1  option2 
[REPLACE]^if ( optionInAGroup ( option1,optionGroups )  ) {^142^^^^^127^149^[REPLACE] if ( !optionInAGroup ( option1,optionGroups )  ) {^[METHOD] group [TYPE] Group [PARAMETER] Options options1 [CLASS] CLI2Converter   [TYPE]  Options options1  [TYPE]  Group group  [TYPE]  Set optionGroups  [TYPE]  OptionGroup optionGroup1  [TYPE]  boolean false  true  [TYPE]  GroupBuilder gbuilder  [TYPE]  Iterator i  [TYPE]  Option option1  option2 
[ADD]^^142^143^144^145^^127^149^[ADD] if ( !optionInAGroup ( option1,optionGroups )  ) { final Option option2 = option ( option1 ) ; gbuilder.withOption ( option2 ) ; }^[METHOD] group [TYPE] Group [PARAMETER] Options options1 [CLASS] CLI2Converter   [TYPE]  Options options1  [TYPE]  Group group  [TYPE]  Set optionGroups  [TYPE]  OptionGroup optionGroup1  [TYPE]  boolean false  true  [TYPE]  GroupBuilder gbuilder  [TYPE]  Iterator i  [TYPE]  Option option1  option2 
[ADD]^^143^144^^^^127^149^[ADD] final Option option2 = option ( option1 ) ; gbuilder.withOption ( option2 ) ;^[METHOD] group [TYPE] Group [PARAMETER] Options options1 [CLASS] CLI2Converter   [TYPE]  Options options1  [TYPE]  Group group  [TYPE]  Set optionGroups  [TYPE]  OptionGroup optionGroup1  [TYPE]  boolean false  true  [TYPE]  GroupBuilder gbuilder  [TYPE]  Iterator i  [TYPE]  Option option1  option2 
[ADD]^^140^141^142^143^144^127^149^[ADD] for ( final Iterator i = options1.getOptions (  ) .iterator (  ) ;i.hasNext (  ) ; ) { final org.apache.commons.cli.Option option1 =  ( org.apache.commons.cli.Option ) i.next (  ) ; if ( !optionInAGroup ( option1,optionGroups )  ) { final Option option2 = option ( option1 ) ; gbuilder.withOption ( option2 ) ;^[METHOD] group [TYPE] Group [PARAMETER] Options options1 [CLASS] CLI2Converter   [TYPE]  Options options1  [TYPE]  Group group  [TYPE]  Set optionGroups  [TYPE]  OptionGroup optionGroup1  [TYPE]  boolean false  true  [TYPE]  GroupBuilder gbuilder  [TYPE]  Iterator i  [TYPE]  Option option1  option2 
[ADD]^^141^^^^^127^149^[ADD] final org.apache.commons.cli.Option option1 =  ( org.apache.commons.cli.Option ) i.next (  ) ;^[METHOD] group [TYPE] Group [PARAMETER] Options options1 [CLASS] CLI2Converter   [TYPE]  Options options1  [TYPE]  Group group  [TYPE]  Set optionGroups  [TYPE]  OptionGroup optionGroup1  [TYPE]  boolean false  true  [TYPE]  GroupBuilder gbuilder  [TYPE]  Iterator i  [TYPE]  Option option1  option2 
[REPLACE]^final Option option1 =  (  ( Option )   ( i.next (  )  )  )  ;^143^^^^^127^149^[REPLACE] final Option option2 = option ( option1 ) ;^[METHOD] group [TYPE] Group [PARAMETER] Options options1 [CLASS] CLI2Converter   [TYPE]  Options options1  [TYPE]  Group group  [TYPE]  Set optionGroups  [TYPE]  OptionGroup optionGroup1  [TYPE]  boolean false  true  [TYPE]  GroupBuilder gbuilder  [TYPE]  Iterator i  [TYPE]  Option option1  option2 
[REPLACE]^return gbuilder.GroupBuilder (  ) ;^148^^^^^127^149^[REPLACE] return gbuilder.create (  ) ;^[METHOD] group [TYPE] Group [PARAMETER] Options options1 [CLASS] CLI2Converter   [TYPE]  Options options1  [TYPE]  Group group  [TYPE]  Set optionGroups  [TYPE]  OptionGroup optionGroup1  [TYPE]  boolean false  true  [TYPE]  GroupBuilder gbuilder  [TYPE]  Iterator i  [TYPE]  Option option1  option2 
[REPLACE]^private  Object type;^164^^^^^^^[REPLACE] private final Object type;^[METHOD] optionInAGroup [TYPE] boolean [PARAMETER] Option option1 Set optionGroups [CLASS] TypeHandlerValidator   [TYPE]  Set optionGroups  [TYPE]  OptionGroup group  [TYPE]  boolean false  true  [TYPE]  Iterator i  [TYPE]  Option option1 
