[REPLACE]^private Map shortOpts  = null ;^45^^^^^^^[REPLACE] private Map shortOpts = new HashMap (  ) ;^ [CLASS] Options  
[REPLACE]^private Map longOpts ;^48^^^^^^^[REPLACE] private Map longOpts = new HashMap (  ) ;^ [CLASS] Options  
[REPLACE]^private List requiredOpts =  new ArrayList ( opts )  ;^51^^^^^^^[REPLACE] private List requiredOpts = new ArrayList (  ) ;^ [CLASS] Options  
[REPLACE]^private Map optionGroups ;^54^^^^^^^[REPLACE] private Map optionGroups = new HashMap (  ) ;^ [CLASS] Options  
[REPLACE]^Iterator iter = longOpts.values (  ) .iterator (  )  ;^71^^^^^70^93^[REPLACE] Iterator options = group.getOptions (  ) .iterator (  ) ;^[METHOD] addOptionGroup [TYPE] Options [PARAMETER] OptionGroup group [CLASS] Options   [TYPE]  Iterator options  [TYPE]  List requiredOpts  [TYPE]  Option option  [TYPE]  OptionGroup group  [TYPE]  boolean false  true  [TYPE]  Map longOpts  optionGroups  shortOpts 
[REPLACE]^if   (  opt.isRequired  (    )     )  {  ;^73^74^^^^70^93^[REPLACE] if  ( group.isRequired (  )  ) {^[METHOD] addOptionGroup [TYPE] Options [PARAMETER] OptionGroup group [CLASS] Options   [TYPE]  Iterator options  [TYPE]  List requiredOpts  [TYPE]  Option option  [TYPE]  OptionGroup group  [TYPE]  boolean false  true  [TYPE]  Map longOpts  optionGroups  shortOpts 
[REPLACE]^requiredOpts .indexOf ( null )  ;^75^^^^^73^76^[REPLACE] requiredOpts.add ( group ) ;^[METHOD] addOptionGroup [TYPE] Options [PARAMETER] OptionGroup group [CLASS] Options   [TYPE]  Iterator options  [TYPE]  List requiredOpts  [TYPE]  Option option  [TYPE]  OptionGroup group  [TYPE]  boolean false  true  [TYPE]  Map longOpts  optionGroups  shortOpts 
[REPLACE]^Option option =  ( Option )  options.hasNext (  ) ;^80^^^^^70^93^[REPLACE] Option option =  ( Option )  options.next (  ) ;^[METHOD] addOptionGroup [TYPE] Options [PARAMETER] OptionGroup group [CLASS] Options   [TYPE]  Iterator options  [TYPE]  List requiredOpts  [TYPE]  Option option  [TYPE]  OptionGroup group  [TYPE]  boolean false  true  [TYPE]  Map longOpts  optionGroups  shortOpts 
[REPLACE]^return null;^92^^^^^70^93^[REPLACE] return this;^[METHOD] addOptionGroup [TYPE] Options [PARAMETER] OptionGroup group [CLASS] Options   [TYPE]  Iterator options  [TYPE]  List requiredOpts  [TYPE]  Option option  [TYPE]  OptionGroup group  [TYPE]  boolean false  true  [TYPE]  Map longOpts  optionGroups  shortOpts 
[REPLACE]^String key = opt .getLongOpt (  )  ;^145^^^^^144^165^[REPLACE] String key = opt.getKey (  ) ;^[METHOD] addOption [TYPE] Options [PARAMETER] Option opt [CLASS] Options   [TYPE]  List requiredOpts  [TYPE]  Option opt  [TYPE]  String key  [TYPE]  boolean false  true  [TYPE]  Map longOpts  optionGroups  shortOpts 
[REPLACE]^if  ( opt .getLongOpt (  )   ) {^148^149^^^^144^165^[REPLACE] if  ( opt.hasLongOpt (  )  ) {^[METHOD] addOption [TYPE] Options [PARAMETER] Option opt [CLASS] Options   [TYPE]  List requiredOpts  [TYPE]  Option opt  [TYPE]  String key  [TYPE]  boolean false  true  [TYPE]  Map longOpts  optionGroups  shortOpts 
[REPLACE]^longOpts.put ( opt.hasLongOpt (  ) , opt ) ;^150^^^^^148^151^[REPLACE] longOpts.put ( opt.getLongOpt (  ) , opt ) ;^[METHOD] addOption [TYPE] Options [PARAMETER] Option opt [CLASS] Options   [TYPE]  List requiredOpts  [TYPE]  Option opt  [TYPE]  String key  [TYPE]  boolean false  true  [TYPE]  Map longOpts  optionGroups  shortOpts 
[REMOVE]^shortOpts.containsKey ( opt )  ;^150^^^^^148^151^[REMOVE] ^[METHOD] addOption [TYPE] Options [PARAMETER] Option opt [CLASS] Options   [TYPE]  List requiredOpts  [TYPE]  Option opt  [TYPE]  String key  [TYPE]  boolean false  true  [TYPE]  Map longOpts  optionGroups  shortOpts 
[REPLACE]^longOpts.put ( opt .hasLongOpt (  )  , opt ) ;^150^^^^^148^151^[REPLACE] longOpts.put ( opt.getLongOpt (  ) , opt ) ;^[METHOD] addOption [TYPE] Options [PARAMETER] Option opt [CLASS] Options   [TYPE]  List requiredOpts  [TYPE]  Option opt  [TYPE]  String key  [TYPE]  boolean false  true  [TYPE]  Map longOpts  optionGroups  shortOpts 
[REPLACE]^if   (  group.isRequired  (    )    )  {  ;^154^155^^^^144^165^[REPLACE] if  ( opt.isRequired (  )   ) {^[METHOD] addOption [TYPE] Options [PARAMETER] Option opt [CLASS] Options   [TYPE]  List requiredOpts  [TYPE]  Option opt  [TYPE]  String key  [TYPE]  boolean false  true  [TYPE]  Map longOpts  optionGroups  shortOpts 
[REPLACE]^if ( !  requiredOpts.contains ( key )   )  {^156^^^^^154^160^[REPLACE] if (  requiredOpts.contains ( key )   )  {^[METHOD] addOption [TYPE] Options [PARAMETER] Option opt [CLASS] Options   [TYPE]  List requiredOpts  [TYPE]  Option opt  [TYPE]  String key  [TYPE]  boolean false  true  [TYPE]  Map longOpts  optionGroups  shortOpts 
[ADD]^requiredOpts.remove (  requiredOpts.indexOf ( key )   ) ;^156^157^158^^^154^160^[ADD] if (  requiredOpts.contains ( key )   )  { requiredOpts.remove (  requiredOpts.indexOf ( key )   ) ; }^[METHOD] addOption [TYPE] Options [PARAMETER] Option opt [CLASS] Options   [TYPE]  List requiredOpts  [TYPE]  Option opt  [TYPE]  String key  [TYPE]  boolean false  true  [TYPE]  Map longOpts  optionGroups  shortOpts 
[REPLACE]^if (  requiredOpts.indexOf ( key )   )  {^156^^^^^144^165^[REPLACE] if (  requiredOpts.contains ( key )   )  {^[METHOD] addOption [TYPE] Options [PARAMETER] Option opt [CLASS] Options   [TYPE]  List requiredOpts  [TYPE]  Option opt  [TYPE]  String key  [TYPE]  boolean false  true  [TYPE]  Map longOpts  optionGroups  shortOpts 
[REPLACE]^requiredOpts.remove (  requiredOpts .add ( null )    ) ;^157^^^^^144^165^[REPLACE] requiredOpts.remove (  requiredOpts.indexOf ( key )   ) ;^[METHOD] addOption [TYPE] Options [PARAMETER] Option opt [CLASS] Options   [TYPE]  List requiredOpts  [TYPE]  Option opt  [TYPE]  String key  [TYPE]  boolean false  true  [TYPE]  Map longOpts  optionGroups  shortOpts 
[REPLACE]^requiredOpts.contains ( key )  ;^157^^^^^144^165^[REPLACE] requiredOpts.remove (  requiredOpts.indexOf ( key )   ) ;^[METHOD] addOption [TYPE] Options [PARAMETER] Option opt [CLASS] Options   [TYPE]  List requiredOpts  [TYPE]  Option opt  [TYPE]  String key  [TYPE]  boolean false  true  [TYPE]  Map longOpts  optionGroups  shortOpts 
[REPLACE]^shortOpts.containsKey ( opt )  ;^162^^^^^144^165^[REPLACE] shortOpts.put ( key, opt ) ;^[METHOD] addOption [TYPE] Options [PARAMETER] Option opt [CLASS] Options   [TYPE]  List requiredOpts  [TYPE]  Option opt  [TYPE]  String key  [TYPE]  boolean false  true  [TYPE]  Map longOpts  optionGroups  shortOpts 
[REMOVE]^shortOpts.containsKey ( opt )  ;^162^^^^^144^165^[REMOVE] ^[METHOD] addOption [TYPE] Options [PARAMETER] Option opt [CLASS] Options   [TYPE]  List requiredOpts  [TYPE]  Option opt  [TYPE]  String key  [TYPE]  boolean false  true  [TYPE]  Map longOpts  optionGroups  shortOpts 
[REPLACE]^return null;^164^^^^^144^165^[REPLACE] return this;^[METHOD] addOption [TYPE] Options [PARAMETER] Option opt [CLASS] Options   [TYPE]  List requiredOpts  [TYPE]  Option opt  [TYPE]  String key  [TYPE]  boolean false  true  [TYPE]  Map longOpts  optionGroups  shortOpts 
[REPLACE]^Iterator options = group.getOptions (  ) .iterator (  )  ;^184^^^^^183^201^[REPLACE] List opts = new ArrayList ( shortOpts.values (  )  ) ;^[METHOD] helpOptions [TYPE] List [PARAMETER] [CLASS] Options   [TYPE]  Iterator iter  [TYPE]  List opts  requiredOpts  [TYPE]  Object item  [TYPE]  boolean false  true  [TYPE]  Map longOpts  optionGroups  shortOpts 
[REPLACE]^Iterator options = group.getOptions (  ) .iterator (  )  ;^188^^^^^183^201^[REPLACE] Iterator iter = longOpts.values (  ) .iterator (  ) ;^[METHOD] helpOptions [TYPE] List [PARAMETER] [CLASS] Options   [TYPE]  Iterator iter  [TYPE]  List opts  requiredOpts  [TYPE]  Object item  [TYPE]  boolean false  true  [TYPE]  Map longOpts  optionGroups  shortOpts 
[REPLACE]^if  ( !opts.indexOf ( item )  ) {^194^195^^^^183^201^[REPLACE] if  ( !opts.contains ( item )  ) {^[METHOD] helpOptions [TYPE] List [PARAMETER] [CLASS] Options   [TYPE]  Iterator iter  [TYPE]  List opts  requiredOpts  [TYPE]  Object item  [TYPE]  boolean false  true  [TYPE]  Map longOpts  optionGroups  shortOpts 
[REMOVE]^if  ( group.isRequired (  )  )  {     requiredOpts.add ( group ) ; }^194^^^^^183^201^[REMOVE] ^[METHOD] helpOptions [TYPE] List [PARAMETER] [CLASS] Options   [TYPE]  Iterator iter  [TYPE]  List opts  requiredOpts  [TYPE]  Object item  [TYPE]  boolean false  true  [TYPE]  Map longOpts  optionGroups  shortOpts 
[REPLACE]^opts.remove ( item ) ;^196^^^^^194^197^[REPLACE] opts.add ( item ) ;^[METHOD] helpOptions [TYPE] List [PARAMETER] [CLASS] Options   [TYPE]  Iterator iter  [TYPE]  List opts  requiredOpts  [TYPE]  Object item  [TYPE]  boolean false  true  [TYPE]  Map longOpts  optionGroups  shortOpts 
[ADD]^^196^^^^^194^197^[ADD] opts.add ( item ) ;^[METHOD] helpOptions [TYPE] List [PARAMETER] [CLASS] Options   [TYPE]  Iterator iter  [TYPE]  List opts  requiredOpts  [TYPE]  Object item  [TYPE]  boolean false  true  [TYPE]  Map longOpts  optionGroups  shortOpts 
[REPLACE]^Object item = iter.hasNext (  ) ;^192^^^^^183^201^[REPLACE] Object item = iter.next (  ) ;^[METHOD] helpOptions [TYPE] List [PARAMETER] [CLASS] Options   [TYPE]  Iterator iter  [TYPE]  List opts  requiredOpts  [TYPE]  Object item  [TYPE]  boolean false  true  [TYPE]  Map longOpts  optionGroups  shortOpts 
[REPLACE]^return  new ArrayList ( shortOpts.values (  )  )  ;^200^^^^^183^201^[REPLACE] return new ArrayList ( opts ) ;^[METHOD] helpOptions [TYPE] List [PARAMETER] [CLASS] Options   [TYPE]  Iterator iter  [TYPE]  List opts  requiredOpts  [TYPE]  Object item  [TYPE]  boolean false  true  [TYPE]  Map longOpts  optionGroups  shortOpts 
