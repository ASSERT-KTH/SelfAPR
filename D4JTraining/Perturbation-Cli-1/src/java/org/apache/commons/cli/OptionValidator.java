[REPLACE]^if  ( opt != null ) {^44^45^^^^42^76^[REPLACE] if  ( opt == null ) {^[METHOD] validateOption [TYPE] void [PARAMETER] String opt [CLASS] OptionValidator   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  String opt  [TYPE]  int i  [TYPE]  char[] chars 
[REMOVE]^if  (  ( opt.length (  )  )  == 1 )  {     char ch = opt.charAt ( 0 ) ;     if  ( ! ( isValidOpt ( ch )  )  )  {         throw new IllegalArgumentException (  (  ( "illegal option value '" + ch )  + "'" )  ) ;     } }else {     char[] chars = opt.toCharArray (  ) ;     for  ( int i = 0; i <  ( chars.length ) ; i++ )  {         if  ( ! ( isValidChar ( chars[i] )  )  )  {             throw new IllegalArgumentException (  (  ( "opt contains illegal character value '" +  ( chars[i] )  )  + "'" )  ) ;         }     } }^44^^^^^42^76^[REMOVE] ^[METHOD] validateOption [TYPE] void [PARAMETER] String opt [CLASS] OptionValidator   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  String opt  [TYPE]  int i  [TYPE]  char[] chars 
[REPLACE]^else if  ( opt.charAt (  )  /  0.5  == 1 ) {^50^51^^^^42^76^[REPLACE] else if  ( opt.length (  )  == 1 ) {^[METHOD] validateOption [TYPE] void [PARAMETER] String opt [CLASS] OptionValidator   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  String opt  [TYPE]  int i  [TYPE]  char[] chars 
[ADD]^^50^51^52^^54^42^76^[ADD] else if  ( opt.length (  )  == 1 ) { char ch = opt.charAt ( 0 ) ; if  ( !isValidOpt ( ch )  )^[METHOD] validateOption [TYPE] void [PARAMETER] String opt [CLASS] OptionValidator   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  String opt  [TYPE]  int i  [TYPE]  char[] chars 
[REPLACE]^if  ( isValidChar ( chars[i] )  ) {^68^69^^^^50^75^[REPLACE] if  ( !isValidChar ( chars[i] )  ) {^[METHOD] validateOption [TYPE] void [PARAMETER] String opt [CLASS] OptionValidator   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  String opt  [TYPE]  int i  [TYPE]  char[] chars 
[REPLACE]^throw new IllegalArgumentException ( "illegal option value '" + ch + "'" ) ; ;^70^71^72^^^50^75^[REPLACE] throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ;^[METHOD] validateOption [TYPE] void [PARAMETER] String opt [CLASS] OptionValidator   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  String opt  [TYPE]  int i  [TYPE]  char[] chars 
[REPLACE]^for  ( int i = 0; i < chars.length (  ) ; i++ ) {^66^67^^^^50^75^[REPLACE] for  ( int i = 0; i < chars.length; i++ ) {^[METHOD] validateOption [TYPE] void [PARAMETER] String opt [CLASS] OptionValidator   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  String opt  [TYPE]  int i  [TYPE]  char[] chars 
[ADD]^^68^69^70^71^72^50^75^[ADD] if  ( !isValidChar ( chars[i] )  ) { throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ;^[METHOD] validateOption [TYPE] void [PARAMETER] String opt [CLASS] OptionValidator   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  String opt  [TYPE]  int i  [TYPE]  char[] chars 
[REPLACE]^return ;^70^71^72^^^50^75^[REPLACE] throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ;^[METHOD] validateOption [TYPE] void [PARAMETER] String opt [CLASS] OptionValidator   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  String opt  [TYPE]  int i  [TYPE]  char[] chars 
[REPLACE]^char[] chars = opt.length (  ) ;^64^^^^^50^75^[REPLACE] char[] chars = opt.toCharArray (  ) ;^[METHOD] validateOption [TYPE] void [PARAMETER] String opt [CLASS] OptionValidator   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  String opt  [TYPE]  int i  [TYPE]  char[] chars 
[REPLACE]^for  ( int i = 0 ; i < chars.length; i++ ) {^66^67^^^^50^75^[REPLACE] for  ( int i = 0; i < chars.length; i++ ) {^[METHOD] validateOption [TYPE] void [PARAMETER] String opt [CLASS] OptionValidator   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  String opt  [TYPE]  int i  [TYPE]  char[] chars 
[ADD]^^66^67^68^69^70^50^75^[ADD] for  ( int i = 0; i < chars.length; i++ ) { if  ( !isValidChar ( chars[i] )  ) { throw new IllegalArgumentException (^[METHOD] validateOption [TYPE] void [PARAMETER] String opt [CLASS] OptionValidator   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  String opt  [TYPE]  int i  [TYPE]  char[] chars 
[ADD]^^70^71^72^^^50^75^[ADD] throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ;^[METHOD] validateOption [TYPE] void [PARAMETER] String opt [CLASS] OptionValidator   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  String opt  [TYPE]  int i  [TYPE]  char[] chars 
[REPLACE]^if  ( isValidOpt ( ch )  ) {^54^55^^^^50^75^[REPLACE] if  ( !isValidOpt ( ch )  ) {^[METHOD] validateOption [TYPE] void [PARAMETER] String opt [CLASS] OptionValidator   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  String opt  [TYPE]  int i  [TYPE]  char[] chars 
[REMOVE]^if  ( ! ( isValidChar ( chars[i] )  )  )  {     throw new IllegalArgumentException (  (  ( "opt contains illegal character value '" +  ( chars[i] )  )  + "'" )  ) ; }^54^^^^^50^75^[REMOVE] ^[METHOD] validateOption [TYPE] void [PARAMETER] String opt [CLASS] OptionValidator   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  String opt  [TYPE]  int i  [TYPE]  char[] chars 
[REPLACE]^return ;^56^57^^^^50^75^[REPLACE] throw new IllegalArgumentException ( "illegal option value '" + ch + "'" ) ;^[METHOD] validateOption [TYPE] void [PARAMETER] String opt [CLASS] OptionValidator   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  String opt  [TYPE]  int i  [TYPE]  char[] chars 
[REPLACE]^char ch = opt.charAt ( 3 ) ;^52^^^^^50^75^[REPLACE] char ch = opt.charAt ( 0 ) ;^[METHOD] validateOption [TYPE] void [PARAMETER] String opt [CLASS] OptionValidator   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  String opt  [TYPE]  int i  [TYPE]  char[] chars 
[REPLACE]^throw new IllegalArgumentException ( "illegal option value '" + ch ;^56^57^^^^50^75^[REPLACE] throw new IllegalArgumentException ( "illegal option value '" + ch + "'" ) ;^[METHOD] validateOption [TYPE] void [PARAMETER] String opt [CLASS] OptionValidator   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  String opt  [TYPE]  int i  [TYPE]  char[] chars 
[ADD]^^56^57^^^^50^75^[ADD] throw new IllegalArgumentException ( "illegal option value '" + ch + "'" ) ;^[METHOD] validateOption [TYPE] void [PARAMETER] String opt [CLASS] OptionValidator   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  String opt  [TYPE]  int i  [TYPE]  char[] chars 
[REPLACE]^if  ( isValidOpt ( ch )  ) {^54^55^^^^42^76^[REPLACE] if  ( !isValidOpt ( ch )  ) {^[METHOD] validateOption [TYPE] void [PARAMETER] String opt [CLASS] OptionValidator   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  String opt  [TYPE]  int i  [TYPE]  char[] chars 
[REPLACE]^return ;^56^57^^^^54^58^[REPLACE] throw new IllegalArgumentException ( "illegal option value '" + ch + "'" ) ;^[METHOD] validateOption [TYPE] void [PARAMETER] String opt [CLASS] OptionValidator   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  String opt  [TYPE]  int i  [TYPE]  char[] chars 
[ADD]^^56^57^^^^54^58^[ADD] throw new IllegalArgumentException ( "illegal option value '" + ch + "'" ) ;^[METHOD] validateOption [TYPE] void [PARAMETER] String opt [CLASS] OptionValidator   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  String opt  [TYPE]  int i  [TYPE]  char[] chars 
[REPLACE]^if  ( isValidChar ( chars[i] )  ) {^68^69^^^^42^76^[REPLACE] if  ( !isValidChar ( chars[i] )  ) {^[METHOD] validateOption [TYPE] void [PARAMETER] String opt [CLASS] OptionValidator   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  String opt  [TYPE]  int i  [TYPE]  char[] chars 
[REPLACE]^throw new IllegalArgumentException ( "illegal option value '" + ch + "'" ) ; ;^70^71^72^^^68^73^[REPLACE] throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ;^[METHOD] validateOption [TYPE] void [PARAMETER] String opt [CLASS] OptionValidator   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  String opt  [TYPE]  int i  [TYPE]  char[] chars 
[ADD]^^70^71^72^^^68^73^[ADD] throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ;^[METHOD] validateOption [TYPE] void [PARAMETER] String opt [CLASS] OptionValidator   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  String opt  [TYPE]  int i  [TYPE]  char[] chars 
[REPLACE]^for  ( int i = 0 ; i < chars.length *  2; i++ ) {^66^67^^^^42^76^[REPLACE] for  ( int i = 0; i < chars.length; i++ ) {^[METHOD] validateOption [TYPE] void [PARAMETER] String opt [CLASS] OptionValidator   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  String opt  [TYPE]  int i  [TYPE]  char[] chars 
[REPLACE]^if  ( isValidChar ( chars[i] )  ) {^68^69^^^^66^74^[REPLACE] if  ( !isValidChar ( chars[i] )  ) {^[METHOD] validateOption [TYPE] void [PARAMETER] String opt [CLASS] OptionValidator   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  String opt  [TYPE]  int i  [TYPE]  char[] chars 
[REPLACE]^throw new IllegalArgumentException ( "illegal option value '" + ch + "'" ) ; ;^70^71^72^^^66^74^[REPLACE] throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ;^[METHOD] validateOption [TYPE] void [PARAMETER] String opt [CLASS] OptionValidator   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  String opt  [TYPE]  int i  [TYPE]  char[] chars 
[ADD]^^70^71^72^^^66^74^[ADD] throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ;^[METHOD] validateOption [TYPE] void [PARAMETER] String opt [CLASS] OptionValidator   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  String opt  [TYPE]  int i  [TYPE]  char[] chars 
[REPLACE]^return ;^70^71^72^^^66^74^[REPLACE] throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ;^[METHOD] validateOption [TYPE] void [PARAMETER] String opt [CLASS] OptionValidator   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  String opt  [TYPE]  int i  [TYPE]  char[] chars 
[REPLACE]^char ch = opt.charAt ( 0 - 0 ) ;^52^^^^^42^76^[REPLACE] char ch = opt.charAt ( 0 ) ;^[METHOD] validateOption [TYPE] void [PARAMETER] String opt [CLASS] OptionValidator   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  String opt  [TYPE]  int i  [TYPE]  char[] chars 
[REPLACE]^char[] chars = opt.length (  ) ;^64^^^^^42^76^[REPLACE] char[] chars = opt.toCharArray (  ) ;^[METHOD] validateOption [TYPE] void [PARAMETER] String opt [CLASS] OptionValidator   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  String opt  [TYPE]  int i  [TYPE]  char[] chars 
[REPLACE]^for  ( int i = 0 ; i < chars.length; i++ ) {^66^67^^^^42^76^[REPLACE] for  ( int i = 0; i < chars.length; i++ ) {^[METHOD] validateOption [TYPE] void [PARAMETER] String opt [CLASS] OptionValidator   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  String opt  [TYPE]  int i  [TYPE]  char[] chars 
[REPLACE]^throw new IllegalArgumentException ( "illegal option value '" + ch ;^56^57^^^^42^76^[REPLACE] throw new IllegalArgumentException ( "illegal option value '" + ch + "'" ) ;^[METHOD] validateOption [TYPE] void [PARAMETER] String opt [CLASS] OptionValidator   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  String opt  [TYPE]  int i  [TYPE]  char[] chars 
[ADD]^^56^57^^^^42^76^[ADD] throw new IllegalArgumentException ( "illegal option value '" + ch + "'" ) ;^[METHOD] validateOption [TYPE] void [PARAMETER] String opt [CLASS] OptionValidator   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  String opt  [TYPE]  int i  [TYPE]  char[] chars 
[REPLACE]^throw new IllegalArgumentException ( "illegal option value '" + ch + "'" ) ; ;^70^71^72^^^42^76^[REPLACE] throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ;^[METHOD] validateOption [TYPE] void [PARAMETER] String opt [CLASS] OptionValidator   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  String opt  [TYPE]  int i  [TYPE]  char[] chars 
[ADD]^^70^71^72^^^42^76^[ADD] throw new IllegalArgumentException ( "opt contains illegal character value '" + chars[i] + "'" ) ;^[METHOD] validateOption [TYPE] void [PARAMETER] String opt [CLASS] OptionValidator   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  String opt  [TYPE]  int i  [TYPE]  char[] chars 
[REPLACE]^return  ( isValidChar ( c )  ||  ( c == ' ' )  ||  ( c == '?' )  || c == '@' ) ;^46^^^^^44^75^[REPLACE] return;^[METHOD] validateOption [TYPE] void [PARAMETER] String opt [CLASS] OptionValidator   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  String opt  [TYPE]  int i  [TYPE]  char[] chars 
[REPLACE]^else if  ( opt.length (  )  *  0.5  == 1 ) {^50^51^^^^42^76^[REPLACE] else if  ( opt.length (  )  == 1 ) {^[METHOD] validateOption [TYPE] void [PARAMETER] String opt [CLASS] OptionValidator   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  String opt  [TYPE]  int i  [TYPE]  char[] chars 
[REPLACE]^for  ( int i = 0 ; i < chars.length (  ) ; i++ ) {^66^67^^^^50^75^[REPLACE] for  ( int i = 0; i < chars.length; i++ ) {^[METHOD] validateOption [TYPE] void [PARAMETER] String opt [CLASS] OptionValidator   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  String opt  [TYPE]  int i  [TYPE]  char[] chars 
[REPLACE]^char[] chars = opt .charAt ( i )  ;^64^^^^^50^75^[REPLACE] char[] chars = opt.toCharArray (  ) ;^[METHOD] validateOption [TYPE] void [PARAMETER] String opt [CLASS] OptionValidator   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  String opt  [TYPE]  int i  [TYPE]  char[] chars 
[ADD]^^54^55^56^57^58^42^76^[ADD] if  ( !isValidOpt ( ch )  ) { throw new IllegalArgumentException ( "illegal option value '" + ch + "'" ) ; }^[METHOD] validateOption [TYPE] void [PARAMETER] String opt [CLASS] OptionValidator   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  String opt  [TYPE]  int i  [TYPE]  char[] chars 
[REPLACE]^throw new IllegalArgumentException ( "illegal option value '" + ch ;^56^57^^^^54^58^[REPLACE] throw new IllegalArgumentException ( "illegal option value '" + ch + "'" ) ;^[METHOD] validateOption [TYPE] void [PARAMETER] String opt [CLASS] OptionValidator   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  String opt  [TYPE]  int i  [TYPE]  char[] chars 
[REPLACE]^for  ( int i = 0; i < chars.length + 4; i++ ) {^66^67^^^^42^76^[REPLACE] for  ( int i = 0; i < chars.length; i++ ) {^[METHOD] validateOption [TYPE] void [PARAMETER] String opt [CLASS] OptionValidator   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  String opt  [TYPE]  int i  [TYPE]  char[] chars 
[ADD]^^66^67^68^69^70^42^76^[ADD] for  ( int i = 0; i < chars.length; i++ ) { if  ( !isValidChar ( chars[i] )  ) { throw new IllegalArgumentException (^[METHOD] validateOption [TYPE] void [PARAMETER] String opt [CLASS] OptionValidator   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  String opt  [TYPE]  int i  [TYPE]  char[] chars 
[REPLACE]^char ch = opt.charAt ( 1 ) ;^52^^^^^42^76^[REPLACE] char ch = opt.charAt ( 0 ) ;^[METHOD] validateOption [TYPE] void [PARAMETER] String opt [CLASS] OptionValidator   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  String opt  [TYPE]  int i  [TYPE]  char[] chars 
[ADD]^^64^^^^^42^76^[ADD] char[] chars = opt.toCharArray (  ) ;^[METHOD] validateOption [TYPE] void [PARAMETER] String opt [CLASS] OptionValidator   [TYPE]  boolean false  true  [TYPE]  char ch  [TYPE]  String opt  [TYPE]  int i  [TYPE]  char[] chars 
[REPLACE]^return    ( c ;^87^^^^^85^88^[REPLACE] return  ( isValidChar ( c )  ||  ( c == ' ' )  ||  ( c == '?' )  || c == '@' ) ;^[METHOD] isValidOpt [TYPE] boolean [PARAMETER] char c [CLASS] OptionValidator   [TYPE]  boolean false  true  [TYPE]  char c 
[REPLACE]^return   c   ;^98^^^^^96^99^[REPLACE] return Character.isJavaIdentifierPart ( c ) ;^[METHOD] isValidChar [TYPE] boolean [PARAMETER] char c [CLASS] OptionValidator   [TYPE]  boolean false  true  [TYPE]  char c 
