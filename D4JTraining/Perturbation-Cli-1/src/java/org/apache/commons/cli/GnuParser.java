[REPLACE]^private ArrayList tokens  = null ;^31^^^^^^^[REPLACE] private ArrayList tokens = new ArrayList (  ) ;^ [CLASS] GnuParser  
[REPLACE]^tokens.add ( "--" )  ;^64^^^^^63^172^[REPLACE] init (  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^66^67^^^^63^172^[ADD] boolean eatTheRest = false; Option currentOption = null;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^Option currentOption = false;^67^^^^^63^172^[REPLACE] Option currentOption = null;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^else if   (  "-".equals  (  arguments[i]  )    )  {  ;^71^72^^^^63^172^[REPLACE] if  ( "--".equals ( arguments[i] )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if   (  "--".equals  (  arguments[i]  )    )  {  ;^76^77^^^^63^172^[REPLACE] else if  ( "-".equals ( arguments[i] )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  ( arguments[i].startsWith ( "-" )  ) {^80^81^^^^63^172^[REPLACE] else if  ( arguments[i].startsWith ( "-" )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens.toArray ( arguments[i] ) ;^159^^^^^80^160^[REPLACE] tokens.add ( arguments[i] ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  ( option != null ) {^85^86^^^^80^160^[REPLACE] if  ( option == null ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^85^86^^88^89^80^160^[ADD] if  ( option == null ) { Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  (  ( specialOption != null )  &&  ( option != null )  ) {^114^115^^^^85^155^[REPLACE] if  (  ( specialOption != null )  &&  ( option == null )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^else if  (  ( currentOption == null )  && currentOption.hasArg (  )  ) {^119^120^^^^85^155^[REPLACE] else if  (  ( currentOption != null )  && currentOption.hasArg (  )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^119^120^121^122^123^85^155^[ADD] else if  (  ( currentOption != null )  && currentOption.hasArg (  )  ) { if  ( currentOption.hasArg (  )  ) { tokens.add ( arguments[i] ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  ( currentOption == this  ) {^141^142^^^^85^155^[REPLACE] else if  ( currentOption != null ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^else {^145^146^^^^85^155^[REPLACE] else if  ( stopAtNonOption ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^145^146^147^148^149^85^155^[ADD] else if  ( stopAtNonOption ) { eatTheRest = true; tokens.add ( "--" ) ; tokens.add ( arguments[i] ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens.toArray ( arguments[i] ) ;^153^^^^^145^154^[REPLACE] tokens.add ( arguments[i] ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^153^^^^^145^154^[ADD] tokens.add ( arguments[i] ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^eatTheRest = false;^147^^^^^145^154^[REPLACE] eatTheRest = true;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^eatTheRest = false;^147^^^^^85^155^[REPLACE] eatTheRest = true;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens.toArray ( arguments[i] ) ;^143^^^^^141^154^[REPLACE] tokens.add ( arguments[i] ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^else if   (  currentOption.hasArgs  (    )    )  {  ;^121^122^^^^119^154^[REPLACE] if  ( currentOption.hasArg (  )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^else {^126^127^^^^119^154^[REPLACE] else if  ( currentOption.hasArgs (  )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^126^127^128^129^^119^154^[ADD] else if  ( currentOption.hasArgs (  )  ) { tokens.add ( arguments[i] ) ; }^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^else if  ( true ) {^130^131^^^^119^154^[REPLACE] else if  ( stopAtNonOption ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens.toArray ( arguments[i] ) ;^138^^^^^130^139^[REPLACE] tokens.add ( arguments[i] ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^138^^^^^130^139^[ADD] tokens.add ( arguments[i] ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^eatTheRest = false;^132^^^^^130^139^[REPLACE] eatTheRest = true;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^eatTheRest = false;^132^^^^^119^154^[REPLACE] eatTheRest = true;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens .toArray ( null )  ;^128^^^^^126^139^[REPLACE] tokens.add ( arguments[i] ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  ( stopAtNonOption ) {^130^131^^^^119^154^[REPLACE] else if  ( stopAtNonOption ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^124^^^^^121^139^[ADD] currentOption = null;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  ( specialOption.hasArgs (  )  ) {^126^127^^^^119^154^[REPLACE] else if  ( currentOption.hasArgs (  )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^tokens.add ( "--" ) ;^132^133^^^^130^139^[ADD] eatTheRest = true; tokens.add ( "--" ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens.toArray ( arguments[i] ) ;^128^^^^^126^139^[REPLACE] tokens.add ( arguments[i] ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^else {^130^131^^^^119^154^[REPLACE] else if  ( stopAtNonOption ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^currentOption = true;^124^^^^^119^154^[REPLACE] currentOption = null;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^else if   (  currentOption.hasArgs  (    )    )  {  ;^121^122^^^^85^155^[REPLACE] if  ( currentOption.hasArg (  )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^else {^126^127^^^^85^155^[REPLACE] else if  ( currentOption.hasArgs (  )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^126^127^128^129^^85^155^[ADD] else if  ( currentOption.hasArgs (  )  ) { tokens.add ( arguments[i] ) ; }^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  ( stopAtNonOption ) {^130^131^^^^85^155^[REPLACE] else if  ( stopAtNonOption ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens .toArray ( this )  ;^138^^^^^130^139^[REPLACE] tokens.add ( arguments[i] ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REMOVE]^tokens.add ( "--" )  ;^138^^^^^130^139^[REMOVE] ^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^132^^^^^130^139^[ADD] eatTheRest = true;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^132^133^^^^85^155^[ADD] eatTheRest = true; tokens.add ( "--" ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REMOVE]^tokens.add ( "--" )  ;^128^^^^^126^139^[REMOVE] ^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^130^131^132^133^134^85^155^[ADD] else if  ( stopAtNonOption ) { eatTheRest = true; tokens.add ( "--" ) ; tokens.add ( arguments[i] ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^132^^^^^85^155^[ADD] eatTheRest = true;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^currentOption = option  ;^124^^^^^121^139^[REPLACE] currentOption = null;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^else {^130^131^^^^85^155^[REPLACE] else if  ( stopAtNonOption ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens .toArray ( false )  ;^138^^^^^130^139^[REPLACE] tokens.add ( arguments[i] ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^132^133^^^^130^139^[ADD] eatTheRest = true; tokens.add ( "--" ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^eatTheRest = false;^132^^^^^85^155^[REPLACE] eatTheRest = true;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  ( specialOption == this  ) {^141^142^^^^85^155^[REPLACE] else if  ( currentOption != null ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  ( stopAtNonOption ) {^145^146^^^^85^155^[REPLACE] else if  ( stopAtNonOption ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^tokens.add ( "--" ) ;^147^148^^^^145^154^[ADD] eatTheRest = true; tokens.add ( "--" ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^tokens.add ( "--" ) ;^147^148^^^^85^155^[ADD] eatTheRest = true; tokens.add ( "--" ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^currentOption = true;^124^^^^^85^155^[REPLACE] currentOption = null;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens.add ( arguments[i].substring ( 3, 2 )  ) ;^116^^^^^114^154^[REPLACE] tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens.add ( arguments[i].substring ( 3 )  ) ;^117^^^^^114^154^[REPLACE] tokens.add ( arguments[i].substring ( 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens.add ( arguments[i] .substring ( i , i )   ) ;^117^^^^^114^154^[REPLACE] tokens.add ( arguments[i].substring ( 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^else {^119^120^^^^85^155^[REPLACE] else if  (  ( currentOption != null )  && currentOption.hasArg (  )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^else {^141^142^^^^85^155^[REPLACE] else if  ( currentOption != null ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REMOVE]^if  ( eatTheRest )  {     for  ( i++; i <  ( arguments.length ) ; i++ )  {         tokens.add ( arguments[i] ) ;     } }^145^^^^^85^155^[REMOVE] ^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if   (  currentOption.hasArg  (    )    )  {  ;^126^127^^^^119^154^[REPLACE] else if  ( currentOption.hasArgs (  )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^132^^^^^119^154^[ADD] eatTheRest = true;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^130^131^132^133^134^119^154^[ADD] else if  ( stopAtNonOption ) { eatTheRest = true; tokens.add ( "--" ) ; tokens.add ( arguments[i] ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens .toArray ( null )  ;^138^^^^^130^139^[REPLACE] tokens.add ( arguments[i] ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens .toArray ( this )  ;^128^^^^^126^139^[REPLACE] tokens.add ( arguments[i] ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  ( currentOption .hasArgs (  )   ) {^121^122^^^^85^155^[REPLACE] if  ( currentOption.hasArg (  )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  ( currentOption.hasArgs (  )  ) {^126^127^^^^85^155^[REPLACE] else if  ( currentOption.hasArgs (  )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REMOVE]^if  ( eatTheRest )  {     for  ( i++; i <  ( arguments.length ) ; i++ )  {         tokens.add ( arguments[i] ) ;     } }^130^^^^^85^155^[REMOVE] ^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if   (  currentOption.hasArg  (    )    )  {  ;^126^127^^^^85^155^[REPLACE] else if  ( currentOption.hasArgs (  )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens .toArray ( true )  ;^128^^^^^126^139^[REPLACE] tokens.add ( arguments[i] ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^141^142^143^144^^85^155^[ADD] else if  ( currentOption != null ) { tokens.add ( arguments[i] ) ; }^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^else if  ( true ) {^145^146^^^^85^155^[REPLACE] else if  ( stopAtNonOption ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^143^^^^^141^154^[ADD] tokens.add ( arguments[i] ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^currentOption = null  ;^108^^^^^85^155^[REPLACE] currentOption = option;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^currentOption = false;^124^^^^^85^155^[REPLACE] currentOption = null;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^Option specialOption = options.getOption ( arguments[i].substring ( 4, 2 )  ) ;^111^112^^^^85^155^[REPLACE] Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  ( specialOption == this ) {^91^92^^^^85^155^[REPLACE] if  ( specialOption != null ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  ( stopAtNonOption ) {^96^97^^^^85^155^[REPLACE] else if  ( stopAtNonOption ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^96^97^98^99^100^85^155^[ADD] else if  ( stopAtNonOption ) { eatTheRest = true; tokens.add ( arguments[i] ) ; }^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens.toArray ( arguments[i] ) ;^103^^^^^96^104^[REPLACE] tokens.add ( arguments[i] ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^98^^^^^96^104^[ADD] eatTheRest = true;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^eatTheRest = false;^98^^^^^85^155^[REPLACE] eatTheRest = true;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens.add ( arguments[i].substring ( 2, 2 )  ) ;^93^^^^^91^104^[REPLACE] tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens.add ( arguments[i].substring ( 1, 2 )  ) ;^93^^^^^91^104^[REPLACE] tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens.toArray ( arguments[i].substring ( 1 )  ) ;^94^^^^^91^104^[REPLACE] tokens.add ( arguments[i].substring ( 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens.add ( arguments[i].substring ( 0 )  ) ;^94^^^^^91^104^[REPLACE] tokens.add ( arguments[i].substring ( 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^else {^96^97^^^^85^155^[REPLACE] else if  ( stopAtNonOption ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens .toArray ( this )  ;^103^^^^^96^104^[REPLACE] tokens.add ( arguments[i] ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^103^^^^^96^104^[ADD] tokens.add ( arguments[i] ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^eatTheRest = false;^98^^^^^96^104^[REPLACE] eatTheRest = true;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^Option specialOption = options.getOption ( arguments[i].substring ( 1, 2 )  ) ;^88^89^^^^85^155^[REPLACE] Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  (option == null ) {^91^92^^^^80^160^[REPLACE] if  ( specialOption != null ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^else {^96^97^^^^80^160^[REPLACE] else if  ( stopAtNonOption ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^96^97^98^99^100^80^160^[ADD] else if  ( stopAtNonOption ) { eatTheRest = true; tokens.add ( arguments[i] ) ; }^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens .toArray ( null )  ;^103^^^^^96^104^[REPLACE] tokens.add ( arguments[i] ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^eatTheRest = false;^98^^^^^80^160^[REPLACE] eatTheRest = true;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^arguments[i].substring ( 0, 2 )  ;^93^^^^^91^104^[REPLACE] tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens.add ( arguments[i].substring ( 0 - 0, 2 )  ) ;^93^^^^^91^104^[REPLACE] tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens.add ( arguments[i].substring ( 1 )  ) ;^94^^^^^91^104^[REPLACE] tokens.add ( arguments[i].substring ( 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^arguments[i].substring ( 0, 2 )  ;^94^^^^^91^104^[REPLACE] tokens.add ( arguments[i].substring ( 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  ( true ) {^96^97^^^^80^160^[REPLACE] else if  ( stopAtNonOption ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  (   ( currentOption != null )  ) {^114^115^^^^80^160^[REPLACE] if  (  ( specialOption != null )  &&  ( option == null )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  (  ( currentOption == null )  && currentOption.hasArg (  )  ) {^119^120^^^^80^160^[REPLACE] else if  (  ( currentOption != null )  && currentOption.hasArg (  )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  ( currentOption ==specialOption ) {^141^142^^^^80^160^[REPLACE] else if  ( currentOption != null ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  ( true ) {^145^146^^^^80^160^[REPLACE] else if  ( stopAtNonOption ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^eatTheRest = false;^147^^^^^80^160^[REPLACE] eatTheRest = true;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens .toArray ( null )  ;^153^^^^^145^154^[REPLACE] tokens.add ( arguments[i] ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^tokens.add ( "--" ) ;^147^148^^^^80^160^[ADD] eatTheRest = true; tokens.add ( "--" ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^121^122^123^124^125^119^154^[ADD] if  ( currentOption.hasArg (  )  ) { tokens.add ( arguments[i] ) ; currentOption = null; }^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  ( currentOption.hasArgs (  )  ) {^126^127^^^^119^154^[REPLACE] else if  ( currentOption.hasArgs (  )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  ( true ) {^130^131^^^^119^154^[REPLACE] else if  ( stopAtNonOption ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^132^133^^^^119^154^[ADD] eatTheRest = true; tokens.add ( "--" ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^currentOption = this;^124^^^^^121^139^[REPLACE] currentOption = null;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens .toArray ( 1 )  ;^138^^^^^130^139^[REPLACE] tokens.add ( arguments[i] ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens .toArray ( false )  ;^128^^^^^126^139^[REPLACE] tokens.add ( arguments[i] ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^currentOption = this;^124^^^^^119^154^[REPLACE] currentOption = null;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^else if   (  currentOption.hasArgs  (    )    )  {  ;^121^122^^^^80^160^[REPLACE] if  ( currentOption.hasArg (  )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^else {^126^127^^^^80^160^[REPLACE] else if  ( currentOption.hasArgs (  )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^else {^130^131^^^^80^160^[REPLACE] else if  ( stopAtNonOption ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^130^131^132^133^134^80^160^[ADD] else if  ( stopAtNonOption ) { eatTheRest = true; tokens.add ( "--" ) ; tokens.add ( arguments[i] ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^eatTheRest = false;^132^^^^^80^160^[REPLACE] eatTheRest = true;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if   (  currentOption.hasArg  (    )    )  {  ;^126^127^^^^80^160^[REPLACE] else if  ( currentOption.hasArgs (  )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^else if  ( true ) {^130^131^^^^80^160^[REPLACE] else if  ( stopAtNonOption ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  ( currentOption == false ) {^141^142^^^^80^160^[REPLACE] else if  ( currentOption != null ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^else if  ( true ) {^145^146^^^^80^160^[REPLACE] else if  ( stopAtNonOption ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens .toArray ( false )  ;^153^^^^^145^154^[REPLACE] tokens.add ( arguments[i] ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^currentOption = option  ;^124^^^^^80^160^[REPLACE] currentOption = null;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens.toArray ( arguments[i].substring ( 4, 2 )  ) ;^116^^^^^114^154^[REPLACE] tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^116^117^^^^114^154^[ADD] tokens.add ( arguments[i].substring ( 0, 2 )  ) ; tokens.add ( arguments[i].substring ( 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens.add ( arguments[i] .substring ( i )   ) ;^116^^^^^114^154^[REPLACE] tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens.add ( arguments[i].substring ( 2 - 1 )  ) ;^117^^^^^114^154^[REPLACE] tokens.add ( arguments[i].substring ( 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^117^^^^^114^154^[ADD] tokens.add ( arguments[i].substring ( 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^arguments[i].substring ( 0, 2 )  ;^117^^^^^114^154^[REPLACE] tokens.add ( arguments[i].substring ( 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  (  currentOption.hasArg (  )  ) {^119^120^^^^80^160^[REPLACE] else if  (  ( currentOption != null )  && currentOption.hasArg (  )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^else {^141^142^^^^80^160^[REPLACE] else if  ( currentOption != null ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^else {^145^146^^^^80^160^[REPLACE] else if  ( stopAtNonOption ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REMOVE]^if  ( eatTheRest )  {     for  ( i++; i <  ( arguments.length ) ; i++ )  {         tokens.add ( arguments[i] ) ;     } }^145^^^^^80^160^[REMOVE] ^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens .toArray ( true )  ;^138^^^^^130^139^[REPLACE] tokens.add ( arguments[i] ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^currentOption = false;^124^^^^^121^139^[REPLACE] currentOption = null;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^121^122^123^124^125^80^160^[ADD] if  ( currentOption.hasArg (  )  ) { tokens.add ( arguments[i] ) ; currentOption = null; }^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  ( stopAtNonOption ) {^130^131^^^^80^160^[REPLACE] else if  ( stopAtNonOption ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens .toArray ( 1 )  ;^128^^^^^126^139^[REPLACE] tokens.add ( arguments[i] ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^128^^^^^126^139^[ADD] tokens.add ( arguments[i] ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^currentOption = true;^124^^^^^121^139^[REPLACE] currentOption = null;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  ( true ) {^130^131^^^^80^160^[REPLACE] else if  ( stopAtNonOption ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^132^^^^^80^160^[ADD] eatTheRest = true;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  ( currentOption == null ) {^141^142^^^^80^160^[REPLACE] else if  ( currentOption != null ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens .toArray ( this )  ;^153^^^^^145^154^[REPLACE] tokens.add ( arguments[i] ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^145^146^147^148^149^80^160^[ADD] else if  ( stopAtNonOption ) { eatTheRest = true; tokens.add ( "--" ) ; tokens.add ( arguments[i] ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^currentOption = null  ;^108^^^^^80^160^[REPLACE] currentOption = option;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^currentOption = true;^124^^^^^80^160^[REPLACE] currentOption = null;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  )  ;^82^^^^^80^160^[REPLACE] Option option = options.getOption ( arguments[i] ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^Option specialOption = options.getOption ( arguments[i].substring ( 3, 2 )  ) ;^88^89^^^^80^160^[REPLACE] Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^Option specialOption = options.getOption ( arguments[i].substring ( 3, 2 )  ) ;^111^112^^^^80^160^[REPLACE] Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  ( option != null ) {^85^86^^^^63^172^[REPLACE] if  ( option == null ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^85^86^^88^89^63^172^[ADD] if  ( option == null ) { Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  (  ( specialOption != false )  &&  ( option != false )  ) {^114^115^^^^85^155^[REPLACE] if  (  ( specialOption != null )  &&  ( option == null )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^else if  ( specialOption == true ) {^141^142^^^^85^155^[REPLACE] else if  ( currentOption != null ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  ( true ) {^145^146^^^^85^155^[REPLACE] else if  ( stopAtNonOption ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^147^^^^^145^154^[ADD] eatTheRest = true;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  ( specialOption.hasArg (  )  ) {^121^122^^^^119^154^[REPLACE] if  ( currentOption.hasArg (  )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  ( currentOption.hasArgs (  )  ) {^121^122^^^^85^155^[REPLACE] if  ( currentOption.hasArg (  )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  ( currentOption == null ) {^141^142^^^^85^155^[REPLACE] else if  ( currentOption != null ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens .toArray ( false )  ;^143^^^^^141^154^[REPLACE] tokens.add ( arguments[i] ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^currentOption = this;^124^^^^^85^155^[REPLACE] currentOption = null;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^147^148^^^^85^155^[ADD] eatTheRest = true; tokens.add ( "--" ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^arguments[i].substring ( 0, 2 )  ;^116^^^^^114^154^[REPLACE] tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens.add ( arguments[i].substring ( 2, 2 )  ) ;^116^^^^^114^154^[REPLACE] tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^else if  ( true (  )  ) {^119^120^^^^85^155^[REPLACE] else if  (  ( currentOption != null )  && currentOption.hasArg (  )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^else if  ( currentOption == false ) {^141^142^^^^85^155^[REPLACE] else if  ( currentOption != null ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  ( currentOption.hasArgs (  )  ) {^121^122^^^^119^154^[REPLACE] if  ( currentOption.hasArg (  )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens.add ( "--" )  ;^138^^^^^130^139^[REPLACE] tokens.add ( arguments[i] ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REMOVE]^if  ( eatTheRest )  {     for  ( i++; i <  ( arguments.length ) ; i++ )  {         tokens.add ( arguments[i] ) ;     } }^130^^^^^119^154^[REMOVE] ^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^121^122^123^124^125^85^155^[ADD] if  ( currentOption.hasArg (  )  ) { tokens.add ( arguments[i] ) ; currentOption = null; }^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  (specialOption == null ) {^141^142^^^^85^155^[REPLACE] else if  ( currentOption != null ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REMOVE]^tokens.add ( "--" )  ;^153^^^^^145^154^[REMOVE] ^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^Option specialOption = options.getOption ( arguments[i].substring ( 2, 2 )  ) ;^111^112^^^^85^155^[REPLACE] Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  ( specialOption == null ) {^91^92^^^^85^155^[REPLACE] if  ( specialOption != null ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^tokens.add ( arguments[i] ) ;^98^99^^^^85^155^[ADD] eatTheRest = true; tokens.add ( arguments[i] ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^93^^^^^91^104^[ADD] tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens.add ( arguments[i].substring ( 0L, 2 )  ) ;^93^^^^^91^104^[REPLACE] tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens.add ( arguments[i].equals ( 2L )  ) ;^94^^^^^91^104^[REPLACE] tokens.add ( arguments[i].substring ( 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^94^^^^^91^104^[ADD] tokens.add ( arguments[i].substring ( 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens.add ( arguments[i].substring ( 4 )  ) ;^94^^^^^91^104^[REPLACE] tokens.add ( arguments[i].substring ( 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^Option specialOption = options.getOption ( arguments[i].substring ( 2, 2 )  ) ;^88^89^^^^85^155^[REPLACE] Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  ( specialOption == true ) {^91^92^^^^63^172^[REPLACE] if  ( specialOption != null ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^91^92^93^94^95^63^172^[ADD] if  ( specialOption != null ) { tokens.add ( arguments[i].substring ( 0, 2 )  ) ; tokens.add ( arguments[i].substring ( 2 )  ) ; }^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  ( stopAtNonOption ) {^96^97^^^^63^172^[REPLACE] else if  ( stopAtNonOption ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^98^^^^^63^172^[ADD] eatTheRest = true;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REMOVE]^"--".equals ( arguments[i] )  ;^93^^^^^91^104^[REMOVE] ^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^arguments[i].substring ( 2 )  ;^93^^^^^91^104^[REPLACE] tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^arguments[i].substring ( 2 )  ;^94^^^^^91^104^[REPLACE] tokens.add ( arguments[i].substring ( 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens.add ( arguments[i].substring ( 2 - 4 )  ) ;^94^^^^^91^104^[REPLACE] tokens.add ( arguments[i].substring ( 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REMOVE]^( currentOption.hasArg (  )  )  ;^94^^^^^91^104^[REMOVE] ^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  ( true ) {^96^97^^^^63^172^[REPLACE] else if  ( stopAtNonOption ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  (  ( specialOption != null )  ) {^114^115^^^^63^172^[REPLACE] if  (  ( specialOption != null )  &&  ( option == null )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  (  currentOption.hasArg (  )  ) {^119^120^^^^63^172^[REPLACE] else if  (  ( currentOption != null )  && currentOption.hasArg (  )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^119^120^121^122^123^63^172^[ADD] else if  (  ( currentOption != null )  && currentOption.hasArg (  )  ) { if  ( currentOption.hasArg (  )  ) { tokens.add ( arguments[i] ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^else {^141^142^^^^63^172^[REPLACE] else if  ( currentOption != null ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^141^142^143^144^^63^172^[ADD] else if  ( currentOption != null ) { tokens.add ( arguments[i] ) ; }^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^else {^145^146^^^^63^172^[REPLACE] else if  ( stopAtNonOption ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^eatTheRest = false;^147^^^^^63^172^[REPLACE] eatTheRest = true;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens .toArray ( this )  ;^143^^^^^141^154^[REPLACE] tokens.add ( arguments[i] ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^145^146^147^148^149^63^172^[ADD] else if  ( stopAtNonOption ) { eatTheRest = true; tokens.add ( "--" ) ; tokens.add ( arguments[i] ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^tokens.add ( "--" ) ;^147^148^^^^63^172^[ADD] eatTheRest = true; tokens.add ( "--" ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^else if  ( currentOption.hasArg (  )  ) {^126^127^^^^119^154^[REPLACE] else if  ( currentOption.hasArgs (  )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if   (  specialOption != null  )  {  ;^130^131^^^^119^154^[REPLACE] else if  ( stopAtNonOption ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^currentOption = false;^124^^^^^119^154^[REPLACE] currentOption = null;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^else if   (  currentOption.hasArgs  (    )    )  {  ;^121^122^^^^63^172^[REPLACE] if  ( currentOption.hasArg (  )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if   (  currentOption.hasArg  (    )    )  {  ;^126^127^^^^63^172^[REPLACE] else if  ( currentOption.hasArgs (  )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^else {^130^131^^^^63^172^[REPLACE] else if  ( stopAtNonOption ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^130^131^132^133^134^63^172^[ADD] else if  ( stopAtNonOption ) { eatTheRest = true; tokens.add ( "--" ) ; tokens.add ( arguments[i] ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^eatTheRest = false;^132^^^^^63^172^[REPLACE] eatTheRest = true;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  ( stopAtNonOption ) {^130^131^^^^63^172^[REPLACE] else if  ( stopAtNonOption ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^else {^126^127^^^^63^172^[REPLACE] else if  ( currentOption.hasArgs (  )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^126^127^128^129^^63^172^[ADD] else if  ( currentOption.hasArgs (  )  ) { tokens.add ( arguments[i] ) ; }^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^else if  ( currentOption == null ) {^141^142^^^^63^172^[REPLACE] else if  ( currentOption != null ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  ( true ) {^145^146^^^^63^172^[REPLACE] else if  ( stopAtNonOption ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if   (  specialOption != null  )  {  ;^145^146^^^^63^172^[REPLACE] else if  ( stopAtNonOption ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^currentOption = this;^124^^^^^63^172^[REPLACE] currentOption = null;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^tokens.add ( "--" ) ;^132^133^^^^63^172^[ADD] eatTheRest = true; tokens.add ( "--" ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^147^^^^^63^172^[ADD] eatTheRest = true;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens.add ( arguments[i].substring ( 0 * 4, 2 )  ) ;^116^^^^^114^154^[REPLACE] tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^116^^^^^114^154^[ADD] tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^arguments[i].substring ( 2 )  ;^116^^^^^114^154^[REPLACE] tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens.add ( arguments[i].substring ( 2L )  ) ;^117^^^^^114^154^[REPLACE] tokens.add ( arguments[i].substring ( 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens.add ( arguments[i].substring ( 2 - 3 )  ) ;^117^^^^^114^154^[REPLACE] tokens.add ( arguments[i].substring ( 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^else {^119^120^^^^63^172^[REPLACE] else if  (  ( currentOption != null )  && currentOption.hasArg (  )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^else if  ( currentOption == true ) {^141^142^^^^63^172^[REPLACE] else if  ( currentOption != null ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  ( stopAtNonOption ) {^145^146^^^^63^172^[REPLACE] else if  ( stopAtNonOption ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^147^148^^^^63^172^[ADD] eatTheRest = true; tokens.add ( "--" ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^121^122^123^124^125^63^172^[ADD] if  ( currentOption.hasArg (  )  ) { tokens.add ( arguments[i] ) ; currentOption = null; }^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  ( currentOption.hasArgs (  )  ) {^126^127^^^^63^172^[REPLACE] else if  ( currentOption.hasArgs (  )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REMOVE]^if  ( eatTheRest )  {     for  ( i++; i <  ( arguments.length ) ; i++ )  {         tokens.add ( arguments[i] ) ;     } }^130^^^^^63^172^[REMOVE] ^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if   (  specialOption != null  )  {  ;^130^131^^^^63^172^[REPLACE] else if  ( stopAtNonOption ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REMOVE]^if  ( eatTheRest )  {     for  ( i++; i <  ( arguments.length ) ; i++ )  {         tokens.add ( arguments[i] ) ;     } }^145^^^^^63^172^[REMOVE] ^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^eatTheRest = false;^98^^^^^63^172^[REPLACE] eatTheRest = true;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^currentOption = null  ;^108^^^^^63^172^[REPLACE] currentOption = option;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  )  ;^82^^^^^63^172^[REPLACE] Option option = options.getOption ( arguments[i] ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^Option specialOption = options.getOption ( arguments[i].substring ( 0 % 2, 2 )  ) ;^88^89^^^^63^172^[REPLACE] Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^Option specialOption = options.getOption ( arguments[i].substring ( 2, 2 )  ) ;^111^112^^^^63^172^[REPLACE] Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens.add ( "--" )  ;^78^^^^^76^160^[REPLACE] tokens.add ( "-" ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if   (  specialOption != null  )  {  ;^80^81^^^^63^172^[REPLACE] else if  ( arguments[i].startsWith ( "-" )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^80^81^82^^^63^172^[ADD] else if  ( arguments[i].startsWith ( "-" )  ) { Option option = options.getOption ( arguments[i] ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REMOVE]^tokens.add ( "--" )  ;^159^^^^^80^160^[REMOVE] ^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  ( option != true ) {^85^86^^^^80^160^[REPLACE] if  ( option == null ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REMOVE]^if  ( arguments[i].startsWith ( "-" )  )  {     Option option = options.getOption ( arguments[i] ) ;     if  ( option == null )  {         Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;         if  ( specialOption != null )  {             tokens.add ( arguments[i].substring ( 0, 2 )  ) ;             tokens.add ( arguments[i].substring ( 2 )  ) ;         }else             if  ( stopAtNonOption )  {                 eatTheRest = true;                 tokens.add ( arguments[i] ) ;             }else {                 tokens.add ( arguments[i] ) ;             }              }else {         currentOption = option;         Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;         if  (  ( specialOption != null )  &&  ( option == null )  )  {             tokens.add ( arguments[i].substring ( 0, 2 )  ) ;             tokens.add ( arguments[i].substring ( 2 )  ) ;         }else             if  (  ( currentOption != null )  &&  ( currentOption.hasArg (  )  )  )  {                 if  ( currentOption.hasArg (  )  )  {                     tokens.add ( arguments[i] ) ;                     currentOption = null;                 }else                     if  ( currentOption.hasArgs (  )  )  {                         tokens.add ( arguments[i] ) ;                     }else                         if  ( stopAtNonOption )  {                             eatTheRest = true;                             tokens.add ( "--" ) ;                             tokens.add ( arguments[i] ) ;                         }else {                             tokens.add ( arguments[i] ) ;                         }                                                   }else                 if  ( currentOption != null )  {                     tokens.add ( arguments[i] ) ;                 }else                     if  ( stopAtNonOption )  {                         eatTheRest = true;                         tokens.add ( "--" ) ;                         tokens.add ( arguments[i] ) ;                     }else {                         tokens.add ( arguments[i] ) ;                     }                                            } }else {     tokens.add ( arguments[i] ) ; }^85^^^^^80^160^[REMOVE] ^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  (   ( option != null )  ) {^114^115^^^^85^155^[REPLACE] if  (  ( specialOption != null )  &&  ( option == null )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REMOVE]^if  ( arguments[i].startsWith ( "-" )  )  {     Option option = options.getOption ( arguments[i] ) ;     if  ( option == null )  {         Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;         if  ( specialOption != null )  {             tokens.add ( arguments[i].substring ( 0, 2 )  ) ;             tokens.add ( arguments[i].substring ( 2 )  ) ;         }else             if  ( stopAtNonOption )  {                 eatTheRest = true;                 tokens.add ( arguments[i] ) ;             }else {                 tokens.add ( arguments[i] ) ;             }              }else {         currentOption = option;         Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;         if  (  ( specialOption != null )  &&  ( option == null )  )  {             tokens.add ( arguments[i].substring ( 0, 2 )  ) ;             tokens.add ( arguments[i].substring ( 2 )  ) ;         }else             if  (  ( currentOption != null )  &&  ( currentOption.hasArg (  )  )  )  {                 if  ( currentOption.hasArg (  )  )  {                     tokens.add ( arguments[i] ) ;                     currentOption = null;                 }else                     if  ( currentOption.hasArgs (  )  )  {                         tokens.add ( arguments[i] ) ;                     }else                         if  ( stopAtNonOption )  {                             eatTheRest = true;                             tokens.add ( "--" ) ;                             tokens.add ( arguments[i] ) ;                         }else {                             tokens.add ( arguments[i] ) ;                         }                                                   }else                 if  ( currentOption != null )  {                     tokens.add ( arguments[i] ) ;                 }else                     if  ( stopAtNonOption )  {                         eatTheRest = true;                         tokens.add ( "--" ) ;                         tokens.add ( arguments[i] ) ;                     }else {                         tokens.add ( arguments[i] ) ;                     }                                            } }else {     tokens.add ( arguments[i] ) ; }^114^^^^^85^155^[REMOVE] ^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  ( specialOption == true ) {^141^142^^^^85^155^[REPLACE] else if  ( currentOption != null ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^currentOption = option  ;^124^^^^^119^154^[REPLACE] currentOption = null;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^147^148^^^^145^154^[ADD] eatTheRest = true; tokens.add ( "--" ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^currentOption = option  ;^124^^^^^85^155^[REPLACE] currentOption = null;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens.add ( arguments[i].substring ( 1, 2 )  ) ;^116^^^^^114^154^[REPLACE] tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens.add ( arguments[i].substring ( 0 )  ) ;^117^^^^^114^154^[REPLACE] tokens.add ( arguments[i].substring ( 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^else if  (  currentOption.hasArg (  )  ) {^119^120^^^^85^155^[REPLACE] else if  (  ( currentOption != null )  && currentOption.hasArg (  )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^147^^^^^85^155^[ADD] eatTheRest = true;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^124^^^^^119^154^[ADD] currentOption = null;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens .toArray ( true )  ;^153^^^^^145^154^[REPLACE] tokens.add ( arguments[i] ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens .toArray ( true )  ;^143^^^^^141^154^[REPLACE] tokens.add ( arguments[i] ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^108^^^^^85^155^[ADD] currentOption = option;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^91^92^93^94^95^85^155^[ADD] if  ( specialOption != null ) { tokens.add ( arguments[i].substring ( 0, 2 )  ) ; tokens.add ( arguments[i].substring ( 2 )  ) ; }^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REMOVE]^tokens.add ( "--" )  ;^103^^^^^96^104^[REMOVE] ^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens.add ( arguments[i].substring ( 2L )  ) ;^94^^^^^91^104^[REPLACE] tokens.add ( arguments[i].substring ( 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^else if  ( true ) {^96^97^^^^85^155^[REPLACE] else if  ( stopAtNonOption ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^98^^^^^85^155^[ADD] eatTheRest = true;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^Option specialOption = options.getOption ( arguments[i].substring ( 0 - 2, 2 )  ) ;^88^89^^^^85^155^[REPLACE] Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  ( specialOption ==option ) {^91^92^^^^80^160^[REPLACE] if  ( specialOption != null ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^else if  ( true ) {^96^97^^^^80^160^[REPLACE] else if  ( stopAtNonOption ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^tokens.add ( arguments[i].substring ( 2 )  ) ;^93^94^^^^91^104^[ADD] tokens.add ( arguments[i].substring ( 0, 2 )  ) ; tokens.add ( arguments[i].substring ( 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^98^99^^^^96^104^[ADD] eatTheRest = true; tokens.add ( arguments[i] ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  (  (true )  &&  ( option != null )  ) {^114^115^^^^80^160^[REPLACE] if  (  ( specialOption != null )  &&  ( option == null )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^114^115^116^117^118^80^160^[ADD] if  (  ( specialOption != null )  &&  ( option == null )  ) { tokens.add ( arguments[i].substring ( 0, 2 )  ) ; tokens.add ( arguments[i].substring ( 2 )  ) ; }^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  (  ( currentOption == null )  &&true (  )  ) {^119^120^^^^80^160^[REPLACE] else if  (  ( currentOption != null )  && currentOption.hasArg (  )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^else if  ( specialOption == null ) {^141^142^^^^80^160^[REPLACE] else if  ( currentOption != null ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^141^142^143^144^^80^160^[ADD] else if  ( currentOption != null ) { tokens.add ( arguments[i] ) ; }^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  ( stopAtNonOption ) {^145^146^^^^80^160^[REPLACE] else if  ( stopAtNonOption ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens .toArray ( 0 )  ;^138^^^^^130^139^[REPLACE] tokens.add ( arguments[i] ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  ( specialOption.hasArg (  )  ) {^121^122^^^^80^160^[REPLACE] if  ( currentOption.hasArg (  )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  ( currentOption.hasArg (  )  ) {^126^127^^^^80^160^[REPLACE] else if  ( currentOption.hasArgs (  )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^126^127^128^129^^80^160^[ADD] else if  ( currentOption.hasArgs (  )  ) { tokens.add ( arguments[i] ) ; }^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  ( specialOption.hasArgs (  )  ) {^126^127^^^^80^160^[REPLACE] else if  ( currentOption.hasArgs (  )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REMOVE]^tokens.add ( "--" )  ;^143^^^^^141^154^[REMOVE] ^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^124^^^^^80^160^[ADD] currentOption = null;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens.add ( arguments[i].substring ( 1 )  ) ;^117^^^^^114^154^[REPLACE] tokens.add ( arguments[i].substring ( 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens.add ( arguments[i].equals ( 3 )  ) ;^117^^^^^114^154^[REPLACE] tokens.add ( arguments[i].substring ( 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^else if  (  ( currentOption == false )  && currentOption.hasArg (  )  ) {^119^120^^^^80^160^[REPLACE] else if  (  ( currentOption != null )  && currentOption.hasArg (  )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REMOVE]^if  ( eatTheRest )  {     for  ( i++; i <  ( arguments.length ) ; i++ )  {         tokens.add ( arguments[i] ) ;     } }^130^^^^^80^160^[REMOVE] ^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens .toArray ( 0 )  ;^128^^^^^126^139^[REPLACE] tokens.add ( arguments[i] ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  (specialOption == null ) {^141^142^^^^80^160^[REPLACE] else if  ( currentOption != null ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^currentOption = false;^124^^^^^80^160^[REPLACE] currentOption = null;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^Option specialOption = options.getOption ( arguments[i].substring ( 2, 2 )  ) ;^111^112^^^^80^160^[REPLACE] Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  (  (stopAtNonOption )  &&  ( option != null )  ) {^114^115^^^^85^155^[REPLACE] if  (  ( specialOption != null )  &&  ( option == null )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  (  ( currentOption == null )  && currentOption.hasArg (  )  ) {^119^120^^^^85^155^[REPLACE] else if  (  ( currentOption != null )  && currentOption.hasArg (  )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  ( specialOption.hasArg (  )  ) {^121^122^^^^85^155^[REPLACE] if  ( currentOption.hasArg (  )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  ( true ) {^130^131^^^^85^155^[REPLACE] else if  ( stopAtNonOption ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^else if  (specialOption == false ) {^141^142^^^^85^155^[REPLACE] else if  ( currentOption != null ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens.toArray ( arguments[i].substring ( 0 / 0, 2 )  ) ;^116^^^^^114^154^[REPLACE] tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REMOVE]^tokens.add ( "--" )  ;^117^^^^^114^154^[REMOVE] ^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  (  ( currentOption == true )  && currentOption.hasArg (  )  ) {^119^120^^^^85^155^[REPLACE] else if  (  ( currentOption != null )  && currentOption.hasArg (  )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  ( specialOption.hasArgs (  )  ) {^126^127^^^^85^155^[REPLACE] else if  ( currentOption.hasArgs (  )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  ( currentOption .hasArg (  )   ) {^126^127^^^^85^155^[REPLACE] else if  ( currentOption.hasArgs (  )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens .toArray ( null )  ;^143^^^^^141^154^[REPLACE] tokens.add ( arguments[i] ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^Option specialOption = options.getOption ( arguments[i].substring ( 3, 2 )  ) ;^111^112^^^^85^155^[REPLACE] Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens.add ( arguments[i].substring ( 0 + 1, 2 )  ) ;^93^^^^^91^104^[REPLACE] tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^93^94^^^^91^104^[ADD] tokens.add ( arguments[i].substring ( 0, 2 )  ) ; tokens.add ( arguments[i].substring ( 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens.add ( arguments[i].equals ( 5 )  ) ;^94^^^^^91^104^[REPLACE] tokens.add ( arguments[i].substring ( 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^Option specialOption = options.getOption ( arguments[i].substring ( 4, 2 )  ) ;^88^89^^^^85^155^[REPLACE] Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  (option == null ) {^91^92^^^^63^172^[REPLACE] if  ( specialOption != null ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens.add ( arguments[i].equals ( 4 )  ) ;^94^^^^^91^104^[REPLACE] tokens.add ( arguments[i].substring ( 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^96^97^98^99^100^63^172^[ADD] else if  ( stopAtNonOption ) { eatTheRest = true; tokens.add ( arguments[i] ) ; }^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  (   ( option != null )  ) {^114^115^^^^63^172^[REPLACE] if  (  ( specialOption != null )  &&  ( option == null )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^else if  (  ( currentOption == null )  && currentOption.hasArg (  )  ) {^119^120^^^^63^172^[REPLACE] else if  (  ( currentOption != null )  && currentOption.hasArg (  )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^else if  (specialOption == true ) {^141^142^^^^63^172^[REPLACE] else if  ( currentOption != null ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  ( currentOption .hasArg (  )   ) {^126^127^^^^119^154^[REPLACE] else if  ( currentOption.hasArgs (  )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^else if  ( currentOption .hasArg (  )   ) {^126^127^^^^63^172^[REPLACE] else if  ( currentOption.hasArgs (  )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^currentOption = false;^124^^^^^63^172^[REPLACE] currentOption = null;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^132^133^^^^63^172^[ADD] eatTheRest = true; tokens.add ( "--" ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens.toArray ( arguments[i].substring ( 2, 2 )  ) ;^116^^^^^114^154^[REPLACE] tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens.add ( arguments[i].substring ( 2 * 1 )  ) ;^117^^^^^114^154^[REPLACE] tokens.add ( arguments[i].substring ( 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens.add ( arguments[i].substring ( 4 )  ) ;^117^^^^^114^154^[REPLACE] tokens.add ( arguments[i].substring ( 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^else if  ( true ) {^130^131^^^^63^172^[REPLACE] else if  ( stopAtNonOption ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^98^99^^^^63^172^[ADD] eatTheRest = true; tokens.add ( arguments[i] ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^124^^^^^63^172^[ADD] currentOption = null;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^82^^^^^63^172^[ADD] Option option = options.getOption ( arguments[i] ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^88^89^^^^63^172^[ADD] Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^Option specialOption = options.getOption ( arguments[i].substring ( 1, 2 )  ) ;^111^112^^^^63^172^[REPLACE] Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^73^74^^^^71^160^[ADD] eatTheRest = true; tokens.add ( "--" ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^else {^76^77^^^^63^172^[REPLACE] else if  ( "-".equals ( arguments[i] )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^76^77^78^79^^63^172^[ADD] else if  ( "-".equals ( arguments[i] )  ) { tokens.add ( "-" ) ; }^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^else {^80^81^^^^63^172^[REPLACE] else if  ( arguments[i].startsWith ( "-" )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^159^^^^^80^160^[ADD] tokens.add ( arguments[i] ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  (  ( currentOption != null )  ) {^114^115^^^^85^155^[REPLACE] if  (  ( specialOption != null )  &&  ( option == null )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^114^115^116^117^118^85^155^[ADD] if  (  ( specialOption != null )  &&  ( option == null )  ) { tokens.add ( arguments[i].substring ( 0, 2 )  ) ; tokens.add ( arguments[i].substring ( 2 )  ) ; }^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^else if  ( currentOption ==specialOption ) {^141^142^^^^85^155^[REPLACE] else if  ( currentOption != null ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens .toArray ( 0 )  ;^153^^^^^145^154^[REPLACE] tokens.add ( arguments[i] ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens.add ( "--" )  ;^128^^^^^126^139^[REPLACE] tokens.add ( arguments[i] ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^else if  ( true ) {^130^131^^^^85^155^[REPLACE] else if  ( stopAtNonOption ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens.add ( "--" )  ;^153^^^^^145^154^[REPLACE] tokens.add ( arguments[i] ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens.add ( arguments[i].equals ( 2 + 0 )  ) ;^117^^^^^114^154^[REPLACE] tokens.add ( arguments[i].substring ( 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  (  ( currentOption == this )  && currentOption.hasArg (  )  ) {^119^120^^^^85^155^[REPLACE] else if  (  ( currentOption != null )  && currentOption.hasArg (  )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^124^^^^^85^155^[ADD] currentOption = null;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^111^112^^^^85^155^[ADD] Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens.toArray ( arguments[i].substring ( 2 + 1 )  ) ;^94^^^^^91^104^[REPLACE] tokens.add ( arguments[i].substring ( 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  ( true ) {^96^97^^^^85^155^[REPLACE] else if  ( stopAtNonOption ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^Option specialOption = options.getOption ( arguments[i].substring ( 0 - 3, 2 )  ) ;^88^89^^^^85^155^[REPLACE] Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  ( option == null ) {^91^92^^^^80^160^[REPLACE] if  ( specialOption != null ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^91^92^93^94^95^80^160^[ADD] if  ( specialOption != null ) { tokens.add ( arguments[i].substring ( 0, 2 )  ) ; tokens.add ( arguments[i].substring ( 2 )  ) ; }^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  ( stopAtNonOption ) {^96^97^^^^80^160^[REPLACE] else if  ( stopAtNonOption ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REMOVE]^if  ( eatTheRest )  {     for  ( i++; i <  ( arguments.length ) ; i++ )  {         tokens.add ( arguments[i] ) ;     } }^96^^^^^80^160^[REMOVE] ^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens.add ( arguments[i].substring ( 4, 2 )  ) ;^93^^^^^91^104^[REPLACE] tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens.add ( arguments[i] .substring ( i )   ) ;^93^^^^^91^104^[REPLACE] tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  (  ( true )  &&  ( option != null )  ) {^114^115^^^^80^160^[REPLACE] if  (  ( specialOption != null )  &&  ( option == null )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^else if  (  ( currentOption == null )  ) {^119^120^^^^80^160^[REPLACE] else if  (  ( currentOption != null )  && currentOption.hasArg (  )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if   (  specialOption != null  )  {  ;^145^146^^^^80^160^[REPLACE] else if  ( stopAtNonOption ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^147^^^^^80^160^[ADD] eatTheRest = true;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  ( currentOption.hasArgs (  )  ) {^126^127^^^^80^160^[REPLACE] else if  ( currentOption.hasArgs (  )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens.add ( arguments[i].equals ( 0 )  ) ;^117^^^^^114^154^[REPLACE] tokens.add ( arguments[i].substring ( 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens.add ( arguments[i].substring ( 2 + 1 )  ) ;^117^^^^^114^154^[REPLACE] tokens.add ( arguments[i].substring ( 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^else if  (  currentOption.hasArg (  )  ) {^119^120^^^^80^160^[REPLACE] else if  (  ( currentOption != null )  && currentOption.hasArg (  )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^119^120^121^122^123^80^160^[ADD] else if  (  ( currentOption != null )  && currentOption.hasArg (  )  ) { if  ( currentOption.hasArg (  )  ) { tokens.add ( arguments[i] ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^else if  ( currentOption == null ) {^141^142^^^^80^160^[REPLACE] else if  ( currentOption != null ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^else if  ( specialOption.hasArgs (  )  ) {^126^127^^^^119^154^[REPLACE] else if  ( currentOption.hasArgs (  )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^132^133^^^^80^160^[ADD] eatTheRest = true; tokens.add ( "--" ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^98^99^^^^80^160^[ADD] eatTheRest = true; tokens.add ( arguments[i] ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^88^89^^^^80^160^[ADD] Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  ( option != this  ) {^85^86^^^^63^172^[REPLACE] if  ( option == null ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  (  ( specialOption != false )  ) {^114^115^^^^85^155^[REPLACE] if  (  ( specialOption != null )  &&  ( option == null )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  (  currentOption.hasArg (  )  ) {^119^120^^^^85^155^[REPLACE] else if  (  ( currentOption != null )  && currentOption.hasArg (  )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  ( specialOption == null ) {^141^142^^^^85^155^[REPLACE] else if  ( currentOption != null ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  ( currentOption .hasArgs (  )   ) {^121^122^^^^119^154^[REPLACE] if  ( currentOption.hasArg (  )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens.add ( arguments[i].substring ( 4, 2 )  ) ;^116^^^^^114^154^[REPLACE] tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^arguments[i].substring ( 2 )  ;^117^^^^^114^154^[REPLACE] tokens.add ( arguments[i].substring ( 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens.add ( arguments[i].equals ( 2L )  ) ;^117^^^^^114^154^[REPLACE] tokens.add ( arguments[i].substring ( 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^else if  ( currentOption == null ) {^141^142^^^^85^155^[REPLACE] else if  ( currentOption != null ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if   (  specialOption != null  )  {  ;^145^146^^^^85^155^[REPLACE] else if  ( stopAtNonOption ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens.add ( "--" )  ;^143^^^^^141^154^[REPLACE] tokens.add ( arguments[i] ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^else if  ( currentOption == this ) {^141^142^^^^85^155^[REPLACE] else if  ( currentOption != null ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens.add ( arguments[i].substring ( 2 - 3 )  ) ;^94^^^^^91^104^[REPLACE] tokens.add ( arguments[i].substring ( 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens .toArray ( this )  ;^94^^^^^91^104^[REPLACE] tokens.add ( arguments[i].substring ( 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^else {^96^97^^^^63^172^[REPLACE] else if  ( stopAtNonOption ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  (  ( specialOption != null )  &&  ( option != null )  ) {^114^115^^^^63^172^[REPLACE] if  (  ( specialOption != null )  &&  ( option == null )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^114^115^116^117^118^63^172^[ADD] if  (  ( specialOption != null )  &&  ( option == null )  ) { tokens.add ( arguments[i].substring ( 0, 2 )  ) ; tokens.add ( arguments[i].substring ( 2 )  ) ; }^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  (  ( currentOption == true )  && currentOption.hasArg (  )  ) {^119^120^^^^63^172^[REPLACE] else if  (  ( currentOption != null )  && currentOption.hasArg (  )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^132^^^^^63^172^[ADD] eatTheRest = true;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  ( true ) {^130^131^^^^63^172^[REPLACE] else if  ( stopAtNonOption ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^else if  ( specialOption ==specialOption ) {^141^142^^^^63^172^[REPLACE] else if  ( currentOption != null ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens .toArray ( true )  ;^116^^^^^114^154^[REPLACE] tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens.add ( arguments[i].substring ( 0 * 0, 2 )  ) ;^116^^^^^114^154^[REPLACE] tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  (  ( currentOption == true )  ) {^119^120^^^^63^172^[REPLACE] else if  (  ( currentOption != null )  && currentOption.hasArg (  )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  (specialOption == null ) {^141^142^^^^63^172^[REPLACE] else if  ( currentOption != null ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  ( specialOption.hasArg (  )  ) {^121^122^^^^63^172^[REPLACE] if  ( currentOption.hasArg (  )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  ( currentOption.hasArg (  )  ) {^126^127^^^^63^172^[REPLACE] else if  ( currentOption.hasArgs (  )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^else if  ( specialOption.hasArgs (  )  ) {^126^127^^^^63^172^[REPLACE] else if  ( currentOption.hasArgs (  )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^Option specialOption = options.getOption ( arguments[i].substring ( 2, 2 )  ) ;^88^89^^^^63^172^[REPLACE] Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^111^112^^^^63^172^[ADD] Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens .toArray ( 0 )  ;^159^^^^^80^160^[REPLACE] tokens.add ( arguments[i] ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  ( option !=specialOption ) {^85^86^^^^80^160^[REPLACE] if  ( option == null ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  (  ( specialOption != true )  &&  ( option != true )  ) {^114^115^^^^85^155^[REPLACE] if  (  ( specialOption != null )  &&  ( option == null )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^else if  (specialOption == true ) {^141^142^^^^85^155^[REPLACE] else if  ( currentOption != null ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens.toArray ( arguments[i].substring ( 1 )  ) ;^117^^^^^114^154^[REPLACE] tokens.add ( arguments[i].substring ( 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^Option specialOption = options.getOption ( arguments[i].substring ( 0 * 1, 2 )  ) ;^111^112^^^^85^155^[REPLACE] Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  (option == this ) {^91^92^^^^85^155^[REPLACE] if  ( specialOption != null ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens.add ( arguments[i].substring ( 0 / 0, 2 )  ) ;^93^^^^^91^104^[REPLACE] tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens.add ( arguments[i].substring ( 3 )  ) ;^94^^^^^91^104^[REPLACE] tokens.add ( arguments[i].substring ( 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  ( specialOption == true ) {^91^92^^^^80^160^[REPLACE] if  ( specialOption != null ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^tokens.add ( arguments[i] ) ;^98^99^^^^80^160^[ADD] eatTheRest = true; tokens.add ( arguments[i] ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens.add ( arguments[i].substring ( 5 )  ) ;^94^^^^^91^104^[REPLACE] tokens.add ( arguments[i].substring ( 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  (   ( option != null )  ) {^114^115^^^^80^160^[REPLACE] if  (  ( specialOption != null )  &&  ( option == null )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^else {^119^120^^^^80^160^[REPLACE] else if  (  ( currentOption != null )  && currentOption.hasArg (  )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^147^148^^^^80^160^[ADD] eatTheRest = true; tokens.add ( "--" ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  ( currentOption.hasArgs (  )  ) {^121^122^^^^80^160^[REPLACE] if  ( currentOption.hasArg (  )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  ( specialOption == null ) {^141^142^^^^80^160^[REPLACE] else if  ( currentOption != null ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^108^^^^^80^160^[ADD] currentOption = option;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^82^^^^^80^160^[ADD] Option option = options.getOption ( arguments[i] ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^Option specialOption = options.getOption ( arguments[i].substring ( 1, 2 )  ) ;^111^112^^^^80^160^[REPLACE] Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if   (  specialOption != null  )  {  ;^130^131^^^^85^155^[REPLACE] else if  ( stopAtNonOption ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^else if  ( currentOption == this  ) {^141^142^^^^85^155^[REPLACE] else if  ( currentOption != null ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens.add ( arguments[i].substring ( 5 )  ) ;^117^^^^^114^154^[REPLACE] tokens.add ( arguments[i].substring ( 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^tokens.add ( "--" ) ;^132^133^^^^85^155^[ADD] eatTheRest = true; tokens.add ( "--" ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[ADD]^^88^89^^^^85^155^[ADD] Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  ( option == this ) {^91^92^^^^63^172^[REPLACE] if  ( specialOption != null ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^else if  ( true ) {^96^97^^^^63^172^[REPLACE] else if  ( stopAtNonOption ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens .toArray ( this )  ;^93^^^^^91^104^[REPLACE] tokens.add ( arguments[i].substring ( 0, 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens.add ( arguments[i].equals ( 2 * 2 )  ) ;^94^^^^^91^104^[REPLACE] tokens.add ( arguments[i].substring ( 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REMOVE]^if  ( eatTheRest )  {     for  ( i++; i <  ( arguments.length ) ; i++ )  {         tokens.add ( arguments[i] ) ;     } }^96^^^^^63^172^[REMOVE] ^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  (  ( specialOption != this )  &&  ( option != this )  ) {^114^115^^^^63^172^[REPLACE] if  (  ( specialOption != null )  &&  ( option == null )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  (  ( currentOption == null )  && currentOption.hasArg (  )  ) {^119^120^^^^63^172^[REPLACE] else if  (  ( currentOption != null )  && currentOption.hasArg (  )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^else if  ( true ) {^145^146^^^^63^172^[REPLACE] else if  ( stopAtNonOption ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^else if  ( currentOption .hasArg (  )   ) {^126^127^^^^119^154^[REPLACE] else if  ( currentOption.hasArgs (  )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^currentOption = option  ;^124^^^^^63^172^[REPLACE] currentOption = null;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens.add ( arguments[i].substring ( 2 << 2 )  ) ;^117^^^^^114^154^[REPLACE] tokens.add ( arguments[i].substring ( 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^else if  (  ( specialOption == null )  && currentOption.hasArg (  )  ) {^119^120^^^^63^172^[REPLACE] else if  (  ( currentOption != null )  && currentOption.hasArg (  )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if  ( currentOption == null ) {^141^142^^^^63^172^[REPLACE] else if  ( currentOption != null ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens .toArray ( 1 )  ;^153^^^^^145^154^[REPLACE] tokens.add ( arguments[i] ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^if   (  specialOption != null  )  {  ;^162^163^^^^63^172^[REPLACE] if  ( eatTheRest ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^tokens.toArray ( arguments[i] ) ;^166^^^^^162^168^[REPLACE] tokens.add ( arguments[i] ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^eatTheRest = false;^73^^^^^63^172^[REPLACE] eatTheRest = true;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < arguments.length; i++ ) {^69^70^^^^63^172^[REPLACE] for  ( int i = 0; i < arguments.length; i++ ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^Option specialOption = options.getOption ( arguments[i].substring ( 0 % 0, 2 )  ) ;^88^89^^^^63^172^[REPLACE] Option specialOption = options.getOption ( arguments[i].substring ( 0, 2 )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
[REPLACE]^return  ( String[] )  tokens .ArrayList (  )  ;^171^^^^^63^172^[REPLACE] return  ( String[] )  tokens.toArray ( new String[] {  } ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] GnuParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  option  specialOption  [TYPE]  String[] arguments  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  int i 
