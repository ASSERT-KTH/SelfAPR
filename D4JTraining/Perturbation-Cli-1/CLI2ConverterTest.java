[REPLACE]^i = hasOptionalArgs ( 5 ) .create ( 'i' )  ;^42^^^^^41^72^[REPLACE] a = OptionBuilder.withDescription ( "A description" ) .create ( 'a' ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^bbb  = null ;^43^^^^^41^72^[REPLACE] bbb = OptionBuilder.create ( "bbb" ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[ADD]^^44^^^^^41^72^[ADD] c = OptionBuilder.withLongOpt ( "ccc" ) .create ( 'c' ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^c = withLongOpt ( "ccc" ) .create ( 'c' )  ;^45^^^^^41^72^[REPLACE] ddd = OptionBuilder.withLongOpt ( "ddd" ) .create (  ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^e = OptionBuilder.isRequired ( false ) .create ( "e" ) ;^46^^^^^41^72^[REPLACE] e = OptionBuilder.isRequired ( true ) .create ( "e" ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^i = hasOptionalArgs ( 5 ) .create ( 'i' )  ;^47^^^^^41^72^[REPLACE] f = OptionBuilder.hasArg (  ) .withArgName ( "argument" ) .create ( 'f' ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^i = hasOptionalArgs ( 5 ) .create ( 'i' )  ;^48^^^^^41^72^[REPLACE] g = OptionBuilder.hasArgs ( 5 ) .create ( 'g' ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^i = hasOptionalArgs ( 5 ) .create ( 'i' )  ;^49^^^^^41^72^[REPLACE] h = OptionBuilder.hasOptionalArg (  ) .create ( 'h' ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^i = OptionBuilder.hasOptionalArgs ( 5 - 1 ) .create ( 'i' ) ;^50^^^^^41^72^[REPLACE] i = OptionBuilder.hasOptionalArgs ( 5 ) .create ( 'i' ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^abcdeOptions = new Options (  )  ;^52^^^^^41^72^[REPLACE] aceOptions = new Options (  ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^aceOptions.addOptionGroup ( OptionBuilder.create ( 'a' )  ) ;^53^^^^^41^72^[REPLACE] aceOptions.addOption ( OptionBuilder.create ( 'a' )  ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[ADD]^^53^^^^^41^72^[ADD] aceOptions.addOption ( OptionBuilder.create ( 'a' )  ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^aceOptions.addOption ( OptionBuilder .isRequired ( true )   ) ;^53^^^^^41^72^[REPLACE] aceOptions.addOption ( OptionBuilder.create ( 'a' )  ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^aceOptions.addOption ( OptionBuilder.hasArgs ( 'c' )  ) ;^54^^^^^41^72^[REPLACE] aceOptions.addOption ( OptionBuilder.create ( 'c' )  ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^hasArg (  )  ;^54^^^^^41^72^[REPLACE] aceOptions.addOption ( OptionBuilder.create ( 'c' )  ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^aceOptions .addOptionGroup ( aceOptionGroup )  ;^55^^^^^41^72^[REPLACE] aceOptions.addOption ( OptionBuilder.create ( 'e' )  ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^hasArg (  )  ;^55^^^^^41^72^[REPLACE] aceOptions.addOption ( OptionBuilder.create ( 'e' )  ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^abcdeOptions = new Options (  )  ;^57^^^^^41^72^[REPLACE] aceOptionGroup = new OptionGroup (  ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^aceOptionGroup.setRequired ( OptionBuilder.create ( 'a' )  ) ;^58^^^^^41^72^[REPLACE] aceOptionGroup.addOption ( OptionBuilder.create ( 'a' )  ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[ADD]^^58^^^^^41^72^[ADD] aceOptionGroup.addOption ( OptionBuilder.create ( 'a' )  ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^hasArg (  )  ;^58^^^^^41^72^[REPLACE] aceOptionGroup.addOption ( OptionBuilder.create ( 'a' )  ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^aceOptions.addOption ( create ( 'a' )  )  ;^59^^^^^41^72^[REPLACE] aceOptionGroup.addOption ( OptionBuilder.create ( 'c' )  ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^aceOptionGroup.addOption ( OptionBuilder .isRequired ( true )   ) ;^59^^^^^41^72^[REPLACE] aceOptionGroup.addOption ( OptionBuilder.create ( 'c' )  ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[ADD]^^59^^^^^41^72^[ADD] aceOptionGroup.addOption ( OptionBuilder.create ( 'c' )  ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^aceOptionGroup.addOption ( OptionBuilder.hasArgs ( 'e' )  ) ;^60^^^^^41^72^[REPLACE] aceOptionGroup.addOption ( OptionBuilder.create ( 'e' )  ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REMOVE]^hasArg (  )  ;^60^^^^^41^72^[REMOVE] ^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^aceOptionGroup = new OptionGroup (  )  ;^62^^^^^41^72^[REPLACE] abcdeOptions = new Options (  ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^aceOptions.addOption ( create ( 'a' )  )  ;^63^^^^^41^72^[REPLACE] abcdeOptions.addOption ( OptionBuilder.create ( 'd' )  ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^abcdeOptions.addOption ( OptionBuilder.hasArgs ( 'd' )  ) ;^63^^^^^41^72^[REPLACE] abcdeOptions.addOption ( OptionBuilder.create ( 'd' )  ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[ADD]^^64^^^^^41^72^[ADD] OptionGroup og = new OptionGroup (  ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^og.addOption ( OptionBuilder.hasArgs ( 'a' )  ) ;^65^^^^^41^72^[REPLACE] og.addOption ( OptionBuilder.create ( 'a' )  ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^hasArg (  )  ;^65^^^^^41^72^[REPLACE] og.addOption ( OptionBuilder.create ( 'a' )  ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^aceOptions.addOption ( create ( 'a' )  )  ;^66^^^^^41^72^[REPLACE] og.addOption ( OptionBuilder.create ( 'c' )  ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^og.addOption ( OptionBuilder.hasArgs ( 'c' )  ) ;^66^^^^^41^72^[REPLACE] og.addOption ( OptionBuilder.create ( 'c' )  ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^aceOptions.addOption ( create ( 'a' )  )  ;^67^^^^^41^72^[REPLACE] og.addOption ( OptionBuilder.create ( 'e' )  ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^og.addOption ( OptionBuilder.hasArgs ( 'e' )  ) ;^67^^^^^41^72^[REPLACE] og.addOption ( OptionBuilder.create ( 'e' )  ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^abcdeOptions.addOptionGroup ( aceOptionGroup ) ;^68^^^^^41^72^[REPLACE] abcdeOptions.addOptionGroup ( og ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^abcdeOptions.addOptionGroup ( OptionBuilder.create ( 'b' )  ) ;^69^^^^^41^72^[REPLACE] abcdeOptions.addOption ( OptionBuilder.create ( 'b' )  ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^abcdeOptions.addOption ( OptionBuilder .isRequired ( false )   ) ;^69^^^^^41^72^[REPLACE] abcdeOptions.addOption ( OptionBuilder.create ( 'b' )  ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[ADD]^^69^^^^^41^72^[ADD] abcdeOptions.addOption ( OptionBuilder.create ( 'b' )  ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^pattern  =  pattern ;^71^^^^^41^72^[REPLACE] pattern = PatternOptionBuilder.parsePattern ( "a%ce:" ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[ADD]^^114^^^^^112^131^[ADD] GroupImpl group;^[METHOD] testGroupOptions [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true  [TYPE]  GroupImpl group 
[ADD]^^116^^^^^112^131^[ADD] group =  ( GroupImpl ) CLI2Converter.group ( aceOptions ) ;^[METHOD] testGroupOptions [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true  [TYPE]  GroupImpl group 
[REPLACE]^assertEquals ( "[-a <arg>|-c|-e <arg>]", group.toString (  )  )  ;^117^^^^^112^131^[REPLACE] assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;^[METHOD] testGroupOptions [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true  [TYPE]  GroupImpl group 
[REPLACE]^assertEquals ( "[-a|-c|-e]",group.getMinimum (  )  ) ;^117^^^^^112^131^[REPLACE] assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;^[METHOD] testGroupOptions [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true  [TYPE]  GroupImpl group 
[ADD]^^117^^^^^112^131^[ADD] assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;^[METHOD] testGroupOptions [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true  [TYPE]  GroupImpl group 
[REPLACE]^assertEquals ( 0 >>> 3,group.getMinimum (  )  ) ;^118^^^^^112^131^[REPLACE] assertEquals ( 0,group.getMinimum (  )  ) ;^[METHOD] testGroupOptions [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true  [TYPE]  GroupImpl group 
[REPLACE]^group.getMaximum (  )  ;^118^^^^^112^131^[REPLACE] assertEquals ( 0,group.getMinimum (  )  ) ;^[METHOD] testGroupOptions [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true  [TYPE]  GroupImpl group 
[REPLACE]^assertEquals ( Integer.MAX_VALUE,group .getMinimum (  )   ) ;^119^^^^^112^131^[REPLACE] assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;^[METHOD] testGroupOptions [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true  [TYPE]  GroupImpl group 
[REPLACE]^assertEquals ( Integer.MAX_VALUE,group.getMinimum (  )  ) ;^119^^^^^112^131^[REPLACE] assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;^[METHOD] testGroupOptions [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true  [TYPE]  GroupImpl group 
[REPLACE]^group =  (  ( GroupImpl )   ( group ( aceOptionGroup )  )  )  ;^121^^^^^112^131^[REPLACE] group =  ( GroupImpl ) CLI2Converter.group ( abcdeOptions ) ;^[METHOD] testGroupOptions [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true  [TYPE]  GroupImpl group 
[REPLACE]^assertEquals ( "[-a|-c|-e|-d|-b]",group.getMinimum (  )  ) ;^123^^^^^112^131^[REPLACE] assertEquals ( "[-a|-c|-e|-d|-b]",group.toString (  )  ) ;^[METHOD] testGroupOptions [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true  [TYPE]  GroupImpl group 
[REPLACE]^assertEquals ( "[-a|-c|-e|-d|-b]",group .assertTrue ( true )   ) ;^123^^^^^112^131^[REPLACE] assertEquals ( "[-a|-c|-e|-d|-b]",group.toString (  )  ) ;^[METHOD] testGroupOptions [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true  [TYPE]  GroupImpl group 
[ADD]^^123^124^^^^112^131^[ADD] assertEquals ( "[-a|-c|-e|-d|-b]",group.toString (  )  ) ; assertEquals ( 0,group.getMinimum (  )  ) ;^[METHOD] testGroupOptions [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true  [TYPE]  GroupImpl group 
[REPLACE]^assertEquals ( 0L,group.getMinimum (  )  ) ;^124^^^^^112^131^[REPLACE] assertEquals ( 0,group.getMinimum (  )  ) ;^[METHOD] testGroupOptions [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true  [TYPE]  GroupImpl group 
[REMOVE]^assertEquals ( "[-a|-c|-e]", group.toString (  )  )  ;^124^^^^^112^131^[REMOVE] ^[METHOD] testGroupOptions [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true  [TYPE]  GroupImpl group 
[REPLACE]^assertEquals ( 0,group .getMaximum (  )   ) ;^124^^^^^112^131^[REPLACE] assertEquals ( 0,group.getMinimum (  )  ) ;^[METHOD] testGroupOptions [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true  [TYPE]  GroupImpl group 
[REPLACE]^assertEquals ( Integer.MAX_VALUE,group.getMinimum (  )  ) ;^125^^^^^112^131^[REPLACE] assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;^[METHOD] testGroupOptions [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true  [TYPE]  GroupImpl group 
[REMOVE]^a.getId (  )  ;^125^^^^^112^131^[REMOVE] ^[METHOD] testGroupOptions [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true  [TYPE]  GroupImpl group 
[ADD]^^127^^^^^112^131^[ADD] group =  ( GroupImpl ) CLI2Converter.group ( pattern ) ;^[METHOD] testGroupOptions [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true  [TYPE]  GroupImpl group 
[REPLACE]^assertEquals ( "[-a|-c|-e]", group.toString (  )  )  ;^128^^^^^112^131^[REPLACE] assertEquals ( "[-a <arg>|-c|-e <arg>]",group.toString (  )  ) ;^[METHOD] testGroupOptions [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true  [TYPE]  GroupImpl group 
[REPLACE]^assertEquals ( "[-a <arg>|-c|-e <arg>]",group.getMinimum (  )  ) ;^128^^^^^112^131^[REPLACE] assertEquals ( "[-a <arg>|-c|-e <arg>]",group.toString (  )  ) ;^[METHOD] testGroupOptions [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true  [TYPE]  GroupImpl group 
[ADD]^^128^^^^^112^131^[ADD] assertEquals ( "[-a <arg>|-c|-e <arg>]",group.toString (  )  ) ;^[METHOD] testGroupOptions [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true  [TYPE]  GroupImpl group 
[REPLACE]^assertEquals ( 1, group.getMinimum (  )  )  ;^129^^^^^112^131^[REPLACE] assertEquals ( 0,group.getMinimum (  )  ) ;^[METHOD] testGroupOptions [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true  [TYPE]  GroupImpl group 
[ADD]^^129^130^^^^112^131^[ADD] assertEquals ( 0,group.getMinimum (  )  ) ; assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;^[METHOD] testGroupOptions [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true  [TYPE]  GroupImpl group 
[REPLACE]^assertEquals ( 0,group.getMaximum (  )  ) ;^129^^^^^112^131^[REPLACE] assertEquals ( 0,group.getMinimum (  )  ) ;^[METHOD] testGroupOptions [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true  [TYPE]  GroupImpl group 
[REPLACE]^hasArg (  )  ;^130^^^^^112^131^[REPLACE] assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;^[METHOD] testGroupOptions [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true  [TYPE]  GroupImpl group 
[REPLACE]^assertEquals ( Integer.MAX_VALUE,group.getMinimum (  )  ) ;^130^^^^^112^131^[REPLACE] assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;^[METHOD] testGroupOptions [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true  [TYPE]  GroupImpl group 
