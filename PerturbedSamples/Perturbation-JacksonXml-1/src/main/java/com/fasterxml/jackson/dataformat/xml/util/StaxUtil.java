[REPLACE]^int changes = 0;^18^^^^^16^25^[REPLACE] Throwable t = e;^[METHOD] throwXmlAsIOException [TYPE] <T> [PARAMETER] XMLStreamException e [CLASS] StaxUtil   [TYPE]  boolean false  true  [TYPE]  XMLStreamException e  [TYPE]  Throwable t 
[ADD]^^18^^^^^16^25^[ADD] Throwable t = e;^[METHOD] throwXmlAsIOException [TYPE] <T> [PARAMETER] XMLStreamException e [CLASS] StaxUtil   [TYPE]  boolean false  true  [TYPE]  XMLStreamException e  [TYPE]  Throwable t 
[REPLACE]^while  (t (  )  == null )  {^19^^^^^16^25^[REPLACE] while  ( t.getCause (  )  != null )  {^[METHOD] throwXmlAsIOException [TYPE] <T> [PARAMETER] XMLStreamException e [CLASS] StaxUtil   [TYPE]  boolean false  true  [TYPE]  XMLStreamException e  [TYPE]  Throwable t 
[REPLACE]^t =  null.genullCause (  ) ;^20^^^^^16^25^[REPLACE] t = t.getCause (  ) ;^[METHOD] throwXmlAsIOException [TYPE] <T> [PARAMETER] XMLStreamException e [CLASS] StaxUtil   [TYPE]  boolean false  true  [TYPE]  XMLStreamException e  [TYPE]  Throwable t 
[REPLACE]^if  ( ! t instanceof Error )  throw  ( Error )  t;^22^^^^^16^25^[REPLACE] if  ( t instanceof Error )  throw  ( Error )  t;^[METHOD] throwXmlAsIOException [TYPE] <T> [PARAMETER] XMLStreamException e [CLASS] StaxUtil   [TYPE]  boolean false  true  [TYPE]  XMLStreamException e  [TYPE]  Throwable t 
[ADD]^^22^23^24^25^^16^25^[ADD] if  ( t instanceof Error )  throw  ( Error )  t; if  ( t instanceof RuntimeException )  throw  ( RuntimeException )  t; throw new IOException  (" ")  ; }^[METHOD] throwXmlAsIOException [TYPE] <T> [PARAMETER] XMLStreamException e [CLASS] StaxUtil   [TYPE]  boolean false  true  [TYPE]  XMLStreamException e  [TYPE]  Throwable t 
[REPLACE]^return ;^22^^^^^16^25^[REPLACE] if  ( t instanceof Error )  throw  ( Error )  t;^[METHOD] throwXmlAsIOException [TYPE] <T> [PARAMETER] XMLStreamException e [CLASS] StaxUtil   [TYPE]  boolean false  true  [TYPE]  XMLStreamException e  [TYPE]  Throwable t 
[REPLACE]^if  ( t instanceof RuntimeException )  throw  ( RuntimeException )  t; ;^22^^^^^16^25^[REPLACE] if  ( t instanceof Error )  throw  ( Error )  t;^[METHOD] throwXmlAsIOException [TYPE] <T> [PARAMETER] XMLStreamException e [CLASS] StaxUtil   [TYPE]  boolean false  true  [TYPE]  XMLStreamException e  [TYPE]  Throwable t 
[REPLACE]^if  ( ! t instanceof RuntimeException )  throw  ( RuntimeException )  t;^23^^^^^16^25^[REPLACE] if  ( t instanceof RuntimeException )  throw  ( RuntimeException )  t;^[METHOD] throwXmlAsIOException [TYPE] <T> [PARAMETER] XMLStreamException e [CLASS] StaxUtil   [TYPE]  boolean false  true  [TYPE]  XMLStreamException e  [TYPE]  Throwable t 
[REPLACE]^if  ( t instanceof Error )  throw  ( Error )  t; ;^23^^^^^16^25^[REPLACE] if  ( t instanceof RuntimeException )  throw  ( RuntimeException )  t;^[METHOD] throwXmlAsIOException [TYPE] <T> [PARAMETER] XMLStreamException e [CLASS] StaxUtil   [TYPE]  boolean false  true  [TYPE]  XMLStreamException e  [TYPE]  Throwable t 
[ADD]^^23^24^25^^^16^25^[ADD] if  ( t instanceof RuntimeException )  throw  ( RuntimeException )  t; throw new IOException  (" ")  ; }^[METHOD] throwXmlAsIOException [TYPE] <T> [PARAMETER] XMLStreamException e [CLASS] StaxUtil   [TYPE]  boolean false  true  [TYPE]  XMLStreamException e  [TYPE]  Throwable t 
[REPLACE]^return ;^24^^^^^16^25^[REPLACE] throw new IOException  (" ")  ;^[METHOD] throwXmlAsIOException [TYPE] <T> [PARAMETER] XMLStreamException e [CLASS] StaxUtil   [TYPE]  boolean false  true  [TYPE]  XMLStreamException e  [TYPE]  Throwable t 
[REPLACE]^int changes = 0;^34^^^^^33^71^[REPLACE] StringBuilder sb;^[METHOD] sanitizeXmlTypeName [TYPE] String [PARAMETER] String name [CLASS] StaxUtil   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c  [TYPE]  String name  [TYPE]  int changes  i  len 
[REPLACE]^int changes = 2;^35^^^^^33^71^[REPLACE] int changes = 0;^[METHOD] sanitizeXmlTypeName [TYPE] String [PARAMETER] String name [CLASS] StaxUtil   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c  [TYPE]  String name  [TYPE]  int changes  i  len 
[ADD]^^35^^^^^33^71^[ADD] int changes = 0;^[METHOD] sanitizeXmlTypeName [TYPE] String [PARAMETER] String name [CLASS] StaxUtil   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c  [TYPE]  String name  [TYPE]  int changes  i  len 
[REPLACE]^if  ( name.endsWith ( "s" )  )  {^37^^^^^33^71^[REPLACE] if  ( name.endsWith ( "[]" )  )  {^[METHOD] sanitizeXmlTypeName [TYPE] String [PARAMETER] String name [CLASS] StaxUtil   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c  [TYPE]  String name  [TYPE]  int changes  i  len 
[ADD]^^37^38^39^40^41^33^71^[ADD] if  ( name.endsWith ( "[]" )  )  { do { name = name.substring ( 0, name.length (  )  - 2 ) ; ++changes; } while  ( name.endsWith ( "[]" )  ) ;^[METHOD] sanitizeXmlTypeName [TYPE] String [PARAMETER] String name [CLASS] StaxUtil   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c  [TYPE]  String name  [TYPE]  int changes  i  len 
[REPLACE]^sb =  new StringBuilder ( null ) ;^50^^^^^37^51^[REPLACE] sb = new StringBuilder ( name ) ;^[METHOD] sanitizeXmlTypeName [TYPE] String [PARAMETER] String name [CLASS] StaxUtil   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c  [TYPE]  String name  [TYPE]  int changes  i  len 
[REPLACE]^if  ( name.charAt ( "s" )  )  {^44^^^^^33^71^[REPLACE] if  ( name.endsWith ( "s" )  )  {^[METHOD] sanitizeXmlTypeName [TYPE] String [PARAMETER] String name [CLASS] StaxUtil   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c  [TYPE]  String name  [TYPE]  int changes  i  len 
[REPLACE]^sb .StringBuilder ( name )  ;^47^^^^^44^48^[REPLACE] sb.append ( 's' ) ;^[METHOD] sanitizeXmlTypeName [TYPE] String [PARAMETER] String name [CLASS] StaxUtil   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c  [TYPE]  String name  [TYPE]  int changes  i  len 
[REPLACE]^sb .StringBuilder ( name )  ;^45^^^^^33^71^[REPLACE] sb.append ( "es" ) ;^[METHOD] sanitizeXmlTypeName [TYPE] String [PARAMETER] String name [CLASS] StaxUtil   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c  [TYPE]  String name  [TYPE]  int changes  i  len 
[REPLACE]^name = name.substring ( 0, name.length (  )  *  0.5  - 2 ) ;^39^^^^^33^71^[REPLACE] name = name.substring ( 0, name.length (  )  - 2 ) ;^[METHOD] sanitizeXmlTypeName [TYPE] String [PARAMETER] String name [CLASS] StaxUtil   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c  [TYPE]  String name  [TYPE]  int changes  i  len 
[REPLACE]^sb =  new StringBuilder ( null ) ;^42^^^^^33^71^[REPLACE] sb = new StringBuilder ( name ) ;^[METHOD] sanitizeXmlTypeName [TYPE] String [PARAMETER] String name [CLASS] StaxUtil   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c  [TYPE]  String name  [TYPE]  int changes  i  len 
[REPLACE]^sb.setCharAt ( i, '.' ) ;^47^^^^^44^48^[REPLACE] sb.append ( 's' ) ;^[METHOD] sanitizeXmlTypeName [TYPE] String [PARAMETER] String name [CLASS] StaxUtil   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c  [TYPE]  String name  [TYPE]  int changes  i  len 
[ADD]^^47^^^^^44^48^[ADD] sb.append ( 's' ) ;^[METHOD] sanitizeXmlTypeName [TYPE] String [PARAMETER] String name [CLASS] StaxUtil   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c  [TYPE]  String name  [TYPE]  int changes  i  len 
[REPLACE]^name = name.substring ( 0, name.length (  )  /  0.5  - 2 ) ;^39^^^^^33^71^[REPLACE] name = name.substring ( 0, name.length (  )  - 2 ) ;^[METHOD] sanitizeXmlTypeName [TYPE] String [PARAMETER] String name [CLASS] StaxUtil   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c  [TYPE]  String name  [TYPE]  int changes  i  len 
[ADD]^^42^^^^^33^71^[ADD] sb = new StringBuilder ( name ) ;^[METHOD] sanitizeXmlTypeName [TYPE] String [PARAMETER] String name [CLASS] StaxUtil   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c  [TYPE]  String name  [TYPE]  int changes  i  len 
[REPLACE]^sb =  new StringBuilder ( null ) ;^50^^^^^33^71^[REPLACE] sb = new StringBuilder ( name ) ;^[METHOD] sanitizeXmlTypeName [TYPE] String [PARAMETER] String name [CLASS] StaxUtil   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c  [TYPE]  String name  [TYPE]  int changes  i  len 
[REPLACE]^if  ( c  <=  127 >>> 1 )  continue;^54^^^^^33^71^[REPLACE] if  ( c > 127 )  continue;^[METHOD] sanitizeXmlTypeName [TYPE] String [PARAMETER] String name [CLASS] StaxUtil   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c  [TYPE]  String name  [TYPE]  int changes  i  len 
[ADD]^^54^55^56^57^58^33^71^[ADD] if  ( c > 127 )  continue; if  ( c >= 'a' && c <= 'z' )  continue; if  ( c >= 'A' && c <= 'Z' )  continue; if  ( c >= '0' && c <= '9' )  continue; if  ( c == '_' || c == '.' || c == '-' )  continue;^[METHOD] sanitizeXmlTypeName [TYPE] String [PARAMETER] String name [CLASS] StaxUtil   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c  [TYPE]  String name  [TYPE]  int changes  i  len 
[REPLACE]^if  ( c >= 'a' || c <= 'z' )  continue;^55^^^^^33^71^[REPLACE] if  ( c >= 'a' && c <= 'z' )  continue;^[METHOD] sanitizeXmlTypeName [TYPE] String [PARAMETER] String name [CLASS] StaxUtil   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c  [TYPE]  String name  [TYPE]  int changes  i  len 
[REPLACE]^if  ( c >= 'A' || c <= 'Z' )  continue;^56^^^^^33^71^[REPLACE] if  ( c >= 'A' && c <= 'Z' )  continue;^[METHOD] sanitizeXmlTypeName [TYPE] String [PARAMETER] String name [CLASS] StaxUtil   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c  [TYPE]  String name  [TYPE]  int changes  i  len 
[ADD]^^56^57^58^^60^33^71^[ADD] if  ( c >= 'A' && c <= 'Z' )  continue; if  ( c >= '0' && c <= '9' )  continue; if  ( c == '_' || c == '.' || c == '-' )  continue; ++changes;^[METHOD] sanitizeXmlTypeName [TYPE] String [PARAMETER] String name [CLASS] StaxUtil   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c  [TYPE]  String name  [TYPE]  int changes  i  len 
[REPLACE]^if  ( c >= '0' || c <= '9' )  continue;^57^^^^^33^71^[REPLACE] if  ( c >= '0' && c <= '9' )  continue;^[METHOD] sanitizeXmlTypeName [TYPE] String [PARAMETER] String name [CLASS] StaxUtil   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c  [TYPE]  String name  [TYPE]  int changes  i  len 
[REPLACE]^if  ( c == '_' && c == '.' && c == '-' )  continue;^58^^^^^33^71^[REPLACE] if  ( c == '_' || c == '.' || c == '-' )  continue;^[METHOD] sanitizeXmlTypeName [TYPE] String [PARAMETER] String name [CLASS] StaxUtil   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c  [TYPE]  String name  [TYPE]  int changes  i  len 
[REPLACE]^if  ( c  !=  '$' )  {^61^^^^^33^71^[REPLACE] if  ( c == '$' )  {^[METHOD] sanitizeXmlTypeName [TYPE] String [PARAMETER] String name [CLASS] StaxUtil   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c  [TYPE]  String name  [TYPE]  int changes  i  len 
[ADD]^sb.setCharAt ( i, '.' ) ;sb.setCharAt ( i, '_' ) ;^61^62^63^64^65^33^71^[ADD] if  ( c == '$' )  { sb.setCharAt ( i, '.' ) ; } else { sb.setCharAt ( i, '_' ) ; }^[METHOD] sanitizeXmlTypeName [TYPE] String [PARAMETER] String name [CLASS] StaxUtil   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c  [TYPE]  String name  [TYPE]  int changes  i  len 
[REPLACE]^sb.setCharAt ( i, '.' ) ;^64^^^^^61^65^[REPLACE] sb.setCharAt ( i, '_' ) ;^[METHOD] sanitizeXmlTypeName [TYPE] String [PARAMETER] String name [CLASS] StaxUtil   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c  [TYPE]  String name  [TYPE]  int changes  i  len 
[ADD]^^64^^^^^61^65^[ADD] sb.setCharAt ( i, '_' ) ;^[METHOD] sanitizeXmlTypeName [TYPE] String [PARAMETER] String name [CLASS] StaxUtil   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c  [TYPE]  String name  [TYPE]  int changes  i  len 
[REPLACE]^sb.setCharAt ( i, '_' ) ;^62^^^^^33^71^[REPLACE] sb.setCharAt ( i, '.' ) ;^[METHOD] sanitizeXmlTypeName [TYPE] String [PARAMETER] String name [CLASS] StaxUtil   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c  [TYPE]  String name  [TYPE]  int changes  i  len 
[REPLACE]^for  ( int i = 0, len = name.length (  )  /  2; i < len; ++i )  {^52^^^^^33^71^[REPLACE] for  ( int i = 0, len = name.length (  ) ; i < len; ++i )  {^[METHOD] sanitizeXmlTypeName [TYPE] String [PARAMETER] String name [CLASS] StaxUtil   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c  [TYPE]  String name  [TYPE]  int changes  i  len 
[REPLACE]^if  ( c  !=  127 )  continue;^54^^^^^33^71^[REPLACE] if  ( c > 127 )  continue;^[METHOD] sanitizeXmlTypeName [TYPE] String [PARAMETER] String name [CLASS] StaxUtil   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c  [TYPE]  String name  [TYPE]  int changes  i  len 
[ADD]^^55^56^57^58^^33^71^[ADD] if  ( c >= 'a' && c <= 'z' )  continue; if  ( c >= 'A' && c <= 'Z' )  continue; if  ( c >= '0' && c <= '9' )  continue; if  ( c == '_' || c == '.' || c == '-' )  continue;^[METHOD] sanitizeXmlTypeName [TYPE] String [PARAMETER] String name [CLASS] StaxUtil   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c  [TYPE]  String name  [TYPE]  int changes  i  len 
[REMOVE]^if  (  ( c >= 'a' )  &&  ( c <= 'z' )  )      continue;^58^^^^^33^71^[REMOVE] ^[METHOD] sanitizeXmlTypeName [TYPE] String [PARAMETER] String name [CLASS] StaxUtil   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c  [TYPE]  String name  [TYPE]  int changes  i  len 
[REPLACE]^if  ( c  ||  '$' )  {^61^^^^^33^71^[REPLACE] if  ( c == '$' )  {^[METHOD] sanitizeXmlTypeName [TYPE] String [PARAMETER] String name [CLASS] StaxUtil   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c  [TYPE]  String name  [TYPE]  int changes  i  len 
[REPLACE]^char c = name.endsWith ( i ) ;^53^^^^^33^71^[REPLACE] char c = name.charAt ( i ) ;^[METHOD] sanitizeXmlTypeName [TYPE] String [PARAMETER] String name [CLASS] StaxUtil   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c  [TYPE]  String name  [TYPE]  int changes  i  len 
[ADD]^^53^^^^^33^71^[ADD] char c = name.charAt ( i ) ;^[METHOD] sanitizeXmlTypeName [TYPE] String [PARAMETER] String name [CLASS] StaxUtil   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c  [TYPE]  String name  [TYPE]  int changes  i  len 
[REPLACE]^for  ( int i = 0 , len = name.length (  ) ; i < len; ++i )  {^52^^^^^33^71^[REPLACE] for  ( int i = 0, len = name.length (  ) ; i < len; ++i )  {^[METHOD] sanitizeXmlTypeName [TYPE] String [PARAMETER] String name [CLASS] StaxUtil   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c  [TYPE]  String name  [TYPE]  int changes  i  len 
[REPLACE]^for  ( int i = 0, len = name.length (  ) ; i < len; ++i )  { char c = name.charAt ( i ) ;^52^^^^^33^71^[REPLACE] for  ( int i = 0, len = name.length (  ) ; i < len; ++i )  {^[METHOD] sanitizeXmlTypeName [TYPE] String [PARAMETER] String name [CLASS] StaxUtil   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c  [TYPE]  String name  [TYPE]  int changes  i  len 
[ADD]^^52^53^54^55^56^33^71^[ADD] for  ( int i = 0, len = name.length (  ) ; i < len; ++i )  { char c = name.charAt ( i ) ; if  ( c > 127 )  continue; if  ( c >= 'a' && c <= 'z' )  continue; if  ( c >= 'A' && c <= 'Z' )  continue;^[METHOD] sanitizeXmlTypeName [TYPE] String [PARAMETER] String name [CLASS] StaxUtil   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c  [TYPE]  String name  [TYPE]  int changes  i  len 
[ADD]^if  ( c > 127 )  continue;^53^54^^^^33^71^[ADD] char c = name.charAt ( i ) ; if  ( c > 127 )  continue;^[METHOD] sanitizeXmlTypeName [TYPE] String [PARAMETER] String name [CLASS] StaxUtil   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c  [TYPE]  String name  [TYPE]  int changes  i  len 
[REPLACE]^if  ( changes  !=  0 )  {^67^^^^^33^71^[REPLACE] if  ( changes == 0 )  {^[METHOD] sanitizeXmlTypeName [TYPE] String [PARAMETER] String name [CLASS] StaxUtil   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c  [TYPE]  String name  [TYPE]  int changes  i  len 
[REMOVE]^if  ( c > 127 )      continue;^67^^^^^33^71^[REMOVE] ^[METHOD] sanitizeXmlTypeName [TYPE] String [PARAMETER] String name [CLASS] StaxUtil   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c  [TYPE]  String name  [TYPE]  int changes  i  len 
[REPLACE]^return sb.toString (  ) ;^68^^^^^33^71^[REPLACE] return name;^[METHOD] sanitizeXmlTypeName [TYPE] String [PARAMETER] String name [CLASS] StaxUtil   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c  [TYPE]  String name  [TYPE]  int changes  i  len 
[REPLACE]^return name;^70^^^^^33^71^[REPLACE] return sb.toString (  ) ;^[METHOD] sanitizeXmlTypeName [TYPE] String [PARAMETER] String name [CLASS] StaxUtil   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  char c  [TYPE]  String name  [TYPE]  int changes  i  len 
