[REPLACE]^if  ( type .getRawClass (  )   )  {^16^^^^^14^30^[REPLACE] if  ( type.isContainerType (  )  )  {^[METHOD] isIndexedType [TYPE] boolean [PARAMETER] JavaType type [CLASS] TypeUtil   [TYPE]  JavaType type  [TYPE]  boolean false  true  [TYPE]  Class cls 
[ADD]^Class<?> cls = type.getRawClass (  ) ;^16^17^^^^14^30^[ADD] if  ( type.isContainerType (  )  )  { Class<?> cls = type.getRawClass (  ) ;^[METHOD] isIndexedType [TYPE] boolean [PARAMETER] JavaType type [CLASS] TypeUtil   [TYPE]  JavaType type  [TYPE]  boolean false  true  [TYPE]  Class cls 
[REPLACE]^return true;^21^^^^^14^30^[REPLACE] return false;^[METHOD] isIndexedType [TYPE] boolean [PARAMETER] JavaType type [CLASS] TypeUtil   [TYPE]  JavaType type  [TYPE]  boolean false  true  [TYPE]  Class cls 
[REPLACE]^if  ( Map.class.isAssignableFrom ( this )  )  {^24^^^^^14^30^[REPLACE] if  ( Map.class.isAssignableFrom ( cls )  )  {^[METHOD] isIndexedType [TYPE] boolean [PARAMETER] JavaType type [CLASS] TypeUtil   [TYPE]  JavaType type  [TYPE]  boolean false  true  [TYPE]  Class cls 
[ADD]^return false;^24^25^26^^^14^30^[ADD] if  ( Map.class.isAssignableFrom ( cls )  )  { return false; }^[METHOD] isIndexedType [TYPE] boolean [PARAMETER] JavaType type [CLASS] TypeUtil   [TYPE]  JavaType type  [TYPE]  boolean false  true  [TYPE]  Class cls 
[REPLACE]^return true;^25^^^^^14^30^[REPLACE] return false;^[METHOD] isIndexedType [TYPE] boolean [PARAMETER] JavaType type [CLASS] TypeUtil   [TYPE]  JavaType type  [TYPE]  boolean false  true  [TYPE]  Class cls 
[REPLACE]^return false;^27^^^^^14^30^[REPLACE] return true;^[METHOD] isIndexedType [TYPE] boolean [PARAMETER] JavaType type [CLASS] TypeUtil   [TYPE]  JavaType type  [TYPE]  boolean false  true  [TYPE]  Class cls 
[REPLACE]^Class<?> cls = type.isContainerType (  ) ;^17^^^^^14^30^[REPLACE] Class<?> cls = type.getRawClass (  ) ;^[METHOD] isIndexedType [TYPE] boolean [PARAMETER] JavaType type [CLASS] TypeUtil   [TYPE]  JavaType type  [TYPE]  boolean false  true  [TYPE]  Class cls 
[REPLACE]^if  ( true )  {^20^^^^^14^30^[REPLACE] if  ( cls == byte[].class || cls == char[].class )  {^[METHOD] isIndexedType [TYPE] boolean [PARAMETER] JavaType type [CLASS] TypeUtil   [TYPE]  JavaType type  [TYPE]  boolean false  true  [TYPE]  Class cls 
[REPLACE]^Class<?> cls = type .isContainerType (  )  ;^17^^^^^14^30^[REPLACE] Class<?> cls = type.getRawClass (  ) ;^[METHOD] isIndexedType [TYPE] boolean [PARAMETER] JavaType type [CLASS] TypeUtil   [TYPE]  JavaType type  [TYPE]  boolean false  true  [TYPE]  Class cls 
[REPLACE]^return true;^29^^^^^14^30^[REPLACE] return false;^[METHOD] isIndexedType [TYPE] boolean [PARAMETER] JavaType type [CLASS] TypeUtil   [TYPE]  JavaType type  [TYPE]  boolean false  true  [TYPE]  Class cls 
[REPLACE]^return  ( null.isAssignableFrom (  )  ;^34^35^^^^32^36^[REPLACE] return  ( cls.isArray (  )  && cls != byte[].class && cls != char[].class ) || Collection.class.isAssignableFrom ( cls ) ;^[METHOD] isIndexedType [TYPE] boolean [PARAMETER] Class<?> cls [CLASS] TypeUtil   [TYPE]  boolean false  true  [TYPE]  Class cls 
