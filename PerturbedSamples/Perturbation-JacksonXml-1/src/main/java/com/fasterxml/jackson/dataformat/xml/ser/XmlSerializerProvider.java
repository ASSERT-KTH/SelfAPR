[REPLACE]^private static final long serialVersionUID ;^29^^^^^^^[REPLACE] private static final long serialVersionUID = 1L;^ [CLASS] XmlSerializerProvider  
[REPLACE]^protected  static QName ROOT_NAME_FOR_NULL = new QName ( "null" ) ;^35^^^^^^^[REPLACE] protected final static QName ROOT_NAME_FOR_NULL = new QName ( "null" ) ;^ [CLASS] XmlSerializerProvider  
[REPLACE]^super ( src, config, f ) ;^41^^^^^39^43^[REPLACE] super (  ) ;^[METHOD] <init> [TYPE] XmlRootNameLookup) [PARAMETER] XmlRootNameLookup rootNames [CLASS] XmlSerializerProvider   [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  boolean false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  [TYPE]  long serialVersionUID 
[REPLACE]^_rootNameLookup =  null;^42^^^^^39^43^[REPLACE] _rootNameLookup = rootNames;^[METHOD] <init> [TYPE] XmlRootNameLookup) [PARAMETER] XmlRootNameLookup rootNames [CLASS] XmlSerializerProvider   [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  boolean false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  [TYPE]  long serialVersionUID 
[REPLACE]^ser.serialize ( value, gen, this ) ;^48^^^^^45^50^[REPLACE] super ( src, config, f ) ;^[METHOD] <init> [TYPE] SerializerFactory) [PARAMETER] XmlSerializerProvider src SerializationConfig config SerializerFactory f [CLASS] XmlSerializerProvider   [TYPE]  SerializerFactory f  [TYPE]  boolean false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  [TYPE]  SerializationConfig config  [TYPE]  XmlSerializerProvider src  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  long serialVersionUID 
[REPLACE]^_rootNameLookup  =  null._rootNameLookup;^49^^^^^45^50^[REPLACE] _rootNameLookup  = src._rootNameLookup;^[METHOD] <init> [TYPE] SerializerFactory) [PARAMETER] XmlSerializerProvider src SerializationConfig config SerializerFactory f [CLASS] XmlSerializerProvider   [TYPE]  SerializerFactory f  [TYPE]  boolean false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  [TYPE]  SerializationConfig config  [TYPE]  XmlSerializerProvider src  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  long serialVersionUID 
[ADD]^^49^^^^^45^50^[ADD] _rootNameLookup  = src._rootNameLookup;^[METHOD] <init> [TYPE] SerializerFactory) [PARAMETER] XmlSerializerProvider src SerializationConfig config SerializerFactory f [CLASS] XmlSerializerProvider   [TYPE]  SerializerFactory f  [TYPE]  boolean false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  [TYPE]  SerializationConfig config  [TYPE]  XmlSerializerProvider src  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  long serialVersionUID 
[REPLACE]^return new XmlSerializerProvider ( null, config, jsf ) ;^61^^^^^59^62^[REPLACE] return new XmlSerializerProvider ( this, config, jsf ) ;^[METHOD] createInstance [TYPE] DefaultSerializerProvider [PARAMETER] SerializationConfig config SerializerFactory jsf [CLASS] XmlSerializerProvider   [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  SerializerFactory jsf  [TYPE]  boolean false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  [TYPE]  long serialVersionUID  [TYPE]  SerializationConfig config 
[REPLACE]^if  ( value != false )  {^68^^^^^67^107^[REPLACE] if  ( value == null )  {^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value [CLASS] XmlSerializerProvider   [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[ADD]^_serializeXmlNull ( gen ) ;return;^68^69^70^71^^67^107^[ADD] if  ( value == null )  { _serializeXmlNull ( gen ) ; return; }^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value [CLASS] XmlSerializerProvider   [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^return null;^70^^^^^67^107^[REPLACE] return;^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value [CLASS] XmlSerializerProvider   [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^final Class<?> cls = value.Object (  ) ;^72^^^^^67^107^[REPLACE] final Class<?> cls = value.getClass (  ) ;^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value [CLASS] XmlSerializerProvider   [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[ADD]^^72^^^^^67^107^[ADD] final Class<?> cls = value.getClass (  ) ;^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value [CLASS] XmlSerializerProvider   [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^final ToXmlGenerator xgen = _asXmlGenerator ( gen ) ;^73^^^^^67^107^[REPLACE] final boolean asArray;^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value [CLASS] XmlSerializerProvider   [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[ADD]^final ToXmlGenerator xgen = _asXmlGenerator ( gen ) ;^73^74^^^^67^107^[ADD] final boolean asArray; final ToXmlGenerator xgen = _asXmlGenerator ( gen ) ;^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value [CLASS] XmlSerializerProvider   [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^final Class<?> cls = value.getClass (  ) ;^74^^^^^67^107^[REPLACE] final ToXmlGenerator xgen = _asXmlGenerator ( gen ) ;^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value [CLASS] XmlSerializerProvider   [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[ADD]^^74^^^^^67^107^[ADD] final ToXmlGenerator xgen = _asXmlGenerator ( gen ) ;^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value [CLASS] XmlSerializerProvider   [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^if  ( xgen != true )  {^75^^^^^67^107^[REPLACE] if  ( xgen == null )  {^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value [CLASS] XmlSerializerProvider   [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^if  ( rootName != null )  {^79^^^^^75^87^[REPLACE] if  ( rootName == null )  {^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value [CLASS] XmlSerializerProvider   [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^rootName = _rootNameLookup.findRootName ( rootType, _config ) ; ;^80^^^^^75^87^[REPLACE] rootName = _rootNameLookup.findRootName ( cls, _config ) ;^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value [CLASS] XmlSerializerProvider   [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[ADD]^^80^^^^^75^87^[ADD] rootName = _rootNameLookup.findRootName ( cls, _config ) ;^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value [CLASS] XmlSerializerProvider   [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^if  ( ns != null && ns.length (  )  > 0 )  {^84^^^^^75^87^[REPLACE] if  ( asArray )  {^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value [CLASS] XmlSerializerProvider   [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^_startRootArray ( xgen, ROOT_NAME_FOR_NULL ) ;^85^^^^^75^87^[REPLACE] _startRootArray ( xgen, rootName ) ;^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value [CLASS] XmlSerializerProvider   [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^asArray = TypeUtil.isIndexedType ( rootType ) ; ;^83^^^^^75^87^[REPLACE] asArray = TypeUtil.isIndexedType ( cls ) ;^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value [CLASS] XmlSerializerProvider   [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^String ns = name.getNamespace (  ) ;^78^^^^^75^87^[REPLACE] QName rootName = _rootNameFromConfig (  ) ;^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value [CLASS] XmlSerializerProvider   [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^asArray = true;^76^^^^^67^107^[REPLACE] asArray = false;^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value [CLASS] XmlSerializerProvider   [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^if  ( rootName != null )  {^79^^^^^67^107^[REPLACE] if  ( rootName == null )  {^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value [CLASS] XmlSerializerProvider   [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[ADD]^rootName = _rootNameLookup.findRootName ( cls, _config ) ;^79^80^81^^^67^107^[ADD] if  ( rootName == null )  { rootName = _rootNameLookup.findRootName ( cls, _config ) ; }^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value [CLASS] XmlSerializerProvider   [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^rootName = _rootNameLookup.findRootName ( rootType, _config ) ; ;^80^^^^^67^107^[REPLACE] rootName = _rootNameLookup.findRootName ( cls, _config ) ;^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value [CLASS] XmlSerializerProvider   [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^if  ( ns != null && ns.length (  )  > 0 )  {^84^^^^^67^107^[REPLACE] if  ( asArray )  {^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value [CLASS] XmlSerializerProvider   [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^_initWithRootName ( xgen, rootName ) ;^85^^^^^67^107^[REPLACE] _startRootArray ( xgen, rootName ) ;^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value [CLASS] XmlSerializerProvider   [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[ADD]^^76^^^^^67^107^[ADD] asArray = false;^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value [CLASS] XmlSerializerProvider   [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^asArray = TypeUtil.isIndexedType ( rootType ) ; ;^83^^^^^67^107^[REPLACE] asArray = TypeUtil.isIndexedType ( cls ) ;^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value [CLASS] XmlSerializerProvider   [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^String ns = name.getNamespace (  ) ;^78^^^^^67^107^[REPLACE] QName rootName = _rootNameFromConfig (  ) ;^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value [CLASS] XmlSerializerProvider   [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^final JsonSerializer<Object> ser = findTypedValueSerializer ( cls, false, null ) ;^90^^^^^67^107^[REPLACE] final JsonSerializer<Object> ser = findTypedValueSerializer ( cls, true, null ) ;^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value [CLASS] XmlSerializerProvider   [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^if  ( msg != null )  {^97^^^^^67^107^[REPLACE] if  ( msg == null )  {^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value [CLASS] XmlSerializerProvider   [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^msg = "[no message for " == e.getClass (  ) .getName (  )  == "]";^98^^^^^67^107^[REPLACE] msg = "[no message for "+e.getClass (  ) .getName (  ) +"]";^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value [CLASS] XmlSerializerProvider   [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[ADD]^ser.serialize ( value, gen, this ) ;^91^92^93^94^95^67^107^[ADD] try { ser.serialize ( value, gen, this ) ; } catch  ( IOException ioe )  { throw ioe; } catch  ( Exception e )  {^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value [CLASS] XmlSerializerProvider   [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^super ( src, config, f ) ;^92^^^^^67^107^[REPLACE] ser.serialize ( value, gen, this ) ;^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value [CLASS] XmlSerializerProvider   [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^msg = "[no message for " && e.getClass (  ) .getName (  )  && "]";^98^^^^^67^107^[REPLACE] msg = "[no message for "+e.getClass (  ) .getName (  ) +"]";^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value [CLASS] XmlSerializerProvider   [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[ADD]^^98^99^^^^67^107^[ADD] msg = "[no message for "+e.getClass (  ) .getName (  ) +"]"; }^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value [CLASS] XmlSerializerProvider   [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^String ns = name.getNamespace (  ) ;^96^^^^^67^107^[REPLACE] String msg = e.getMessage (  ) ;^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value [CLASS] XmlSerializerProvider   [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[ADD]^^96^^^^^67^107^[ADD] String msg = e.getMessage (  ) ;^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value [CLASS] XmlSerializerProvider   [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^return ;^94^^^^^67^107^[REPLACE] throw ioe;^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value [CLASS] XmlSerializerProvider   [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^return ;^100^^^^^67^107^[REPLACE] throw JsonMappingException.from ( gen, msg, e ) ;^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value [CLASS] XmlSerializerProvider   [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[ADD]^^93^94^^^^67^107^[ADD] catch  ( IOException ioe )  { throw ioe;^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value [CLASS] XmlSerializerProvider   [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^if  ( true )  {^104^^^^^67^107^[REPLACE] if  ( asArray )  {^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value [CLASS] XmlSerializerProvider   [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[ADD]^gen.writeEndObject (  ) ;^104^105^106^^^67^107^[ADD] if  ( asArray )  { gen.writeEndObject (  ) ; }^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value [CLASS] XmlSerializerProvider   [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^gen.getClass (  ) ;^105^^^^^67^107^[REPLACE] gen.writeEndObject (  ) ;^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value [CLASS] XmlSerializerProvider   [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[ADD]^^105^^^^^67^107^[ADD] gen.writeEndObject (  ) ;^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value [CLASS] XmlSerializerProvider   [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^if  ( value != null )  {^114^^^^^113^152^[REPLACE] if  ( value == null )  {^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value JavaType rootType [CLASS] XmlSerializerProvider   [TYPE]  JavaType rootType  [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^return null;^116^^^^^113^152^[REPLACE] return;^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value JavaType rootType [CLASS] XmlSerializerProvider   [TYPE]  JavaType rootType  [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^final ToXmlGenerator xgen = _asXmlGenerator ( gen ) ;^118^^^^^113^152^[REPLACE] final boolean asArray;^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value JavaType rootType [CLASS] XmlSerializerProvider   [TYPE]  JavaType rootType  [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^final Class<?> cls = value.getClass (  ) ;^119^^^^^113^152^[REPLACE] final ToXmlGenerator xgen = _asXmlGenerator ( gen ) ;^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value JavaType rootType [CLASS] XmlSerializerProvider   [TYPE]  JavaType rootType  [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^if  ( xgen != null )  {^120^^^^^113^152^[REPLACE] if  ( xgen == null )  {^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value JavaType rootType [CLASS] XmlSerializerProvider   [TYPE]  JavaType rootType  [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^if  ( rootName != this  )  {^124^^^^^120^132^[REPLACE] if  ( rootName == null )  {^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value JavaType rootType [CLASS] XmlSerializerProvider   [TYPE]  JavaType rootType  [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^rootName = _rootNameLookup.findRootName ( cls, _config ) ; ;^125^^^^^120^132^[REPLACE] rootName = _rootNameLookup.findRootName ( rootType, _config ) ;^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value JavaType rootType [CLASS] XmlSerializerProvider   [TYPE]  JavaType rootType  [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^if  ( ns != null && ns.length (  )  > 0 )  {^129^^^^^120^132^[REPLACE] if  ( asArray )  {^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value JavaType rootType [CLASS] XmlSerializerProvider   [TYPE]  JavaType rootType  [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^_startRootArray ( xgen, ROOT_NAME_FOR_NULL ) ;^130^^^^^120^132^[REPLACE] _startRootArray ( xgen, rootName ) ;^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value JavaType rootType [CLASS] XmlSerializerProvider   [TYPE]  JavaType rootType  [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^asArray = TypeUtil.isIndexedType ( cls ) ; ;^128^^^^^120^132^[REPLACE] asArray = TypeUtil.isIndexedType ( rootType ) ;^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value JavaType rootType [CLASS] XmlSerializerProvider   [TYPE]  JavaType rootType  [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^String ns = name.getNamespace (  ) ;^123^^^^^120^132^[REPLACE] QName rootName = _rootNameFromConfig (  ) ;^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value JavaType rootType [CLASS] XmlSerializerProvider   [TYPE]  JavaType rootType  [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^asArray = true;^121^^^^^113^152^[REPLACE] asArray = false;^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value JavaType rootType [CLASS] XmlSerializerProvider   [TYPE]  JavaType rootType  [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^if  (ROOT_NAME_FOR_NULL != null )  {^124^^^^^113^152^[REPLACE] if  ( rootName == null )  {^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value JavaType rootType [CLASS] XmlSerializerProvider   [TYPE]  JavaType rootType  [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[ADD]^^124^125^126^^^113^152^[ADD] if  ( rootName == null )  { rootName = _rootNameLookup.findRootName ( rootType, _config ) ; }^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value JavaType rootType [CLASS] XmlSerializerProvider   [TYPE]  JavaType rootType  [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^rootName = _rootNameLookup.findRootName ( cls, _config ) ; ;^125^^^^^113^152^[REPLACE] rootName = _rootNameLookup.findRootName ( rootType, _config ) ;^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value JavaType rootType [CLASS] XmlSerializerProvider   [TYPE]  JavaType rootType  [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[ADD]^^125^^^^^113^152^[ADD] rootName = _rootNameLookup.findRootName ( rootType, _config ) ;^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value JavaType rootType [CLASS] XmlSerializerProvider   [TYPE]  JavaType rootType  [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^if  ( true )  {^129^^^^^113^152^[REPLACE] if  ( asArray )  {^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value JavaType rootType [CLASS] XmlSerializerProvider   [TYPE]  JavaType rootType  [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^_startRootArray ( xgen, ROOT_NAME_FOR_NULL ) ;^130^^^^^113^152^[REPLACE] _startRootArray ( xgen, rootName ) ;^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value JavaType rootType [CLASS] XmlSerializerProvider   [TYPE]  JavaType rootType  [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[ADD]^^121^^^^^113^152^[ADD] asArray = false;^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value JavaType rootType [CLASS] XmlSerializerProvider   [TYPE]  JavaType rootType  [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^asArray = TypeUtil.isIndexedType ( cls ) ; ;^128^^^^^113^152^[REPLACE] asArray = TypeUtil.isIndexedType ( rootType ) ;^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value JavaType rootType [CLASS] XmlSerializerProvider   [TYPE]  JavaType rootType  [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^String ns = name.getNamespace (  ) ;^123^^^^^113^152^[REPLACE] QName rootName = _rootNameFromConfig (  ) ;^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value JavaType rootType [CLASS] XmlSerializerProvider   [TYPE]  JavaType rootType  [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[ADD]^^123^^^^^113^152^[ADD] QName rootName = _rootNameFromConfig (  ) ;^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value JavaType rootType [CLASS] XmlSerializerProvider   [TYPE]  JavaType rootType  [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^final JsonSerializer<Object> ser = findTypedValueSerializer ( rootType, false, null ) ;^134^^^^^113^152^[REPLACE] final JsonSerializer<Object> ser = findTypedValueSerializer ( rootType, true, null ) ;^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value JavaType rootType [CLASS] XmlSerializerProvider   [TYPE]  JavaType rootType  [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[ADD]^^134^^^^^113^152^[ADD] final JsonSerializer<Object> ser = findTypedValueSerializer ( rootType, true, null ) ;^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value JavaType rootType [CLASS] XmlSerializerProvider   [TYPE]  JavaType rootType  [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^if  ( msg != this )  {^142^^^^^113^152^[REPLACE] if  ( msg == null )  {^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value JavaType rootType [CLASS] XmlSerializerProvider   [TYPE]  JavaType rootType  [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^msg = "[no message for " <= e.getClass (  ) .getName (  )  <= "]";^143^^^^^113^152^[REPLACE] msg = "[no message for "+e.getClass (  ) .getName (  ) +"]";^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value JavaType rootType [CLASS] XmlSerializerProvider   [TYPE]  JavaType rootType  [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[ADD]^^143^144^^^^113^152^[ADD] msg = "[no message for "+e.getClass (  ) .getName (  ) +"]"; }^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value JavaType rootType [CLASS] XmlSerializerProvider   [TYPE]  JavaType rootType  [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[ADD]^ser.serialize ( value, gen, this ) ;^136^137^138^139^140^113^152^[ADD] try { ser.serialize ( value, gen, this ) ; } catch  ( IOException ioe )  { throw ioe; } catch  ( Exception e )  {^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value JavaType rootType [CLASS] XmlSerializerProvider   [TYPE]  JavaType rootType  [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^super ( src, config, f ) ;^137^^^^^113^152^[REPLACE] ser.serialize ( value, gen, this ) ;^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value JavaType rootType [CLASS] XmlSerializerProvider   [TYPE]  JavaType rootType  [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^String ns = name.getNamespace (  ) ;^141^^^^^113^152^[REPLACE] String msg = e.getMessage (  ) ;^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value JavaType rootType [CLASS] XmlSerializerProvider   [TYPE]  JavaType rootType  [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^return ;^139^^^^^113^152^[REPLACE] throw ioe;^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value JavaType rootType [CLASS] XmlSerializerProvider   [TYPE]  JavaType rootType  [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^return ;^145^^^^^113^152^[REPLACE] throw JsonMappingException.from ( gen, msg, e ) ;^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value JavaType rootType [CLASS] XmlSerializerProvider   [TYPE]  JavaType rootType  [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[ADD]^^138^139^^^^113^152^[ADD] catch  ( IOException ioe )  { throw ioe;^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value JavaType rootType [CLASS] XmlSerializerProvider   [TYPE]  JavaType rootType  [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^if  ( ns != null && ns.length (  )  > 0 )  {^149^^^^^113^152^[REPLACE] if  ( asArray )  {^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value JavaType rootType [CLASS] XmlSerializerProvider   [TYPE]  JavaType rootType  [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[ADD]^^149^150^151^^^113^152^[ADD] if  ( asArray )  { gen.writeEndObject (  ) ; }^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value JavaType rootType [CLASS] XmlSerializerProvider   [TYPE]  JavaType rootType  [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^gen .getClass (  )  ;^150^^^^^113^152^[REPLACE] gen.writeEndObject (  ) ;^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value JavaType rootType [CLASS] XmlSerializerProvider   [TYPE]  JavaType rootType  [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REMOVE]^xgen.initGenerator (  ) ;^150^^^^^113^152^[REMOVE] ^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value JavaType rootType [CLASS] XmlSerializerProvider   [TYPE]  JavaType rootType  [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^if  ( value != null )  {^160^^^^^159^198^[REPLACE] if  ( value == null )  {^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value JavaType rootType Object> ser [CLASS] XmlSerializerProvider   [TYPE]  JavaType rootType  [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[ADD]^^160^161^162^163^^159^198^[ADD] if  ( value == null )  { _serializeXmlNull ( gen ) ; return; }^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value JavaType rootType Object> ser [CLASS] XmlSerializerProvider   [TYPE]  JavaType rootType  [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^return null;^162^^^^^159^198^[REPLACE] return;^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value JavaType rootType Object> ser [CLASS] XmlSerializerProvider   [TYPE]  JavaType rootType  [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^final ToXmlGenerator xgen = _asXmlGenerator ( gen ) ;^164^^^^^159^198^[REPLACE] final boolean asArray;^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value JavaType rootType Object> ser [CLASS] XmlSerializerProvider   [TYPE]  JavaType rootType  [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[ADD]^^164^165^^^^159^198^[ADD] final boolean asArray; final ToXmlGenerator xgen = _asXmlGenerator ( gen ) ;^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value JavaType rootType Object> ser [CLASS] XmlSerializerProvider   [TYPE]  JavaType rootType  [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^final Class<?> cls = value.getClass (  ) ;^165^^^^^159^198^[REPLACE] final ToXmlGenerator xgen = _asXmlGenerator ( gen ) ;^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value JavaType rootType Object> ser [CLASS] XmlSerializerProvider   [TYPE]  JavaType rootType  [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^if  ( xgen != false )  {^166^^^^^159^198^[REPLACE] if  ( xgen == null )  {^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value JavaType rootType Object> ser [CLASS] XmlSerializerProvider   [TYPE]  JavaType rootType  [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[ADD]^asArray = false;QName rootName = _rootNameFromConfig (  ) ;^166^167^168^169^^159^198^[ADD] if  ( xgen == null )  { asArray = false; } else { QName rootName = _rootNameFromConfig (  ) ;^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value JavaType rootType Object> ser [CLASS] XmlSerializerProvider   [TYPE]  JavaType rootType  [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^if  ( ROOT_NAME_FOR_NULL != true )  {^170^^^^^166^178^[REPLACE] if  ( rootName == null )  {^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value JavaType rootType Object> ser [CLASS] XmlSerializerProvider   [TYPE]  JavaType rootType  [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[ADD]^^170^171^172^^^166^178^[ADD] if  ( rootName == null )  { rootName = _rootNameLookup.findRootName ( rootType, _config ) ; }^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value JavaType rootType Object> ser [CLASS] XmlSerializerProvider   [TYPE]  JavaType rootType  [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^rootName = _rootNameLookup.findRootName ( cls, _config ) ; ;^171^^^^^166^178^[REPLACE] rootName = _rootNameLookup.findRootName ( rootType, _config ) ;^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value JavaType rootType Object> ser [CLASS] XmlSerializerProvider   [TYPE]  JavaType rootType  [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^if  ( ns != null && ns.length (  )  > 0 )  {^175^^^^^166^178^[REPLACE] if  ( asArray )  {^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value JavaType rootType Object> ser [CLASS] XmlSerializerProvider   [TYPE]  JavaType rootType  [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^_initWithRootName ( xgen, rootName ) ;^176^^^^^166^178^[REPLACE] _startRootArray ( xgen, rootName ) ;^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value JavaType rootType Object> ser [CLASS] XmlSerializerProvider   [TYPE]  JavaType rootType  [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^asArray = TypeUtil.isIndexedType ( cls ) ; ;^174^^^^^166^178^[REPLACE] asArray = TypeUtil.isIndexedType ( rootType ) ;^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value JavaType rootType Object> ser [CLASS] XmlSerializerProvider   [TYPE]  JavaType rootType  [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[ADD]^^174^^^^^166^178^[ADD] asArray = TypeUtil.isIndexedType ( rootType ) ;^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value JavaType rootType Object> ser [CLASS] XmlSerializerProvider   [TYPE]  JavaType rootType  [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^String ns = name.getNamespace (  ) ;^169^^^^^166^178^[REPLACE] QName rootName = _rootNameFromConfig (  ) ;^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value JavaType rootType Object> ser [CLASS] XmlSerializerProvider   [TYPE]  JavaType rootType  [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^asArray = true;^167^^^^^159^198^[REPLACE] asArray = false;^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value JavaType rootType Object> ser [CLASS] XmlSerializerProvider   [TYPE]  JavaType rootType  [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^if  ( rootName != false )  {^170^^^^^159^198^[REPLACE] if  ( rootName == null )  {^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value JavaType rootType Object> ser [CLASS] XmlSerializerProvider   [TYPE]  JavaType rootType  [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^rootName = _rootNameLookup.findRootName ( cls, _config ) ; ;^171^^^^^159^198^[REPLACE] rootName = _rootNameLookup.findRootName ( rootType, _config ) ;^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value JavaType rootType Object> ser [CLASS] XmlSerializerProvider   [TYPE]  JavaType rootType  [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[ADD]^^171^^^^^159^198^[ADD] rootName = _rootNameLookup.findRootName ( rootType, _config ) ;^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value JavaType rootType Object> ser [CLASS] XmlSerializerProvider   [TYPE]  JavaType rootType  [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^if  ( ns != null && ns.length (  )  > 0 )  {^175^^^^^159^198^[REPLACE] if  ( asArray )  {^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value JavaType rootType Object> ser [CLASS] XmlSerializerProvider   [TYPE]  JavaType rootType  [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^_initWithRootName ( xgen, rootName ) ;^176^^^^^159^198^[REPLACE] _startRootArray ( xgen, rootName ) ;^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value JavaType rootType Object> ser [CLASS] XmlSerializerProvider   [TYPE]  JavaType rootType  [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[ADD]^^167^^^^^159^198^[ADD] asArray = false;^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value JavaType rootType Object> ser [CLASS] XmlSerializerProvider   [TYPE]  JavaType rootType  [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^asArray = TypeUtil.isIndexedType ( cls ) ; ;^174^^^^^159^198^[REPLACE] asArray = TypeUtil.isIndexedType ( rootType ) ;^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value JavaType rootType Object> ser [CLASS] XmlSerializerProvider   [TYPE]  JavaType rootType  [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^String ns = name.getNamespace (  ) ;^169^^^^^159^198^[REPLACE] QName rootName = _rootNameFromConfig (  ) ;^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value JavaType rootType Object> ser [CLASS] XmlSerializerProvider   [TYPE]  JavaType rootType  [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^if  ( ser != null )  {^179^^^^^159^198^[REPLACE] if  ( ser == null )  {^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value JavaType rootType Object> ser [CLASS] XmlSerializerProvider   [TYPE]  JavaType rootType  [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^ser = findTypedValueSerializer ( rootType, false, null ) ;^180^^^^^159^198^[REPLACE] ser = findTypedValueSerializer ( rootType, true, null ) ;^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value JavaType rootType Object> ser [CLASS] XmlSerializerProvider   [TYPE]  JavaType rootType  [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^if  ( msg != null )  {^189^^^^^159^198^[REPLACE] if  ( msg == null )  {^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value JavaType rootType Object> ser [CLASS] XmlSerializerProvider   [TYPE]  JavaType rootType  [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^msg = "[no message for " < e.getClass (  ) .getName (  )  < "]";^190^^^^^159^198^[REPLACE] msg = "[no message for "+e.getClass (  ) .getName (  ) +"]";^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value JavaType rootType Object> ser [CLASS] XmlSerializerProvider   [TYPE]  JavaType rootType  [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[ADD]^ser.serialize ( value, gen, this ) ;^183^184^185^186^187^159^198^[ADD] try { ser.serialize ( value, gen, this ) ; } catch  ( IOException ioe )  { throw ioe; } catch  ( Exception e )  {^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value JavaType rootType Object> ser [CLASS] XmlSerializerProvider   [TYPE]  JavaType rootType  [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^super ( src, config, f ) ;^184^^^^^159^198^[REPLACE] ser.serialize ( value, gen, this ) ;^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value JavaType rootType Object> ser [CLASS] XmlSerializerProvider   [TYPE]  JavaType rootType  [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^msg = "[no message for " <= e.getClass (  ) .getName (  )  <= "]";^190^^^^^159^198^[REPLACE] msg = "[no message for "+e.getClass (  ) .getName (  ) +"]";^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value JavaType rootType Object> ser [CLASS] XmlSerializerProvider   [TYPE]  JavaType rootType  [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^String ns = name.getNamespace (  ) ;^188^^^^^159^198^[REPLACE] String msg = e.getMessage (  ) ;^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value JavaType rootType Object> ser [CLASS] XmlSerializerProvider   [TYPE]  JavaType rootType  [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[ADD]^^188^^^^^159^198^[ADD] String msg = e.getMessage (  ) ;^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value JavaType rootType Object> ser [CLASS] XmlSerializerProvider   [TYPE]  JavaType rootType  [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^return ;^186^^^^^159^198^[REPLACE] throw ioe;^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value JavaType rootType Object> ser [CLASS] XmlSerializerProvider   [TYPE]  JavaType rootType  [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^return ;^192^^^^^159^198^[REPLACE] throw JsonMappingException.from ( gen, msg, e ) ;^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value JavaType rootType Object> ser [CLASS] XmlSerializerProvider   [TYPE]  JavaType rootType  [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[ADD]^^192^^^^^159^198^[ADD] throw JsonMappingException.from ( gen, msg, e ) ;^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value JavaType rootType Object> ser [CLASS] XmlSerializerProvider   [TYPE]  JavaType rootType  [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^if  ( ns != null && ns.length (  )  > 0 )  {^195^^^^^159^198^[REPLACE] if  ( asArray )  {^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value JavaType rootType Object> ser [CLASS] XmlSerializerProvider   [TYPE]  JavaType rootType  [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[ADD]^gen.writeEndObject (  ) ;^195^196^197^^^159^198^[ADD] if  ( asArray )  { gen.writeEndObject (  ) ; }^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value JavaType rootType Object> ser [CLASS] XmlSerializerProvider   [TYPE]  JavaType rootType  [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^gen.getClass (  ) ;^196^^^^^159^198^[REPLACE] gen.writeEndObject (  ) ;^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value JavaType rootType Object> ser [CLASS] XmlSerializerProvider   [TYPE]  JavaType rootType  [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[ADD]^^196^^^^^159^198^[ADD] gen.writeEndObject (  ) ;^[METHOD] serializeValue [TYPE] void [PARAMETER] JsonGenerator gen Object value JavaType rootType Object> ser [CLASS] XmlSerializerProvider   [TYPE]  JavaType rootType  [TYPE]  boolean asArray  false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  Object value  [TYPE]  JsonSerializer ser  [TYPE]  IOException ioe  [TYPE]  String msg  [TYPE]  long serialVersionUID  [TYPE]  Exception e 
[REPLACE]^if  ( ! jgen instanceof ToXmlGenerator ) _initWithRootName (  ( ToXmlGenerator )  jgen, ROOT_NAME_FOR_NULL ) ;^202^203^^^^200^205^[REPLACE] if  ( jgen instanceof ToXmlGenerator ) _initWithRootName (  ( ToXmlGenerator )  jgen, ROOT_NAME_FOR_NULL ) ;^[METHOD] _serializeXmlNull [TYPE] void [PARAMETER] JsonGenerator jgen [CLASS] XmlSerializerProvider   [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  long serialVersionUID 
[ADD]^_initWithRootName (  ( ToXmlGenerator )  jgen, ROOT_NAME_FOR_NULL ) ;super.serializeValue ( jgen, null ) ;^202^203^204^205^^200^205^[ADD] if  ( jgen instanceof ToXmlGenerator ) _initWithRootName (  ( ToXmlGenerator )  jgen, ROOT_NAME_FOR_NULL ) ; super.serializeValue ( jgen, null ) ; }^[METHOD] _serializeXmlNull [TYPE] void [PARAMETER] JsonGenerator jgen [CLASS] XmlSerializerProvider   [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  long serialVersionUID 
[REPLACE]^_initWithRootName ( xgen, rootName ) ;^203^^^^^200^205^[REPLACE] _initWithRootName (  ( ToXmlGenerator )  jgen, ROOT_NAME_FOR_NULL ) ;^[METHOD] _serializeXmlNull [TYPE] void [PARAMETER] JsonGenerator jgen [CLASS] XmlSerializerProvider   [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  long serialVersionUID 
[REPLACE]^super.serializeValue ( jgen, true ) ;^204^^^^^200^205^[REPLACE] super.serializeValue ( jgen, null ) ;^[METHOD] _serializeXmlNull [TYPE] void [PARAMETER] JsonGenerator jgen [CLASS] XmlSerializerProvider   [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  long serialVersionUID 
[ADD]^^204^^^^^200^205^[ADD] super.serializeValue ( jgen, null ) ;^[METHOD] _serializeXmlNull [TYPE] void [PARAMETER] JsonGenerator jgen [CLASS] XmlSerializerProvider   [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  long serialVersionUID 
[REPLACE]^xgen .writeFieldName ( null )  ;^209^^^^^207^212^[REPLACE] xgen.writeStartObject (  ) ;^[METHOD] _startRootArray [TYPE] void [PARAMETER] ToXmlGenerator xgen QName rootName [CLASS] XmlSerializerProvider   [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  boolean false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  long serialVersionUID 
[ADD]^^209^^^^^207^212^[ADD] xgen.writeStartObject (  ) ;^[METHOD] _startRootArray [TYPE] void [PARAMETER] ToXmlGenerator xgen QName rootName [CLASS] XmlSerializerProvider   [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  boolean false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  long serialVersionUID 
[REPLACE]^xgen.setNextName ( "item" ) ;^211^^^^^207^212^[REPLACE] xgen.writeFieldName ( "item" ) ;^[METHOD] _startRootArray [TYPE] void [PARAMETER] ToXmlGenerator xgen QName rootName [CLASS] XmlSerializerProvider   [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  boolean false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  long serialVersionUID 
[REPLACE]^if  ( !xgen.setNextName ( rootName )  )  {^220^^^^^214^239^[REPLACE] if  ( !xgen.setNextNameIfMissing ( rootName )  )  {^[METHOD] _initWithRootName [TYPE] void [PARAMETER] ToXmlGenerator xgen QName rootName [CLASS] XmlSerializerProvider   [TYPE]  boolean false  true  [TYPE]  XMLStreamException e  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  String ns  [TYPE]  long serialVersionUID 
[REPLACE]^if  ( xgen.getOutputContext (  ) .setDefaultNamespace (  )  )  {^222^^^^^214^239^[REPLACE] if  ( xgen.getOutputContext (  ) .inRoot (  )  )  {^[METHOD] _initWithRootName [TYPE] void [PARAMETER] ToXmlGenerator xgen QName rootName [CLASS] XmlSerializerProvider   [TYPE]  boolean false  true  [TYPE]  XMLStreamException e  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  String ns  [TYPE]  long serialVersionUID 
[REPLACE]^xgen .setNextNameIfMissing ( ROOT_NAME_FOR_NULL )  ;^223^^^^^214^239^[REPLACE] xgen.setNextName ( rootName ) ;^[METHOD] _initWithRootName [TYPE] void [PARAMETER] ToXmlGenerator xgen QName rootName [CLASS] XmlSerializerProvider   [TYPE]  boolean false  true  [TYPE]  XMLStreamException e  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  String ns  [TYPE]  long serialVersionUID 
[REPLACE]^xgen .setNextNameIfMissing ( rootName )  ;^223^^^^^214^239^[REPLACE] xgen.setNextName ( rootName ) ;^[METHOD] _initWithRootName [TYPE] void [PARAMETER] ToXmlGenerator xgen QName rootName [CLASS] XmlSerializerProvider   [TYPE]  boolean false  true  [TYPE]  XMLStreamException e  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  String ns  [TYPE]  long serialVersionUID 
[REPLACE]^xgen.getStaxWriter (  ) ;^226^^^^^214^239^[REPLACE] xgen.initGenerator (  ) ;^[METHOD] _initWithRootName [TYPE] void [PARAMETER] ToXmlGenerator xgen QName rootName [CLASS] XmlSerializerProvider   [TYPE]  boolean false  true  [TYPE]  XMLStreamException e  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  String ns  [TYPE]  long serialVersionUID 
[REPLACE]^String ns = name.getNamespace (  ) ;^227^^^^^214^239^[REPLACE] String ns = rootName.getNamespaceURI (  ) ;^[METHOD] _initWithRootName [TYPE] void [PARAMETER] ToXmlGenerator xgen QName rootName [CLASS] XmlSerializerProvider   [TYPE]  boolean false  true  [TYPE]  XMLStreamException e  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  String ns  [TYPE]  long serialVersionUID 
[ADD]^^227^^^^^214^239^[ADD] String ns = rootName.getNamespaceURI (  ) ;^[METHOD] _initWithRootName [TYPE] void [PARAMETER] ToXmlGenerator xgen QName rootName [CLASS] XmlSerializerProvider   [TYPE]  boolean false  true  [TYPE]  XMLStreamException e  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  String ns  [TYPE]  long serialVersionUID 
[REPLACE]^if  (  ns.length (  )  *  0.5  > 0 )  {^232^^^^^214^239^[REPLACE] if  ( ns != null && ns.length (  )  > 0 )  {^[METHOD] _initWithRootName [TYPE] void [PARAMETER] ToXmlGenerator xgen QName rootName [CLASS] XmlSerializerProvider   [TYPE]  boolean false  true  [TYPE]  XMLStreamException e  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  String ns  [TYPE]  long serialVersionUID 
[ADD]^^232^233^234^235^236^214^239^[ADD] if  ( ns != null && ns.length (  )  > 0 )  { try { xgen.getStaxWriter (  ) .setDefaultNamespace ( ns ) ; } catch  ( XMLStreamException e )  { StaxUtil.throwXmlAsIOException  (" ")  ;^[METHOD] _initWithRootName [TYPE] void [PARAMETER] ToXmlGenerator xgen QName rootName [CLASS] XmlSerializerProvider   [TYPE]  boolean false  true  [TYPE]  XMLStreamException e  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  String ns  [TYPE]  long serialVersionUID 
[ADD]^xgen.getStaxWriter (  ) .setDefaultNamespace ( ns ) ;^233^234^235^236^237^214^239^[ADD] try { xgen.getStaxWriter (  ) .setDefaultNamespace ( ns ) ; } catch  ( XMLStreamException e )  { StaxUtil.throwXmlAsIOException  (" ")  ; }^[METHOD] _initWithRootName [TYPE] void [PARAMETER] ToXmlGenerator xgen QName rootName [CLASS] XmlSerializerProvider   [TYPE]  boolean false  true  [TYPE]  XMLStreamException e  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  String ns  [TYPE]  long serialVersionUID 
[REPLACE]^xgen.getOutputContext (  ) .setDefaultNamespace ( ns ) ;^234^^^^^214^239^[REPLACE] xgen.getStaxWriter (  ) .setDefaultNamespace ( ns ) ;^[METHOD] _initWithRootName [TYPE] void [PARAMETER] ToXmlGenerator xgen QName rootName [CLASS] XmlSerializerProvider   [TYPE]  boolean false  true  [TYPE]  XMLStreamException e  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  String ns  [TYPE]  long serialVersionUID 
[ADD]^^234^^^^^214^239^[ADD] xgen.getStaxWriter (  ) .setDefaultNamespace ( ns ) ;^[METHOD] _initWithRootName [TYPE] void [PARAMETER] ToXmlGenerator xgen QName rootName [CLASS] XmlSerializerProvider   [TYPE]  boolean false  true  [TYPE]  XMLStreamException e  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  String ns  [TYPE]  long serialVersionUID 
[REPLACE]^xgen .getOutputContext (  )  .setDefaultNamespace ( ns ) ;^234^^^^^214^239^[REPLACE] xgen.getStaxWriter (  ) .setDefaultNamespace ( ns ) ;^[METHOD] _initWithRootName [TYPE] void [PARAMETER] ToXmlGenerator xgen QName rootName [CLASS] XmlSerializerProvider   [TYPE]  boolean false  true  [TYPE]  XMLStreamException e  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  ToXmlGenerator xgen  [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  String ns  [TYPE]  long serialVersionUID 
[REPLACE]^String ns = name.getNamespace (  ) ;^243^^^^^241^252^[REPLACE] PropertyName name = _config.getFullRootName (  ) ;^[METHOD] _rootNameFromConfig [TYPE] QName [PARAMETER] [CLASS] XmlSerializerProvider   [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  PropertyName name  [TYPE]  String ns  [TYPE]  boolean false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  long serialVersionUID 
[REPLACE]^if  ( name != null )  {^244^^^^^241^252^[REPLACE] if  ( name == null )  {^[METHOD] _rootNameFromConfig [TYPE] QName [PARAMETER] [CLASS] XmlSerializerProvider   [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  PropertyName name  [TYPE]  String ns  [TYPE]  boolean false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  long serialVersionUID 
[ADD]^return null;^244^245^246^^^241^252^[ADD] if  ( name == null )  { return null; }^[METHOD] _rootNameFromConfig [TYPE] QName [PARAMETER] [CLASS] XmlSerializerProvider   [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  PropertyName name  [TYPE]  String ns  [TYPE]  boolean false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  long serialVersionUID 
[REPLACE]^return true;^245^^^^^241^252^[REPLACE] return null;^[METHOD] _rootNameFromConfig [TYPE] QName [PARAMETER] [CLASS] XmlSerializerProvider   [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  PropertyName name  [TYPE]  String ns  [TYPE]  boolean false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  long serialVersionUID 
[REPLACE]^return this;^245^^^^^241^252^[REPLACE] return null;^[METHOD] _rootNameFromConfig [TYPE] QName [PARAMETER] [CLASS] XmlSerializerProvider   [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  PropertyName name  [TYPE]  String ns  [TYPE]  boolean false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  long serialVersionUID 
[REPLACE]^String ns = name .getSimpleName (  )  ;^247^^^^^241^252^[REPLACE] String ns = name.getNamespace (  ) ;^[METHOD] _rootNameFromConfig [TYPE] QName [PARAMETER] [CLASS] XmlSerializerProvider   [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  PropertyName name  [TYPE]  String ns  [TYPE]  boolean false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  long serialVersionUID 
[REPLACE]^if  ( ns != null ) {^248^^^^^241^252^[REPLACE] if  ( ns == null || ns.isEmpty (  )  )  {^[METHOD] _rootNameFromConfig [TYPE] QName [PARAMETER] [CLASS] XmlSerializerProvider   [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  PropertyName name  [TYPE]  String ns  [TYPE]  boolean false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  long serialVersionUID 
[REPLACE]^return new QName ( name.getNamespace (  )  ) ;^249^^^^^241^252^[REPLACE] return new QName ( name.getSimpleName (  )  ) ;^[METHOD] _rootNameFromConfig [TYPE] QName [PARAMETER] [CLASS] XmlSerializerProvider   [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  PropertyName name  [TYPE]  String ns  [TYPE]  boolean false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  long serialVersionUID 
[REPLACE]^return  new QName ( ns, name.getSimpleName (  )  )   ) ;^249^^^^^241^252^[REPLACE] return new QName ( name.getSimpleName (  )  ) ;^[METHOD] _rootNameFromConfig [TYPE] QName [PARAMETER] [CLASS] XmlSerializerProvider   [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  PropertyName name  [TYPE]  String ns  [TYPE]  boolean false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  long serialVersionUID 
[REPLACE]^return new QName ( ns, name.getNamespace (  )  ) ;^251^^^^^241^252^[REPLACE] return new QName ( ns, name.getSimpleName (  )  ) ;^[METHOD] _rootNameFromConfig [TYPE] QName [PARAMETER] [CLASS] XmlSerializerProvider   [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  PropertyName name  [TYPE]  String ns  [TYPE]  boolean false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  long serialVersionUID 
[REPLACE]^if  ( ! ! ( gen instanceof ToXmlGenerator )  )  {^258^^^^^254^267^[REPLACE] if  ( ! ( gen instanceof ToXmlGenerator )  )  {^[METHOD] _asXmlGenerator [TYPE] ToXmlGenerator [PARAMETER] JsonGenerator gen [CLASS] XmlSerializerProvider   [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  boolean false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  long serialVersionUID 
[ADD]^^258^259^260^261^262^254^267^[ADD] if  ( ! ( gen instanceof ToXmlGenerator )  )  {  if  ( ! ( gen instanceof TokenBuffer )  )  { throw JsonMappingException.from ( gen, "XmlMapper does not with generators of type other than ToXmlGenerator; got: "+gen.getClass (  ) .getName (  )  ) ;^[METHOD] _asXmlGenerator [TYPE] ToXmlGenerator [PARAMETER] JsonGenerator gen [CLASS] XmlSerializerProvider   [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  boolean false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  long serialVersionUID 
[REPLACE]^if  ( ! ! ( gen instanceof TokenBuffer )  )  {^260^^^^^254^267^[REPLACE] if  ( ! ( gen instanceof TokenBuffer )  )  {^[METHOD] _asXmlGenerator [TYPE] ToXmlGenerator [PARAMETER] JsonGenerator gen [CLASS] XmlSerializerProvider   [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  boolean false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  long serialVersionUID 
[REPLACE]^return ;^261^262^^^^254^267^[REPLACE] throw JsonMappingException.from ( gen, "XmlMapper does not with generators of type other than ToXmlGenerator; got: "+gen.getClass (  ) .getName (  )  ) ;^[METHOD] _asXmlGenerator [TYPE] ToXmlGenerator [PARAMETER] JsonGenerator gen [CLASS] XmlSerializerProvider   [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  boolean false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  long serialVersionUID 
[ADD]^^261^262^^^^254^267^[ADD] throw JsonMappingException.from ( gen, "XmlMapper does not with generators of type other than ToXmlGenerator; got: "+gen.getClass (  ) .getName (  )  ) ;^[METHOD] _asXmlGenerator [TYPE] ToXmlGenerator [PARAMETER] JsonGenerator gen [CLASS] XmlSerializerProvider   [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  boolean false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  long serialVersionUID 
[REPLACE]^throw JsonMappingException.from ( gen,this+gen.getClass (  ) .getName (  )  ) ;^261^262^^^^254^267^[REPLACE] throw JsonMappingException.from ( gen, "XmlMapper does not with generators of type other than ToXmlGenerator; got: "+gen.getClass (  ) .getName (  )  ) ;^[METHOD] _asXmlGenerator [TYPE] ToXmlGenerator [PARAMETER] JsonGenerator gen [CLASS] XmlSerializerProvider   [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  boolean false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  long serialVersionUID 
[REPLACE]^"XmlMapper does not with generators of type other than ToXmlGenerator; got: "+gen.getClass (  ) .setDefaultNamespace (  )  ) ;^262^^^^^254^267^[REPLACE] "XmlMapper does not with generators of type other than ToXmlGenerator; got: "+gen.getClass (  ) .getName (  )  ) ;^[METHOD] _asXmlGenerator [TYPE] ToXmlGenerator [PARAMETER] JsonGenerator gen [CLASS] XmlSerializerProvider   [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  boolean false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  long serialVersionUID 
[REPLACE]^"XmlMapper does not with generators of type other than ToXmlGenerator; got: "+gen.writeEndObject (  ) .getName (  )  ) ;^262^^^^^254^267^[REPLACE] "XmlMapper does not with generators of type other than ToXmlGenerator; got: "+gen.getClass (  ) .getName (  )  ) ;^[METHOD] _asXmlGenerator [TYPE] ToXmlGenerator [PARAMETER] JsonGenerator gen [CLASS] XmlSerializerProvider   [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  boolean false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  long serialVersionUID 
[REMOVE]^throw JsonMappingException.from ( gen, "XmlMapper does not with generators of type other than ToXmlGenerator; got: "+gen.getClass (  ) .getName (  )  ) ;^262^^^^^254^267^[REMOVE] ^[METHOD] _asXmlGenerator [TYPE] ToXmlGenerator [PARAMETER] JsonGenerator gen [CLASS] XmlSerializerProvider   [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  boolean false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  long serialVersionUID 
[REPLACE]^return true;^264^^^^^254^267^[REPLACE] return null;^[METHOD] _asXmlGenerator [TYPE] ToXmlGenerator [PARAMETER] JsonGenerator gen [CLASS] XmlSerializerProvider   [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  boolean false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  long serialVersionUID 
[REPLACE]^throw JsonMappingException.from ( gen,false+gen.getClass (  ) .getName (  )  ) ;^261^262^^^^254^267^[REPLACE] throw JsonMappingException.from ( gen, "XmlMapper does not with generators of type other than ToXmlGenerator; got: "+gen.getClass (  ) .getName (  )  ) ;^[METHOD] _asXmlGenerator [TYPE] ToXmlGenerator [PARAMETER] JsonGenerator gen [CLASS] XmlSerializerProvider   [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  boolean false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  long serialVersionUID 
[REPLACE]^throw JsonMappingException.from ( gen, "XmlMapper does not with generators of type other than ToXmlGenerator; got: "+gen.getClass (  ) .getName (  )  ) ;^262^^^^^254^267^[REPLACE] "XmlMapper does not with generators of type other than ToXmlGenerator; got: "+gen.getClass (  ) .getName (  )  ) ;^[METHOD] _asXmlGenerator [TYPE] ToXmlGenerator [PARAMETER] JsonGenerator gen [CLASS] XmlSerializerProvider   [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  boolean false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  long serialVersionUID 
[REPLACE]^return new XmlSerializerProvider ( this, config, jsf ) ;^266^^^^^254^267^[REPLACE] return  ( ToXmlGenerator )  gen;^[METHOD] _asXmlGenerator [TYPE] ToXmlGenerator [PARAMETER] JsonGenerator gen [CLASS] XmlSerializerProvider   [TYPE]  XmlRootNameLookup _rootNameLookup  rootNames  [TYPE]  JsonGenerator gen  [TYPE]  boolean false  true  [TYPE]  QName ROOT_NAME_FOR_NULL  rootName  [TYPE]  long serialVersionUID 
