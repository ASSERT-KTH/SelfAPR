[REPLACE]^p2.setBackground ( null ) ;^84^^^^^83^85^[REPLACE] super ( name ) ;^[METHOD] <init> [TYPE] String) [PARAMETER] String name [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  String name 
[REPLACE]^DialPlot p2 = new DialPlot (  ) ;^91^^^^^90^144^[REPLACE] DialPlot p1 = new DialPlot (  ) ;^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  SimpleDialFrame f1  f2  [TYPE]  DialPlot p1  p2  [TYPE]  DialCap cap1  cap2 
[REPLACE]^DialPlot p1 = new DialPlot (  ) ;^92^^^^^90^144^[REPLACE] DialPlot p2 = new DialPlot (  ) ;^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  SimpleDialFrame f1  f2  [TYPE]  DialPlot p1  p2  [TYPE]  DialCap cap1  cap2 
[ADD]^assertTrue ( p1.equals ( p2 )  ) ;^92^93^^^^90^144^[ADD] DialPlot p2 = new DialPlot (  ) ; assertTrue ( p1.equals ( p2 )  ) ;^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  SimpleDialFrame f1  f2  [TYPE]  DialPlot p1  p2  [TYPE]  DialCap cap1  cap2 
[REPLACE]^assertFalse ( p1.equals ( p2 )  ) ;^93^^^^^90^144^[REPLACE] assertTrue ( p1.equals ( p2 )  ) ;^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  SimpleDialFrame f1  f2  [TYPE]  DialPlot p1  p2  [TYPE]  DialCap cap1  cap2 
[REPLACE]^assertTrue ( p1 .getClass (  )   ) ;^93^^^^^90^144^[REPLACE] assertTrue ( p1.equals ( p2 )  ) ;^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  SimpleDialFrame f1  f2  [TYPE]  DialPlot p1  p2  [TYPE]  DialCap cap1  cap2 
[REPLACE]^p1 .setCap ( cap2 )  ;^96^^^^^90^144^[REPLACE] p1.setBackground ( new DialBackground ( Color.green )  ) ;^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  SimpleDialFrame f1  f2  [TYPE]  DialPlot p1  p2  [TYPE]  DialCap cap1  cap2 
[REPLACE]^assertFalse ( p1.setCap ( p2 )  ) ;^97^^^^^90^144^[REPLACE] assertFalse ( p1.equals ( p2 )  ) ;^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  SimpleDialFrame f1  f2  [TYPE]  DialPlot p1  p2  [TYPE]  DialCap cap1  cap2 
[REPLACE]^p2 .setCap ( cap2 )  ;^98^^^^^90^144^[REPLACE] p2.setBackground ( new DialBackground ( Color.green )  ) ;^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  SimpleDialFrame f1  f2  [TYPE]  DialPlot p1  p2  [TYPE]  DialCap cap1  cap2 
[REPLACE]^assertTrue ( p1.setCap ( p2 )  ) ;^99^^^^^90^144^[REPLACE] assertTrue ( p1.equals ( p2 )  ) ;^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  SimpleDialFrame f1  f2  [TYPE]  DialPlot p1  p2  [TYPE]  DialCap cap1  cap2 
[REMOVE]^p1.setView ( 0.2, 0.0, 0.8, 1.0 ) ;^99^^^^^90^144^[REMOVE] ^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  SimpleDialFrame f1  f2  [TYPE]  DialPlot p1  p2  [TYPE]  DialCap cap1  cap2 
[REPLACE]^p1.setBackground ( true ) ;^101^^^^^90^144^[REPLACE] p1.setBackground ( null ) ;^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  SimpleDialFrame f1  f2  [TYPE]  DialPlot p1  p2  [TYPE]  DialCap cap1  cap2 
[ADD]^assertFalse ( p1.equals ( p2 )  ) ;^101^102^^^^90^144^[ADD] p1.setBackground ( null ) ; assertFalse ( p1.equals ( p2 )  ) ;^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  SimpleDialFrame f1  f2  [TYPE]  DialPlot p1  p2  [TYPE]  DialCap cap1  cap2 
[REPLACE]^assertTrue ( p1.equals ( p2 )  ) ;^102^^^^^90^144^[REPLACE] assertFalse ( p1.equals ( p2 )  ) ;^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  SimpleDialFrame f1  f2  [TYPE]  DialPlot p1  p2  [TYPE]  DialCap cap1  cap2 
[REPLACE]^assertFalse ( p1.setCap ( p2 )  ) ;^102^^^^^90^144^[REPLACE] assertFalse ( p1.equals ( p2 )  ) ;^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  SimpleDialFrame f1  f2  [TYPE]  DialPlot p1  p2  [TYPE]  DialCap cap1  cap2 
[REPLACE]^p2.setBackground ( this ) ;^103^^^^^90^144^[REPLACE] p2.setBackground ( null ) ;^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  SimpleDialFrame f1  f2  [TYPE]  DialPlot p1  p2  [TYPE]  DialCap cap1  cap2 
[REPLACE]^assertTrue ( p1 .getClass (  )   ) ;^104^^^^^90^144^[REPLACE] assertTrue ( p1.equals ( p2 )  ) ;^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  SimpleDialFrame f1  f2  [TYPE]  DialPlot p1  p2  [TYPE]  DialCap cap1  cap2 
[REMOVE]^p1.setView ( 0.2, 0.0, 0.8, 1.0 ) ;^104^^^^^90^144^[REMOVE] ^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  SimpleDialFrame f1  f2  [TYPE]  DialPlot p1  p2  [TYPE]  DialCap cap1  cap2 
[REPLACE]^DialCap cap2 = new DialCap (  ) ;^107^^^^^90^144^[REPLACE] DialCap cap1 = new DialCap (  ) ;^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  SimpleDialFrame f1  f2  [TYPE]  DialPlot p1  p2  [TYPE]  DialCap cap1  cap2 
[REPLACE]^cap2.setFillPaint ( Color.red ) ;^108^^^^^90^144^[REPLACE] cap1.setFillPaint ( Color.red ) ;^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  SimpleDialFrame f1  f2  [TYPE]  DialPlot p1  p2  [TYPE]  DialCap cap1  cap2 
[REPLACE]^p1.setCap ( cap2 ) ;^109^^^^^90^144^[REPLACE] p1.setCap ( cap1 ) ;^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  SimpleDialFrame f1  f2  [TYPE]  DialPlot p1  p2  [TYPE]  DialCap cap1  cap2 
[REPLACE]^assertFalse ( p1 .getClass (  )   ) ;^110^^^^^90^144^[REPLACE] assertFalse ( p1.equals ( p2 )  ) ;^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  SimpleDialFrame f1  f2  [TYPE]  DialPlot p1  p2  [TYPE]  DialCap cap1  cap2 
[REPLACE]^assertFalse ( p1.setCap ( p2 )  ) ;^110^^^^^90^144^[REPLACE] assertFalse ( p1.equals ( p2 )  ) ;^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  SimpleDialFrame f1  f2  [TYPE]  DialPlot p1  p2  [TYPE]  DialCap cap1  cap2 
[REPLACE]^DialCap cap1 = new DialCap (  ) ;^111^^^^^90^144^[REPLACE] DialCap cap2 = new DialCap (  ) ;^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  SimpleDialFrame f1  f2  [TYPE]  DialPlot p1  p2  [TYPE]  DialCap cap1  cap2 
[REPLACE]^cap1.setFillPaint ( Color.red ) ;^112^^^^^90^144^[REPLACE] cap2.setFillPaint ( Color.red ) ;^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  SimpleDialFrame f1  f2  [TYPE]  DialPlot p1  p2  [TYPE]  DialCap cap1  cap2 
[ADD]^^112^113^^^^90^144^[ADD] cap2.setFillPaint ( Color.red ) ; p2.setCap ( cap2 ) ;^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  SimpleDialFrame f1  f2  [TYPE]  DialPlot p1  p2  [TYPE]  DialCap cap1  cap2 
[REPLACE]^p2.setCap ( cap1 ) ;^113^^^^^90^144^[REPLACE] p2.setCap ( cap2 ) ;^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  SimpleDialFrame f1  f2  [TYPE]  DialPlot p1  p2  [TYPE]  DialCap cap1  cap2 
[REPLACE]^assertFalse ( p1.equals ( p2 )  ) ;^114^^^^^90^144^[REPLACE] assertTrue ( p1.equals ( p2 )  ) ;^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  SimpleDialFrame f1  f2  [TYPE]  DialPlot p1  p2  [TYPE]  DialCap cap1  cap2 
[REPLACE]^assertTrue ( p1.setCap ( p2 )  ) ;^114^^^^^90^144^[REPLACE] assertTrue ( p1.equals ( p2 )  ) ;^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  SimpleDialFrame f1  f2  [TYPE]  DialPlot p1  p2  [TYPE]  DialCap cap1  cap2 
[REPLACE]^p1.setCap ( true ) ;^116^^^^^90^144^[REPLACE] p1.setCap ( null ) ;^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  SimpleDialFrame f1  f2  [TYPE]  DialPlot p1  p2  [TYPE]  DialCap cap1  cap2 
[REPLACE]^assertTrue ( p1.equals ( p2 )  ) ;^117^^^^^90^144^[REPLACE] assertFalse ( p1.equals ( p2 )  ) ;^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  SimpleDialFrame f1  f2  [TYPE]  DialPlot p1  p2  [TYPE]  DialCap cap1  cap2 
[REPLACE]^assertFalse ( p1 .getClass (  )   ) ;^117^^^^^90^144^[REPLACE] assertFalse ( p1.equals ( p2 )  ) ;^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  SimpleDialFrame f1  f2  [TYPE]  DialPlot p1  p2  [TYPE]  DialCap cap1  cap2 
[REMOVE]^assertTrue ( p1.equals ( p2 )  ) ;^117^^^^^90^144^[REMOVE] ^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  SimpleDialFrame f1  f2  [TYPE]  DialPlot p1  p2  [TYPE]  DialCap cap1  cap2 
[REPLACE]^p2.setCap ( true ) ;^118^^^^^90^144^[REPLACE] p2.setCap ( null ) ;^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  SimpleDialFrame f1  f2  [TYPE]  DialPlot p1  p2  [TYPE]  DialCap cap1  cap2 
[ADD]^^118^119^^^^90^144^[ADD] p2.setCap ( null ) ; assertTrue ( p1.equals ( p2 )  ) ;^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  SimpleDialFrame f1  f2  [TYPE]  DialPlot p1  p2  [TYPE]  DialCap cap1  cap2 
[REPLACE]^assertTrue ( p1.setCap ( p2 )  ) ;^119^^^^^90^144^[REPLACE] assertTrue ( p1.equals ( p2 )  ) ;^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  SimpleDialFrame f1  f2  [TYPE]  DialPlot p1  p2  [TYPE]  DialCap cap1  cap2 
[REPLACE]^SimpleDialFrame f2 = new SimpleDialFrame (  ) ;^122^^^^^90^144^[REPLACE] SimpleDialFrame f1 = new SimpleDialFrame (  ) ;^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  SimpleDialFrame f1  f2  [TYPE]  DialPlot p1  p2  [TYPE]  DialCap cap1  cap2 
[REPLACE]^f1 .SimpleDialFrame (  )  ;^123^124^^^^90^144^[REPLACE] f1.setBackgroundPaint ( new GradientPaint ( 1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.white )  ) ;^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  SimpleDialFrame f1  f2  [TYPE]  DialPlot p1  p2  [TYPE]  DialCap cap1  cap2 
[REPLACE]^p1 .DialPlot (  )  ;^125^^^^^90^144^[REPLACE] p1.setDialFrame ( f1 ) ;^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  SimpleDialFrame f1  f2  [TYPE]  DialPlot p1  p2  [TYPE]  DialCap cap1  cap2 
[REPLACE]^assertFalse ( p1.setCap ( p2 )  ) ;^126^^^^^90^144^[REPLACE] assertFalse ( p1.equals ( p2 )  ) ;^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  SimpleDialFrame f1  f2  [TYPE]  DialPlot p1  p2  [TYPE]  DialCap cap1  cap2 
[ADD]^^126^127^^^^90^144^[ADD] assertFalse ( p1.equals ( p2 )  ) ; SimpleDialFrame f2 = new SimpleDialFrame (  ) ;^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  SimpleDialFrame f1  f2  [TYPE]  DialPlot p1  p2  [TYPE]  DialCap cap1  cap2 
[REPLACE]^SimpleDialFrame f1 = new SimpleDialFrame (  ) ;^127^^^^^90^144^[REPLACE] SimpleDialFrame f2 = new SimpleDialFrame (  ) ;^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  SimpleDialFrame f1  f2  [TYPE]  DialPlot p1  p2  [TYPE]  DialCap cap1  cap2 
[REPLACE]^f2 .SimpleDialFrame (  )  ;^128^129^^^^90^144^[REPLACE] f2.setBackgroundPaint ( new GradientPaint ( 1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.white )  ) ;^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  SimpleDialFrame f1  f2  [TYPE]  DialPlot p1  p2  [TYPE]  DialCap cap1  cap2 
[REPLACE]^p2.setCap ( f2 ) ;^130^^^^^90^144^[REPLACE] p2.setDialFrame ( f2 ) ;^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  SimpleDialFrame f1  f2  [TYPE]  DialPlot p1  p2  [TYPE]  DialCap cap1  cap2 
[REPLACE]^assertFalse ( p1.equals ( p2 )  ) ;^131^^^^^90^144^[REPLACE] assertTrue ( p1.equals ( p2 )  ) ;^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  SimpleDialFrame f1  f2  [TYPE]  DialPlot p1  p2  [TYPE]  DialCap cap1  cap2 
[REPLACE]^assertTrue ( p1.setCap ( p2 )  ) ;^131^^^^^90^144^[REPLACE] assertTrue ( p1.equals ( p2 )  ) ;^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  SimpleDialFrame f1  f2  [TYPE]  DialPlot p1  p2  [TYPE]  DialCap cap1  cap2 
[REPLACE]^p1.setView ( 1.0d, 0.0, 0.8, 1.0 ) ;^134^^^^^90^144^[REPLACE] p1.setView ( 0.2, 0.0, 0.8, 1.0 ) ;^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  SimpleDialFrame f1  f2  [TYPE]  DialPlot p1  p2  [TYPE]  DialCap cap1  cap2 
[REPLACE]^assertTrue ( p1.equals ( p2 )  ) ;^135^^^^^90^144^[REPLACE] assertFalse ( p1.equals ( p2 )  ) ;^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  SimpleDialFrame f1  f2  [TYPE]  DialPlot p1  p2  [TYPE]  DialCap cap1  cap2 
[REPLACE]^assertFalse ( p1.setCap ( p2 )  ) ;^135^^^^^90^144^[REPLACE] assertFalse ( p1.equals ( p2 )  ) ;^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  SimpleDialFrame f1  f2  [TYPE]  DialPlot p1  p2  [TYPE]  DialCap cap1  cap2 
[REPLACE]^p2.setView ( 1.0d, 0.0, 0.8, 1.0 ) ;^136^^^^^90^144^[REPLACE] p2.setView ( 0.2, 0.0, 0.8, 1.0 ) ;^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  SimpleDialFrame f1  f2  [TYPE]  DialPlot p1  p2  [TYPE]  DialCap cap1  cap2 
[REPLACE]^assertFalse ( p1.equals ( p2 )  ) ;^137^^^^^90^144^[REPLACE] assertTrue ( p1.equals ( p2 )  ) ;^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  SimpleDialFrame f1  f2  [TYPE]  DialPlot p1  p2  [TYPE]  DialCap cap1  cap2 
[REPLACE]^assertTrue ( p1.setCap ( p2 )  ) ;^137^^^^^90^144^[REPLACE] assertTrue ( p1.equals ( p2 )  ) ;^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  SimpleDialFrame f1  f2  [TYPE]  DialPlot p1  p2  [TYPE]  DialCap cap1  cap2 
[REPLACE]^p1.setCap ( new StandardDialScale (  )  ) ;^140^^^^^90^144^[REPLACE] p1.addLayer ( new StandardDialScale (  )  ) ;^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  SimpleDialFrame f1  f2  [TYPE]  DialPlot p1  p2  [TYPE]  DialCap cap1  cap2 
[REPLACE]^assertTrue ( p1.equals ( p2 )  ) ;^141^^^^^90^144^[REPLACE] assertFalse ( p1.equals ( p2 )  ) ;^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  SimpleDialFrame f1  f2  [TYPE]  DialPlot p1  p2  [TYPE]  DialCap cap1  cap2 
[ADD]^p2.addLayer ( new StandardDialScale (  )  ) ;^141^142^^^^90^144^[ADD] assertFalse ( p1.equals ( p2 )  ) ; p2.addLayer ( new StandardDialScale (  )  ) ;^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  SimpleDialFrame f1  f2  [TYPE]  DialPlot p1  p2  [TYPE]  DialCap cap1  cap2 
[REPLACE]^assertFalse ( p1.setCap ( p2 )  ) ;^141^^^^^90^144^[REPLACE] assertFalse ( p1.equals ( p2 )  ) ;^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  SimpleDialFrame f1  f2  [TYPE]  DialPlot p1  p2  [TYPE]  DialCap cap1  cap2 
[REPLACE]^p2.setCap ( new StandardDialScale (  )  ) ;^142^^^^^90^144^[REPLACE] p2.addLayer ( new StandardDialScale (  )  ) ;^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  SimpleDialFrame f1  f2  [TYPE]  DialPlot p1  p2  [TYPE]  DialCap cap1  cap2 
[REMOVE]^assertTrue ( p1.equals ( p2 )  ) ;^142^^^^^90^144^[REMOVE] ^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  SimpleDialFrame f1  f2  [TYPE]  DialPlot p1  p2  [TYPE]  DialCap cap1  cap2 
[REPLACE]^assertFalse ( p1.equals ( p2 )  ) ;^143^^^^^90^144^[REPLACE] assertTrue ( p1.equals ( p2 )  ) ;^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  SimpleDialFrame f1  f2  [TYPE]  DialPlot p1  p2  [TYPE]  DialCap cap1  cap2 
[ADD]^^143^^^^^90^144^[ADD] assertTrue ( p1.equals ( p2 )  ) ;^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  SimpleDialFrame f1  f2  [TYPE]  DialPlot p1  p2  [TYPE]  DialCap cap1  cap2 
[REPLACE]^assertTrue ( p1.setCap ( p2 )  ) ;^143^^^^^90^144^[REPLACE] assertTrue ( p1.equals ( p2 )  ) ;^[METHOD] testEquals [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  SimpleDialFrame f1  f2  [TYPE]  DialPlot p1  p2  [TYPE]  DialCap cap1  cap2 
[REPLACE]^DialPlot p2 = new DialPlot (  ) ;^150^^^^^149^156^[REPLACE] DialPlot p1 = new DialPlot (  ) ;^[METHOD] testHashCode [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  DialPlot p1  p2  [TYPE]  int h1  h2 
[ADD]^^150^^^^^149^156^[ADD] DialPlot p1 = new DialPlot (  ) ;^[METHOD] testHashCode [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  DialPlot p1  p2  [TYPE]  int h1  h2 
[REPLACE]^DialPlot p1 = new DialPlot (  ) ;^151^^^^^149^156^[REPLACE] DialPlot p2 = new DialPlot (  ) ;^[METHOD] testHashCode [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  DialPlot p1  p2  [TYPE]  int h1  h2 
[REPLACE]^assertFalse ( p1.equals ( p2 )  ) ;^152^^^^^149^156^[REPLACE] assertTrue ( p1.equals ( p2 )  ) ;^[METHOD] testHashCode [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  DialPlot p1  p2  [TYPE]  int h1  h2 
[REPLACE]^assertTrue ( p1.setCap ( p2 )  ) ;^152^^^^^149^156^[REPLACE] assertTrue ( p1.equals ( p2 )  ) ;^[METHOD] testHashCode [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  DialPlot p1  p2  [TYPE]  int h1  h2 
[REPLACE]^int h1 = p2.hashCode (  ) ;^153^^^^^149^156^[REPLACE] int h1 = p1.hashCode (  ) ;^[METHOD] testHashCode [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  DialPlot p1  p2  [TYPE]  int h1  h2 
[REPLACE]^int h2 = p1.hashCode (  ) ;^154^^^^^149^156^[REPLACE] int h2 = p2.hashCode (  ) ;^[METHOD] testHashCode [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  DialPlot p1  p2  [TYPE]  int h1  h2 
[REPLACE]^assertEquals ( p1, p2 ) ;^155^^^^^149^156^[REPLACE] assertEquals ( h1, h2 ) ;^[METHOD] testHashCode [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  DialPlot p1  p2  [TYPE]  int h1  h2 
[REPLACE]^DialPlot p2 = new DialPlot (  ) ;^162^^^^^161^173^[REPLACE] DialPlot p1 = new DialPlot (  ) ;^[METHOD] testCloning [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  DialPlot p1  p2  [TYPE]  CloneNotSupportedException e 
[REPLACE]^DialPlot p2 = this;^163^^^^^161^173^[REPLACE] DialPlot p2 = null;^[METHOD] testCloning [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  DialPlot p1  p2  [TYPE]  CloneNotSupportedException e 
[ADD]^p2 =  ( DialPlot )  p1.clone (  ) ;^164^165^166^^^161^173^[ADD] try { p2 =  ( DialPlot )  p1.clone (  ) ; }^[METHOD] testCloning [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  DialPlot p1  p2  [TYPE]  CloneNotSupportedException e 
[REPLACE]^p2 =  ( DialPlot )  in.readObject (  ) ; ;^165^^^^^161^173^[REPLACE] p2 =  ( DialPlot )  p1.clone (  ) ;^[METHOD] testCloning [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  DialPlot p1  p2  [TYPE]  CloneNotSupportedException e 
[ADD]^^165^^^^^161^173^[ADD] p2 =  ( DialPlot )  p1.clone (  ) ;^[METHOD] testCloning [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  DialPlot p1  p2  [TYPE]  CloneNotSupportedException e 
[ADD]^^167^168^^^^161^173^[ADD] catch  ( CloneNotSupportedException e )  { e.printStackTrace (  ) ;^[METHOD] testCloning [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  DialPlot p1  p2  [TYPE]  CloneNotSupportedException e 
[REPLACE]^assertTrue ( p1  ==  p2 ) ;^170^^^^^161^173^[REPLACE] assertTrue ( p1 != p2 ) ;^[METHOD] testCloning [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  DialPlot p1  p2  [TYPE]  CloneNotSupportedException e 
[REPLACE]^assertTrue ( p1.setCap (  )   !=  p2.getClass (  )  ) ;^171^^^^^161^173^[REPLACE] assertTrue ( p1.getClass (  )  == p2.getClass (  )  ) ;^[METHOD] testCloning [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  DialPlot p1  p2  [TYPE]  CloneNotSupportedException e 
[REPLACE]^assertTrue ( p2.setCap (  )  == p2.getClass (  )  ) ;^171^^^^^161^173^[REPLACE] assertTrue ( p1.getClass (  )  == p2.getClass (  )  ) ;^[METHOD] testCloning [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  DialPlot p1  p2  [TYPE]  CloneNotSupportedException e 
[REPLACE]^assertTrue ( p1.getClass (  )  == p1.getClass (  )  ) ;^171^^^^^161^173^[REPLACE] assertTrue ( p1.getClass (  )  == p2.getClass (  )  ) ;^[METHOD] testCloning [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  DialPlot p1  p2  [TYPE]  CloneNotSupportedException e 
[REPLACE]^assertFalse ( p1.equals ( p2 )  ) ;^172^^^^^161^173^[REPLACE] assertTrue ( p1.equals ( p2 )  ) ;^[METHOD] testCloning [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  DialPlot p1  p2  [TYPE]  CloneNotSupportedException e 
[REPLACE]^assertTrue ( p1.setCap ( p2 )  ) ;^172^^^^^161^173^[REPLACE] assertTrue ( p1.equals ( p2 )  ) ;^[METHOD] testCloning [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  DialPlot p1  p2  [TYPE]  CloneNotSupportedException e 
[REPLACE]^DialPlot p2 = new DialPlot (  ) ;^180^^^^^179^198^[REPLACE] DialPlot p1 = new DialPlot (  ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  ObjectOutput out  [TYPE]  ByteArrayOutputStream buffer  [TYPE]  ObjectInput in  [TYPE]  DialPlot p1  p2  [TYPE]  Exception e 
[REPLACE]^DialPlot p2 = true;^181^^^^^179^198^[REPLACE] DialPlot p2 = null;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  ObjectOutput out  [TYPE]  ByteArrayOutputStream buffer  [TYPE]  ObjectInput in  [TYPE]  DialPlot p1  p2  [TYPE]  Exception e 
[ADD]^^181^^^^^179^198^[ADD] DialPlot p2 = null;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  ObjectOutput out  [TYPE]  ByteArrayOutputStream buffer  [TYPE]  ObjectInput in  [TYPE]  DialPlot p1  p2  [TYPE]  Exception e 
[ADD]^ByteArrayOutputStream buffer = new ByteArrayOutputStream (  ) ;ObjectOutput out = new ObjectOutputStream ( buffer ) ;out.writeObject ( p1 ) ;out.close (  ) ;^183^184^185^186^187^179^198^[ADD] try { ByteArrayOutputStream buffer = new ByteArrayOutputStream (  ) ; ObjectOutput out = new ObjectOutputStream ( buffer ) ; out.writeObject ( p1 ) ; out.close (  ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  ObjectOutput out  [TYPE]  ByteArrayOutputStream buffer  [TYPE]  ObjectInput in  [TYPE]  DialPlot p1  p2  [TYPE]  Exception e 
[REPLACE]^p2 =  ( DialPlot )  p1.clone (  ) ; ;^191^^^^^179^198^[REPLACE] p2 =  ( DialPlot )  in.readObject (  ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  ObjectOutput out  [TYPE]  ByteArrayOutputStream buffer  [TYPE]  ObjectInput in  [TYPE]  DialPlot p1  p2  [TYPE]  Exception e 
[REPLACE]^ObjectOutput out = new ObjectOutputStream ( buffer ) ;^184^^^^^179^198^[REPLACE] ByteArrayOutputStream buffer = new ByteArrayOutputStream (  ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  ObjectOutput out  [TYPE]  ByteArrayOutputStream buffer  [TYPE]  ObjectInput in  [TYPE]  DialPlot p1  p2  [TYPE]  Exception e 
[REPLACE]^DialPlot p2 = new DialPlot (  ) ;^185^^^^^179^198^[REPLACE] ObjectOutput out = new ObjectOutputStream ( buffer ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  ObjectOutput out  [TYPE]  ByteArrayOutputStream buffer  [TYPE]  ObjectInput in  [TYPE]  DialPlot p1  p2  [TYPE]  Exception e 
[ADD]^^185^186^^^^179^198^[ADD] ObjectOutput out = new ObjectOutputStream ( buffer ) ; out.writeObject ( p1 ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  ObjectOutput out  [TYPE]  ByteArrayOutputStream buffer  [TYPE]  ObjectInput in  [TYPE]  DialPlot p1  p2  [TYPE]  Exception e 
[REPLACE]^ObjectInput in = new ObjectInputStream ( new ByteArrayInputStream ( buffer.ByteArrayOutputStream (  )  )  ) ;^189^190^^^^179^198^[REPLACE] ObjectInput in = new ObjectInputStream ( new ByteArrayInputStream ( buffer.toByteArray (  )  )  ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  ObjectOutput out  [TYPE]  ByteArrayOutputStream buffer  [TYPE]  ObjectInput in  [TYPE]  DialPlot p1  p2  [TYPE]  Exception e 
[ADD]^^189^190^^^^179^198^[ADD] ObjectInput in = new ObjectInputStream ( new ByteArrayInputStream ( buffer.toByteArray (  )  )  ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  ObjectOutput out  [TYPE]  ByteArrayOutputStream buffer  [TYPE]  ObjectInput in  [TYPE]  DialPlot p1  p2  [TYPE]  Exception e 
[ADD]^^191^^^^^179^198^[ADD] p2 =  ( DialPlot )  in.readObject (  ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  ObjectOutput out  [TYPE]  ByteArrayOutputStream buffer  [TYPE]  ObjectInput in  [TYPE]  DialPlot p1  p2  [TYPE]  Exception e 
[REPLACE]^assertEquals ( h1, h2 ) ;^197^^^^^179^198^[REPLACE] assertEquals ( p1, p2 ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] DialPlotTests   [TYPE]  boolean false  true  [TYPE]  ObjectOutput out  [TYPE]  ByteArrayOutputStream buffer  [TYPE]  ObjectInput in  [TYPE]  DialPlot p1  p2  [TYPE]  Exception e 
