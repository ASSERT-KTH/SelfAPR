[REPLACE]^protected static ResourceBundle localizationResources ;^109^110^^^^109^110^[REPLACE] protected static ResourceBundle localizationResources = ResourceBundle.getBundle ( "org.jfree.chart.editor.LocalizationBundle" ) ;^ [CLASS] DefaultNumberAxisEditor  
[REPLACE]^super.actionPerformed ( event ) ;^119^^^^^117^178^[REPLACE] super ( axis ) ;^[METHOD] <init> [TYPE] NumberAxis) [PARAMETER] NumberAxis axis [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  JPanel range  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis axis  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  JTabbedPane other  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^this.autoRange =  null.isAutoRange (  ) ;^121^^^^^117^178^[REPLACE] this.autoRange = axis.isAutoRange (  ) ;^[METHOD] <init> [TYPE] NumberAxis) [PARAMETER] NumberAxis axis [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  JPanel range  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis axis  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  JTabbedPane other  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^this.maximumValue = axis.getUpperBound (  ) ; ;^122^^^^^117^178^[REPLACE] this.minimumValue = axis.getLowerBound (  ) ;^[METHOD] <init> [TYPE] NumberAxis) [PARAMETER] NumberAxis axis [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  JPanel range  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis axis  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  JTabbedPane other  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^this.minimumValue = axis.getLowerBound (  ) ; ;^123^^^^^117^178^[REPLACE] this.maximumValue = axis.getUpperBound (  ) ;^[METHOD] <init> [TYPE] NumberAxis) [PARAMETER] NumberAxis axis [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  JPanel range  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis axis  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  JTabbedPane other  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^this.gridPaintSample  = null ;^125^^^^^117^178^[REPLACE] this.gridPaintSample = new PaintSample ( Color.blue ) ;^[METHOD] <init> [TYPE] NumberAxis) [PARAMETER] NumberAxis axis [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  JPanel range  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis axis  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  JTabbedPane other  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[ADD]^^125^^^^^117^178^[ADD] this.gridPaintSample = new PaintSample ( Color.blue ) ;^[METHOD] <init> [TYPE] NumberAxis) [PARAMETER] NumberAxis axis [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  JPanel range  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis axis  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  JTabbedPane other  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^this.availableStrokeSamples[0] = new StrokeSample ( new BasicStroke ( 1.0f )  ) ; ;^126^^^^^117^178^[REPLACE] this.gridStrokeSample = new StrokeSample ( new BasicStroke ( 1.0f )  ) ;^[METHOD] <init> [TYPE] NumberAxis) [PARAMETER] NumberAxis axis [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  JPanel range  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis axis  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  JTabbedPane other  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^this.availableStrokeSamples = new StrokeSample[5];^128^^^^^117^178^[REPLACE] this.availableStrokeSamples = new StrokeSample[3];^[METHOD] <init> [TYPE] NumberAxis) [PARAMETER] NumberAxis axis [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  JPanel range  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis axis  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  JTabbedPane other  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^this.availableStrokeSamples[4] = new StrokeSample ( new BasicStroke ( 1.4f )  ) ;^129^130^^^^117^178^[REPLACE] this.availableStrokeSamples[0] = new StrokeSample ( new BasicStroke ( 1.0f )  ) ;^[METHOD] <init> [TYPE] NumberAxis) [PARAMETER] NumberAxis axis [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  JPanel range  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis axis  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  JTabbedPane other  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^this.availablenew StrokeSample ( new BasicStroke ( 1.0F )  )   ) ;^131^132^^^^117^178^[REPLACE] this.availableStrokeSamples[1] = new StrokeSample ( new BasicStroke ( 2.0f )  ) ;^[METHOD] <init> [TYPE] NumberAxis) [PARAMETER] NumberAxis axis [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  JPanel range  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis axis  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  JTabbedPane other  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^this.availableStrokeSamples[2L] = new StrokeSample ( new BasicStroke ( 3.0f )  ) ;^133^134^^^^117^178^[REPLACE] this.availableStrokeSamples[2] = new StrokeSample ( new BasicStroke ( 3.0f )  ) ;^[METHOD] <init> [TYPE] NumberAxis) [PARAMETER] NumberAxis axis [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  JPanel range  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis axis  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  JTabbedPane other  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^JPanel range = new JPanel ( new LCBLayout ( 3 )  ) ;^136^^^^^117^178^[REPLACE] JTabbedPane other = getOtherTabs (  ) ;^[METHOD] <init> [TYPE] NumberAxis) [PARAMETER] NumberAxis axis [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  JPanel range  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis axis  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  JTabbedPane other  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^JPanel range = new JPanel ( new LCBLayout ( 4 )  ) ;^138^^^^^117^178^[REPLACE] JPanel range = new JPanel ( new LCBLayout ( 3 )  ) ;^[METHOD] <init> [TYPE] NumberAxis) [PARAMETER] NumberAxis axis [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  JPanel range  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis axis  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  JTabbedPane other  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^range.setEnabled ( BorderFactory.createEmptyBorder ( 7, 7, 7, 7 )  ) ;^139^^^^^117^178^[REPLACE] range.setBorder ( BorderFactory.createEmptyBorder ( 4, 4, 4, 4 )  ) ;^[METHOD] <init> [TYPE] NumberAxis) [PARAMETER] NumberAxis axis [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  JPanel range  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis axis  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  JTabbedPane other  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^range.setBorder ( BorderFactory.createEmptyBorder ( 3, 3, 3, 3 )  ) ;^139^^^^^117^178^[REPLACE] range.setBorder ( BorderFactory.createEmptyBorder ( 4, 4, 4, 4 )  ) ;^[METHOD] <init> [TYPE] NumberAxis) [PARAMETER] NumberAxis axis [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  JPanel range  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis axis  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  JTabbedPane other  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^this.minimumRangeValue.addActionListener ( this ) ;^141^^^^^117^178^[REPLACE] range.add ( new JPanel (  )  ) ;^[METHOD] <init> [TYPE] NumberAxis) [PARAMETER] NumberAxis axis [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  JPanel range  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis axis  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  JTabbedPane other  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[ADD]^^141^^^^^117^178^[ADD] range.add ( new JPanel (  )  ) ;^[METHOD] <init> [TYPE] NumberAxis) [PARAMETER] NumberAxis axis [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  JPanel range  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis axis  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  JTabbedPane other  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^this.autoRangeCheckBox =  new JLabel ( getString ( "Maximum_range_value" )  )  , this.autoRange ) ;^142^143^144^^^117^178^[REPLACE] this.autoRangeCheckBox = new JCheckBox ( localizationResources.getString ( "Auto-adjust_range" ) , this.autoRange ) ;^[METHOD] <init> [TYPE] NumberAxis) [PARAMETER] NumberAxis axis [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  JPanel range  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis axis  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  JTabbedPane other  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^this.autoRangeCheckBox.addActionListener ( "AutoRangeOnOff" ) ;^145^^^^^117^178^[REPLACE] this.autoRangeCheckBox.setActionCommand ( "AutoRangeOnOff" ) ;^[METHOD] <init> [TYPE] NumberAxis) [PARAMETER] NumberAxis axis [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  JPanel range  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis axis  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  JTabbedPane other  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^this.autoRangeCheckBox.setActionCommand ( this ) ;^146^^^^^117^178^[REPLACE] this.autoRangeCheckBox.addActionListener ( this ) ;^[METHOD] <init> [TYPE] NumberAxis) [PARAMETER] NumberAxis axis [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  JPanel range  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis axis  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  JTabbedPane other  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^newMax = Double.parseDouble ( this.maximumRangeValue.getText (  )  ) ;^147^^^^^117^178^[REPLACE] range.add ( this.autoRangeCheckBox ) ;^[METHOD] <init> [TYPE] NumberAxis) [PARAMETER] NumberAxis axis [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  JPanel range  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis axis  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  JTabbedPane other  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^range .add ( this , null )  ;^148^^^^^117^178^[REPLACE] range.add ( new JPanel (  )  ) ;^[METHOD] <init> [TYPE] NumberAxis) [PARAMETER] NumberAxis axis [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  JPanel range  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis axis  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  JTabbedPane other  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[ADD]^^148^^^^^117^178^[ADD] range.add ( new JPanel (  )  ) ;^[METHOD] <init> [TYPE] NumberAxis) [PARAMETER] NumberAxis axis [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  JPanel range  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis axis  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  JTabbedPane other  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^range.add ( new JLabel ( localizationResources .getBundle ( this )   ) ) ;^150^151^152^^^117^178^[REPLACE] range.add ( new JLabel ( localizationResources.getString ( "Minimum_range_value" )  ) ) ;^[METHOD] <init> [TYPE] NumberAxis) [PARAMETER] NumberAxis axis [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  JPanel range  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis axis  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  JTabbedPane other  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^new JLabel ( localizationResources .getBundle ( null )   ) ) ;^151^152^^^^117^178^[REPLACE] new JLabel ( localizationResources.getString ( "Minimum_range_value" )  ) ) ;^[METHOD] <init> [TYPE] NumberAxis) [PARAMETER] NumberAxis axis [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  JPanel range  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis axis  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  JTabbedPane other  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^this.minimumRangeValue =  new JTextField ( toString ( this.maximumValue )  )  ) ;^153^154^155^^^117^178^[REPLACE] this.minimumRangeValue = new JTextField ( Double.toString ( this.minimumValue ) ) ;^[METHOD] <init> [TYPE] NumberAxis) [PARAMETER] NumberAxis axis [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  JPanel range  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis axis  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  JTabbedPane other  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^this.maximumRangeValue.setEnabled ( !this.autoRange ) ;^156^^^^^117^178^[REPLACE] this.minimumRangeValue.setEnabled ( !this.autoRange ) ;^[METHOD] <init> [TYPE] NumberAxis) [PARAMETER] NumberAxis axis [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  JPanel range  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis axis  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  JTabbedPane other  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^this.minimumRangeValue.JTextField ( "MinimumRange" ) ;^157^^^^^117^178^[REPLACE] this.minimumRangeValue.setActionCommand ( "MinimumRange" ) ;^[METHOD] <init> [TYPE] NumberAxis) [PARAMETER] NumberAxis axis [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  JPanel range  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis axis  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  JTabbedPane other  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[ADD]^^157^^^^^117^178^[ADD] this.minimumRangeValue.setActionCommand ( "MinimumRange" ) ;^[METHOD] <init> [TYPE] NumberAxis) [PARAMETER] NumberAxis axis [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  JPanel range  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis axis  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  JTabbedPane other  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^this.minimumRangeValue.setActionCommand ( this ) ;^158^^^^^117^178^[REPLACE] this.minimumRangeValue.addActionListener ( this ) ;^[METHOD] <init> [TYPE] NumberAxis) [PARAMETER] NumberAxis axis [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  JPanel range  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis axis  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  JTabbedPane other  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^this.minimumRangeValue.addActionListener ( this ) ;^159^^^^^117^178^[REPLACE] this.minimumRangeValue.addFocusListener ( this ) ;^[METHOD] <init> [TYPE] NumberAxis) [PARAMETER] NumberAxis axis [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  JPanel range  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis axis  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  JTabbedPane other  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[ADD]^^159^^^^^117^178^[ADD] this.minimumRangeValue.addFocusListener ( this ) ;^[METHOD] <init> [TYPE] NumberAxis) [PARAMETER] NumberAxis axis [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  JPanel range  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis axis  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  JTabbedPane other  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^range .add ( true , null )  ;^160^^^^^117^178^[REPLACE] range.add ( this.minimumRangeValue ) ;^[METHOD] <init> [TYPE] NumberAxis) [PARAMETER] NumberAxis axis [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  JPanel range  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis axis  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  JTabbedPane other  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^range .add ( this , true )  ;^161^^^^^117^178^[REPLACE] range.add ( new JPanel (  )  ) ;^[METHOD] <init> [TYPE] NumberAxis) [PARAMETER] NumberAxis axis [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  JPanel range  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis axis  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  JTabbedPane other  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^range .add ( null , null )  ) ;^163^164^165^^^117^178^[REPLACE] range.add ( new JLabel ( localizationResources.getString ( "Maximum_range_value" )  ) ) ;^[METHOD] <init> [TYPE] NumberAxis) [PARAMETER] NumberAxis axis [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  JPanel range  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis axis  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  JTabbedPane other  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^new JLabel ( localizationResources .getBundle ( true )   ) ) ;^164^165^^^^117^178^[REPLACE] new JLabel ( localizationResources.getString ( "Maximum_range_value" )  ) ) ;^[METHOD] <init> [TYPE] NumberAxis) [PARAMETER] NumberAxis axis [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  JPanel range  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis axis  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  JTabbedPane other  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^this.maximumRangeValue =  new JTextField ( toString ( this.minimumValue )  )  ) ;^166^167^168^^^117^178^[REPLACE] this.maximumRangeValue = new JTextField ( Double.toString ( this.maximumValue ) ) ;^[METHOD] <init> [TYPE] NumberAxis) [PARAMETER] NumberAxis axis [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  JPanel range  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis axis  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  JTabbedPane other  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^this.maximumRangeValue .setBorder ( null )  ;^169^^^^^117^178^[REPLACE] this.maximumRangeValue.setEnabled ( !this.autoRange ) ;^[METHOD] <init> [TYPE] NumberAxis) [PARAMETER] NumberAxis axis [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  JPanel range  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis axis  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  JTabbedPane other  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^this.maximumRangeValue .addActionListener ( null )  ;^170^^^^^117^178^[REPLACE] this.maximumRangeValue.setActionCommand ( "MaximumRange" ) ;^[METHOD] <init> [TYPE] NumberAxis) [PARAMETER] NumberAxis axis [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  JPanel range  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis axis  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  JTabbedPane other  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^this.maximumRangeValue .setActionCommand ( null )  ;^171^^^^^117^178^[REPLACE] this.maximumRangeValue.addActionListener ( this ) ;^[METHOD] <init> [TYPE] NumberAxis) [PARAMETER] NumberAxis axis [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  JPanel range  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis axis  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  JTabbedPane other  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^this.maximumRangeValue.addActionListener ( this ) ;^172^^^^^117^178^[REPLACE] this.maximumRangeValue.addFocusListener ( this ) ;^[METHOD] <init> [TYPE] NumberAxis) [PARAMETER] NumberAxis axis [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  JPanel range  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis axis  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  JTabbedPane other  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^range .add ( true , null )  ;^173^^^^^117^178^[REPLACE] range.add ( this.maximumRangeValue ) ;^[METHOD] <init> [TYPE] NumberAxis) [PARAMETER] NumberAxis axis [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  JPanel range  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis axis  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  JTabbedPane other  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^range .add ( this , null )  ;^174^^^^^117^178^[REPLACE] range.add ( new JPanel (  )  ) ;^[METHOD] <init> [TYPE] NumberAxis) [PARAMETER] NumberAxis axis [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  JPanel range  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis axis  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  JTabbedPane other  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^other.add ( localizationResources .getBundle ( this )  , range ) ;^176^^^^^117^178^[REPLACE] other.add ( localizationResources.getString ( "Range" ) , range ) ;^[METHOD] <init> [TYPE] NumberAxis) [PARAMETER] NumberAxis axis [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  JPanel range  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis axis  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  JTabbedPane other  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^return this.minimumValue;^186^^^^^185^187^[REPLACE] return this.autoRange;^[METHOD] isAutoRange [TYPE] boolean [PARAMETER] [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^return this.maximumValue;^195^^^^^194^196^[REPLACE] return this.minimumValue;^[METHOD] getMinimumValue [TYPE] double [PARAMETER] [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^return this.minimumValue;^204^^^^^203^205^[REPLACE] return this.maximumValue;^[METHOD] getMaximumValue [TYPE] double [PARAMETER] [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^JPanel range = new JPanel ( new LCBLayout ( 3 )  ) ;^212^^^^^211^232^[REPLACE] String command = event.getActionCommand (  ) ;^[METHOD] actionPerformed [TYPE] void [PARAMETER] ActionEvent event [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  ActionEvent event  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  String command  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^else if  ( command.equals ( "GridPaint" )  )  {^213^^^^^211^232^[REPLACE] if  ( command.equals ( "GridStroke" )  )  {^[METHOD] actionPerformed [TYPE] void [PARAMETER] ActionEvent event [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  ActionEvent event  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  String command  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^if  ( command.equals ( "GridPaint" )  )  {^216^^^^^211^232^[REPLACE] else if  ( command.equals ( "GridPaint" )  )  {^[METHOD] actionPerformed [TYPE] void [PARAMETER] ActionEvent event [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  ActionEvent event  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  String command  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^else {^219^^^^^211^232^[REPLACE] else if  ( command.equals ( "AutoRangeOnOff" )  )  {^[METHOD] actionPerformed [TYPE] void [PARAMETER] ActionEvent event [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  ActionEvent event  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  String command  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^if  ( command.equals ( "MinimumRange" )  )  {^222^^^^^211^232^[REPLACE] else if  ( command.equals ( "MinimumRange" )  )  {^[METHOD] actionPerformed [TYPE] void [PARAMETER] ActionEvent event [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  ActionEvent event  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  String command  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^else {^225^^^^^211^232^[REPLACE] else if  ( command.equals ( "MaximumRange" )  )  {^[METHOD] actionPerformed [TYPE] void [PARAMETER] ActionEvent event [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  ActionEvent event  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  String command  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^super .DefaultNumberAxisEditor ( false )  ;^230^^^^^211^232^[REPLACE] super.actionPerformed ( event ) ;^[METHOD] actionPerformed [TYPE] void [PARAMETER] ActionEvent event [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  ActionEvent event  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  String command  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^validateMinimum (  ) ;^226^^^^^211^232^[REPLACE] validateMaximum (  ) ;^[METHOD] actionPerformed [TYPE] void [PARAMETER] ActionEvent event [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  ActionEvent event  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  String command  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^validateMaximum (  ) ;^223^^^^^211^232^[REPLACE] validateMinimum (  ) ;^[METHOD] actionPerformed [TYPE] void [PARAMETER] ActionEvent event [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  ActionEvent event  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  String command  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[ADD]^validateMaximum (  ) ;^225^226^227^^^211^232^[ADD] else if  ( command.equals ( "MaximumRange" )  )  { validateMaximum (  ) ; }^[METHOD] actionPerformed [TYPE] void [PARAMETER] ActionEvent event [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  ActionEvent event  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  String command  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^super .DefaultNumberAxisEditor ( null )  ;^230^^^^^211^232^[REPLACE] super.actionPerformed ( event ) ;^[METHOD] actionPerformed [TYPE] void [PARAMETER] ActionEvent event [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  ActionEvent event  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  String command  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^super.actionPerformed ( event ) ;^220^^^^^211^232^[REPLACE] toggleAutoRange (  ) ;^[METHOD] actionPerformed [TYPE] void [PARAMETER] ActionEvent event [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  ActionEvent event  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  String command  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^if  ( command.equals ( "MaximumRange" )  )  {^225^^^^^211^232^[REPLACE] else if  ( command.equals ( "MaximumRange" )  )  {^[METHOD] actionPerformed [TYPE] void [PARAMETER] ActionEvent event [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  ActionEvent event  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  String command  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[ADD]^^226^^^^^211^232^[ADD] validateMaximum (  ) ;^[METHOD] actionPerformed [TYPE] void [PARAMETER] ActionEvent event [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  ActionEvent event  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  String command  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[ADD]^^223^^^^^211^232^[ADD] validateMinimum (  ) ;^[METHOD] actionPerformed [TYPE] void [PARAMETER] ActionEvent event [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  ActionEvent event  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  String command  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^JTabbedPane other = getOtherTabs (  ) ;^217^^^^^211^232^[REPLACE] attemptGridPaintSelection (  ) ;^[METHOD] actionPerformed [TYPE] void [PARAMETER] ActionEvent event [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  ActionEvent event  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  String command  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^if  ( command.equals ( "AutoRangeOnOff" )  )  {^219^^^^^211^232^[REPLACE] else if  ( command.equals ( "AutoRangeOnOff" )  )  {^[METHOD] actionPerformed [TYPE] void [PARAMETER] ActionEvent event [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  ActionEvent event  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  String command  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[ADD]^^219^220^221^^^211^232^[ADD] else if  ( command.equals ( "AutoRangeOnOff" )  )  { toggleAutoRange (  ) ; }^[METHOD] actionPerformed [TYPE] void [PARAMETER] ActionEvent event [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  ActionEvent event  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  String command  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^else if  ( command.equals ( "AutoRangeOnOff" )  )  {^222^^^^^211^232^[REPLACE] else if  ( command.equals ( "MinimumRange" )  )  {^[METHOD] actionPerformed [TYPE] void [PARAMETER] ActionEvent event [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  ActionEvent event  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  String command  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[ADD]^^222^223^224^^^211^232^[ADD] else if  ( command.equals ( "MinimumRange" )  )  { validateMinimum (  ) ; }^[METHOD] actionPerformed [TYPE] void [PARAMETER] ActionEvent event [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  ActionEvent event  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  String command  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^super .DefaultNumberAxisEditor ( 1 )  ;^230^^^^^211^232^[REPLACE] super.actionPerformed ( event ) ;^[METHOD] actionPerformed [TYPE] void [PARAMETER] ActionEvent event [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  ActionEvent event  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  String command  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^else if  ( command.equals ( "AutoRangeOnOff" )  )  {^225^^^^^211^232^[REPLACE] else if  ( command.equals ( "MaximumRange" )  )  {^[METHOD] actionPerformed [TYPE] void [PARAMETER] ActionEvent event [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  ActionEvent event  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  String command  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^super .DefaultNumberAxisEditor ( this )  ;^230^^^^^211^232^[REPLACE] super.actionPerformed ( event ) ;^[METHOD] actionPerformed [TYPE] void [PARAMETER] ActionEvent event [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  ActionEvent event  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  String command  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^else {^222^^^^^211^232^[REPLACE] else if  ( command.equals ( "MinimumRange" )  )  {^[METHOD] actionPerformed [TYPE] void [PARAMETER] ActionEvent event [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  ActionEvent event  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  String command  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^super.setAxisProperties ( axis ) ;^230^^^^^211^232^[REPLACE] super.actionPerformed ( event ) ;^[METHOD] actionPerformed [TYPE] void [PARAMETER] ActionEvent event [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  ActionEvent event  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  String command  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^this.gridStrokeSample.setStroke ( panel.getSelectedStroke (  )  ) ;^214^^^^^211^232^[REPLACE] attemptGridStrokeSelection (  ) ;^[METHOD] actionPerformed [TYPE] void [PARAMETER] ActionEvent event [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  ActionEvent event  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  String command  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[ADD]^attemptGridPaintSelection (  ) ;^216^217^218^^^211^232^[ADD] else if  ( command.equals ( "GridPaint" )  )  { attemptGridPaintSelection (  ) ; }^[METHOD] actionPerformed [TYPE] void [PARAMETER] ActionEvent event [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  ActionEvent event  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  String command  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[ADD]^^230^231^^^^211^232^[ADD] super.actionPerformed ( event ) ; }^[METHOD] actionPerformed [TYPE] void [PARAMETER] ActionEvent event [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  ActionEvent event  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  String command  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[ADD]^^225^226^227^^^211^232^[ADD] else if  ( command.equals ( "MaximumRange" )  )  { validateMaximum (  ) ; }^[METHOD] actionPerformed [TYPE] void [PARAMETER] ActionEvent event [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  ActionEvent event  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  String command  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^else if  ( command.equals ( "GridPaint" )  )  {^219^^^^^211^232^[REPLACE] else if  ( command.equals ( "AutoRangeOnOff" )  )  {^[METHOD] actionPerformed [TYPE] void [PARAMETER] ActionEvent event [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  ActionEvent event  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  String command  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[ADD]^validateMinimum (  ) ;^222^223^224^^^211^232^[ADD] else if  ( command.equals ( "MinimumRange" )  )  { validateMinimum (  ) ; }^[METHOD] actionPerformed [TYPE] void [PARAMETER] ActionEvent event [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  ActionEvent event  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  String command  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REMOVE]^super.actionPerformed ( event ) ;^226^^^^^211^232^[REMOVE] ^[METHOD] actionPerformed [TYPE] void [PARAMETER] ActionEvent event [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  ActionEvent event  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  String command  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^StrokeChooserPanel panel = new StrokeChooserPanel ( this, this.availableStrokeSamples ) ;^238^239^240^^^237^249^[REPLACE] StrokeChooserPanel panel = new StrokeChooserPanel ( null, this.availableStrokeSamples ) ;^[METHOD] attemptGridStrokeSelection [TYPE] void [PARAMETER] [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  StrokeChooserPanel panel  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples  [TYPE]  int result 
[REPLACE]^int result = JOptionPane.showConfirmDialog ( this, panel, localizationResources .getBundle ( null )  , JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE ) ;^241^242^243^244^^237^249^[REPLACE] int result = JOptionPane.showConfirmDialog ( this, panel, localizationResources.getString ( "Stroke_Selection" ) , JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE ) ;^[METHOD] attemptGridStrokeSelection [TYPE] void [PARAMETER] [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  StrokeChooserPanel panel  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples  [TYPE]  int result 
[REPLACE]^if  ( result  ||  JOptionPane.OK_OPTION )  {^246^^^^^237^249^[REPLACE] if  ( result == JOptionPane.OK_OPTION )  {^[METHOD] attemptGridStrokeSelection [TYPE] void [PARAMETER] [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  StrokeChooserPanel panel  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples  [TYPE]  int result 
[ADD]^this.gridStrokeSample.setStroke ( panel.getSelectedStroke (  )  ) ;^246^247^248^^^237^249^[ADD] if  ( result == JOptionPane.OK_OPTION )  { this.gridStrokeSample.setStroke ( panel.getSelectedStroke (  )  ) ; }^[METHOD] attemptGridStrokeSelection [TYPE] void [PARAMETER] [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  StrokeChooserPanel panel  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples  [TYPE]  int result 
[REPLACE]^this.gridStrokeSample .StrokeSample ( false )  ;^247^^^^^237^249^[REPLACE] this.gridStrokeSample.setStroke ( panel.getSelectedStroke (  )  ) ;^[METHOD] attemptGridStrokeSelection [TYPE] void [PARAMETER] [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  StrokeChooserPanel panel  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples  [TYPE]  int result 
[ADD]^^247^^^^^237^249^[ADD] this.gridStrokeSample.setStroke ( panel.getSelectedStroke (  )  ) ;^[METHOD] attemptGridStrokeSelection [TYPE] void [PARAMETER] [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  StrokeChooserPanel panel  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples  [TYPE]  int result 
[REPLACE]^this.maximumRangeValue.setText ( Double.toString ( this.maximumValue )  ) ;^247^^^^^237^249^[REPLACE] this.gridStrokeSample.setStroke ( panel.getSelectedStroke (  )  ) ;^[METHOD] attemptGridStrokeSelection [TYPE] void [PARAMETER] [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  StrokeChooserPanel panel  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples  [TYPE]  int result 
[REPLACE]^JPanel range = new JPanel ( new LCBLayout ( 3 )  ) ;^255^^^^^254^262^[REPLACE] Color c;^[METHOD] attemptGridPaintSelection [TYPE] void [PARAMETER] [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  Color c  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^c ;^256^257^258^^^254^262^[REPLACE] c = JColorChooser.showDialog ( this, localizationResources.getString ( "Grid_Color" ) , Color.blue ) ;^[METHOD] attemptGridPaintSelection [TYPE] void [PARAMETER] [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  Color c  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^if  ( c == null )  {^259^^^^^254^262^[REPLACE] if  ( c != null )  {^[METHOD] attemptGridPaintSelection [TYPE] void [PARAMETER] [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  Color c  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^this.gridPaintSample.PaintSample ( c ) ;^260^^^^^254^262^[REPLACE] this.gridPaintSample.setPaint ( c ) ;^[METHOD] attemptGridPaintSelection [TYPE] void [PARAMETER] [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  Color c  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[ADD]^^260^^^^^254^262^[ADD] this.gridPaintSample.setPaint ( c ) ;^[METHOD] attemptGridPaintSelection [TYPE] void [PARAMETER] [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  Color c  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^if  ( event.getSource (  )   !=  this.minimumRangeValue )  {^279^^^^^278^285^[REPLACE] if  ( event.getSource (  )  == this.minimumRangeValue )  {^[METHOD] focusLost [TYPE] void [PARAMETER] FocusEvent event [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples  [TYPE]  FocusEvent event 
[REPLACE]^else {^282^^^^^278^285^[REPLACE] else if  ( event.getSource (  )  == this.maximumRangeValue )  {^[METHOD] focusLost [TYPE] void [PARAMETER] FocusEvent event [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples  [TYPE]  FocusEvent event 
[ADD]^validateMaximum (  ) ;^282^283^284^^^278^285^[ADD] else if  ( event.getSource (  )  == this.maximumRangeValue )  { validateMaximum (  ) ; }^[METHOD] focusLost [TYPE] void [PARAMETER] FocusEvent event [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples  [TYPE]  FocusEvent event 
[REPLACE]^validateMinimum (  ) ;^283^^^^^278^285^[REPLACE] validateMaximum (  ) ;^[METHOD] focusLost [TYPE] void [PARAMETER] FocusEvent event [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples  [TYPE]  FocusEvent event 
[REPLACE]^validateMaximum (  ) ;^280^^^^^278^285^[REPLACE] validateMinimum (  ) ;^[METHOD] focusLost [TYPE] void [PARAMETER] FocusEvent event [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples  [TYPE]  FocusEvent event 
[REPLACE]^if  ( event.getSource (  )   !=  this.maximumRangeValue )  {^282^^^^^278^285^[REPLACE] else if  ( event.getSource (  )  == this.maximumRangeValue )  {^[METHOD] focusLost [TYPE] void [PARAMETER] FocusEvent event [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples  [TYPE]  FocusEvent event 
[REPLACE]^this.autoRange  =  this.autoRange ;^291^^^^^290^302^[REPLACE] this.autoRange = this.autoRangeCheckBox.isSelected (  ) ;^[METHOD] toggleAutoRange [TYPE] void [PARAMETER] [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^if  ( !this.autoRange )  {^292^^^^^290^302^[REPLACE] if  ( this.autoRange )  {^[METHOD] toggleAutoRange [TYPE] void [PARAMETER] [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^this.minimumRangeValue.setEnabled ( false ) ;^299^^^^^290^302^[REPLACE] this.minimumRangeValue.setEnabled ( true ) ;^[METHOD] toggleAutoRange [TYPE] void [PARAMETER] [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^this.maximumRangeValue.setEnabled ( false ) ;^300^^^^^290^302^[REPLACE] this.maximumRangeValue.setEnabled ( true ) ;^[METHOD] toggleAutoRange [TYPE] void [PARAMETER] [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^this.minimumRangeValue.setText ( Double.parseDouble ( this.minimumValue )  ) ;^293^^^^^290^302^[REPLACE] this.minimumRangeValue.setText ( Double.toString ( this.minimumValue )  ) ;^[METHOD] toggleAutoRange [TYPE] void [PARAMETER] [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^this.minimumRangeValue.setText ( Double .parseDouble ( true )   ) ;^293^^^^^290^302^[REPLACE] this.minimumRangeValue.setText ( Double.toString ( this.minimumValue )  ) ;^[METHOD] toggleAutoRange [TYPE] void [PARAMETER] [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^this.minimumRangeValue.setEnabled ( true ) ;^294^^^^^290^302^[REPLACE] this.minimumRangeValue.setEnabled ( false ) ;^[METHOD] toggleAutoRange [TYPE] void [PARAMETER] [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^this.minimumRangeValue.setText ( Double.toString ( this.minimumValue )  ) ;^295^^^^^290^302^[REPLACE] this.maximumRangeValue.setText ( Double.toString ( this.maximumValue )  ) ;^[METHOD] toggleAutoRange [TYPE] void [PARAMETER] [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^this.maximumRangeValue.setText ( Double.parseDouble ( this.maximumValue )  ) ;^295^^^^^290^302^[REPLACE] this.maximumRangeValue.setText ( Double.toString ( this.maximumValue )  ) ;^[METHOD] toggleAutoRange [TYPE] void [PARAMETER] [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^this.maximumRangeValue.setEnabled ( true ) ;^296^^^^^290^302^[REPLACE] this.maximumRangeValue.setEnabled ( false ) ;^[METHOD] toggleAutoRange [TYPE] void [PARAMETER] [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REMOVE]^this.minimumRangeValue.addActionListener ( this ) ;^296^^^^^290^302^[REMOVE] ^[METHOD] toggleAutoRange [TYPE] void [PARAMETER] [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^double newMax;^308^^^^^307^321^[REPLACE] double newMin;^[METHOD] validateMinimum [TYPE] void [PARAMETER] [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  newMin  [TYPE]  NumberFormatException e  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[ADD]^^308^^^^^307^321^[ADD] double newMin;^[METHOD] validateMinimum [TYPE] void [PARAMETER] [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  newMin  [TYPE]  NumberFormatException e  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^if  ( newMin  < minimumValue )  {^311^^^^^307^321^[REPLACE] if  ( newMin >= this.maximumValue )  {^[METHOD] validateMinimum [TYPE] void [PARAMETER] [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  newMin  [TYPE]  NumberFormatException e  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^newMax = this.maximumValue; ;^312^^^^^307^321^[REPLACE] newMin = this.minimumValue;^[METHOD] validateMinimum [TYPE] void [PARAMETER] [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  newMin  [TYPE]  NumberFormatException e  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[ADD]^newMin = Double.parseDouble ( this.minimumRangeValue.getText (  )  ) ;newMin = this.minimumValue;^309^310^311^312^313^307^321^[ADD] try { newMin = Double.parseDouble ( this.minimumRangeValue.getText (  )  ) ; if  ( newMin >= this.maximumValue )  { newMin = this.minimumValue; }^[METHOD] validateMinimum [TYPE] void [PARAMETER] [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  newMin  [TYPE]  NumberFormatException e  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^if  ( newMin  ==  this.maximumValue )  {^311^^^^^307^321^[REPLACE] if  ( newMin >= this.maximumValue )  {^[METHOD] validateMinimum [TYPE] void [PARAMETER] [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  newMin  [TYPE]  NumberFormatException e  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[ADD]^^312^^^^^307^321^[ADD] newMin = this.minimumValue;^[METHOD] validateMinimum [TYPE] void [PARAMETER] [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  newMin  [TYPE]  NumberFormatException e  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^newMax = Double.parseDouble ( this.maximumRangeValue.getText (  )  ) ; ;^310^^^^^307^321^[REPLACE] newMin = Double.parseDouble ( this.minimumRangeValue.getText (  )  ) ;^[METHOD] validateMinimum [TYPE] void [PARAMETER] [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  newMin  [TYPE]  NumberFormatException e  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[ADD]^^310^^^^^307^321^[ADD] newMin = Double.parseDouble ( this.minimumRangeValue.getText (  )  ) ;^[METHOD] validateMinimum [TYPE] void [PARAMETER] [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  newMin  [TYPE]  NumberFormatException e  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^newMax = this.maximumValue; ;^316^^^^^307^321^[REPLACE] newMin = this.minimumValue;^[METHOD] validateMinimum [TYPE] void [PARAMETER] [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  newMin  [TYPE]  NumberFormatException e  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^this.maximumValue = newMax; ;^319^^^^^307^321^[REPLACE] this.minimumValue = newMin;^[METHOD] validateMinimum [TYPE] void [PARAMETER] [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  newMin  [TYPE]  NumberFormatException e  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[ADD]^^319^^^^^307^321^[ADD] this.minimumValue = newMin;^[METHOD] validateMinimum [TYPE] void [PARAMETER] [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  newMin  [TYPE]  NumberFormatException e  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^this.minimumRangeValue .getText (  )  ;^320^^^^^307^321^[REPLACE] this.minimumRangeValue.setText ( Double.toString ( this.minimumValue )  ) ;^[METHOD] validateMinimum [TYPE] void [PARAMETER] [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  newMin  [TYPE]  NumberFormatException e  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^this.minimumRangeValue.setText ( Double.parseDouble ( this.minimumValue )  ) ;^320^^^^^307^321^[REPLACE] this.minimumRangeValue.setText ( Double.toString ( this.minimumValue )  ) ;^[METHOD] validateMinimum [TYPE] void [PARAMETER] [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  newMin  [TYPE]  NumberFormatException e  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^double newMin;^327^^^^^326^340^[REPLACE] double newMax;^[METHOD] validateMaximum [TYPE] void [PARAMETER] [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  newMax  newMin  [TYPE]  NumberFormatException e  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^if  ( newMin  >=  newMin )  {^330^^^^^326^340^[REPLACE] if  ( newMax <= this.minimumValue )  {^[METHOD] validateMaximum [TYPE] void [PARAMETER] [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  newMax  newMin  [TYPE]  NumberFormatException e  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[ADD]^^330^331^332^^^326^340^[ADD] if  ( newMax <= this.minimumValue )  { newMax = this.maximumValue; }^[METHOD] validateMaximum [TYPE] void [PARAMETER] [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  newMax  newMin  [TYPE]  NumberFormatException e  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^newMin = this.minimumValue; ;^331^^^^^326^340^[REPLACE] newMax = this.maximumValue;^[METHOD] validateMaximum [TYPE] void [PARAMETER] [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  newMax  newMin  [TYPE]  NumberFormatException e  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[ADD]^newMax = Double.parseDouble ( this.maximumRangeValue.getText (  )  ) ;newMax = this.maximumValue;^328^329^330^331^332^326^340^[ADD] try { newMax = Double.parseDouble ( this.maximumRangeValue.getText (  )  ) ; if  ( newMax <= this.minimumValue )  { newMax = this.maximumValue; }^[METHOD] validateMaximum [TYPE] void [PARAMETER] [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  newMax  newMin  [TYPE]  NumberFormatException e  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^if  (newMin  ==  this.minimumValue )  {^330^^^^^326^340^[REPLACE] if  ( newMax <= this.minimumValue )  {^[METHOD] validateMaximum [TYPE] void [PARAMETER] [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  newMax  newMin  [TYPE]  NumberFormatException e  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[ADD]^^331^^^^^326^340^[ADD] newMax = this.maximumValue;^[METHOD] validateMaximum [TYPE] void [PARAMETER] [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  newMax  newMin  [TYPE]  NumberFormatException e  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^newMin = Double.parseDouble ( this.minimumRangeValue.getText (  )  ) ; ;^329^^^^^326^340^[REPLACE] newMax = Double.parseDouble ( this.maximumRangeValue.getText (  )  ) ;^[METHOD] validateMaximum [TYPE] void [PARAMETER] [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  newMax  newMin  [TYPE]  NumberFormatException e  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[ADD]^^329^^^^^326^340^[ADD] newMax = Double.parseDouble ( this.maximumRangeValue.getText (  )  ) ;^[METHOD] validateMaximum [TYPE] void [PARAMETER] [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  newMax  newMin  [TYPE]  NumberFormatException e  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^newMin = this.minimumValue; ;^335^^^^^326^340^[REPLACE] newMax = this.maximumValue;^[METHOD] validateMaximum [TYPE] void [PARAMETER] [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  newMax  newMin  [TYPE]  NumberFormatException e  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^this.minimumValue = newMin; ;^338^^^^^326^340^[REPLACE] this.maximumValue = newMax;^[METHOD] validateMaximum [TYPE] void [PARAMETER] [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  newMax  newMin  [TYPE]  NumberFormatException e  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^this.minimumRangeValue.setText ( Double.toString ( this.minimumValue )  ) ;^339^^^^^326^340^[REPLACE] this.maximumRangeValue.setText ( Double.toString ( this.maximumValue )  ) ;^[METHOD] validateMaximum [TYPE] void [PARAMETER] [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  newMax  newMin  [TYPE]  NumberFormatException e  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REMOVE]^this.minimumRangeValue.addActionListener ( this ) ;^339^^^^^326^340^[REMOVE] ^[METHOD] validateMaximum [TYPE] void [PARAMETER] [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  newMax  newMin  [TYPE]  NumberFormatException e  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^this.maximumRangeValue.setText ( Double .parseDouble ( false )   ) ;^339^^^^^326^340^[REPLACE] this.maximumRangeValue.setText ( Double.toString ( this.maximumValue )  ) ;^[METHOD] validateMaximum [TYPE] void [PARAMETER] [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  newMax  newMin  [TYPE]  NumberFormatException e  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples 
[REPLACE]^super .setAxisProperties ( axis )  ;^349^^^^^348^355^[REPLACE] super.setAxisProperties ( axis ) ;^[METHOD] setAxisProperties [TYPE] void [PARAMETER] Axis axis [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis numberAxis  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  newMax  newMin  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples  [TYPE]  Axis axis 
[ADD]^^349^350^^^^348^355^[ADD] super.setAxisProperties ( axis ) ; NumberAxis numberAxis =  ( NumberAxis )  axis;^[METHOD] setAxisProperties [TYPE] void [PARAMETER] Axis axis [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis numberAxis  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  newMax  newMin  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples  [TYPE]  Axis axis 
[REPLACE]^JPanel range = new JPanel ( new LCBLayout ( 3 )  ) ;^350^^^^^348^355^[REPLACE] NumberAxis numberAxis =  ( NumberAxis )  axis;^[METHOD] setAxisProperties [TYPE] void [PARAMETER] Axis axis [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis numberAxis  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  newMax  newMin  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples  [TYPE]  Axis axis 
[ADD]^numberAxis.setAutoRange ( this.autoRange ) ;^350^351^^^^348^355^[ADD] NumberAxis numberAxis =  ( NumberAxis )  axis; numberAxis.setAutoRange ( this.autoRange ) ;^[METHOD] setAxisProperties [TYPE] void [PARAMETER] Axis axis [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis numberAxis  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  newMax  newMin  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples  [TYPE]  Axis axis 
[REPLACE]^numberAxis .isAutoRange (  )  ;^351^^^^^348^355^[REPLACE] numberAxis.setAutoRange ( this.autoRange ) ;^[METHOD] setAxisProperties [TYPE] void [PARAMETER] Axis axis [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis numberAxis  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  newMax  newMin  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples  [TYPE]  Axis axis 
[REMOVE]^this.autoRangeCheckBox.setActionCommand ( "AutoRangeOnOff" ) ;^351^^^^^348^355^[REMOVE] ^[METHOD] setAxisProperties [TYPE] void [PARAMETER] Axis axis [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis numberAxis  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  newMax  newMin  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples  [TYPE]  Axis axis 
[REPLACE]^if  ( this.autoRange )  {^352^^^^^348^355^[REPLACE] if  ( !this.autoRange )  {^[METHOD] setAxisProperties [TYPE] void [PARAMETER] Axis axis [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis numberAxis  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  newMax  newMin  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples  [TYPE]  Axis axis 
[ADD]^numberAxis.setRange ( this.minimumValue, this.maximumValue ) ;^352^353^354^^^348^355^[ADD] if  ( !this.autoRange )  { numberAxis.setRange ( this.minimumValue, this.maximumValue ) ; }^[METHOD] setAxisProperties [TYPE] void [PARAMETER] Axis axis [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis numberAxis  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  newMax  newMin  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples  [TYPE]  Axis axis 
[REPLACE]^newMax = Double.parseDouble ( this.maximumRangeValue.getText (  )  ) ;^353^^^^^348^355^[REPLACE] numberAxis.setRange ( this.minimumValue, this.maximumValue ) ;^[METHOD] setAxisProperties [TYPE] void [PARAMETER] Axis axis [CLASS] DefaultNumberAxisEditor   [TYPE]  JCheckBox autoRangeCheckBox  [TYPE]  boolean autoRange  false  true  [TYPE]  NumberAxis numberAxis  [TYPE]  PaintSample gridPaintSample  [TYPE]  double maximumValue  minimumValue  newMax  newMin  [TYPE]  ResourceBundle localizationResources  [TYPE]  StrokeSample gridStrokeSample  [TYPE]  JTextField maximumRangeValue  minimumRangeValue  [TYPE]  StrokeSample[] availableStrokeSamples  [TYPE]  Axis axis 
