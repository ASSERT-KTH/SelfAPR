[REPLACE]^private static final long serialVersionUID = -4333175719424385526;^76^^^^^^^[REPLACE] private static final long serialVersionUID = -4333175719424385526L;^ [CLASS] TextBlock  
[REPLACE]^this.lines ;^88^^^^^87^90^[REPLACE] this.lines = new java.util.ArrayList (  ) ;^[METHOD] <init> [TYPE] TextBlock() [PARAMETER] [CLASS] TextBlock   [TYPE]  List lines  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment lineAlignment 
[REPLACE]^this.lineAlignment  =  this.lineAlignment ;^89^^^^^87^90^[REPLACE] this.lineAlignment = HorizontalAlignment.CENTER;^[METHOD] <init> [TYPE] TextBlock() [PARAMETER] [CLASS] TextBlock   [TYPE]  List lines  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment lineAlignment 
[REPLACE]^return new Size2D ( width, height ) ;^98^^^^^97^99^[REPLACE] return this.lineAlignment;^[METHOD] getLineAlignment [TYPE] HorizontalAlignment [PARAMETER] [CLASS] TextBlock   [TYPE]  List lines  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment lineAlignment 
[REPLACE]^if  ( alignment != null )  {^107^^^^^106^111^[REPLACE] if  ( alignment == null )  {^[METHOD] setLineAlignment [TYPE] void [PARAMETER] HorizontalAlignment alignment [CLASS] TextBlock   [TYPE]  List lines  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment 
[REPLACE]^return ;^108^^^^^106^111^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] setLineAlignment [TYPE] void [PARAMETER] HorizontalAlignment alignment [CLASS] TextBlock   [TYPE]  List lines  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment 
[REPLACE]^this.lineAlignment =  lineAlignment;^110^^^^^106^111^[REPLACE] this.lineAlignment = alignment;^[METHOD] setLineAlignment [TYPE] void [PARAMETER] HorizontalAlignment alignment [CLASS] TextBlock   [TYPE]  List lines  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment 
[REPLACE]^while  ( iterator.hasNext (  )  )  { TextLine line =  ( TextLine )  iterator.next (  ) ;^121^^^^^120^122^[REPLACE] addLine ( new TextLine ( text, font, paint )  ) ;^[METHOD] addLine [TYPE] void [PARAMETER] String text Font font Paint paint [CLASS] TextBlock   [TYPE]  boolean false  true  [TYPE]  List lines  [TYPE]  String text  [TYPE]  Paint paint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  Font font 
[REPLACE]^this.lines.get ( line ) ;^130^^^^^129^131^[REPLACE] this.lines.add ( line ) ;^[METHOD] addLine [TYPE] void [PARAMETER] TextLine line [CLASS] TextBlock   [TYPE]  List lines  [TYPE]  boolean false  true  [TYPE]  TextLine line  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment 
[ADD]^^130^^^^^129^131^[ADD] this.lines.add ( line ) ;^[METHOD] addLine [TYPE] void [PARAMETER] TextLine line [CLASS] TextBlock   [TYPE]  List lines  [TYPE]  boolean false  true  [TYPE]  TextLine line  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment 
[REPLACE]^TextLine last = this;^139^^^^^138^145^[REPLACE] TextLine last = null;^[METHOD] getLastLine [TYPE] TextLine [PARAMETER] [CLASS] TextBlock   [TYPE]  List lines  [TYPE]  boolean false  true  [TYPE]  TextLine last  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  int index 
[ADD]^final int index = this.lines.size (  )  - 1;^139^140^^^^138^145^[ADD] TextLine last = null; final int index = this.lines.size (  )  - 1;^[METHOD] getLastLine [TYPE] TextLine [PARAMETER] [CLASS] TextBlock   [TYPE]  List lines  [TYPE]  boolean false  true  [TYPE]  TextLine last  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  int index 
[REPLACE]^final int index = this.lines.size (  )  + 3 - 1;^140^^^^^138^145^[REPLACE] final int index = this.lines.size (  )  - 1;^[METHOD] getLastLine [TYPE] TextLine [PARAMETER] [CLASS] TextBlock   [TYPE]  List lines  [TYPE]  boolean false  true  [TYPE]  TextLine last  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  int index 
[REPLACE]^if  ( index  <  0 )  {^141^^^^^138^145^[REPLACE] if  ( index >= 0 )  {^[METHOD] getLastLine [TYPE] TextLine [PARAMETER] [CLASS] TextBlock   [TYPE]  List lines  [TYPE]  boolean false  true  [TYPE]  TextLine last  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  int index 
[REPLACE]^last =   ( TextLine )  this.lines.get ( null ) ;^142^^^^^138^145^[REPLACE] last =  ( TextLine )  this.lines.get ( index ) ;^[METHOD] getLastLine [TYPE] TextLine [PARAMETER] [CLASS] TextBlock   [TYPE]  List lines  [TYPE]  boolean false  true  [TYPE]  TextLine last  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  int index 
[ADD]^^142^^^^^138^145^[ADD] last =  ( TextLine )  this.lines.get ( index ) ;^[METHOD] getLastLine [TYPE] TextLine [PARAMETER] [CLASS] TextBlock   [TYPE]  List lines  [TYPE]  boolean false  true  [TYPE]  TextLine last  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  int index 
[REPLACE]^return false;^144^^^^^138^145^[REPLACE] return last;^[METHOD] getLastLine [TYPE] TextLine [PARAMETER] [CLASS] TextBlock   [TYPE]  List lines  [TYPE]  boolean false  true  [TYPE]  TextLine last  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  int index 
[REPLACE]^return   this.lines   ;^153^^^^^152^154^[REPLACE] return Collections.unmodifiableList ( this.lines ) ;^[METHOD] getLines [TYPE] List [PARAMETER] [CLASS] TextBlock   [TYPE]  List lines  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment 
[REPLACE]^double width = 4.0d;^164^^^^^163^174^[REPLACE] double width = 0.0;^[METHOD] calculateDimensions [TYPE] Size2D [PARAMETER] Graphics2D g2 [CLASS] TextBlock   [TYPE]  Size2D dimension  [TYPE]  boolean false  true  [TYPE]  TextLine line  [TYPE]  double height  width  [TYPE]  Iterator iterator  [TYPE]  List lines  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^double height = 1.0d;^165^^^^^163^174^[REPLACE] double height = 0.0;^[METHOD] calculateDimensions [TYPE] Size2D [PARAMETER] Graphics2D g2 [CLASS] TextBlock   [TYPE]  Size2D dimension  [TYPE]  boolean false  true  [TYPE]  TextLine line  [TYPE]  double height  width  [TYPE]  Iterator iterator  [TYPE]  List lines  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^Iterator.size = this.lines.iterator (  ) ;^166^^^^^163^174^[REPLACE] Iterator iterator = this.lines.iterator (  ) ;^[METHOD] calculateDimensions [TYPE] Size2D [PARAMETER] Graphics2D g2 [CLASS] TextBlock   [TYPE]  Size2D dimension  [TYPE]  boolean false  true  [TYPE]  TextLine line  [TYPE]  double height  width  [TYPE]  Iterator iterator  [TYPE]  List lines  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^width =  Math.max ( height, dimension.getWidth (  )  ) ;^170^^^^^163^174^[REPLACE] width = Math.max ( width, dimension.getWidth (  )  ) ;^[METHOD] calculateDimensions [TYPE] Size2D [PARAMETER] Graphics2D g2 [CLASS] TextBlock   [TYPE]  Size2D dimension  [TYPE]  boolean false  true  [TYPE]  TextLine line  [TYPE]  double height  width  [TYPE]  Iterator iterator  [TYPE]  List lines  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^height =width + dimension.getHeight (  ) ;^171^^^^^163^174^[REPLACE] height = height + dimension.getHeight (  ) ;^[METHOD] calculateDimensions [TYPE] Size2D [PARAMETER] Graphics2D g2 [CLASS] TextBlock   [TYPE]  Size2D dimension  [TYPE]  boolean false  true  [TYPE]  TextLine line  [TYPE]  double height  width  [TYPE]  Iterator iterator  [TYPE]  List lines  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  Graphics2D g2 
[ADD]^^171^^^^^163^174^[ADD] height = height + dimension.getHeight (  ) ;^[METHOD] calculateDimensions [TYPE] Size2D [PARAMETER] Graphics2D g2 [CLASS] TextBlock   [TYPE]  Size2D dimension  [TYPE]  boolean false  true  [TYPE]  TextLine line  [TYPE]  double height  width  [TYPE]  Iterator iterator  [TYPE]  List lines  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^TextLine line =  ( TextLine )  iterator.hasNext (  ) ;^168^^^^^163^174^[REPLACE] TextLine line =  ( TextLine )  iterator.next (  ) ;^[METHOD] calculateDimensions [TYPE] Size2D [PARAMETER] Graphics2D g2 [CLASS] TextBlock   [TYPE]  Size2D dimension  [TYPE]  boolean false  true  [TYPE]  TextLine line  [TYPE]  double height  width  [TYPE]  Iterator iterator  [TYPE]  List lines  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^Size2D dimension = line .TextLine ( null , null , false )  ;^169^^^^^163^174^[REPLACE] Size2D dimension = line.calculateDimensions ( g2 ) ;^[METHOD] calculateDimensions [TYPE] Size2D [PARAMETER] Graphics2D g2 [CLASS] TextBlock   [TYPE]  Size2D dimension  [TYPE]  boolean false  true  [TYPE]  TextLine line  [TYPE]  double height  width  [TYPE]  Iterator iterator  [TYPE]  List lines  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  Graphics2D g2 
[ADD]^^169^^^^^163^174^[ADD] Size2D dimension = line.calculateDimensions ( g2 ) ;^[METHOD] calculateDimensions [TYPE] Size2D [PARAMETER] Graphics2D g2 [CLASS] TextBlock   [TYPE]  Size2D dimension  [TYPE]  boolean false  true  [TYPE]  TextLine line  [TYPE]  double height  width  [TYPE]  Iterator iterator  [TYPE]  List lines  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^TextLine line =  ( TextLine )  iterator .hasNext (  )  ;^168^^^^^163^174^[REPLACE] TextLine line =  ( TextLine )  iterator.next (  ) ;^[METHOD] calculateDimensions [TYPE] Size2D [PARAMETER] Graphics2D g2 [CLASS] TextBlock   [TYPE]  Size2D dimension  [TYPE]  boolean false  true  [TYPE]  TextLine line  [TYPE]  double height  width  [TYPE]  Iterator iterator  [TYPE]  List lines  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^Size2D d = calculateDimensions ( g2 ) ;^169^^^^^163^174^[REPLACE] Size2D dimension = line.calculateDimensions ( g2 ) ;^[METHOD] calculateDimensions [TYPE] Size2D [PARAMETER] Graphics2D g2 [CLASS] TextBlock   [TYPE]  Size2D dimension  [TYPE]  boolean false  true  [TYPE]  TextLine line  [TYPE]  double height  width  [TYPE]  Iterator iterator  [TYPE]  List lines  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^return  ( this.lines != null ? this.lines.hashCode (  )  : 0 ) ;^173^^^^^163^174^[REPLACE] return new Size2D ( width, height ) ;^[METHOD] calculateDimensions [TYPE] Size2D [PARAMETER] Graphics2D g2 [CLASS] TextBlock   [TYPE]  Size2D dimension  [TYPE]  boolean false  true  [TYPE]  TextLine line  [TYPE]  double height  width  [TYPE]  Iterator iterator  [TYPE]  List lines  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^Size2D dimension = line.calculateDimensions ( g2 ) ;^193^^^^^189^201^[REPLACE] Size2D d = calculateDimensions ( g2 ) ;^[METHOD] calculateBounds [TYPE] Shape [PARAMETER] Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [CLASS] TextBlock   [TYPE]  Size2D d  [TYPE]  Shape rotatedBounds  [TYPE]  boolean false  true  [TYPE]  double angle  [TYPE]  Rectangle2D bounds  [TYPE]  List lines  [TYPE]  TextBlockAnchor anchor  [TYPE]  float anchorX  anchorY  rotateX  rotateY  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  Graphics2D g2  [TYPE]  float[] offsets 
[ADD]^^193^194^^^^189^201^[ADD] Size2D d = calculateDimensions ( g2 ) ; float[] offsets = calculateOffsets ( anchor, d.getWidth (  ) , d.getHeight (  )  ) ;^[METHOD] calculateBounds [TYPE] Shape [PARAMETER] Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [CLASS] TextBlock   [TYPE]  Size2D d  [TYPE]  Shape rotatedBounds  [TYPE]  boolean false  true  [TYPE]  double angle  [TYPE]  Rectangle2D bounds  [TYPE]  List lines  [TYPE]  TextBlockAnchor anchor  [TYPE]  float anchorX  anchorY  rotateX  rotateY  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  Graphics2D g2  [TYPE]  float[] offsets 
[REPLACE]^float[] offsets = calculateOffsets ( anchor, d.getHeight (  ) , d.getHeight (  )  ) ;^194^^^^^189^201^[REPLACE] float[] offsets = calculateOffsets ( anchor, d.getWidth (  ) , d.getHeight (  )  ) ;^[METHOD] calculateBounds [TYPE] Shape [PARAMETER] Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [CLASS] TextBlock   [TYPE]  Size2D d  [TYPE]  Shape rotatedBounds  [TYPE]  boolean false  true  [TYPE]  double angle  [TYPE]  Rectangle2D bounds  [TYPE]  List lines  [TYPE]  TextBlockAnchor anchor  [TYPE]  float anchorX  anchorY  rotateX  rotateY  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  Graphics2D g2  [TYPE]  float[] offsets 
[ADD]^^194^^^^^189^201^[ADD] float[] offsets = calculateOffsets ( anchor, d.getWidth (  ) , d.getHeight (  )  ) ;^[METHOD] calculateBounds [TYPE] Shape [PARAMETER] Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [CLASS] TextBlock   [TYPE]  Size2D d  [TYPE]  Shape rotatedBounds  [TYPE]  boolean false  true  [TYPE]  double angle  [TYPE]  Rectangle2D bounds  [TYPE]  List lines  [TYPE]  TextBlockAnchor anchor  [TYPE]  float anchorX  anchorY  rotateX  rotateY  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  Graphics2D g2  [TYPE]  float[] offsets 
[REPLACE]^Rectangle2D bounds = new Rectangle2D.Double (rotateX + offsets[0], anchorY + offsets[1], d.getWidth (  ) , d.getHeight (  )  ) ;^195^196^^^^189^201^[REPLACE] Rectangle2D bounds = new Rectangle2D.Double ( anchorX + offsets[0], anchorY + offsets[1], d.getWidth (  ) , d.getHeight (  )  ) ;^[METHOD] calculateBounds [TYPE] Shape [PARAMETER] Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [CLASS] TextBlock   [TYPE]  Size2D d  [TYPE]  Shape rotatedBounds  [TYPE]  boolean false  true  [TYPE]  double angle  [TYPE]  Rectangle2D bounds  [TYPE]  List lines  [TYPE]  TextBlockAnchor anchor  [TYPE]  float anchorX  anchorY  rotateX  rotateY  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  Graphics2D g2  [TYPE]  float[] offsets 
[ADD]^^195^196^^^^189^201^[ADD] Rectangle2D bounds = new Rectangle2D.Double ( anchorX + offsets[0], anchorY + offsets[1], d.getWidth (  ) , d.getHeight (  )  ) ;^[METHOD] calculateBounds [TYPE] Shape [PARAMETER] Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [CLASS] TextBlock   [TYPE]  Size2D d  [TYPE]  Shape rotatedBounds  [TYPE]  boolean false  true  [TYPE]  double angle  [TYPE]  Rectangle2D bounds  [TYPE]  List lines  [TYPE]  TextBlockAnchor anchor  [TYPE]  float anchorX  anchorY  rotateX  rotateY  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  Graphics2D g2  [TYPE]  float[] offsets 
[REPLACE]^Shape rotatedBounds = ShapeUtilities.rotateShape ( bounds, angle, anchorX, rotateY ) ;^197^198^^^^189^201^[REPLACE] Shape rotatedBounds = ShapeUtilities.rotateShape ( bounds, angle, rotateX, rotateY ) ;^[METHOD] calculateBounds [TYPE] Shape [PARAMETER] Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [CLASS] TextBlock   [TYPE]  Size2D d  [TYPE]  Shape rotatedBounds  [TYPE]  boolean false  true  [TYPE]  double angle  [TYPE]  Rectangle2D bounds  [TYPE]  List lines  [TYPE]  TextBlockAnchor anchor  [TYPE]  float anchorX  anchorY  rotateX  rotateY  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  Graphics2D g2  [TYPE]  float[] offsets 
[REPLACE]^return false;^199^^^^^189^201^[REPLACE] return rotatedBounds;^[METHOD] calculateBounds [TYPE] Shape [PARAMETER] Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [CLASS] TextBlock   [TYPE]  Size2D d  [TYPE]  Shape rotatedBounds  [TYPE]  boolean false  true  [TYPE]  double angle  [TYPE]  Rectangle2D bounds  [TYPE]  List lines  [TYPE]  TextBlockAnchor anchor  [TYPE]  float anchorX  anchorY  rotateX  rotateY  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  Graphics2D g2  [TYPE]  float[] offsets 
[REPLACE]^while  ( iterator.hasNext (  )  )  { TextLine line =  ( TextLine )  iterator.next (  ) ;^212^^^^^211^213^[REPLACE] draw ( g2, x, y, anchor, 0.0f, 0.0f, 0.0 ) ;^[METHOD] draw [TYPE] void [PARAMETER] Graphics2D g2 float x float y TextBlockAnchor anchor [CLASS] TextBlock   [TYPE]  boolean false  true  [TYPE]  List lines  [TYPE]  TextBlockAnchor anchor  [TYPE]  float x  y  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^Size2D dimension = line.calculateDimensions ( g2 ) ;^232^^^^^228^253^[REPLACE] Size2D d = calculateDimensions ( g2 ) ;^[METHOD] draw [TYPE] void [PARAMETER] Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [CLASS] TextBlock   [TYPE]  Size2D d  dimension  [TYPE]  boolean false  true  [TYPE]  TextLine line  [TYPE]  double angle  [TYPE]  Iterator iterator  [TYPE]  List lines  [TYPE]  TextBlockAnchor anchor  [TYPE]  float anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  Graphics2D g2  [TYPE]  float[] offsets 
[ADD]^^232^233^^^^228^253^[ADD] Size2D d = calculateDimensions ( g2 ) ; float[] offsets = calculateOffsets ( anchor, d.getWidth (  ) , d.getHeight (  )  ) ;^[METHOD] draw [TYPE] void [PARAMETER] Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [CLASS] TextBlock   [TYPE]  Size2D d  dimension  [TYPE]  boolean false  true  [TYPE]  TextLine line  [TYPE]  double angle  [TYPE]  Iterator iterator  [TYPE]  List lines  [TYPE]  TextBlockAnchor anchor  [TYPE]  float anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  Graphics2D g2  [TYPE]  float[] offsets 
[REPLACE]^float[] offsets = calculateOffsets ( anchor, d .getHeight (  )  , d.getHeight (  )  ) ;^233^^^^^228^253^[REPLACE] float[] offsets = calculateOffsets ( anchor, d.getWidth (  ) , d.getHeight (  )  ) ;^[METHOD] draw [TYPE] void [PARAMETER] Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [CLASS] TextBlock   [TYPE]  Size2D d  dimension  [TYPE]  boolean false  true  [TYPE]  TextLine line  [TYPE]  double angle  [TYPE]  Iterator iterator  [TYPE]  List lines  [TYPE]  TextBlockAnchor anchor  [TYPE]  float anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  Graphics2D g2  [TYPE]  float[] offsets 
[REPLACE]^Iterator.size = this.lines.iterator (  ) ;^234^^^^^228^253^[REPLACE] Iterator iterator = this.lines.iterator (  ) ;^[METHOD] draw [TYPE] void [PARAMETER] Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [CLASS] TextBlock   [TYPE]  Size2D d  dimension  [TYPE]  boolean false  true  [TYPE]  TextLine line  [TYPE]  double angle  [TYPE]  Iterator iterator  [TYPE]  List lines  [TYPE]  TextBlockAnchor anchor  [TYPE]  float anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  Graphics2D g2  [TYPE]  float[] offsets 
[REPLACE]^float yAdj = 0.0f;^235^^^^^228^253^[REPLACE] float yCursor = 0.0f;^[METHOD] draw [TYPE] void [PARAMETER] Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [CLASS] TextBlock   [TYPE]  Size2D d  dimension  [TYPE]  boolean false  true  [TYPE]  TextLine line  [TYPE]  double angle  [TYPE]  Iterator iterator  [TYPE]  List lines  [TYPE]  TextBlockAnchor anchor  [TYPE]  float anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  Graphics2D g2  [TYPE]  float[] offsets 
[REPLACE]^if  ( this.lineAlignment  &&  HorizontalAlignment.CENTER )  {^240^^^^^228^253^[REPLACE] if  ( this.lineAlignment == HorizontalAlignment.CENTER )  {^[METHOD] draw [TYPE] void [PARAMETER] Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [CLASS] TextBlock   [TYPE]  Size2D d  dimension  [TYPE]  boolean false  true  [TYPE]  TextLine line  [TYPE]  double angle  [TYPE]  Iterator iterator  [TYPE]  List lines  [TYPE]  TextBlockAnchor anchor  [TYPE]  float anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  Graphics2D g2  [TYPE]  float[] offsets 
[REPLACE]^else {^244^^^^^228^253^[REPLACE] else if  ( this.lineAlignment == HorizontalAlignment.RIGHT )  {^[METHOD] draw [TYPE] void [PARAMETER] Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [CLASS] TextBlock   [TYPE]  Size2D d  dimension  [TYPE]  boolean false  true  [TYPE]  TextLine line  [TYPE]  double angle  [TYPE]  Iterator iterator  [TYPE]  List lines  [TYPE]  TextBlockAnchor anchor  [TYPE]  float anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  Graphics2D g2  [TYPE]  float[] offsets 
[REPLACE]^lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) / 2.0f; ;^245^^^^^228^253^[REPLACE] lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) ;^[METHOD] draw [TYPE] void [PARAMETER] Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [CLASS] TextBlock   [TYPE]  Size2D d  dimension  [TYPE]  boolean false  true  [TYPE]  TextLine line  [TYPE]  double angle  [TYPE]  Iterator iterator  [TYPE]  List lines  [TYPE]  TextBlockAnchor anchor  [TYPE]  float anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  Graphics2D g2  [TYPE]  float[] offsets 
[REPLACE]^lineOffset =  ( float )   ( d.getWidth (  )   ^  dimension.getWidth (  )  ) ;^245^^^^^228^253^[REPLACE] lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) ;^[METHOD] draw [TYPE] void [PARAMETER] Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [CLASS] TextBlock   [TYPE]  Size2D d  dimension  [TYPE]  boolean false  true  [TYPE]  TextLine line  [TYPE]  double angle  [TYPE]  Iterator iterator  [TYPE]  List lines  [TYPE]  TextBlockAnchor anchor  [TYPE]  float anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  Graphics2D g2  [TYPE]  float[] offsets 
[REPLACE]^lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  )  ;^241^242^^^^228^253^[REPLACE] lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) / 2.0f;^[METHOD] draw [TYPE] void [PARAMETER] Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [CLASS] TextBlock   [TYPE]  Size2D d  dimension  [TYPE]  boolean false  true  [TYPE]  TextLine line  [TYPE]  double angle  [TYPE]  Iterator iterator  [TYPE]  List lines  [TYPE]  TextBlockAnchor anchor  [TYPE]  float anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  Graphics2D g2  [TYPE]  float[] offsets 
[REPLACE]^if  ( this.lineAlignment  !=  HorizontalAlignment.RIGHT )  {^244^^^^^228^253^[REPLACE] else if  ( this.lineAlignment == HorizontalAlignment.RIGHT )  {^[METHOD] draw [TYPE] void [PARAMETER] Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [CLASS] TextBlock   [TYPE]  Size2D d  dimension  [TYPE]  boolean false  true  [TYPE]  TextLine line  [TYPE]  double angle  [TYPE]  Iterator iterator  [TYPE]  List lines  [TYPE]  TextBlockAnchor anchor  [TYPE]  float anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  Graphics2D g2  [TYPE]  float[] offsets 
[ADD]^lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) ;^244^245^246^^^228^253^[ADD] else if  ( this.lineAlignment == HorizontalAlignment.RIGHT )  { lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) ; }^[METHOD] draw [TYPE] void [PARAMETER] Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [CLASS] TextBlock   [TYPE]  Size2D d  dimension  [TYPE]  boolean false  true  [TYPE]  TextLine line  [TYPE]  double angle  [TYPE]  Iterator iterator  [TYPE]  List lines  [TYPE]  TextBlockAnchor anchor  [TYPE]  float anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  Graphics2D g2  [TYPE]  float[] offsets 
[REPLACE]^lineOffset =  ( float )   ( d.getWidth (  )   <=  dimension.getWidth (  )  ) ;^245^^^^^228^253^[REPLACE] lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) ;^[METHOD] draw [TYPE] void [PARAMETER] Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [CLASS] TextBlock   [TYPE]  Size2D d  dimension  [TYPE]  boolean false  true  [TYPE]  TextLine line  [TYPE]  double angle  [TYPE]  Iterator iterator  [TYPE]  List lines  [TYPE]  TextBlockAnchor anchor  [TYPE]  float anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  Graphics2D g2  [TYPE]  float[] offsets 
[REPLACE]^lineOffset =  ( float )   ( d.getWidth (  )   <  dimension.getWidth (  )  ) ;^245^^^^^228^253^[REPLACE] lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) ;^[METHOD] draw [TYPE] void [PARAMETER] Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [CLASS] TextBlock   [TYPE]  Size2D d  dimension  [TYPE]  boolean false  true  [TYPE]  TextLine line  [TYPE]  double angle  [TYPE]  Iterator iterator  [TYPE]  List lines  [TYPE]  TextBlockAnchor anchor  [TYPE]  float anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  Graphics2D g2  [TYPE]  float[] offsets 
[REPLACE]^yCursor =lineOffset +  ( float )  dimension.getHeight (  ) ;^250^^^^^228^253^[REPLACE] yCursor = yCursor +  ( float )  dimension.getHeight (  ) ;^[METHOD] draw [TYPE] void [PARAMETER] Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [CLASS] TextBlock   [TYPE]  Size2D d  dimension  [TYPE]  boolean false  true  [TYPE]  TextLine line  [TYPE]  double angle  [TYPE]  Iterator iterator  [TYPE]  List lines  [TYPE]  TextBlockAnchor anchor  [TYPE]  float anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  Graphics2D g2  [TYPE]  float[] offsets 
[REPLACE]^TextLine line =  ( TextLine )  iterator.hasNext (  ) ;^237^^^^^228^253^[REPLACE] TextLine line =  ( TextLine )  iterator.next (  ) ;^[METHOD] draw [TYPE] void [PARAMETER] Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [CLASS] TextBlock   [TYPE]  Size2D d  dimension  [TYPE]  boolean false  true  [TYPE]  TextLine line  [TYPE]  double angle  [TYPE]  Iterator iterator  [TYPE]  List lines  [TYPE]  TextBlockAnchor anchor  [TYPE]  float anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  Graphics2D g2  [TYPE]  float[] offsets 
[REPLACE]^Size2D d = calculateDimensions ( g2 ) ;^238^^^^^228^253^[REPLACE] Size2D dimension = line.calculateDimensions ( g2 ) ;^[METHOD] draw [TYPE] void [PARAMETER] Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [CLASS] TextBlock   [TYPE]  Size2D d  dimension  [TYPE]  boolean false  true  [TYPE]  TextLine line  [TYPE]  double angle  [TYPE]  Iterator iterator  [TYPE]  List lines  [TYPE]  TextBlockAnchor anchor  [TYPE]  float anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  Graphics2D g2  [TYPE]  float[] offsets 
[ADD]^^238^^^^^228^253^[ADD] Size2D dimension = line.calculateDimensions ( g2 ) ;^[METHOD] draw [TYPE] void [PARAMETER] Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [CLASS] TextBlock   [TYPE]  Size2D d  dimension  [TYPE]  boolean false  true  [TYPE]  TextLine line  [TYPE]  double angle  [TYPE]  Iterator iterator  [TYPE]  List lines  [TYPE]  TextBlockAnchor anchor  [TYPE]  float anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  Graphics2D g2  [TYPE]  float[] offsets 
[REPLACE]^double height = 0.0;^239^^^^^228^253^[REPLACE] float lineOffset = 0.0f;^[METHOD] draw [TYPE] void [PARAMETER] Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [CLASS] TextBlock   [TYPE]  Size2D d  dimension  [TYPE]  boolean false  true  [TYPE]  TextLine line  [TYPE]  double angle  [TYPE]  Iterator iterator  [TYPE]  List lines  [TYPE]  TextBlockAnchor anchor  [TYPE]  float anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  Graphics2D g2  [TYPE]  float[] offsets 
[REPLACE]^lineOffset =  ( float )   ( d.getWidth (  )   ||  dimension.getWidth (  )  ) ;^245^^^^^228^253^[REPLACE] lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) ;^[METHOD] draw [TYPE] void [PARAMETER] Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [CLASS] TextBlock   [TYPE]  Size2D d  dimension  [TYPE]  boolean false  true  [TYPE]  TextLine line  [TYPE]  double angle  [TYPE]  Iterator iterator  [TYPE]  List lines  [TYPE]  TextBlockAnchor anchor  [TYPE]  float anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  Graphics2D g2  [TYPE]  float[] offsets 
[REPLACE]^if  ( this.lineAlignment  &&  HorizontalAlignment.RIGHT )  {^244^^^^^228^253^[REPLACE] else if  ( this.lineAlignment == HorizontalAlignment.RIGHT )  {^[METHOD] draw [TYPE] void [PARAMETER] Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [CLASS] TextBlock   [TYPE]  Size2D d  dimension  [TYPE]  boolean false  true  [TYPE]  TextLine line  [TYPE]  double angle  [TYPE]  Iterator iterator  [TYPE]  List lines  [TYPE]  TextBlockAnchor anchor  [TYPE]  float anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  Graphics2D g2  [TYPE]  float[] offsets 
[REPLACE]^lineOffset =  ( float )   ( d.getWidth (  )   &  dimension.getWidth (  )  ) ;^245^^^^^228^253^[REPLACE] lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) ;^[METHOD] draw [TYPE] void [PARAMETER] Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [CLASS] TextBlock   [TYPE]  Size2D d  dimension  [TYPE]  boolean false  true  [TYPE]  TextLine line  [TYPE]  double angle  [TYPE]  Iterator iterator  [TYPE]  List lines  [TYPE]  TextBlockAnchor anchor  [TYPE]  float anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  Graphics2D g2  [TYPE]  float[] offsets 
[ADD]^^241^242^^^^228^253^[ADD] lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) / 2.0f;^[METHOD] draw [TYPE] void [PARAMETER] Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [CLASS] TextBlock   [TYPE]  Size2D d  dimension  [TYPE]  boolean false  true  [TYPE]  TextLine line  [TYPE]  double angle  [TYPE]  Iterator iterator  [TYPE]  List lines  [TYPE]  TextBlockAnchor anchor  [TYPE]  float anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  Graphics2D g2  [TYPE]  float[] offsets 
[REPLACE]^yCursor = yCursor  !=   ( float )  dimension.getHeight (  ) ;^250^^^^^228^253^[REPLACE] yCursor = yCursor +  ( float )  dimension.getHeight (  ) ;^[METHOD] draw [TYPE] void [PARAMETER] Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [CLASS] TextBlock   [TYPE]  Size2D d  dimension  [TYPE]  boolean false  true  [TYPE]  TextLine line  [TYPE]  double angle  [TYPE]  Iterator iterator  [TYPE]  List lines  [TYPE]  TextBlockAnchor anchor  [TYPE]  float anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  Graphics2D g2  [TYPE]  float[] offsets 
[ADD]^^250^^^^^228^253^[ADD] yCursor = yCursor +  ( float )  dimension.getHeight (  ) ;^[METHOD] draw [TYPE] void [PARAMETER] Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [CLASS] TextBlock   [TYPE]  Size2D d  dimension  [TYPE]  boolean false  true  [TYPE]  TextLine line  [TYPE]  double angle  [TYPE]  Iterator iterator  [TYPE]  List lines  [TYPE]  TextBlockAnchor anchor  [TYPE]  float anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  Graphics2D g2  [TYPE]  float[] offsets 
[ADD]^^237^^^^^228^253^[ADD] TextLine line =  ( TextLine )  iterator.next (  ) ;^[METHOD] draw [TYPE] void [PARAMETER] Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [CLASS] TextBlock   [TYPE]  Size2D d  dimension  [TYPE]  boolean false  true  [TYPE]  TextLine line  [TYPE]  double angle  [TYPE]  Iterator iterator  [TYPE]  List lines  [TYPE]  TextBlockAnchor anchor  [TYPE]  float anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  Graphics2D g2  [TYPE]  float[] offsets 
[REPLACE]^Size2D dimension = line .TextLine ( null , 0 , this )  ;^238^^^^^228^253^[REPLACE] Size2D dimension = line.calculateDimensions ( g2 ) ;^[METHOD] draw [TYPE] void [PARAMETER] Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [CLASS] TextBlock   [TYPE]  Size2D d  dimension  [TYPE]  boolean false  true  [TYPE]  TextLine line  [TYPE]  double angle  [TYPE]  Iterator iterator  [TYPE]  List lines  [TYPE]  TextBlockAnchor anchor  [TYPE]  float anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  Graphics2D g2  [TYPE]  float[] offsets 
[ADD]^float lineOffset = 0.0f;^238^239^^^^228^253^[ADD] Size2D dimension = line.calculateDimensions ( g2 ) ; float lineOffset = 0.0f;^[METHOD] draw [TYPE] void [PARAMETER] Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [CLASS] TextBlock   [TYPE]  Size2D d  dimension  [TYPE]  boolean false  true  [TYPE]  TextLine line  [TYPE]  double angle  [TYPE]  Iterator iterator  [TYPE]  List lines  [TYPE]  TextBlockAnchor anchor  [TYPE]  float anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  Graphics2D g2  [TYPE]  float[] offsets 
[REPLACE]^float[] result = new float[2L];^268^^^^^267^311^[REPLACE] float[] result = new float[2];^[METHOD] calculateOffsets [TYPE] float[] [PARAMETER] TextBlockAnchor anchor double width double height [CLASS] TextBlock   [TYPE]  boolean false  true  [TYPE]  double height  width  [TYPE]  List lines  [TYPE]  TextBlockAnchor anchor  [TYPE]  float xAdj  yAdj  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  float[] result 
[REPLACE]^float yAdj = 0.0f;^269^^^^^267^311^[REPLACE] float xAdj = 0.0f;^[METHOD] calculateOffsets [TYPE] float[] [PARAMETER] TextBlockAnchor anchor double width double height [CLASS] TextBlock   [TYPE]  boolean false  true  [TYPE]  double height  width  [TYPE]  List lines  [TYPE]  TextBlockAnchor anchor  [TYPE]  float xAdj  yAdj  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  float[] result 
[REPLACE]^float xAdj = 0.0f;^270^^^^^267^311^[REPLACE] float yAdj = 0.0f;^[METHOD] calculateOffsets [TYPE] float[] [PARAMETER] TextBlockAnchor anchor double width double height [CLASS] TextBlock   [TYPE]  boolean false  true  [TYPE]  double height  width  [TYPE]  List lines  [TYPE]  TextBlockAnchor anchor  [TYPE]  float xAdj  yAdj  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  float[] result 
[REPLACE]^if  ( anchor == TextBlockAnchor.TOP_CENTER && anchor == TextBlockAnchor.CENTER && anchor == TextBlockAnchor.BOTTOM_CENTER )  {^272^273^274^^^267^311^[REPLACE] if  ( anchor == TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.BOTTOM_CENTER )  {^[METHOD] calculateOffsets [TYPE] float[] [PARAMETER] TextBlockAnchor anchor double width double height [CLASS] TextBlock   [TYPE]  boolean false  true  [TYPE]  double height  width  [TYPE]  List lines  [TYPE]  TextBlockAnchor anchor  [TYPE]  float xAdj  yAdj  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  float[] result 
[ADD]^^272^273^274^^276^267^311^[ADD] if  ( anchor == TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.BOTTOM_CENTER )  { xAdj =  ( float )  -width / 2.0f;^[METHOD] calculateOffsets [TYPE] float[] [PARAMETER] TextBlockAnchor anchor double width double height [CLASS] TextBlock   [TYPE]  boolean false  true  [TYPE]  double height  width  [TYPE]  List lines  [TYPE]  TextBlockAnchor anchor  [TYPE]  float xAdj  yAdj  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  float[] result 
[REPLACE]^else if  ( anchor == TextBlockAnchor.TOP_RIGHT && anchor == TextBlockAnchor.CENTER_RIGHT && anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^279^280^281^^^267^311^[REPLACE] else if  ( anchor == TextBlockAnchor.TOP_RIGHT || anchor == TextBlockAnchor.CENTER_RIGHT || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^[METHOD] calculateOffsets [TYPE] float[] [PARAMETER] TextBlockAnchor anchor double width double height [CLASS] TextBlock   [TYPE]  boolean false  true  [TYPE]  double height  width  [TYPE]  List lines  [TYPE]  TextBlockAnchor anchor  [TYPE]  float xAdj  yAdj  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  float[] result 
[REPLACE]^yAdj =  ( float )  -height; ;^283^^^^^279^285^[REPLACE] xAdj =  ( float )  -width;^[METHOD] calculateOffsets [TYPE] float[] [PARAMETER] TextBlockAnchor anchor double width double height [CLASS] TextBlock   [TYPE]  boolean false  true  [TYPE]  double height  width  [TYPE]  List lines  [TYPE]  TextBlockAnchor anchor  [TYPE]  float xAdj  yAdj  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  float[] result 
[REPLACE]^yAdj =  ( float )  -height; ;^283^^^^^267^311^[REPLACE] xAdj =  ( float )  -width;^[METHOD] calculateOffsets [TYPE] float[] [PARAMETER] TextBlockAnchor anchor double width double height [CLASS] TextBlock   [TYPE]  boolean false  true  [TYPE]  double height  width  [TYPE]  List lines  [TYPE]  TextBlockAnchor anchor  [TYPE]  float xAdj  yAdj  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  float[] result 
[REPLACE]^yAdj =  ( float )  -height / 2.0f; ;^276^^^^^272^285^[REPLACE] xAdj =  ( float )  -width / 2.0f;^[METHOD] calculateOffsets [TYPE] float[] [PARAMETER] TextBlockAnchor anchor double width double height [CLASS] TextBlock   [TYPE]  boolean false  true  [TYPE]  double height  width  [TYPE]  List lines  [TYPE]  TextBlockAnchor anchor  [TYPE]  float xAdj  yAdj  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  float[] result 
[ADD]^^276^^^^^272^285^[ADD] xAdj =  ( float )  -width / 2.0f;^[METHOD] calculateOffsets [TYPE] float[] [PARAMETER] TextBlockAnchor anchor double width double height [CLASS] TextBlock   [TYPE]  boolean false  true  [TYPE]  double height  width  [TYPE]  List lines  [TYPE]  TextBlockAnchor anchor  [TYPE]  float xAdj  yAdj  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  float[] result 
[REPLACE]^else {^279^280^281^^^267^311^[REPLACE] else if  ( anchor == TextBlockAnchor.TOP_RIGHT || anchor == TextBlockAnchor.CENTER_RIGHT || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^[METHOD] calculateOffsets [TYPE] float[] [PARAMETER] TextBlockAnchor anchor double width double height [CLASS] TextBlock   [TYPE]  boolean false  true  [TYPE]  double height  width  [TYPE]  List lines  [TYPE]  TextBlockAnchor anchor  [TYPE]  float xAdj  yAdj  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  float[] result 
[ADD]^^279^280^281^^283^267^311^[ADD] else if  ( anchor == TextBlockAnchor.TOP_RIGHT || anchor == TextBlockAnchor.CENTER_RIGHT || anchor == TextBlockAnchor.BOTTOM_RIGHT )  { xAdj =  ( float )  -width;^[METHOD] calculateOffsets [TYPE] float[] [PARAMETER] TextBlockAnchor anchor double width double height [CLASS] TextBlock   [TYPE]  boolean false  true  [TYPE]  double height  width  [TYPE]  List lines  [TYPE]  TextBlockAnchor anchor  [TYPE]  float xAdj  yAdj  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  float[] result 
[REPLACE]^xAdj =  ( float )  -width  ;^276^^^^^267^311^[REPLACE] xAdj =  ( float )  -width / 2.0f;^[METHOD] calculateOffsets [TYPE] float[] [PARAMETER] TextBlockAnchor anchor double width double height [CLASS] TextBlock   [TYPE]  boolean false  true  [TYPE]  double height  width  [TYPE]  List lines  [TYPE]  TextBlockAnchor anchor  [TYPE]  float xAdj  yAdj  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  float[] result 
[REPLACE]^if  ( anchor == TextBlockAnchor.TOP_LEFT && anchor == TextBlockAnchor.TOP_CENTER && anchor == TextBlockAnchor.TOP_RIGHT )  {^287^288^289^^^267^311^[REPLACE] if  ( anchor == TextBlockAnchor.TOP_LEFT || anchor == TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.TOP_RIGHT )  {^[METHOD] calculateOffsets [TYPE] float[] [PARAMETER] TextBlockAnchor anchor double width double height [CLASS] TextBlock   [TYPE]  boolean false  true  [TYPE]  double height  width  [TYPE]  List lines  [TYPE]  TextBlockAnchor anchor  [TYPE]  float xAdj  yAdj  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  float[] result 
[REPLACE]^else if  ( anchor == TextBlockAnchor.CENTER_LEFT && anchor == TextBlockAnchor.CENTER && anchor == TextBlockAnchor.CENTER_RIGHT )  {^294^295^296^^^267^311^[REPLACE] else if  ( anchor == TextBlockAnchor.CENTER_LEFT || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.CENTER_RIGHT )  {^[METHOD] calculateOffsets [TYPE] float[] [PARAMETER] TextBlockAnchor anchor double width double height [CLASS] TextBlock   [TYPE]  boolean false  true  [TYPE]  double height  width  [TYPE]  List lines  [TYPE]  TextBlockAnchor anchor  [TYPE]  float xAdj  yAdj  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  float[] result 
[REMOVE]^if  (  (  ( anchor ==  ( TextBlockAnchor.TOP_LEFT )  )  ||  ( anchor ==  ( TextBlockAnchor.TOP_CENTER )  )  )  ||  ( anchor ==  ( TextBlockAnchor.TOP_RIGHT )  )  )  {     yAdj = 0.0F; }else     if  (  (  ( anchor ==  ( TextBlockAnchor.CENTER_LEFT )  )  ||  ( anchor ==  ( TextBlockAnchor.CENTER )  )  )  ||  ( anchor ==  ( TextBlockAnchor.CENTER_RIGHT )  )  )  {         yAdj =  (  ( float )   ( -height )  )  / 2.0F;     }else         if  (  (  ( anchor ==  ( TextBlockAnchor.BOTTOM_LEFT )  )  ||  ( anchor ==  ( TextBlockAnchor.BOTTOM_CENTER )  )  )  ||  ( anchor ==  ( TextBlockAnchor.BOTTOM_RIGHT )  )  )  {             yAdj =  (  ( float )   ( -height )  ) ;         }^294^^^^^267^311^[REMOVE] ^[METHOD] calculateOffsets [TYPE] float[] [PARAMETER] TextBlockAnchor anchor double width double height [CLASS] TextBlock   [TYPE]  boolean false  true  [TYPE]  double height  width  [TYPE]  List lines  [TYPE]  TextBlockAnchor anchor  [TYPE]  float xAdj  yAdj  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  float[] result 
[REPLACE]^else {^301^302^303^^^267^311^[REPLACE] else if  ( anchor == TextBlockAnchor.BOTTOM_LEFT || anchor == TextBlockAnchor.BOTTOM_CENTER || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^[METHOD] calculateOffsets [TYPE] float[] [PARAMETER] TextBlockAnchor anchor double width double height [CLASS] TextBlock   [TYPE]  boolean false  true  [TYPE]  double height  width  [TYPE]  List lines  [TYPE]  TextBlockAnchor anchor  [TYPE]  float xAdj  yAdj  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  float[] result 
[REPLACE]^yAdj =  ( float )  -height / 2.0f; ;^305^^^^^301^307^[REPLACE] yAdj =  ( float )  -height;^[METHOD] calculateOffsets [TYPE] float[] [PARAMETER] TextBlockAnchor anchor double width double height [CLASS] TextBlock   [TYPE]  boolean false  true  [TYPE]  double height  width  [TYPE]  List lines  [TYPE]  TextBlockAnchor anchor  [TYPE]  float xAdj  yAdj  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  float[] result 
[REPLACE]^yAdj =  ( float )  -height / 2.0f; ;^305^^^^^267^311^[REPLACE] yAdj =  ( float )  -height;^[METHOD] calculateOffsets [TYPE] float[] [PARAMETER] TextBlockAnchor anchor double width double height [CLASS] TextBlock   [TYPE]  boolean false  true  [TYPE]  double height  width  [TYPE]  List lines  [TYPE]  TextBlockAnchor anchor  [TYPE]  float xAdj  yAdj  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  float[] result 
[REPLACE]^yAdj =  ( float )  -height  ;^298^^^^^294^307^[REPLACE] yAdj =  ( float )  -height / 2.0f;^[METHOD] calculateOffsets [TYPE] float[] [PARAMETER] TextBlockAnchor anchor double width double height [CLASS] TextBlock   [TYPE]  boolean false  true  [TYPE]  double height  width  [TYPE]  List lines  [TYPE]  TextBlockAnchor anchor  [TYPE]  float xAdj  yAdj  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  float[] result 
[REPLACE]^yAdj =  ( float )  -height  ;^298^^^^^267^311^[REPLACE] yAdj =  ( float )  -height / 2.0f;^[METHOD] calculateOffsets [TYPE] float[] [PARAMETER] TextBlockAnchor anchor double width double height [CLASS] TextBlock   [TYPE]  boolean false  true  [TYPE]  double height  width  [TYPE]  List lines  [TYPE]  TextBlockAnchor anchor  [TYPE]  float xAdj  yAdj  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  float[] result 
[REPLACE]^yAdj  =  yAdj ;^291^^^^^287^307^[REPLACE] yAdj = 0.0f;^[METHOD] calculateOffsets [TYPE] float[] [PARAMETER] TextBlockAnchor anchor double width double height [CLASS] TextBlock   [TYPE]  boolean false  true  [TYPE]  double height  width  [TYPE]  List lines  [TYPE]  TextBlockAnchor anchor  [TYPE]  float xAdj  yAdj  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  float[] result 
[REPLACE]^else if  ( anchor == TextBlockAnchor.CENTER_LEFT ) {^294^295^296^^^267^311^[REPLACE] else if  ( anchor == TextBlockAnchor.CENTER_LEFT || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.CENTER_RIGHT )  {^[METHOD] calculateOffsets [TYPE] float[] [PARAMETER] TextBlockAnchor anchor double width double height [CLASS] TextBlock   [TYPE]  boolean false  true  [TYPE]  double height  width  [TYPE]  List lines  [TYPE]  TextBlockAnchor anchor  [TYPE]  float xAdj  yAdj  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  float[] result 
[REPLACE]^else if  (  anchor == TextBlockAnchor.BOTTOM_CENTER && anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^301^302^303^^^267^311^[REPLACE] else if  ( anchor == TextBlockAnchor.BOTTOM_LEFT || anchor == TextBlockAnchor.BOTTOM_CENTER || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^[METHOD] calculateOffsets [TYPE] float[] [PARAMETER] TextBlockAnchor anchor double width double height [CLASS] TextBlock   [TYPE]  boolean false  true  [TYPE]  double height  width  [TYPE]  List lines  [TYPE]  TextBlockAnchor anchor  [TYPE]  float xAdj  yAdj  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  float[] result 
[ADD]^^305^^^^^267^311^[ADD] yAdj =  ( float )  -height;^[METHOD] calculateOffsets [TYPE] float[] [PARAMETER] TextBlockAnchor anchor double width double height [CLASS] TextBlock   [TYPE]  boolean false  true  [TYPE]  double height  width  [TYPE]  List lines  [TYPE]  TextBlockAnchor anchor  [TYPE]  float xAdj  yAdj  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  float[] result 
[REPLACE]^yAdj  = null ;^291^^^^^267^311^[REPLACE] yAdj = 0.0f;^[METHOD] calculateOffsets [TYPE] float[] [PARAMETER] TextBlockAnchor anchor double width double height [CLASS] TextBlock   [TYPE]  boolean false  true  [TYPE]  double height  width  [TYPE]  List lines  [TYPE]  TextBlockAnchor anchor  [TYPE]  float xAdj  yAdj  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  float[] result 
[REPLACE]^result[1] = yAdj; ;^308^^^^^267^311^[REPLACE] result[0] = xAdj;^[METHOD] calculateOffsets [TYPE] float[] [PARAMETER] TextBlockAnchor anchor double width double height [CLASS] TextBlock   [TYPE]  boolean false  true  [TYPE]  double height  width  [TYPE]  List lines  [TYPE]  TextBlockAnchor anchor  [TYPE]  float xAdj  yAdj  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  float[] result 
[REPLACE]^result[1 * 0] = yAdj;^309^^^^^267^311^[REPLACE] result[1] = yAdj;^[METHOD] calculateOffsets [TYPE] float[] [PARAMETER] TextBlockAnchor anchor double width double height [CLASS] TextBlock   [TYPE]  boolean false  true  [TYPE]  double height  width  [TYPE]  List lines  [TYPE]  TextBlockAnchor anchor  [TYPE]  float xAdj  yAdj  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  float[] result 
[REPLACE]^return false;^310^^^^^267^311^[REPLACE] return result;^[METHOD] calculateOffsets [TYPE] float[] [PARAMETER] TextBlockAnchor anchor double width double height [CLASS] TextBlock   [TYPE]  boolean false  true  [TYPE]  double height  width  [TYPE]  List lines  [TYPE]  TextBlockAnchor anchor  [TYPE]  float xAdj  yAdj  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment  [TYPE]  float[] result 
[REPLACE]^if  ( obj  ||  this )  {^321^^^^^320^329^[REPLACE] if  ( obj == this )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] TextBlock   [TYPE]  List lines  [TYPE]  Object obj  [TYPE]  boolean false  true  [TYPE]  TextBlock block  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment 
[REPLACE]^return false;^322^^^^^320^329^[REPLACE] return true;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] TextBlock   [TYPE]  List lines  [TYPE]  Object obj  [TYPE]  boolean false  true  [TYPE]  TextBlock block  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment 
[REPLACE]^if  ( ! obj instanceof TextBlock )  {^324^^^^^320^329^[REPLACE] if  ( obj instanceof TextBlock )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] TextBlock   [TYPE]  List lines  [TYPE]  Object obj  [TYPE]  boolean false  true  [TYPE]  TextBlock block  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment 
[REPLACE]^return this.lines .calculateBounds ( null , null , 0 , null , true , null , null )  ;^326^^^^^320^329^[REPLACE] return this.lines.equals ( block.lines ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] TextBlock   [TYPE]  List lines  [TYPE]  Object obj  [TYPE]  boolean false  true  [TYPE]  TextBlock block  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment 
[REPLACE]^double height = 0.0;^325^^^^^320^329^[REPLACE] final TextBlock block =  ( TextBlock )  obj;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] TextBlock   [TYPE]  List lines  [TYPE]  Object obj  [TYPE]  boolean false  true  [TYPE]  TextBlock block  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment 
[REPLACE]^return this.lines.add ( block.lines ) ;^326^^^^^320^329^[REPLACE] return this.lines.equals ( block.lines ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] TextBlock   [TYPE]  List lines  [TYPE]  Object obj  [TYPE]  boolean false  true  [TYPE]  TextBlock block  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment 
[REPLACE]^return true;^328^^^^^320^329^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] TextBlock   [TYPE]  List lines  [TYPE]  Object obj  [TYPE]  boolean false  true  [TYPE]  TextBlock block  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment 
[REPLACE]^return  ( this.lines != null ? this.lines.size (  )  : 0 ) ;^337^^^^^336^338^[REPLACE] return  ( this.lines != null ? this.lines.hashCode (  )  : 0 ) ;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] TextBlock   [TYPE]  List lines  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment alignment  lineAlignment 
