[REPLACE]^private  boolean  copyright;^137^^^^^^^[REPLACE] private String copyright;^ [CLASS] BasicProjectInfo OptionalLibraryHolder  
[REPLACE]^if  ( copyright != true )  {^70^^^^^69^75^[REPLACE] if  ( libraryClass == null )  {^[METHOD] <init> [TYPE] String) [PARAMETER] String libraryClass [CLASS] BasicProjectInfo OptionalLibraryHolder   [TYPE]  List libraries  optionalLibraries  [TYPE]  String copyright  libraryClass  [TYPE]  Library library  [TYPE]  boolean false  true 
[ADD]^^70^71^72^73^^69^75^[ADD] if  ( libraryClass == null )  { throw new NullPointerException ( "LibraryClass must not be null." ) ; }^[METHOD] <init> [TYPE] String) [PARAMETER] String libraryClass [CLASS] BasicProjectInfo OptionalLibraryHolder   [TYPE]  List libraries  optionalLibraries  [TYPE]  String copyright  libraryClass  [TYPE]  Library library  [TYPE]  boolean false  true 
[REPLACE]^return ;^71^72^^^^69^75^[REPLACE] throw new NullPointerException ( "LibraryClass must not be null." ) ;^[METHOD] <init> [TYPE] String) [PARAMETER] String libraryClass [CLASS] BasicProjectInfo OptionalLibraryHolder   [TYPE]  List libraries  optionalLibraries  [TYPE]  String copyright  libraryClass  [TYPE]  Library library  [TYPE]  boolean false  true 
[REPLACE]^throw new NullPointerException  (" ")  ; ;^71^72^^^^69^75^[REPLACE] throw new NullPointerException ( "LibraryClass must not be null." ) ;^[METHOD] <init> [TYPE] String) [PARAMETER] String libraryClass [CLASS] BasicProjectInfo OptionalLibraryHolder   [TYPE]  List libraries  optionalLibraries  [TYPE]  String copyright  libraryClass  [TYPE]  Library library  [TYPE]  boolean false  true 
[REPLACE]^this.libraryClass =  null;^74^^^^^69^75^[REPLACE] this.libraryClass = libraryClass;^[METHOD] <init> [TYPE] String) [PARAMETER] String libraryClass [CLASS] BasicProjectInfo OptionalLibraryHolder   [TYPE]  List libraries  optionalLibraries  [TYPE]  String copyright  libraryClass  [TYPE]  Library library  [TYPE]  boolean false  true 
[ADD]^^74^^^^^69^75^[ADD] this.libraryClass = libraryClass;^[METHOD] <init> [TYPE] String) [PARAMETER] String libraryClass [CLASS] BasicProjectInfo OptionalLibraryHolder   [TYPE]  List libraries  optionalLibraries  [TYPE]  String copyright  libraryClass  [TYPE]  Library library  [TYPE]  boolean false  true 
[REPLACE]^if  ( library != null )  {^83^^^^^82^88^[REPLACE] if  ( library == null )  {^[METHOD] <init> [TYPE] Library) [PARAMETER] Library library [CLASS] BasicProjectInfo OptionalLibraryHolder   [TYPE]  List libraries  optionalLibraries  [TYPE]  String copyright  libraryClass  [TYPE]  Library library  [TYPE]  boolean false  true 
[REPLACE]^return ;^84^^^^^82^88^[REPLACE] throw new NullPointerException  (" ")  ;^[METHOD] <init> [TYPE] Library) [PARAMETER] Library library [CLASS] BasicProjectInfo OptionalLibraryHolder   [TYPE]  List libraries  optionalLibraries  [TYPE]  String copyright  libraryClass  [TYPE]  Library library  [TYPE]  boolean false  true 
[REPLACE]^this.library =  null;^86^^^^^82^88^[REPLACE] this.library = library;^[METHOD] <init> [TYPE] Library) [PARAMETER] Library library [CLASS] BasicProjectInfo OptionalLibraryHolder   [TYPE]  List libraries  optionalLibraries  [TYPE]  String copyright  libraryClass  [TYPE]  Library library  [TYPE]  boolean false  true 
[REPLACE]^this.libraryClass =  null.getClass (  ) .getName (  ) ;^87^^^^^82^88^[REPLACE] this.libraryClass = library.getClass (  ) .getName (  ) ;^[METHOD] <init> [TYPE] Library) [PARAMETER] Library library [CLASS] BasicProjectInfo OptionalLibraryHolder   [TYPE]  List libraries  optionalLibraries  [TYPE]  String copyright  libraryClass  [TYPE]  Library library  [TYPE]  boolean false  true 
[REPLACE]^this.optionalLibraries = new ArrayList (  ) ; ;^148^^^^^147^150^[REPLACE] this.libraries = new ArrayList (  ) ;^[METHOD] <init> [TYPE] BasicProjectInfo() [PARAMETER] [CLASS] BasicProjectInfo OptionalLibraryHolder   [TYPE]  List libraries  optionalLibraries  [TYPE]  String copyright  libraryClass  [TYPE]  Library library  [TYPE]  boolean false  true 
[REPLACE]^this.libraries = new ArrayList (  ) ; ;^149^^^^^147^150^[REPLACE] this.optionalLibraries = new ArrayList (  ) ;^[METHOD] <init> [TYPE] BasicProjectInfo() [PARAMETER] [CLASS] BasicProjectInfo OptionalLibraryHolder   [TYPE]  List libraries  optionalLibraries  [TYPE]  String copyright  libraryClass  [TYPE]  Library library  [TYPE]  boolean false  true 
[REPLACE]^setInfo ( info ) ;^162^^^^^160^167^[REPLACE] this (  ) ;^[METHOD] <init> [TYPE] String) [PARAMETER] String name String version String licence String info [CLASS] BasicProjectInfo OptionalLibraryHolder   [TYPE]  List libraries  optionalLibraries  [TYPE]  String copyright  info  libraryClass  licence  name  version  [TYPE]  Library library  [TYPE]  boolean false  true 
[REPLACE]^setName ( licence ) ;^163^^^^^160^167^[REPLACE] setName ( name ) ;^[METHOD] <init> [TYPE] String) [PARAMETER] String name String version String licence String info [CLASS] BasicProjectInfo OptionalLibraryHolder   [TYPE]  List libraries  optionalLibraries  [TYPE]  String copyright  info  libraryClass  licence  name  version  [TYPE]  Library library  [TYPE]  boolean false  true 
[REPLACE]^setVersion ( libraryClass ) ;^164^^^^^160^167^[REPLACE] setVersion ( version ) ;^[METHOD] <init> [TYPE] String) [PARAMETER] String name String version String licence String info [CLASS] BasicProjectInfo OptionalLibraryHolder   [TYPE]  List libraries  optionalLibraries  [TYPE]  String copyright  info  libraryClass  licence  name  version  [TYPE]  Library library  [TYPE]  boolean false  true 
[ADD]^^164^^^^^160^167^[ADD] setVersion ( version ) ;^[METHOD] <init> [TYPE] String) [PARAMETER] String name String version String licence String info [CLASS] BasicProjectInfo OptionalLibraryHolder   [TYPE]  List libraries  optionalLibraries  [TYPE]  String copyright  info  libraryClass  licence  name  version  [TYPE]  Library library  [TYPE]  boolean false  true 
[REPLACE]^setLicenceName ( name ) ;^165^^^^^160^167^[REPLACE] setLicenceName ( licence ) ;^[METHOD] <init> [TYPE] String) [PARAMETER] String name String version String licence String info [CLASS] BasicProjectInfo OptionalLibraryHolder   [TYPE]  List libraries  optionalLibraries  [TYPE]  String copyright  info  libraryClass  licence  name  version  [TYPE]  Library library  [TYPE]  boolean false  true 
[ADD]^^165^^^^^160^167^[ADD] setLicenceName ( licence ) ;^[METHOD] <init> [TYPE] String) [PARAMETER] String name String version String licence String info [CLASS] BasicProjectInfo OptionalLibraryHolder   [TYPE]  List libraries  optionalLibraries  [TYPE]  String copyright  info  libraryClass  licence  name  version  [TYPE]  Library library  [TYPE]  boolean false  true 
[REPLACE]^setInfo ( version ) ;^166^^^^^160^167^[REPLACE] setInfo ( info ) ;^[METHOD] <init> [TYPE] String) [PARAMETER] String name String version String licence String info [CLASS] BasicProjectInfo OptionalLibraryHolder   [TYPE]  List libraries  optionalLibraries  [TYPE]  String copyright  info  libraryClass  licence  name  version  [TYPE]  Library library  [TYPE]  boolean false  true 
[REPLACE]^this ( name, version, licenceName, version ) ;^181^^^^^178^183^[REPLACE] this ( name, version, licenceName, info ) ;^[METHOD] <init> [TYPE] String) [PARAMETER] String name String version String info String copyright String licenceName [CLASS] BasicProjectInfo OptionalLibraryHolder   [TYPE]  List libraries  optionalLibraries  [TYPE]  String copyright  info  libraryClass  licence  licenceName  name  version  [TYPE]  Library library  [TYPE]  boolean false  true 
[REMOVE]^super.setVersion ( version ) ;^181^^^^^178^183^[REMOVE] ^[METHOD] <init> [TYPE] String) [PARAMETER] String name String version String info String copyright String licenceName [CLASS] BasicProjectInfo OptionalLibraryHolder   [TYPE]  List libraries  optionalLibraries  [TYPE]  String copyright  info  libraryClass  licence  licenceName  name  version  [TYPE]  Library library  [TYPE]  boolean false  true 
[REPLACE]^setCopyright ( version ) ;^182^^^^^178^183^[REPLACE] setCopyright ( copyright ) ;^[METHOD] <init> [TYPE] String) [PARAMETER] String name String version String info String copyright String licenceName [CLASS] BasicProjectInfo OptionalLibraryHolder   [TYPE]  List libraries  optionalLibraries  [TYPE]  String copyright  info  libraryClass  licence  licenceName  name  version  [TYPE]  Library library  [TYPE]  boolean false  true 
[REMOVE]^setLicenceName ( licence ) ;^182^^^^^178^183^[REMOVE] ^[METHOD] <init> [TYPE] String) [PARAMETER] String name String version String info String copyright String licenceName [CLASS] BasicProjectInfo OptionalLibraryHolder   [TYPE]  List libraries  optionalLibraries  [TYPE]  String copyright  info  libraryClass  licence  licenceName  name  version  [TYPE]  Library library  [TYPE]  boolean false  true 
[REPLACE]^return null;^96^^^^^95^97^[REPLACE] return this.libraryClass;^[METHOD] getLibraryClass [TYPE] String [PARAMETER] [CLASS] BasicProjectInfo OptionalLibraryHolder   [TYPE]  List libraries  optionalLibraries  [TYPE]  String copyright  info  libraryClass  licence  licenceName  name  version  [TYPE]  Library library  [TYPE]  boolean false  true 
[REPLACE]^if  ( this.library != null )  {^105^^^^^104^109^[REPLACE] if  ( this.library == null )  {^[METHOD] getLibrary [TYPE] Library [PARAMETER] [CLASS] BasicProjectInfo OptionalLibraryHolder   [TYPE]  List libraries  optionalLibraries  [TYPE]  String copyright  info  libraryClass  licence  licenceName  name  version  [TYPE]  Library library  [TYPE]  boolean false  true 
[ADD]^this.library = loadLibrary ( this.libraryClass ) ;^105^106^107^^^104^109^[ADD] if  ( this.library == null )  { this.library = loadLibrary ( this.libraryClass ) ; }^[METHOD] getLibrary [TYPE] Library [PARAMETER] [CLASS] BasicProjectInfo OptionalLibraryHolder   [TYPE]  List libraries  optionalLibraries  [TYPE]  String copyright  info  libraryClass  licence  licenceName  name  version  [TYPE]  Library library  [TYPE]  boolean false  true 
[REPLACE]^this.library  =  this.library ;^106^^^^^104^109^[REPLACE] this.library = loadLibrary ( this.libraryClass ) ;^[METHOD] getLibrary [TYPE] Library [PARAMETER] [CLASS] BasicProjectInfo OptionalLibraryHolder   [TYPE]  List libraries  optionalLibraries  [TYPE]  String copyright  info  libraryClass  licence  licenceName  name  version  [TYPE]  Library library  [TYPE]  boolean false  true 
[ADD]^^106^^^^^104^109^[ADD] this.library = loadLibrary ( this.libraryClass ) ;^[METHOD] getLibrary [TYPE] Library [PARAMETER] [CLASS] BasicProjectInfo OptionalLibraryHolder   [TYPE]  List libraries  optionalLibraries  [TYPE]  String copyright  info  libraryClass  licence  licenceName  name  version  [TYPE]  Library library  [TYPE]  boolean false  true 
[REPLACE]^this.library ;^106^^^^^104^109^[REPLACE] this.library = loadLibrary ( this.libraryClass ) ;^[METHOD] getLibrary [TYPE] Library [PARAMETER] [CLASS] BasicProjectInfo OptionalLibraryHolder   [TYPE]  List libraries  optionalLibraries  [TYPE]  String copyright  info  libraryClass  licence  licenceName  name  version  [TYPE]  Library library  [TYPE]  boolean false  true 
[REPLACE]^return null;^108^^^^^104^109^[REPLACE] return this.library;^[METHOD] getLibrary [TYPE] Library [PARAMETER] [CLASS] BasicProjectInfo OptionalLibraryHolder   [TYPE]  List libraries  optionalLibraries  [TYPE]  String copyright  info  libraryClass  licence  licenceName  name  version  [TYPE]  Library library  [TYPE]  boolean false  true 
[REPLACE]^if  (version != null )  {^112^^^^^111^132^[REPLACE] if  ( classname == null )  {^[METHOD] loadLibrary [TYPE] Library [PARAMETER] String classname [CLASS] BasicProjectInfo OptionalLibraryHolder   [TYPE]  boolean false  true  [TYPE]  List libraries  optionalLibraries  [TYPE]  Class c  [TYPE]  String classname  copyright  info  libraryClass  licence  licenceName  name  version  [TYPE]  Library library  [TYPE]  Method m  [TYPE]  Exception e 
[REPLACE]^return true;^113^^^^^111^132^[REPLACE] return null;^[METHOD] loadLibrary [TYPE] Library [PARAMETER] String classname [CLASS] BasicProjectInfo OptionalLibraryHolder   [TYPE]  boolean false  true  [TYPE]  List libraries  optionalLibraries  [TYPE]  Class c  [TYPE]  String classname  copyright  info  libraryClass  licence  licenceName  name  version  [TYPE]  Library library  [TYPE]  Method m  [TYPE]  Exception e 
[REPLACE]^return this;^113^^^^^111^132^[REPLACE] return null;^[METHOD] loadLibrary [TYPE] Library [PARAMETER] String classname [CLASS] BasicProjectInfo OptionalLibraryHolder   [TYPE]  boolean false  true  [TYPE]  List libraries  optionalLibraries  [TYPE]  Class c  [TYPE]  String classname  copyright  info  libraryClass  licence  licenceName  name  version  [TYPE]  Library library  [TYPE]  Method m  [TYPE]  Exception e 
[ADD]^getClass (  )  ) .loadClass ( classname ) ;Method m = c.getMethod ( "getInstance",  ( Class[] )  null ) ;^115^116^117^118^119^111^132^[ADD] try { Class c = ObjectUtilities.getClassLoader ( getClass (  )  ) .loadClass ( classname ) ; try { Method m = c.getMethod ( "getInstance",  ( Class[] )  null ) ;^[METHOD] loadLibrary [TYPE] Library [PARAMETER] String classname [CLASS] BasicProjectInfo OptionalLibraryHolder   [TYPE]  boolean false  true  [TYPE]  List libraries  optionalLibraries  [TYPE]  Class c  [TYPE]  String classname  copyright  info  libraryClass  licence  licenceName  name  version  [TYPE]  Library library  [TYPE]  Method m  [TYPE]  Exception e 
[ADD]^Method m = c.getMethod ( "getInstance",  ( Class[] )  null ) ;return  ( Library )  m.invoke ( null,  ( Object[] )  null ) ;^118^119^120^121^^111^132^[ADD] try { Method m = c.getMethod ( "getInstance",  ( Class[] )  null ) ; return  ( Library )  m.invoke ( null,  ( Object[] )  null ) ; }^[METHOD] loadLibrary [TYPE] Library [PARAMETER] String classname [CLASS] BasicProjectInfo OptionalLibraryHolder   [TYPE]  boolean false  true  [TYPE]  List libraries  optionalLibraries  [TYPE]  Class c  [TYPE]  String classname  copyright  info  libraryClass  licence  licenceName  name  version  [TYPE]  Library library  [TYPE]  Method m  [TYPE]  Exception e 
[REPLACE]^return  ( Library )  m.invoke ( true,  ( Object[] )  true ) ;^120^^^^^111^132^[REPLACE] return  ( Library )  m.invoke ( null,  ( Object[] )  null ) ;^[METHOD] loadLibrary [TYPE] Library [PARAMETER] String classname [CLASS] BasicProjectInfo OptionalLibraryHolder   [TYPE]  boolean false  true  [TYPE]  List libraries  optionalLibraries  [TYPE]  Class c  [TYPE]  String classname  copyright  info  libraryClass  licence  licenceName  name  version  [TYPE]  Library library  [TYPE]  Method m  [TYPE]  Exception e 
[REPLACE]^Method m = c.getMethod ( "getInstance",  ( Class[] )  true ) ;^119^^^^^111^132^[REPLACE] Method m = c.getMethod ( "getInstance",  ( Class[] )  null ) ;^[METHOD] loadLibrary [TYPE] Library [PARAMETER] String classname [CLASS] BasicProjectInfo OptionalLibraryHolder   [TYPE]  boolean false  true  [TYPE]  List libraries  optionalLibraries  [TYPE]  Class c  [TYPE]  String classname  copyright  info  libraryClass  licence  licenceName  name  version  [TYPE]  Library library  [TYPE]  Method m  [TYPE]  Exception e 
[REPLACE]^return  ( Library )  m.invoke ( this,  ( Object[] )  this ) ;^120^^^^^111^132^[REPLACE] return  ( Library )  m.invoke ( null,  ( Object[] )  null ) ;^[METHOD] loadLibrary [TYPE] Library [PARAMETER] String classname [CLASS] BasicProjectInfo OptionalLibraryHolder   [TYPE]  boolean false  true  [TYPE]  List libraries  optionalLibraries  [TYPE]  Class c  [TYPE]  String classname  copyright  info  libraryClass  licence  licenceName  name  version  [TYPE]  Library library  [TYPE]  Method m  [TYPE]  Exception e 
[REPLACE]^return  ( Library )  m.invoke ( null,  ( Object[] )  null ) ;^125^^^^^111^132^[REPLACE] return  ( Library )  c.newInstance (  ) ;^[METHOD] loadLibrary [TYPE] Library [PARAMETER] String classname [CLASS] BasicProjectInfo OptionalLibraryHolder   [TYPE]  boolean false  true  [TYPE]  List libraries  optionalLibraries  [TYPE]  Class c  [TYPE]  String classname  copyright  info  libraryClass  licence  licenceName  name  version  [TYPE]  Library library  [TYPE]  Method m  [TYPE]  Exception e 
[REPLACE]^Class c = ObjectUtilities.getClassLoader ( getClass (  )  ) .setName ( classname ) ;^116^117^^^^111^132^[REPLACE] Class c = ObjectUtilities.getClassLoader ( getClass (  )  ) .loadClass ( classname ) ;^[METHOD] loadLibrary [TYPE] Library [PARAMETER] String classname [CLASS] BasicProjectInfo OptionalLibraryHolder   [TYPE]  boolean false  true  [TYPE]  List libraries  optionalLibraries  [TYPE]  Class c  [TYPE]  String classname  copyright  info  libraryClass  licence  licenceName  name  version  [TYPE]  Library library  [TYPE]  Method m  [TYPE]  Exception e 
[REPLACE]^return  ( Library )  m.invoke ( false,  ( Object[] )  false ) ;^120^^^^^111^132^[REPLACE] return  ( Library )  m.invoke ( null,  ( Object[] )  null ) ;^[METHOD] loadLibrary [TYPE] Library [PARAMETER] String classname [CLASS] BasicProjectInfo OptionalLibraryHolder   [TYPE]  boolean false  true  [TYPE]  List libraries  optionalLibraries  [TYPE]  Class c  [TYPE]  String classname  copyright  info  libraryClass  licence  licenceName  name  version  [TYPE]  Library library  [TYPE]  Method m  [TYPE]  Exception e 
[REPLACE]^Method m = c .newInstance (  )  ;^119^^^^^111^132^[REPLACE] Method m = c.getMethod ( "getInstance",  ( Class[] )  null ) ;^[METHOD] loadLibrary [TYPE] Library [PARAMETER] String classname [CLASS] BasicProjectInfo OptionalLibraryHolder   [TYPE]  boolean false  true  [TYPE]  List libraries  optionalLibraries  [TYPE]  Class c  [TYPE]  String classname  copyright  info  libraryClass  licence  licenceName  name  version  [TYPE]  Library library  [TYPE]  Method m  [TYPE]  Exception e 
[REPLACE]^return  ( Library )  c .getMethod ( licenceName , null )  ;^125^^^^^111^132^[REPLACE] return  ( Library )  c.newInstance (  ) ;^[METHOD] loadLibrary [TYPE] Library [PARAMETER] String classname [CLASS] BasicProjectInfo OptionalLibraryHolder   [TYPE]  boolean false  true  [TYPE]  List libraries  optionalLibraries  [TYPE]  Class c  [TYPE]  String classname  copyright  info  libraryClass  licence  licenceName  name  version  [TYPE]  Library library  [TYPE]  Method m  [TYPE]  Exception e 
[REPLACE]^return true;^130^^^^^111^132^[REPLACE] return null;^[METHOD] loadLibrary [TYPE] Library [PARAMETER] String classname [CLASS] BasicProjectInfo OptionalLibraryHolder   [TYPE]  boolean false  true  [TYPE]  List libraries  optionalLibraries  [TYPE]  Class c  [TYPE]  String classname  copyright  info  libraryClass  licence  licenceName  name  version  [TYPE]  Library library  [TYPE]  Method m  [TYPE]  Exception e 
[REPLACE]^Class c = ObjectUtilities.ObjectLoader ( getClass (  )  ) .loadClass ( name ) ;^116^117^^^^111^132^[REPLACE] Class c = ObjectUtilities.getClassLoader ( getClass (  )  ) .loadClass ( classname ) ;^[METHOD] loadLibrary [TYPE] Library [PARAMETER] String classname [CLASS] BasicProjectInfo OptionalLibraryHolder   [TYPE]  boolean false  true  [TYPE]  List libraries  optionalLibraries  [TYPE]  Class c  [TYPE]  String classname  copyright  info  libraryClass  licence  licenceName  name  version  [TYPE]  Library library  [TYPE]  Method m  [TYPE]  Exception e 
[REPLACE]^Method m = c.getMethod ( "getInstance",  ( Class[] )  false ) ;^119^^^^^111^132^[REPLACE] Method m = c.getMethod ( "getInstance",  ( Class[] )  null ) ;^[METHOD] loadLibrary [TYPE] Library [PARAMETER] String classname [CLASS] BasicProjectInfo OptionalLibraryHolder   [TYPE]  boolean false  true  [TYPE]  List libraries  optionalLibraries  [TYPE]  Class c  [TYPE]  String classname  copyright  info  libraryClass  licence  licenceName  name  version  [TYPE]  Library library  [TYPE]  Method m  [TYPE]  Exception e 
[REPLACE]^return null;^191^^^^^190^192^[REPLACE] return this.copyright;^[METHOD] getCopyright [TYPE] String [PARAMETER] [CLASS] BasicProjectInfo OptionalLibraryHolder   [TYPE]  List libraries  optionalLibraries  [TYPE]  String classname  copyright  info  libraryClass  licence  licenceName  name  version  [TYPE]  Library library  [TYPE]  boolean false  true 
[REPLACE]^this.copyright =  version;^200^^^^^199^201^[REPLACE] this.copyright = copyright;^[METHOD] setCopyright [TYPE] void [PARAMETER] String copyright [CLASS] BasicProjectInfo OptionalLibraryHolder   [TYPE]  List libraries  optionalLibraries  [TYPE]  String classname  copyright  info  libraryClass  licence  licenceName  name  version  [TYPE]  Library library  [TYPE]  boolean false  true 
[REPLACE]^super.setInfo ( licenceName ) ;^209^^^^^208^210^[REPLACE] super.setInfo ( info ) ;^[METHOD] setInfo [TYPE] void [PARAMETER] String info [CLASS] BasicProjectInfo OptionalLibraryHolder   [TYPE]  List libraries  optionalLibraries  [TYPE]  String classname  copyright  info  libraryClass  licence  licenceName  name  version  [TYPE]  Library library  [TYPE]  boolean false  true 
[REPLACE]^super .setName ( classname )  ;^218^^^^^217^219^[REPLACE] super.setLicenceName ( licence ) ;^[METHOD] setLicenceName [TYPE] void [PARAMETER] String licence [CLASS] BasicProjectInfo OptionalLibraryHolder   [TYPE]  List libraries  optionalLibraries  [TYPE]  String classname  copyright  info  libraryClass  licence  licenceName  name  version  [TYPE]  Library library  [TYPE]  boolean false  true 
[REPLACE]^super.setInfo ( name ) ;^227^^^^^226^228^[REPLACE] super.setName ( name ) ;^[METHOD] setName [TYPE] void [PARAMETER] String name [CLASS] BasicProjectInfo OptionalLibraryHolder   [TYPE]  List libraries  optionalLibraries  [TYPE]  String classname  copyright  info  libraryClass  licence  licenceName  name  version  [TYPE]  Library library  [TYPE]  boolean false  true 
[REPLACE]^super.setInfo ( version ) ;^236^^^^^235^237^[REPLACE] super.setVersion ( version ) ;^[METHOD] setVersion [TYPE] void [PARAMETER] String version [CLASS] BasicProjectInfo OptionalLibraryHolder   [TYPE]  List libraries  optionalLibraries  [TYPE]  String classname  copyright  info  libraryClass  licence  licenceName  name  version  [TYPE]  Library library  [TYPE]  boolean false  true 
[ADD]^^236^^^^^235^237^[ADD] super.setVersion ( version ) ;^[METHOD] setVersion [TYPE] void [PARAMETER] String version [CLASS] BasicProjectInfo OptionalLibraryHolder   [TYPE]  List libraries  optionalLibraries  [TYPE]  String classname  copyright  info  libraryClass  licence  licenceName  name  version  [TYPE]  Library library  [TYPE]  boolean false  true 
[REPLACE]^return  ( Library[] )  libraries.toArray ( new Library[libraries.size (  ) ] ) ;^245^246^^^^244^247^[REPLACE] return  ( Library[] )  this.libraries.toArray ( new Library[this.libraries.size (  ) ] ) ;^[METHOD] getLibraries [TYPE] Library[] [PARAMETER] [CLASS] BasicProjectInfo OptionalLibraryHolder   [TYPE]  List libraries  optionalLibraries  [TYPE]  String classname  copyright  info  libraryClass  licence  licenceName  name  version  [TYPE]  Library library  [TYPE]  boolean false  true 
[REPLACE]^if  ( library != null )  {^255^^^^^254^259^[REPLACE] if  ( library == null )  {^[METHOD] addLibrary [TYPE] void [PARAMETER] Library library [CLASS] BasicProjectInfo OptionalLibraryHolder   [TYPE]  List libraries  optionalLibraries  [TYPE]  String classname  copyright  info  libraryClass  licence  licenceName  name  version  [TYPE]  Library library  [TYPE]  boolean false  true 
[REPLACE]^throw new NullPointerException ( "LibraryClass must not be null." ) ; ;^256^^^^^254^259^[REPLACE] throw new NullPointerException  (" ")  ;^[METHOD] addLibrary [TYPE] void [PARAMETER] Library library [CLASS] BasicProjectInfo OptionalLibraryHolder   [TYPE]  List libraries  optionalLibraries  [TYPE]  String classname  copyright  info  libraryClass  licence  licenceName  name  version  [TYPE]  Library library  [TYPE]  boolean false  true 
[REPLACE]^this.libraries .toArray ( null )  ;^258^^^^^254^259^[REPLACE] this.libraries.add ( library ) ;^[METHOD] addLibrary [TYPE] void [PARAMETER] Library library [CLASS] BasicProjectInfo OptionalLibraryHolder   [TYPE]  List libraries  optionalLibraries  [TYPE]  String classname  copyright  info  libraryClass  licence  licenceName  name  version  [TYPE]  Library library  [TYPE]  boolean false  true 
[REPLACE]^Library l = holder.getLibrary (  ) ;^267^^^^^266^277^[REPLACE] ArrayList libraries = new ArrayList (  ) ;^[METHOD] getOptionalLibraries [TYPE] Library[] [PARAMETER] [CLASS] BasicProjectInfo OptionalLibraryHolder   [TYPE]  boolean false  true  [TYPE]  ArrayList libraries  [TYPE]  List libraries  optionalLibraries  [TYPE]  String classname  copyright  info  libraryClass  licence  licenceName  name  version  [TYPE]  Library l  library  [TYPE]  int i  [TYPE]  OptionalLibraryHolder holder 
[REPLACE]^if  ( l == null )  {^272^^^^^266^277^[REPLACE] if  ( l != null )  {^[METHOD] getOptionalLibraries [TYPE] Library[] [PARAMETER] [CLASS] BasicProjectInfo OptionalLibraryHolder   [TYPE]  boolean false  true  [TYPE]  ArrayList libraries  [TYPE]  List libraries  optionalLibraries  [TYPE]  String classname  copyright  info  libraryClass  licence  licenceName  name  version  [TYPE]  Library l  library  [TYPE]  int i  [TYPE]  OptionalLibraryHolder holder 
[REPLACE]^libraries.toArray ( l ) ;^273^^^^^266^277^[REPLACE] libraries.add ( l ) ;^[METHOD] getOptionalLibraries [TYPE] Library[] [PARAMETER] [CLASS] BasicProjectInfo OptionalLibraryHolder   [TYPE]  boolean false  true  [TYPE]  ArrayList libraries  [TYPE]  List libraries  optionalLibraries  [TYPE]  String classname  copyright  info  libraryClass  licence  licenceName  name  version  [TYPE]  Library l  library  [TYPE]  int i  [TYPE]  OptionalLibraryHolder holder 
[REPLACE]^for  ( int i = 0 ; i < this.optionalLibraries.size (  )  %  0 .5 ; i++ )  {^268^^^^^266^277^[REPLACE] for  ( int i = 0; i < this.optionalLibraries.size (  ) ; i++ )  {^[METHOD] getOptionalLibraries [TYPE] Library[] [PARAMETER] [CLASS] BasicProjectInfo OptionalLibraryHolder   [TYPE]  boolean false  true  [TYPE]  ArrayList libraries  [TYPE]  List libraries  optionalLibraries  [TYPE]  String classname  copyright  info  libraryClass  licence  licenceName  name  version  [TYPE]  Library l  library  [TYPE]  int i  [TYPE]  OptionalLibraryHolder holder 
[REPLACE]^if  ( l == this  )  {^272^^^^^266^277^[REPLACE] if  ( l != null )  {^[METHOD] getOptionalLibraries [TYPE] Library[] [PARAMETER] [CLASS] BasicProjectInfo OptionalLibraryHolder   [TYPE]  boolean false  true  [TYPE]  ArrayList libraries  [TYPE]  List libraries  optionalLibraries  [TYPE]  String classname  copyright  info  libraryClass  licence  licenceName  name  version  [TYPE]  Library l  library  [TYPE]  int i  [TYPE]  OptionalLibraryHolder holder 
[REPLACE]^libraries.toArray ( library ) ;^273^^^^^266^277^[REPLACE] libraries.add ( l ) ;^[METHOD] getOptionalLibraries [TYPE] Library[] [PARAMETER] [CLASS] BasicProjectInfo OptionalLibraryHolder   [TYPE]  boolean false  true  [TYPE]  ArrayList libraries  [TYPE]  List libraries  optionalLibraries  [TYPE]  String classname  copyright  info  libraryClass  licence  licenceName  name  version  [TYPE]  Library l  library  [TYPE]  int i  [TYPE]  OptionalLibraryHolder holder 
[REPLACE]^OptionalLibraryHolder holder = ( OptionalLibraryHolder )  this.optionalLibraries.size ( i ) ;^269^270^^^^266^277^[REPLACE] OptionalLibraryHolder holder = ( OptionalLibraryHolder )  this.optionalLibraries.get ( i ) ;^[METHOD] getOptionalLibraries [TYPE] Library[] [PARAMETER] [CLASS] BasicProjectInfo OptionalLibraryHolder   [TYPE]  boolean false  true  [TYPE]  ArrayList libraries  [TYPE]  List libraries  optionalLibraries  [TYPE]  String classname  copyright  info  libraryClass  licence  licenceName  name  version  [TYPE]  Library l  library  [TYPE]  int i  [TYPE]  OptionalLibraryHolder holder 
[ADD]^^269^270^^^^266^277^[ADD] OptionalLibraryHolder holder = ( OptionalLibraryHolder )  this.optionalLibraries.get ( i ) ;^[METHOD] getOptionalLibraries [TYPE] Library[] [PARAMETER] [CLASS] BasicProjectInfo OptionalLibraryHolder   [TYPE]  boolean false  true  [TYPE]  ArrayList libraries  [TYPE]  List libraries  optionalLibraries  [TYPE]  String classname  copyright  info  libraryClass  licence  licenceName  name  version  [TYPE]  Library l  library  [TYPE]  int i  [TYPE]  OptionalLibraryHolder holder 
[REPLACE]^OptionalLibraryHolder holder = ( OptionalLibraryHolder )  this.optionalLibraries.get ( i ) ;^271^^^^^266^277^[REPLACE] Library l = holder.getLibrary (  ) ;^[METHOD] getOptionalLibraries [TYPE] Library[] [PARAMETER] [CLASS] BasicProjectInfo OptionalLibraryHolder   [TYPE]  boolean false  true  [TYPE]  ArrayList libraries  [TYPE]  List libraries  optionalLibraries  [TYPE]  String classname  copyright  info  libraryClass  licence  licenceName  name  version  [TYPE]  Library l  library  [TYPE]  int i  [TYPE]  OptionalLibraryHolder holder 
[REPLACE]^for  ( int i = 0 ; i < this.optionalLibraries.size (  ) ; i++ )  {^268^^^^^266^277^[REPLACE] for  ( int i = 0; i < this.optionalLibraries.size (  ) ; i++ )  {^[METHOD] getOptionalLibraries [TYPE] Library[] [PARAMETER] [CLASS] BasicProjectInfo OptionalLibraryHolder   [TYPE]  boolean false  true  [TYPE]  ArrayList libraries  [TYPE]  List libraries  optionalLibraries  [TYPE]  String classname  copyright  info  libraryClass  licence  licenceName  name  version  [TYPE]  Library l  library  [TYPE]  int i  [TYPE]  OptionalLibraryHolder holder 
[ADD]^^268^269^270^271^^266^277^[ADD] for  ( int i = 0; i < this.optionalLibraries.size (  ) ; i++ )  { OptionalLibraryHolder holder = ( OptionalLibraryHolder )  this.optionalLibraries.get ( i ) ; Library l = holder.getLibrary (  ) ;^[METHOD] getOptionalLibraries [TYPE] Library[] [PARAMETER] [CLASS] BasicProjectInfo OptionalLibraryHolder   [TYPE]  boolean false  true  [TYPE]  ArrayList libraries  [TYPE]  List libraries  optionalLibraries  [TYPE]  String classname  copyright  info  libraryClass  licence  licenceName  name  version  [TYPE]  Library l  library  [TYPE]  int i  [TYPE]  OptionalLibraryHolder holder 
[REPLACE]^Library l = holder .loadLibrary ( name )  ;^271^^^^^266^277^[REPLACE] Library l = holder.getLibrary (  ) ;^[METHOD] getOptionalLibraries [TYPE] Library[] [PARAMETER] [CLASS] BasicProjectInfo OptionalLibraryHolder   [TYPE]  boolean false  true  [TYPE]  ArrayList libraries  [TYPE]  List libraries  optionalLibraries  [TYPE]  String classname  copyright  info  libraryClass  licence  licenceName  name  version  [TYPE]  Library l  library  [TYPE]  int i  [TYPE]  OptionalLibraryHolder holder 
[REPLACE]^return  ( Library[] )  this.libraries.toArray ( new Library[this.libraries.size (  ) ] ) ;^276^^^^^266^277^[REPLACE] return  ( Library[] )  libraries.toArray ( new Library[libraries.size (  ) ] ) ;^[METHOD] getOptionalLibraries [TYPE] Library[] [PARAMETER] [CLASS] BasicProjectInfo OptionalLibraryHolder   [TYPE]  boolean false  true  [TYPE]  ArrayList libraries  [TYPE]  List libraries  optionalLibraries  [TYPE]  String classname  copyright  info  libraryClass  licence  licenceName  name  version  [TYPE]  Library l  library  [TYPE]  int i  [TYPE]  OptionalLibraryHolder holder 
[REPLACE]^if  ( name != null )  {^285^^^^^284^290^[REPLACE] if  ( libraryClass == null )  {^[METHOD] addOptionalLibrary [TYPE] void [PARAMETER] String libraryClass [CLASS] BasicProjectInfo OptionalLibraryHolder   [TYPE]  List libraries  optionalLibraries  [TYPE]  String classname  copyright  info  libraryClass  licence  licenceName  name  version  [TYPE]  Library l  library  [TYPE]  boolean false  true 
[REPLACE]^throw new NullPointerException ( "LibraryClass must not be null." ) ; ;^286^^^^^284^290^[REPLACE] throw new NullPointerException  (" ")  ;^[METHOD] addOptionalLibrary [TYPE] void [PARAMETER] String libraryClass [CLASS] BasicProjectInfo OptionalLibraryHolder   [TYPE]  List libraries  optionalLibraries  [TYPE]  String classname  copyright  info  libraryClass  licence  licenceName  name  version  [TYPE]  Library l  library  [TYPE]  boolean false  true 
[ADD]^^286^^^^^284^290^[ADD] throw new NullPointerException  (" ")  ;^[METHOD] addOptionalLibrary [TYPE] void [PARAMETER] String libraryClass [CLASS] BasicProjectInfo OptionalLibraryHolder   [TYPE]  List libraries  optionalLibraries  [TYPE]  String classname  copyright  info  libraryClass  licence  licenceName  name  version  [TYPE]  Library l  library  [TYPE]  boolean false  true 
[REPLACE]^return ;^286^^^^^284^290^[REPLACE] throw new NullPointerException  (" ")  ;^[METHOD] addOptionalLibrary [TYPE] void [PARAMETER] String libraryClass [CLASS] BasicProjectInfo OptionalLibraryHolder   [TYPE]  List libraries  optionalLibraries  [TYPE]  String classname  copyright  info  libraryClass  licence  licenceName  name  version  [TYPE]  Library l  library  [TYPE]  boolean false  true 
[REPLACE]^this.optionalLibraries.get ( new OptionalLibraryHolder ( libraryClass )  ) ;^288^289^^^^284^290^[REPLACE] this.optionalLibraries.add ( new OptionalLibraryHolder ( libraryClass )  ) ;^[METHOD] addOptionalLibrary [TYPE] void [PARAMETER] String libraryClass [CLASS] BasicProjectInfo OptionalLibraryHolder   [TYPE]  List libraries  optionalLibraries  [TYPE]  String classname  copyright  info  libraryClass  licence  licenceName  name  version  [TYPE]  Library l  library  [TYPE]  boolean false  true 
[REPLACE]^if  ( l != null )  {^301^^^^^300^305^[REPLACE] if  ( library == null )  {^[METHOD] addOptionalLibrary [TYPE] void [PARAMETER] Library library [CLASS] BasicProjectInfo OptionalLibraryHolder   [TYPE]  List libraries  optionalLibraries  [TYPE]  String classname  copyright  info  libraryClass  licence  licenceName  name  version  [TYPE]  Library l  library  [TYPE]  boolean false  true 
[REPLACE]^return ;^302^^^^^300^305^[REPLACE] throw new NullPointerException  (" ")  ;^[METHOD] addOptionalLibrary [TYPE] void [PARAMETER] Library library [CLASS] BasicProjectInfo OptionalLibraryHolder   [TYPE]  List libraries  optionalLibraries  [TYPE]  String classname  copyright  info  libraryClass  licence  licenceName  name  version  [TYPE]  Library l  library  [TYPE]  boolean false  true 
[REPLACE]^throw new NullPointerException ( "LibraryClass must not be null." ) ; ;^302^^^^^300^305^[REPLACE] throw new NullPointerException  (" ")  ;^[METHOD] addOptionalLibrary [TYPE] void [PARAMETER] Library library [CLASS] BasicProjectInfo OptionalLibraryHolder   [TYPE]  List libraries  optionalLibraries  [TYPE]  String classname  copyright  info  libraryClass  licence  licenceName  name  version  [TYPE]  Library l  library  [TYPE]  boolean false  true 
[ADD]^^302^^^^^300^305^[ADD] throw new NullPointerException  (" ")  ;^[METHOD] addOptionalLibrary [TYPE] void [PARAMETER] Library library [CLASS] BasicProjectInfo OptionalLibraryHolder   [TYPE]  List libraries  optionalLibraries  [TYPE]  String classname  copyright  info  libraryClass  licence  licenceName  name  version  [TYPE]  Library l  library  [TYPE]  boolean false  true 
[REPLACE]^this.optionalLibraries.add ( new OptionalLibraryHolder ( l )  ) ;^304^^^^^300^305^[REPLACE] this.optionalLibraries.add ( new OptionalLibraryHolder ( library )  ) ;^[METHOD] addOptionalLibrary [TYPE] void [PARAMETER] Library library [CLASS] BasicProjectInfo OptionalLibraryHolder   [TYPE]  List libraries  optionalLibraries  [TYPE]  String classname  copyright  info  libraryClass  licence  licenceName  name  version  [TYPE]  Library l  library  [TYPE]  boolean false  true 
[REPLACE]^if  ( libraryClass != this )  {^70^^^^^69^75^[REPLACE] if  ( libraryClass == null )  {^[METHOD] <init> [TYPE] String) [PARAMETER] String libraryClass [CLASS] OptionalLibraryHolder   [TYPE]  String libraryClass  [TYPE]  Library library  [TYPE]  boolean false  true 
[REPLACE]^throw new NullPointerException  (" ")  ; ;^71^72^^^^69^75^[REPLACE] throw new NullPointerException ( "LibraryClass must not be null." ) ;^[METHOD] <init> [TYPE] String) [PARAMETER] String libraryClass [CLASS] OptionalLibraryHolder   [TYPE]  String libraryClass  [TYPE]  Library library  [TYPE]  boolean false  true 
[REPLACE]^this.libraryClass =  null;^74^^^^^69^75^[REPLACE] this.libraryClass = libraryClass;^[METHOD] <init> [TYPE] String) [PARAMETER] String libraryClass [CLASS] OptionalLibraryHolder   [TYPE]  String libraryClass  [TYPE]  Library library  [TYPE]  boolean false  true 
[REPLACE]^if  ( library != null )  {^83^^^^^82^88^[REPLACE] if  ( library == null )  {^[METHOD] <init> [TYPE] Library) [PARAMETER] Library library [CLASS] OptionalLibraryHolder   [TYPE]  String libraryClass  [TYPE]  Library library  [TYPE]  boolean false  true 
[REPLACE]^return ;^84^^^^^82^88^[REPLACE] throw new NullPointerException  (" ")  ;^[METHOD] <init> [TYPE] Library) [PARAMETER] Library library [CLASS] OptionalLibraryHolder   [TYPE]  String libraryClass  [TYPE]  Library library  [TYPE]  boolean false  true 
[REPLACE]^throw new NullPointerException ( "LibraryClass must not be null." ) ; ;^84^^^^^82^88^[REPLACE] throw new NullPointerException  (" ")  ;^[METHOD] <init> [TYPE] Library) [PARAMETER] Library library [CLASS] OptionalLibraryHolder   [TYPE]  String libraryClass  [TYPE]  Library library  [TYPE]  boolean false  true 
[REPLACE]^this.library =  null;^86^^^^^82^88^[REPLACE] this.library = library;^[METHOD] <init> [TYPE] Library) [PARAMETER] Library library [CLASS] OptionalLibraryHolder   [TYPE]  String libraryClass  [TYPE]  Library library  [TYPE]  boolean false  true 
[REPLACE]^this.libraryClass =  null.getClass (  ) .getName (  ) ;^87^^^^^82^88^[REPLACE] this.libraryClass = library.getClass (  ) .getName (  ) ;^[METHOD] <init> [TYPE] Library) [PARAMETER] Library library [CLASS] OptionalLibraryHolder   [TYPE]  String libraryClass  [TYPE]  Library library  [TYPE]  boolean false  true 
[ADD]^^87^^^^^82^88^[ADD] this.libraryClass = library.getClass (  ) .getName (  ) ;^[METHOD] <init> [TYPE] Library) [PARAMETER] Library library [CLASS] OptionalLibraryHolder   [TYPE]  String libraryClass  [TYPE]  Library library  [TYPE]  boolean false  true 
[REPLACE]^return null;^96^^^^^95^97^[REPLACE] return this.libraryClass;^[METHOD] getLibraryClass [TYPE] String [PARAMETER] [CLASS] OptionalLibraryHolder   [TYPE]  String libraryClass  [TYPE]  Library library  [TYPE]  boolean false  true 
[REPLACE]^if  (library != null )  {^105^^^^^104^109^[REPLACE] if  ( this.library == null )  {^[METHOD] getLibrary [TYPE] Library [PARAMETER] [CLASS] OptionalLibraryHolder   [TYPE]  String libraryClass  [TYPE]  Library library  [TYPE]  boolean false  true 
[REPLACE]^this.library  =  this.library ;^106^^^^^104^109^[REPLACE] this.library = loadLibrary ( this.libraryClass ) ;^[METHOD] getLibrary [TYPE] Library [PARAMETER] [CLASS] OptionalLibraryHolder   [TYPE]  String libraryClass  [TYPE]  Library library  [TYPE]  boolean false  true 
[REPLACE]^this.library ;^106^^^^^104^109^[REPLACE] this.library = loadLibrary ( this.libraryClass ) ;^[METHOD] getLibrary [TYPE] Library [PARAMETER] [CLASS] OptionalLibraryHolder   [TYPE]  String libraryClass  [TYPE]  Library library  [TYPE]  boolean false  true 
[ADD]^^106^^^^^104^109^[ADD] this.library = loadLibrary ( this.libraryClass ) ;^[METHOD] getLibrary [TYPE] Library [PARAMETER] [CLASS] OptionalLibraryHolder   [TYPE]  String libraryClass  [TYPE]  Library library  [TYPE]  boolean false  true 
[REPLACE]^return null;^108^^^^^104^109^[REPLACE] return this.library;^[METHOD] getLibrary [TYPE] Library [PARAMETER] [CLASS] OptionalLibraryHolder   [TYPE]  String libraryClass  [TYPE]  Library library  [TYPE]  boolean false  true 
[REPLACE]^if  (libraryClass != this )  {^112^^^^^111^132^[REPLACE] if  ( classname == null )  {^[METHOD] loadLibrary [TYPE] Library [PARAMETER] String classname [CLASS] OptionalLibraryHolder   [TYPE]  Class c  [TYPE]  String classname  libraryClass  [TYPE]  Library library  [TYPE]  Method m  [TYPE]  boolean false  true  [TYPE]  Exception e 
[REPLACE]^return false;^113^^^^^111^132^[REPLACE] return null;^[METHOD] loadLibrary [TYPE] Library [PARAMETER] String classname [CLASS] OptionalLibraryHolder   [TYPE]  Class c  [TYPE]  String classname  libraryClass  [TYPE]  Library library  [TYPE]  Method m  [TYPE]  boolean false  true  [TYPE]  Exception e 
[REPLACE]^return true;^113^^^^^111^132^[REPLACE] return null;^[METHOD] loadLibrary [TYPE] Library [PARAMETER] String classname [CLASS] OptionalLibraryHolder   [TYPE]  Class c  [TYPE]  String classname  libraryClass  [TYPE]  Library library  [TYPE]  Method m  [TYPE]  boolean false  true  [TYPE]  Exception e 
[ADD]^getClass (  )  ) .loadClass ( classname ) ;Method m = c.getMethod ( "getInstance",  ( Class[] )  null ) ;^115^116^117^118^119^111^132^[ADD] try { Class c = ObjectUtilities.getClassLoader ( getClass (  )  ) .loadClass ( classname ) ; try { Method m = c.getMethod ( "getInstance",  ( Class[] )  null ) ;^[METHOD] loadLibrary [TYPE] Library [PARAMETER] String classname [CLASS] OptionalLibraryHolder   [TYPE]  Class c  [TYPE]  String classname  libraryClass  [TYPE]  Library library  [TYPE]  Method m  [TYPE]  boolean false  true  [TYPE]  Exception e 
[ADD]^Method m = c.getMethod ( "getInstance",  ( Class[] )  null ) ;return  ( Library )  m.invoke ( null,  ( Object[] )  null ) ;^118^119^120^121^^111^132^[ADD] try { Method m = c.getMethod ( "getInstance",  ( Class[] )  null ) ; return  ( Library )  m.invoke ( null,  ( Object[] )  null ) ; }^[METHOD] loadLibrary [TYPE] Library [PARAMETER] String classname [CLASS] OptionalLibraryHolder   [TYPE]  Class c  [TYPE]  String classname  libraryClass  [TYPE]  Library library  [TYPE]  Method m  [TYPE]  boolean false  true  [TYPE]  Exception e 
[REPLACE]^return  ( Library )  m.invoke ( false,  ( Object[] )  false ) ;^120^^^^^111^132^[REPLACE] return  ( Library )  m.invoke ( null,  ( Object[] )  null ) ;^[METHOD] loadLibrary [TYPE] Library [PARAMETER] String classname [CLASS] OptionalLibraryHolder   [TYPE]  Class c  [TYPE]  String classname  libraryClass  [TYPE]  Library library  [TYPE]  Method m  [TYPE]  boolean false  true  [TYPE]  Exception e 
[REPLACE]^Method m = c.getMethod ( "getInstance",  ( Class[] )  true ) ;^119^^^^^111^132^[REPLACE] Method m = c.getMethod ( "getInstance",  ( Class[] )  null ) ;^[METHOD] loadLibrary [TYPE] Library [PARAMETER] String classname [CLASS] OptionalLibraryHolder   [TYPE]  Class c  [TYPE]  String classname  libraryClass  [TYPE]  Library library  [TYPE]  Method m  [TYPE]  boolean false  true  [TYPE]  Exception e 
[ADD]^^119^^^^^111^132^[ADD] Method m = c.getMethod ( "getInstance",  ( Class[] )  null ) ;^[METHOD] loadLibrary [TYPE] Library [PARAMETER] String classname [CLASS] OptionalLibraryHolder   [TYPE]  Class c  [TYPE]  String classname  libraryClass  [TYPE]  Library library  [TYPE]  Method m  [TYPE]  boolean false  true  [TYPE]  Exception e 
[REPLACE]^return  ( Library )  m.invoke ( this,  ( Object[] )  this ) ;^120^^^^^111^132^[REPLACE] return  ( Library )  m.invoke ( null,  ( Object[] )  null ) ;^[METHOD] loadLibrary [TYPE] Library [PARAMETER] String classname [CLASS] OptionalLibraryHolder   [TYPE]  Class c  [TYPE]  String classname  libraryClass  [TYPE]  Library library  [TYPE]  Method m  [TYPE]  boolean false  true  [TYPE]  Exception e 
[REPLACE]^return  ( Library )  m.invoke ( null,  ( Object[] )  null ) ;^125^^^^^111^132^[REPLACE] return  ( Library )  c.newInstance (  ) ;^[METHOD] loadLibrary [TYPE] Library [PARAMETER] String classname [CLASS] OptionalLibraryHolder   [TYPE]  Class c  [TYPE]  String classname  libraryClass  [TYPE]  Library library  [TYPE]  Method m  [TYPE]  boolean false  true  [TYPE]  Exception e 
[REPLACE]^Class c = ObjectUtilities.getClassLoader ( getClass (  )  ) .loadClass ( libraryClass ) ;^116^117^^^^111^132^[REPLACE] Class c = ObjectUtilities.getClassLoader ( getClass (  )  ) .loadClass ( classname ) ;^[METHOD] loadLibrary [TYPE] Library [PARAMETER] String classname [CLASS] OptionalLibraryHolder   [TYPE]  Class c  [TYPE]  String classname  libraryClass  [TYPE]  Library library  [TYPE]  Method m  [TYPE]  boolean false  true  [TYPE]  Exception e 
[REPLACE]^Method m = c.getMethod ( "getInstance",  ( Class[] )  this ) ;^119^^^^^111^132^[REPLACE] Method m = c.getMethod ( "getInstance",  ( Class[] )  null ) ;^[METHOD] loadLibrary [TYPE] Library [PARAMETER] String classname [CLASS] OptionalLibraryHolder   [TYPE]  Class c  [TYPE]  String classname  libraryClass  [TYPE]  Library library  [TYPE]  Method m  [TYPE]  boolean false  true  [TYPE]  Exception e 
[ADD]^^122^123^124^^^111^132^[ADD] catch ( Exception e )  {  }^[METHOD] loadLibrary [TYPE] Library [PARAMETER] String classname [CLASS] OptionalLibraryHolder   [TYPE]  Class c  [TYPE]  String classname  libraryClass  [TYPE]  Library library  [TYPE]  Method m  [TYPE]  boolean false  true  [TYPE]  Exception e 
[REPLACE]^return  ( Library )  m.invoke ( true,  ( Object[] )  true ) ;^120^^^^^111^132^[REPLACE] return  ( Library )  m.invoke ( null,  ( Object[] )  null ) ;^[METHOD] loadLibrary [TYPE] Library [PARAMETER] String classname [CLASS] OptionalLibraryHolder   [TYPE]  Class c  [TYPE]  String classname  libraryClass  [TYPE]  Library library  [TYPE]  Method m  [TYPE]  boolean false  true  [TYPE]  Exception e 
[REPLACE]^return false;^130^^^^^111^132^[REPLACE] return null;^[METHOD] loadLibrary [TYPE] Library [PARAMETER] String classname [CLASS] OptionalLibraryHolder   [TYPE]  Class c  [TYPE]  String classname  libraryClass  [TYPE]  Library library  [TYPE]  Method m  [TYPE]  boolean false  true  [TYPE]  Exception e 
