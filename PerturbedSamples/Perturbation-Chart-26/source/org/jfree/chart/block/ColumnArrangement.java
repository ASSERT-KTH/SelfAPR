[REPLACE]^private static final long serialVersionUID ;^63^^^^^^^[REPLACE] private static final long serialVersionUID = -5315388482898581555L;^ [CLASS] ColumnArrangement  
[REPLACE]^private float verticalGap;^75^^^^^^^[REPLACE] private double verticalGap;^ [CLASS] ColumnArrangement  
[REPLACE]^this.verticalAlignment = vAlign; ;^94^^^^^91^98^[REPLACE] this.horizontalAlignment = hAlign;^[METHOD] <init> [TYPE] VerticalAlignment,double,double) [PARAMETER] HorizontalAlignment hAlign VerticalAlignment vAlign double hGap double vGap [CLASS] ColumnArrangement   [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment 
[REPLACE]^this.horizontalAlignment = hAlign; ;^95^^^^^91^98^[REPLACE] this.verticalAlignment = vAlign;^[METHOD] <init> [TYPE] VerticalAlignment,double,double) [PARAMETER] HorizontalAlignment hAlign VerticalAlignment vAlign double hGap double vGap [CLASS] ColumnArrangement   [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment 
[REPLACE]^this.horizontalGap =  verticalGap;^96^^^^^91^98^[REPLACE] this.horizontalGap = hGap;^[METHOD] <init> [TYPE] VerticalAlignment,double,double) [PARAMETER] HorizontalAlignment hAlign VerticalAlignment vAlign double hGap double vGap [CLASS] ColumnArrangement   [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment 
[REPLACE]^this.verticalGap =  verticalGap;^97^^^^^91^98^[REPLACE] this.verticalGap = vGap;^[METHOD] <init> [TYPE] VerticalAlignment,double,double) [PARAMETER] HorizontalAlignment hAlign VerticalAlignment vAlign double hGap double vGap [CLASS] ColumnArrangement   [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment 
[REPLACE]^LengthConstraintType w = constraint.getHeightConstraintType (  ) ;^128^^^^^126^165^[REPLACE] LengthConstraintType w = constraint.getWidthConstraintType (  ) ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^LengthConstraintType h = constraint.getWidthConstraintType (  ) ;^129^^^^^126^165^[REPLACE] LengthConstraintType h = constraint.getHeightConstraintType (  ) ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[ADD]^^129^^^^^126^165^[ADD] LengthConstraintType h = constraint.getHeightConstraintType (  ) ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( w  &&  LengthConstraintType.NONE )  {^130^^^^^126^165^[REPLACE] if  ( w == LengthConstraintType.NONE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^else {^141^^^^^126^165^[REPLACE] else if  ( w == LengthConstraintType.FIXED )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[ADD]^^141^142^143^144^^126^165^[ADD] else if  ( w == LengthConstraintType.FIXED )  { if  ( h == LengthConstraintType.NONE )  { throw new RuntimeException  (" ")  ; }^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^else if  ( w  ||  LengthConstraintType.RANGE )  {^152^^^^^126^165^[REPLACE] else if  ( w == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  ||  LengthConstraintType.NONE )  {^153^^^^^126^165^[REPLACE] if  ( h == LengthConstraintType.NONE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^else {^156^^^^^126^165^[REPLACE] else if  ( h == LengthConstraintType.FIXED )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[ADD]^^156^157^158^^^126^165^[ADD] else if  ( h == LengthConstraintType.FIXED )  { return arrangeRF ( container, g2, constraint ) ; }^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^else if  ( h  &&  LengthConstraintType.RANGE )  {^159^^^^^126^165^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REMOVE]^if  ( h ==  ( LengthConstraintType.RANGE )  )  {     throw new RuntimeException ( "Not implemented." ) ; }^159^^^^^126^165^[REMOVE] ^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^return arrangeFF ( container, g2, constraint ) ;^160^^^^^126^165^[REPLACE] return arrangeRR ( container, g2, constraint ) ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^return arrangeFF ( container, g2, constraint ) ;^157^^^^^126^165^[REPLACE] return arrangeRF ( container, g2, constraint ) ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  &&  LengthConstraintType.RANGE )  {^159^^^^^126^165^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^return ;^154^^^^^126^165^[REPLACE] throw new RuntimeException  (" ")  ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[ADD]^return arrangeRF ( container, g2, constraint ) ;^156^157^158^^^126^165^[ADD] else if  ( h == LengthConstraintType.FIXED )  { return arrangeRF ( container, g2, constraint ) ; }^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  ||  LengthConstraintType.RANGE )  {^159^^^^^126^165^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[ADD]^^159^160^161^^^126^165^[ADD] else if  ( h == LengthConstraintType.RANGE )  { return arrangeRR ( container, g2, constraint ) ; }^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  !=  LengthConstraintType.RANGE )  {^159^^^^^126^165^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  !=  LengthConstraintType.NONE )  {^153^^^^^126^165^[REPLACE] if  ( h == LengthConstraintType.NONE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  ||  LengthConstraintType.FIXED )  {^156^^^^^126^165^[REPLACE] else if  ( h == LengthConstraintType.FIXED )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^else if  ( h  !=  LengthConstraintType.RANGE )  {^159^^^^^126^165^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^else {^159^^^^^126^165^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[ADD]^^154^^^^^126^165^[ADD] throw new RuntimeException  (" ")  ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^else if  ( h  ||  LengthConstraintType.FIXED )  {^156^^^^^126^165^[REPLACE] else if  ( h == LengthConstraintType.FIXED )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^else if  ( h  ||  LengthConstraintType.RANGE )  {^159^^^^^126^165^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  !=  LengthConstraintType.NONE )  {^142^^^^^126^165^[REPLACE] if  ( h == LengthConstraintType.NONE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^else {^145^^^^^126^165^[REPLACE] else if  ( h == LengthConstraintType.FIXED )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^else {^148^^^^^126^165^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^return ;^149^^^^^126^165^[REPLACE] throw new RuntimeException  (" ")  ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[ADD]^^149^^^^^126^165^[ADD] throw new RuntimeException  (" ")  ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^return arrangeNF ( container, g2, constraint ) ;^146^^^^^126^165^[REPLACE] return arrangeFF ( container, g2, constraint ) ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  ||  LengthConstraintType.RANGE )  {^148^^^^^126^165^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[ADD]^^148^149^150^^^126^165^[ADD] else if  ( h == LengthConstraintType.RANGE )  { throw new RuntimeException  (" ")  ; }^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^return ;^143^^^^^126^165^[REPLACE] throw new RuntimeException  (" ")  ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[ADD]^^143^^^^^126^165^[ADD] throw new RuntimeException  (" ")  ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^else if  ( h  !=  LengthConstraintType.FIXED )  {^145^^^^^126^165^[REPLACE] else if  ( h == LengthConstraintType.FIXED )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REMOVE]^if  ( h ==  ( LengthConstraintType.RANGE )  )  {     throw new RuntimeException ( "Not implemented." ) ; }^145^^^^^126^165^[REMOVE] ^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  &&  LengthConstraintType.NONE )  {^142^^^^^126^165^[REPLACE] if  ( h == LengthConstraintType.NONE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^else if  ( h  &&  LengthConstraintType.FIXED )  {^145^^^^^126^165^[REPLACE] else if  ( h == LengthConstraintType.FIXED )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[ADD]^return arrangeFF ( container, g2, constraint ) ;^145^146^147^^^126^165^[ADD] else if  ( h == LengthConstraintType.FIXED )  { return arrangeFF ( container, g2, constraint ) ; }^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^else if  ( h  ||  LengthConstraintType.RANGE )  {^148^^^^^126^165^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REMOVE]^if  ( h ==  ( LengthConstraintType.FIXED )  )  {     throw new RuntimeException ( "Not implemented." ) ; }else     if  ( h ==  ( LengthConstraintType.RANGE )  )  {         throw new RuntimeException ( "Not implemented." ) ;     }^148^^^^^126^165^[REMOVE] ^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( w  ||  LengthConstraintType.RANGE )  {^152^^^^^126^165^[REPLACE] else if  ( w == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REMOVE]^if  ( h ==  ( LengthConstraintType.NONE )  )  {     throw new RuntimeException ( "Not implemented." ) ; }else     if  ( h ==  ( LengthConstraintType.FIXED )  )  {         return arrangeFF ( container, g2, constraint ) ;     }else         if  ( h ==  ( LengthConstraintType.RANGE )  )  {             throw new RuntimeException ( "Not implemented." ) ;         }^153^^^^^126^165^[REMOVE] ^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^else if  ( h  !=  LengthConstraintType.FIXED )  {^156^^^^^126^165^[REPLACE] else if  ( h == LengthConstraintType.FIXED )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REMOVE]^if  ( h ==  ( LengthConstraintType.NONE )  )  {     throw new RuntimeException ( "Not implemented." ) ; }else     if  ( h ==  ( LengthConstraintType.FIXED )  )  {         return arrangeFF ( container, g2, constraint ) ;     }else         if  ( h ==  ( LengthConstraintType.RANGE )  )  {             throw new RuntimeException ( "Not implemented." ) ;         }^156^^^^^126^165^[REMOVE] ^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[ADD]^return arrangeRR ( container, g2, constraint ) ;^159^160^161^^^126^165^[ADD] else if  ( h == LengthConstraintType.RANGE )  { return arrangeRR ( container, g2, constraint ) ; }^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  !=  LengthConstraintType.NONE )  {^131^^^^^126^165^[REPLACE] if  ( h == LengthConstraintType.NONE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^else {^134^^^^^126^165^[REPLACE] else if  ( h == LengthConstraintType.FIXED )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[ADD]^^134^135^136^^^126^165^[ADD] else if  ( h == LengthConstraintType.FIXED )  { throw new RuntimeException  (" ")  ; }^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  &&  LengthConstraintType.RANGE )  {^137^^^^^126^165^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^return ;^138^^^^^126^165^[REPLACE] throw new RuntimeException  (" ")  ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[ADD]^^138^^^^^126^165^[ADD] throw new RuntimeException  (" ")  ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^return ;^135^^^^^126^165^[REPLACE] throw new RuntimeException  (" ")  ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[ADD]^^135^^^^^126^165^[ADD] throw new RuntimeException  (" ")  ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^else {^137^^^^^126^165^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[ADD]^^137^138^139^^^126^165^[ADD] else if  ( h == LengthConstraintType.RANGE )  { throw new RuntimeException  (" ")  ; }^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^return arrangeFF ( container, g2, c ) ;^132^^^^^126^165^[REPLACE] return arrangeNN ( container, g2 ) ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^else if  ( h  ||  LengthConstraintType.FIXED )  {^134^^^^^126^165^[REPLACE] else if  ( h == LengthConstraintType.FIXED )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  !=  LengthConstraintType.RANGE )  {^137^^^^^126^165^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[ADD]^^131^132^133^^^126^165^[ADD] if  ( h == LengthConstraintType.NONE )  { return arrangeNN ( container, g2 ) ; }^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REMOVE]^if  ( h ==  ( LengthConstraintType.FIXED )  )  {     throw new RuntimeException ( "Not implemented." ) ; }else     if  ( h ==  ( LengthConstraintType.RANGE )  )  {         throw new RuntimeException ( "Not implemented." ) ;     }^137^^^^^126^165^[REMOVE] ^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^else if  ( h  !=  LengthConstraintType.RANGE )  {^137^^^^^126^165^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( w  !=  LengthConstraintType.FIXED )  {^141^^^^^126^165^[REPLACE] else if  ( w == LengthConstraintType.FIXED )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( w  !=  LengthConstraintType.RANGE )  {^152^^^^^126^165^[REPLACE] else if  ( w == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  &&  LengthConstraintType.FIXED )  {^156^^^^^126^165^[REPLACE] else if  ( h == LengthConstraintType.FIXED )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  &&  LengthConstraintType.NONE )  {^153^^^^^126^165^[REPLACE] if  ( h == LengthConstraintType.NONE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  ||  LengthConstraintType.NONE )  {^142^^^^^126^165^[REPLACE] if  ( h == LengthConstraintType.NONE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  !=  LengthConstraintType.FIXED )  {^145^^^^^126^165^[REPLACE] else if  ( h == LengthConstraintType.FIXED )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[ADD]^^145^146^147^^^126^165^[ADD] else if  ( h == LengthConstraintType.FIXED )  { return arrangeFF ( container, g2, constraint ) ; }^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^else if  ( h  !=  LengthConstraintType.RANGE )  {^148^^^^^126^165^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[ADD]^^142^143^144^^^126^165^[ADD] if  ( h == LengthConstraintType.NONE )  { throw new RuntimeException  (" ")  ; }^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  ||  LengthConstraintType.FIXED )  {^145^^^^^126^165^[REPLACE] else if  ( h == LengthConstraintType.FIXED )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  !=  LengthConstraintType.RANGE )  {^148^^^^^126^165^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  &&  LengthConstraintType.RANGE )  {^148^^^^^126^165^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^else {^152^^^^^126^165^[REPLACE] else if  ( w == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[ADD]^^152^153^154^155^^126^165^[ADD] else if  ( w == LengthConstraintType.RANGE )  { if  ( h == LengthConstraintType.NONE )  { throw new RuntimeException  (" ")  ; }^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[ADD]^^153^154^155^^^126^165^[ADD] if  ( h == LengthConstraintType.NONE )  { throw new RuntimeException  (" ")  ; }^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^return  new Size2D ( maxWidth, height )  ;^163^^^^^126^165^[REPLACE] return new Size2D (  ) ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^return arrangeFF ( container, g2, constraint ) ;^182^^^^^179^183^[REPLACE] return arrangeNF ( container, g2, constraint ) ;^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^LengthConstraintType w = constraint.getWidthConstraintType (  ) ;^200^^^^^198^250^[REPLACE] List blocks = container.getBlocks (  ) ;^[METHOD] arrangeNF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInColumn  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[ADD]^^200^^^^^198^250^[ADD] List blocks = container.getBlocks (  ) ;^[METHOD] arrangeNF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInColumn  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^double height = constraint.getHeightRange (  ) ;^202^^^^^198^250^[REPLACE] double height = constraint.getHeight (  ) ;^[METHOD] arrangeNF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInColumn  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( height  >  0.0 )  {^203^^^^^198^250^[REPLACE] if  ( height <= 0.0 )  {^[METHOD] arrangeNF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInColumn  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[ADD]^^203^204^205^^^198^250^[ADD] if  ( height <= 0.0 )  { height = Double.POSITIVE_INFINITY; }^[METHOD] arrangeNF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInColumn  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^height  =  height ;^204^^^^^198^250^[REPLACE] height = Double.POSITIVE_INFINITY;^[METHOD] arrangeNF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInColumn  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^height  = null ;^204^^^^^198^250^[REPLACE] height = Double.POSITIVE_INFINITY;^[METHOD] arrangeNF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInColumn  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^double x = 2.0d;^207^^^^^198^250^[REPLACE] double x = 0.0;^[METHOD] arrangeNF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInColumn  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^double y = 0.0D;^208^^^^^198^250^[REPLACE] double y = 0.0;^[METHOD] arrangeNF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInColumn  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^double maxWidth = 4.0d;^209^^^^^198^250^[REPLACE] double maxWidth = 0.0;^[METHOD] arrangeNF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInColumn  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^List blocks = container.getBlocks (  ) ;^210^^^^^198^250^[REPLACE] List itemsInColumn = new ArrayList (  ) ;^[METHOD] arrangeNF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInColumn  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^if (y + size.height  !=  height) {^214^^^^^198^250^[REPLACE] if  ( y + size.height <= height )  {^[METHOD] arrangeNF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInColumn  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( blockCount > 1 )  {^223^^^^^214^247^[REPLACE] if  ( itemsInColumn.isEmpty (  )  )  {^[METHOD] arrangeNF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInColumn  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[ADD]^^223^224^225^226^227^214^247^[ADD] if  ( itemsInColumn.isEmpty (  )  )  {  block.setBounds ( new Rectangle2D.Double ( x, y, size.width, Math.min ( size.height, height - y )^[METHOD] arrangeNF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInColumn  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^x = x + maxWidth +x;^236^^^^^223^246^[REPLACE] x = x + maxWidth + this.horizontalGap;^[METHOD] arrangeNF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInColumn  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^y = 0.0D;^237^^^^^223^246^[REPLACE] y = 0.0;^[METHOD] arrangeNF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInColumn  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^maxWidth =  null.width;^238^^^^^223^246^[REPLACE] maxWidth = size.width;^[METHOD] arrangeNF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInColumn  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^y = size.height  &&  this.verticalGap;^244^^^^^223^246^[REPLACE] y = size.height + this.verticalGap;^[METHOD] arrangeNF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInColumn  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[ADD]^^244^^^^^223^246^[ADD] y = size.height + this.verticalGap;^[METHOD] arrangeNF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInColumn  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^y = 0.0D;^230^^^^^214^247^[REPLACE] y = 0.0;^[METHOD] arrangeNF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInColumn  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^x = x + maxWidth + this.horizontalGap; ;^231^^^^^214^247^[REPLACE] x = x + size.width + this.horizontalGap;^[METHOD] arrangeNF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInColumn  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^y = 1.0d;^230^^^^^214^247^[REPLACE] y = 0.0;^[METHOD] arrangeNF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInColumn  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^x = x + maxWidth + verticalGap;^236^^^^^214^247^[REPLACE] x = x + maxWidth + this.horizontalGap;^[METHOD] arrangeNF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInColumn  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[ADD]^^236^^^^^214^247^[ADD] x = x + maxWidth + this.horizontalGap;^[METHOD] arrangeNF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInColumn  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^y = 0.0D;^237^^^^^214^247^[REPLACE] y = 0.0;^[METHOD] arrangeNF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInColumn  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^maxWidth =  null.width;^238^^^^^214^247^[REPLACE] maxWidth = size.width;^[METHOD] arrangeNF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInColumn  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^y = size.height  ||  this.verticalGap;^244^^^^^214^247^[REPLACE] y = size.height + this.verticalGap;^[METHOD] arrangeNF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInColumn  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^y = y  &&  size.height  &&  this.verticalGap;^219^^^^^198^250^[REPLACE] y = y + size.height + this.verticalGap;^[METHOD] arrangeNF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInColumn  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^maxWidth = Math.max ( sizes[i].width, maxWidth ) ; ;^220^^^^^198^250^[REPLACE] maxWidth = Math.max ( maxWidth, size.width ) ;^[METHOD] arrangeNF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInColumn  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( blockCount > 1 )  {^223^^^^^198^250^[REPLACE] if  ( itemsInColumn.isEmpty (  )  )  {^[METHOD] arrangeNF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInColumn  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[ADD]^^223^224^225^226^227^198^250^[ADD] if  ( itemsInColumn.isEmpty (  )  )  {  block.setBounds ( new Rectangle2D.Double ( x, y, size.width, Math.min ( size.height, height - y )^[METHOD] arrangeNF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInColumn  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^x = x + size.width + this.horizontalGap; ;^236^^^^^223^246^[REPLACE] x = x + maxWidth + this.horizontalGap;^[METHOD] arrangeNF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInColumn  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[ADD]^^236^^^^^223^246^[ADD] x = x + maxWidth + this.horizontalGap;^[METHOD] arrangeNF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInColumn  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^y = size.height  ||  this.verticalGap;^244^^^^^223^246^[REPLACE] y = size.height + this.verticalGap;^[METHOD] arrangeNF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInColumn  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^y = 2.0d;^230^^^^^198^250^[REPLACE] y = 0.0;^[METHOD] arrangeNF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInColumn  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[ADD]^^230^231^^^^198^250^[ADD] y = 0.0; x = x + size.width + this.horizontalGap;^[METHOD] arrangeNF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInColumn  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^x = x + maxWidth + this.horizontalGap; ;^231^^^^^198^250^[REPLACE] x = x + size.width + this.horizontalGap;^[METHOD] arrangeNF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInColumn  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^for  ( int i = 0; i < blocks.size (  )  - 1; i++ )  {^211^^^^^198^250^[REPLACE] for  ( int i = 0; i < blocks.size (  ) ; i++ )  {^[METHOD] arrangeNF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInColumn  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[ADD]^^211^212^213^214^215^198^250^[ADD] for  ( int i = 0; i < blocks.size (  ) ; i++ )  { Block block =  ( Block )  blocks.get ( i ) ; Size2D size = block.arrange ( g2, RectangleConstraint.NONE ) ; if  ( y + size.height <= height )  { itemsInColumn.add ( block ) ;^[METHOD] arrangeNF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInColumn  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^if (y + size.height  ==  height) {^214^^^^^198^250^[REPLACE] if  ( y + size.height <= height )  {^[METHOD] arrangeNF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInColumn  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^y = 2.0d;^237^^^^^223^246^[REPLACE] y = 0.0;^[METHOD] arrangeNF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInColumn  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^y = size.height  &  this.verticalGap;^244^^^^^223^246^[REPLACE] y = size.height + this.verticalGap;^[METHOD] arrangeNF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInColumn  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^x = x  ==  size.width  ==  this.horizontalGap;^231^^^^^214^247^[REPLACE] x = x + size.width + this.horizontalGap;^[METHOD] arrangeNF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInColumn  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^x = x  |  size.width  |  this.horizontalGap;^231^^^^^214^247^[REPLACE] x = x + size.width + this.horizontalGap;^[METHOD] arrangeNF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInColumn  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[ADD]^^231^^^^^214^247^[ADD] x = x + size.width + this.horizontalGap;^[METHOD] arrangeNF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInColumn  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^x = x + size.width + this.horizontalGap; ;^236^^^^^214^247^[REPLACE] x = x + maxWidth + this.horizontalGap;^[METHOD] arrangeNF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInColumn  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^y = size.height  ==  this.verticalGap;^244^^^^^214^247^[REPLACE] y = size.height + this.verticalGap;^[METHOD] arrangeNF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInColumn  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^y = size.height + this.verticalGap; ;^219^^^^^198^250^[REPLACE] y = y + size.height + this.verticalGap;^[METHOD] arrangeNF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInColumn  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^x = x  &  maxWidth  &  this.horizontalGap;^236^^^^^223^246^[REPLACE] x = x + maxWidth + this.horizontalGap;^[METHOD] arrangeNF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInColumn  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^y = y + size.height + this.verticalGap; ;^244^^^^^223^246^[REPLACE] y = size.height + this.verticalGap;^[METHOD] arrangeNF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInColumn  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^y = 0.0D;^230^^^^^198^250^[REPLACE] y = 0.0;^[METHOD] arrangeNF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInColumn  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^x = x  |  size.width  |  this.horizontalGap;^231^^^^^198^250^[REPLACE] x = x + size.width + this.horizontalGap;^[METHOD] arrangeNF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInColumn  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[ADD]^^231^^^^^198^250^[ADD] x = x + size.width + this.horizontalGap;^[METHOD] arrangeNF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInColumn  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^y = y  !=  size.height  !=  this.verticalGap;^219^^^^^198^250^[REPLACE] y = y + size.height + this.verticalGap;^[METHOD] arrangeNF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInColumn  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[ADD]^^220^^^^^198^250^[ADD] maxWidth = Math.max ( maxWidth, size.width ) ;^[METHOD] arrangeNF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInColumn  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^x = x + maxWidth +x;^236^^^^^198^250^[REPLACE] x = x + maxWidth + this.horizontalGap;^[METHOD] arrangeNF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInColumn  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^y = 0.0D;^237^^^^^198^250^[REPLACE] y = 0.0;^[METHOD] arrangeNF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInColumn  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[ADD]^^237^238^^^^198^250^[ADD] y = 0.0; maxWidth = size.width;^[METHOD] arrangeNF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInColumn  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^maxWidth =  null.width;^238^^^^^198^250^[REPLACE] maxWidth = size.width;^[METHOD] arrangeNF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInColumn  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^y = size.height  ^  this.verticalGap;^244^^^^^198^250^[REPLACE] y = size.height + this.verticalGap;^[METHOD] arrangeNF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInColumn  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^Block block =  ( Block )  blocks.isEmpty ( i ) ;^212^^^^^198^250^[REPLACE] Block block =  ( Block )  blocks.get ( i ) ;^[METHOD] arrangeNF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInColumn  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^Size2D s1 = arrangeNN ( container, g2 ) ;^213^^^^^198^250^[REPLACE] Size2D size = block.arrange ( g2, RectangleConstraint.NONE ) ;^[METHOD] arrangeNF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInColumn  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^y = y  <=  size.height  <=  this.verticalGap;^219^^^^^198^250^[REPLACE] y = y + size.height + this.verticalGap;^[METHOD] arrangeNF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInColumn  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^x = x  ||  size.width  ||  this.horizontalGap;^231^^^^^198^250^[REPLACE] x = x + size.width + this.horizontalGap;^[METHOD] arrangeNF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInColumn  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^x = x + size.width + this.horizontalGap; ;^236^^^^^198^250^[REPLACE] x = x + maxWidth + this.horizontalGap;^[METHOD] arrangeNF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInColumn  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^y = size.height  ==  this.verticalGap;^244^^^^^198^250^[REPLACE] y = size.height + this.verticalGap;^[METHOD] arrangeNF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInColumn  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[ADD]^^244^^^^^198^250^[ADD] y = size.height + this.verticalGap;^[METHOD] arrangeNF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInColumn  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^for  ( int i = 0 ; i < blocks.size (  ) ; i++ )  {^211^^^^^198^250^[REPLACE] for  ( int i = 0; i < blocks.size (  ) ; i++ )  {^[METHOD] arrangeNF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInColumn  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^return new Size2D ( x + maxWidth, constraint.getHeightRange (  )  ) ;^249^^^^^198^250^[REPLACE] return new Size2D ( x + maxWidth, constraint.getHeight (  )  ) ;^[METHOD] arrangeNF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInColumn  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^Size2D s = arrangeNF ( container, g2, constraint ) ;^257^^^^^252^267^[REPLACE] Size2D s1 = arrangeNN ( container, g2 ) ;^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  Size2D s1  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint c  constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( c.getHeightRange (  ) .contains ( s1.height )  )  {^258^^^^^252^267^[REPLACE] if  ( constraint.getHeightRange (  ) .contains ( s1.height )  )  {^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  Size2D s1  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint c  constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^return arrangeNN ( container, g2 ) ;^265^^^^^252^267^[REPLACE] return arrangeRF ( container, g2, c ) ;^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  Size2D s1  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint c  constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^RectangleConstraint c = c.toFixedHeight ( constraint.getHeightRange (  ) .getUpperBound (  ) ) ;^262^263^264^^^252^267^[REPLACE] RectangleConstraint c = constraint.toFixedHeight ( constraint.getHeightRange (  ) .getUpperBound (  ) ) ;^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  Size2D s1  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint c  constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^return s;^259^^^^^252^267^[REPLACE] return s1;^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  Size2D s1  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint c  constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^return arrangeRF ( constraintontainer, g2, c ) ;^265^^^^^252^267^[REPLACE] return arrangeRF ( container, g2, c ) ;^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  Size2D s1  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint c  constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^Size2D s = arrangeNF ( container, g2, c ) ;^282^^^^^279^292^[REPLACE] Size2D s = arrangeNF ( container, g2, constraint ) ;^[METHOD] arrangeRF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint c  constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( constraint.getHeightRange (  ) .contains ( s1.height )  )  {^283^^^^^279^292^[REPLACE] if  ( constraint.getWidthRange (  ) .contains ( s.width )  )  {^[METHOD] arrangeRF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint c  constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^return arrangeFF ( container, g2, constraint ) ;^290^^^^^279^292^[REPLACE] return arrangeFF ( container, g2, c ) ;^[METHOD] arrangeRF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint c  constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^RectangleConstraint c = constraint.toFixedWidth ( constraint.getHeightRange (  ) .constrain ( s.getWidth (  )  ) ) ;^287^288^289^^^279^292^[REPLACE] RectangleConstraint c = constraint.toFixedWidth ( constraint.getWidthRange (  ) .constrain ( s.getWidth (  )  ) ) ;^[METHOD] arrangeRF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint c  constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^return s1;^284^^^^^279^292^[REPLACE] return s;^[METHOD] arrangeRF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint c  constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^RectangleConstraint c = c.toFixedWidth ( constraint.Size2DRange (  ) .constrain ( s.getWidth (  )  ) ) ;^287^288^289^^^279^292^[REPLACE] RectangleConstraint c = constraint.toFixedWidth ( constraint.getWidthRange (  ) .constrain ( s.getWidth (  )  ) ) ;^[METHOD] arrangeRF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint c  constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[ADD]^^287^288^289^^^279^292^[ADD] RectangleConstraint c = constraint.toFixedWidth ( constraint.getWidthRange (  ) .constrain ( s.getWidth (  )  ) ) ;^[METHOD] arrangeRF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] ColumnArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint c  constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^double y = 3.0d;^304^^^^^303^341^[REPLACE] double y = 0.0;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] ColumnArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^double height = 0.0d;^305^^^^^303^341^[REPLACE] double height = 0.0;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] ColumnArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[ADD]^double maxWidth = 0.0;^305^306^^^^303^341^[ADD] double height = 0.0; double maxWidth = 0.0;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] ColumnArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^double maxWidth = 0.0D;^306^^^^^303^341^[REPLACE] double maxWidth = 0.0;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] ColumnArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^LengthConstraintType w = constraint.getWidthConstraintType (  ) ;^307^^^^^303^341^[REPLACE] List blocks = container.getBlocks (  ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] ColumnArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[ADD]^^307^308^^^^303^341^[ADD] List blocks = container.getBlocks (  ) ; int blockCount = blocks.size (  ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] ColumnArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^int blockCount = blocks.clear (  ) ;^308^^^^^303^341^[REPLACE] int blockCount = blocks.size (  ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] ColumnArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( blockCount  <  0 )  {^309^^^^^303^341^[REPLACE] if  ( blockCount > 0 )  {^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] ColumnArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[ADD]^Size2D[] sizes = new Size2D[blocks.size (  ) ];^309^310^311^312^313^303^341^[ADD] if  ( blockCount > 0 )  { Size2D[] sizes = new Size2D[blocks.size (  ) ]; for  ( int i = 0; i < blocks.size (  ) ; i++ )  { Block block =  ( Block )  blocks.get ( i ) ; sizes[i] = block.arrange ( g2, RectangleConstraint.NONE ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] ColumnArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( blockCount  !=  1 )  {^323^^^^^303^341^[REPLACE] if  ( blockCount > 1 )  {^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] ColumnArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^height =verticalGap + this.verticalGap *  ( blockCount - 1 ) ;^324^^^^^303^341^[REPLACE] height = height + this.verticalGap *  ( blockCount - 1 ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] ColumnArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( horizontalAlignment  ==  HorizontalAlignment.LEFT )  {^326^^^^^303^341^[REPLACE] if  ( this.horizontalAlignment != HorizontalAlignment.LEFT )  {^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] ColumnArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^if  (horizontalAlignment  !=  HorizontalAlignment.CENTER )  {^329^330^^^^303^341^[REPLACE] if  ( this.horizontalAlignment == HorizontalAlignment.CENTER )  {^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] ColumnArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( this.horizontalAlignment  &&  HorizontalAlignment.RIGHT )  {^333^334^^^^303^341^[REPLACE] else if  ( this.horizontalAlignment == HorizontalAlignment.RIGHT )  {^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] ColumnArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^for  ( int i = 0; i < blocks.size (  )  - 4; i++ )  {^327^^^^^303^341^[REPLACE] for  ( int i = 0; i < blocks.size (  ) ; i++ )  {^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] ColumnArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^if  (horizontalAlignment  ||  HorizontalAlignment.CENTER )  {^329^330^^^^303^341^[REPLACE] if  ( this.horizontalAlignment == HorizontalAlignment.CENTER )  {^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] ColumnArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^else {^333^334^^^^303^341^[REPLACE] else if  ( this.horizontalAlignment == HorizontalAlignment.RIGHT )  {^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] ColumnArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REMOVE]^if  (  ( this.horizontalAlignment )  !=  ( that.horizontalAlignment )  )  {     return false; }^333^^^^^303^341^[REMOVE] ^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] ColumnArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[ADD]^^333^334^^336^^303^341^[ADD] else if  ( this.horizontalAlignment == HorizontalAlignment.RIGHT )  { }^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] ColumnArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^for  ( int i = 0 ; i < blocks.size (  ) ; i++ )  {^327^^^^^303^341^[REPLACE] for  ( int i = 0; i < blocks.size (  ) ; i++ )  {^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] ColumnArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( this.horizontalAlignment  &&  HorizontalAlignment.CENTER )  {^329^330^^^^303^341^[REPLACE] if  ( this.horizontalAlignment == HorizontalAlignment.CENTER )  {^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] ColumnArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[ADD]^^329^330^^332^^303^341^[ADD] if  ( this.horizontalAlignment == HorizontalAlignment.CENTER )  { }^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] ColumnArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^for  ( int i = 0 ; i < blocks.size (  )  + 5; i++ )  {^311^^^^^303^341^[REPLACE] for  ( int i = 0; i < blocks.size (  ) ; i++ )  {^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] ColumnArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[ADD]^^311^312^313^314^315^303^341^[ADD] for  ( int i = 0; i < blocks.size (  ) ; i++ )  { Block block =  ( Block )  blocks.get ( i ) ; sizes[i] = block.arrange ( g2, RectangleConstraint.NONE ) ; height = height + sizes[i].getHeight (  ) ; maxWidth = Math.max ( sizes[i].width, maxWidth ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] ColumnArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^sizes[i]  = null ;^313^^^^^303^341^[REPLACE] sizes[i] = block.arrange ( g2, RectangleConstraint.NONE ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] ColumnArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^height = height  &&  sizes[i].getHeight();^314^^^^^303^341^[REPLACE] height = height + sizes[i].getHeight (  ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] ColumnArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^maxWidth = Math.max ( maxWidth, size.width ) ; ;^315^^^^^303^341^[REPLACE] maxWidth = Math.max ( sizes[i].width, maxWidth ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] ColumnArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^y = y + size.height + this.verticalGap; ;^321^^^^^303^341^[REPLACE] y = y + sizes[i].height + this.verticalGap;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] ColumnArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[ADD]^^321^^^^^303^341^[ADD] y = y + sizes[i].height + this.verticalGap;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] ColumnArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^Block block =  ( Block )  blocks.isEmpty ( i ) ;^312^^^^^303^341^[REPLACE] Block block =  ( Block )  blocks.get ( i ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] ColumnArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^for  ( int i = 0; i < blocks.size (  )  *  0.5 ; i++ )  {^327^^^^^303^341^[REPLACE] for  ( int i = 0; i < blocks.size (  ) ; i++ )  {^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] ColumnArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[ADD]^^327^328^329^330^^303^341^[ADD] for  ( int i = 0; i < blocks.size (  ) ; i++ )  {  if  ( this.horizontalAlignment == HorizontalAlignment.CENTER )  {^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] ColumnArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( horizontalAlignment  &&  HorizontalAlignment.RIGHT )  {^333^334^^^^303^341^[REPLACE] else if  ( this.horizontalAlignment == HorizontalAlignment.RIGHT )  {^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] ColumnArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^sizes[i] ;^313^^^^^303^341^[REPLACE] sizes[i] = block.arrange ( g2, RectangleConstraint.NONE ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] ColumnArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^height = height +verticalGap();^314^^^^^303^341^[REPLACE] height = height + sizes[i].getHeight (  ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] ColumnArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^y = y  &  sizes[i].height  &  this.verticalGap;^321^^^^^303^341^[REPLACE] y = y + sizes[i].height + this.verticalGap;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] ColumnArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^verticalGap = height + this.verticalGap *  ( blockCount - 1 ) ;^324^^^^^303^341^[REPLACE] height = height + this.verticalGap *  ( blockCount - 1 ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] ColumnArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^Size2D[].clears = new Size2D[blocks.size (  ) ];^310^^^^^303^341^[REPLACE] Size2D[] sizes = new Size2D[blocks.size (  ) ];^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] ColumnArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[ADD]^^310^^^^^303^341^[ADD] Size2D[] sizes = new Size2D[blocks.size (  ) ];^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] ColumnArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^for  ( int i = 0 ; i < blocks.size (  ) ; i++ )  {^311^^^^^303^341^[REPLACE] for  ( int i = 0; i < blocks.size (  ) ; i++ )  {^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] ColumnArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( blockCount  <  4 )  {^323^^^^^303^341^[REPLACE] if  ( blockCount > 1 )  {^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] ColumnArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[ADD]^^323^324^325^^^303^341^[ADD] if  ( blockCount > 1 )  { height = height + this.verticalGap *  ( blockCount - 1 ) ; }^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] ColumnArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^height = height  <  this.verticalGap *  ( blockCount - 1 ) ;^324^^^^^303^341^[REPLACE] height = height + this.verticalGap *  ( blockCount - 1 ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] ColumnArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^if  (horizontalAlignment  ==  HorizontalAlignment.LEFT )  {^326^^^^^303^341^[REPLACE] if  ( this.horizontalAlignment != HorizontalAlignment.LEFT )  {^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] ColumnArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REMOVE]^if  (  ( this.horizontalAlignment )  !=  ( that.horizontalAlignment )  )  {     return false; }^329^^^^^303^341^[REMOVE] ^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] ColumnArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^else if  ( this.horizontalAlignment  ||  HorizontalAlignment.RIGHT )  {^333^334^^^^303^341^[REPLACE] else if  ( this.horizontalAlignment == HorizontalAlignment.RIGHT )  {^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] ColumnArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^for  ( int i = 0; i < blocks.length (  ) ; i++ )  {^327^^^^^303^341^[REPLACE] for  ( int i = 0; i < blocks.size (  ) ; i++ )  {^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] ColumnArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( this.horizontalAlignment  ||  HorizontalAlignment.RIGHT )  {^333^334^^^^303^341^[REPLACE] else if  ( this.horizontalAlignment == HorizontalAlignment.RIGHT )  {^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] ColumnArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^for  ( int i = 0 ; i < blocks.size (  )  - 3; i++ )  {^311^^^^^303^341^[REPLACE] for  ( int i = 0; i < blocks.size (  ) ; i++ )  {^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] ColumnArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^sizes[i]  =  sizes[i] ;^313^^^^^303^341^[REPLACE] sizes[i] = block.arrange ( g2, RectangleConstraint.NONE ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] ColumnArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^height = height  !=  sizes[i].getHeight();^314^^^^^303^341^[REPLACE] height = height + sizes[i].getHeight (  ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] ColumnArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[ADD]^^314^^^^^303^341^[ADD] height = height + sizes[i].getHeight (  ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] ColumnArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[ADD]^^312^313^^^^303^341^[ADD] Block block =  ( Block )  blocks.get ( i ) ; sizes[i] = block.arrange ( g2, RectangleConstraint.NONE ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] ColumnArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^for  ( int i = 0; i < blocks.size (  )  *  2; i++ )  {^327^^^^^303^341^[REPLACE] for  ( int i = 0; i < blocks.size (  ) ; i++ )  {^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] ColumnArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( this.horizontalAlignment  !=  HorizontalAlignment.CENTER )  {^329^330^^^^303^341^[REPLACE] if  ( this.horizontalAlignment == HorizontalAlignment.CENTER )  {^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] ColumnArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^verticalGap = height + sizes[i].getHeight();^314^^^^^303^341^[REPLACE] height = height + sizes[i].getHeight (  ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] ColumnArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[ADD]^^315^^^^^303^341^[ADD] maxWidth = Math.max ( sizes[i].width, maxWidth ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] ColumnArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^height = height  ||  this.verticalGap *  ( blockCount - 1L ) ;^324^^^^^303^341^[REPLACE] height = height + this.verticalGap *  ( blockCount - 1 ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] ColumnArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^Block block =  ( Block )  blocks .isEmpty (  )  ;^312^^^^^303^341^[REPLACE] Block block =  ( Block )  blocks.get ( i ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] ColumnArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^return  new Size2D (  )  ;^340^^^^^303^341^[REPLACE] return new Size2D ( maxWidth, height ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] ColumnArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( obj  !=  this )  {^358^^^^^357^378^[REPLACE] if  ( obj == this )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] ColumnArrangement   [TYPE]  ColumnArrangement that  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  Object obj  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment 
[ADD]^return true;^358^359^360^^^357^378^[ADD] if  ( obj == this )  { return true; }^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] ColumnArrangement   [TYPE]  ColumnArrangement that  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  Object obj  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment 
[REPLACE]^return false;^359^^^^^357^378^[REPLACE] return true;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] ColumnArrangement   [TYPE]  ColumnArrangement that  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  Object obj  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment 
[REPLACE]^if  ( ! ! ( obj instanceof ColumnArrangement )  )  {^361^^^^^357^378^[REPLACE] if  ( ! ( obj instanceof ColumnArrangement )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] ColumnArrangement   [TYPE]  ColumnArrangement that  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  Object obj  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment 
[REPLACE]^return true;^362^^^^^357^378^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] ColumnArrangement   [TYPE]  ColumnArrangement that  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  Object obj  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment 
[REPLACE]^Size2D s1 = arrangeNN ( container, g2 ) ;^364^^^^^357^378^[REPLACE] ColumnArrangement that =  ( ColumnArrangement )  obj;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] ColumnArrangement   [TYPE]  ColumnArrangement that  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  Object obj  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment 
[REPLACE]^if  (horizontalAlignment  ==  that.horizontalAlignment )  {^365^^^^^357^378^[REPLACE] if  ( this.horizontalAlignment != that.horizontalAlignment )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] ColumnArrangement   [TYPE]  ColumnArrangement that  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  Object obj  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment 
[REPLACE]^return true;^366^^^^^357^378^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] ColumnArrangement   [TYPE]  ColumnArrangement that  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  Object obj  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment 
[REPLACE]^if  ( this.verticalAlignment  ==  that.verticalAlignment )  {^368^^^^^357^378^[REPLACE] if  ( this.verticalAlignment != that.verticalAlignment )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] ColumnArrangement   [TYPE]  ColumnArrangement that  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  Object obj  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment 
[REPLACE]^return true;^369^^^^^357^378^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] ColumnArrangement   [TYPE]  ColumnArrangement that  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  Object obj  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment 
[REPLACE]^if  ( this.horizontalGap  ==  that.horizontalGap )  {^371^^^^^357^378^[REPLACE] if  ( this.horizontalGap != that.horizontalGap )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] ColumnArrangement   [TYPE]  ColumnArrangement that  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  Object obj  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment 
[REPLACE]^return true;^372^^^^^357^378^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] ColumnArrangement   [TYPE]  ColumnArrangement that  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  Object obj  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment 
[REPLACE]^if  ( this.verticalGap  ==  that.verticalGap )  {^374^^^^^357^378^[REPLACE] if  ( this.verticalGap != that.verticalGap )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] ColumnArrangement   [TYPE]  ColumnArrangement that  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  Object obj  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment 
[REMOVE]^if  (  ( this.horizontalAlignment )  !=  ( that.horizontalAlignment )  )  {     return false; }^374^^^^^357^378^[REMOVE] ^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] ColumnArrangement   [TYPE]  ColumnArrangement that  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  Object obj  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment 
[REPLACE]^return true;^375^^^^^357^378^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] ColumnArrangement   [TYPE]  ColumnArrangement that  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  Object obj  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment 
[REPLACE]^return false;^377^^^^^357^378^[REPLACE] return true;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] ColumnArrangement   [TYPE]  ColumnArrangement that  [TYPE]  boolean false  true  [TYPE]  double hGap  height  horizontalGap  maxWidth  vGap  verticalGap  x  y  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  Object obj  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment 
