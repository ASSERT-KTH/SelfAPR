[REPLACE]^private static final long serialVersionUID ;^64^^^^^^^[REPLACE] private static final long serialVersionUID = 4543632485478613800L;^ [CLASS] FlowArrangement  
[REPLACE]^this ( HorizontalAlignment.CENTER, VerticalAlignment.CENTER, 2.0D, 2.0D ) ;^82^^^^^81^83^[REPLACE] this ( HorizontalAlignment.CENTER, VerticalAlignment.CENTER, 2.0, 2.0 ) ;^[METHOD] <init> [TYPE] FlowArrangement() [PARAMETER] [CLASS] FlowArrangement   [TYPE]  VerticalAlignment verticalAlignment  [TYPE]  boolean false  true  [TYPE]  double horizontalGap  verticalGap  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment horizontalAlignment 
[REPLACE]^this.verticalAlignment = vAlign; ;^95^^^^^93^99^[REPLACE] this.horizontalAlignment = hAlign;^[METHOD] <init> [TYPE] VerticalAlignment,double,double) [PARAMETER] HorizontalAlignment hAlign VerticalAlignment vAlign double hGap double vGap [CLASS] FlowArrangement   [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment 
[ADD]^^95^^^^^93^99^[ADD] this.horizontalAlignment = hAlign;^[METHOD] <init> [TYPE] VerticalAlignment,double,double) [PARAMETER] HorizontalAlignment hAlign VerticalAlignment vAlign double hGap double vGap [CLASS] FlowArrangement   [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment 
[REPLACE]^this.horizontalAlignment = hAlign; ;^96^^^^^93^99^[REPLACE] this.verticalAlignment = vAlign;^[METHOD] <init> [TYPE] VerticalAlignment,double,double) [PARAMETER] HorizontalAlignment hAlign VerticalAlignment vAlign double hGap double vGap [CLASS] FlowArrangement   [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment 
[REPLACE]^this.horizontalGap =  null;^97^^^^^93^99^[REPLACE] this.horizontalGap = hGap;^[METHOD] <init> [TYPE] VerticalAlignment,double,double) [PARAMETER] HorizontalAlignment hAlign VerticalAlignment vAlign double hGap double vGap [CLASS] FlowArrangement   [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment 
[REPLACE]^this.verticalGap =  verticalGap;^98^^^^^93^99^[REPLACE] this.verticalGap = vGap;^[METHOD] <init> [TYPE] VerticalAlignment,double,double) [PARAMETER] HorizontalAlignment hAlign VerticalAlignment vAlign double hGap double vGap [CLASS] FlowArrangement   [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment 
[REPLACE]^LengthConstraintType w = constraint.getHeightConstraintType (  ) ;^129^^^^^127^166^[REPLACE] LengthConstraintType w = constraint.getWidthConstraintType (  ) ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^LengthConstraintType h = constraint.getWidthConstraintType (  ) ;^130^^^^^127^166^[REPLACE] LengthConstraintType h = constraint.getHeightConstraintType (  ) ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( w  ||  LengthConstraintType.NONE )  {^131^^^^^127^166^[REPLACE] if  ( w == LengthConstraintType.NONE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[ADD]^^131^132^133^134^^127^166^[ADD] if  ( w == LengthConstraintType.NONE )  { if  ( h == LengthConstraintType.NONE )  { return arrangeNN ( container, g2 ) ; }^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( w  !=  LengthConstraintType.FIXED )  {^142^^^^^127^166^[REPLACE] else if  ( w == LengthConstraintType.FIXED )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^else if  ( w  !=  LengthConstraintType.RANGE )  {^153^^^^^127^166^[REPLACE] else if  ( w == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[ADD]^^153^154^155^156^^127^166^[ADD] else if  ( w == LengthConstraintType.RANGE )  { if  ( h == LengthConstraintType.NONE )  { return arrangeRN ( container, g2, constraint ) ; }^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  &&  LengthConstraintType.NONE )  {^154^^^^^127^166^[REPLACE] if  ( h == LengthConstraintType.NONE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^else {^157^^^^^127^166^[REPLACE] else if  ( h == LengthConstraintType.FIXED )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^else if  ( h  ||  LengthConstraintType.RANGE )  {^160^^^^^127^166^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[ADD]^^160^161^162^^^127^166^[ADD] else if  ( h == LengthConstraintType.RANGE )  { return arrangeRR ( container, g2, constraint ) ; }^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^return arrangeFF ( container, g2, constraint ) ;^161^^^^^127^166^[REPLACE] return arrangeRR ( container, g2, constraint ) ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^return arrangeFF ( container, g2, constraint ) ;^158^^^^^127^166^[REPLACE] return arrangeRF ( container, g2, constraint ) ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  &&  LengthConstraintType.RANGE )  {^160^^^^^127^166^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^return arrangeFF ( container, g2, constraint ) ;^155^^^^^127^166^[REPLACE] return arrangeRN ( container, g2, constraint ) ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  &&  LengthConstraintType.FIXED )  {^157^^^^^127^166^[REPLACE] else if  ( h == LengthConstraintType.FIXED )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^else if  ( h  !=  LengthConstraintType.RANGE )  {^160^^^^^127^166^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REMOVE]^if  ( h ==  ( LengthConstraintType.RANGE )  )  {     throw new RuntimeException ( "Not implemented." ) ; }^160^^^^^127^166^[REMOVE] ^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[ADD]^return arrangeRF ( container, g2, constraint ) ;^157^158^159^^^127^166^[ADD] else if  ( h == LengthConstraintType.FIXED )  { return arrangeRF ( container, g2, constraint ) ; }^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[ADD]^return arrangeRR ( container, g2, constraint ) ;^160^161^162^^^127^166^[ADD] else if  ( h == LengthConstraintType.RANGE )  { return arrangeRR ( container, g2, constraint ) ; }^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  !=  LengthConstraintType.RANGE )  {^160^^^^^127^166^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  ||  LengthConstraintType.NONE )  {^143^^^^^127^166^[REPLACE] if  ( h == LengthConstraintType.NONE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  ||  LengthConstraintType.FIXED )  {^146^^^^^127^166^[REPLACE] else if  ( h == LengthConstraintType.FIXED )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  &&  LengthConstraintType.RANGE )  {^149^^^^^127^166^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^return arrangeFF ( container, g2, constraint ) ;^150^^^^^127^166^[REPLACE] return arrangeFR ( container, g2, constraint ) ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^return arrangeRN ( container, g2, constraint ) ;^147^^^^^127^166^[REPLACE] return arrangeFF ( container, g2, constraint ) ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  !=  LengthConstraintType.RANGE )  {^149^^^^^127^166^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^return arrangeFF ( container, g2, constraint ) ;^144^^^^^127^166^[REPLACE] return arrangeFN ( container, g2, constraint ) ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  &&  LengthConstraintType.FIXED )  {^146^^^^^127^166^[REPLACE] else if  ( h == LengthConstraintType.FIXED )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[ADD]^return arrangeFF ( container, g2, constraint ) ;^146^147^148^^^127^166^[ADD] else if  ( h == LengthConstraintType.FIXED )  { return arrangeFF ( container, g2, constraint ) ; }^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^else if  ( h  !=  LengthConstraintType.RANGE )  {^149^^^^^127^166^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  !=  LengthConstraintType.NONE )  {^143^^^^^127^166^[REPLACE] if  ( h == LengthConstraintType.NONE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  !=  LengthConstraintType.FIXED )  {^146^^^^^127^166^[REPLACE] else if  ( h == LengthConstraintType.FIXED )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  ||  LengthConstraintType.RANGE )  {^149^^^^^127^166^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^else {^149^^^^^127^166^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REMOVE]^if  ( h ==  ( LengthConstraintType.RANGE )  )  {     throw new RuntimeException ( "Not implemented." ) ; }^149^^^^^127^166^[REMOVE] ^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^else if  ( h  &&  LengthConstraintType.FIXED )  {^146^^^^^127^166^[REPLACE] else if  ( h == LengthConstraintType.FIXED )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^else if  ( h  &&  LengthConstraintType.RANGE )  {^149^^^^^127^166^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[ADD]^^149^150^151^^^127^166^[ADD] else if  ( h == LengthConstraintType.RANGE )  { return arrangeFR ( container, g2, constraint ) ; }^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^else {^153^^^^^127^166^[REPLACE] else if  ( w == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  ||  LengthConstraintType.NONE )  {^154^^^^^127^166^[REPLACE] if  ( h == LengthConstraintType.NONE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^else {^160^^^^^127^166^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  !=  LengthConstraintType.FIXED )  {^157^^^^^127^166^[REPLACE] else if  ( h == LengthConstraintType.FIXED )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[ADD]^^154^155^156^^^127^166^[ADD] if  ( h == LengthConstraintType.NONE )  { return arrangeRN ( container, g2, constraint ) ; }^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  ||  LengthConstraintType.RANGE )  {^160^^^^^127^166^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  !=  LengthConstraintType.NONE )  {^132^^^^^127^166^[REPLACE] if  ( h == LengthConstraintType.NONE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^else if  ( h  !=  LengthConstraintType.FIXED )  {^135^^^^^127^166^[REPLACE] else if  ( h == LengthConstraintType.FIXED )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REMOVE]^if  ( h ==  ( LengthConstraintType.RANGE )  )  {     throw new RuntimeException ( "Not implemented." ) ; }^135^^^^^127^166^[REMOVE] ^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^else {^138^^^^^127^166^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^return ;^139^^^^^127^166^[REPLACE] throw new RuntimeException  (" ")  ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^return arrangeFF ( container, g2, constraint ) ;^136^^^^^127^166^[REPLACE] return arrangeNF ( container, g2, constraint ) ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[ADD]^^138^139^140^^^127^166^[ADD] else if  ( h == LengthConstraintType.RANGE )  { throw new RuntimeException  (" ")  ; }^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^return arrangeFF ( container, g2, c ) ;^133^^^^^127^166^[REPLACE] return arrangeNN ( container, g2 ) ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^else if  ( h  &&  LengthConstraintType.FIXED )  {^135^^^^^127^166^[REPLACE] else if  ( h == LengthConstraintType.FIXED )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[ADD]^return arrangeNF ( container, g2, constraint ) ;^135^136^137^^^127^166^[ADD] else if  ( h == LengthConstraintType.FIXED )  { return arrangeNF ( container, g2, constraint ) ; }^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  &&  LengthConstraintType.RANGE )  {^138^^^^^127^166^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[ADD]^^139^^^^^127^166^[ADD] throw new RuntimeException  (" ")  ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^else {^135^^^^^127^166^[REPLACE] else if  ( h == LengthConstraintType.FIXED )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REMOVE]^if  ( h ==  ( LengthConstraintType.RANGE )  )  {     return arrangeFR ( container, g2, constraint ) ; }^138^^^^^127^166^[REMOVE] ^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  ||  LengthConstraintType.FIXED )  {^135^^^^^127^166^[REPLACE] else if  ( h == LengthConstraintType.FIXED )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  !=  LengthConstraintType.RANGE )  {^138^^^^^127^166^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( w  &&  LengthConstraintType.FIXED )  {^142^^^^^127^166^[REPLACE] else if  ( w == LengthConstraintType.FIXED )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( w  !=  LengthConstraintType.RANGE )  {^153^^^^^127^166^[REPLACE] else if  ( w == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  !=  LengthConstraintType.NONE )  {^154^^^^^127^166^[REPLACE] if  ( h == LengthConstraintType.NONE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REMOVE]^if  ( h ==  ( LengthConstraintType.FIXED )  )  {     return arrangeFF ( container, g2, constraint ) ; }else     if  ( h ==  ( LengthConstraintType.RANGE )  )  {         return arrangeFR ( container, g2, constraint ) ;     }^154^^^^^127^166^[REMOVE] ^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REMOVE]^if  ( h ==  ( LengthConstraintType.FIXED )  )  {     return arrangeFF ( container, g2, constraint ) ; }else     if  ( h ==  ( LengthConstraintType.RANGE )  )  {         return arrangeFR ( container, g2, constraint ) ;     }^157^^^^^127^166^[REMOVE] ^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  &&  LengthConstraintType.NONE )  {^143^^^^^127^166^[REPLACE] if  ( h == LengthConstraintType.NONE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^else {^146^^^^^127^166^[REPLACE] else if  ( h == LengthConstraintType.FIXED )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[ADD]^return arrangeFN ( container, g2, constraint ) ;^143^144^145^^^127^166^[ADD] if  ( h == LengthConstraintType.NONE )  { return arrangeFN ( container, g2, constraint ) ; }^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^else if  ( h  !=  LengthConstraintType.FIXED )  {^146^^^^^127^166^[REPLACE] else if  ( h == LengthConstraintType.FIXED )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[ADD]^^146^147^148^^^127^166^[ADD] else if  ( h == LengthConstraintType.FIXED )  { return arrangeFF ( container, g2, constraint ) ; }^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[ADD]^return arrangeFR ( container, g2, constraint ) ;^149^150^151^^^127^166^[ADD] else if  ( h == LengthConstraintType.RANGE )  { return arrangeFR ( container, g2, constraint ) ; }^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^else if  ( h  ||  LengthConstraintType.RANGE )  {^149^^^^^127^166^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[ADD]^return arrangeRN ( container, g2, constraint ) ;^154^155^156^^^127^166^[ADD] if  ( h == LengthConstraintType.NONE )  { return arrangeRN ( container, g2, constraint ) ; }^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^else if  ( h  !=  LengthConstraintType.FIXED )  {^157^^^^^127^166^[REPLACE] else if  ( h == LengthConstraintType.FIXED )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^return ;^164^^^^^127^166^[REPLACE] throw new RuntimeException  (" ")  ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  vGap  verticalGap  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^LengthConstraintType w = constraint.getWidthConstraintType (  ) ;^181^^^^^179^227^[REPLACE] List blocks = container.getBlocks (  ) ;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInRow  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^double width = constraint.getWidthRange (  ) ;^182^^^^^179^227^[REPLACE] double width = constraint.getWidth (  ) ;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInRow  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^double x = 0.0D;^184^^^^^179^227^[REPLACE] double x = 0.0;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInRow  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^double y = 3.0d;^185^^^^^179^227^[REPLACE] double y = 0.0;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInRow  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^double maxHeight = 1.0d;^186^^^^^179^227^[REPLACE] double maxHeight = 0.0;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInRow  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^List blocks = container.getBlocks (  ) ;^187^^^^^179^227^[REPLACE] List itemsInRow = new ArrayList (  ) ;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInRow  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^if (x + size.width  ==  width) {^191^^^^^179^227^[REPLACE] if  ( x + size.width <= width )  {^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInRow  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( x + size.width <= width )  {^200^^^^^191^224^[REPLACE] if  ( itemsInRow.isEmpty (  )  )  {^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInRow  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^x = 0.0D;^213^^^^^200^223^[REPLACE] x = 0.0;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInRow  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^y = y + maxHeight +width;^214^^^^^200^223^[REPLACE] y = y + maxHeight + this.verticalGap;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInRow  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^maxHeight =  null.height;^215^^^^^200^223^[REPLACE] maxHeight = size.height;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInRow  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[ADD]^^215^^^^^200^223^[ADD] maxHeight = size.height;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInRow  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^x = size.width  >=  this.horizontalGap;^221^^^^^200^223^[REPLACE] x = size.width + this.horizontalGap;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInRow  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^x = 0.0D;^207^^^^^191^224^[REPLACE] x = 0.0;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInRow  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^y = y  !=  size.height  !=  this.verticalGap;^208^^^^^191^224^[REPLACE] y = y + size.height + this.verticalGap;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInRow  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[ADD]^^207^208^^^^191^224^[ADD] x = 0.0; y = y + size.height + this.verticalGap;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInRow  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^y = y  &&  size.height  &&  this.verticalGap;^208^^^^^191^224^[REPLACE] y = y + size.height + this.verticalGap;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInRow  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^x = 0.0D;^213^^^^^191^224^[REPLACE] x = 0.0;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInRow  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^y = y  <  maxHeight  <  this.verticalGap;^214^^^^^191^224^[REPLACE] y = y + maxHeight + this.verticalGap;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInRow  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^maxHeight =  null.height;^215^^^^^191^224^[REPLACE] maxHeight = size.height;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInRow  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^x = size.width  ||  this.horizontalGap;^221^^^^^191^224^[REPLACE] x = size.width + this.horizontalGap;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInRow  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^x = x  &  size.width  &  this.horizontalGap;^196^^^^^179^227^[REPLACE] x = x + size.width + this.horizontalGap;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInRow  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[ADD]^^196^197^^^^179^227^[ADD] x = x + size.width + this.horizontalGap; maxHeight = Math.max ( maxHeight, size.height ) ;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInRow  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^maxHeight = Math.max ( sizes[i].height, maxHeight ) ; ;^197^^^^^179^227^[REPLACE] maxHeight = Math.max ( maxHeight, size.height ) ;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInRow  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( x + size.width <= width )  {^200^^^^^179^227^[REPLACE] if  ( itemsInRow.isEmpty (  )  )  {^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInRow  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[ADD]^^200^201^202^203^204^179^227^[ADD] if  ( itemsInRow.isEmpty (  )  )  {  block.setBounds ( new Rectangle2D.Double ( x, y, Math.min ( size.width, width - x ) , size.height^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInRow  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^x = 2.0d;^213^^^^^200^223^[REPLACE] x = 0.0;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInRow  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^y = y + maxHeight +y;^214^^^^^200^223^[REPLACE] y = y + maxHeight + this.verticalGap;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInRow  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[ADD]^^214^^^^^200^223^[ADD] y = y + maxHeight + this.verticalGap;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInRow  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^x = size.width  ^  this.horizontalGap;^221^^^^^200^223^[REPLACE] x = size.width + this.horizontalGap;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInRow  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^x = 2.0d;^207^^^^^179^227^[REPLACE] x = 0.0;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInRow  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^y = y  ^  size.height  ^  this.verticalGap;^208^^^^^179^227^[REPLACE] y = y + size.height + this.verticalGap;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInRow  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^for  ( int i = 0; i < blocks.length (  ) ; i++ )  {^188^^^^^179^227^[REPLACE] for  ( int i = 0; i < blocks.size (  ) ; i++ )  {^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInRow  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^if (x + size.width  !=  width) {^191^^^^^179^227^[REPLACE] if  ( x + size.width <= width )  {^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInRow  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[ADD]^itemsInRow.add ( block ) ;) ;^191^192^193^194^195^179^227^[ADD] if  ( x + size.width <= width )  { itemsInRow.add ( block ) ; block.setBounds ( new Rectangle2D.Double ( x, y, size.width, size.height ) ) ;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInRow  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[ADD]^^200^201^202^203^204^191^224^[ADD] if  ( itemsInRow.isEmpty (  )  )  {  block.setBounds ( new Rectangle2D.Double ( x, y, Math.min ( size.width, width - x ) , size.height^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInRow  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^x = 4.0d;^213^^^^^200^223^[REPLACE] x = 0.0;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInRow  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^y = y + size.height + this.verticalGap; ;^214^^^^^200^223^[REPLACE] y = y + maxHeight + this.verticalGap;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInRow  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[ADD]^^214^215^^^^200^223^[ADD] y = y + maxHeight + this.verticalGap; maxHeight = size.height;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInRow  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^x = size.width  >  this.horizontalGap;^221^^^^^200^223^[REPLACE] x = size.width + this.horizontalGap;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInRow  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^x = 2.0d;^207^^^^^191^224^[REPLACE] x = 0.0;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInRow  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^y = y + maxHeight + this.verticalGap; ;^208^^^^^191^224^[REPLACE] y = y + size.height + this.verticalGap;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInRow  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^x = 0.0d;^207^^^^^191^224^[REPLACE] x = 0.0;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInRow  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[ADD]^^208^^^^^191^224^[ADD] y = y + size.height + this.verticalGap;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInRow  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^x = 3.0d;^213^^^^^191^224^[REPLACE] x = 0.0;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInRow  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[ADD]^^213^^^^^191^224^[ADD] x = 0.0;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInRow  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^y = y + size.height + this.verticalGap; ;^214^^^^^191^224^[REPLACE] y = y + maxHeight + this.verticalGap;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInRow  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[ADD]^^215^^^^^191^224^[ADD] maxHeight = size.height;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInRow  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^x = size.width  >=  this.horizontalGap;^221^^^^^191^224^[REPLACE] x = size.width + this.horizontalGap;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInRow  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^x = x  ==  size.width  ==  this.horizontalGap;^196^^^^^179^227^[REPLACE] x = x + size.width + this.horizontalGap;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInRow  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( itemsInRow .get ( i )   )  {^200^^^^^179^227^[REPLACE] if  ( itemsInRow.isEmpty (  )  )  {^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInRow  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^x = 0.0d;^213^^^^^200^223^[REPLACE] x = 0.0;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInRow  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^x = size.width  ==  this.horizontalGap;^221^^^^^200^223^[REPLACE] x = size.width + this.horizontalGap;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInRow  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^x = 3.0d;^207^^^^^179^227^[REPLACE] x = 0.0;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInRow  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^y = y  |  size.height  |  this.verticalGap;^208^^^^^179^227^[REPLACE] y = y + size.height + this.verticalGap;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInRow  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^x = size.width + this.horizontalGap; ;^196^^^^^179^227^[REPLACE] x = x + size.width + this.horizontalGap;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInRow  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^x = 0.0D;^207^^^^^179^227^[REPLACE] x = 0.0;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInRow  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^y = y  >  size.height  >  this.verticalGap;^208^^^^^179^227^[REPLACE] y = y + size.height + this.verticalGap;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInRow  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[ADD]^^208^^^^^179^227^[ADD] y = y + size.height + this.verticalGap;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInRow  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^x = 2.0d;^213^^^^^179^227^[REPLACE] x = 0.0;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInRow  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^y = y  |  maxHeight  |  this.verticalGap;^214^^^^^179^227^[REPLACE] y = y + maxHeight + this.verticalGap;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInRow  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[ADD]^^214^^^^^179^227^[ADD] y = y + maxHeight + this.verticalGap;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInRow  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^maxHeight =  null.height;^215^^^^^179^227^[REPLACE] maxHeight = size.height;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInRow  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^x = size.width  &  this.horizontalGap;^221^^^^^179^227^[REPLACE] x = size.width + this.horizontalGap;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInRow  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^Block block =  ( Block )  blocks.isEmpty ( i ) ;^189^^^^^179^227^[REPLACE] Block block =  ( Block )  blocks.get ( i ) ;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInRow  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^Size2D s1 = arrangeNN ( container, g2 ) ;^190^^^^^179^227^[REPLACE] Size2D size = block.arrange ( g2, RectangleConstraint.NONE ) ;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInRow  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^x = 0.0D;^213^^^^^179^227^[REPLACE] x = 0.0;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInRow  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^y = y + size.height + this.verticalGap; ;^214^^^^^179^227^[REPLACE] y = y + maxHeight + this.verticalGap;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInRow  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[ADD]^^215^^^^^179^227^[ADD] maxHeight = size.height;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInRow  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^x = size.width  <=  this.horizontalGap;^221^^^^^179^227^[REPLACE] x = size.width + this.horizontalGap;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInRow  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^for  ( int i = 0 ; i < blocks.size (  ) ; i++ )  {^188^^^^^179^227^[REPLACE] for  ( int i = 0; i < blocks.size (  ) ; i++ )  {^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInRow  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^Block block =  ( Block )  blocks .isEmpty (  )  ;^189^^^^^179^227^[REPLACE] Block block =  ( Block )  blocks.get ( i ) ;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInRow  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[ADD]^^189^190^^^^179^227^[ADD] Block block =  ( Block )  blocks.get ( i ) ; Size2D size = block.arrange ( g2, RectangleConstraint.NONE ) ;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInRow  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[ADD]^^190^^^^^179^227^[ADD] Size2D size = block.arrange ( g2, RectangleConstraint.NONE ) ;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInRow  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^return new Size2D ( constraint .getWidthRange (  )  , y + maxHeight ) ;^226^^^^^179^227^[REPLACE] return new Size2D ( constraint.getWidth (  ) , y + maxHeight ) ;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D size  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  itemsInRow  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int i  [TYPE]  Graphics2D g2 
[REPLACE]^Size2D s = arrangeFN ( container, g2, c ) ;^242^^^^^239^252^[REPLACE] Size2D s = arrangeFN ( container, g2, constraint ) ;^[METHOD] arrangeFR [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint c  constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[ADD]^^242^^^^^239^252^[ADD] Size2D s = arrangeFN ( container, g2, constraint ) ;^[METHOD] arrangeFR [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint c  constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( constraint.getWidthRange (  ) .contains ( s1.width )  )  {^243^^^^^239^252^[REPLACE] if  ( constraint.getHeightRange (  ) .contains ( s.height )  )  {^[METHOD] arrangeFR [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint c  constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REMOVE]^if  ( constraint.getWidthRange (  ) .contains ( s1.width )  )  {     return s1; }else {     RectangleConstraint c = constraint.toFixedWidth ( constraint.getWidthRange (  ) .getUpperBound (  )  ) ;     return arrangeFR ( container, g2, c ) ; }^243^^^^^239^252^[REMOVE] ^[METHOD] arrangeFR [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint c  constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^return arrangeFF ( constraintontainer, g2, c ) ;^250^^^^^239^252^[REPLACE] return arrangeFF ( container, g2, c ) ;^[METHOD] arrangeFR [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint c  constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^RectangleConstraint c = c.toFixedHeight ( constraint.getHeightRange (  ) .constrain ( s.getHeight (  )  ) ) ;^247^248^249^^^239^252^[REPLACE] RectangleConstraint c = constraint.toFixedHeight ( constraint.getHeightRange (  ) .constrain ( s.getHeight (  )  ) ) ;^[METHOD] arrangeFR [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint c  constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[ADD]^^247^248^249^^^239^252^[ADD] RectangleConstraint c = constraint.toFixedHeight ( constraint.getHeightRange (  ) .constrain ( s.getHeight (  )  ) ) ;^[METHOD] arrangeFR [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint c  constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^return s1;^244^^^^^239^252^[REPLACE] return s;^[METHOD] arrangeFR [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint c  constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^return arrangeFF ( container, g2, constraint ) ;^268^^^^^264^269^[REPLACE] return arrangeFN ( container, g2, constraint ) ;^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^Size2D s = arrangeNF ( container, g2, constraint ) ;^286^^^^^281^296^[REPLACE] Size2D s1 = arrangeNN ( container, g2 ) ;^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D s1  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint c  constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( constraint.getHeightRange (  ) .contains ( s1.width )  )  {^287^^^^^281^296^[REPLACE] if  ( constraint.getWidthRange (  ) .contains ( s1.width )  )  {^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D s1  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint c  constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[ADD]^^287^288^289^^^281^296^[ADD] if  ( constraint.getWidthRange (  ) .contains ( s1.width )  )  { return s1; }^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D s1  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint c  constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^return arrangeNN ( container, g2 ) ;^294^^^^^281^296^[REPLACE] return arrangeFR ( container, g2, c ) ;^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D s1  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint c  constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^RectangleConstraint c = c.toFixedWidth ( constraint.getWidthRange (  ) .getUpperBound (  ) ) ;^291^292^293^^^281^296^[REPLACE] RectangleConstraint c = constraint.toFixedWidth ( constraint.getWidthRange (  ) .getUpperBound (  ) ) ;^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D s1  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint c  constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^return s;^288^^^^^281^296^[REPLACE] return s1;^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D s1  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint c  constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[ADD]^^291^292^293^^^281^296^[ADD] RectangleConstraint c = constraint.toFixedWidth ( constraint.getWidthRange (  ) .getUpperBound (  ) ) ;^[METHOD] arrangeRR [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D s1  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint c  constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^Size2D s = arrangeNF ( container, g2, c ) ;^311^^^^^308^321^[REPLACE] Size2D s = arrangeNF ( container, g2, constraint ) ;^[METHOD] arrangeRF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint c  constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( c.getWidthRange (  ) .contains ( s.width )  )  {^312^^^^^308^321^[REPLACE] if  ( constraint.getWidthRange (  ) .contains ( s.width )  )  {^[METHOD] arrangeRF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint c  constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^return arrangeFF ( container, g2, constraint ) ;^319^^^^^308^321^[REPLACE] return arrangeFF ( container, g2, c ) ;^[METHOD] arrangeRF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint c  constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^RectangleConstraint c = c.toFixedWidth ( constraint.getHeightRange (  ) .constrain ( s.getWidth (  )  ) ) ;^316^317^318^^^308^321^[REPLACE] RectangleConstraint c = constraint.toFixedWidth ( constraint.getWidthRange (  ) .constrain ( s.getWidth (  )  ) ) ;^[METHOD] arrangeRF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint c  constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[ADD]^^316^317^318^^^308^321^[ADD] RectangleConstraint c = constraint.toFixedWidth ( constraint.getWidthRange (  ) .constrain ( s.getWidth (  )  ) ) ;^[METHOD] arrangeRF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint c  constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^return s1;^313^^^^^308^321^[REPLACE] return s;^[METHOD] arrangeRF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint c  constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^RectangleConstraint c = constraint.toFixedWidth ( constraint.getHeightRange (  ) .constrain ( s.getWidth (  )  ) ) ;^316^317^318^^^308^321^[REPLACE] RectangleConstraint c = constraint.toFixedWidth ( constraint.getWidthRange (  ) .constrain ( s.getWidth (  )  ) ) ;^[METHOD] arrangeRF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint c  constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^Size2D s = arrangeNF ( container, g2, constraint ) ;^337^^^^^333^347^[REPLACE] Size2D s1 = arrangeNN ( container, g2 ) ;^[METHOD] arrangeRN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D s1  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint c  constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( constraint.getHeightRange (  ) .contains ( s.height )  )  {^338^^^^^333^347^[REPLACE] if  ( constraint.getWidthRange (  ) .contains ( s1.width )  )  {^[METHOD] arrangeRN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D s1  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint c  constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^return arrangeNN ( container, g2 ) ;^345^^^^^333^347^[REPLACE] return arrangeFN ( container, g2, c ) ;^[METHOD] arrangeRN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D s1  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint c  constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^RectangleConstraint c = c.toFixedWidth ( constraint.getWidthRange (  ) .getUpperBound (  ) ) ;^342^343^344^^^333^347^[REPLACE] RectangleConstraint c = constraint.toFixedWidth ( constraint.getWidthRange (  ) .getUpperBound (  ) ) ;^[METHOD] arrangeRN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D s1  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint c  constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[ADD]^^342^343^344^^^333^347^[ADD] RectangleConstraint c = constraint.toFixedWidth ( constraint.getWidthRange (  ) .getUpperBound (  ) ) ;^[METHOD] arrangeRN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D s1  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint c  constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^return s;^339^^^^^333^347^[REPLACE] return s1;^[METHOD] arrangeRN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D s1  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint c  constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^return arrangeFN ( constraintontainer, g2, c ) ;^345^^^^^333^347^[REPLACE] return arrangeFN ( container, g2, c ) ;^[METHOD] arrangeRN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  Size2D s1  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint c  constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^double x = 4.0d;^359^^^^^358^395^[REPLACE] double x = 0.0;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] FlowArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^double width = 3.0d;^360^^^^^358^395^[REPLACE] double width = 0.0;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] FlowArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^double maxHeight = 0.0D;^361^^^^^358^395^[REPLACE] double maxHeight = 0.0;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] FlowArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^LengthConstraintType w = constraint.getWidthConstraintType (  ) ;^362^^^^^358^395^[REPLACE] List blocks = container.getBlocks (  ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] FlowArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^int blockCount = blocks.clear (  ) ;^363^^^^^358^395^[REPLACE] int blockCount = blocks.size (  ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] FlowArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( blockCount  <  0 )  {^364^^^^^358^395^[REPLACE] if  ( blockCount > 0 )  {^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] FlowArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[ADD]^Size2D[] sizes = new Size2D[blocks.size (  ) ];^364^365^366^367^368^358^395^[ADD] if  ( blockCount > 0 )  { Size2D[] sizes = new Size2D[blocks.size (  ) ]; for  ( int i = 0; i < blocks.size (  ) ; i++ )  { Block block =  ( Block )  blocks.get ( i ) ; sizes[i] = block.arrange ( g2, RectangleConstraint.NONE ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] FlowArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( blockCount  >=  4 )  {^378^^^^^358^395^[REPLACE] if  ( blockCount > 1 )  {^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] FlowArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[ADD]^^378^379^380^^^358^395^[ADD] if  ( blockCount > 1 )  { width = width + this.horizontalGap *  ( blockCount - 1 ) ; }^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] FlowArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^width =verticalGap + this.horizontalGap *  ( blockCount - 1 - 1 ) ;^379^^^^^358^395^[REPLACE] width = width + this.horizontalGap *  ( blockCount - 1 ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] FlowArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[ADD]^^379^^^^^358^395^[ADD] width = width + this.horizontalGap *  ( blockCount - 1 ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] FlowArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( this.verticalAlignment  ==  VerticalAlignment.TOP )  {^381^^^^^358^395^[REPLACE] if  ( this.verticalAlignment != VerticalAlignment.TOP )  {^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] FlowArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( this.verticalAlignment  &&  VerticalAlignment.CENTER )  {^384^^^^^358^395^[REPLACE] if  ( this.verticalAlignment == VerticalAlignment.CENTER )  {^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] FlowArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( this.verticalAlignment  ||  VerticalAlignment.BOTTOM )  {^387^388^^^^358^395^[REPLACE] else if  ( this.verticalAlignment == VerticalAlignment.BOTTOM )  {^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] FlowArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[ADD]^^387^388^^390^^358^395^[ADD] else if  ( this.verticalAlignment == VerticalAlignment.BOTTOM )  { }^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] FlowArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^else if  ( this.verticalAlignment  !=  VerticalAlignment.BOTTOM )  {^387^388^^^^358^395^[REPLACE] else if  ( this.verticalAlignment == VerticalAlignment.BOTTOM )  {^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] FlowArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^for  ( int i = 0; i < blocks.add (  )  - 1; i++ )  {^382^^^^^358^395^[REPLACE] for  ( int i = 0; i < blocks.size (  ) ; i++ )  {^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] FlowArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[ADD]^^382^383^384^^386^358^395^[ADD] for  ( int i = 0; i < blocks.size (  ) ; i++ )  {  if  ( this.verticalAlignment == VerticalAlignment.CENTER )  { }^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] FlowArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[ADD]^^384^385^386^^^358^395^[ADD] if  ( this.verticalAlignment == VerticalAlignment.CENTER )  {  }^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] FlowArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^else if  ( this.verticalAlignment  ||  VerticalAlignment.BOTTOM )  {^387^388^^^^358^395^[REPLACE] else if  ( this.verticalAlignment == VerticalAlignment.BOTTOM )  {^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] FlowArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^if  (verticalAlignment  &&  VerticalAlignment.BOTTOM )  {^387^388^^^^358^395^[REPLACE] else if  ( this.verticalAlignment == VerticalAlignment.BOTTOM )  {^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] FlowArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^for  ( int i = 0 ; i < blocks.size (  ) ; i++ )  {^382^^^^^358^395^[REPLACE] for  ( int i = 0; i < blocks.size (  ) ; i++ )  {^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] FlowArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( this.verticalAlignment  &&  VerticalAlignment.BOTTOM )  {^387^388^^^^358^395^[REPLACE] else if  ( this.verticalAlignment == VerticalAlignment.BOTTOM )  {^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] FlowArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^for  ( int i = 0 ; i < blocks.length (  ) ; i++ )  {^366^^^^^358^395^[REPLACE] for  ( int i = 0; i < blocks.size (  ) ; i++ )  {^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] FlowArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^sizes[i]  = null ;^368^^^^^358^395^[REPLACE] sizes[i] = block.arrange ( g2, RectangleConstraint.NONE ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] FlowArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^verticalGap = width + sizes[i].getWidth();^369^^^^^358^395^[REPLACE] width = width + sizes[i].getWidth (  ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] FlowArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^maxHeight = Math.max ( maxHeight, size.height ) ; ;^370^^^^^358^395^[REPLACE] maxHeight = Math.max ( sizes[i].height, maxHeight ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] FlowArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^x = x  <=  sizes[i].width  <=  this.horizontalGap;^376^^^^^358^395^[REPLACE] x = x + sizes[i].width + this.horizontalGap;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] FlowArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^Block block =  ( Block )  blocks.isEmpty ( i ) ;^367^^^^^358^395^[REPLACE] Block block =  ( Block )  blocks.get ( i ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] FlowArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^for  ( int i = 0; i < blocks.size (  )  /  2; i++ )  {^382^^^^^358^395^[REPLACE] for  ( int i = 0; i < blocks.size (  ) ; i++ )  {^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] FlowArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( this.verticalAlignment  !=  VerticalAlignment.CENTER )  {^384^^^^^358^395^[REPLACE] if  ( this.verticalAlignment == VerticalAlignment.CENTER )  {^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] FlowArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^else {^387^388^^^^358^395^[REPLACE] else if  ( this.verticalAlignment == VerticalAlignment.BOTTOM )  {^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] FlowArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^sizes[i]  =  sizes[i] ;^368^^^^^358^395^[REPLACE] sizes[i] = block.arrange ( g2, RectangleConstraint.NONE ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] FlowArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^width = width +verticalGap();^369^^^^^358^395^[REPLACE] width = width + sizes[i].getWidth (  ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] FlowArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^x = x  &  sizes[i].width  &  this.horizontalGap;^376^^^^^358^395^[REPLACE] x = x + sizes[i].width + this.horizontalGap;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] FlowArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^verticalGap = width + this.horizontalGap *  ( blockCount - 1 ) ;^379^^^^^358^395^[REPLACE] width = width + this.horizontalGap *  ( blockCount - 1 ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] FlowArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^Size2D[] sizes = new Size2D[blocks .isEmpty (  )  ];^365^^^^^358^395^[REPLACE] Size2D[] sizes = new Size2D[blocks.size (  ) ];^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] FlowArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^for  ( int i = 0 ; i < blocks.size (  ) ; i++ )  {^366^^^^^358^395^[REPLACE] for  ( int i = 0; i < blocks.size (  ) ; i++ )  {^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] FlowArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^Block block =  ( Block )  blocks .isEmpty (  )  ;^367^^^^^358^395^[REPLACE] Block block =  ( Block )  blocks.get ( i ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] FlowArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( blockCount  ==  1 )  {^378^^^^^358^395^[REPLACE] if  ( blockCount > 1 )  {^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] FlowArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^width = width  ^  this.horizontalGap *  ( blockCount - 1 ) ;^379^^^^^358^395^[REPLACE] width = width + this.horizontalGap *  ( blockCount - 1 ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] FlowArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[ADD]^^381^382^^384^^358^395^[ADD] if  ( this.verticalAlignment != VerticalAlignment.TOP )  { for  ( int i = 0; i < blocks.size (  ) ; i++ )  { if  ( this.verticalAlignment == VerticalAlignment.CENTER )  {^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] FlowArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( this.verticalAlignment  ||  VerticalAlignment.CENTER )  {^384^^^^^358^395^[REPLACE] if  ( this.verticalAlignment == VerticalAlignment.CENTER )  {^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] FlowArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( verticalAlignment  ||  VerticalAlignment.BOTTOM )  {^387^388^^^^358^395^[REPLACE] else if  ( this.verticalAlignment == VerticalAlignment.BOTTOM )  {^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] FlowArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( this.verticalAlignment  !=  VerticalAlignment.BOTTOM )  {^387^388^^^^358^395^[REPLACE] else if  ( this.verticalAlignment == VerticalAlignment.BOTTOM )  {^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] FlowArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^for  ( int i = 0; i < blocks.size (  )  /  0.5 ; i++ )  {^382^^^^^358^395^[REPLACE] for  ( int i = 0; i < blocks.size (  ) ; i++ )  {^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] FlowArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REMOVE]^if  (  ( this.horizontalAlignment )  !=  ( that.horizontalAlignment )  )  {     return false; }^387^^^^^358^395^[REMOVE] ^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] FlowArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REMOVE]^if  (  ( this.verticalAlignment )  !=  ( TOP )  )  {     for  ( int i = 0; i <  ( blocks.size (  )  ) ; i++ )  {         if  (  ( this.verticalAlignment )  ==  ( CENTER )  )  {         }else             if  (  ( this.verticalAlignment )  ==  ( BOTTOM )  )  {             }              } }^384^^^^^358^395^[REMOVE] ^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] FlowArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^else if  ( this.verticalAlignment  &&  VerticalAlignment.BOTTOM )  {^387^388^^^^358^395^[REPLACE] else if  ( this.verticalAlignment == VerticalAlignment.BOTTOM )  {^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] FlowArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^for  ( int i = 0 ; i < blocks.size (  )  %  0 .5 ; i++ )  {^366^^^^^358^395^[REPLACE] for  ( int i = 0; i < blocks.size (  ) ; i++ )  {^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] FlowArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^sizes[i] ;^368^^^^^358^395^[REPLACE] sizes[i] = block.arrange ( g2, RectangleConstraint.NONE ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] FlowArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[ADD]^^370^^^^^358^395^[ADD] maxHeight = Math.max ( sizes[i].height, maxHeight ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] FlowArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^x = size.width + this.horizontalGap; ;^376^^^^^358^395^[REPLACE] x = x + sizes[i].width + this.horizontalGap;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] FlowArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^for  ( int i = 0; i < blocks.size (  )  - 1; i++ )  {^382^^^^^358^395^[REPLACE] for  ( int i = 0; i < blocks.size (  ) ; i++ )  {^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] FlowArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^if  (verticalAlignment  ||  VerticalAlignment.CENTER )  {^384^^^^^358^395^[REPLACE] if  ( this.verticalAlignment == VerticalAlignment.CENTER )  {^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] FlowArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[ADD]^^368^^^^^358^395^[ADD] sizes[i] = block.arrange ( g2, RectangleConstraint.NONE ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] FlowArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^width =verticalGap + sizes[i].getWidth();^369^^^^^358^395^[REPLACE] width = width + sizes[i].getWidth (  ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] FlowArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^x = x  !=  sizes[i].width  !=  this.horizontalGap;^376^^^^^358^395^[REPLACE] x = x + sizes[i].width + this.horizontalGap;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] FlowArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[ADD]^^376^^^^^358^395^[ADD] x = x + sizes[i].width + this.horizontalGap;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] FlowArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^width =verticalGap + this.horizontalGap *  ( blockCount - 1 ) ;^379^^^^^358^395^[REPLACE] width = width + this.horizontalGap *  ( blockCount - 1 ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] FlowArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^return  new Size2D ( constraint.getWidth (  ) ,  ( y + maxHeight )  )  ;^394^^^^^358^395^[REPLACE] return new Size2D ( width, maxHeight ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] FlowArrangement   [TYPE]  Size2D[] sizes  [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  Block block  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  List blocks  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  int blockCount  i  [TYPE]  Graphics2D g2 
[REPLACE]^return arrangeFF ( container, g2, c ) ;^410^^^^^407^411^[REPLACE] return arrangeNN ( container, g2 ) ;^[METHOD] arrangeNF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  BlockContainer container  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( obj  !=  this )  {^428^^^^^427^448^[REPLACE] if  ( obj == this )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  Object obj  [TYPE]  FlowArrangement that  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment 
[REPLACE]^return false;^429^^^^^427^448^[REPLACE] return true;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  Object obj  [TYPE]  FlowArrangement that  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment 
[REPLACE]^if  ( ! ! ( obj instanceof FlowArrangement )  )  {^431^^^^^427^448^[REPLACE] if  ( ! ( obj instanceof FlowArrangement )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  Object obj  [TYPE]  FlowArrangement that  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment 
[REPLACE]^return true;^432^^^^^427^448^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  Object obj  [TYPE]  FlowArrangement that  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment 
[REPLACE]^double maxHeight = 0.0;^434^^^^^427^448^[REPLACE] FlowArrangement that =  ( FlowArrangement )  obj;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  Object obj  [TYPE]  FlowArrangement that  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment 
[REPLACE]^if  (horizontalAlignment  ==  that.horizontalAlignment )  {^435^^^^^427^448^[REPLACE] if  ( this.horizontalAlignment != that.horizontalAlignment )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  Object obj  [TYPE]  FlowArrangement that  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment 
[REPLACE]^return true;^436^^^^^427^448^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  Object obj  [TYPE]  FlowArrangement that  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment 
[REPLACE]^if  ( this.verticalAlignment  ==  that.verticalAlignment )  {^438^^^^^427^448^[REPLACE] if  ( this.verticalAlignment != that.verticalAlignment )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  Object obj  [TYPE]  FlowArrangement that  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment 
[ADD]^return false;^438^439^440^^^427^448^[ADD] if  ( this.verticalAlignment != that.verticalAlignment )  { return false; }^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  Object obj  [TYPE]  FlowArrangement that  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment 
[REPLACE]^return true;^439^^^^^427^448^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  Object obj  [TYPE]  FlowArrangement that  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment 
[REPLACE]^if  ( this.horizontalGap  ==  that.horizontalGap )  {^441^^^^^427^448^[REPLACE] if  ( this.horizontalGap != that.horizontalGap )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  Object obj  [TYPE]  FlowArrangement that  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment 
[REPLACE]^return true;^442^^^^^427^448^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  Object obj  [TYPE]  FlowArrangement that  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment 
[REPLACE]^if  ( this.verticalGap  ==  width )  {^444^^^^^427^448^[REPLACE] if  ( this.verticalGap != that.verticalGap )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  Object obj  [TYPE]  FlowArrangement that  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment 
[REMOVE]^if  (  ( this.horizontalAlignment )  !=  ( that.horizontalAlignment )  )  {     return false; }^444^^^^^427^448^[REMOVE] ^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  Object obj  [TYPE]  FlowArrangement that  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment 
[REPLACE]^return true;^445^^^^^427^448^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  Object obj  [TYPE]  FlowArrangement that  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment 
[REPLACE]^return false;^447^^^^^427^448^[REPLACE] return true;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] FlowArrangement   [TYPE]  boolean false  true  [TYPE]  double hGap  horizontalGap  maxHeight  vGap  verticalGap  width  x  y  [TYPE]  VerticalAlignment vAlign  verticalAlignment  [TYPE]  Object obj  [TYPE]  FlowArrangement that  [TYPE]  long serialVersionUID  [TYPE]  HorizontalAlignment hAlign  horizontalAlignment 
