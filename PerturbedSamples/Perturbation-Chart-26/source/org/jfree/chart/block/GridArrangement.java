[REPLACE]^private static final long serialVersionUID = -2563758090144655938;^60^^^^^^^[REPLACE] private static final long serialVersionUID = -2563758090144655938L;^ [CLASS] GridArrangement  
[REPLACE]^private  short  rows;^63^^^^^^^[REPLACE] private int rows;^ [CLASS] GridArrangement  
[REPLACE]^this.rows =  columns;^75^^^^^74^77^[REPLACE] this.rows = rows;^[METHOD] <init> [TYPE] GridArrangement(int,int) [PARAMETER] int rows int columns [CLASS] GridArrangement   [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  boolean false  true 
[REPLACE]^this.columns =  rows;^76^^^^^74^77^[REPLACE] this.columns = columns;^[METHOD] <init> [TYPE] GridArrangement(int,int) [PARAMETER] int rows int columns [CLASS] GridArrangement   [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  boolean false  true 
[REPLACE]^LengthConstraintType w = constraint.getHeightConstraintType (  ) ;^104^^^^^103^147^[REPLACE] LengthConstraintType w = constraint.getWidthConstraintType (  ) ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[ADD]^^104^105^^^^103^147^[ADD] LengthConstraintType w = constraint.getWidthConstraintType (  ) ; LengthConstraintType h = constraint.getHeightConstraintType (  ) ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[REPLACE]^LengthConstraintType h = constraint.getWidthConstraintType (  ) ;^105^^^^^103^147^[REPLACE] LengthConstraintType h = constraint.getHeightConstraintType (  ) ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( w  !=  LengthConstraintType.NONE )  {^106^^^^^103^147^[REPLACE] if  ( w == LengthConstraintType.NONE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[REPLACE]^else {^119^^^^^103^147^[REPLACE] else if  ( w == LengthConstraintType.FIXED )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[ADD]^^119^120^^122^123^103^147^[ADD] else if  ( w == LengthConstraintType.FIXED )  { if  ( h == LengthConstraintType.NONE )  { return arrangeFN ( container, g2, constraint ) ; }^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[REPLACE]^else if  ( w  !=  LengthConstraintType.RANGE )  {^132^^^^^103^147^[REPLACE] else if  ( w == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  &&  LengthConstraintType.NONE )  {^134^^^^^103^147^[REPLACE] if  ( h == LengthConstraintType.NONE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[REPLACE]^else {^138^^^^^103^147^[REPLACE] else if  ( h == LengthConstraintType.FIXED )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[ADD]^^138^139^140^141^^103^147^[ADD] else if  ( h == LengthConstraintType.FIXED )  {  throw new RuntimeException  (" ")  ; }^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[REPLACE]^else if  ( h  &&  LengthConstraintType.RANGE )  {^142^^^^^103^147^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[REPLACE]^return ;^143^^^^^103^147^[REPLACE] throw new RuntimeException  (" ")  ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[REPLACE]^return ;^140^^^^^103^147^[REPLACE] throw new RuntimeException  (" ")  ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[ADD]^^140^^^^^103^147^[ADD] throw new RuntimeException  (" ")  ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[REPLACE]^else {^142^^^^^103^147^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[ADD]^^142^143^144^^^103^147^[ADD] else if  ( h == LengthConstraintType.RANGE )  { throw new RuntimeException  (" ")  ; }^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[REPLACE]^return ;^136^^^^^103^147^[REPLACE] throw new RuntimeException  (" ")  ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  !=  LengthConstraintType.FIXED )  {^138^^^^^103^147^[REPLACE] else if  ( h == LengthConstraintType.FIXED )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[REMOVE]^if  ( h ==  ( LengthConstraintType.RANGE )  )  {     return arrangeFR ( container, g2, constraint ) ; }^142^^^^^103^147^[REMOVE] ^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[ADD]^^143^^^^^103^147^[ADD] throw new RuntimeException  (" ")  ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  !=  LengthConstraintType.NONE )  {^134^^^^^103^147^[REPLACE] if  ( h == LengthConstraintType.NONE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  &&  LengthConstraintType.RANGE )  {^142^^^^^103^147^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[REPLACE]^else if  ( h  !=  LengthConstraintType.RANGE )  {^142^^^^^103^147^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[ADD]^^136^^^^^103^147^[ADD] throw new RuntimeException  (" ")  ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  &&  LengthConstraintType.FIXED )  {^138^^^^^103^147^[REPLACE] else if  ( h == LengthConstraintType.FIXED )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  !=  LengthConstraintType.NONE )  {^120^^^^^103^147^[REPLACE] if  ( h == LengthConstraintType.NONE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[REPLACE]^else {^124^^^^^103^147^[REPLACE] else if  ( h == LengthConstraintType.FIXED )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[REPLACE]^else if  ( h  &&  LengthConstraintType.RANGE )  {^127^^^^^103^147^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[REPLACE]^return arrangeFF ( container, g2, constraint ) ;^129^^^^^103^147^[REPLACE] return arrangeFR ( container, g2, constraint ) ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[REPLACE]^return arrangeFR ( container, g2, constraint ) ;^125^^^^^103^147^[REPLACE] return arrangeFF ( container, g2, constraint ) ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[REPLACE]^else {^127^^^^^103^147^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[REPLACE]^return arrangeFF ( container, g2, constraint ) ;^122^^^^^103^147^[REPLACE] return arrangeFN ( container, g2, constraint ) ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[REPLACE]^else if  ( h  &&  LengthConstraintType.FIXED )  {^124^^^^^103^147^[REPLACE] else if  ( h == LengthConstraintType.FIXED )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[REMOVE]^if  ( h ==  ( LengthConstraintType.NONE )  )  {     throw new RuntimeException ( "Not yet implemented." ) ; }else     if  ( h ==  ( LengthConstraintType.FIXED )  )  {         throw new RuntimeException ( "Not yet implemented." ) ;     }else         if  ( h ==  ( LengthConstraintType.RANGE )  )  {             throw new RuntimeException ( "Not yet implemented." ) ;         }^124^^^^^103^147^[REMOVE] ^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  &&  LengthConstraintType.RANGE )  {^127^^^^^103^147^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[REMOVE]^if  ( h ==  ( LengthConstraintType.FIXED )  )  {     return arrangeFF ( container, g2, constraint ) ; }else     if  ( h ==  ( LengthConstraintType.RANGE )  )  {         return arrangeFR ( container, g2, constraint ) ;     }^127^^^^^103^147^[REMOVE] ^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  !=  LengthConstraintType.RANGE )  {^127^^^^^103^147^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[ADD]^^120^121^122^123^^103^147^[ADD] if  ( h == LengthConstraintType.NONE )  {  return arrangeFN ( container, g2, constraint ) ; }^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[ADD]^return arrangeFF ( container, g2, constraint ) ;^124^125^126^^^103^147^[ADD] else if  ( h == LengthConstraintType.FIXED )  { return arrangeFF ( container, g2, constraint ) ; }^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[REPLACE]^else if  ( h  !=  LengthConstraintType.RANGE )  {^127^^^^^103^147^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[ADD]^^127^128^129^130^^103^147^[ADD] else if  ( h == LengthConstraintType.RANGE )  {  return arrangeFR ( container, g2, constraint ) ; }^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  !=  LengthConstraintType.FIXED )  {^124^^^^^103^147^[REPLACE] else if  ( h == LengthConstraintType.FIXED )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[ADD]^^124^125^126^^^103^147^[ADD] else if  ( h == LengthConstraintType.FIXED )  { return arrangeFF ( container, g2, constraint ) ; }^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( w  ||  LengthConstraintType.RANGE )  {^132^^^^^103^147^[REPLACE] else if  ( w == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[ADD]^^134^135^136^137^^103^147^[ADD] if  ( h == LengthConstraintType.NONE )  {  throw new RuntimeException  (" ")  ; }^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  ||  LengthConstraintType.FIXED )  {^138^^^^^103^147^[REPLACE] else if  ( h == LengthConstraintType.FIXED )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[REPLACE]^else if  ( h  !=  LengthConstraintType.FIXED )  {^138^^^^^103^147^[REPLACE] else if  ( h == LengthConstraintType.FIXED )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[REPLACE]^else if  ( h  ||  LengthConstraintType.FIXED )  {^138^^^^^103^147^[REPLACE] else if  ( h == LengthConstraintType.FIXED )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  !=  LengthConstraintType.RANGE )  {^142^^^^^103^147^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  ||  LengthConstraintType.NONE )  {^107^^^^^103^147^[REPLACE] if  ( h == LengthConstraintType.NONE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[REMOVE]^if  ( h ==  ( LengthConstraintType.NONE )  )  {     throw new RuntimeException ( "Not yet implemented." ) ; }else     if  ( h ==  ( LengthConstraintType.FIXED )  )  {         throw new RuntimeException ( "Not yet implemented." ) ;     }else         if  ( h ==  ( LengthConstraintType.RANGE )  )  {             throw new RuntimeException ( "Not yet implemented." ) ;         }^107^^^^^103^147^[REMOVE] ^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[REPLACE]^else {^110^^^^^103^147^[REPLACE] else if  ( h == LengthConstraintType.FIXED )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  !=  LengthConstraintType.RANGE )  {^114^^^^^103^147^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[REPLACE]^return ;^116^^^^^103^147^[REPLACE] throw new RuntimeException  (" ")  ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[ADD]^^116^^^^^103^147^[ADD] throw new RuntimeException  (" ")  ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[REPLACE]^return ;^112^^^^^103^147^[REPLACE] throw new RuntimeException  (" ")  ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[REPLACE]^else {^114^^^^^103^147^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[ADD]^^112^^^^^103^147^[ADD] throw new RuntimeException  (" ")  ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[REPLACE]^return arrange ( container, g2, c2 ) ;^108^^^^^103^147^[REPLACE] return arrangeNN ( container, g2 ) ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[REPLACE]^else if  ( h  &&  LengthConstraintType.FIXED )  {^110^^^^^103^147^[REPLACE] else if  ( h == LengthConstraintType.FIXED )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[REMOVE]^if  ( h ==  ( LengthConstraintType.NONE )  )  {     throw new RuntimeException ( "Not yet implemented." ) ; }else     if  ( h ==  ( LengthConstraintType.FIXED )  )  {         throw new RuntimeException ( "Not yet implemented." ) ;     }else         if  ( h ==  ( LengthConstraintType.RANGE )  )  {             throw new RuntimeException ( "Not yet implemented." ) ;         }^110^^^^^103^147^[REMOVE] ^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[REPLACE]^else if  ( h  !=  LengthConstraintType.RANGE )  {^114^^^^^103^147^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[ADD]^^114^115^116^117^^103^147^[ADD] else if  ( h == LengthConstraintType.RANGE )  {  throw new RuntimeException  (" ")  ; }^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[ADD]^^110^111^112^113^^103^147^[ADD] else if  ( h == LengthConstraintType.FIXED )  {  throw new RuntimeException  (" ")  ; }^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  &&  LengthConstraintType.RANGE )  {^114^^^^^103^147^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[REPLACE]^else if  ( w  ||  LengthConstraintType.FIXED )  {^119^^^^^103^147^[REPLACE] else if  ( w == LengthConstraintType.FIXED )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[REMOVE]^if  ( h ==  ( LengthConstraintType.NONE )  )  {     throw new RuntimeException ( "Not yet implemented." ) ; }else     if  ( h ==  ( LengthConstraintType.FIXED )  )  {         throw new RuntimeException ( "Not yet implemented." ) ;     }else         if  ( h ==  ( LengthConstraintType.RANGE )  )  {             throw new RuntimeException ( "Not yet implemented." ) ;         }^119^^^^^103^147^[REMOVE] ^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[REPLACE]^else {^132^^^^^103^147^[REPLACE] else if  ( w == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  ||  LengthConstraintType.NONE )  {^134^^^^^103^147^[REPLACE] if  ( h == LengthConstraintType.NONE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  ||  LengthConstraintType.RANGE )  {^142^^^^^103^147^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  ||  LengthConstraintType.NONE )  {^120^^^^^103^147^[REPLACE] if  ( h == LengthConstraintType.NONE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[REMOVE]^if  ( h ==  ( LengthConstraintType.NONE )  )  {     throw new RuntimeException ( "Not yet implemented." ) ; }else     if  ( h ==  ( LengthConstraintType.FIXED )  )  {         throw new RuntimeException ( "Not yet implemented." ) ;     }else         if  ( h ==  ( LengthConstraintType.RANGE )  )  {             throw new RuntimeException ( "Not yet implemented." ) ;         }^120^^^^^103^147^[REMOVE] ^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  ||  LengthConstraintType.FIXED )  {^124^^^^^103^147^[REPLACE] else if  ( h == LengthConstraintType.FIXED )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( h  ||  LengthConstraintType.RANGE )  {^127^^^^^103^147^[REPLACE] else if  ( h == LengthConstraintType.RANGE )  {^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[REMOVE]^if  ( h ==  ( LengthConstraintType.NONE )  )  {     throw new RuntimeException ( "Not yet implemented." ) ; }else     if  ( h ==  ( LengthConstraintType.FIXED )  )  {         throw new RuntimeException ( "Not yet implemented." ) ;     }else         if  ( h ==  ( LengthConstraintType.RANGE )  )  {             throw new RuntimeException ( "Not yet implemented." ) ;         }^138^^^^^103^147^[REMOVE] ^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[REPLACE]^return arrangeFF ( container, g2, constraint ) ;^146^^^^^103^147^[REPLACE] return new Size2D (  ) ;^[METHOD] arrange [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  LengthConstraintType h  w  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[REPLACE]^double maxW = 0.0d;^158^^^^^157^172^[REPLACE] double maxW = 0.0;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] GridArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double height  maxH  maxW  width  [TYPE]  Iterator iterator  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  RectangleConstraint c  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[ADD]^^158^159^^^^157^172^[ADD] double maxW = 0.0; double maxH = 0.0;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] GridArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double height  maxH  maxW  width  [TYPE]  Iterator iterator  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  RectangleConstraint c  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[REPLACE]^double maxH = 0.0D;^159^^^^^157^172^[REPLACE] double maxH = 0.0;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] GridArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double height  maxH  maxW  width  [TYPE]  Iterator iterator  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  RectangleConstraint c  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[ADD]^List blocks = container.getBlocks (  ) ;^159^160^^^^157^172^[ADD] double maxH = 0.0; List blocks = container.getBlocks (  ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] GridArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double height  maxH  maxW  width  [TYPE]  Iterator iterator  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  RectangleConstraint c  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[REPLACE]^LengthConstraintType w = constraint.getWidthConstraintType (  ) ;^160^^^^^157^172^[REPLACE] List blocks = container.getBlocks (  ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] GridArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double height  maxH  maxW  width  [TYPE]  Iterator iterator  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  RectangleConstraint c  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[REPLACE]^Iterator.size = blocks.iterator (  ) ;^161^^^^^157^172^[REPLACE] Iterator iterator = blocks.iterator (  ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] GridArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double height  maxH  maxW  width  [TYPE]  Iterator iterator  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  RectangleConstraint c  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[REPLACE]^while  ( iterator.next (  )  )  {^162^^^^^157^172^[REPLACE] while  ( iterator.hasNext (  )  )  {^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] GridArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double height  maxH  maxW  width  [TYPE]  Iterator iterator  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  RectangleConstraint c  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[REPLACE]^maxH = Math.max ( maxH, s.height ) ; ;^165^^^^^157^172^[REPLACE] maxW = Math.max ( maxW, s.width ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] GridArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double height  maxH  maxW  width  [TYPE]  Iterator iterator  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  RectangleConstraint c  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[REPLACE]^maxH = Math.max ( maxH, s.getHeight (  )  ) ; ;^166^^^^^157^172^[REPLACE] maxH = Math.max ( maxH, s.height ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] GridArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double height  maxH  maxW  width  [TYPE]  Iterator iterator  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  RectangleConstraint c  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[REPLACE]^Block b =  ( Block )  iterator.hasNext (  ) ;^163^^^^^157^172^[REPLACE] Block b =  ( Block )  iterator.next (  ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] GridArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double height  maxH  maxW  width  [TYPE]  Iterator iterator  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  RectangleConstraint c  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[ADD]^^163^^^^^157^172^[ADD] Block b =  ( Block )  iterator.next (  ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] GridArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double height  maxH  maxW  width  [TYPE]  Iterator iterator  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  RectangleConstraint c  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[REPLACE]^Size2D s = b.arrange ( g2, constraint2 ) ;^164^^^^^157^172^[REPLACE] Size2D s = b.arrange ( g2, RectangleConstraint.NONE ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] GridArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double height  maxH  maxW  width  [TYPE]  Iterator iterator  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  RectangleConstraint c  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[ADD]^^165^166^^^^157^172^[ADD] maxW = Math.max ( maxW, s.width ) ; maxH = Math.max ( maxH, s.height ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] GridArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double height  maxH  maxW  width  [TYPE]  Iterator iterator  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  RectangleConstraint c  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[REPLACE]^double width = this.columns  ;^168^^^^^157^172^[REPLACE] double width = this.columns * maxW;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] GridArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double height  maxH  maxW  width  [TYPE]  Iterator iterator  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  RectangleConstraint c  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[ADD]^^168^169^^^^157^172^[ADD] double width = this.columns * maxW; double height = this.rows * maxH;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] GridArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double height  maxH  maxW  width  [TYPE]  Iterator iterator  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  RectangleConstraint c  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[REPLACE]^double height = this.rows  ;^169^^^^^157^172^[REPLACE] double height = this.rows * maxH;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] GridArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double height  maxH  maxW  width  [TYPE]  Iterator iterator  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  RectangleConstraint c  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[REPLACE]^RectangleConstraint c = new RectangleConstraint ( width, maxH ) ;^170^^^^^157^172^[REPLACE] RectangleConstraint c = new RectangleConstraint ( width, height ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] GridArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double height  maxH  maxW  width  [TYPE]  Iterator iterator  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  RectangleConstraint c  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[REPLACE]^return arrangeFF ( container, g2, constraint ) ;^171^^^^^157^172^[REPLACE] return arrangeFF ( container, g2, c ) ;^[METHOD] arrangeNN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 [CLASS] GridArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double height  maxH  maxW  width  [TYPE]  Iterator iterator  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  RectangleConstraint c  [TYPE]  long serialVersionUID  [TYPE]  int columns  rows  [TYPE]  Graphics2D g2 
[REPLACE]^double width = constraint.getWidth (  )   ;^185^^^^^183^201^[REPLACE] double width = constraint.getWidth (  )  /  this.columns;^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int c  columns  index  r  rows  [TYPE]  Graphics2D g2 
[REPLACE]^double height = constraint.getHeight (  )   ;^186^^^^^183^201^[REPLACE] double height = constraint.getHeight (  )  / this.rows;^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int c  columns  index  r  rows  [TYPE]  Graphics2D g2 
[REPLACE]^LengthConstraintType w = constraint.getWidthConstraintType (  ) ;^187^^^^^183^201^[REPLACE] List blocks = container.getBlocks (  ) ;^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int c  columns  index  r  rows  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( index == blocks.size (  )  /  2 )  {^191^^^^^183^201^[REPLACE] if  ( index == blocks.size (  )  )  {^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int c  columns  index  r  rows  [TYPE]  Graphics2D g2 
[REPLACE]^for  ( int c = 0L; c  > columns; c++ )  {^188^^^^^183^201^[REPLACE] for  ( int c = 0; c < this.columns; c++ )  {^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int c  columns  index  r  rows  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( index == blocks.length (  )  )  {^191^^^^^183^201^[REPLACE] if  ( index == blocks.size (  )  )  {^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int c  columns  index  r  rows  [TYPE]  Graphics2D g2 
[ADD]^break;^191^192^193^^^183^201^[ADD] if  ( index == blocks.size (  )  )  { break; }^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int c  columns  index  r  rows  [TYPE]  Graphics2D g2 
[REPLACE]^for  ( introws = 1; r  >  this.rows; r++ )  {^189^^^^^183^201^[REPLACE] for  ( int r = 0; r < this.rows; r++ )  {^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int c  columns  index  r  rows  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( index == blocks.size (  )  %  0.5  )  {^191^^^^^183^201^[REPLACE] if  ( index == blocks.size (  )  )  {^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int c  columns  index  r  rows  [TYPE]  Graphics2D g2 
[REPLACE]^int index = r * this.columnsolumns + c;^190^^^^^183^201^[REPLACE] int index = r * this.columns + c;^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int c  columns  index  r  rows  [TYPE]  Graphics2D g2 
[ADD]^^190^^^^^183^201^[ADD] int index = r * this.columns + c;^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int c  columns  index  r  rows  [TYPE]  Graphics2D g2 
[REPLACE]^Block b =  ( Block )  blocks.size ( index ) ;^194^^^^^183^201^[REPLACE] Block b =  ( Block )  blocks.get ( index ) ;^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int c  columns  index  r  rows  [TYPE]  Graphics2D g2 
[REPLACE]^for  ( int r = 0L; r < this.rows; r++ )  {^189^^^^^183^201^[REPLACE] for  ( int r = 0; r < this.rows; r++ )  {^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int c  columns  index  r  rows  [TYPE]  Graphics2D g2 
[ADD]^^189^190^191^192^193^183^201^[ADD] for  ( int r = 0; r < this.rows; r++ )  { int index = r * this.columns + c; if  ( index == blocks.size (  )  )  { break; }^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int c  columns  index  r  rows  [TYPE]  Graphics2D g2 
[REPLACE]^for  ( int r = 0; r < this.rows; r++ )  { int index = r * this.columns + c;^190^^^^^183^201^[REPLACE] int index = r * this.columns + c;^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int c  columns  index  r  rows  [TYPE]  Graphics2D g2 
[ADD]^^194^^^^^183^201^[ADD] Block b =  ( Block )  blocks.get ( index ) ;^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int c  columns  index  r  rows  [TYPE]  Graphics2D g2 
[REPLACE]^forows  ( int r = 0; r  >  rows; r++ )  {^189^^^^^183^201^[REPLACE] for  ( int r = 0; r < this.rows; r++ )  {^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int c  columns  index  r  rows  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( index == blocks.size (  )  + 5 )  {^191^^^^^183^201^[REPLACE] if  ( index == blocks.size (  )  )  {^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int c  columns  index  r  rows  [TYPE]  Graphics2D g2 
[REPLACE]^int index = r * this.columns + columns;^190^^^^^183^201^[REPLACE] int index = r * this.columns + c;^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int c  columns  index  r  rows  [TYPE]  Graphics2D g2 
[REPLACE]^for  ( int c = 4; c < this.columns; c++ )  {^188^^^^^183^201^[REPLACE] for  ( int c = 0; c < this.columns; c++ )  {^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int c  columns  index  r  rows  [TYPE]  Graphics2D g2 
[REPLACE]^for  ( int r = 1; r < this.rows; r++ )  {^189^^^^^183^201^[REPLACE] for  ( int r = 0; r < this.rows; r++ )  {^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int c  columns  index  r  rows  [TYPE]  Graphics2D g2 
[REPLACE]^int index = r * this.columns  >  c;^190^^^^^183^201^[REPLACE] int index = r * this.columns + c;^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int c  columns  index  r  rows  [TYPE]  Graphics2D g2 
[REPLACE]^Block b =  ( Block )  blocks .iterator (  )  ;^194^^^^^183^201^[REPLACE] Block b =  ( Block )  blocks.get ( index ) ;^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int c  columns  index  r  rows  [TYPE]  Graphics2D g2 
[REPLACE]^return new Size2D ( this.columns *rows, this.rows * height ) ;^200^^^^^183^201^[REPLACE] return new Size2D ( this.columns * width, this.rows * height ) ;^[METHOD] arrangeFF [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double height  width  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  RectangleConstraint constraint  [TYPE]  long serialVersionUID  [TYPE]  int c  columns  index  r  rows  [TYPE]  Graphics2D g2 
[REPLACE]^RectangleConstraint c1 = c2.toUnconstrainedHeight (  ) ;^215^^^^^212^226^[REPLACE] RectangleConstraint c1 = constraint.toUnconstrainedHeight (  ) ;^[METHOD] arrangeFR [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  Size2D size1  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double h  [TYPE]  RectangleConstraint c1  c2  constraint  [TYPE]  long serialVersionUID  [TYPE]  int c  columns  index  r  rows  [TYPE]  Graphics2D g2 
[REPLACE]^Size2D s = b.arrange ( g2, constraint2 ) ;^216^^^^^212^226^[REPLACE] Size2D size1 = arrange ( container, g2, c1 ) ;^[METHOD] arrangeFR [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  Size2D size1  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double h  [TYPE]  RectangleConstraint c1  c2  constraint  [TYPE]  long serialVersionUID  [TYPE]  int c  columns  index  r  rows  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( constraint .getHeight (  )  .contains ( size1.getHeight (  )  )  )  {^218^^^^^212^226^[REPLACE] if  ( constraint.getHeightRange (  ) .contains ( size1.getHeight (  )  )  )  {^[METHOD] arrangeFR [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  Size2D size1  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double h  [TYPE]  RectangleConstraint c1  c2  constraint  [TYPE]  long serialVersionUID  [TYPE]  int c  columns  index  r  rows  [TYPE]  Graphics2D g2 
[REPLACE]^return arrangeNN ( container, g2 ) ;^224^^^^^212^226^[REPLACE] return arrange ( container, g2, c2 ) ;^[METHOD] arrangeFR [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  Size2D size1  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double h  [TYPE]  RectangleConstraint c1  c2  constraint  [TYPE]  long serialVersionUID  [TYPE]  int c  columns  index  r  rows  [TYPE]  Graphics2D g2 
[REPLACE]^double h = constraint.Size2DRange (  ) .constrain ( size1.getHeight (  )  ) ;^222^^^^^212^226^[REPLACE] double h = constraint.getHeightRange (  ) .constrain ( size1.getHeight (  )  ) ;^[METHOD] arrangeFR [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  Size2D size1  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double h  [TYPE]  RectangleConstraint c1  c2  constraint  [TYPE]  long serialVersionUID  [TYPE]  int c  columns  index  r  rows  [TYPE]  Graphics2D g2 
[REPLACE]^RectangleConstraint c2 = c2.toFixedHeight ( h ) ;^223^^^^^212^226^[REPLACE] RectangleConstraint c2 = constraint.toFixedHeight ( h ) ;^[METHOD] arrangeFR [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  Size2D size1  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double h  [TYPE]  RectangleConstraint c1  c2  constraint  [TYPE]  long serialVersionUID  [TYPE]  int c  columns  index  r  rows  [TYPE]  Graphics2D g2 
[ADD]^^223^224^^^^212^226^[ADD] RectangleConstraint c2 = constraint.toFixedHeight ( h ) ; return arrange ( container, g2, c2 ) ;^[METHOD] arrangeFR [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  Size2D size1  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double h  [TYPE]  RectangleConstraint c1  c2  constraint  [TYPE]  long serialVersionUID  [TYPE]  int c  columns  index  r  rows  [TYPE]  Graphics2D g2 
[REPLACE]^return false;^219^^^^^212^226^[REPLACE] return size1;^[METHOD] arrangeFR [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  Size2D size1  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double h  [TYPE]  RectangleConstraint c1  c2  constraint  [TYPE]  long serialVersionUID  [TYPE]  int c  columns  index  r  rows  [TYPE]  Graphics2D g2 
[REPLACE]^double h = c2.getHeightRange (  ) .constrain ( size1.getHeight (  )  ) ;^222^^^^^212^226^[REPLACE] double h = constraint.getHeightRange (  ) .constrain ( size1.getHeight (  )  ) ;^[METHOD] arrangeFR [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  Size2D size1  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double h  [TYPE]  RectangleConstraint c1  c2  constraint  [TYPE]  long serialVersionUID  [TYPE]  int c  columns  index  r  rows  [TYPE]  Graphics2D g2 
[REPLACE]^RectangleConstraint c2 = constraint .toFixedWidth ( h )  ;^223^^^^^212^226^[REPLACE] RectangleConstraint c2 = constraint.toFixedHeight ( h ) ;^[METHOD] arrangeFR [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  Size2D size1  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double h  [TYPE]  RectangleConstraint c1  c2  constraint  [TYPE]  long serialVersionUID  [TYPE]  int c  columns  index  r  rows  [TYPE]  Graphics2D g2 
[REPLACE]^double width = constraint.getWidth (  )   ;^240^^^^^237^259^[REPLACE] double width = constraint.getWidth (  )  /  this.columns;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double maxH  width  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  RectangleConstraint constraint  constraint2  constraint3  [TYPE]  long serialVersionUID  [TYPE]  int c  columns  index  r  rows  [TYPE]  Graphics2D g2 
[REPLACE]^RectangleConstraint constraint2 = constraint .toFixedHeight ( width )  ;^241^^^^^237^259^[REPLACE] RectangleConstraint constraint2 = constraint.toFixedWidth ( width ) ;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double maxH  width  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  RectangleConstraint constraint  constraint2  constraint3  [TYPE]  long serialVersionUID  [TYPE]  int c  columns  index  r  rows  [TYPE]  Graphics2D g2 
[ADD]^^241^^^^^237^259^[ADD] RectangleConstraint constraint2 = constraint.toFixedWidth ( width ) ;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double maxH  width  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  RectangleConstraint constraint  constraint2  constraint3  [TYPE]  long serialVersionUID  [TYPE]  int c  columns  index  r  rows  [TYPE]  Graphics2D g2 
[REPLACE]^LengthConstraintType w = constraint.getWidthConstraintType (  ) ;^242^^^^^237^259^[REPLACE] List blocks = container.getBlocks (  ) ;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double maxH  width  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  RectangleConstraint constraint  constraint2  constraint3  [TYPE]  long serialVersionUID  [TYPE]  int c  columns  index  r  rows  [TYPE]  Graphics2D g2 
[REPLACE]^double maxH = 2.0d;^243^^^^^237^259^[REPLACE] double maxH = 0.0;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double maxH  width  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  RectangleConstraint constraint  constraint2  constraint3  [TYPE]  long serialVersionUID  [TYPE]  int c  columns  index  r  rows  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( index == blocks.get (  )  /  2 )  {^247^^^^^237^259^[REPLACE] if  ( index == blocks.size (  )  )  {^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double maxH  width  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  RectangleConstraint constraint  constraint2  constraint3  [TYPE]  long serialVersionUID  [TYPE]  int c  columns  index  r  rows  [TYPE]  Graphics2D g2 
[REPLACE]^for  ( int r = 3; r  !=  this.rows; r++ )  {^244^^^^^237^259^[REPLACE] for  ( int r = 0; r < this.rows; r++ )  {^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double maxH  width  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  RectangleConstraint constraint  constraint2  constraint3  [TYPE]  long serialVersionUID  [TYPE]  int c  columns  index  r  rows  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( index == blocks.size (  )  /  0.5  )  {^247^^^^^237^259^[REPLACE] if  ( index == blocks.size (  )  )  {^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double maxH  width  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  RectangleConstraint constraint  constraint2  constraint3  [TYPE]  long serialVersionUID  [TYPE]  int c  columns  index  r  rows  [TYPE]  Graphics2D g2 
[REPLACE]^for  ( intcolumns = 0; c  !=  this.columns; c++ )  {^245^^^^^237^259^[REPLACE] for  ( int c = 0; c < this.columns; c++ )  {^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double maxH  width  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  RectangleConstraint constraint  constraint2  constraint3  [TYPE]  long serialVersionUID  [TYPE]  int c  columns  index  r  rows  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( index == blocks.size (  )  - 3 )  {^247^^^^^237^259^[REPLACE] if  ( index == blocks.size (  )  )  {^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double maxH  width  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  RectangleConstraint constraint  constraint2  constraint3  [TYPE]  long serialVersionUID  [TYPE]  int c  columns  index  r  rows  [TYPE]  Graphics2D g2 
[ADD]^break;^247^248^249^^^237^259^[ADD] if  ( index == blocks.size (  )  )  { break; }^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double maxH  width  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  RectangleConstraint constraint  constraint2  constraint3  [TYPE]  long serialVersionUID  [TYPE]  int c  columns  index  r  rows  [TYPE]  Graphics2D g2 
[REPLACE]^maxH = Math.max ( maxH, s.height ) ; ;^252^^^^^237^259^[REPLACE] maxH = Math.max ( maxH, s.getHeight (  )  ) ;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double maxH  width  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  RectangleConstraint constraint  constraint2  constraint3  [TYPE]  long serialVersionUID  [TYPE]  int c  columns  index  r  rows  [TYPE]  Graphics2D g2 
[REPLACE]^int index = rows * this.columns + c;^246^^^^^237^259^[REPLACE] int index = r * this.columns + c;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double maxH  width  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  RectangleConstraint constraint  constraint2  constraint3  [TYPE]  long serialVersionUID  [TYPE]  int c  columns  index  r  rows  [TYPE]  Graphics2D g2 
[REPLACE]^Block b =  ( Block )  blocks .iterator (  )  ;^250^^^^^237^259^[REPLACE] Block b =  ( Block )  blocks.get ( index ) ;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double maxH  width  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  RectangleConstraint constraint  constraint2  constraint3  [TYPE]  long serialVersionUID  [TYPE]  int c  columns  index  r  rows  [TYPE]  Graphics2D g2 
[ADD]^^250^251^^^^237^259^[ADD] Block b =  ( Block )  blocks.get ( index ) ; Size2D s = b.arrange ( g2, constraint2 ) ;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double maxH  width  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  RectangleConstraint constraint  constraint2  constraint3  [TYPE]  long serialVersionUID  [TYPE]  int c  columns  index  r  rows  [TYPE]  Graphics2D g2 
[REPLACE]^Size2D s = b .arrange ( container , g2 , constraint3 )  ;^251^^^^^237^259^[REPLACE] Size2D s = b.arrange ( g2, constraint2 ) ;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double maxH  width  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  RectangleConstraint constraint  constraint2  constraint3  [TYPE]  long serialVersionUID  [TYPE]  int c  columns  index  r  rows  [TYPE]  Graphics2D g2 
[ADD]^^251^^^^^237^259^[ADD] Size2D s = b.arrange ( g2, constraint2 ) ;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double maxH  width  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  RectangleConstraint constraint  constraint2  constraint3  [TYPE]  long serialVersionUID  [TYPE]  int c  columns  index  r  rows  [TYPE]  Graphics2D g2 
[REPLACE]^for  ( int c = 0 * 1; c < this.columns; c++ )  {^245^^^^^237^259^[REPLACE] for  ( int c = 0; c < this.columns; c++ )  {^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double maxH  width  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  RectangleConstraint constraint  constraint2  constraint3  [TYPE]  long serialVersionUID  [TYPE]  int c  columns  index  r  rows  [TYPE]  Graphics2D g2 
[REPLACE]^int index = r * this.columns +rows;^246^^^^^237^259^[REPLACE] int index = r * this.columns + c;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double maxH  width  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  RectangleConstraint constraint  constraint2  constraint3  [TYPE]  long serialVersionUID  [TYPE]  int c  columns  index  r  rows  [TYPE]  Graphics2D g2 
[REPLACE]^for  ( int c = 0; c  == columns; c++ )  {^245^^^^^237^259^[REPLACE] for  ( int c = 0; c < this.columns; c++ )  {^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double maxH  width  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  RectangleConstraint constraint  constraint2  constraint3  [TYPE]  long serialVersionUID  [TYPE]  int c  columns  index  r  rows  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( index == blocks.size (  )  *  0.5  )  {^247^^^^^237^259^[REPLACE] if  ( index == blocks.size (  )  )  {^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double maxH  width  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  RectangleConstraint constraint  constraint2  constraint3  [TYPE]  long serialVersionUID  [TYPE]  int c  columns  index  r  rows  [TYPE]  Graphics2D g2 
[REPLACE]^int index = r * this.columnsolumns + c;^246^^^^^237^259^[REPLACE] int index = r * this.columns + c;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double maxH  width  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  RectangleConstraint constraint  constraint2  constraint3  [TYPE]  long serialVersionUID  [TYPE]  int c  columns  index  r  rows  [TYPE]  Graphics2D g2 
[REPLACE]^Block b =  ( Block )  blocks.size ( index ) ;^250^^^^^237^259^[REPLACE] Block b =  ( Block )  blocks.get ( index ) ;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double maxH  width  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  RectangleConstraint constraint  constraint2  constraint3  [TYPE]  long serialVersionUID  [TYPE]  int c  columns  index  r  rows  [TYPE]  Graphics2D g2 
[REPLACE]^Size2D s = b.arrange ( g2, constraint3 ) ;^251^^^^^237^259^[REPLACE] Size2D s = b.arrange ( g2, constraint2 ) ;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double maxH  width  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  RectangleConstraint constraint  constraint2  constraint3  [TYPE]  long serialVersionUID  [TYPE]  int c  columns  index  r  rows  [TYPE]  Graphics2D g2 
[REPLACE]^for  ( int r = 1; r < this.rows; r++ )  {^244^^^^^237^259^[REPLACE] for  ( int r = 0; r < this.rows; r++ )  {^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double maxH  width  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  RectangleConstraint constraint  constraint2  constraint3  [TYPE]  long serialVersionUID  [TYPE]  int c  columns  index  r  rows  [TYPE]  Graphics2D g2 
[REPLACE]^for  ( int c = 2; c < this.columns; c++ )  {^245^^^^^237^259^[REPLACE] for  ( int c = 0; c < this.columns; c++ )  {^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double maxH  width  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  RectangleConstraint constraint  constraint2  constraint3  [TYPE]  long serialVersionUID  [TYPE]  int c  columns  index  r  rows  [TYPE]  Graphics2D g2 
[REPLACE]^int index = r * this.columnsolumns + columns;^246^^^^^237^259^[REPLACE] int index = r * this.columns + c;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double maxH  width  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  RectangleConstraint constraint  constraint2  constraint3  [TYPE]  long serialVersionUID  [TYPE]  int c  columns  index  r  rows  [TYPE]  Graphics2D g2 
[REPLACE]^Size2D s = b .arrange ( container , g2 , constraint2 )  ;^251^^^^^237^259^[REPLACE] Size2D s = b.arrange ( g2, constraint2 ) ;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double maxH  width  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  RectangleConstraint constraint  constraint2  constraint3  [TYPE]  long serialVersionUID  [TYPE]  int c  columns  index  r  rows  [TYPE]  Graphics2D g2 
[REPLACE]^RectangleConstraint constraint3 = constraint .toFixedWidth ( maxH )  ;^255^256^257^^^237^259^[REPLACE] RectangleConstraint constraint3 = constraint.toFixedHeight ( maxH * this.rows ) ;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double maxH  width  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  RectangleConstraint constraint  constraint2  constraint3  [TYPE]  long serialVersionUID  [TYPE]  int c  columns  index  r  rows  [TYPE]  Graphics2D g2 
[REPLACE]^return arrange ( container, g2, constraint2 ) ;^258^^^^^237^259^[REPLACE] return arrange ( container, g2, constraint3 ) ;^[METHOD] arrangeFN [TYPE] Size2D [PARAMETER] BlockContainer container Graphics2D g2 RectangleConstraint constraint [CLASS] GridArrangement   [TYPE]  Size2D s  [TYPE]  boolean false  true  [TYPE]  BlockContainer container  [TYPE]  double maxH  width  [TYPE]  Block b  [TYPE]  List blocks  [TYPE]  RectangleConstraint constraint  constraint2  constraint3  [TYPE]  long serialVersionUID  [TYPE]  int c  columns  index  r  rows  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( obj  !=  this )  {^276^^^^^275^290^[REPLACE] if  ( obj == this )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] GridArrangement   [TYPE]  GridArrangement that  [TYPE]  Object obj  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int c  columns  index  r  rows 
[ADD]^return true;^276^277^278^^^275^290^[ADD] if  ( obj == this )  { return true; }^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] GridArrangement   [TYPE]  GridArrangement that  [TYPE]  Object obj  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int c  columns  index  r  rows 
[REPLACE]^return false;^277^^^^^275^290^[REPLACE] return true;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] GridArrangement   [TYPE]  GridArrangement that  [TYPE]  Object obj  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int c  columns  index  r  rows 
[REPLACE]^if  ( ! ! ( obj instanceof GridArrangement )  )  {^279^^^^^275^290^[REPLACE] if  ( ! ( obj instanceof GridArrangement )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] GridArrangement   [TYPE]  GridArrangement that  [TYPE]  Object obj  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int c  columns  index  r  rows 
[ADD]^return false;^279^280^281^^^275^290^[ADD] if  ( ! ( obj instanceof GridArrangement )  )  { return false; }^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] GridArrangement   [TYPE]  GridArrangement that  [TYPE]  Object obj  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int c  columns  index  r  rows 
[REPLACE]^return true;^280^^^^^275^290^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] GridArrangement   [TYPE]  GridArrangement that  [TYPE]  Object obj  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int c  columns  index  r  rows 
[REPLACE]^double maxW = 0.0;^282^^^^^275^290^[REPLACE] GridArrangement that =  ( GridArrangement )  obj;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] GridArrangement   [TYPE]  GridArrangement that  [TYPE]  Object obj  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int c  columns  index  r  rows 
[ADD]^^282^^^^^275^290^[ADD] GridArrangement that =  ( GridArrangement )  obj;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] GridArrangement   [TYPE]  GridArrangement that  [TYPE]  Object obj  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int c  columns  index  r  rows 
[REPLACE]^if  (rows  ==  that.columns )  {^283^^^^^275^290^[REPLACE] if  ( this.columns != that.columns )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] GridArrangement   [TYPE]  GridArrangement that  [TYPE]  Object obj  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int c  columns  index  r  rows 
[REPLACE]^return true;^284^^^^^275^290^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] GridArrangement   [TYPE]  GridArrangement that  [TYPE]  Object obj  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int c  columns  index  r  rows 
[REPLACE]^if  ( this.rows  ==  that.rows )  {^286^^^^^275^290^[REPLACE] if  ( this.rows != that.rows )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] GridArrangement   [TYPE]  GridArrangement that  [TYPE]  Object obj  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int c  columns  index  r  rows 
[REPLACE]^return true;^287^^^^^275^290^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] GridArrangement   [TYPE]  GridArrangement that  [TYPE]  Object obj  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int c  columns  index  r  rows 
[REPLACE]^return false;^289^^^^^275^290^[REPLACE] return true;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] GridArrangement   [TYPE]  GridArrangement that  [TYPE]  Object obj  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int c  columns  index  r  rows 
