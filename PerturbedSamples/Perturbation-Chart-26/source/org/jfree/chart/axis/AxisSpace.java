[REPLACE]^private static final long serialVersionUID  = null ;^64^^^^^^^[REPLACE] private static final long serialVersionUID = -2490732595134766305L;^ [CLASS] AxisSpace  
[REPLACE]^private float top;^67^^^^^^^[REPLACE] private double top;^ [CLASS] AxisSpace  
[REPLACE]^this.top = 3.0d;^82^^^^^81^86^[REPLACE] this.top = 0.0;^[METHOD] <init> [TYPE] AxisSpace() [PARAMETER] [CLASS] AxisSpace   [TYPE]  double bottom  left  right  top  [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^this.left = 0.0; ;^83^^^^^81^86^[REPLACE] this.bottom = 0.0;^[METHOD] <init> [TYPE] AxisSpace() [PARAMETER] [CLASS] AxisSpace   [TYPE]  double bottom  left  right  top  [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^this.left = 4.0d;^84^^^^^81^86^[REPLACE] this.left = 0.0;^[METHOD] <init> [TYPE] AxisSpace() [PARAMETER] [CLASS] AxisSpace   [TYPE]  double bottom  left  right  top  [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[ADD]^^84^^^^^81^86^[ADD] this.left = 0.0;^[METHOD] <init> [TYPE] AxisSpace() [PARAMETER] [CLASS] AxisSpace   [TYPE]  double bottom  left  right  top  [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^this.right = 3.0d;^85^^^^^81^86^[REPLACE] this.right = 0.0;^[METHOD] <init> [TYPE] AxisSpace() [PARAMETER] [CLASS] AxisSpace   [TYPE]  double bottom  left  right  top  [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^return this.right;^94^^^^^93^95^[REPLACE] return this.top;^[METHOD] getTop [TYPE] double [PARAMETER] [CLASS] AxisSpace   [TYPE]  double bottom  left  right  top  [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^this.top += space; ;^103^^^^^102^104^[REPLACE] this.top = space;^[METHOD] setTop [TYPE] void [PARAMETER] double space [CLASS] AxisSpace   [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^return this.right;^112^^^^^111^113^[REPLACE] return this.bottom;^[METHOD] getBottom [TYPE] double [PARAMETER] [CLASS] AxisSpace   [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^this.top += space; ;^121^^^^^120^122^[REPLACE] this.bottom = space;^[METHOD] setBottom [TYPE] void [PARAMETER] double space [CLASS] AxisSpace   [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^return this.right;^130^^^^^129^131^[REPLACE] return this.left;^[METHOD] getLeft [TYPE] double [PARAMETER] [CLASS] AxisSpace   [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^this.left = 0.0; ;^139^^^^^138^140^[REPLACE] this.left = space;^[METHOD] setLeft [TYPE] void [PARAMETER] double space [CLASS] AxisSpace   [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[ADD]^^139^^^^^138^140^[ADD] this.left = space;^[METHOD] setLeft [TYPE] void [PARAMETER] double space [CLASS] AxisSpace   [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^return false;^148^^^^^147^149^[REPLACE] return this.right;^[METHOD] getRight [TYPE] double [PARAMETER] [CLASS] AxisSpace   [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^this.right += space; ;^157^^^^^156^158^[REPLACE] this.right = space;^[METHOD] setRight [TYPE] void [PARAMETER] double space [CLASS] AxisSpace   [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^if  ( edge != null )  {^167^^^^^166^185^[REPLACE] if  ( edge == null )  {^[METHOD] add [TYPE] void [PARAMETER] double space RectangleEdge edge [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^throw new IllegalStateException  (" ")  ; ;^168^^^^^166^185^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] add [TYPE] void [PARAMETER] double space RectangleEdge edge [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[ADD]^^168^^^^^166^185^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] add [TYPE] void [PARAMETER] double space RectangleEdge edge [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^return ;^168^^^^^166^185^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] add [TYPE] void [PARAMETER] double space RectangleEdge edge [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^if  ( edge  &&  RectangleEdge.TOP )  {^170^^^^^166^185^[REPLACE] if  ( edge == RectangleEdge.TOP )  {^[METHOD] add [TYPE] void [PARAMETER] double space RectangleEdge edge [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^if  ( edge  &&  RectangleEdge.BOTTOM )  {^173^^^^^166^185^[REPLACE] else if  ( edge == RectangleEdge.BOTTOM )  {^[METHOD] add [TYPE] void [PARAMETER] double space RectangleEdge edge [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^else {^176^^^^^166^185^[REPLACE] else if  ( edge == RectangleEdge.LEFT )  {^[METHOD] add [TYPE] void [PARAMETER] double space RectangleEdge edge [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^if  ( edge  &&  RectangleEdge.RIGHT )  {^179^^^^^166^185^[REPLACE] else if  ( edge == RectangleEdge.RIGHT )  {^[METHOD] add [TYPE] void [PARAMETER] double space RectangleEdge edge [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[ADD]^this.right += space;^179^180^181^^^166^185^[ADD] else if  ( edge == RectangleEdge.RIGHT )  { this.right += space; }^[METHOD] add [TYPE] void [PARAMETER] double space RectangleEdge edge [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^183^^^^^166^185^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] add [TYPE] void [PARAMETER] double space RectangleEdge edge [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^this.top += space; ;^180^^^^^166^185^[REPLACE] this.right += space;^[METHOD] add [TYPE] void [PARAMETER] double space RectangleEdge edge [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[ADD]^^183^^^^^166^185^[ADD] throw new IllegalStateException  (" ")  ;^[METHOD] add [TYPE] void [PARAMETER] double space RectangleEdge edge [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^this.right += space; ;^177^^^^^166^185^[REPLACE] this.left += space;^[METHOD] add [TYPE] void [PARAMETER] double space RectangleEdge edge [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[ADD]^^177^^^^^166^185^[ADD] this.left += space;^[METHOD] add [TYPE] void [PARAMETER] double space RectangleEdge edge [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^else if  ( edge  ||  RectangleEdge.RIGHT )  {^179^^^^^166^185^[REPLACE] else if  ( edge == RectangleEdge.RIGHT )  {^[METHOD] add [TYPE] void [PARAMETER] double space RectangleEdge edge [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^this.right += space; ;^174^^^^^166^185^[REPLACE] this.bottom += space;^[METHOD] add [TYPE] void [PARAMETER] double space RectangleEdge edge [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REMOVE]^if  ( edge ==  ( RIGHT )  )  {     if  (  ( this.right )  < space )  {         this.right = space;     } }else {     throw new IllegalStateException ( "AxisSpace.ensureAtLeast (  ) : unrecognised AxisLocation." ) ; }^176^^^^^166^185^[REMOVE] ^[METHOD] add [TYPE] void [PARAMETER] double space RectangleEdge edge [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^else {^179^^^^^166^185^[REPLACE] else if  ( edge == RectangleEdge.RIGHT )  {^[METHOD] add [TYPE] void [PARAMETER] double space RectangleEdge edge [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^return ;^183^^^^^166^185^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] add [TYPE] void [PARAMETER] double space RectangleEdge edge [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[ADD]^^179^180^181^^^166^185^[ADD] else if  ( edge == RectangleEdge.RIGHT )  { this.right += space; }^[METHOD] add [TYPE] void [PARAMETER] double space RectangleEdge edge [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[ADD]^^180^^^^^166^185^[ADD] this.right += space;^[METHOD] add [TYPE] void [PARAMETER] double space RectangleEdge edge [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^this.right += space; ;^171^^^^^166^185^[REPLACE] this.top += space;^[METHOD] add [TYPE] void [PARAMETER] double space RectangleEdge edge [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^else {^173^^^^^166^185^[REPLACE] else if  ( edge == RectangleEdge.BOTTOM )  {^[METHOD] add [TYPE] void [PARAMETER] double space RectangleEdge edge [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[ADD]^this.bottom += space;^173^174^175^^^166^185^[ADD] else if  ( edge == RectangleEdge.BOTTOM )  { this.bottom += space; }^[METHOD] add [TYPE] void [PARAMETER] double space RectangleEdge edge [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^else if  ( edge  !=  RectangleEdge.LEFT )  {^176^^^^^166^185^[REPLACE] else if  ( edge == RectangleEdge.LEFT )  {^[METHOD] add [TYPE] void [PARAMETER] double space RectangleEdge edge [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^if  ( edge  ||  RectangleEdge.LEFT )  {^176^^^^^166^185^[REPLACE] else if  ( edge == RectangleEdge.LEFT )  {^[METHOD] add [TYPE] void [PARAMETER] double space RectangleEdge edge [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^else if  ( edge  !=  RectangleEdge.RIGHT )  {^179^^^^^166^185^[REPLACE] else if  ( edge == RectangleEdge.RIGHT )  {^[METHOD] add [TYPE] void [PARAMETER] double space RectangleEdge edge [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^this.bottom = Math.max ( this.bottom, space.bottom ) ; ;^193^^^^^192^197^[REPLACE] this.top = Math.max ( this.top, space.top ) ;^[METHOD] ensureAtLeast [TYPE] void [PARAMETER] AxisSpace space [CLASS] AxisSpace   [TYPE]  AxisSpace space  [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID 
[REPLACE]^this.left = Math.max ( this.left, space.left ) ; ;^194^^^^^192^197^[REPLACE] this.bottom = Math.max ( this.bottom, space.bottom ) ;^[METHOD] ensureAtLeast [TYPE] void [PARAMETER] AxisSpace space [CLASS] AxisSpace   [TYPE]  AxisSpace space  [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID 
[REPLACE]^this.bottom = Math.max ( this.bottom, space.bottom ) ; ;^195^^^^^192^197^[REPLACE] this.left = Math.max ( this.left, space.left ) ;^[METHOD] ensureAtLeast [TYPE] void [PARAMETER] AxisSpace space [CLASS] AxisSpace   [TYPE]  AxisSpace space  [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID 
[REPLACE]^this.left = Math.max ( this.left, space.left ) ; ;^196^^^^^192^197^[REPLACE] this.right = Math.max ( this.right, space.right ) ;^[METHOD] ensureAtLeast [TYPE] void [PARAMETER] AxisSpace space [CLASS] AxisSpace   [TYPE]  AxisSpace space  [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID 
[REPLACE]^if  ( edge  !=  RectangleEdge.TOP )  {^207^^^^^206^232^[REPLACE] if  ( edge == RectangleEdge.TOP )  {^[METHOD] ensureAtLeast [TYPE] void [PARAMETER] double space RectangleEdge edge [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[ADD]^^207^208^209^210^^206^232^[ADD] if  ( edge == RectangleEdge.TOP )  { if  ( this.top < space )  { this.top = space; }^[METHOD] ensureAtLeast [TYPE] void [PARAMETER] double space RectangleEdge edge [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^if  ( edge  ||  RectangleEdge.BOTTOM )  {^212^^^^^206^232^[REPLACE] else if  ( edge == RectangleEdge.BOTTOM )  {^[METHOD] ensureAtLeast [TYPE] void [PARAMETER] double space RectangleEdge edge [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^if  ( edge  !=  RectangleEdge.LEFT )  {^217^^^^^206^232^[REPLACE] else if  ( edge == RectangleEdge.LEFT )  {^[METHOD] ensureAtLeast [TYPE] void [PARAMETER] double space RectangleEdge edge [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[ADD]^^217^218^219^220^^206^232^[ADD] else if  ( edge == RectangleEdge.LEFT )  { if  ( this.left < space )  { this.left = space; }^[METHOD] ensureAtLeast [TYPE] void [PARAMETER] double space RectangleEdge edge [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^else {^222^^^^^206^232^[REPLACE] else if  ( edge == RectangleEdge.RIGHT )  {^[METHOD] ensureAtLeast [TYPE] void [PARAMETER] double space RectangleEdge edge [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[ADD]^^222^223^224^225^^206^232^[ADD] else if  ( edge == RectangleEdge.RIGHT )  { if  ( this.right < space )  { this.right = space; }^[METHOD] ensureAtLeast [TYPE] void [PARAMETER] double space RectangleEdge edge [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^return ;^228^229^230^^^222^231^[REPLACE] throw new IllegalStateException ( "AxisSpace.ensureAtLeast (  ) : unrecognised AxisLocation." ) ;^[METHOD] ensureAtLeast [TYPE] void [PARAMETER] double space RectangleEdge edge [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^if  ( this.right  ==  space )  {^223^^^^^206^232^[REPLACE] if  ( this.right < space )  {^[METHOD] ensureAtLeast [TYPE] void [PARAMETER] double space RectangleEdge edge [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^this.right += space; ;^224^^^^^206^232^[REPLACE] this.right = space;^[METHOD] ensureAtLeast [TYPE] void [PARAMETER] double space RectangleEdge edge [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^if  ( this.right  >  space )  {^223^^^^^206^232^[REPLACE] if  ( this.right < space )  {^[METHOD] ensureAtLeast [TYPE] void [PARAMETER] double space RectangleEdge edge [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[ADD]^^224^^^^^206^232^[ADD] this.right = space;^[METHOD] ensureAtLeast [TYPE] void [PARAMETER] double space RectangleEdge edge [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^throw new IllegalStateException ( "AxisSpace.ensureAtLeast (  ) : unrecognised AxisLocation." ;^228^229^230^^^206^232^[REPLACE] throw new IllegalStateException ( "AxisSpace.ensureAtLeast (  ) : unrecognised AxisLocation." ) ;^[METHOD] ensureAtLeast [TYPE] void [PARAMETER] double space RectangleEdge edge [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^if  ( this.left  <=  space )  {^218^^^^^206^232^[REPLACE] if  ( this.left < space )  {^[METHOD] ensureAtLeast [TYPE] void [PARAMETER] double space RectangleEdge edge [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[ADD]^^218^219^220^^^206^232^[ADD] if  ( this.left < space )  { this.left = space; }^[METHOD] ensureAtLeast [TYPE] void [PARAMETER] double space RectangleEdge edge [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^this.left = 0.0; ;^219^^^^^206^232^[REPLACE] this.left = space;^[METHOD] ensureAtLeast [TYPE] void [PARAMETER] double space RectangleEdge edge [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^if  (top  <=  space )  {^218^^^^^206^232^[REPLACE] if  ( this.left < space )  {^[METHOD] ensureAtLeast [TYPE] void [PARAMETER] double space RectangleEdge edge [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^if  ( edge  !=  RectangleEdge.RIGHT )  {^222^^^^^206^232^[REPLACE] else if  ( edge == RectangleEdge.RIGHT )  {^[METHOD] ensureAtLeast [TYPE] void [PARAMETER] double space RectangleEdge edge [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^throw new IllegalStateException ( "AxisSpace.ensureAtLeast (  ) : unrecognised AxisLocation." ;^228^229^230^^^222^231^[REPLACE] throw new IllegalStateException ( "AxisSpace.ensureAtLeast (  ) : unrecognised AxisLocation." ) ;^[METHOD] ensureAtLeast [TYPE] void [PARAMETER] double space RectangleEdge edge [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^if  ( this.right  >=  space )  {^223^^^^^206^232^[REPLACE] if  ( this.right < space )  {^[METHOD] ensureAtLeast [TYPE] void [PARAMETER] double space RectangleEdge edge [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[ADD]^^223^224^225^^^206^232^[ADD] if  ( this.right < space )  { this.right = space; }^[METHOD] ensureAtLeast [TYPE] void [PARAMETER] double space RectangleEdge edge [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^return ;^228^229^230^^^206^232^[REPLACE] throw new IllegalStateException ( "AxisSpace.ensureAtLeast (  ) : unrecognised AxisLocation." ) ;^[METHOD] ensureAtLeast [TYPE] void [PARAMETER] double space RectangleEdge edge [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[ADD]^^228^229^230^^^206^232^[ADD] throw new IllegalStateException ( "AxisSpace.ensureAtLeast (  ) : unrecognised AxisLocation." ) ;^[METHOD] ensureAtLeast [TYPE] void [PARAMETER] double space RectangleEdge edge [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^if  ( this.bottom  >=  space )  {^213^^^^^206^232^[REPLACE] if  ( this.bottom < space )  {^[METHOD] ensureAtLeast [TYPE] void [PARAMETER] double space RectangleEdge edge [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^this.top += space; ;^214^^^^^206^232^[REPLACE] this.bottom = space;^[METHOD] ensureAtLeast [TYPE] void [PARAMETER] double space RectangleEdge edge [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[ADD]^this.bottom = space;^213^214^215^^^206^232^[ADD] if  ( this.bottom < space )  { this.bottom = space; }^[METHOD] ensureAtLeast [TYPE] void [PARAMETER] double space RectangleEdge edge [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^else {^217^^^^^206^232^[REPLACE] else if  ( edge == RectangleEdge.LEFT )  {^[METHOD] ensureAtLeast [TYPE] void [PARAMETER] double space RectangleEdge edge [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^if  ( this.right  !=  space )  {^223^^^^^206^232^[REPLACE] if  ( this.right < space )  {^[METHOD] ensureAtLeast [TYPE] void [PARAMETER] double space RectangleEdge edge [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[ADD]^this.right = space;^223^224^225^^^206^232^[ADD] if  ( this.right < space )  { this.right = space; }^[METHOD] ensureAtLeast [TYPE] void [PARAMETER] double space RectangleEdge edge [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^if  ( this.left  ==  space )  {^218^^^^^206^232^[REPLACE] if  ( this.left < space )  {^[METHOD] ensureAtLeast [TYPE] void [PARAMETER] double space RectangleEdge edge [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^if  ( this.left  !=  space )  {^218^^^^^206^232^[REPLACE] if  ( this.left < space )  {^[METHOD] ensureAtLeast [TYPE] void [PARAMETER] double space RectangleEdge edge [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^if  ( top  ==  space )  {^223^^^^^206^232^[REPLACE] if  ( this.right < space )  {^[METHOD] ensureAtLeast [TYPE] void [PARAMETER] double space RectangleEdge edge [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^if  ( top  >  space )  {^223^^^^^206^232^[REPLACE] if  ( this.right < space )  {^[METHOD] ensureAtLeast [TYPE] void [PARAMETER] double space RectangleEdge edge [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[ADD]^^219^^^^^206^232^[ADD] this.left = space;^[METHOD] ensureAtLeast [TYPE] void [PARAMETER] double space RectangleEdge edge [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^if  (top  >  space )  {^208^^^^^206^232^[REPLACE] if  ( this.top < space )  {^[METHOD] ensureAtLeast [TYPE] void [PARAMETER] double space RectangleEdge edge [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^this.top += space; ;^209^^^^^206^232^[REPLACE] this.top = space;^[METHOD] ensureAtLeast [TYPE] void [PARAMETER] double space RectangleEdge edge [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^if  ( this.top  >  space )  {^208^^^^^206^232^[REPLACE] if  ( this.top < space )  {^[METHOD] ensureAtLeast [TYPE] void [PARAMETER] double space RectangleEdge edge [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^else if  ( edge  ||  RectangleEdge.BOTTOM )  {^212^^^^^206^232^[REPLACE] else if  ( edge == RectangleEdge.BOTTOM )  {^[METHOD] ensureAtLeast [TYPE] void [PARAMETER] double space RectangleEdge edge [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^if  ( edge  ||  RectangleEdge.RIGHT )  {^222^^^^^206^232^[REPLACE] else if  ( edge == RectangleEdge.RIGHT )  {^[METHOD] ensureAtLeast [TYPE] void [PARAMETER] double space RectangleEdge edge [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[ADD]^^228^229^230^^^222^231^[ADD] throw new IllegalStateException ( "AxisSpace.ensureAtLeast (  ) : unrecognised AxisLocation." ) ;^[METHOD] ensureAtLeast [TYPE] void [PARAMETER] double space RectangleEdge edge [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^if  (top  ==  space )  {^218^^^^^206^232^[REPLACE] if  ( this.left < space )  {^[METHOD] ensureAtLeast [TYPE] void [PARAMETER] double space RectangleEdge edge [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^if  (top  >  space )  {^223^^^^^206^232^[REPLACE] if  ( this.right < space )  {^[METHOD] ensureAtLeast [TYPE] void [PARAMETER] double space RectangleEdge edge [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^if  ( this.bottom  >  space )  {^213^^^^^206^232^[REPLACE] if  ( this.bottom < space )  {^[METHOD] ensureAtLeast [TYPE] void [PARAMETER] double space RectangleEdge edge [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[ADD]^^214^^^^^206^232^[ADD] this.bottom = space;^[METHOD] ensureAtLeast [TYPE] void [PARAMETER] double space RectangleEdge edge [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^if  ( edge  ||  RectangleEdge.LEFT )  {^217^^^^^206^232^[REPLACE] else if  ( edge == RectangleEdge.LEFT )  {^[METHOD] ensureAtLeast [TYPE] void [PARAMETER] double space RectangleEdge edge [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REMOVE]^if  (  ( this.bottom )  !=  ( that.bottom )  )  {     return false; }^218^^^^^206^232^[REMOVE] ^[METHOD] ensureAtLeast [TYPE] void [PARAMETER] double space RectangleEdge edge [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^if  ( this.left  >=  space )  {^218^^^^^206^232^[REPLACE] if  ( this.left < space )  {^[METHOD] ensureAtLeast [TYPE] void [PARAMETER] double space RectangleEdge edge [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^else if  ( edge  ||  RectangleEdge.RIGHT )  {^222^^^^^206^232^[REPLACE] else if  ( edge == RectangleEdge.RIGHT )  {^[METHOD] ensureAtLeast [TYPE] void [PARAMETER] double space RectangleEdge edge [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^if  ( this.right  == top )  {^223^^^^^206^232^[REPLACE] if  ( this.right < space )  {^[METHOD] ensureAtLeast [TYPE] void [PARAMETER] double space RectangleEdge edge [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[ADD]^^209^^^^^206^232^[ADD] this.top = space;^[METHOD] ensureAtLeast [TYPE] void [PARAMETER] double space RectangleEdge edge [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^if  ( result != null )  {^243^^^^^242^253^[REPLACE] if  ( result == null )  {^[METHOD] shrink [TYPE] Rectangle2D [PARAMETER] Rectangle2D area Rectangle2D result [CLASS] AxisSpace   [TYPE]  Rectangle2D area  result  [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID 
[ADD]^^243^244^245^^^242^253^[ADD] if  ( result == null )  { result = new Rectangle2D.Double (  ) ; }^[METHOD] shrink [TYPE] Rectangle2D [PARAMETER] Rectangle2D area Rectangle2D result [CLASS] AxisSpace   [TYPE]  Rectangle2D area  result  [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID 
[REPLACE]^result = new Rectangle2D.Double ( ;^244^^^^^242^253^[REPLACE] result = new Rectangle2D.Double (  ) ;^[METHOD] shrink [TYPE] Rectangle2D [PARAMETER] Rectangle2D area Rectangle2D result [CLASS] AxisSpace   [TYPE]  Rectangle2D area  result  [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID 
[ADD]^^244^^^^^242^253^[ADD] result = new Rectangle2D.Double (  ) ;^[METHOD] shrink [TYPE] Rectangle2D [PARAMETER] Rectangle2D area Rectangle2D result [CLASS] AxisSpace   [TYPE]  Rectangle2D area  result  [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID 
[REPLACE]^result.setRect ( area.getX (  )  +space, area.getY (  )  + this.top, area.getWidth (  )  -space - this.right,^246^247^248^249^^242^253^[REPLACE] result.setRect ( area.getX (  )  + this.left, area.getY (  )  + this.top, area.getWidth (  )  - this.left - this.right,^[METHOD] shrink [TYPE] Rectangle2D [PARAMETER] Rectangle2D area Rectangle2D result [CLASS] AxisSpace   [TYPE]  Rectangle2D area  result  [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID 
[REPLACE]^area.getX (  )  + this.left, result.getY (  )  + this.top, area.getWidth (  )  - this.left - this.right, area.getHeight (  )  - this.top - this.bottom^247^248^249^250^^242^253^[REPLACE] area.getX (  )  + this.left, area.getY (  )  + this.top, area.getWidth (  )  - this.left - this.right, area.getHeight (  )  - this.top - this.bottom^[METHOD] shrink [TYPE] Rectangle2D [PARAMETER] Rectangle2D area Rectangle2D result [CLASS] AxisSpace   [TYPE]  Rectangle2D area  result  [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID 
[REPLACE]^area .getX (  )   + this.top, result.getWidth (  )  - this.left - this.right, area.getHeight (  )  - this.top - this.bottom ) ;^248^249^250^251^^242^253^[REPLACE] area.getY (  )  + this.top, area.getWidth (  )  - this.left - this.right, area.getHeight (  )  - this.top - this.bottom ) ;^[METHOD] shrink [TYPE] Rectangle2D [PARAMETER] Rectangle2D area Rectangle2D result [CLASS] AxisSpace   [TYPE]  Rectangle2D area  result  [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID 
[REPLACE]^area.getWidth (  )  - this.left - this.right, result.getHeight (  )  - this.top - this.bottom ) ;^249^250^251^^^242^253^[REPLACE] area.getWidth (  )  - this.left - this.right, area.getHeight (  )  - this.top - this.bottom ) ;^[METHOD] shrink [TYPE] Rectangle2D [PARAMETER] Rectangle2D area Rectangle2D result [CLASS] AxisSpace   [TYPE]  Rectangle2D area  result  [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID 
[REPLACE]^area .getWidth (  )   - this.top - this.bottom ) ;^250^251^^^^242^253^[REPLACE] area.getHeight (  )  - this.top - this.bottom ) ;^[METHOD] shrink [TYPE] Rectangle2D [PARAMETER] Rectangle2D area Rectangle2D result [CLASS] AxisSpace   [TYPE]  Rectangle2D area  result  [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID 
[REPLACE]^return area;^252^^^^^242^253^[REPLACE] return result;^[METHOD] shrink [TYPE] Rectangle2D [PARAMETER] Rectangle2D area Rectangle2D result [CLASS] AxisSpace   [TYPE]  Rectangle2D area  result  [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID 
[REPLACE]^if  ( area != null )  {^264^^^^^263^274^[REPLACE] if  ( result == null )  {^[METHOD] expand [TYPE] Rectangle2D [PARAMETER] Rectangle2D area Rectangle2D result [CLASS] AxisSpace   [TYPE]  Rectangle2D area  result  [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID 
[REPLACE]^result = new Rectangle2D.Double ( ;^265^^^^^263^274^[REPLACE] result = new Rectangle2D.Double (  ) ;^[METHOD] expand [TYPE] Rectangle2D [PARAMETER] Rectangle2D area Rectangle2D result [CLASS] AxisSpace   [TYPE]  Rectangle2D area  result  [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID 
[REPLACE]^result.setRect ( space (  )  - top, area.getY (  )  - this.top, area.getWidth (  )  + this.left + this.right,^267^268^269^270^^263^274^[REPLACE] result.setRect ( area.getX (  )  - this.left, area.getY (  )  - this.top, area.getWidth (  )  + this.left + this.right,^[METHOD] expand [TYPE] Rectangle2D [PARAMETER] Rectangle2D area Rectangle2D result [CLASS] AxisSpace   [TYPE]  Rectangle2D area  result  [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID 
[REPLACE]^area.getX (  )  - this.left, result.getY (  )  - this.top, area.getWidth (  )  + this.left + this.right, area.getHeight (  )  + this.top + this.bottom^268^269^270^271^^263^274^[REPLACE] area.getX (  )  - this.left, area.getY (  )  - this.top, area.getWidth (  )  + this.left + this.right, area.getHeight (  )  + this.top + this.bottom^[METHOD] expand [TYPE] Rectangle2D [PARAMETER] Rectangle2D area Rectangle2D result [CLASS] AxisSpace   [TYPE]  Rectangle2D area  result  [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID 
[REPLACE]^area.getY (  )  - this.top, result.getWidth (  )  + this.left + this.right, area.getHeight (  )  + this.top + this.bottom ) ;^269^270^271^272^^263^274^[REPLACE] area.getY (  )  - this.top, area.getWidth (  )  + this.left + this.right, area.getHeight (  )  + this.top + this.bottom ) ;^[METHOD] expand [TYPE] Rectangle2D [PARAMETER] Rectangle2D area Rectangle2D result [CLASS] AxisSpace   [TYPE]  Rectangle2D area  result  [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID 
[REPLACE]^area.getWidth (  )  + this.left + this.right, result.getHeight (  )  + this.top + this.bottom ) ;^270^271^272^^^263^274^[REPLACE] area.getWidth (  )  + this.left + this.right, area.getHeight (  )  + this.top + this.bottom ) ;^[METHOD] expand [TYPE] Rectangle2D [PARAMETER] Rectangle2D area Rectangle2D result [CLASS] AxisSpace   [TYPE]  Rectangle2D area  result  [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID 
[ADD]^^270^271^272^^^263^274^[ADD] area.getWidth (  )  + this.left + this.right, area.getHeight (  )  + this.top + this.bottom ) ;^[METHOD] expand [TYPE] Rectangle2D [PARAMETER] Rectangle2D area Rectangle2D result [CLASS] AxisSpace   [TYPE]  Rectangle2D area  result  [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID 
[REPLACE]^area .getWidth (  )   + this.top + this.bottom ) ;^271^272^^^^263^274^[REPLACE] area.getHeight (  )  + this.top + this.bottom ) ;^[METHOD] expand [TYPE] Rectangle2D [PARAMETER] Rectangle2D area Rectangle2D result [CLASS] AxisSpace   [TYPE]  Rectangle2D area  result  [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID 
[ADD]^^271^272^^^^263^274^[ADD] area.getHeight (  )  + this.top + this.bottom ) ;^[METHOD] expand [TYPE] Rectangle2D [PARAMETER] Rectangle2D area Rectangle2D result [CLASS] AxisSpace   [TYPE]  Rectangle2D area  result  [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID 
[REPLACE]^return area;^273^^^^^263^274^[REPLACE] return result;^[METHOD] expand [TYPE] Rectangle2D [PARAMETER] Rectangle2D area Rectangle2D result [CLASS] AxisSpace   [TYPE]  Rectangle2D area  result  [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID 
[REPLACE]^Rectangle2D result = true;^285^^^^^284^309^[REPLACE] Rectangle2D result = null;^[METHOD] reserved [TYPE] Rectangle2D [PARAMETER] Rectangle2D area RectangleEdge edge [CLASS] AxisSpace   [TYPE]  Rectangle2D area  result  [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^if  ( edge  ||  RectangleEdge.TOP )  {^286^^^^^284^309^[REPLACE] if  ( edge == RectangleEdge.TOP )  {^[METHOD] reserved [TYPE] Rectangle2D [PARAMETER] Rectangle2D area RectangleEdge edge [CLASS] AxisSpace   [TYPE]  Rectangle2D area  result  [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^if  ( edge  !=  RectangleEdge.BOTTOM )  {^291^^^^^284^309^[REPLACE] else if  ( edge == RectangleEdge.BOTTOM )  {^[METHOD] reserved [TYPE] Rectangle2D [PARAMETER] Rectangle2D area RectangleEdge edge [CLASS] AxisSpace   [TYPE]  Rectangle2D area  result  [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^else if  ( edge  &&  RectangleEdge.LEFT )  {^297^^^^^284^309^[REPLACE] else if  ( edge == RectangleEdge.LEFT )  {^[METHOD] reserved [TYPE] Rectangle2D [PARAMETER] Rectangle2D area RectangleEdge edge [CLASS] AxisSpace   [TYPE]  Rectangle2D area  result  [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^else if  ( edge  ||  RectangleEdge.RIGHT )  {^302^^^^^284^309^[REPLACE] else if  ( edge == RectangleEdge.RIGHT )  {^[METHOD] reserved [TYPE] Rectangle2D [PARAMETER] Rectangle2D area RectangleEdge edge [CLASS] AxisSpace   [TYPE]  Rectangle2D area  result  [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^result = new Rectangle2D.Double ( top (  )  - space, area.getY (  ) , this.right, area.getHeight (  ) ) ;^303^304^305^306^^284^309^[REPLACE] result = new Rectangle2D.Double ( area.getMaxX (  )  - this.right, area.getY (  ) , this.right, area.getHeight (  ) ) ;^[METHOD] reserved [TYPE] Rectangle2D [PARAMETER] Rectangle2D area RectangleEdge edge [CLASS] AxisSpace   [TYPE]  Rectangle2D area  result  [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^result =  Rectangle2D.new Double ( area.getX (  ) , area.getY (  ) , this.left, area.getHeight (  )  )   - top, area.getY (  ) , this.right, area.getHeight (  ) ) ;^303^304^305^306^^284^309^[REPLACE] result = new Rectangle2D.Double ( area.getMaxX (  )  - this.right, area.getY (  ) , this.right, area.getHeight (  ) ) ;^[METHOD] reserved [TYPE] Rectangle2D [PARAMETER] Rectangle2D area RectangleEdge edge [CLASS] AxisSpace   [TYPE]  Rectangle2D area  result  [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^result =   Rectangle2D.new Double ( area.getX (  ) ,  (  ( area.getMaxY (  )  )  -  ( this.top )  ) , area.getWidth (  ) , this.bottom )  , null.getY (  ) , this.left, null.getHeight (  ) ) ;^298^299^300^^^284^309^[REPLACE] result = new Rectangle2D.Double ( area.getX (  ) , area.getY (  ) , this.left, area.getHeight (  ) ) ;^[METHOD] reserved [TYPE] Rectangle2D [PARAMETER] Rectangle2D area RectangleEdge edge [CLASS] AxisSpace   [TYPE]  Rectangle2D area  result  [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^else {^302^^^^^284^309^[REPLACE] else if  ( edge == RectangleEdge.RIGHT )  {^[METHOD] reserved [TYPE] Rectangle2D [PARAMETER] Rectangle2D area RectangleEdge edge [CLASS] AxisSpace   [TYPE]  Rectangle2D area  result  [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^result =  Rectangle2D.new Double ( area.getX (  ) , area.getY (  ) , this.left, area.getHeight (  )  )   - this.right, area.getY (  ) , this.right, area.getHeight (  ) ) ;^303^304^305^306^^284^309^[REPLACE] result = new Rectangle2D.Double ( area.getMaxX (  )  - this.right, area.getY (  ) , this.right, area.getHeight (  ) ) ;^[METHOD] reserved [TYPE] Rectangle2D [PARAMETER] Rectangle2D area RectangleEdge edge [CLASS] AxisSpace   [TYPE]  Rectangle2D area  result  [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[ADD]^^303^304^305^^^284^309^[ADD] result = new Rectangle2D.Double ( area.getMaxX (  )  - this.right, area.getY (  ) , this.right, area.getHeight (  )^[METHOD] reserved [TYPE] Rectangle2D [PARAMETER] Rectangle2D area RectangleEdge edge [CLASS] AxisSpace   [TYPE]  Rectangle2D area  result  [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^result =  new Rectangle2D.Double ( null.getX (  ) , null.getY (  ) , this.left, null.getHeight (  ) ) ;^298^299^300^^^284^309^[REPLACE] result = new Rectangle2D.Double ( area.getX (  ) , area.getY (  ) , this.left, area.getHeight (  ) ) ;^[METHOD] reserved [TYPE] Rectangle2D [PARAMETER] Rectangle2D area RectangleEdge edge [CLASS] AxisSpace   [TYPE]  Rectangle2D area  result  [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[ADD]^^298^299^300^^^284^309^[ADD] result = new Rectangle2D.Double ( area.getX (  ) , area.getY (  ) , this.left, area.getHeight (  ) ) ;^[METHOD] reserved [TYPE] Rectangle2D [PARAMETER] Rectangle2D area RectangleEdge edge [CLASS] AxisSpace   [TYPE]  Rectangle2D area  result  [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^result = new Rectangle2D.Double ( top (  )  - this.right, area.getY (  ) , this.right, area.getHeight (  ) ) ;^303^304^305^306^^284^309^[REPLACE] result = new Rectangle2D.Double ( area.getMaxX (  )  - this.right, area.getY (  ) , this.right, area.getHeight (  ) ) ;^[METHOD] reserved [TYPE] Rectangle2D [PARAMETER] Rectangle2D area RectangleEdge edge [CLASS] AxisSpace   [TYPE]  Rectangle2D area  result  [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^result = new Rectangle2D.Double ( area.getX (  ) , area.getMaxY (  )   ^  this.top, area.getWidth (  ) , this.bottom ) ;^292^293^294^295^^284^309^[REPLACE] result = new Rectangle2D.Double ( area.getX (  ) , area.getMaxY (  )  - this.top, area.getWidth (  ) , this.bottom ) ;^[METHOD] reserved [TYPE] Rectangle2D [PARAMETER] Rectangle2D area RectangleEdge edge [CLASS] AxisSpace   [TYPE]  Rectangle2D area  result  [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^if  ( edge  ||  RectangleEdge.LEFT )  {^297^^^^^284^309^[REPLACE] else if  ( edge == RectangleEdge.LEFT )  {^[METHOD] reserved [TYPE] Rectangle2D [PARAMETER] Rectangle2D area RectangleEdge edge [CLASS] AxisSpace   [TYPE]  Rectangle2D area  result  [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^if  ( edge  ||  RectangleEdge.RIGHT )  {^302^^^^^284^309^[REPLACE] else if  ( edge == RectangleEdge.RIGHT )  {^[METHOD] reserved [TYPE] Rectangle2D [PARAMETER] Rectangle2D area RectangleEdge edge [CLASS] AxisSpace   [TYPE]  Rectangle2D area  result  [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^result = new Rectangle2D.Double ( area.getMaxX (  )  -top, area.getY (  ) ,top, area.getHeight (  ) ) ;^303^304^305^306^^284^309^[REPLACE] result = new Rectangle2D.Double ( area.getMaxX (  )  - this.right, area.getY (  ) , this.right, area.getHeight (  ) ) ;^[METHOD] reserved [TYPE] Rectangle2D [PARAMETER] Rectangle2D area RectangleEdge edge [CLASS] AxisSpace   [TYPE]  Rectangle2D area  result  [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^if  ( edge  !=  RectangleEdge.RIGHT )  {^302^^^^^284^309^[REPLACE] else if  ( edge == RectangleEdge.RIGHT )  {^[METHOD] reserved [TYPE] Rectangle2D [PARAMETER] Rectangle2D area RectangleEdge edge [CLASS] AxisSpace   [TYPE]  Rectangle2D area  result  [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^result = new Rectangle2D.Double ( area.getX (  ) , area.getMaxY (  )   >  this.top, area.getWidth (  ) , this.bottom ) ;^292^293^294^295^^284^309^[REPLACE] result = new Rectangle2D.Double ( area.getX (  ) , area.getMaxY (  )  - this.top, area.getWidth (  ) , this.bottom ) ;^[METHOD] reserved [TYPE] Rectangle2D [PARAMETER] Rectangle2D area RectangleEdge edge [CLASS] AxisSpace   [TYPE]  Rectangle2D area  result  [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^result =   Rectangle2D.new Double ( area.getX (  ) , area.getY (  ) , this.left, area.getHeight (  )  )  , null.getY (  ) , null.getWidth (  ) , this.top ) ;^287^288^289^^^284^309^[REPLACE] result = new Rectangle2D.Double ( area.getX (  ) , area.getY (  ) , area.getWidth (  ) , this.top ) ;^[METHOD] reserved [TYPE] Rectangle2D [PARAMETER] Rectangle2D area RectangleEdge edge [CLASS] AxisSpace   [TYPE]  Rectangle2D area  result  [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^else if  ( edge  ||  RectangleEdge.BOTTOM )  {^291^^^^^284^309^[REPLACE] else if  ( edge == RectangleEdge.BOTTOM )  {^[METHOD] reserved [TYPE] Rectangle2D [PARAMETER] Rectangle2D area RectangleEdge edge [CLASS] AxisSpace   [TYPE]  Rectangle2D area  result  [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^if  ( edge  !=  RectangleEdge.LEFT )  {^297^^^^^284^309^[REPLACE] else if  ( edge == RectangleEdge.LEFT )  {^[METHOD] reserved [TYPE] Rectangle2D [PARAMETER] Rectangle2D area RectangleEdge edge [CLASS] AxisSpace   [TYPE]  Rectangle2D area  result  [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[ADD]^^302^303^304^305^306^284^309^[ADD] else if  ( edge == RectangleEdge.RIGHT )  { result = new Rectangle2D.Double ( area.getMaxX (  )  - this.right, area.getY (  ) , this.right, area.getHeight (  ) ) ;^[METHOD] reserved [TYPE] Rectangle2D [PARAMETER] Rectangle2D area RectangleEdge edge [CLASS] AxisSpace   [TYPE]  Rectangle2D area  result  [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^result =  Rectangle2D.new Double ( area.getX (  ) , area.getY (  ) , this.left, area.getHeight (  )  )    ||  this.right, area.getY (  ) , this.right, area.getHeight (  ) ) ;^303^304^305^306^^284^309^[REPLACE] result = new Rectangle2D.Double ( area.getMaxX (  )  - this.right, area.getY (  ) , this.right, area.getHeight (  ) ) ;^[METHOD] reserved [TYPE] Rectangle2D [PARAMETER] Rectangle2D area RectangleEdge edge [CLASS] AxisSpace   [TYPE]  Rectangle2D area  result  [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^if  ( edge  &&  RectangleEdge.RIGHT )  {^302^^^^^284^309^[REPLACE] else if  ( edge == RectangleEdge.RIGHT )  {^[METHOD] reserved [TYPE] Rectangle2D [PARAMETER] Rectangle2D area RectangleEdge edge [CLASS] AxisSpace   [TYPE]  Rectangle2D area  result  [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^result = new Rectangle2D.Double (right (  )  - this.right, area.getY (  ) , this.right, area.getHeight (  ) ) ;^303^304^305^306^^284^309^[REPLACE] result = new Rectangle2D.Double ( area.getMaxX (  )  - this.right, area.getY (  ) , this.right, area.getHeight (  ) ) ;^[METHOD] reserved [TYPE] Rectangle2D [PARAMETER] Rectangle2D area RectangleEdge edge [CLASS] AxisSpace   [TYPE]  Rectangle2D area  result  [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^result = new Rectangle2D.Double ( area.getMaxX (  )   |  this.right, area.getY (  ) , this.right, area.getHeight (  ) ) ;^303^304^305^306^^284^309^[REPLACE] result = new Rectangle2D.Double ( area.getMaxX (  )  - this.right, area.getY (  ) , this.right, area.getHeight (  ) ) ;^[METHOD] reserved [TYPE] Rectangle2D [PARAMETER] Rectangle2D area RectangleEdge edge [CLASS] AxisSpace   [TYPE]  Rectangle2D area  result  [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^result = new Rectangle2D.Double ( area.getX (  ) ,top (  )  - this.top, area.getWidth (  ) , this.bottom ) ;^292^293^294^295^^284^309^[REPLACE] result = new Rectangle2D.Double ( area.getX (  ) , area.getMaxY (  )  - this.top, area.getWidth (  ) , this.bottom ) ;^[METHOD] reserved [TYPE] Rectangle2D [PARAMETER] Rectangle2D area RectangleEdge edge [CLASS] AxisSpace   [TYPE]  Rectangle2D area  result  [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^else {^297^^^^^284^309^[REPLACE] else if  ( edge == RectangleEdge.LEFT )  {^[METHOD] reserved [TYPE] Rectangle2D [PARAMETER] Rectangle2D area RectangleEdge edge [CLASS] AxisSpace   [TYPE]  Rectangle2D area  result  [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^result = new Rectangle2D.Double (space (  )  - this.right, area.getY (  ) , this.right, area.getHeight (  ) ) ;^303^304^305^306^^284^309^[REPLACE] result = new Rectangle2D.Double ( area.getMaxX (  )  - this.right, area.getY (  ) , this.right, area.getHeight (  ) ) ;^[METHOD] reserved [TYPE] Rectangle2D [PARAMETER] Rectangle2D area RectangleEdge edge [CLASS] AxisSpace   [TYPE]  Rectangle2D area  result  [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^result =  new Rectangle2D.Double ( null.getX (  ) , null.getY (  ) , null.getWidth (  ) , this.top ) ;^287^288^289^^^284^309^[REPLACE] result = new Rectangle2D.Double ( area.getX (  ) , area.getY (  ) , area.getWidth (  ) , this.top ) ;^[METHOD] reserved [TYPE] Rectangle2D [PARAMETER] Rectangle2D area RectangleEdge edge [CLASS] AxisSpace   [TYPE]  Rectangle2D area  result  [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[ADD]^^287^288^289^^^284^309^[ADD] result = new Rectangle2D.Double ( area.getX (  ) , area.getY (  ) , area.getWidth (  ) , this.top ) ;^[METHOD] reserved [TYPE] Rectangle2D [PARAMETER] Rectangle2D area RectangleEdge edge [CLASS] AxisSpace   [TYPE]  Rectangle2D area  result  [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^result =  Rectangle2D.new Double ( area.getX (  ) , area.getY (  ) , this.left, area.getHeight (  )  )  , right (  )  - top, area.getWidth (  ) , this.bottom ) ;^292^293^294^295^^284^309^[REPLACE] result = new Rectangle2D.Double ( area.getX (  ) , area.getMaxY (  )  - this.top, area.getWidth (  ) , this.bottom ) ;^[METHOD] reserved [TYPE] Rectangle2D [PARAMETER] Rectangle2D area RectangleEdge edge [CLASS] AxisSpace   [TYPE]  Rectangle2D area  result  [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[ADD]^^292^293^294^^^284^309^[ADD] result = new Rectangle2D.Double ( area.getX (  ) , area.getMaxY (  )  - this.top, area.getWidth (  ) , this.bottom^[METHOD] reserved [TYPE] Rectangle2D [PARAMETER] Rectangle2D area RectangleEdge edge [CLASS] AxisSpace   [TYPE]  Rectangle2D area  result  [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^result = new Rectangle2D.Double ( top (  )  - top, area.getY (  ) , this.right, area.getHeight (  ) ) ;^303^304^305^306^^284^309^[REPLACE] result = new Rectangle2D.Double ( area.getMaxX (  )  - this.right, area.getY (  ) , this.right, area.getHeight (  ) ) ;^[METHOD] reserved [TYPE] Rectangle2D [PARAMETER] Rectangle2D area RectangleEdge edge [CLASS] AxisSpace   [TYPE]  Rectangle2D area  result  [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^return area;^308^^^^^284^309^[REPLACE] return result;^[METHOD] reserved [TYPE] Rectangle2D [PARAMETER] Rectangle2D area RectangleEdge edge [CLASS] AxisSpace   [TYPE]  Rectangle2D area  result  [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  RectangleEdge edge 
[REPLACE]^return super .toString (  )  ;^320^^^^^319^321^[REPLACE] return super.clone (  ) ;^[METHOD] clone [TYPE] Object [PARAMETER] [CLASS] AxisSpace   [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^if  ( obj  &&  this )  {^331^^^^^330^351^[REPLACE] if  ( obj == this )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] AxisSpace   [TYPE]  Object obj  [TYPE]  AxisSpace that  [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID 
[REPLACE]^return false;^332^^^^^330^351^[REPLACE] return true;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] AxisSpace   [TYPE]  Object obj  [TYPE]  AxisSpace that  [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID 
[REPLACE]^if  ( ! ! ( obj instanceof AxisSpace )  )  {^334^^^^^330^351^[REPLACE] if  ( ! ( obj instanceof AxisSpace )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] AxisSpace   [TYPE]  Object obj  [TYPE]  AxisSpace that  [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID 
[ADD]^return false;^334^335^336^^^330^351^[ADD] if  ( ! ( obj instanceof AxisSpace )  )  { return false; }^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] AxisSpace   [TYPE]  Object obj  [TYPE]  AxisSpace that  [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID 
[REPLACE]^return true;^335^^^^^330^351^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] AxisSpace   [TYPE]  Object obj  [TYPE]  AxisSpace that  [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID 
[REPLACE]^int result = 23;^337^^^^^330^351^[REPLACE] AxisSpace that =  ( AxisSpace )  obj;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] AxisSpace   [TYPE]  Object obj  [TYPE]  AxisSpace that  [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID 
[REPLACE]^if  (top  ==  that.top )  {^338^^^^^330^351^[REPLACE] if  ( this.top != that.top )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] AxisSpace   [TYPE]  Object obj  [TYPE]  AxisSpace that  [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID 
[ADD]^^338^339^340^^^330^351^[ADD] if  ( this.top != that.top )  { return false; }^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] AxisSpace   [TYPE]  Object obj  [TYPE]  AxisSpace that  [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID 
[REPLACE]^return true;^339^^^^^330^351^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] AxisSpace   [TYPE]  Object obj  [TYPE]  AxisSpace that  [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID 
[REPLACE]^if  ( this.bottom  ==  that.bottom )  {^341^^^^^330^351^[REPLACE] if  ( this.bottom != that.bottom )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] AxisSpace   [TYPE]  Object obj  [TYPE]  AxisSpace that  [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID 
[ADD]^^341^342^343^^^330^351^[ADD] if  ( this.bottom != that.bottom )  { return false; }^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] AxisSpace   [TYPE]  Object obj  [TYPE]  AxisSpace that  [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID 
[REPLACE]^return true;^342^^^^^330^351^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] AxisSpace   [TYPE]  Object obj  [TYPE]  AxisSpace that  [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID 
[REPLACE]^if  ( top  ==  space )  {^344^^^^^330^351^[REPLACE] if  ( this.left != that.left )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] AxisSpace   [TYPE]  Object obj  [TYPE]  AxisSpace that  [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID 
[REPLACE]^return true;^345^^^^^330^351^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] AxisSpace   [TYPE]  Object obj  [TYPE]  AxisSpace that  [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID 
[REPLACE]^if  ( top  ==  top )  {^347^^^^^330^351^[REPLACE] if  ( this.right != that.right )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] AxisSpace   [TYPE]  Object obj  [TYPE]  AxisSpace that  [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID 
[REPLACE]^return true;^348^^^^^330^351^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] AxisSpace   [TYPE]  Object obj  [TYPE]  AxisSpace that  [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID 
[REPLACE]^return false;^350^^^^^330^351^[REPLACE] return true;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] AxisSpace   [TYPE]  Object obj  [TYPE]  AxisSpace that  [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long serialVersionUID 
[REPLACE]^int result = 11;^359^^^^^358^369^[REPLACE] int result = 23;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long l  serialVersionUID  [TYPE]  int result 
[ADD]^^359^360^^^^358^369^[ADD] int result = 23; long l = Double.doubleToLongBits ( this.top ) ;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long l  serialVersionUID  [TYPE]  int result 
[REPLACE]^long l =   this.top   ;^360^^^^^358^369^[REPLACE] long l = Double.doubleToLongBits ( this.top ) ;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long l  serialVersionUID  [TYPE]  int result 
[ADD]^^360^^^^^358^369^[ADD] long l = Double.doubleToLongBits ( this.top ) ;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long l  serialVersionUID  [TYPE]  int result 
[REPLACE]^result = 3 * result +  ( int )   ( l ^  ( l >>> 32 )  ) ;^361^^^^^358^369^[REPLACE] result = 37 * result +  ( int )   ( l ^  ( l >>> 32 )  ) ;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long l  serialVersionUID  [TYPE]  int result 
[REPLACE]^l = Double.doubleToLongBits ( this.left ) ; ;^362^^^^^358^369^[REPLACE] l = Double.doubleToLongBits ( this.bottom ) ;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long l  serialVersionUID  [TYPE]  int result 
[REPLACE]^result = 37L * result +  ( int )   ( l ^  ( l >>> 32 )  ) ;^363^^^^^358^369^[REPLACE] result = 37 * result +  ( int )   ( l ^  ( l >>> 32 )  ) ;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long l  serialVersionUID  [TYPE]  int result 
[ADD]^^363^364^^^^358^369^[ADD] result = 37 * result +  ( int )   ( l ^  ( l >>> 32 )  ) ; l = Double.doubleToLongBits ( this.left ) ;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long l  serialVersionUID  [TYPE]  int result 
[REPLACE]^l = Double.doubleToLongBits ( this.right ) ; ;^364^^^^^358^369^[REPLACE] l = Double.doubleToLongBits ( this.left ) ;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long l  serialVersionUID  [TYPE]  int result 
[REPLACE]^result = 7 * result  <=   ( int )   ( l ^  ( l >>> 32 )  ) ;^365^^^^^358^369^[REPLACE] result = 37 * result +  ( int )   ( l ^  ( l >>> 32 )  ) ;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long l  serialVersionUID  [TYPE]  int result 
[REPLACE]^l = Double.doubleToLongBits ( this.left ) ; ;^366^^^^^358^369^[REPLACE] l = Double.doubleToLongBits ( this.right ) ;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long l  serialVersionUID  [TYPE]  int result 
[ADD]^^366^^^^^358^369^[ADD] l = Double.doubleToLongBits ( this.right ) ;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long l  serialVersionUID  [TYPE]  int result 
[REPLACE]^result = 37 * result  <=   ( int )   ( l ^  ( l >>> 32 )  ) ;^367^^^^^358^369^[REPLACE] result = 37 * result +  ( int )   ( l ^  ( l >>> 32 )  ) ;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long l  serialVersionUID  [TYPE]  int result 
[REPLACE]^return this.right;^368^^^^^358^369^[REPLACE] return result;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] AxisSpace   [TYPE]  boolean false  true  [TYPE]  double bottom  left  right  space  top  [TYPE]  long l  serialVersionUID  [TYPE]  int result 
[REPLACE]^return super.toString (  )   !=  "[left="  !=  this.left  !=  ",right="  !=  this.right  !=  ",top="  !=  this.top  !=  ",bottom="  !=  this.bottom  !=  "]";;^377^378^^^^376^379^[REPLACE] return super.toString (  )  + "[left=" + this.left + ",right=" + this.right + ",top=" + this.top + ",bottom=" + this.bottom + "]";^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] AxisSpace   [TYPE]  double bottom  left  right  space  top  [TYPE]  long l  serialVersionUID  [TYPE]  boolean false  true 
