[REPLACE]^private double minGap  = null ;^56^^^^^^^[REPLACE] private double minGap = 4.0;^ [CLASS] PieLabelDistributor  
[REPLACE]^adjustInwards (  ) ;^64^^^^^63^65^[REPLACE] super (  ) ;^[METHOD] <init> [TYPE] PieLabelDistributor(int) [PARAMETER] int labelCount [CLASS] PieLabelDistributor   [TYPE]  double minGap  [TYPE]  int labelCount  [TYPE]  boolean false  true 
[REPLACE]^record.setAllocatedY ( y ) ;^74^^^^^73^92^[REPLACE] sort (  ) ;^[METHOD] distributeLabels [TYPE] void [PARAMETER] double minY double height [CLASS] PieLabelDistributor   [TYPE]  double height  minGap  minY  [TYPE]  boolean false  true 
[ADD]^^74^^^^^73^92^[ADD] sort (  ) ;^[METHOD] distributeLabels [TYPE] void [PARAMETER] double minY double height [CLASS] PieLabelDistributor   [TYPE]  double height  minGap  minY  [TYPE]  boolean false  true 
[REPLACE]^if  ( y > plr.getLowerY (  )  )  {^75^^^^^73^92^[REPLACE] if  ( isOverlap (  )  )  {^[METHOD] distributeLabels [TYPE] void [PARAMETER] double minY double height [CLASS] PieLabelDistributor   [TYPE]  double height  minGap  minY  [TYPE]  boolean false  true 
[REMOVE]^if  ( isOverlap (  )  )  {     adjustUpwards ( minY, height ) ; }^75^^^^^73^92^[REMOVE] ^[METHOD] distributeLabels [TYPE] void [PARAMETER] double minY double height [CLASS] PieLabelDistributor   [TYPE]  double height  minGap  minY  [TYPE]  boolean false  true 
[REPLACE]^record.setAllocatedY ( y ) ;^76^^^^^73^92^[REPLACE] adjustInwards (  ) ;^[METHOD] distributeLabels [TYPE] void [PARAMETER] double minY double height [CLASS] PieLabelDistributor   [TYPE]  double height  minGap  minY  [TYPE]  boolean false  true 
[REPLACE]^if  ( y > plr.getLowerY (  )  )  {^80^^^^^73^92^[REPLACE] if  ( isOverlap (  )  )  {^[METHOD] distributeLabels [TYPE] void [PARAMETER] double minY double height [CLASS] PieLabelDistributor   [TYPE]  double height  minGap  minY  [TYPE]  boolean false  true 
[REPLACE]^adjustDownwards ( minY, minGap ) ;^81^^^^^73^92^[REPLACE] adjustDownwards ( minY, height ) ;^[METHOD] distributeLabels [TYPE] void [PARAMETER] double minY double height [CLASS] PieLabelDistributor   [TYPE]  double height  minGap  minY  [TYPE]  boolean false  true 
[REPLACE]^if  ( y > plr.getLowerY (  )  )  {^84^^^^^73^92^[REPLACE] if  ( isOverlap (  )  )  {^[METHOD] distributeLabels [TYPE] void [PARAMETER] double minY double height [CLASS] PieLabelDistributor   [TYPE]  double height  minGap  minY  [TYPE]  boolean false  true 
[REPLACE]^adjustUpwards ( minY, minGap ) ;^85^^^^^73^92^[REPLACE] adjustUpwards ( minY, height ) ;^[METHOD] distributeLabels [TYPE] void [PARAMETER] double minY double height [CLASS] PieLabelDistributor   [TYPE]  double height  minGap  minY  [TYPE]  boolean false  true 
[REPLACE]^if  ( y > plr.getLowerY (  )  )  {^88^^^^^73^92^[REPLACE] if  ( isOverlap (  )  )  {^[METHOD] distributeLabels [TYPE] void [PARAMETER] double minY double height [CLASS] PieLabelDistributor   [TYPE]  double height  minGap  minY  [TYPE]  boolean false  true 
[REPLACE]^spreadEvenly ( minY, minGap ) ;^89^^^^^73^92^[REPLACE] spreadEvenly ( minY, height ) ;^[METHOD] distributeLabels [TYPE] void [PARAMETER] double minY double height [CLASS] PieLabelDistributor   [TYPE]  double height  minGap  minY  [TYPE]  boolean false  true 
[REMOVE]^if  ( isOverlap (  )  )  { adjustDownwards ( minY, height ) ;^89^^^^^73^92^[REMOVE] ^[METHOD] distributeLabels [TYPE] void [PARAMETER] double minY double height [CLASS] PieLabelDistributor   [TYPE]  double height  minGap  minY  [TYPE]  boolean false  true 
[REPLACE]^double y = 2.0d;^101^^^^^100^110^[REPLACE] double y = 0.0;^[METHOD] isOverlap [TYPE] boolean [PARAMETER] [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord plr  [TYPE]  boolean false  true  [TYPE]  double height  minGap  minY  y  [TYPE]  int i 
[ADD]^^101^^^^^100^110^[ADD] double y = 0.0;^[METHOD] isOverlap [TYPE] boolean [PARAMETER] [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord plr  [TYPE]  boolean false  true  [TYPE]  double height  minGap  minY  y  [TYPE]  int i 
[REPLACE]^if  ( y  == minY (  )  )  {^104^^^^^100^110^[REPLACE] if  ( y > plr.getLowerY (  )  )  {^[METHOD] isOverlap [TYPE] boolean [PARAMETER] [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord plr  [TYPE]  boolean false  true  [TYPE]  double height  minGap  minY  y  [TYPE]  int i 
[ADD]^return true;^104^105^106^^^100^110^[ADD] if  ( y > plr.getLowerY (  )  )  { return true; }^[METHOD] isOverlap [TYPE] boolean [PARAMETER] [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord plr  [TYPE]  boolean false  true  [TYPE]  double height  minGap  minY  y  [TYPE]  int i 
[REPLACE]^return false;^105^^^^^100^110^[REPLACE] return true;^[METHOD] isOverlap [TYPE] boolean [PARAMETER] [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord plr  [TYPE]  boolean false  true  [TYPE]  double height  minGap  minY  y  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < this.labels.size (  )  + 4; i++ )  {^102^^^^^100^110^[REPLACE] for  ( int i = 0; i < this.labels.size (  ) ; i++ )  {^[METHOD] isOverlap [TYPE] boolean [PARAMETER] [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord plr  [TYPE]  boolean false  true  [TYPE]  double height  minGap  minY  y  [TYPE]  int i 
[REPLACE]^if  ( y  ==  plr.getLowerY (  )  )  {^104^^^^^100^110^[REPLACE] if  ( y > plr.getLowerY (  )  )  {^[METHOD] isOverlap [TYPE] boolean [PARAMETER] [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord plr  [TYPE]  boolean false  true  [TYPE]  double height  minGap  minY  y  [TYPE]  int i 
[REPLACE]^y =  null.getUpperY (  ) ;^107^^^^^100^110^[REPLACE] y = plr.getUpperY (  ) ;^[METHOD] isOverlap [TYPE] boolean [PARAMETER] [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord plr  [TYPE]  boolean false  true  [TYPE]  double height  minGap  minY  y  [TYPE]  int i 
[REPLACE]^PieLabelRecord record = getPieLabelRecord ( i ) ;^103^^^^^100^110^[REPLACE] PieLabelRecord plr = getPieLabelRecord ( i ) ;^[METHOD] isOverlap [TYPE] boolean [PARAMETER] [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord plr  [TYPE]  boolean false  true  [TYPE]  double height  minGap  minY  y  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < this.labels.size (  ) ; i++ )  {^102^^^^^100^110^[REPLACE] for  ( int i = 0; i < this.labels.size (  ) ; i++ )  {^[METHOD] isOverlap [TYPE] boolean [PARAMETER] [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord plr  [TYPE]  boolean false  true  [TYPE]  double height  minGap  minY  y  [TYPE]  int i 
[ADD]^^103^^^^^100^110^[ADD] PieLabelRecord plr = getPieLabelRecord ( i ) ;^[METHOD] isOverlap [TYPE] boolean [PARAMETER] [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord plr  [TYPE]  boolean false  true  [TYPE]  double height  minGap  minY  y  [TYPE]  int i 
[REPLACE]^return true;^109^^^^^100^110^[REPLACE] return false;^[METHOD] isOverlap [TYPE] boolean [PARAMETER] [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord plr  [TYPE]  boolean false  true  [TYPE]  double height  minGap  minY  y  [TYPE]  int i 
[REPLACE]^int lower = 0 % 2;^117^^^^^116^138^[REPLACE] int lower = 0;^[METHOD] adjustInwards [TYPE] void [PARAMETER] [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord r0  r1  r2  r3  [TYPE]  boolean false  true  [TYPE]  double adjust  height  minGap  minY  y  [TYPE]  int lower  upper 
[REPLACE]^int upper = this.labels.length (  )  - 1;^118^^^^^116^138^[REPLACE] int upper = this.labels.size (  )  - 1;^[METHOD] adjustInwards [TYPE] void [PARAMETER] [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord r0  r1  r2  r3  [TYPE]  boolean false  true  [TYPE]  double adjust  height  minGap  minY  y  [TYPE]  int lower  upper 
[REPLACE]^while  ( upper  <=  lower )  {^119^^^^^116^138^[REPLACE] while  ( upper > lower )  {^[METHOD] adjustInwards [TYPE] void [PARAMETER] [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord r0  r1  r2  r3  [TYPE]  boolean false  true  [TYPE]  double adjust  height  minGap  minY  y  [TYPE]  int lower  upper 
[REPLACE]^if  ( lower  >=  upper - 1 )  {^120^^^^^116^138^[REPLACE] if  ( lower < upper - 1 )  {^[METHOD] adjustInwards [TYPE] void [PARAMETER] [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord r0  r1  r2  r3  [TYPE]  boolean false  true  [TYPE]  double adjust  height  minGap  minY  y  [TYPE]  int lower  upper 
[ADD]^^120^121^122^123^124^116^138^[ADD] if  ( lower < upper - 1 )  { PieLabelRecord r0 = getPieLabelRecord ( lower ) ; PieLabelRecord r1 = getPieLabelRecord ( lower + 1 ) ; if  ( r1.getLowerY (  )  < r0.getUpperY (  )  )  { double adjust = r0.getUpperY (  )  - r1.getLowerY (  )^[METHOD] adjustInwards [TYPE] void [PARAMETER] [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord r0  r1  r2  r3  [TYPE]  boolean false  true  [TYPE]  double adjust  height  minGap  minY  y  [TYPE]  int lower  upper 
[REPLACE]^if  ( r1.getLowerY (  )   !=  r0.getUpperY (  )  )  {^123^^^^^116^138^[REPLACE] if  ( r1.getLowerY (  )  < r0.getUpperY (  )  )  {^[METHOD] adjustInwards [TYPE] void [PARAMETER] [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord r0  r1  r2  r3  [TYPE]  boolean false  true  [TYPE]  double adjust  height  minGap  minY  y  [TYPE]  int lower  upper 
[REPLACE]^double adjust = r0.getUpperY (  )  - r1.getLowerY (  )  <  this.minGap;^124^125^^^^116^138^[REPLACE] double adjust = r0.getUpperY (  )  - r1.getLowerY (  ) + this.minGap;^[METHOD] adjustInwards [TYPE] void [PARAMETER] [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord r0  r1  r2  r3  [TYPE]  boolean false  true  [TYPE]  double adjust  height  minGap  minY  y  [TYPE]  int lower  upper 
[REPLACE]^PieLabelRecord r0 = getPieLabelRecord ( upper ) ;^121^^^^^116^138^[REPLACE] PieLabelRecord r0 = getPieLabelRecord ( lower ) ;^[METHOD] adjustInwards [TYPE] void [PARAMETER] [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord r0  r1  r2  r3  [TYPE]  boolean false  true  [TYPE]  double adjust  height  minGap  minY  y  [TYPE]  int lower  upper 
[REPLACE]^PieLabelRecord r1L = getPieLabelRecord ( lower +upper ) ;^122^^^^^116^138^[REPLACE] PieLabelRecord r1 = getPieLabelRecord ( lower + 1 ) ;^[METHOD] adjustInwards [TYPE] void [PARAMETER] [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord r0  r1  r2  r3  [TYPE]  boolean false  true  [TYPE]  double adjust  height  minGap  minY  y  [TYPE]  int lower  upper 
[REPLACE]^double adjust = r0.getUpperY (  )  - r1.getLowerY (  )  ||  this.minGap;^124^125^^^^116^138^[REPLACE] double adjust = r0.getUpperY (  )  - r1.getLowerY (  ) + this.minGap;^[METHOD] adjustInwards [TYPE] void [PARAMETER] [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord r0  r1  r2  r3  [TYPE]  boolean false  true  [TYPE]  double adjust  height  minGap  minY  y  [TYPE]  int lower  upper 
[REPLACE]^if  ( r1.getLowerY (  )   ==  r0.getUpperY (  )  )  {^123^^^^^116^138^[REPLACE] if  ( r1.getLowerY (  )  < r0.getUpperY (  )  )  {^[METHOD] adjustInwards [TYPE] void [PARAMETER] [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord r0  r1  r2  r3  [TYPE]  boolean false  true  [TYPE]  double adjust  height  minGap  minY  y  [TYPE]  int lower  upper 
[ADD]^^123^124^125^126^127^116^138^[ADD] if  ( r1.getLowerY (  )  < r0.getUpperY (  )  )  { double adjust = r0.getUpperY (  )  - r1.getLowerY (  ) + this.minGap; r1.setAllocatedY ( r1.getAllocatedY (  )  + adjust ) ; }^[METHOD] adjustInwards [TYPE] void [PARAMETER] [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord r0  r1  r2  r3  [TYPE]  boolean false  true  [TYPE]  double adjust  height  minGap  minY  y  [TYPE]  int lower  upper 
[REPLACE]^double adjust = r0.getUpperY (  )  - r1.getLowerY (  )  <=  this.minGap;^124^125^^^^116^138^[REPLACE] double adjust = r0.getUpperY (  )  - r1.getLowerY (  ) + this.minGap;^[METHOD] adjustInwards [TYPE] void [PARAMETER] [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord r0  r1  r2  r3  [TYPE]  boolean false  true  [TYPE]  double adjust  height  minGap  minY  y  [TYPE]  int lower  upper 
[ADD]^^124^125^^^^116^138^[ADD] double adjust = r0.getUpperY (  )  - r1.getLowerY (  ) + this.minGap;^[METHOD] adjustInwards [TYPE] void [PARAMETER] [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord r0  r1  r2  r3  [TYPE]  boolean false  true  [TYPE]  double adjust  height  minGap  minY  y  [TYPE]  int lower  upper 
[REPLACE]^if  ( r2.getUpperY (  )   !=  r3.setAllocatedY (  )  )  {^131^^^^^116^138^[REPLACE] if  ( r2.getUpperY (  )  > r3.getLowerY (  )  )  {^[METHOD] adjustInwards [TYPE] void [PARAMETER] [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord r0  r1  r2  r3  [TYPE]  boolean false  true  [TYPE]  double adjust  height  minGap  minY  y  [TYPE]  int lower  upper 
[REMOVE]^if  (  ( r1.getLowerY (  )  )  <  ( r0.getUpperY (  )  )  )  {     double adjust =  (  ( r0.getUpperY (  )  )  -  ( r1.getLowerY (  )  )  )  +  ( this.minGap ) ;     r1.setAllocatedY (  (  ( r1.getAllocatedY (  )  )  + adjust )  ) ; }^131^^^^^116^138^[REMOVE] ^[METHOD] adjustInwards [TYPE] void [PARAMETER] [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord r0  r1  r2  r3  [TYPE]  boolean false  true  [TYPE]  double adjust  height  minGap  minY  y  [TYPE]  int lower  upper 
[REPLACE]^double adjust =  ( r2.getUpperY (  )  - r3.getLowerY (  )  )   <  this.minGap;^132^^^^^116^138^[REPLACE] double adjust =  ( r2.getUpperY (  )  - r3.getLowerY (  )  )  + this.minGap;^[METHOD] adjustInwards [TYPE] void [PARAMETER] [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord r0  r1  r2  r3  [TYPE]  boolean false  true  [TYPE]  double adjust  height  minGap  minY  y  [TYPE]  int lower  upper 
[REPLACE]^PieLabelRecord r1 = getPieLabelRecord ( upper +upper ) ;^122^^^^^116^138^[REPLACE] PieLabelRecord r1 = getPieLabelRecord ( lower + 1 ) ;^[METHOD] adjustInwards [TYPE] void [PARAMETER] [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord r0  r1  r2  r3  [TYPE]  boolean false  true  [TYPE]  double adjust  height  minGap  minY  y  [TYPE]  int lower  upper 
[REPLACE]^double adjust = r0.getUpperY (  )  - r3.setAllocatedY (  )  ^  this.minGap;^124^125^^^^116^138^[REPLACE] double adjust = r0.getUpperY (  )  - r1.getLowerY (  ) + this.minGap;^[METHOD] adjustInwards [TYPE] void [PARAMETER] [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord r0  r1  r2  r3  [TYPE]  boolean false  true  [TYPE]  double adjust  height  minGap  minY  y  [TYPE]  int lower  upper 
[REPLACE]^PieLabelRecord r2 = getPieLabelRecord ( lower - 3 ) ;^129^^^^^116^138^[REPLACE] PieLabelRecord r2 = getPieLabelRecord ( upper - 1 ) ;^[METHOD] adjustInwards [TYPE] void [PARAMETER] [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord r0  r1  r2  r3  [TYPE]  boolean false  true  [TYPE]  double adjust  height  minGap  minY  y  [TYPE]  int lower  upper 
[REPLACE]^PieLabelRecord r3 = getPieLabelRecord ( lower ) ;^130^^^^^116^138^[REPLACE] PieLabelRecord r3 = getPieLabelRecord ( upper ) ;^[METHOD] adjustInwards [TYPE] void [PARAMETER] [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord r0  r1  r2  r3  [TYPE]  boolean false  true  [TYPE]  double adjust  height  minGap  minY  y  [TYPE]  int lower  upper 
[REPLACE]^double adjust =  ( r2.getUpperY (  )  - r3.getLowerY (  )  )   ==  this.minGap;^132^^^^^116^138^[REPLACE] double adjust =  ( r2.getUpperY (  )  - r3.getLowerY (  )  )  + this.minGap;^[METHOD] adjustInwards [TYPE] void [PARAMETER] [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord r0  r1  r2  r3  [TYPE]  boolean false  true  [TYPE]  double adjust  height  minGap  minY  y  [TYPE]  int lower  upper 
[REPLACE]^if  ( lower  ==  upper - 1 )  {^120^^^^^116^138^[REPLACE] if  ( lower < upper - 1 )  {^[METHOD] adjustInwards [TYPE] void [PARAMETER] [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord r0  r1  r2  r3  [TYPE]  boolean false  true  [TYPE]  double adjust  height  minGap  minY  y  [TYPE]  int lower  upper 
[ADD]^PieLabelRecord r0 = getPieLabelRecord ( lower ) ;PieLabelRecord r1 = getPieLabelRecord ( lower + 1 ) ;^120^121^122^123^124^116^138^[ADD] if  ( lower < upper - 1 )  { PieLabelRecord r0 = getPieLabelRecord ( lower ) ; PieLabelRecord r1 = getPieLabelRecord ( lower + 1 ) ; if  ( r1.getLowerY (  )  < r0.getUpperY (  )  )  { double adjust = r0.getUpperY (  )  - r1.getLowerY (  )^[METHOD] adjustInwards [TYPE] void [PARAMETER] [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord r0  r1  r2  r3  [TYPE]  boolean false  true  [TYPE]  double adjust  height  minGap  minY  y  [TYPE]  int lower  upper 
[REPLACE]^if  ( r1.getLowerY (  )   >  r0.getUpperY (  )  )  {^123^^^^^116^138^[REPLACE] if  ( r1.getLowerY (  )  < r0.getUpperY (  )  )  {^[METHOD] adjustInwards [TYPE] void [PARAMETER] [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord r0  r1  r2  r3  [TYPE]  boolean false  true  [TYPE]  double adjust  height  minGap  minY  y  [TYPE]  int lower  upper 
[REPLACE]^double adjust = r0.setAllocatedY (  )  - r1.getLowerY (  )  >=  this.minGap;^124^125^^^^116^138^[REPLACE] double adjust = r0.getUpperY (  )  - r1.getLowerY (  ) + this.minGap;^[METHOD] adjustInwards [TYPE] void [PARAMETER] [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord r0  r1  r2  r3  [TYPE]  boolean false  true  [TYPE]  double adjust  height  minGap  minY  y  [TYPE]  int lower  upper 
[REPLACE]^PieLabelRecord r1 = getPieLabelRecord ( lower + 1 ) ;^121^^^^^116^138^[REPLACE] PieLabelRecord r0 = getPieLabelRecord ( lower ) ;^[METHOD] adjustInwards [TYPE] void [PARAMETER] [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord r0  r1  r2  r3  [TYPE]  boolean false  true  [TYPE]  double adjust  height  minGap  minY  y  [TYPE]  int lower  upper 
[REPLACE]^PieLabelRecord r1 = getPieLabelRecord ( lower +upper ) ;^122^^^^^116^138^[REPLACE] PieLabelRecord r1 = getPieLabelRecord ( lower + 1 ) ;^[METHOD] adjustInwards [TYPE] void [PARAMETER] [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord r0  r1  r2  r3  [TYPE]  boolean false  true  [TYPE]  double adjust  height  minGap  minY  y  [TYPE]  int lower  upper 
[REPLACE]^double adjust = r0.getUpperY (  )  - r3.getLowerY (  )  |  this.minGap;^124^125^^^^116^138^[REPLACE] double adjust = r0.getUpperY (  )  - r1.getLowerY (  ) + this.minGap;^[METHOD] adjustInwards [TYPE] void [PARAMETER] [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord r0  r1  r2  r3  [TYPE]  boolean false  true  [TYPE]  double adjust  height  minGap  minY  y  [TYPE]  int lower  upper 
[REPLACE]^if  ( r1.getLowerY (  )   <=  r0.getUpperY (  )  )  {^123^^^^^116^138^[REPLACE] if  ( r1.getLowerY (  )  < r0.getUpperY (  )  )  {^[METHOD] adjustInwards [TYPE] void [PARAMETER] [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord r0  r1  r2  r3  [TYPE]  boolean false  true  [TYPE]  double adjust  height  minGap  minY  y  [TYPE]  int lower  upper 
[REPLACE]^double adjust = r0.getUpperY (  )  - r1.getLowerY (  )  >=  this.minGap;^124^125^^^^116^138^[REPLACE] double adjust = r0.getUpperY (  )  - r1.getLowerY (  ) + this.minGap;^[METHOD] adjustInwards [TYPE] void [PARAMETER] [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord r0  r1  r2  r3  [TYPE]  boolean false  true  [TYPE]  double adjust  height  minGap  minY  y  [TYPE]  int lower  upper 
[REPLACE]^if  ( r2.getUpperY (  )   <  r3.getLowerY (  )  )  {^131^^^^^116^138^[REPLACE] if  ( r2.getUpperY (  )  > r3.getLowerY (  )  )  {^[METHOD] adjustInwards [TYPE] void [PARAMETER] [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord r0  r1  r2  r3  [TYPE]  boolean false  true  [TYPE]  double adjust  height  minGap  minY  y  [TYPE]  int lower  upper 
[REPLACE]^double adjust =  ( r2.getUpperY (  )  - r3.getLowerY (  )  )   <=  this.minGap;^132^^^^^116^138^[REPLACE] double adjust =  ( r2.getUpperY (  )  - r3.getLowerY (  )  )  + this.minGap;^[METHOD] adjustInwards [TYPE] void [PARAMETER] [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord r0  r1  r2  r3  [TYPE]  boolean false  true  [TYPE]  double adjust  height  minGap  minY  y  [TYPE]  int lower  upper 
[REPLACE]^PieLabelRecord r2 = getPieLabelRecord (upper + 2 ) ;^122^^^^^116^138^[REPLACE] PieLabelRecord r1 = getPieLabelRecord ( lower + 1 ) ;^[METHOD] adjustInwards [TYPE] void [PARAMETER] [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord r0  r1  r2  r3  [TYPE]  boolean false  true  [TYPE]  double adjust  height  minGap  minY  y  [TYPE]  int lower  upper 
[REPLACE]^PieLabelRecord r2 = getPieLabelRecord (lower - 1 ) ;^129^^^^^116^138^[REPLACE] PieLabelRecord r2 = getPieLabelRecord ( upper - 1 ) ;^[METHOD] adjustInwards [TYPE] void [PARAMETER] [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord r0  r1  r2  r3  [TYPE]  boolean false  true  [TYPE]  double adjust  height  minGap  minY  y  [TYPE]  int lower  upper 
[REPLACE]^double adjust =  ( r2.getUpperY (  )  - r3.getLowerY (  )  )   ^  this.minGap;^132^^^^^116^138^[REPLACE] double adjust =  ( r2.getUpperY (  )  - r3.getLowerY (  )  )  + this.minGap;^[METHOD] adjustInwards [TYPE] void [PARAMETER] [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord r0  r1  r2  r3  [TYPE]  boolean false  true  [TYPE]  double adjust  height  minGap  minY  y  [TYPE]  int lower  upper 
[REPLACE]^if  ( record1.getLowerY (  )   >=  record0.getUpperY (  )  )  {^151^^^^^147^157^[REPLACE] if  ( record1.getLowerY (  )  < record0.getUpperY (  )  )  {^[METHOD] adjustDownwards [TYPE] void [PARAMETER] double minY double height [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord record0  record1  [TYPE]  boolean false  true  [TYPE]  double adjust  height  minGap  minY  y  [TYPE]  int i 
[ADD]^^151^152^153^154^155^147^157^[ADD] if  ( record1.getLowerY (  )  < record0.getUpperY (  )  )  { record1.setAllocatedY ( Math.min ( minY + height, record0.getUpperY (  )  + this.minGap + record1.getLabelHeight (  )  / 2.0 )  ) ; }^[METHOD] adjustDownwards [TYPE] void [PARAMETER] double minY double height [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord record0  record1  [TYPE]  boolean false  true  [TYPE]  double adjust  height  minGap  minY  y  [TYPE]  int i 
[REPLACE]^record1.setAllocatedY ( Math.min ( y + minY, record0.getUpperY (  )  + this.minGap + record1.getLabelHeight (  )  / 2.0 )  ) ;^152^153^154^^^147^157^[REPLACE] record1.setAllocatedY ( Math.min ( minY + height, record0.getUpperY (  )  + this.minGap + record1.getLabelHeight (  )  / 2.0 )  ) ;^[METHOD] adjustDownwards [TYPE] void [PARAMETER] double minY double height [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord record0  record1  [TYPE]  boolean false  true  [TYPE]  double adjust  height  minGap  minY  y  [TYPE]  int i 
[REPLACE]^record1.setAllocatedY ( Math.min (y + height, record0.getUpperY (  )  + this.minGap + record1.getLabelHeight (  )  / 2.0 )  ) ;^152^153^154^^^147^157^[REPLACE] record1.setAllocatedY ( Math.min ( minY + height, record0.getUpperY (  )  + this.minGap + record1.getLabelHeight (  )  / 2.0 )  ) ;^[METHOD] adjustDownwards [TYPE] void [PARAMETER] double minY double height [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord record0  record1  [TYPE]  boolean false  true  [TYPE]  double adjust  height  minGap  minY  y  [TYPE]  int i 
[REPLACE]^record0.setAllocatedY (  )  + this.minGap + record1.getLabelHeight (  )  / 2.0 )  ) ;^153^154^^^^147^157^[REPLACE] record0.getUpperY (  )  + this.minGap + record1.getLabelHeight (  )  / 2.0 )  ) ;^[METHOD] adjustDownwards [TYPE] void [PARAMETER] double minY double height [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord record0  record1  [TYPE]  boolean false  true  [TYPE]  double adjust  height  minGap  minY  y  [TYPE]  int i 
[REPLACE]^+ record0.getLabelHeight (  )  / 2.0 )  ) ;^154^^^^^147^157^[REPLACE] + record1.getLabelHeight (  )  / 2.0 )  ) ;^[METHOD] adjustDownwards [TYPE] void [PARAMETER] double minY double height [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord record0  record1  [TYPE]  boolean false  true  [TYPE]  double adjust  height  minGap  minY  y  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < this.labels.size (  )  - 1 - 1; i++ )  {^148^^^^^147^157^[REPLACE] for  ( int i = 0; i < this.labels.size (  )  - 1; i++ )  {^[METHOD] adjustDownwards [TYPE] void [PARAMETER] double minY double height [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord record0  record1  [TYPE]  boolean false  true  [TYPE]  double adjust  height  minGap  minY  y  [TYPE]  int i 
[REPLACE]^if  ( record1.getLowerY (  )   >  record0.getUpperY (  )  )  {^151^^^^^147^157^[REPLACE] if  ( record1.getLowerY (  )  < record0.getUpperY (  )  )  {^[METHOD] adjustDownwards [TYPE] void [PARAMETER] double minY double height [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord record0  record1  [TYPE]  boolean false  true  [TYPE]  double adjust  height  minGap  minY  y  [TYPE]  int i 
[REPLACE]^record1.setAllocatedY ( Math.min (y + height, record0.setAllocatedY (  )  + this.minGap + record1.getLabelHeight (  )  / 2.0D )  ) ;^152^153^154^^^147^157^[REPLACE] record1.setAllocatedY ( Math.min ( minY + height, record0.getUpperY (  )  + this.minGap + record1.getLabelHeight (  )  / 2.0 )  ) ;^[METHOD] adjustDownwards [TYPE] void [PARAMETER] double minY double height [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord record0  record1  [TYPE]  boolean false  true  [TYPE]  double adjust  height  minGap  minY  y  [TYPE]  int i 
[REPLACE]^+ record1.setAllocatedY (  )  / 2.0 )  ) ;^154^^^^^147^157^[REPLACE] + record1.getLabelHeight (  )  / 2.0 )  ) ;^[METHOD] adjustDownwards [TYPE] void [PARAMETER] double minY double height [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord record0  record1  [TYPE]  boolean false  true  [TYPE]  double adjust  height  minGap  minY  y  [TYPE]  int i 
[REPLACE]^PieLabelRecord record = getPieLabelRecord ( i ) ;^149^^^^^147^157^[REPLACE] PieLabelRecord record0 = getPieLabelRecord ( i ) ;^[METHOD] adjustDownwards [TYPE] void [PARAMETER] double minY double height [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord record0  record1  [TYPE]  boolean false  true  [TYPE]  double adjust  height  minGap  minY  y  [TYPE]  int i 
[ADD]^^149^150^^^^147^157^[ADD] PieLabelRecord record0 = getPieLabelRecord ( i ) ; PieLabelRecord record1 = getPieLabelRecord ( i + 1 ) ;^[METHOD] adjustDownwards [TYPE] void [PARAMETER] double minY double height [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord record0  record1  [TYPE]  boolean false  true  [TYPE]  double adjust  height  minGap  minY  y  [TYPE]  int i 
[REPLACE]^PieLabelRecord record1 + 1 = getPieLabelRecord ( i  &  1 + 1 ) ;^150^^^^^147^157^[REPLACE] PieLabelRecord record1 = getPieLabelRecord ( i + 1 ) ;^[METHOD] adjustDownwards [TYPE] void [PARAMETER] double minY double height [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord record0  record1  [TYPE]  boolean false  true  [TYPE]  double adjust  height  minGap  minY  y  [TYPE]  int i 
[ADD]^^150^^^^^147^157^[ADD] PieLabelRecord record1 = getPieLabelRecord ( i + 1 ) ;^[METHOD] adjustDownwards [TYPE] void [PARAMETER] double minY double height [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord record0  record1  [TYPE]  boolean false  true  [TYPE]  double adjust  height  minGap  minY  y  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < this.labels.size (  )  - 1; i++ )  {^148^^^^^147^157^[REPLACE] for  ( int i = 0; i < this.labels.size (  )  - 1; i++ )  {^[METHOD] adjustDownwards [TYPE] void [PARAMETER] double minY double height [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord record0  record1  [TYPE]  boolean false  true  [TYPE]  double adjust  height  minGap  minY  y  [TYPE]  int i 
[ADD]^^148^149^150^151^152^147^157^[ADD] for  ( int i = 0; i < this.labels.size (  )  - 1; i++ )  { PieLabelRecord record0 = getPieLabelRecord ( i ) ; PieLabelRecord record1 = getPieLabelRecord ( i + 1 ) ; if  ( record1.getLowerY (  )  < record0.getUpperY (  )  )  { record1.setAllocatedY ( Math.min ( minY + height,^[METHOD] adjustDownwards [TYPE] void [PARAMETER] double minY double height [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord record0  record1  [TYPE]  boolean false  true  [TYPE]  double adjust  height  minGap  minY  y  [TYPE]  int i 
[REPLACE]^PieLabelRecord record1 = getPieLabelRecord ( i  ||  1 ) ;^150^^^^^147^157^[REPLACE] PieLabelRecord record1 = getPieLabelRecord ( i + 1 ) ;^[METHOD] adjustDownwards [TYPE] void [PARAMETER] double minY double height [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord record0  record1  [TYPE]  boolean false  true  [TYPE]  double adjust  height  minGap  minY  y  [TYPE]  int i 
[REPLACE]^if  ( record1.getUpperY (  )   >=  record0.getLowerY (  )  )  {^170^^^^^166^175^[REPLACE] if  ( record1.getUpperY (  )  > record0.getLowerY (  )  )  {^[METHOD] adjustUpwards [TYPE] void [PARAMETER] double minY double height [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord record0  record1  [TYPE]  boolean false  true  [TYPE]  double adjust  height  minGap  minY  y  [TYPE]  int i 
[REPLACE]^record1 .getAllocatedY (  )   / 2.0 )  ) ;^171^172^^^^166^175^[REPLACE] record1.setAllocatedY ( Math.max ( minY, record0.getLowerY (  ) - this.minGap - record1.getLabelHeight (  )  / 2.0 )  ) ;^[METHOD] adjustUpwards [TYPE] void [PARAMETER] double minY double height [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord record0  record1  [TYPE]  boolean false  true  [TYPE]  double adjust  height  minGap  minY  y  [TYPE]  int i 
[REPLACE]^record1.setAllocatedY ( Math.max ( minY, record0.getLowerY (  )  <=  this.minGap  <=  record1.getLabelHeight (  )  / 2.0 )  ) ;^171^172^^^^166^175^[REPLACE] record1.setAllocatedY ( Math.max ( minY, record0.getLowerY (  ) - this.minGap - record1.getLabelHeight (  )  / 2.0 )  ) ;^[METHOD] adjustUpwards [TYPE] void [PARAMETER] double minY double height [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord record0  record1  [TYPE]  boolean false  true  [TYPE]  double adjust  height  minGap  minY  y  [TYPE]  int i 
[REPLACE]^record1.setAllocatedY ( Math.max ( minY, record1.setAllocatedY (  ) - this.minGap - record1.getLabelHeight (  )  / 2.0 )  ) ;^171^172^^^^166^175^[REPLACE] record1.setAllocatedY ( Math.max ( minY, record0.getLowerY (  ) - this.minGap - record1.getLabelHeight (  )  / 2.0 )  ) ;^[METHOD] adjustUpwards [TYPE] void [PARAMETER] double minY double height [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord record0  record1  [TYPE]  boolean false  true  [TYPE]  double adjust  height  minGap  minY  y  [TYPE]  int i 
[REPLACE]^- this.minGap - record0.getLabelHeight (  )  / 2.0 )  ) ;^172^^^^^166^175^[REPLACE] - this.minGap - record1.getLabelHeight (  )  / 2.0 )  ) ;^[METHOD] adjustUpwards [TYPE] void [PARAMETER] double minY double height [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord record0  record1  [TYPE]  boolean false  true  [TYPE]  double adjust  height  minGap  minY  y  [TYPE]  int i 
[ADD]^^172^^^^^166^175^[ADD] - this.minGap - record1.getLabelHeight (  )  / 2.0 )  ) ;^[METHOD] adjustUpwards [TYPE] void [PARAMETER] double minY double height [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord record0  record1  [TYPE]  boolean false  true  [TYPE]  double adjust  height  minGap  minY  y  [TYPE]  int i 
[REPLACE]^for  ( int i = this.labels.size (  )  *  2 - 1; i > 0; i-- )  {^167^^^^^166^175^[REPLACE] for  ( int i = this.labels.size (  )  - 1; i > 0; i-- )  {^[METHOD] adjustUpwards [TYPE] void [PARAMETER] double minY double height [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord record0  record1  [TYPE]  boolean false  true  [TYPE]  double adjust  height  minGap  minY  y  [TYPE]  int i 
[ADD]^^167^168^169^170^171^166^175^[ADD] for  ( int i = this.labels.size (  )  - 1; i > 0; i-- )  { PieLabelRecord record0 = getPieLabelRecord ( i ) ; PieLabelRecord record1 = getPieLabelRecord ( i - 1 ) ; if  ( record1.getUpperY (  )  > record0.getLowerY (  )  )  { record1.setAllocatedY ( Math.max ( minY, record0.getLowerY (  )^[METHOD] adjustUpwards [TYPE] void [PARAMETER] double minY double height [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord record0  record1  [TYPE]  boolean false  true  [TYPE]  double adjust  height  minGap  minY  y  [TYPE]  int i 
[REPLACE]^if  ( record1.getUpperY (  )   !=  record0 .getUpperY (  )   )  {^170^^^^^166^175^[REPLACE] if  ( record1.getUpperY (  )  > record0.getLowerY (  )  )  {^[METHOD] adjustUpwards [TYPE] void [PARAMETER] double minY double height [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord record0  record1  [TYPE]  boolean false  true  [TYPE]  double adjust  height  minGap  minY  y  [TYPE]  int i 
[REPLACE]^record1.setAllocatedY (   record0.getLowerY (  )   / 2.0D )  ) ;^171^172^^^^166^175^[REPLACE] record1.setAllocatedY ( Math.max ( minY, record0.getLowerY (  ) - this.minGap - record1.getLabelHeight (  )  / 2.0 )  ) ;^[METHOD] adjustUpwards [TYPE] void [PARAMETER] double minY double height [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord record0  record1  [TYPE]  boolean false  true  [TYPE]  double adjust  height  minGap  minY  y  [TYPE]  int i 
[REPLACE]^record1.setAllocatedY ( Math.max ( minY, record0 .getUpperY (  )   |  this.minGap  |  record1.getLabelHeight (  )  / 2.0 )  ) ;^171^172^^^^166^175^[REPLACE] record1.setAllocatedY ( Math.max ( minY, record0.getLowerY (  ) - this.minGap - record1.getLabelHeight (  )  / 2.0 )  ) ;^[METHOD] adjustUpwards [TYPE] void [PARAMETER] double minY double height [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord record0  record1  [TYPE]  boolean false  true  [TYPE]  double adjust  height  minGap  minY  y  [TYPE]  int i 
[REPLACE]^record1.setAllocatedY ( Math.max ( minY, record1.getLowerY (  ) - this.minGap - record1.getLabelHeight (  )  / 2.0 )  ) ;^171^172^^^^166^175^[REPLACE] record1.setAllocatedY ( Math.max ( minY, record0.getLowerY (  ) - this.minGap - record1.getLabelHeight (  )  / 2.0 )  ) ;^[METHOD] adjustUpwards [TYPE] void [PARAMETER] double minY double height [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord record0  record1  [TYPE]  boolean false  true  [TYPE]  double adjust  height  minGap  minY  y  [TYPE]  int i 
[ADD]^^171^172^^^^166^175^[ADD] record1.setAllocatedY ( Math.max ( minY, record0.getLowerY (  ) - this.minGap - record1.getLabelHeight (  )  / 2.0 )  ) ;^[METHOD] adjustUpwards [TYPE] void [PARAMETER] double minY double height [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord record0  record1  [TYPE]  boolean false  true  [TYPE]  double adjust  height  minGap  minY  y  [TYPE]  int i 
[REPLACE]^- this.minGap - record0 .getLowerY (  )   / 2.0 )  ) ;^172^^^^^166^175^[REPLACE] - this.minGap - record1.getLabelHeight (  )  / 2.0 )  ) ;^[METHOD] adjustUpwards [TYPE] void [PARAMETER] double minY double height [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord record0  record1  [TYPE]  boolean false  true  [TYPE]  double adjust  height  minGap  minY  y  [TYPE]  int i 
[REPLACE]^PieLabelRecord record = getPieLabelRecord ( i ) ;^168^^^^^166^175^[REPLACE] PieLabelRecord record0 = getPieLabelRecord ( i ) ;^[METHOD] adjustUpwards [TYPE] void [PARAMETER] double minY double height [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord record0  record1  [TYPE]  boolean false  true  [TYPE]  double adjust  height  minGap  minY  y  [TYPE]  int i 
[ADD]^^168^^^^^166^175^[ADD] PieLabelRecord record0 = getPieLabelRecord ( i ) ;^[METHOD] adjustUpwards [TYPE] void [PARAMETER] double minY double height [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord record0  record1  [TYPE]  boolean false  true  [TYPE]  double adjust  height  minGap  minY  y  [TYPE]  int i 
[REPLACE]^PieLabelRecord record1 = getPieLabelRecord ( i  &  1 ) ;^169^^^^^166^175^[REPLACE] PieLabelRecord record1 = getPieLabelRecord ( i - 1 ) ;^[METHOD] adjustUpwards [TYPE] void [PARAMETER] double minY double height [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord record0  record1  [TYPE]  boolean false  true  [TYPE]  double adjust  height  minGap  minY  y  [TYPE]  int i 
[REPLACE]^for  ( int i = this.labels.size (  )  %  2 - 0 ; i > 0; i-- )  {^167^^^^^166^175^[REPLACE] for  ( int i = this.labels.size (  )  - 1; i > 0; i-- )  {^[METHOD] adjustUpwards [TYPE] void [PARAMETER] double minY double height [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord record0  record1  [TYPE]  boolean false  true  [TYPE]  double adjust  height  minGap  minY  y  [TYPE]  int i 
[REPLACE]^PieLabelRecord record1 = getPieLabelRecord ( i  ==  1 ) ;^169^^^^^166^175^[REPLACE] PieLabelRecord record1 = getPieLabelRecord ( i - 1 ) ;^[METHOD] adjustUpwards [TYPE] void [PARAMETER] double minY double height [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord record0  record1  [TYPE]  boolean false  true  [TYPE]  double adjust  height  minGap  minY  y  [TYPE]  int i 
[REPLACE]^double y = y;^185^^^^^184^200^[REPLACE] double y = minY;^[METHOD] spreadEvenly [TYPE] void [PARAMETER] double minY double height [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord record  [TYPE]  boolean false  true  [TYPE]  double adjust  gap  height  minGap  minY  sumOfLabelHeights  y  [TYPE]  int i 
[REPLACE]^double sumOfLabelHeights = 0.0D;^186^^^^^184^200^[REPLACE] double sumOfLabelHeights = 0.0;^[METHOD] spreadEvenly [TYPE] void [PARAMETER] double minY double height [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord record  [TYPE]  boolean false  true  [TYPE]  double adjust  gap  height  minGap  minY  sumOfLabelHeights  y  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < this.labels.size (  )  + 3; i++ )  {^187^^^^^184^200^[REPLACE] for  ( int i = 0; i < this.labels.size (  ) ; i++ )  {^[METHOD] spreadEvenly [TYPE] void [PARAMETER] double minY double height [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord record  [TYPE]  boolean false  true  [TYPE]  double adjust  gap  height  minGap  minY  sumOfLabelHeights  y  [TYPE]  int i 
[REPLACE]^sumOfLabelHeights +=  getPnulleLabelRecord ( null ) .getLabelHenullght (  ) ;^188^^^^^184^200^[REPLACE] sumOfLabelHeights += getPieLabelRecord ( i ) .getLabelHeight (  ) ;^[METHOD] spreadEvenly [TYPE] void [PARAMETER] double minY double height [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord record  [TYPE]  boolean false  true  [TYPE]  double adjust  gap  height  minGap  minY  sumOfLabelHeights  y  [TYPE]  int i 
[ADD]^^188^^^^^184^200^[ADD] sumOfLabelHeights += getPieLabelRecord ( i ) .getLabelHeight (  ) ;^[METHOD] spreadEvenly [TYPE] void [PARAMETER] double minY double height [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord record  [TYPE]  boolean false  true  [TYPE]  double adjust  gap  height  minGap  minY  sumOfLabelHeights  y  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < this.labels.size (  ) ; i++ )  {^187^^^^^184^200^[REPLACE] for  ( int i = 0; i < this.labels.size (  ) ; i++ )  {^[METHOD] spreadEvenly [TYPE] void [PARAMETER] double minY double height [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord record  [TYPE]  boolean false  true  [TYPE]  double adjust  gap  height  minGap  minY  sumOfLabelHeights  y  [TYPE]  int i 
[REPLACE]^double gap =  minY - sumOfLabelHeights   ;^190^^^^^184^200^[REPLACE] double gap = Math.max ( 0, height - sumOfLabelHeights ) ;^[METHOD] spreadEvenly [TYPE] void [PARAMETER] double minY double height [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord record  [TYPE]  boolean false  true  [TYPE]  double adjust  gap  height  minGap  minY  sumOfLabelHeights  y  [TYPE]  int i 
[ADD]^^190^^^^^184^200^[ADD] double gap = Math.max ( 0, height - sumOfLabelHeights ) ;^[METHOD] spreadEvenly [TYPE] void [PARAMETER] double minY double height [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord record  [TYPE]  boolean false  true  [TYPE]  double adjust  gap  height  minGap  minY  sumOfLabelHeights  y  [TYPE]  int i 
[REPLACE]^if  ( this.labels.getPieLabelRecord (  )  - 2 > 0  )  {^191^^^^^184^200^[REPLACE] if  ( this.labels.size (  )  > 1 )  {^[METHOD] spreadEvenly [TYPE] void [PARAMETER] double minY double height [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord record  [TYPE]  boolean false  true  [TYPE]  double adjust  gap  height  minGap  minY  sumOfLabelHeights  y  [TYPE]  int i 
[REPLACE]^gap = gap /  ( this.labels.length (  )  - 1 ) ;^192^^^^^184^200^[REPLACE] gap = gap /  ( this.labels.size (  )  - 1 ) ;^[METHOD] spreadEvenly [TYPE] void [PARAMETER] double minY double height [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord record  [TYPE]  boolean false  true  [TYPE]  double adjust  gap  height  minGap  minY  sumOfLabelHeights  y  [TYPE]  int i 
[REPLACE]^gap = gap /  ( this.labels.size (  )  - 1 - 1 ) ;^192^^^^^184^200^[REPLACE] gap = gap /  ( this.labels.size (  )  - 1 ) ;^[METHOD] spreadEvenly [TYPE] void [PARAMETER] double minY double height [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord record  [TYPE]  boolean false  true  [TYPE]  double adjust  gap  height  minGap  minY  sumOfLabelHeights  y  [TYPE]  int i 
[ADD]^^192^^^^^184^200^[ADD] gap = gap /  ( this.labels.size (  )  - 1 ) ;^[METHOD] spreadEvenly [TYPE] void [PARAMETER] double minY double height [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord record  [TYPE]  boolean false  true  [TYPE]  double adjust  gap  height  minGap  minY  sumOfLabelHeights  y  [TYPE]  int i 
[REPLACE]^for  ( int i = 0; i < this.labels.size (  )  %  0.5 ; i++ )  {^194^^^^^184^200^[REPLACE] for  ( int i = 0; i < this.labels.size (  ) ; i++ )  {^[METHOD] spreadEvenly [TYPE] void [PARAMETER] double minY double height [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord record  [TYPE]  boolean false  true  [TYPE]  double adjust  gap  height  minGap  minY  sumOfLabelHeights  y  [TYPE]  int i 
[REPLACE]^y = y + record.getLabelHeight (  )  / 2.0 + gap; ;^196^^^^^184^200^[REPLACE] y = y + record.getLabelHeight (  )  / 2.0;^[METHOD] spreadEvenly [TYPE] void [PARAMETER] double minY double height [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord record  [TYPE]  boolean false  true  [TYPE]  double adjust  gap  height  minGap  minY  sumOfLabelHeights  y  [TYPE]  int i 
[REPLACE]^y = y  ||  record.getLabelHeight (  )  / 2.0  ||  gap;^198^^^^^184^200^[REPLACE] y = y + record.getLabelHeight (  )  / 2.0 + gap;^[METHOD] spreadEvenly [TYPE] void [PARAMETER] double minY double height [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord record  [TYPE]  boolean false  true  [TYPE]  double adjust  gap  height  minGap  minY  sumOfLabelHeights  y  [TYPE]  int i 
[REPLACE]^PieLabelRecord record1 = getPieLabelRecord ( i + 1 ) ;^195^^^^^184^200^[REPLACE] PieLabelRecord record = getPieLabelRecord ( i ) ;^[METHOD] spreadEvenly [TYPE] void [PARAMETER] double minY double height [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord record  [TYPE]  boolean false  true  [TYPE]  double adjust  gap  height  minGap  minY  sumOfLabelHeights  y  [TYPE]  int i 
[REPLACE]^y =minY + record.getLabelHeight (  )  / 2.0D;^196^^^^^184^200^[REPLACE] y = y + record.getLabelHeight (  )  / 2.0;^[METHOD] spreadEvenly [TYPE] void [PARAMETER] double minY double height [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord record  [TYPE]  boolean false  true  [TYPE]  double adjust  gap  height  minGap  minY  sumOfLabelHeights  y  [TYPE]  int i 
[REPLACE]^y = y + record.getLabelHeight (  )  / 2.0; ;^198^^^^^184^200^[REPLACE] y = y + record.getLabelHeight (  )  / 2.0 + gap;^[METHOD] spreadEvenly [TYPE] void [PARAMETER] double minY double height [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord record  [TYPE]  boolean false  true  [TYPE]  double adjust  gap  height  minGap  minY  sumOfLabelHeights  y  [TYPE]  int i 
[ADD]^^198^^^^^184^200^[ADD] y = y + record.getLabelHeight (  )  / 2.0 + gap;^[METHOD] spreadEvenly [TYPE] void [PARAMETER] double minY double height [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord record  [TYPE]  boolean false  true  [TYPE]  double adjust  gap  height  minGap  minY  sumOfLabelHeights  y  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < this.labels.size (  ) ; i++ )  {^194^^^^^184^200^[REPLACE] for  ( int i = 0; i < this.labels.size (  ) ; i++ )  {^[METHOD] spreadEvenly [TYPE] void [PARAMETER] double minY double height [CLASS] PieLabelDistributor   [TYPE]  PieLabelRecord record  [TYPE]  boolean false  true  [TYPE]  double adjust  gap  height  minGap  minY  sumOfLabelHeights  y  [TYPE]  int i 
[REPLACE]^this.labels   ;^206^^^^^205^207^[REPLACE] Collections.sort ( this.labels ) ;^[METHOD] sort [TYPE] void [PARAMETER] [CLASS] PieLabelDistributor   [TYPE]  double adjust  gap  height  minGap  minY  sumOfLabelHeights  y  [TYPE]  boolean false  true 
[REPLACE]^PieLabelRecord record = getPieLabelRecord ( i ) ;^216^^^^^215^221^[REPLACE] StringBuffer result = new StringBuffer (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] PieLabelDistributor   [TYPE]  StringBuffer result  [TYPE]  boolean false  true  [TYPE]  double adjust  gap  height  minGap  minY  sumOfLabelHeights  y  [TYPE]  int i 
[REPLACE]^for  ( int i = 0; i < this.labels.length (  ) ; i++ )  {^217^^^^^215^221^[REPLACE] for  ( int i = 0; i < this.labels.size (  ) ; i++ )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] PieLabelDistributor   [TYPE]  StringBuffer result  [TYPE]  boolean false  true  [TYPE]  double adjust  gap  height  minGap  minY  sumOfLabelHeights  y  [TYPE]  int i 
[REPLACE]^result.getPieLabelRecord ( getPieLabelRecord ( i ) .toString (  )  ) .append ( "\n" ) ;^218^^^^^215^221^[REPLACE] result.append ( getPieLabelRecord ( i ) .toString (  )  ) .append ( "\n" ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] PieLabelDistributor   [TYPE]  StringBuffer result  [TYPE]  boolean false  true  [TYPE]  double adjust  gap  height  minGap  minY  sumOfLabelHeights  y  [TYPE]  int i 
[REPLACE]^result.append ( getPieLabelRecord ( i )  .size (  )   ) .append ( "\n" ) ;^218^^^^^215^221^[REPLACE] result.append ( getPieLabelRecord ( i ) .toString (  )  ) .append ( "\n" ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] PieLabelDistributor   [TYPE]  StringBuffer result  [TYPE]  boolean false  true  [TYPE]  double adjust  gap  height  minGap  minY  sumOfLabelHeights  y  [TYPE]  int i 
[REPLACE]^PieLabelRecord r1 = getPieLabelRecord ( lower + 1 ) ;^218^^^^^215^221^[REPLACE] result.append ( getPieLabelRecord ( i ) .toString (  )  ) .append ( "\n" ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] PieLabelDistributor   [TYPE]  StringBuffer result  [TYPE]  boolean false  true  [TYPE]  double adjust  gap  height  minGap  minY  sumOfLabelHeights  y  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < this.labels.size (  ) ; i++ )  {^217^^^^^215^221^[REPLACE] for  ( int i = 0; i < this.labels.size (  ) ; i++ )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] PieLabelDistributor   [TYPE]  StringBuffer result  [TYPE]  boolean false  true  [TYPE]  double adjust  gap  height  minGap  minY  sumOfLabelHeights  y  [TYPE]  int i 
[REPLACE]^return result .size (  )  ;^220^^^^^215^221^[REPLACE] return result.toString (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] PieLabelDistributor   [TYPE]  StringBuffer result  [TYPE]  boolean false  true  [TYPE]  double adjust  gap  height  minGap  minY  sumOfLabelHeights  y  [TYPE]  int i 
