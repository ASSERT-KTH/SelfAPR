[REPLACE]^writeChartAsPNG ( out, chart, width, height, true ) ;^124^^^^^120^126^[REPLACE] writeChartAsPNG ( out, chart, width, height, null ) ;^[METHOD] writeChartAsPNG [TYPE] void [PARAMETER] OutputStream out JFreeChart chart int width int height [CLASS] ChartUtilities   [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  JFreeChart chart  [TYPE]  int height  width 
[REPLACE]^ChartUtilities.saveChartAsPNG ( out, chart, width, height, true, encodeAlpha, compression ) ;^145^146^^^^140^148^[REPLACE] ChartUtilities.writeChartAsPNG ( out, chart, width, height, null, encodeAlpha, compression ) ;^[METHOD] writeChartAsPNG [TYPE] void [PARAMETER] OutputStream out JFreeChart chart int width int height boolean encodeAlpha int compression [CLASS] ChartUtilities   [TYPE]  boolean encodeAlpha  false  true  [TYPE]  OutputStream out  [TYPE]  JFreeChart chart  [TYPE]  int compression  height  width 
[REPLACE]^if  ( chart != null )  {^168^^^^^164^174^[REPLACE] if  ( chart == null )  {^[METHOD] writeChartAsPNG [TYPE] void [PARAMETER] OutputStream out JFreeChart chart int width int height ChartRenderingInfo info [CLASS] ChartUtilities   [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  ChartRenderingInfo info  [TYPE]  JFreeChart chart  [TYPE]  int height  width  [TYPE]  BufferedImage bufferedImage 
[REPLACE]^return ;^169^^^^^164^174^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] writeChartAsPNG [TYPE] void [PARAMETER] OutputStream out JFreeChart chart int width int height ChartRenderingInfo info [CLASS] ChartUtilities   [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  ChartRenderingInfo info  [TYPE]  JFreeChart chart  [TYPE]  int height  width  [TYPE]  BufferedImage bufferedImage 
[ADD]^^169^^^^^164^174^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] writeChartAsPNG [TYPE] void [PARAMETER] OutputStream out JFreeChart chart int width int height ChartRenderingInfo info [CLASS] ChartUtilities   [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  ChartRenderingInfo info  [TYPE]  JFreeChart chart  [TYPE]  int height  width  [TYPE]  BufferedImage bufferedImage 
[REPLACE]^BufferedImage bufferedImage = chart.createBufferedImage ( width, width, info ) ;^171^172^^^^164^174^[REPLACE] BufferedImage bufferedImage = chart.createBufferedImage ( width, height, info ) ;^[METHOD] writeChartAsPNG [TYPE] void [PARAMETER] OutputStream out JFreeChart chart int width int height ChartRenderingInfo info [CLASS] ChartUtilities   [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  ChartRenderingInfo info  [TYPE]  JFreeChart chart  [TYPE]  int height  width  [TYPE]  BufferedImage bufferedImage 
[REPLACE]^EncoderUtil.writeBufferedImage ( image, ImageFormat.JPEG, out ) ;^173^^^^^164^174^[REPLACE] EncoderUtil.writeBufferedImage ( bufferedImage, ImageFormat.PNG, out ) ;^[METHOD] writeChartAsPNG [TYPE] void [PARAMETER] OutputStream out JFreeChart chart int width int height ChartRenderingInfo info [CLASS] ChartUtilities   [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  ChartRenderingInfo info  [TYPE]  JFreeChart chart  [TYPE]  int height  width  [TYPE]  BufferedImage bufferedImage 
[ADD]^^173^^^^^164^174^[ADD] EncoderUtil.writeBufferedImage ( bufferedImage, ImageFormat.PNG, out ) ;^[METHOD] writeChartAsPNG [TYPE] void [PARAMETER] OutputStream out JFreeChart chart int width int height ChartRenderingInfo info [CLASS] ChartUtilities   [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  ChartRenderingInfo info  [TYPE]  JFreeChart chart  [TYPE]  int height  width  [TYPE]  BufferedImage bufferedImage 
[REPLACE]^if  ( out != null )  {^197^^^^^193^208^[REPLACE] if  ( out == null )  {^[METHOD] writeChartAsPNG [TYPE] void [PARAMETER] OutputStream out JFreeChart chart int width int height ChartRenderingInfo info boolean encodeAlpha int compression [CLASS] ChartUtilities   [TYPE]  boolean encodeAlpha  false  true  [TYPE]  OutputStream out  [TYPE]  ChartRenderingInfo info  [TYPE]  JFreeChart chart  [TYPE]  int compression  height  width  [TYPE]  BufferedImage chartImage 
[REPLACE]^return ;^198^^^^^193^208^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] writeChartAsPNG [TYPE] void [PARAMETER] OutputStream out JFreeChart chart int width int height ChartRenderingInfo info boolean encodeAlpha int compression [CLASS] ChartUtilities   [TYPE]  boolean encodeAlpha  false  true  [TYPE]  OutputStream out  [TYPE]  ChartRenderingInfo info  [TYPE]  JFreeChart chart  [TYPE]  int compression  height  width  [TYPE]  BufferedImage chartImage 
[ADD]^^198^^^^^193^208^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] writeChartAsPNG [TYPE] void [PARAMETER] OutputStream out JFreeChart chart int width int height ChartRenderingInfo info boolean encodeAlpha int compression [CLASS] ChartUtilities   [TYPE]  boolean encodeAlpha  false  true  [TYPE]  OutputStream out  [TYPE]  ChartRenderingInfo info  [TYPE]  JFreeChart chart  [TYPE]  int compression  height  width  [TYPE]  BufferedImage chartImage 
[REPLACE]^if  ( chart != null )  {^200^^^^^193^208^[REPLACE] if  ( chart == null )  {^[METHOD] writeChartAsPNG [TYPE] void [PARAMETER] OutputStream out JFreeChart chart int width int height ChartRenderingInfo info boolean encodeAlpha int compression [CLASS] ChartUtilities   [TYPE]  boolean encodeAlpha  false  true  [TYPE]  OutputStream out  [TYPE]  ChartRenderingInfo info  [TYPE]  JFreeChart chart  [TYPE]  int compression  height  width  [TYPE]  BufferedImage chartImage 
[ADD]^^200^201^202^^^193^208^[ADD] if  ( chart == null )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] writeChartAsPNG [TYPE] void [PARAMETER] OutputStream out JFreeChart chart int width int height ChartRenderingInfo info boolean encodeAlpha int compression [CLASS] ChartUtilities   [TYPE]  boolean encodeAlpha  false  true  [TYPE]  OutputStream out  [TYPE]  ChartRenderingInfo info  [TYPE]  JFreeChart chart  [TYPE]  int compression  height  width  [TYPE]  BufferedImage chartImage 
[REPLACE]^return ;^201^^^^^193^208^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] writeChartAsPNG [TYPE] void [PARAMETER] OutputStream out JFreeChart chart int width int height ChartRenderingInfo info boolean encodeAlpha int compression [CLASS] ChartUtilities   [TYPE]  boolean encodeAlpha  false  true  [TYPE]  OutputStream out  [TYPE]  ChartRenderingInfo info  [TYPE]  JFreeChart chart  [TYPE]  int compression  height  width  [TYPE]  BufferedImage chartImage 
[REPLACE]^BufferedImage chartImage = chart .createBufferedImage ( compression , height , info )  ;^203^204^^^^193^208^[REPLACE] BufferedImage chartImage = chart.createBufferedImage ( width, height, BufferedImage.TYPE_INT_ARGB, info ) ;^[METHOD] writeChartAsPNG [TYPE] void [PARAMETER] OutputStream out JFreeChart chart int width int height ChartRenderingInfo info boolean encodeAlpha int compression [CLASS] ChartUtilities   [TYPE]  boolean encodeAlpha  false  true  [TYPE]  OutputStream out  [TYPE]  ChartRenderingInfo info  [TYPE]  JFreeChart chart  [TYPE]  int compression  height  width  [TYPE]  BufferedImage chartImage 
[REPLACE]^ChartUtilities .writeBufferedImageAsPNG ( out , chartImage )  ;^205^206^^^^193^208^[REPLACE] ChartUtilities.writeBufferedImageAsPNG ( out, chartImage, encodeAlpha, compression ) ;^[METHOD] writeChartAsPNG [TYPE] void [PARAMETER] OutputStream out JFreeChart chart int width int height ChartRenderingInfo info boolean encodeAlpha int compression [CLASS] ChartUtilities   [TYPE]  boolean encodeAlpha  false  true  [TYPE]  OutputStream out  [TYPE]  ChartRenderingInfo info  [TYPE]  JFreeChart chart  [TYPE]  int compression  height  width  [TYPE]  BufferedImage chartImage 
[REPLACE]^if  ( out != true )  {^226^^^^^224^265^[REPLACE] if  ( out == null )  {^[METHOD] writeScaledChartAsPNG [TYPE] void [PARAMETER] OutputStream out JFreeChart chart int width int height int widthScaleFactor int heightScaleFactor [CLASS] ChartUtilities   [TYPE]  boolean false  scale  true  [TYPE]  double defaultHeight  defaultWidth  desiredHeight  desiredWidth  scaleX  scaleY  [TYPE]  OutputStream out  [TYPE]  AffineTransform saved  [TYPE]  JFreeChart chart  [TYPE]  int height  heightScaleFactor  width  widthScaleFactor  [TYPE]  BufferedImage image  [TYPE]  Graphics2D g2 
[ADD]^^226^227^228^^^224^265^[ADD] if  ( out == null )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] writeScaledChartAsPNG [TYPE] void [PARAMETER] OutputStream out JFreeChart chart int width int height int widthScaleFactor int heightScaleFactor [CLASS] ChartUtilities   [TYPE]  boolean false  scale  true  [TYPE]  double defaultHeight  defaultWidth  desiredHeight  desiredWidth  scaleX  scaleY  [TYPE]  OutputStream out  [TYPE]  AffineTransform saved  [TYPE]  JFreeChart chart  [TYPE]  int height  heightScaleFactor  width  widthScaleFactor  [TYPE]  BufferedImage image  [TYPE]  Graphics2D g2 
[REPLACE]^return ;^227^^^^^224^265^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] writeScaledChartAsPNG [TYPE] void [PARAMETER] OutputStream out JFreeChart chart int width int height int widthScaleFactor int heightScaleFactor [CLASS] ChartUtilities   [TYPE]  boolean false  scale  true  [TYPE]  double defaultHeight  defaultWidth  desiredHeight  desiredWidth  scaleX  scaleY  [TYPE]  OutputStream out  [TYPE]  AffineTransform saved  [TYPE]  JFreeChart chart  [TYPE]  int height  heightScaleFactor  width  widthScaleFactor  [TYPE]  BufferedImage image  [TYPE]  Graphics2D g2 
[ADD]^^227^^^^^224^265^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] writeScaledChartAsPNG [TYPE] void [PARAMETER] OutputStream out JFreeChart chart int width int height int widthScaleFactor int heightScaleFactor [CLASS] ChartUtilities   [TYPE]  boolean false  scale  true  [TYPE]  double defaultHeight  defaultWidth  desiredHeight  desiredWidth  scaleX  scaleY  [TYPE]  OutputStream out  [TYPE]  AffineTransform saved  [TYPE]  JFreeChart chart  [TYPE]  int height  heightScaleFactor  width  widthScaleFactor  [TYPE]  BufferedImage image  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( chart != null )  {^229^^^^^224^265^[REPLACE] if  ( chart == null )  {^[METHOD] writeScaledChartAsPNG [TYPE] void [PARAMETER] OutputStream out JFreeChart chart int width int height int widthScaleFactor int heightScaleFactor [CLASS] ChartUtilities   [TYPE]  boolean false  scale  true  [TYPE]  double defaultHeight  defaultWidth  desiredHeight  desiredWidth  scaleX  scaleY  [TYPE]  OutputStream out  [TYPE]  AffineTransform saved  [TYPE]  JFreeChart chart  [TYPE]  int height  heightScaleFactor  width  widthScaleFactor  [TYPE]  BufferedImage image  [TYPE]  Graphics2D g2 
[ADD]^^229^230^231^^^224^265^[ADD] if  ( chart == null )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] writeScaledChartAsPNG [TYPE] void [PARAMETER] OutputStream out JFreeChart chart int width int height int widthScaleFactor int heightScaleFactor [CLASS] ChartUtilities   [TYPE]  boolean false  scale  true  [TYPE]  double defaultHeight  defaultWidth  desiredHeight  desiredWidth  scaleX  scaleY  [TYPE]  OutputStream out  [TYPE]  AffineTransform saved  [TYPE]  JFreeChart chart  [TYPE]  int height  heightScaleFactor  width  widthScaleFactor  [TYPE]  BufferedImage image  [TYPE]  Graphics2D g2 
[REPLACE]^return ;^230^^^^^224^265^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] writeScaledChartAsPNG [TYPE] void [PARAMETER] OutputStream out JFreeChart chart int width int height int widthScaleFactor int heightScaleFactor [CLASS] ChartUtilities   [TYPE]  boolean false  scale  true  [TYPE]  double defaultHeight  defaultWidth  desiredHeight  desiredWidth  scaleX  scaleY  [TYPE]  OutputStream out  [TYPE]  AffineTransform saved  [TYPE]  JFreeChart chart  [TYPE]  int height  heightScaleFactor  width  widthScaleFactor  [TYPE]  BufferedImage image  [TYPE]  Graphics2D g2 
[ADD]^^230^^^^^224^265^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] writeScaledChartAsPNG [TYPE] void [PARAMETER] OutputStream out JFreeChart chart int width int height int widthScaleFactor int heightScaleFactor [CLASS] ChartUtilities   [TYPE]  boolean false  scale  true  [TYPE]  double defaultHeight  defaultWidth  desiredHeight  desiredWidth  scaleX  scaleY  [TYPE]  OutputStream out  [TYPE]  AffineTransform saved  [TYPE]  JFreeChart chart  [TYPE]  int height  heightScaleFactor  width  widthScaleFactor  [TYPE]  BufferedImage image  [TYPE]  Graphics2D g2 
[REPLACE]^double desiredWidth = width  ;^233^^^^^224^265^[REPLACE] double desiredWidth = width * widthScaleFactor;^[METHOD] writeScaledChartAsPNG [TYPE] void [PARAMETER] OutputStream out JFreeChart chart int width int height int widthScaleFactor int heightScaleFactor [CLASS] ChartUtilities   [TYPE]  boolean false  scale  true  [TYPE]  double defaultHeight  defaultWidth  desiredHeight  desiredWidth  scaleX  scaleY  [TYPE]  OutputStream out  [TYPE]  AffineTransform saved  [TYPE]  JFreeChart chart  [TYPE]  int height  heightScaleFactor  width  widthScaleFactor  [TYPE]  BufferedImage image  [TYPE]  Graphics2D g2 
[REPLACE]^double desiredHeight =widthScaleFactor  ;^234^^^^^224^265^[REPLACE] double desiredHeight = height * heightScaleFactor;^[METHOD] writeScaledChartAsPNG [TYPE] void [PARAMETER] OutputStream out JFreeChart chart int width int height int widthScaleFactor int heightScaleFactor [CLASS] ChartUtilities   [TYPE]  boolean false  scale  true  [TYPE]  double defaultHeight  defaultWidth  desiredHeight  desiredWidth  scaleX  scaleY  [TYPE]  OutputStream out  [TYPE]  AffineTransform saved  [TYPE]  JFreeChart chart  [TYPE]  int height  heightScaleFactor  width  widthScaleFactor  [TYPE]  BufferedImage image  [TYPE]  Graphics2D g2 
[REPLACE]^double defaultWidth = widthScaleFactor;^235^^^^^224^265^[REPLACE] double defaultWidth = width;^[METHOD] writeScaledChartAsPNG [TYPE] void [PARAMETER] OutputStream out JFreeChart chart int width int height int widthScaleFactor int heightScaleFactor [CLASS] ChartUtilities   [TYPE]  boolean false  scale  true  [TYPE]  double defaultHeight  defaultWidth  desiredHeight  desiredWidth  scaleX  scaleY  [TYPE]  OutputStream out  [TYPE]  AffineTransform saved  [TYPE]  JFreeChart chart  [TYPE]  int height  heightScaleFactor  width  widthScaleFactor  [TYPE]  BufferedImage image  [TYPE]  Graphics2D g2 
[ADD]^^235^236^^^^224^265^[ADD] double defaultWidth = width; double defaultHeight = height;^[METHOD] writeScaledChartAsPNG [TYPE] void [PARAMETER] OutputStream out JFreeChart chart int width int height int widthScaleFactor int heightScaleFactor [CLASS] ChartUtilities   [TYPE]  boolean false  scale  true  [TYPE]  double defaultHeight  defaultWidth  desiredHeight  desiredWidth  scaleX  scaleY  [TYPE]  OutputStream out  [TYPE]  AffineTransform saved  [TYPE]  JFreeChart chart  [TYPE]  int height  heightScaleFactor  width  widthScaleFactor  [TYPE]  BufferedImage image  [TYPE]  Graphics2D g2 
[REPLACE]^double defaultHeight = widthScaleFactor;^236^^^^^224^265^[REPLACE] double defaultHeight = height;^[METHOD] writeScaledChartAsPNG [TYPE] void [PARAMETER] OutputStream out JFreeChart chart int width int height int widthScaleFactor int heightScaleFactor [CLASS] ChartUtilities   [TYPE]  boolean false  scale  true  [TYPE]  double defaultHeight  defaultWidth  desiredHeight  desiredWidth  scaleX  scaleY  [TYPE]  OutputStream out  [TYPE]  AffineTransform saved  [TYPE]  JFreeChart chart  [TYPE]  int height  heightScaleFactor  width  widthScaleFactor  [TYPE]  BufferedImage image  [TYPE]  Graphics2D g2 
[REPLACE]^boolean scale = true;^237^^^^^224^265^[REPLACE] boolean scale = false;^[METHOD] writeScaledChartAsPNG [TYPE] void [PARAMETER] OutputStream out JFreeChart chart int width int height int widthScaleFactor int heightScaleFactor [CLASS] ChartUtilities   [TYPE]  boolean false  scale  true  [TYPE]  double defaultHeight  defaultWidth  desiredHeight  desiredWidth  scaleX  scaleY  [TYPE]  OutputStream out  [TYPE]  AffineTransform saved  [TYPE]  JFreeChart chart  [TYPE]  int height  heightScaleFactor  width  widthScaleFactor  [TYPE]  BufferedImage image  [TYPE]  Graphics2D g2 
[REPLACE]^if  (  ( widthScaleFactor != 1 % 1 )  ) {^240^^^^^224^265^[REPLACE] if  (  ( widthScaleFactor != 1 )  ||  ( heightScaleFactor != 1 )  )  {^[METHOD] writeScaledChartAsPNG [TYPE] void [PARAMETER] OutputStream out JFreeChart chart int width int height int widthScaleFactor int heightScaleFactor [CLASS] ChartUtilities   [TYPE]  boolean false  scale  true  [TYPE]  double defaultHeight  defaultWidth  desiredHeight  desiredWidth  scaleX  scaleY  [TYPE]  OutputStream out  [TYPE]  AffineTransform saved  [TYPE]  JFreeChart chart  [TYPE]  int height  heightScaleFactor  width  widthScaleFactor  [TYPE]  BufferedImage image  [TYPE]  Graphics2D g2 
[REPLACE]^scale = false;^241^^^^^224^265^[REPLACE] scale = true;^[METHOD] writeScaledChartAsPNG [TYPE] void [PARAMETER] OutputStream out JFreeChart chart int width int height int widthScaleFactor int heightScaleFactor [CLASS] ChartUtilities   [TYPE]  boolean false  scale  true  [TYPE]  double defaultHeight  defaultWidth  desiredHeight  desiredWidth  scaleX  scaleY  [TYPE]  OutputStream out  [TYPE]  AffineTransform saved  [TYPE]  JFreeChart chart  [TYPE]  int height  heightScaleFactor  width  widthScaleFactor  [TYPE]  BufferedImage image  [TYPE]  Graphics2D g2 
[ADD]^^241^^^^^224^265^[ADD] scale = true;^[METHOD] writeScaledChartAsPNG [TYPE] void [PARAMETER] OutputStream out JFreeChart chart int width int height int widthScaleFactor int heightScaleFactor [CLASS] ChartUtilities   [TYPE]  boolean false  scale  true  [TYPE]  double defaultHeight  defaultWidth  desiredHeight  desiredWidth  scaleX  scaleY  [TYPE]  OutputStream out  [TYPE]  AffineTransform saved  [TYPE]  JFreeChart chart  [TYPE]  int height  heightScaleFactor  width  widthScaleFactor  [TYPE]  BufferedImage image  [TYPE]  Graphics2D g2 
[REPLACE]^double scaleX =scaleY  ;^244^^^^^224^265^[REPLACE] double scaleX = desiredWidth / defaultWidth;^[METHOD] writeScaledChartAsPNG [TYPE] void [PARAMETER] OutputStream out JFreeChart chart int width int height int widthScaleFactor int heightScaleFactor [CLASS] ChartUtilities   [TYPE]  boolean false  scale  true  [TYPE]  double defaultHeight  defaultWidth  desiredHeight  desiredWidth  scaleX  scaleY  [TYPE]  OutputStream out  [TYPE]  AffineTransform saved  [TYPE]  JFreeChart chart  [TYPE]  int height  heightScaleFactor  width  widthScaleFactor  [TYPE]  BufferedImage image  [TYPE]  Graphics2D g2 
[REPLACE]^double scaleY = desiredHeight  ;^245^^^^^224^265^[REPLACE] double scaleY = desiredHeight / defaultHeight;^[METHOD] writeScaledChartAsPNG [TYPE] void [PARAMETER] OutputStream out JFreeChart chart int width int height int widthScaleFactor int heightScaleFactor [CLASS] ChartUtilities   [TYPE]  boolean false  scale  true  [TYPE]  double defaultHeight  defaultWidth  desiredHeight  desiredWidth  scaleX  scaleY  [TYPE]  OutputStream out  [TYPE]  AffineTransform saved  [TYPE]  JFreeChart chart  [TYPE]  int height  heightScaleFactor  width  widthScaleFactor  [TYPE]  BufferedImage image  [TYPE]  Graphics2D g2 
[REPLACE]^ToolTipTagFragmentGenerator toolTipTagFragmentGenerator = null;^249^^^^^224^265^[REPLACE] Graphics2D g2 = image.createGraphics (  ) ;^[METHOD] writeScaledChartAsPNG [TYPE] void [PARAMETER] OutputStream out JFreeChart chart int width int height int widthScaleFactor int heightScaleFactor [CLASS] ChartUtilities   [TYPE]  boolean false  scale  true  [TYPE]  double defaultHeight  defaultWidth  desiredHeight  desiredWidth  scaleX  scaleY  [TYPE]  OutputStream out  [TYPE]  AffineTransform saved  [TYPE]  JFreeChart chart  [TYPE]  int height  heightScaleFactor  width  widthScaleFactor  [TYPE]  BufferedImage image  [TYPE]  Graphics2D g2 
[REPLACE]^if  ( useOverLibForToolTips )  {^251^^^^^224^265^[REPLACE] if  ( scale )  {^[METHOD] writeScaledChartAsPNG [TYPE] void [PARAMETER] OutputStream out JFreeChart chart int width int height int widthScaleFactor int heightScaleFactor [CLASS] ChartUtilities   [TYPE]  boolean false  scale  true  [TYPE]  double defaultHeight  defaultWidth  desiredHeight  desiredWidth  scaleX  scaleY  [TYPE]  OutputStream out  [TYPE]  AffineTransform saved  [TYPE]  JFreeChart chart  [TYPE]  int height  heightScaleFactor  width  widthScaleFactor  [TYPE]  BufferedImage image  [TYPE]  Graphics2D g2 
[REPLACE]^chart.draw ( g2, new Rectangle2D.Double ( 3, 3, defaultWidth, defaultHeight ) , null, null ) ;^260^261^^^^251^262^[REPLACE] chart.draw ( g2, new Rectangle2D.Double ( 0, 0, defaultWidth, defaultHeight ) , null, null ) ;^[METHOD] writeScaledChartAsPNG [TYPE] void [PARAMETER] OutputStream out JFreeChart chart int width int height int widthScaleFactor int heightScaleFactor [CLASS] ChartUtilities   [TYPE]  boolean false  scale  true  [TYPE]  double defaultHeight  defaultWidth  desiredHeight  desiredWidth  scaleX  scaleY  [TYPE]  OutputStream out  [TYPE]  AffineTransform saved  [TYPE]  JFreeChart chart  [TYPE]  int height  heightScaleFactor  width  widthScaleFactor  [TYPE]  BufferedImage image  [TYPE]  Graphics2D g2 
[REPLACE]^AffineTransform saved = g2 .setTransform ( saved )  ;^252^^^^^224^265^[REPLACE] AffineTransform saved = g2.getTransform (  ) ;^[METHOD] writeScaledChartAsPNG [TYPE] void [PARAMETER] OutputStream out JFreeChart chart int width int height int widthScaleFactor int heightScaleFactor [CLASS] ChartUtilities   [TYPE]  boolean false  scale  true  [TYPE]  double defaultHeight  defaultWidth  desiredHeight  desiredWidth  scaleX  scaleY  [TYPE]  OutputStream out  [TYPE]  AffineTransform saved  [TYPE]  JFreeChart chart  [TYPE]  int height  heightScaleFactor  width  widthScaleFactor  [TYPE]  BufferedImage image  [TYPE]  Graphics2D g2 
[REPLACE]^EncoderUtil.writeBufferedImage ( image, ImageFormat.JPEG, out ) ;^263^^^^^224^265^[REPLACE] out.write ( encodeAsPNG ( image )  ) ;^[METHOD] writeScaledChartAsPNG [TYPE] void [PARAMETER] OutputStream out JFreeChart chart int width int height int widthScaleFactor int heightScaleFactor [CLASS] ChartUtilities   [TYPE]  boolean false  scale  true  [TYPE]  double defaultHeight  defaultWidth  desiredHeight  desiredWidth  scaleX  scaleY  [TYPE]  OutputStream out  [TYPE]  AffineTransform saved  [TYPE]  JFreeChart chart  [TYPE]  int height  heightScaleFactor  width  widthScaleFactor  [TYPE]  BufferedImage image  [TYPE]  Graphics2D g2 
[ADD]^^263^^^^^224^265^[ADD] out.write ( encodeAsPNG ( image )  ) ;^[METHOD] writeScaledChartAsPNG [TYPE] void [PARAMETER] OutputStream out JFreeChart chart int width int height int widthScaleFactor int heightScaleFactor [CLASS] ChartUtilities   [TYPE]  boolean false  scale  true  [TYPE]  double defaultHeight  defaultWidth  desiredHeight  desiredWidth  scaleX  scaleY  [TYPE]  OutputStream out  [TYPE]  AffineTransform saved  [TYPE]  JFreeChart chart  [TYPE]  int height  heightScaleFactor  width  widthScaleFactor  [TYPE]  BufferedImage image  [TYPE]  Graphics2D g2 
[REPLACE]^saveChartAsPNG ( file, chart, height, height, true ) ;^281^^^^^277^283^[REPLACE] saveChartAsPNG ( file, chart, width, height, null ) ;^[METHOD] saveChartAsPNG [TYPE] void [PARAMETER] File file JFreeChart chart int width int height [CLASS] ChartUtilities   [TYPE]  boolean false  true  [TYPE]  File file  [TYPE]  JFreeChart chart  [TYPE]  int height  width 
[REPLACE]^if  ( file != null )  {^303^^^^^299^313^[REPLACE] if  ( file == null )  {^[METHOD] saveChartAsPNG [TYPE] void [PARAMETER] File file JFreeChart chart int width int height ChartRenderingInfo info [CLASS] ChartUtilities   [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  ChartRenderingInfo info  [TYPE]  File file  [TYPE]  JFreeChart chart  [TYPE]  int height  width 
[REPLACE]^return ;^304^^^^^299^313^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] saveChartAsPNG [TYPE] void [PARAMETER] File file JFreeChart chart int width int height ChartRenderingInfo info [CLASS] ChartUtilities   [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  ChartRenderingInfo info  [TYPE]  File file  [TYPE]  JFreeChart chart  [TYPE]  int height  width 
[ADD]^^304^^^^^299^313^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] saveChartAsPNG [TYPE] void [PARAMETER] File file JFreeChart chart int width int height ChartRenderingInfo info [CLASS] ChartUtilities   [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  ChartRenderingInfo info  [TYPE]  File file  [TYPE]  JFreeChart chart  [TYPE]  int height  width 
[REPLACE]^ToolTipTagFragmentGenerator toolTipTagFragmentGenerator = null;^306^^^^^299^313^[REPLACE] OutputStream out = new BufferedOutputStream ( new FileOutputStream ( file )  ) ;^[METHOD] saveChartAsPNG [TYPE] void [PARAMETER] File file JFreeChart chart int width int height ChartRenderingInfo info [CLASS] ChartUtilities   [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  ChartRenderingInfo info  [TYPE]  File file  [TYPE]  JFreeChart chart  [TYPE]  int height  width 
[ADD]^ChartUtilities.writeChartAsPNG ( out, chart, width, height, info ) ;^307^308^309^^^299^313^[ADD] try { ChartUtilities.writeChartAsPNG ( out, chart, width, height, info ) ; }^[METHOD] saveChartAsPNG [TYPE] void [PARAMETER] File file JFreeChart chart int width int height ChartRenderingInfo info [CLASS] ChartUtilities   [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  ChartRenderingInfo info  [TYPE]  File file  [TYPE]  JFreeChart chart  [TYPE]  int height  width 
[REPLACE]^ChartUtilities.writeChartAsJPEG ( out, chart, width, height, info ) ;^308^^^^^299^313^[REPLACE] ChartUtilities.writeChartAsPNG ( out, chart, width, height, info ) ;^[METHOD] saveChartAsPNG [TYPE] void [PARAMETER] File file JFreeChart chart int width int height ChartRenderingInfo info [CLASS] ChartUtilities   [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  ChartRenderingInfo info  [TYPE]  File file  [TYPE]  JFreeChart chart  [TYPE]  int height  width 
[ADD]^^308^^^^^299^313^[ADD] ChartUtilities.writeChartAsPNG ( out, chart, width, height, info ) ;^[METHOD] saveChartAsPNG [TYPE] void [PARAMETER] File file JFreeChart chart int width int height ChartRenderingInfo info [CLASS] ChartUtilities   [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  ChartRenderingInfo info  [TYPE]  File file  [TYPE]  JFreeChart chart  [TYPE]  int height  width 
[REPLACE]^if  ( file != null )  {^335^^^^^331^351^[REPLACE] if  ( file == null )  {^[METHOD] saveChartAsPNG [TYPE] void [PARAMETER] File file JFreeChart chart int width int height ChartRenderingInfo info boolean encodeAlpha int compression [CLASS] ChartUtilities   [TYPE]  boolean encodeAlpha  false  true  [TYPE]  OutputStream out  [TYPE]  ChartRenderingInfo info  [TYPE]  File file  [TYPE]  JFreeChart chart  [TYPE]  int compression  height  width 
[REPLACE]^return ;^336^^^^^331^351^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] saveChartAsPNG [TYPE] void [PARAMETER] File file JFreeChart chart int width int height ChartRenderingInfo info boolean encodeAlpha int compression [CLASS] ChartUtilities   [TYPE]  boolean encodeAlpha  false  true  [TYPE]  OutputStream out  [TYPE]  ChartRenderingInfo info  [TYPE]  File file  [TYPE]  JFreeChart chart  [TYPE]  int compression  height  width 
[ADD]^^336^^^^^331^351^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] saveChartAsPNG [TYPE] void [PARAMETER] File file JFreeChart chart int width int height ChartRenderingInfo info boolean encodeAlpha int compression [CLASS] ChartUtilities   [TYPE]  boolean encodeAlpha  false  true  [TYPE]  OutputStream out  [TYPE]  ChartRenderingInfo info  [TYPE]  File file  [TYPE]  JFreeChart chart  [TYPE]  int compression  height  width 
[REPLACE]^if  ( chart != null )  {^338^^^^^331^351^[REPLACE] if  ( chart == null )  {^[METHOD] saveChartAsPNG [TYPE] void [PARAMETER] File file JFreeChart chart int width int height ChartRenderingInfo info boolean encodeAlpha int compression [CLASS] ChartUtilities   [TYPE]  boolean encodeAlpha  false  true  [TYPE]  OutputStream out  [TYPE]  ChartRenderingInfo info  [TYPE]  File file  [TYPE]  JFreeChart chart  [TYPE]  int compression  height  width 
[REPLACE]^return ;^339^^^^^331^351^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] saveChartAsPNG [TYPE] void [PARAMETER] File file JFreeChart chart int width int height ChartRenderingInfo info boolean encodeAlpha int compression [CLASS] ChartUtilities   [TYPE]  boolean encodeAlpha  false  true  [TYPE]  OutputStream out  [TYPE]  ChartRenderingInfo info  [TYPE]  File file  [TYPE]  JFreeChart chart  [TYPE]  int compression  height  width 
[ADD]^^339^^^^^331^351^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] saveChartAsPNG [TYPE] void [PARAMETER] File file JFreeChart chart int width int height ChartRenderingInfo info boolean encodeAlpha int compression [CLASS] ChartUtilities   [TYPE]  boolean encodeAlpha  false  true  [TYPE]  OutputStream out  [TYPE]  ChartRenderingInfo info  [TYPE]  File file  [TYPE]  JFreeChart chart  [TYPE]  int compression  height  width 
[REPLACE]^ToolTipTagFragmentGenerator toolTipTagFragmentGenerator = null;^342^^^^^331^351^[REPLACE] OutputStream out = new BufferedOutputStream ( new FileOutputStream ( file )  ) ;^[METHOD] saveChartAsPNG [TYPE] void [PARAMETER] File file JFreeChart chart int width int height ChartRenderingInfo info boolean encodeAlpha int compression [CLASS] ChartUtilities   [TYPE]  boolean encodeAlpha  false  true  [TYPE]  OutputStream out  [TYPE]  ChartRenderingInfo info  [TYPE]  File file  [TYPE]  JFreeChart chart  [TYPE]  int compression  height  width 
[ADD]^^342^^^^^331^351^[ADD] OutputStream out = new BufferedOutputStream ( new FileOutputStream ( file )  ) ;^[METHOD] saveChartAsPNG [TYPE] void [PARAMETER] File file JFreeChart chart int width int height ChartRenderingInfo info boolean encodeAlpha int compression [CLASS] ChartUtilities   [TYPE]  boolean encodeAlpha  false  true  [TYPE]  OutputStream out  [TYPE]  ChartRenderingInfo info  [TYPE]  File file  [TYPE]  JFreeChart chart  [TYPE]  int compression  height  width 
[ADD]^compression ) ;^343^344^345^346^^331^351^[ADD] try { writeChartAsPNG ( out, chart, width, height, info, encodeAlpha, compression ) ; }^[METHOD] saveChartAsPNG [TYPE] void [PARAMETER] File file JFreeChart chart int width int height ChartRenderingInfo info boolean encodeAlpha int compression [CLASS] ChartUtilities   [TYPE]  boolean encodeAlpha  false  true  [TYPE]  OutputStream out  [TYPE]  ChartRenderingInfo info  [TYPE]  File file  [TYPE]  JFreeChart chart  [TYPE]  int compression  height  width 
[REPLACE]^writeChartAsPNG ( out, chart, width, height, info, true, compression ) ;^344^345^^^^331^351^[REPLACE] writeChartAsPNG ( out, chart, width, height, info, encodeAlpha, compression ) ;^[METHOD] saveChartAsPNG [TYPE] void [PARAMETER] File file JFreeChart chart int width int height ChartRenderingInfo info boolean encodeAlpha int compression [CLASS] ChartUtilities   [TYPE]  boolean encodeAlpha  false  true  [TYPE]  OutputStream out  [TYPE]  ChartRenderingInfo info  [TYPE]  File file  [TYPE]  JFreeChart chart  [TYPE]  int compression  height  width 
[REPLACE]^writeChartAsJPEG ( out, chart, width, height, this ) ;^368^^^^^364^370^[REPLACE] writeChartAsJPEG ( out, chart, width, height, null ) ;^[METHOD] writeChartAsJPEG [TYPE] void [PARAMETER] OutputStream out JFreeChart chart int width int height [CLASS] ChartUtilities   [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  JFreeChart chart  [TYPE]  int height  width 
[REPLACE]^ChartUtilities.writeChartAsJPEG ( out, quality, chart, width, height, this ) ;^388^389^^^^384^391^[REPLACE] ChartUtilities.writeChartAsJPEG ( out, quality, chart, width, height, null ) ;^[METHOD] writeChartAsJPEG [TYPE] void [PARAMETER] OutputStream out float quality JFreeChart chart int width int height [CLASS] ChartUtilities   [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  float quality  [TYPE]  JFreeChart chart  [TYPE]  int height  width 
[ADD]^^388^389^^^^384^391^[ADD] ChartUtilities.writeChartAsJPEG ( out, quality, chart, width, height, null ) ;^[METHOD] writeChartAsJPEG [TYPE] void [PARAMETER] OutputStream out float quality JFreeChart chart int width int height [CLASS] ChartUtilities   [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  float quality  [TYPE]  JFreeChart chart  [TYPE]  int height  width 
[REPLACE]^if  ( chart != this  )  {^411^^^^^407^417^[REPLACE] if  ( chart == null )  {^[METHOD] writeChartAsJPEG [TYPE] void [PARAMETER] OutputStream out JFreeChart chart int width int height ChartRenderingInfo info [CLASS] ChartUtilities   [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  ChartRenderingInfo info  [TYPE]  JFreeChart chart  [TYPE]  int height  width  [TYPE]  BufferedImage image 
[REPLACE]^return ;^412^^^^^407^417^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] writeChartAsJPEG [TYPE] void [PARAMETER] OutputStream out JFreeChart chart int width int height ChartRenderingInfo info [CLASS] ChartUtilities   [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  ChartRenderingInfo info  [TYPE]  JFreeChart chart  [TYPE]  int height  width  [TYPE]  BufferedImage image 
[REPLACE]^BufferedImage bufferedImage = chart.createBufferedImage ( width, height, info ) ;^414^^^^^407^417^[REPLACE] BufferedImage image = chart.createBufferedImage ( width, height, info ) ;^[METHOD] writeChartAsJPEG [TYPE] void [PARAMETER] OutputStream out JFreeChart chart int width int height ChartRenderingInfo info [CLASS] ChartUtilities   [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  ChartRenderingInfo info  [TYPE]  JFreeChart chart  [TYPE]  int height  width  [TYPE]  BufferedImage image 
[REPLACE]^EncoderUtil.writeBufferedImage ( bufferedImage, ImageFormat.PNG, out ) ;^415^^^^^407^417^[REPLACE] EncoderUtil.writeBufferedImage ( image, ImageFormat.JPEG, out ) ;^[METHOD] writeChartAsJPEG [TYPE] void [PARAMETER] OutputStream out JFreeChart chart int width int height ChartRenderingInfo info [CLASS] ChartUtilities   [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  ChartRenderingInfo info  [TYPE]  JFreeChart chart  [TYPE]  int height  width  [TYPE]  BufferedImage image 
[ADD]^^415^^^^^407^417^[ADD] EncoderUtil.writeBufferedImage ( image, ImageFormat.JPEG, out ) ;^[METHOD] writeChartAsJPEG [TYPE] void [PARAMETER] OutputStream out JFreeChart chart int width int height ChartRenderingInfo info [CLASS] ChartUtilities   [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  ChartRenderingInfo info  [TYPE]  JFreeChart chart  [TYPE]  int height  width  [TYPE]  BufferedImage image 
[REPLACE]^if  ( chart != null )  {^438^^^^^434^444^[REPLACE] if  ( chart == null )  {^[METHOD] writeChartAsJPEG [TYPE] void [PARAMETER] OutputStream out float quality JFreeChart chart int width int height ChartRenderingInfo info [CLASS] ChartUtilities   [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  ChartRenderingInfo info  [TYPE]  float quality  [TYPE]  JFreeChart chart  [TYPE]  int height  width  [TYPE]  BufferedImage image 
[REPLACE]^return ;^439^^^^^434^444^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] writeChartAsJPEG [TYPE] void [PARAMETER] OutputStream out float quality JFreeChart chart int width int height ChartRenderingInfo info [CLASS] ChartUtilities   [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  ChartRenderingInfo info  [TYPE]  float quality  [TYPE]  JFreeChart chart  [TYPE]  int height  width  [TYPE]  BufferedImage image 
[ADD]^^439^^^^^434^444^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] writeChartAsJPEG [TYPE] void [PARAMETER] OutputStream out float quality JFreeChart chart int width int height ChartRenderingInfo info [CLASS] ChartUtilities   [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  ChartRenderingInfo info  [TYPE]  float quality  [TYPE]  JFreeChart chart  [TYPE]  int height  width  [TYPE]  BufferedImage image 
[REPLACE]^BufferedImage bufferedImage = chart.createBufferedImage ( width, height, info ) ;^441^^^^^434^444^[REPLACE] BufferedImage image = chart.createBufferedImage ( width, height, info ) ;^[METHOD] writeChartAsJPEG [TYPE] void [PARAMETER] OutputStream out float quality JFreeChart chart int width int height ChartRenderingInfo info [CLASS] ChartUtilities   [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  ChartRenderingInfo info  [TYPE]  float quality  [TYPE]  JFreeChart chart  [TYPE]  int height  width  [TYPE]  BufferedImage image 
[REPLACE]^EncoderUtil.writeBufferedImage ( image, ImageFormat.JPEG, out ) ;^442^^^^^434^444^[REPLACE] EncoderUtil.writeBufferedImage ( image, ImageFormat.JPEG, out, quality ) ;^[METHOD] writeChartAsJPEG [TYPE] void [PARAMETER] OutputStream out float quality JFreeChart chart int width int height ChartRenderingInfo info [CLASS] ChartUtilities   [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  ChartRenderingInfo info  [TYPE]  float quality  [TYPE]  JFreeChart chart  [TYPE]  int height  width  [TYPE]  BufferedImage image 
[REPLACE]^saveChartAsJPEG ( file, chart, width, height, this ) ;^460^^^^^456^462^[REPLACE] saveChartAsJPEG ( file, chart, width, height, null ) ;^[METHOD] saveChartAsJPEG [TYPE] void [PARAMETER] File file JFreeChart chart int width int height [CLASS] ChartUtilities   [TYPE]  boolean false  true  [TYPE]  File file  [TYPE]  JFreeChart chart  [TYPE]  int height  width 
[REMOVE]^ChartUtilities.writeChartAsPNG ( out, chart, width, height, null, encodeAlpha, compression ) ;^460^^^^^456^462^[REMOVE] ^[METHOD] saveChartAsJPEG [TYPE] void [PARAMETER] File file JFreeChart chart int width int height [CLASS] ChartUtilities   [TYPE]  boolean false  true  [TYPE]  File file  [TYPE]  JFreeChart chart  [TYPE]  int height  width 
[REPLACE]^saveChartAsJPEG ( file, quality, chart, width, height, this ) ;^479^^^^^475^481^[REPLACE] saveChartAsJPEG ( file, quality, chart, width, height, null ) ;^[METHOD] saveChartAsJPEG [TYPE] void [PARAMETER] File file float quality JFreeChart chart int width int height [CLASS] ChartUtilities   [TYPE]  boolean false  true  [TYPE]  float quality  [TYPE]  File file  [TYPE]  JFreeChart chart  [TYPE]  int height  width 
[REPLACE]^if  ( file != false )  {^500^^^^^497^514^[REPLACE] if  ( file == null )  {^[METHOD] saveChartAsJPEG [TYPE] void [PARAMETER] File file JFreeChart chart int width int height ChartRenderingInfo info [CLASS] ChartUtilities   [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  ChartRenderingInfo info  [TYPE]  File file  [TYPE]  JFreeChart chart  [TYPE]  int height  width 
[ADD]^^500^501^502^^^497^514^[ADD] if  ( file == null )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] saveChartAsJPEG [TYPE] void [PARAMETER] File file JFreeChart chart int width int height ChartRenderingInfo info [CLASS] ChartUtilities   [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  ChartRenderingInfo info  [TYPE]  File file  [TYPE]  JFreeChart chart  [TYPE]  int height  width 
[REPLACE]^return ;^501^^^^^497^514^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] saveChartAsJPEG [TYPE] void [PARAMETER] File file JFreeChart chart int width int height ChartRenderingInfo info [CLASS] ChartUtilities   [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  ChartRenderingInfo info  [TYPE]  File file  [TYPE]  JFreeChart chart  [TYPE]  int height  width 
[ADD]^^501^^^^^497^514^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] saveChartAsJPEG [TYPE] void [PARAMETER] File file JFreeChart chart int width int height ChartRenderingInfo info [CLASS] ChartUtilities   [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  ChartRenderingInfo info  [TYPE]  File file  [TYPE]  JFreeChart chart  [TYPE]  int height  width 
[REPLACE]^if  ( chart != null )  {^503^^^^^497^514^[REPLACE] if  ( chart == null )  {^[METHOD] saveChartAsJPEG [TYPE] void [PARAMETER] File file JFreeChart chart int width int height ChartRenderingInfo info [CLASS] ChartUtilities   [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  ChartRenderingInfo info  [TYPE]  File file  [TYPE]  JFreeChart chart  [TYPE]  int height  width 
[ADD]^^503^504^505^^^497^514^[ADD] if  ( chart == null )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] saveChartAsJPEG [TYPE] void [PARAMETER] File file JFreeChart chart int width int height ChartRenderingInfo info [CLASS] ChartUtilities   [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  ChartRenderingInfo info  [TYPE]  File file  [TYPE]  JFreeChart chart  [TYPE]  int height  width 
[REPLACE]^return ;^504^^^^^497^514^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] saveChartAsJPEG [TYPE] void [PARAMETER] File file JFreeChart chart int width int height ChartRenderingInfo info [CLASS] ChartUtilities   [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  ChartRenderingInfo info  [TYPE]  File file  [TYPE]  JFreeChart chart  [TYPE]  int height  width 
[ADD]^^504^^^^^497^514^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] saveChartAsJPEG [TYPE] void [PARAMETER] File file JFreeChart chart int width int height ChartRenderingInfo info [CLASS] ChartUtilities   [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  ChartRenderingInfo info  [TYPE]  File file  [TYPE]  JFreeChart chart  [TYPE]  int height  width 
[REPLACE]^ToolTipTagFragmentGenerator toolTipTagFragmentGenerator = null;^506^^^^^497^514^[REPLACE] OutputStream out = new BufferedOutputStream ( new FileOutputStream ( file )  ) ;^[METHOD] saveChartAsJPEG [TYPE] void [PARAMETER] File file JFreeChart chart int width int height ChartRenderingInfo info [CLASS] ChartUtilities   [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  ChartRenderingInfo info  [TYPE]  File file  [TYPE]  JFreeChart chart  [TYPE]  int height  width 
[ADD]^writeChartAsJPEG ( out, chart, width, height, info ) ;^507^508^509^^^497^514^[ADD] try { writeChartAsJPEG ( out, chart, width, height, info ) ; }^[METHOD] saveChartAsJPEG [TYPE] void [PARAMETER] File file JFreeChart chart int width int height ChartRenderingInfo info [CLASS] ChartUtilities   [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  ChartRenderingInfo info  [TYPE]  File file  [TYPE]  JFreeChart chart  [TYPE]  int height  width 
[REPLACE]^writeChartAsJPEG ( out, chart, width, height, null ) ;^508^^^^^497^514^[REPLACE] writeChartAsJPEG ( out, chart, width, height, info ) ;^[METHOD] saveChartAsJPEG [TYPE] void [PARAMETER] File file JFreeChart chart int width int height ChartRenderingInfo info [CLASS] ChartUtilities   [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  ChartRenderingInfo info  [TYPE]  File file  [TYPE]  JFreeChart chart  [TYPE]  int height  width 
[REPLACE]^if  ( file != null )  {^535^^^^^531^551^[REPLACE] if  ( file == null )  {^[METHOD] saveChartAsJPEG [TYPE] void [PARAMETER] File file float quality JFreeChart chart int width int height ChartRenderingInfo info [CLASS] ChartUtilities   [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  ChartRenderingInfo info  [TYPE]  float quality  [TYPE]  File file  [TYPE]  JFreeChart chart  [TYPE]  int height  width 
[ADD]^^535^536^537^^^531^551^[ADD] if  ( file == null )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] saveChartAsJPEG [TYPE] void [PARAMETER] File file float quality JFreeChart chart int width int height ChartRenderingInfo info [CLASS] ChartUtilities   [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  ChartRenderingInfo info  [TYPE]  float quality  [TYPE]  File file  [TYPE]  JFreeChart chart  [TYPE]  int height  width 
[REPLACE]^return ;^536^^^^^531^551^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] saveChartAsJPEG [TYPE] void [PARAMETER] File file float quality JFreeChart chart int width int height ChartRenderingInfo info [CLASS] ChartUtilities   [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  ChartRenderingInfo info  [TYPE]  float quality  [TYPE]  File file  [TYPE]  JFreeChart chart  [TYPE]  int height  width 
[REPLACE]^if  ( chart != null )  {^538^^^^^531^551^[REPLACE] if  ( chart == null )  {^[METHOD] saveChartAsJPEG [TYPE] void [PARAMETER] File file float quality JFreeChart chart int width int height ChartRenderingInfo info [CLASS] ChartUtilities   [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  ChartRenderingInfo info  [TYPE]  float quality  [TYPE]  File file  [TYPE]  JFreeChart chart  [TYPE]  int height  width 
[REPLACE]^return ;^539^^^^^531^551^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] saveChartAsJPEG [TYPE] void [PARAMETER] File file float quality JFreeChart chart int width int height ChartRenderingInfo info [CLASS] ChartUtilities   [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  ChartRenderingInfo info  [TYPE]  float quality  [TYPE]  File file  [TYPE]  JFreeChart chart  [TYPE]  int height  width 
[ADD]^^539^^^^^531^551^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] saveChartAsJPEG [TYPE] void [PARAMETER] File file float quality JFreeChart chart int width int height ChartRenderingInfo info [CLASS] ChartUtilities   [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  ChartRenderingInfo info  [TYPE]  float quality  [TYPE]  File file  [TYPE]  JFreeChart chart  [TYPE]  int height  width 
[ADD]^writeChartAsJPEG ( out, quality, chart, width, height, info ) ;^544^545^546^^^531^551^[ADD] try { writeChartAsJPEG ( out, quality, chart, width, height, info ) ; }^[METHOD] saveChartAsJPEG [TYPE] void [PARAMETER] File file float quality JFreeChart chart int width int height ChartRenderingInfo info [CLASS] ChartUtilities   [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  ChartRenderingInfo info  [TYPE]  float quality  [TYPE]  File file  [TYPE]  JFreeChart chart  [TYPE]  int height  width 
[REPLACE]^writeChartAsJPEG ( out, chart, width, height, info ) ;^545^^^^^531^551^[REPLACE] writeChartAsJPEG ( out, quality, chart, width, height, info ) ;^[METHOD] saveChartAsJPEG [TYPE] void [PARAMETER] File file float quality JFreeChart chart int width int height ChartRenderingInfo info [CLASS] ChartUtilities   [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  ChartRenderingInfo info  [TYPE]  float quality  [TYPE]  File file  [TYPE]  JFreeChart chart  [TYPE]  int height  width 
[REPLACE]^ChartUtilities.writeBufferedImageAsPNG ( out, chartImage, encodeAlpha, compression ) ;^565^^^^^561^567^[REPLACE] writeBufferedImageAsJPEG ( out, 0.75f, image ) ;^[METHOD] writeBufferedImageAsJPEG [TYPE] void [PARAMETER] OutputStream out BufferedImage image [CLASS] ChartUtilities   [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  BufferedImage image 
[ADD]^^565^^^^^561^567^[ADD] writeBufferedImageAsJPEG ( out, 0.75f, image ) ;^[METHOD] writeBufferedImageAsJPEG [TYPE] void [PARAMETER] OutputStream out BufferedImage image [CLASS] ChartUtilities   [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  BufferedImage image 
[REPLACE]^EncoderUtil.writeBufferedImage ( image, ImageFormat.JPEG, out ) ;^581^^^^^578^583^[REPLACE] EncoderUtil.writeBufferedImage ( image, ImageFormat.JPEG, out, quality ) ;^[METHOD] writeBufferedImageAsJPEG [TYPE] void [PARAMETER] OutputStream out float quality BufferedImage image [CLASS] ChartUtilities   [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  float quality  [TYPE]  BufferedImage image 
[ADD]^^581^^^^^578^583^[ADD] EncoderUtil.writeBufferedImage ( image, ImageFormat.JPEG, out, quality ) ;^[METHOD] writeBufferedImageAsJPEG [TYPE] void [PARAMETER] OutputStream out float quality BufferedImage image [CLASS] ChartUtilities   [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  float quality  [TYPE]  BufferedImage image 
[REPLACE]^EncoderUtil.writeBufferedImage ( bufferedImage, ImageFormat.PNG, out ) ;^596^^^^^593^598^[REPLACE] EncoderUtil.writeBufferedImage ( image, ImageFormat.PNG, out ) ;^[METHOD] writeBufferedImageAsPNG [TYPE] void [PARAMETER] OutputStream out BufferedImage image [CLASS] ChartUtilities   [TYPE]  boolean false  true  [TYPE]  OutputStream out  [TYPE]  BufferedImage image 
[REPLACE]^EncoderUtil.writeBufferedImage ( image, ImageFormat.PNG, out, compression, true ) ;^614^615^^^^610^616^[REPLACE] EncoderUtil.writeBufferedImage ( image, ImageFormat.PNG, out, compression, encodeAlpha ) ;^[METHOD] writeBufferedImageAsPNG [TYPE] void [PARAMETER] OutputStream out BufferedImage image boolean encodeAlpha int compression [CLASS] ChartUtilities   [TYPE]  boolean encodeAlpha  false  true  [TYPE]  OutputStream out  [TYPE]  BufferedImage image  [TYPE]  int compression 
[REPLACE]^return EncoderUtil .encode ( image )  ;^628^^^^^627^629^[REPLACE] return EncoderUtil.encode ( image, ImageFormat.PNG ) ;^[METHOD] encodeAsPNG [TYPE] byte[] [PARAMETER] BufferedImage image [CLASS] ChartUtilities   [TYPE]  boolean false  true  [TYPE]  BufferedImage image 
[REPLACE]^return EncoderUtil.writeBufferedImage ( image, ImageFormat.PNG, compression, encodeAlpha ) ;^645^646^^^^642^647^[REPLACE] return EncoderUtil.encode ( image, ImageFormat.PNG, compression, encodeAlpha ) ;^[METHOD] encodeAsPNG [TYPE] byte[] [PARAMETER] BufferedImage image boolean encodeAlpha int compression [CLASS] ChartUtilities   [TYPE]  boolean encodeAlpha  false  true  [TYPE]  BufferedImage image  [TYPE]  int compression 
[REPLACE]^ToolTipTagFragmentGenerator toolTipTagFragmentGenerator = this;^666^^^^^660^679^[REPLACE] ToolTipTagFragmentGenerator toolTipTagFragmentGenerator = null;^[METHOD] writeImageMap [TYPE] void [PARAMETER] PrintWriter writer String name ChartRenderingInfo info boolean useOverLibForToolTips [CLASS] ChartUtilities   [TYPE]  boolean false  true  useOverLibForToolTips  [TYPE]  ChartRenderingInfo info  [TYPE]  ToolTipTagFragmentGenerator toolTipTagFragmentGenerator  [TYPE]  String name  [TYPE]  PrintWriter writer 
[ADD]^^666^^^^^660^679^[ADD] ToolTipTagFragmentGenerator toolTipTagFragmentGenerator = null;^[METHOD] writeImageMap [TYPE] void [PARAMETER] PrintWriter writer String name ChartRenderingInfo info boolean useOverLibForToolTips [CLASS] ChartUtilities   [TYPE]  boolean false  true  useOverLibForToolTips  [TYPE]  ChartRenderingInfo info  [TYPE]  ToolTipTagFragmentGenerator toolTipTagFragmentGenerator  [TYPE]  String name  [TYPE]  PrintWriter writer 
[REPLACE]^if  ( true )  {^667^^^^^660^679^[REPLACE] if  ( useOverLibForToolTips )  {^[METHOD] writeImageMap [TYPE] void [PARAMETER] PrintWriter writer String name ChartRenderingInfo info boolean useOverLibForToolTips [CLASS] ChartUtilities   [TYPE]  boolean false  true  useOverLibForToolTips  [TYPE]  ChartRenderingInfo info  [TYPE]  ToolTipTagFragmentGenerator toolTipTagFragmentGenerator  [TYPE]  String name  [TYPE]  PrintWriter writer 
[REPLACE]^toolTipTagFragmentGenerator =  new StandardURLTagFragmentGenerator (  )  ;^672^673^^^^660^679^[REPLACE] toolTipTagFragmentGenerator = new StandardToolTipTagFragmentGenerator (  ) ;^[METHOD] writeImageMap [TYPE] void [PARAMETER] PrintWriter writer String name ChartRenderingInfo info boolean useOverLibForToolTips [CLASS] ChartUtilities   [TYPE]  boolean false  true  useOverLibForToolTips  [TYPE]  ChartRenderingInfo info  [TYPE]  ToolTipTagFragmentGenerator toolTipTagFragmentGenerator  [TYPE]  String name  [TYPE]  PrintWriter writer 
[ADD]^^672^673^^^^660^679^[ADD] toolTipTagFragmentGenerator = new StandardToolTipTagFragmentGenerator (  ) ;^[METHOD] writeImageMap [TYPE] void [PARAMETER] PrintWriter writer String name ChartRenderingInfo info boolean useOverLibForToolTips [CLASS] ChartUtilities   [TYPE]  boolean false  true  useOverLibForToolTips  [TYPE]  ChartRenderingInfo info  [TYPE]  ToolTipTagFragmentGenerator toolTipTagFragmentGenerator  [TYPE]  String name  [TYPE]  PrintWriter writer 
[REPLACE]^toolTipTagFragmentGenerator =  new StandardToolTipTagFragmentGenerator (  )  ;^668^669^^^^660^679^[REPLACE] toolTipTagFragmentGenerator = new OverLIBToolTipTagFragmentGenerator (  ) ;^[METHOD] writeImageMap [TYPE] void [PARAMETER] PrintWriter writer String name ChartRenderingInfo info boolean useOverLibForToolTips [CLASS] ChartUtilities   [TYPE]  boolean false  true  useOverLibForToolTips  [TYPE]  ChartRenderingInfo info  [TYPE]  ToolTipTagFragmentGenerator toolTipTagFragmentGenerator  [TYPE]  String name  [TYPE]  PrintWriter writer 
[ADD]^^668^669^^^^660^679^[ADD] toolTipTagFragmentGenerator = new OverLIBToolTipTagFragmentGenerator (  ) ;^[METHOD] writeImageMap [TYPE] void [PARAMETER] PrintWriter writer String name ChartRenderingInfo info boolean useOverLibForToolTips [CLASS] ChartUtilities   [TYPE]  boolean false  true  useOverLibForToolTips  [TYPE]  ChartRenderingInfo info  [TYPE]  ToolTipTagFragmentGenerator toolTipTagFragmentGenerator  [TYPE]  String name  [TYPE]  PrintWriter writer 
[REPLACE]^writer.println ( ImageMapUtilities .getImageMap ( name , info )   ) ;^702^703^^^^696^704^[REPLACE] writer.println ( ImageMapUtilities.getImageMap ( name, info, toolTipTagFragmentGenerator, urlTagFragmentGenerator )  ) ;^[METHOD] writeImageMap [TYPE] void [PARAMETER] PrintWriter writer String name ChartRenderingInfo info ToolTipTagFragmentGenerator toolTipTagFragmentGenerator URLTagFragmentGenerator urlTagFragmentGenerator [CLASS] ChartUtilities   [TYPE]  boolean false  true  [TYPE]  ChartRenderingInfo info  [TYPE]  ToolTipTagFragmentGenerator toolTipTagFragmentGenerator  [TYPE]  URLTagFragmentGenerator urlTagFragmentGenerator  [TYPE]  String name  [TYPE]  PrintWriter writer 
[REPLACE]^return ImageMapUtilities.getImageMap ( name, info,  new StandardURLTagFragmentGenerator (  )  , new StandardURLTagFragmentGenerator (  )  ) ;^718^719^720^^^717^721^[REPLACE] return ImageMapUtilities.getImageMap ( name, info, new StandardToolTipTagFragmentGenerator (  ) , new StandardURLTagFragmentGenerator (  )  ) ;^[METHOD] getImageMap [TYPE] String [PARAMETER] String name ChartRenderingInfo info [CLASS] ChartUtilities   [TYPE]  boolean false  true  [TYPE]  ChartRenderingInfo info  [TYPE]  String name 
[REPLACE]^return ImageMapUtilities .getImageMap ( name , info )  ;^743^744^^^^739^746^[REPLACE] return ImageMapUtilities.getImageMap ( name, info, toolTipTagFragmentGenerator, urlTagFragmentGenerator ) ;^[METHOD] getImageMap [TYPE] String [PARAMETER] String name ChartRenderingInfo info ToolTipTagFragmentGenerator toolTipTagFragmentGenerator URLTagFragmentGenerator urlTagFragmentGenerator [CLASS] ChartUtilities   [TYPE]  boolean false  true  [TYPE]  ChartRenderingInfo info  [TYPE]  ToolTipTagFragmentGenerator toolTipTagFragmentGenerator  [TYPE]  URLTagFragmentGenerator urlTagFragmentGenerator  [TYPE]  String name 
