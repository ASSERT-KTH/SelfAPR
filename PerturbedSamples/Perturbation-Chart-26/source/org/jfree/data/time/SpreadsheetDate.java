[REPLACE]^private static final long serialVersionUID = -2039586705374454461;^85^^^^^^^[REPLACE] private static final long serialVersionUID = -2039586705374454461L;^ [CLASS] SpreadsheetDate  
[REPLACE]^private final  long  day;^94^^^^^^^[REPLACE] private final int day;^ [CLASS] SpreadsheetDate  
[REPLACE]^private final  long  year;^100^^^^^^^[REPLACE] private final int year;^ [CLASS] SpreadsheetDate  
[REPLACE]^if  (   ( year <= 9999 )  )  {^111^^^^^109^140^[REPLACE] if  (  ( year >= 1900 )  &&  ( year <= 9999 )  )  {^[METHOD] <init> [TYPE] SpreadsheetDate(int,int,int) [PARAMETER] final int day final int month final int year [CLASS] SpreadsheetDate   [TYPE]  long serialVersionUID  [TYPE]  int day  month  serial  year  [TYPE]  boolean false  true 
[REMOVE]^if  (  ( month >=  ( MonthConstants.JANUARY )  )  &&  ( month <=  ( MonthConstants.DECEMBER )  )  )  {     this.month = month; }else {     throw new IllegalArgumentException ( "The 'month' argument must be in the range 1 to 12." ) ; }^111^^^^^109^140^[REMOVE] ^[METHOD] <init> [TYPE] SpreadsheetDate(int,int,int) [PARAMETER] final int day final int month final int year [CLASS] SpreadsheetDate   [TYPE]  long serialVersionUID  [TYPE]  int day  month  serial  year  [TYPE]  boolean false  true 
[REPLACE]^throw new IllegalArgumentException ( "SpreadsheetDate: Serial must be in range 2 to 2958465." ) ; ;^115^116^117^^^111^118^[REPLACE] throw new IllegalArgumentException ( "The 'year' argument must be in range 1900 to 9999." ) ;^[METHOD] <init> [TYPE] SpreadsheetDate(int,int,int) [PARAMETER] final int day final int month final int year [CLASS] SpreadsheetDate   [TYPE]  long serialVersionUID  [TYPE]  int day  month  serial  year  [TYPE]  boolean false  true 
[REPLACE]^this.year =  serial;^112^^^^^109^140^[REPLACE] this.year = year;^[METHOD] <init> [TYPE] SpreadsheetDate(int,int,int) [PARAMETER] final int day final int month final int year [CLASS] SpreadsheetDate   [TYPE]  long serialVersionUID  [TYPE]  int day  month  serial  year  [TYPE]  boolean false  true 
[REPLACE]^throw new IllegalArgumentException ( "SpreadsheetDate: Serial must be in range 2 to 2958465." ) ; ;^115^116^117^^^109^140^[REPLACE] throw new IllegalArgumentException ( "The 'year' argument must be in range 1900 to 9999." ) ;^[METHOD] <init> [TYPE] SpreadsheetDate(int,int,int) [PARAMETER] final int day final int month final int year [CLASS] SpreadsheetDate   [TYPE]  long serialVersionUID  [TYPE]  int day  month  serial  year  [TYPE]  boolean false  true 
[REPLACE]^if  (  ( month >= MonthConstants.JANUARY ) ) {^120^121^^^^109^140^[REPLACE] if  (  ( month >= MonthConstants.JANUARY ) &&  ( month <= MonthConstants.DECEMBER )  )  {^[METHOD] <init> [TYPE] SpreadsheetDate(int,int,int) [PARAMETER] final int day final int month final int year [CLASS] SpreadsheetDate   [TYPE]  long serialVersionUID  [TYPE]  int day  month  serial  year  [TYPE]  boolean false  true 
[REPLACE]^return ;^125^126^127^^^120^128^[REPLACE] throw new IllegalArgumentException ( "The 'month' argument must be in the range 1 to 12." ) ;^[METHOD] <init> [TYPE] SpreadsheetDate(int,int,int) [PARAMETER] final int day final int month final int year [CLASS] SpreadsheetDate   [TYPE]  long serialVersionUID  [TYPE]  int day  month  serial  year  [TYPE]  boolean false  true 
[ADD]^^125^126^127^^^120^128^[ADD] throw new IllegalArgumentException ( "The 'month' argument must be in the range 1 to 12." ) ;^[METHOD] <init> [TYPE] SpreadsheetDate(int,int,int) [PARAMETER] final int day final int month final int year [CLASS] SpreadsheetDate   [TYPE]  long serialVersionUID  [TYPE]  int day  month  serial  year  [TYPE]  boolean false  true 
[REPLACE]^this.month = mm - 1; ;^122^^^^^120^128^[REPLACE] this.month = month;^[METHOD] <init> [TYPE] SpreadsheetDate(int,int,int) [PARAMETER] final int day final int month final int year [CLASS] SpreadsheetDate   [TYPE]  long serialVersionUID  [TYPE]  int day  month  serial  year  [TYPE]  boolean false  true 
[REPLACE]^this.month = mm - 1; ;^122^^^^^109^140^[REPLACE] this.month = month;^[METHOD] <init> [TYPE] SpreadsheetDate(int,int,int) [PARAMETER] final int day final int month final int year [CLASS] SpreadsheetDate   [TYPE]  long serialVersionUID  [TYPE]  int day  month  serial  year  [TYPE]  boolean false  true 
[REPLACE]^throw new IllegalArgumentException ( "SpreadsheetDate: Serial must be in range 2 to 2958465." ) ; ;^125^126^127^^^109^140^[REPLACE] throw new IllegalArgumentException ( "The 'month' argument must be in the range 1 to 12." ) ;^[METHOD] <init> [TYPE] SpreadsheetDate(int,int,int) [PARAMETER] final int day final int month final int year [CLASS] SpreadsheetDate   [TYPE]  long serialVersionUID  [TYPE]  int day  month  serial  year  [TYPE]  boolean false  true 
[REPLACE]^if  (  ( day >= 1 )  ||  ( day <= SerialDate.lastDayOfMonth ( month, year )  )  )  {^130^^^^^109^140^[REPLACE] if  (  ( day >= 1 )  &&  ( day <= SerialDate.lastDayOfMonth ( month, year )  )  )  {^[METHOD] <init> [TYPE] SpreadsheetDate(int,int,int) [PARAMETER] final int day final int month final int year [CLASS] SpreadsheetDate   [TYPE]  long serialVersionUID  [TYPE]  int day  month  serial  year  [TYPE]  boolean false  true 
[ADD]^^130^131^132^^^109^140^[ADD] if  (  ( day >= 1 )  &&  ( day <= SerialDate.lastDayOfMonth ( month, year )  )  )  { this.day = day; }^[METHOD] <init> [TYPE] SpreadsheetDate(int,int,int) [PARAMETER] final int day final int month final int year [CLASS] SpreadsheetDate   [TYPE]  long serialVersionUID  [TYPE]  int day  month  serial  year  [TYPE]  boolean false  true 
[REPLACE]^return ;^134^^^^^130^135^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] <init> [TYPE] SpreadsheetDate(int,int,int) [PARAMETER] final int day final int month final int year [CLASS] SpreadsheetDate   [TYPE]  long serialVersionUID  [TYPE]  int day  month  serial  year  [TYPE]  boolean false  true 
[REPLACE]^this.day =  year;^131^^^^^109^140^[REPLACE] this.day = day;^[METHOD] <init> [TYPE] SpreadsheetDate(int,int,int) [PARAMETER] final int day final int month final int year [CLASS] SpreadsheetDate   [TYPE]  long serialVersionUID  [TYPE]  int day  month  serial  year  [TYPE]  boolean false  true 
[REPLACE]^return ;^134^^^^^109^140^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] <init> [TYPE] SpreadsheetDate(int,int,int) [PARAMETER] final int day final int month final int year [CLASS] SpreadsheetDate   [TYPE]  long serialVersionUID  [TYPE]  int day  month  serial  year  [TYPE]  boolean false  true 
[REPLACE]^this.serial =  calcSerial ( year, month, year ) ;^138^^^^^109^140^[REPLACE] this.serial = calcSerial ( day, month, year ) ;^[METHOD] <init> [TYPE] SpreadsheetDate(int,int,int) [PARAMETER] final int day final int month final int year [CLASS] SpreadsheetDate   [TYPE]  long serialVersionUID  [TYPE]  int day  month  serial  year  [TYPE]  boolean false  true 
[REPLACE]^if  (  ( serial >= SERIAL_LOWER_BOUND )  ||  ( serial <= SERIAL_UPPER_BOUND )  )  {^150^^^^^148^203^[REPLACE] if  (  ( serial >= SERIAL_LOWER_BOUND )  &&  ( serial <= SERIAL_UPPER_BOUND )  )  {^[METHOD] <init> [TYPE] SpreadsheetDate(int) [PARAMETER] final int serial [CLASS] SpreadsheetDate   [TYPE]  int[] daysToEndOfPrecedingMonth  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year 
[ADD]^this.serial = serial;^150^151^152^^^148^203^[ADD] if  (  ( serial >= SERIAL_LOWER_BOUND )  &&  ( serial <= SERIAL_UPPER_BOUND )  )  { this.serial = serial; }^[METHOD] <init> [TYPE] SpreadsheetDate(int) [PARAMETER] final int serial [CLASS] SpreadsheetDate   [TYPE]  int[] daysToEndOfPrecedingMonth  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year 
[REPLACE]^return ;^154^155^^^^150^156^[REPLACE] throw new IllegalArgumentException ( "SpreadsheetDate: Serial must be in range 2 to 2958465." ) ;^[METHOD] <init> [TYPE] SpreadsheetDate(int) [PARAMETER] final int serial [CLASS] SpreadsheetDate   [TYPE]  int[] daysToEndOfPrecedingMonth  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year 
[ADD]^^154^155^^^^150^156^[ADD] throw new IllegalArgumentException ( "SpreadsheetDate: Serial must be in range 2 to 2958465." ) ;^[METHOD] <init> [TYPE] SpreadsheetDate(int) [PARAMETER] final int serial [CLASS] SpreadsheetDate   [TYPE]  int[] daysToEndOfPrecedingMonth  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year 
[REPLACE]^this.serial =  year;^151^^^^^148^203^[REPLACE] this.serial = serial;^[METHOD] <init> [TYPE] SpreadsheetDate(int) [PARAMETER] final int serial [CLASS] SpreadsheetDate   [TYPE]  int[] daysToEndOfPrecedingMonth  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year 
[ADD]^^151^^^^^148^203^[ADD] this.serial = serial;^[METHOD] <init> [TYPE] SpreadsheetDate(int) [PARAMETER] final int serial [CLASS] SpreadsheetDate   [TYPE]  int[] daysToEndOfPrecedingMonth  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year 
[REPLACE]^this.serial =  sss;^151^^^^^148^203^[REPLACE] this.serial = serial;^[METHOD] <init> [TYPE] SpreadsheetDate(int) [PARAMETER] final int serial [CLASS] SpreadsheetDate   [TYPE]  int[] daysToEndOfPrecedingMonth  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year 
[REPLACE]^throw new IllegalArgumentException ( "The 'month' argument must be in the range 1 to 12." ;^154^155^^^^148^203^[REPLACE] throw new IllegalArgumentException ( "SpreadsheetDate: Serial must be in range 2 to 2958465." ) ;^[METHOD] <init> [TYPE] SpreadsheetDate(int) [PARAMETER] final int serial [CLASS] SpreadsheetDate   [TYPE]  int[] daysToEndOfPrecedingMonth  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year 
[ADD]^^154^155^^^^148^203^[ADD] throw new IllegalArgumentException ( "SpreadsheetDate: Serial must be in range 2 to 2958465." ) ;^[METHOD] <init> [TYPE] SpreadsheetDate(int) [PARAMETER] final int serial [CLASS] SpreadsheetDate   [TYPE]  int[] daysToEndOfPrecedingMonth  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year 
[REPLACE]^final int days =year - SERIAL_LOWER_BOUND;^160^^^^^148^203^[REPLACE] final int days = this.serial - SERIAL_LOWER_BOUND;^[METHOD] <init> [TYPE] SpreadsheetDate(int) [PARAMETER] final int serial [CLASS] SpreadsheetDate   [TYPE]  int[] daysToEndOfPrecedingMonth  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year 
[REPLACE]^final int overestimatedYYYY = 4  >=   ( underestimatedYYYY / 365 ) ;^162^^^^^148^203^[REPLACE] final int overestimatedYYYY = 1900 +  ( days / 365 ) ;^[METHOD] <init> [TYPE] SpreadsheetDate(int) [PARAMETER] final int serial [CLASS] SpreadsheetDate   [TYPE]  int[] daysToEndOfPrecedingMonth  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year 
[REPLACE]^final int leaps = SerialDate.leapYearCount ( serial ) ;^163^^^^^148^203^[REPLACE] final int leaps = SerialDate.leapYearCount ( overestimatedYYYY ) ;^[METHOD] <init> [TYPE] SpreadsheetDate(int) [PARAMETER] final int serial [CLASS] SpreadsheetDate   [TYPE]  int[] daysToEndOfPrecedingMonth  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year 
[REPLACE]^final int nonleapdays =underestimatedYYYY - leaps;^164^^^^^148^203^[REPLACE] final int nonleapdays = days - leaps;^[METHOD] <init> [TYPE] SpreadsheetDate(int) [PARAMETER] final int serial [CLASS] SpreadsheetDate   [TYPE]  int[] daysToEndOfPrecedingMonth  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year 
[REPLACE]^int underestimatedYYYY = 1900  >=   ( year / 365 ) ;^166^^^^^148^203^[REPLACE] int underestimatedYYYY = 1900 +  ( nonleapdays / 365 ) ;^[METHOD] <init> [TYPE] SpreadsheetDate(int) [PARAMETER] final int serial [CLASS] SpreadsheetDate   [TYPE]  int[] daysToEndOfPrecedingMonth  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year 
[ADD]^^166^^^^^148^203^[ADD] int underestimatedYYYY = 1900 +  ( nonleapdays / 365 ) ;^[METHOD] <init> [TYPE] SpreadsheetDate(int) [PARAMETER] final int serial [CLASS] SpreadsheetDate   [TYPE]  int[] daysToEndOfPrecedingMonth  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year 
[REPLACE]^while  ( ss1  <  this.serial )  {^173^^^^^148^203^[REPLACE] while  ( ss1 <= this.serial )  {^[METHOD] <init> [TYPE] SpreadsheetDate(int) [PARAMETER] final int serial [CLASS] SpreadsheetDate   [TYPE]  int[] daysToEndOfPrecedingMonth  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year 
[ADD]^^173^174^^^^148^203^[ADD] while  ( ss1 <= this.serial )  { underestimatedYYYY = underestimatedYYYY + 1;^[METHOD] <init> [TYPE] SpreadsheetDate(int) [PARAMETER] final int serial [CLASS] SpreadsheetDate   [TYPE]  int[] daysToEndOfPrecedingMonth  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year 
[REPLACE]^underestimatedYYYY =serial + 1 * 0;^174^^^^^148^203^[REPLACE] underestimatedYYYY = underestimatedYYYY + 1;^[METHOD] <init> [TYPE] SpreadsheetDate(int) [PARAMETER] final int serial [CLASS] SpreadsheetDate   [TYPE]  int[] daysToEndOfPrecedingMonth  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year 
[REPLACE]^ss1L = calcSerial ( 1L, 1L, underestimatedYYYY ) ;^175^^^^^148^203^[REPLACE] ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[METHOD] <init> [TYPE] SpreadsheetDate(int) [PARAMETER] final int serial [CLASS] SpreadsheetDate   [TYPE]  int[] daysToEndOfPrecedingMonth  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year 
[ADD]^^175^^^^^148^203^[ADD] ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[METHOD] <init> [TYPE] SpreadsheetDate(int) [PARAMETER] final int serial [CLASS] SpreadsheetDate   [TYPE]  int[] daysToEndOfPrecedingMonth  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year 
[REPLACE]^if  ( year  &&  underestimatedYYYY )  {^168^^^^^148^203^[REPLACE] if  ( underestimatedYYYY == overestimatedYYYY )  {^[METHOD] <init> [TYPE] SpreadsheetDate(int) [PARAMETER] final int serial [CLASS] SpreadsheetDate   [TYPE]  int[] daysToEndOfPrecedingMonth  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year 
[REPLACE]^while  ( ss0  <  this.serial )  {^173^^^^^168^178^[REPLACE] while  ( ss1 <= this.serial )  {^[METHOD] <init> [TYPE] SpreadsheetDate(int) [PARAMETER] final int serial [CLASS] SpreadsheetDate   [TYPE]  int[] daysToEndOfPrecedingMonth  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year 
[REPLACE]^underestimatedYYYY =sss + 1;^174^^^^^168^178^[REPLACE] underestimatedYYYY = underestimatedYYYY + 1;^[METHOD] <init> [TYPE] SpreadsheetDate(int) [PARAMETER] final int serial [CLASS] SpreadsheetDate   [TYPE]  int[] daysToEndOfPrecedingMonth  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year 
[REPLACE]^ss0 = calcSerial ( 0, 0, underestimatedYYYY ) ;^175^^^^^168^178^[REPLACE] ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[METHOD] <init> [TYPE] SpreadsheetDate(int) [PARAMETER] final int serial [CLASS] SpreadsheetDate   [TYPE]  int[] daysToEndOfPrecedingMonth  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year 
[REPLACE]^sss = underestimatedYYYY + ss1;^174^^^^^168^178^[REPLACE] underestimatedYYYY = underestimatedYYYY + 1;^[METHOD] <init> [TYPE] SpreadsheetDate(int) [PARAMETER] final int serial [CLASS] SpreadsheetDate   [TYPE]  int[] daysToEndOfPrecedingMonth  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year 
[REPLACE]^ss1 - 0 = calcSerial ( 1 - 0, 1 - 0, underestimatedYYYY ) ;^175^^^^^168^178^[REPLACE] ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[METHOD] <init> [TYPE] SpreadsheetDate(int) [PARAMETER] final int serial [CLASS] SpreadsheetDate   [TYPE]  int[] daysToEndOfPrecedingMonth  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year 
[REPLACE]^this.year =ss0 - 0;^177^^^^^168^178^[REPLACE] this.year = underestimatedYYYY - 1;^[METHOD] <init> [TYPE] SpreadsheetDate(int) [PARAMETER] final int serial [CLASS] SpreadsheetDate   [TYPE]  int[] daysToEndOfPrecedingMonth  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year 
[REPLACE]^int ss4 = calcSerial ( 4, 4, underestimatedYYYY ) ;^172^^^^^168^178^[REPLACE] int ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[METHOD] <init> [TYPE] SpreadsheetDate(int) [PARAMETER] final int serial [CLASS] SpreadsheetDate   [TYPE]  int[] daysToEndOfPrecedingMonth  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year 
[REPLACE]^this.year = underestimatedYYYY - 1; ;^169^^^^^148^203^[REPLACE] this.year = underestimatedYYYY;^[METHOD] <init> [TYPE] SpreadsheetDate(int) [PARAMETER] final int serial [CLASS] SpreadsheetDate   [TYPE]  int[] daysToEndOfPrecedingMonth  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year 
[REPLACE]^underestimatedYYYY = underestimatedYYYY +serial;^174^^^^^148^203^[REPLACE] underestimatedYYYY = underestimatedYYYY + 1;^[METHOD] <init> [TYPE] SpreadsheetDate(int) [PARAMETER] final int serial [CLASS] SpreadsheetDate   [TYPE]  int[] daysToEndOfPrecedingMonth  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year 
[REPLACE]^ss1 + 1 = calcSerial ( 1 + 1, 1 + 1, underestimatedYYYY ) ;^175^^^^^148^203^[REPLACE] ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[METHOD] <init> [TYPE] SpreadsheetDate(int) [PARAMETER] final int serial [CLASS] SpreadsheetDate   [TYPE]  int[] daysToEndOfPrecedingMonth  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year 
[REPLACE]^this.year = serial - ss2;^177^^^^^148^203^[REPLACE] this.year = underestimatedYYYY - 1;^[METHOD] <init> [TYPE] SpreadsheetDate(int) [PARAMETER] final int serial [CLASS] SpreadsheetDate   [TYPE]  int[] daysToEndOfPrecedingMonth  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year 
[REPLACE]^int ss1 - 4 = calcSerial ( 1 - 4, 1 - 4, underestimatedYYYY ) ;^172^^^^^148^203^[REPLACE] int ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[METHOD] <init> [TYPE] SpreadsheetDate(int) [PARAMETER] final int serial [CLASS] SpreadsheetDate   [TYPE]  int[] daysToEndOfPrecedingMonth  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year 
[REPLACE]^final int ss2 = calcSerial ( 0, 0, this.year ) ;^180^^^^^148^203^[REPLACE] final int ss2 = calcSerial ( 1, 1, this.year ) ;^[METHOD] <init> [TYPE] SpreadsheetDate(int) [PARAMETER] final int serial [CLASS] SpreadsheetDate   [TYPE]  int[] daysToEndOfPrecedingMonth  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year 
[REPLACE]^if  (  ( year >= 1900 )  &&  ( year <= 9999 )  )  {^185^^^^^148^203^[REPLACE] if  ( isLeapYear ( this.year )  )  {^[METHOD] <init> [TYPE] SpreadsheetDate(int) [PARAMETER] final int serial [CLASS] SpreadsheetDate   [TYPE]  int[] daysToEndOfPrecedingMonth  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year 
[ADD]^^185^186^187^188^^148^203^[ADD] if  ( isLeapYear ( this.year )  )  { daysToEndOfPrecedingMonth = LEAP_YEAR_AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH; }^[METHOD] <init> [TYPE] SpreadsheetDate(int) [PARAMETER] final int serial [CLASS] SpreadsheetDate   [TYPE]  int[] daysToEndOfPrecedingMonth  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year 
[REPLACE]^daysToEndOfPrecedingMonth ;^186^187^^^^148^203^[REPLACE] daysToEndOfPrecedingMonth = LEAP_YEAR_AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;^[METHOD] <init> [TYPE] SpreadsheetDate(int) [PARAMETER] final int serial [CLASS] SpreadsheetDate   [TYPE]  int[] daysToEndOfPrecedingMonth  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year 
[REPLACE]^daysToEndOfPrecedingMonth  =  daysToEndOfPrecedingMonth ;^186^187^^^^148^203^[REPLACE] daysToEndOfPrecedingMonth = LEAP_YEAR_AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;^[METHOD] <init> [TYPE] SpreadsheetDate(int) [PARAMETER] final int serial [CLASS] SpreadsheetDate   [TYPE]  int[] daysToEndOfPrecedingMonth  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year 
[ADD]^^186^187^^^^148^203^[ADD] daysToEndOfPrecedingMonth = LEAP_YEAR_AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;^[METHOD] <init> [TYPE] SpreadsheetDate(int) [PARAMETER] final int serial [CLASS] SpreadsheetDate   [TYPE]  int[] daysToEndOfPrecedingMonth  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year 
[REPLACE]^int mm = 4;^191^^^^^148^203^[REPLACE] int mm = 1;^[METHOD] <init> [TYPE] SpreadsheetDate(int) [PARAMETER] final int serial [CLASS] SpreadsheetDate   [TYPE]  int[] daysToEndOfPrecedingMonth  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year 
[ADD]^^191^^^^^148^203^[ADD] int mm = 1;^[METHOD] <init> [TYPE] SpreadsheetDate(int) [PARAMETER] final int serial [CLASS] SpreadsheetDate   [TYPE]  int[] daysToEndOfPrecedingMonth  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year 
[REPLACE]^int sss = ss2 + daysToEndOfPrecedingMonth[mm] - ss4;^192^^^^^148^203^[REPLACE] int sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;^[METHOD] <init> [TYPE] SpreadsheetDate(int) [PARAMETER] final int serial [CLASS] SpreadsheetDate   [TYPE]  int[] daysToEndOfPrecedingMonth  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year 
[ADD]^^192^^^^^148^203^[ADD] int sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;^[METHOD] <init> [TYPE] SpreadsheetDate(int) [PARAMETER] final int serial [CLASS] SpreadsheetDate   [TYPE]  int[] daysToEndOfPrecedingMonth  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year 
[REPLACE]^while  ( ss2  >=  underestimatedYYYY )  {^193^^^^^148^203^[REPLACE] while  ( sss < this.serial )  {^[METHOD] <init> [TYPE] SpreadsheetDate(int) [PARAMETER] final int serial [CLASS] SpreadsheetDate   [TYPE]  int[] daysToEndOfPrecedingMonth  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year 
[REPLACE]^mm =underestimatedYYYY + 3;^194^^^^^148^203^[REPLACE] mm = mm + 1;^[METHOD] <init> [TYPE] SpreadsheetDate(int) [PARAMETER] final int serial [CLASS] SpreadsheetDate   [TYPE]  int[] daysToEndOfPrecedingMonth  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year 
[ADD]^sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;^194^195^^^^148^203^[ADD] mm = mm + 1; sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;^[METHOD] <init> [TYPE] SpreadsheetDate(int) [PARAMETER] final int serial [CLASS] SpreadsheetDate   [TYPE]  int[] daysToEndOfPrecedingMonth  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year 
[REPLACE]^sss = ss2 + daysToEndOfPrecedingMonth[mm] - ss1;^195^^^^^148^203^[REPLACE] sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;^[METHOD] <init> [TYPE] SpreadsheetDate(int) [PARAMETER] final int serial [CLASS] SpreadsheetDate   [TYPE]  int[] daysToEndOfPrecedingMonth  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year 
[ADD]^^195^^^^^148^203^[ADD] sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;^[METHOD] <init> [TYPE] SpreadsheetDate(int) [PARAMETER] final int serial [CLASS] SpreadsheetDate   [TYPE]  int[] daysToEndOfPrecedingMonth  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year 
[REPLACE]^mm =underestimatedYYYY + 0;^194^^^^^148^203^[REPLACE] mm = mm + 1;^[METHOD] <init> [TYPE] SpreadsheetDate(int) [PARAMETER] final int serial [CLASS] SpreadsheetDate   [TYPE]  int[] daysToEndOfPrecedingMonth  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year 
[REPLACE]^this.month = month; ;^195^^^^^148^203^[REPLACE] sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;^[METHOD] <init> [TYPE] SpreadsheetDate(int) [PARAMETER] final int serial [CLASS] SpreadsheetDate   [TYPE]  int[] daysToEndOfPrecedingMonth  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year 
[REPLACE]^this.month =underestimatedYYYY - 1;^197^^^^^148^203^[REPLACE] this.month = mm - 1;^[METHOD] <init> [TYPE] SpreadsheetDate(int) [PARAMETER] final int serial [CLASS] SpreadsheetDate   [TYPE]  int[] daysToEndOfPrecedingMonth  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year 
[REPLACE]^this.day = this.serial - ss2 - daysToEndOfPrecedingMonth[this.month] +underestimatedYYYY;^200^201^^^^148^203^[REPLACE] this.day = this.serial - ss2 - daysToEndOfPrecedingMonth[this.month] + 1;^[METHOD] <init> [TYPE] SpreadsheetDate(int) [PARAMETER] final int serial [CLASS] SpreadsheetDate   [TYPE]  int[] daysToEndOfPrecedingMonth  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year 
[REPLACE]^return  ( this.serial + 6 )  % 7 + 1;^213^^^^^212^214^[REPLACE] return this.serial;^[METHOD] toSerial [TYPE] int [PARAMETER] [CLASS] SpreadsheetDate   [TYPE]  long serialVersionUID  [TYPE]  int day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  [TYPE]  boolean false  true 
[REPLACE]^final Calendar calendar = Calendar.getTime (  ) ;^222^^^^^221^225^[REPLACE] final Calendar calendar = Calendar.getInstance (  ) ;^[METHOD] toDate [TYPE] Date [PARAMETER] [CLASS] SpreadsheetDate   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  [TYPE]  Calendar calendar 
[REPLACE]^calendar.set ( getYYYY (  ) , year (  )  - ss1, getDayOfMonth (  ) , 0, 0, 0 ) ;^223^^^^^221^225^[REPLACE] calendar.set ( getYYYY (  ) , getMonth (  )  - 1, getDayOfMonth (  ) , 0, 0, 0 ) ;^[METHOD] toDate [TYPE] Date [PARAMETER] [CLASS] SpreadsheetDate   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  [TYPE]  Calendar calendar 
[ADD]^^223^^^^^221^225^[ADD] calendar.set ( getYYYY (  ) , getMonth (  )  - 1, getDayOfMonth (  ) , 0, 0, 0 ) ;^[METHOD] toDate [TYPE] Date [PARAMETER] [CLASS] SpreadsheetDate   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  [TYPE]  Calendar calendar 
[REPLACE]^if  ( SerialDate.isLeapYear ( y )  )  { mm = mm + 1;^223^^^^^221^225^[REPLACE] calendar.set ( getYYYY (  ) , getMonth (  )  - 1, getDayOfMonth (  ) , 0, 0, 0 ) ;^[METHOD] toDate [TYPE] Date [PARAMETER] [CLASS] SpreadsheetDate   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  [TYPE]  Calendar calendar 
[REPLACE]^return calendar .getInstance (  )  ;^224^^^^^221^225^[REPLACE] return calendar.getTime (  ) ;^[METHOD] toDate [TYPE] Date [PARAMETER] [CLASS] SpreadsheetDate   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  [TYPE]  Calendar calendar 
[REPLACE]^return this.day;^233^^^^^232^234^[REPLACE] return this.year;^[METHOD] getYYYY [TYPE] int [PARAMETER] [CLASS] SpreadsheetDate   [TYPE]  long serialVersionUID  [TYPE]  int day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  [TYPE]  boolean false  true 
[REPLACE]^return  ( this.serial + 6 )  % 7 + 1;^242^^^^^241^243^[REPLACE] return this.month;^[METHOD] getMonth [TYPE] int [PARAMETER] [CLASS] SpreadsheetDate   [TYPE]  long serialVersionUID  [TYPE]  int day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  [TYPE]  boolean false  true 
[REPLACE]^return this.year;^251^^^^^250^252^[REPLACE] return this.day;^[METHOD] getDayOfMonth [TYPE] int [PARAMETER] [CLASS] SpreadsheetDate   [TYPE]  long serialVersionUID  [TYPE]  int day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  [TYPE]  boolean false  true 
[REPLACE]^return  ( this.serial  &  6 )  % 7  &  1;^265^^^^^264^266^[REPLACE] return  ( this.serial + 6 )  % 7 + 1;^[METHOD] getDayOfWeek [TYPE] int [PARAMETER] [CLASS] SpreadsheetDate   [TYPE]  long serialVersionUID  [TYPE]  int day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  [TYPE]  boolean false  true 
[REPLACE]^if  ( ! object instanceof SerialDate )  {^281^^^^^279^289^[REPLACE] if  ( object instanceof SerialDate )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object object [CLASS] SpreadsheetDate   [TYPE]  Object object  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  [TYPE]  SerialDate s 
[REPLACE]^return true;^286^^^^^279^289^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object object [CLASS] SpreadsheetDate   [TYPE]  Object object  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  [TYPE]  SerialDate s 
[REPLACE]^return  ( s .SerialDate (  )   == this^283^^^^^279^289^[REPLACE] return  ( s.toSerial (  )  == this.toSerial (  )  ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] Object object [CLASS] SpreadsheetDate   [TYPE]  Object object  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  [TYPE]  SerialDate s 
[REPLACE]^final int s1 = d1.toSerial (  ) ;^282^^^^^279^289^[REPLACE] final SerialDate s =  ( SerialDate )  object;^[METHOD] equals [TYPE] boolean [PARAMETER] Object object [CLASS] SpreadsheetDate   [TYPE]  Object object  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  [TYPE]  SerialDate s 
[REPLACE]^return  ( s.SpreadsheetDate (  )  == this.toSerial (  )  ) ;^283^^^^^279^289^[REPLACE] return  ( s.toSerial (  )  == this.toSerial (  )  ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] Object object [CLASS] SpreadsheetDate   [TYPE]  Object object  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  [TYPE]  SerialDate s 
[REPLACE]^return  ( this.serial + 6 )  % 7 + 1;^297^^^^^296^298^[REPLACE] return toSerial (  ) ;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] SpreadsheetDate   [TYPE]  long serialVersionUID  [TYPE]  int day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  [TYPE]  boolean false  true 
[REPLACE]^return this.serial - other.isLeapYear (  ) ;^310^^^^^309^311^[REPLACE] return this.serial - other.toSerial (  ) ;^[METHOD] compare [TYPE] int [PARAMETER] SerialDate other [CLASS] SpreadsheetDate   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  [TYPE]  SerialDate other 
[REPLACE]^return  ( this.serial + 6 )  % 7 + 1;^322^^^^^321^323^[REPLACE] return compare (  ( SerialDate )  other ) ;^[METHOD] compareTo [TYPE] int [PARAMETER] Object other [CLASS] SpreadsheetDate   [TYPE]  Object other  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year 
[REPLACE]^return  ( this.serial == other.isLeapYear (  )  ) ;^335^^^^^334^336^[REPLACE] return  ( this.serial == other.toSerial (  )  ) ;^[METHOD] isOn [TYPE] boolean [PARAMETER] SerialDate other [CLASS] SpreadsheetDate   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  [TYPE]  SerialDate other 
[REPLACE]^return  ( this.serial < other .SerialDate (  )   ) ;^348^^^^^347^349^[REPLACE] return  ( this.serial < other.toSerial (  )  ) ;^[METHOD] isBefore [TYPE] boolean [PARAMETER] SerialDate other [CLASS] SpreadsheetDate   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  [TYPE]  SerialDate other 
[REPLACE]^return  ( this.serial  ;^361^^^^^360^362^[REPLACE] return  ( this.serial <= other.toSerial (  )  ) ;^[METHOD] isOnOrBefore [TYPE] boolean [PARAMETER] SerialDate other [CLASS] SpreadsheetDate   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  [TYPE]  SerialDate other 
[REPLACE]^return false ;^374^^^^^373^375^[REPLACE] return  ( this.serial > other.toSerial (  )  ) ;^[METHOD] isAfter [TYPE] boolean [PARAMETER] SerialDate other [CLASS] SpreadsheetDate   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  [TYPE]  SerialDate other 
[REPLACE]^return  ( this.serial >= other.isLeapYear (  )  ) ;^387^^^^^386^388^[REPLACE] return  ( this.serial >= other.toSerial (  )  ) ;^[METHOD] isOnOrAfter [TYPE] boolean [PARAMETER] SerialDate other [CLASS] SpreadsheetDate   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  [TYPE]  SerialDate other 
[REPLACE]^return  ( this.serial + 6 )  % 7 + 1;^401^^^^^400^402^[REPLACE] return isInRange ( d1, d2, SerialDate.INCLUDE_BOTH ) ;^[METHOD] isInRange [TYPE] boolean [PARAMETER] SerialDate d1 SerialDate d2 [CLASS] SpreadsheetDate   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  [TYPE]  SerialDate d1  d2 
[REPLACE]^final int s1 = d2 .SerialDate (  )  ;^419^^^^^417^437^[REPLACE] final int s1 = d1.toSerial (  ) ;^[METHOD] isInRange [TYPE] boolean [PARAMETER] SerialDate d1 SerialDate d2 final int include [CLASS] SpreadsheetDate   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  [TYPE]  SerialDate d1  d2 
[REPLACE]^final int s2 = d1.SerialDate (  ) ;^420^^^^^417^437^[REPLACE] final int s2 = d2.toSerial (  ) ;^[METHOD] isInRange [TYPE] boolean [PARAMETER] SerialDate d1 SerialDate d2 final int include [CLASS] SpreadsheetDate   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  [TYPE]  SerialDate d1  d2 
[REPLACE]^final int start = Math.min ( underestimatedYYYY, s2 ) ;^421^^^^^417^437^[REPLACE] final int start = Math.min ( s1, s2 ) ;^[METHOD] isInRange [TYPE] boolean [PARAMETER] SerialDate d1 SerialDate d2 final int include [CLASS] SpreadsheetDate   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  [TYPE]  SerialDate d1  d2 
[ADD]^final int end = Math.max ( s1, s2 ) ;^421^422^^^^417^437^[ADD] final int start = Math.min ( s1, s2 ) ; final int end = Math.max ( s1, s2 ) ;^[METHOD] isInRange [TYPE] boolean [PARAMETER] SerialDate d1 SerialDate d2 final int include [CLASS] SpreadsheetDate   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  [TYPE]  SerialDate d1  d2 
[REPLACE]^final int end = Math.max ( s1, underestimatedYYYY ) ;^422^^^^^417^437^[REPLACE] final int end = Math.max ( s1, s2 ) ;^[METHOD] isInRange [TYPE] boolean [PARAMETER] SerialDate d1 SerialDate d2 final int include [CLASS] SpreadsheetDate   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  [TYPE]  SerialDate d1  d2 
[REPLACE]^final int s1 = d1.toSerial (  ) ;^424^^^^^417^437^[REPLACE] final int s = toSerial (  ) ;^[METHOD] isInRange [TYPE] boolean [PARAMETER] SerialDate d1 SerialDate d2 final int include [CLASS] SpreadsheetDate   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  [TYPE]  SerialDate d1  d2 
[REPLACE]^if  ( include  &&  SerialDate.INCLUDE_BOTH )  {^425^^^^^417^437^[REPLACE] if  ( include == SerialDate.INCLUDE_BOTH )  {^[METHOD] isInRange [TYPE] boolean [PARAMETER] SerialDate d1 SerialDate d2 final int include [CLASS] SpreadsheetDate   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  [TYPE]  SerialDate d1  d2 
[REPLACE]^else {^428^^^^^417^437^[REPLACE] else if  ( include == SerialDate.INCLUDE_FIRST )  {^[METHOD] isInRange [TYPE] boolean [PARAMETER] SerialDate d1 SerialDate d2 final int include [CLASS] SpreadsheetDate   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  [TYPE]  SerialDate d1  d2 
[REPLACE]^else if  ( underestimatedYYYY  ||  SerialDate.INCLUDE_SECOND )  {^431^^^^^417^437^[REPLACE] else if  ( include == SerialDate.INCLUDE_SECOND )  {^[METHOD] isInRange [TYPE] boolean [PARAMETER] SerialDate d1 SerialDate d2 final int include [CLASS] SpreadsheetDate   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  [TYPE]  SerialDate d1  d2 
[REPLACE]^return   s ;^435^^^^^417^437^[REPLACE] return  ( s > start && s < end ) ;^[METHOD] isInRange [TYPE] boolean [PARAMETER] SerialDate d1 SerialDate d2 final int include [CLASS] SpreadsheetDate   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  [TYPE]  SerialDate d1  d2 
[REPLACE]^return  ( s ;^432^^^^^417^437^[REPLACE] return  ( s > start && s <= end ) ;^[METHOD] isInRange [TYPE] boolean [PARAMETER] SerialDate d1 SerialDate d2 final int include [CLASS] SpreadsheetDate   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  [TYPE]  SerialDate d1  d2 
[REPLACE]^return  ( s > start || s ;^432^^^^^417^437^[REPLACE] return  ( s > start && s <= end ) ;^[METHOD] isInRange [TYPE] boolean [PARAMETER] SerialDate d1 SerialDate d2 final int include [CLASS] SpreadsheetDate   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  [TYPE]  SerialDate d1  d2 
[REPLACE]^return  ( s ;^435^^^^^417^437^[REPLACE] return  ( s > start && s < end ) ;^[METHOD] isInRange [TYPE] boolean [PARAMETER] SerialDate d1 SerialDate d2 final int include [CLASS] SpreadsheetDate   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  [TYPE]  SerialDate d1  d2 
[REPLACE]^return false ;^429^^^^^417^437^[REPLACE] return  ( s >= start && s < end ) ;^[METHOD] isInRange [TYPE] boolean [PARAMETER] SerialDate d1 SerialDate d2 final int include [CLASS] SpreadsheetDate   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  [TYPE]  SerialDate d1  d2 
[REPLACE]^if  ( include  !=  SerialDate.INCLUDE_SECOND )  {^431^^^^^417^437^[REPLACE] else if  ( include == SerialDate.INCLUDE_SECOND )  {^[METHOD] isInRange [TYPE] boolean [PARAMETER] SerialDate d1 SerialDate d2 final int include [CLASS] SpreadsheetDate   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  [TYPE]  SerialDate d1  d2 
[REPLACE]^return  (true ;^435^^^^^417^437^[REPLACE] return  ( s > start && s < end ) ;^[METHOD] isInRange [TYPE] boolean [PARAMETER] SerialDate d1 SerialDate d2 final int include [CLASS] SpreadsheetDate   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  [TYPE]  SerialDate d1  d2 
[REPLACE]^return  (true ;^432^^^^^417^437^[REPLACE] return  ( s > start && s <= end ) ;^[METHOD] isInRange [TYPE] boolean [PARAMETER] SerialDate d1 SerialDate d2 final int include [CLASS] SpreadsheetDate   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  [TYPE]  SerialDate d1  d2 
[REPLACE]^return   s ;^429^^^^^417^437^[REPLACE] return  ( s >= start && s < end ) ;^[METHOD] isInRange [TYPE] boolean [PARAMETER] SerialDate d1 SerialDate d2 final int include [CLASS] SpreadsheetDate   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  [TYPE]  SerialDate d1  d2 
[REPLACE]^return false ;^435^^^^^417^437^[REPLACE] return  ( s > start && s < end ) ;^[METHOD] isInRange [TYPE] boolean [PARAMETER] SerialDate d1 SerialDate d2 final int include [CLASS] SpreadsheetDate   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  [TYPE]  SerialDate d1  d2 
[REPLACE]^return  ( s > start && s < end ) ;^426^^^^^417^437^[REPLACE] return  ( s >= start && s <= end ) ;^[METHOD] isInRange [TYPE] boolean [PARAMETER] SerialDate d1 SerialDate d2 final int include [CLASS] SpreadsheetDate   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  [TYPE]  SerialDate d1  d2 
[REPLACE]^if  ( include  || underestimatedYYYY )  {^428^^^^^417^437^[REPLACE] else if  ( include == SerialDate.INCLUDE_FIRST )  {^[METHOD] isInRange [TYPE] boolean [PARAMETER] SerialDate d1 SerialDate d2 final int include [CLASS] SpreadsheetDate   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  [TYPE]  SerialDate d1  d2 
[ADD]^return  ( s >= start && s < end ) ;^428^429^430^^^417^437^[ADD] else if  ( include == SerialDate.INCLUDE_FIRST )  { return  ( s >= start && s < end ) ; }^[METHOD] isInRange [TYPE] boolean [PARAMETER] SerialDate d1 SerialDate d2 final int include [CLASS] SpreadsheetDate   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  [TYPE]  SerialDate d1  d2 
[REPLACE]^else {^431^^^^^417^437^[REPLACE] else if  ( include == SerialDate.INCLUDE_SECOND )  {^[METHOD] isInRange [TYPE] boolean [PARAMETER] SerialDate d1 SerialDate d2 final int include [CLASS] SpreadsheetDate   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  [TYPE]  SerialDate d1  d2 
[ADD]^^431^432^433^^^417^437^[ADD] else if  ( include == SerialDate.INCLUDE_SECOND )  { return  ( s > start && s <= end ) ; }^[METHOD] isInRange [TYPE] boolean [PARAMETER] SerialDate d1 SerialDate d2 final int include [CLASS] SpreadsheetDate   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  [TYPE]  SerialDate d1  d2 
[REPLACE]^return   s ;^432^^^^^417^437^[REPLACE] return  ( s > start && s <= end ) ;^[METHOD] isInRange [TYPE] boolean [PARAMETER] SerialDate d1 SerialDate d2 final int include [CLASS] SpreadsheetDate   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  [TYPE]  SerialDate d1  d2 
[REPLACE]^return  ( s ;^429^^^^^417^437^[REPLACE] return  ( s >= start && s < end ) ;^[METHOD] isInRange [TYPE] boolean [PARAMETER] SerialDate d1 SerialDate d2 final int include [CLASS] SpreadsheetDate   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  [TYPE]  SerialDate d1  d2 
[REPLACE]^return   s ;^426^^^^^417^437^[REPLACE] return  ( s >= start && s <= end ) ;^[METHOD] isInRange [TYPE] boolean [PARAMETER] SerialDate d1 SerialDate d2 final int include [CLASS] SpreadsheetDate   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  [TYPE]  SerialDate d1  d2 
[REPLACE]^final int yyy =  (  ( y - 1900 )  * 365 )   >=  SerialDate .isLeapYear ( yy )  ;^451^^^^^450^460^[REPLACE] final int yy =  (  ( y - 1900 )  * 365 )  + SerialDate.leapYearCount ( y - 1 ) ;^[METHOD] calcSerial [TYPE] int [PARAMETER] final int d final int m final int y [CLASS] SpreadsheetDate   [TYPE]  long serialVersionUID  [TYPE]  int d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  [TYPE]  boolean false  true 
[ADD]^^451^^^^^450^460^[ADD] final int yy =  (  ( y - 1900 )  * 365 )  + SerialDate.leapYearCount ( y - 1 ) ;^[METHOD] calcSerial [TYPE] int [PARAMETER] final int d final int m final int y [CLASS] SpreadsheetDate   [TYPE]  long serialVersionUID  [TYPE]  int d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  [TYPE]  boolean false  true 
[REPLACE]^int underestimatedYYYYm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];^452^^^^^450^460^[REPLACE] int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];^[METHOD] calcSerial [TYPE] int [PARAMETER] final int d final int m final int y [CLASS] SpreadsheetDate   [TYPE]  long serialVersionUID  [TYPE]  int d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  [TYPE]  boolean false  true 
[REPLACE]^if  (underestimatedYYYY  >=  MonthConstants.FEBRUARY )  {^453^^^^^450^460^[REPLACE] if  ( m > MonthConstants.FEBRUARY )  {^[METHOD] calcSerial [TYPE] int [PARAMETER] final int d final int m final int y [CLASS] SpreadsheetDate   [TYPE]  long serialVersionUID  [TYPE]  int d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  [TYPE]  boolean false  true 
[REPLACE]^if  ( SerialDate.isLeapYear ( yy )  )  {^454^^^^^450^460^[REPLACE] if  ( SerialDate.isLeapYear ( y )  )  {^[METHOD] calcSerial [TYPE] int [PARAMETER] final int d final int m final int y [CLASS] SpreadsheetDate   [TYPE]  long serialVersionUID  [TYPE]  int d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  [TYPE]  boolean false  true 
[REPLACE]^mm = mm +underestimatedYYYY;^455^^^^^450^460^[REPLACE] mm = mm + 1;^[METHOD] calcSerial [TYPE] int [PARAMETER] final int d final int m final int y [CLASS] SpreadsheetDate   [TYPE]  long serialVersionUID  [TYPE]  int d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  [TYPE]  boolean false  true 
[REPLACE]^mm =underestimatedYYYY + 1;^455^^^^^450^460^[REPLACE] mm = mm + 1;^[METHOD] calcSerial [TYPE] int [PARAMETER] final int d final int m final int y [CLASS] SpreadsheetDate   [TYPE]  long serialVersionUID  [TYPE]  int d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  [TYPE]  boolean false  true 
[ADD]^^455^^^^^450^460^[ADD] mm = mm + 1;^[METHOD] calcSerial [TYPE] int [PARAMETER] final int d final int m final int y [CLASS] SpreadsheetDate   [TYPE]  long serialVersionUID  [TYPE]  int d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  [TYPE]  boolean false  true 
[REPLACE]^if  ( SerialDate.leapYearCount ( y )  )  {^454^^^^^450^460^[REPLACE] if  ( SerialDate.isLeapYear ( y )  )  {^[METHOD] calcSerial [TYPE] int [PARAMETER] final int d final int m final int y [CLASS] SpreadsheetDate   [TYPE]  long serialVersionUID  [TYPE]  int d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  [TYPE]  boolean false  true 
[REPLACE]^mm = mm  &&  1;^455^^^^^450^460^[REPLACE] mm = mm + 1;^[METHOD] calcSerial [TYPE] int [PARAMETER] final int d final int m final int y [CLASS] SpreadsheetDate   [TYPE]  long serialVersionUID  [TYPE]  int d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  [TYPE]  boolean false  true 
[REPLACE]^final int underestimatedYYYYd = d;^458^^^^^450^460^[REPLACE] final int dd = d;^[METHOD] calcSerial [TYPE] int [PARAMETER] final int d final int m final int y [CLASS] SpreadsheetDate   [TYPE]  long serialVersionUID  [TYPE]  int d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  [TYPE]  boolean false  true 
[REPLACE]^return yy + mm + underestimatedYYYY + ss1 * 1;^459^^^^^450^460^[REPLACE] return yy + mm + dd + 1;^[METHOD] calcSerial [TYPE] int [PARAMETER] final int d final int m final int y [CLASS] SpreadsheetDate   [TYPE]  long serialVersionUID  [TYPE]  int d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  [TYPE]  boolean false  true 
