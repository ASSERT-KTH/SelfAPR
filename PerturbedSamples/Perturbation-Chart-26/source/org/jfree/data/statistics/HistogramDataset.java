[REPLACE]^private static final long serialVersionUID  = null ;^86^^^^^^^[REPLACE] private static final long serialVersionUID = -6341668077370231153L;^ [CLASS] HistogramDataset  
[REPLACE]^this.list =  new ArrayList ( bins )  ;^99^^^^^98^101^[REPLACE] this.list = new ArrayList (  ) ;^[METHOD] <init> [TYPE] HistogramDataset() [PARAMETER] [CLASS] HistogramDataset   [TYPE]  List list  [TYPE]  boolean false  true  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID 
[REPLACE]^this.type ;^100^^^^^98^101^[REPLACE] this.type = HistogramType.FREQUENCY;^[METHOD] <init> [TYPE] HistogramDataset() [PARAMETER] [CLASS] HistogramDataset   [TYPE]  List list  [TYPE]  boolean false  true  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID 
[ADD]^^100^^^^^98^101^[ADD] this.type = HistogramType.FREQUENCY;^[METHOD] <init> [TYPE] HistogramDataset() [PARAMETER] [CLASS] HistogramDataset   [TYPE]  List list  [TYPE]  boolean false  true  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID 
[REPLACE]^return super.clone (  ) ;^109^^^^^108^110^[REPLACE] return this.type;^[METHOD] getType [TYPE] HistogramType [PARAMETER] [CLASS] HistogramDataset   [TYPE]  List list  [TYPE]  boolean false  true  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID 
[REPLACE]^if  ( type != null )  {^119^^^^^118^124^[REPLACE] if  ( type == null )  {^[METHOD] setType [TYPE] void [PARAMETER] HistogramType type [CLASS] HistogramDataset   [TYPE]  List list  [TYPE]  boolean false  true  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID 
[REPLACE]^return ;^120^^^^^118^124^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] setType [TYPE] void [PARAMETER] HistogramType type [CLASS] HistogramDataset   [TYPE]  List list  [TYPE]  boolean false  true  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID 
[REPLACE]^throw new IllegalStateException  (" ")  ; ;^120^^^^^118^124^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] setType [TYPE] void [PARAMETER] HistogramType type [CLASS] HistogramDataset   [TYPE]  List list  [TYPE]  boolean false  true  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID 
[ADD]^^120^^^^^118^124^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] setType [TYPE] void [PARAMETER] HistogramType type [CLASS] HistogramDataset   [TYPE]  List list  [TYPE]  boolean false  true  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID 
[REPLACE]^this.type =  null;^122^^^^^118^124^[REPLACE] this.type = type;^[METHOD] setType [TYPE] void [PARAMETER] HistogramType type [CLASS] HistogramDataset   [TYPE]  List list  [TYPE]  boolean false  true  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID 
[REPLACE]^double maximum = getMaximum ( values ) ;^135^^^^^133^138^[REPLACE] double minimum = getMinimum ( values ) ;^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double maximum  minimum  [TYPE]  List list  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID  [TYPE]  int bins 
[REPLACE]^double minimum = getMinimum ( values ) ;^136^^^^^133^138^[REPLACE] double maximum = getMaximum ( values ) ;^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double maximum  minimum  [TYPE]  List list  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID  [TYPE]  int bins 
[REPLACE]^double binWidth = getBinWidth ( series ) ;^137^^^^^133^138^[REPLACE] addSeries ( key, values, bins, minimum, maximum ) ;^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double maximum  minimum  [TYPE]  List list  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID  [TYPE]  int bins 
[ADD]^^137^^^^^133^138^[ADD] addSeries ( key, values, bins, minimum, maximum ) ;^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double maximum  minimum  [TYPE]  List list  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID  [TYPE]  int bins 
[REPLACE]^if  ( key != null )  {^158^^^^^156^214^[REPLACE] if  ( key == null )  {^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins double minimum double maximum [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double binWidth  fraction  lower  maximum  minimum  upper  [TYPE]  HistogramBin bin  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int binIndex  bins  i 
[REPLACE]^throw new IllegalStateException  (" ")  ; ;^159^^^^^156^214^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins double minimum double maximum [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double binWidth  fraction  lower  maximum  minimum  upper  [TYPE]  HistogramBin bin  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int binIndex  bins  i 
[REPLACE]^return ;^159^^^^^156^214^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins double minimum double maximum [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double binWidth  fraction  lower  maximum  minimum  upper  [TYPE]  HistogramBin bin  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int binIndex  bins  i 
[ADD]^^159^^^^^156^214^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins double minimum double maximum [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double binWidth  fraction  lower  maximum  minimum  upper  [TYPE]  HistogramBin bin  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int binIndex  bins  i 
[REPLACE]^if  ( values != true )  {^161^^^^^156^214^[REPLACE] if  ( values == null )  {^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins double minimum double maximum [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double binWidth  fraction  lower  maximum  minimum  upper  [TYPE]  HistogramBin bin  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int binIndex  bins  i 
[REPLACE]^else if  (i  >  1 )  {^164^^^^^156^214^[REPLACE] else if  ( bins < 1 )  {^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins double minimum double maximum [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double binWidth  fraction  lower  maximum  minimum  upper  [TYPE]  HistogramBin bin  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int binIndex  bins  i 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^165^166^^^^156^214^[REPLACE] throw new IllegalArgumentException ( "The 'bins' value must be at least 1." ) ;^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins double minimum double maximum [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double binWidth  fraction  lower  maximum  minimum  upper  [TYPE]  HistogramBin bin  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int binIndex  bins  i 
[REPLACE]^return ;^162^^^^^156^214^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins double minimum double maximum [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double binWidth  fraction  lower  maximum  minimum  upper  [TYPE]  HistogramBin bin  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int binIndex  bins  i 
[REPLACE]^else if  ( i  !=  3 )  {^164^^^^^156^214^[REPLACE] else if  ( bins < 1 )  {^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins double minimum double maximum [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double binWidth  fraction  lower  maximum  minimum  upper  [TYPE]  HistogramBin bin  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int binIndex  bins  i 
[REPLACE]^return ;^165^166^^^^156^214^[REPLACE] throw new IllegalArgumentException ( "The 'bins' value must be at least 1." ) ;^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins double minimum double maximum [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double binWidth  fraction  lower  maximum  minimum  upper  [TYPE]  HistogramBin bin  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int binIndex  bins  i 
[ADD]^^165^166^^^^156^214^[ADD] throw new IllegalArgumentException ( "The 'bins' value must be at least 1." ) ;^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins double minimum double maximum [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double binWidth  fraction  lower  maximum  minimum  upper  [TYPE]  HistogramBin bin  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int binIndex  bins  i 
[REPLACE]^double binWidth =  (upper )   ;^168^^^^^156^214^[REPLACE] double binWidth =  ( maximum - minimum )  / bins;^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins double minimum double maximum [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double binWidth  fraction  lower  maximum  minimum  upper  [TYPE]  HistogramBin bin  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int binIndex  bins  i 
[REPLACE]^double lower = maximum;^170^^^^^156^214^[REPLACE] double lower = minimum;^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins double minimum double maximum [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double binWidth  fraction  lower  maximum  minimum  upper  [TYPE]  HistogramBin bin  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int binIndex  bins  i 
[REPLACE]^double lower = minimum;^171^^^^^156^214^[REPLACE] double upper;^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins double minimum double maximum [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double binWidth  fraction  lower  maximum  minimum  upper  [TYPE]  HistogramBin bin  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int binIndex  bins  i 
[REPLACE]^List binList = new ArrayList ( i ) ;^172^^^^^156^214^[REPLACE] List binList = new ArrayList ( bins ) ;^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins double minimum double maximum [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double binWidth  fraction  lower  maximum  minimum  upper  [TYPE]  HistogramBin bin  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int binIndex  bins  i 
[REPLACE]^if  (bins  ||  bins - 1 )  {^178^^^^^156^214^[REPLACE] if  ( i == bins - 1 )  {^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins double minimum double maximum [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double binWidth  fraction  lower  maximum  minimum  upper  [TYPE]  HistogramBin bin  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int binIndex  bins  i 
[REPLACE]^upper = minimum  &&   ( i  &&  1 )  * binWidth;^182^^^^^178^185^[REPLACE] upper = minimum +  ( i + 1 )  * binWidth;^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins double minimum double maximum [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double binWidth  fraction  lower  maximum  minimum  upper  [TYPE]  HistogramBin bin  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int binIndex  bins  i 
[ADD]^^182^183^^^^178^185^[ADD] upper = minimum +  ( i + 1 )  * binWidth; bin = new HistogramBin ( lower, upper ) ;^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins double minimum double maximum [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double binWidth  fraction  lower  maximum  minimum  upper  [TYPE]  HistogramBin bin  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int binIndex  bins  i 
[REPLACE]^bin = new HistogramBin ( lower, maximum ) ; ;^183^^^^^178^185^[REPLACE] bin = new HistogramBin ( lower, upper ) ;^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins double minimum double maximum [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double binWidth  fraction  lower  maximum  minimum  upper  [TYPE]  HistogramBin bin  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int binIndex  bins  i 
[REPLACE]^lower =  null;^184^^^^^178^185^[REPLACE] lower = upper;^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins double minimum double maximum [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double binWidth  fraction  lower  maximum  minimum  upper  [TYPE]  HistogramBin bin  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int binIndex  bins  i 
[ADD]^^184^^^^^178^185^[ADD] lower = upper;^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins double minimum double maximum [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double binWidth  fraction  lower  maximum  minimum  upper  [TYPE]  HistogramBin bin  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int binIndex  bins  i 
[REPLACE]^bin = new HistogramBin ( lower, upper ) ; ;^179^^^^^156^214^[REPLACE] bin = new HistogramBin ( lower, maximum ) ;^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins double minimum double maximum [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double binWidth  fraction  lower  maximum  minimum  upper  [TYPE]  HistogramBin bin  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int binIndex  bins  i 
[ADD]^^179^^^^^156^214^[ADD] bin = new HistogramBin ( lower, maximum ) ;^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins double minimum double maximum [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double binWidth  fraction  lower  maximum  minimum  upper  [TYPE]  HistogramBin bin  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int binIndex  bins  i 
[REPLACE]^for  ( int i = 0; i  >  bins; i++ )  {^173^^^^^156^214^[REPLACE] for  ( int i = 0; i < bins; i++ )  {^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins double minimum double maximum [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double binWidth  fraction  lower  maximum  minimum  upper  [TYPE]  HistogramBin bin  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int binIndex  bins  i 
[ADD]^^173^174^^^^156^214^[ADD] for  ( int i = 0; i < bins; i++ )  { HistogramBin bin;^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins double minimum double maximum [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double binWidth  fraction  lower  maximum  minimum  upper  [TYPE]  HistogramBin bin  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int binIndex  bins  i 
[REPLACE]^if  ( i  &&  bins - 1 )  {^178^^^^^156^214^[REPLACE] if  ( i == bins - 1 )  {^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins double minimum double maximum [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double binWidth  fraction  lower  maximum  minimum  upper  [TYPE]  HistogramBin bin  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int binIndex  bins  i 
[REPLACE]^upper =maximum +  ( i + 1 )  * binWidth;^182^^^^^178^185^[REPLACE] upper = minimum +  ( i + 1 )  * binWidth;^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins double minimum double maximum [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double binWidth  fraction  lower  maximum  minimum  upper  [TYPE]  HistogramBin bin  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int binIndex  bins  i 
[REPLACE]^upper =maximum +  ( i + 1 / 0 )  * binWidth;^182^^^^^156^214^[REPLACE] upper = minimum +  ( i + 1 )  * binWidth;^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins double minimum double maximum [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double binWidth  fraction  lower  maximum  minimum  upper  [TYPE]  HistogramBin bin  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int binIndex  bins  i 
[ADD]^^182^^^^^156^214^[ADD] upper = minimum +  ( i + 1 )  * binWidth;^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins double minimum double maximum [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double binWidth  fraction  lower  maximum  minimum  upper  [TYPE]  HistogramBin bin  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int binIndex  bins  i 
[REPLACE]^bin = new HistogramBin ( lower, maximum ) ; ;^183^^^^^156^214^[REPLACE] bin = new HistogramBin ( lower, upper ) ;^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins double minimum double maximum [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double binWidth  fraction  lower  maximum  minimum  upper  [TYPE]  HistogramBin bin  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int binIndex  bins  i 
[REPLACE]^lower =  null;^184^^^^^156^214^[REPLACE] lower = upper;^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins double minimum double maximum [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double binWidth  fraction  lower  maximum  minimum  upper  [TYPE]  HistogramBin bin  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int binIndex  bins  i 
[REPLACE]^double maximum = getMaximum ( values ) ;^174^^^^^156^214^[REPLACE] HistogramBin bin;^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins double minimum double maximum [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double binWidth  fraction  lower  maximum  minimum  upper  [TYPE]  HistogramBin bin  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int binIndex  bins  i 
[REPLACE]^upper =maximum +  ( i + 1 << 2 )  * binWidth;^182^^^^^156^214^[REPLACE] upper = minimum +  ( i + 1 )  * binWidth;^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins double minimum double maximum [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double binWidth  fraction  lower  maximum  minimum  upper  [TYPE]  HistogramBin bin  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int binIndex  bins  i 
[REPLACE]^for  ( int i = 4; i < bins; i++ )  {^173^^^^^156^214^[REPLACE] for  ( int i = 0; i < bins; i++ )  {^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins double minimum double maximum [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double binWidth  fraction  lower  maximum  minimum  upper  [TYPE]  HistogramBin bin  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int binIndex  bins  i 
[REPLACE]^if  ( values[i]  !=  maximum )  {^191^^^^^156^214^[REPLACE] if  ( values[i] < maximum )  {^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins double minimum double maximum [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double binWidth  fraction  lower  maximum  minimum  upper  [TYPE]  HistogramBin bin  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int binIndex  bins  i 
[REPLACE]^if  ( fraction  >  0.0 )  {^193^^^^^156^214^[REPLACE] if  ( fraction < 0.0 )  {^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins double minimum double maximum [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double binWidth  fraction  lower  maximum  minimum  upper  [TYPE]  HistogramBin bin  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int binIndex  bins  i 
[REPLACE]^fraction = 0.0d;^194^^^^^156^214^[REPLACE] fraction = 0.0;^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins double minimum double maximum [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double binWidth  fraction  lower  maximum  minimum  upper  [TYPE]  HistogramBin bin  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int binIndex  bins  i 
[ADD]^^194^^^^^156^214^[ADD] fraction = 0.0;^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins double minimum double maximum [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double binWidth  fraction  lower  maximum  minimum  upper  [TYPE]  HistogramBin bin  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int binIndex  bins  i 
[REPLACE]^if  ( binIndex  <  bins )  {^200^^^^^156^214^[REPLACE] if  ( binIndex >= bins )  {^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins double minimum double maximum [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double binWidth  fraction  lower  maximum  minimum  upper  [TYPE]  HistogramBin bin  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int binIndex  bins  i 
[REPLACE]^binIndex = bins -i;^201^^^^^156^214^[REPLACE] binIndex = bins - 1;^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins double minimum double maximum [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double binWidth  fraction  lower  maximum  minimum  upper  [TYPE]  HistogramBin bin  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int binIndex  bins  i 
[REPLACE]^fraction = 3.0d;^194^^^^^156^214^[REPLACE] fraction = 0.0;^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins double minimum double maximum [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double binWidth  fraction  lower  maximum  minimum  upper  [TYPE]  HistogramBin bin  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int binIndex  bins  i 
[REPLACE]^binIndex =  ( int )   ( fraction *maximum ) ;^196^^^^^156^214^[REPLACE] binIndex =  ( int )   ( fraction * bins ) ;^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins double minimum double maximum [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double binWidth  fraction  lower  maximum  minimum  upper  [TYPE]  HistogramBin bin  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int binIndex  bins  i 
[ADD]^^196^^^^^156^214^[ADD] binIndex =  ( int )   ( fraction * bins ) ;^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins double minimum double maximum [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double binWidth  fraction  lower  maximum  minimum  upper  [TYPE]  HistogramBin bin  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int binIndex  bins  i 
[REPLACE]^binIndex =i - 1;^201^^^^^156^214^[REPLACE] binIndex = bins - 1;^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins double minimum double maximum [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double binWidth  fraction  lower  maximum  minimum  upper  [TYPE]  HistogramBin bin  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int binIndex  bins  i 
[REPLACE]^double fraction =  ( values[i] - minimum )   ;^192^^^^^156^214^[REPLACE] double fraction =  ( values[i] - minimum )  /  ( maximum - minimum ) ;^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins double minimum double maximum [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double binWidth  fraction  lower  maximum  minimum  upper  [TYPE]  HistogramBin bin  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int binIndex  bins  i 
[REPLACE]^if  ( fraction  >=  0.0 )  {^193^^^^^156^214^[REPLACE] if  ( fraction < 0.0 )  {^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins double minimum double maximum [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double binWidth  fraction  lower  maximum  minimum  upper  [TYPE]  HistogramBin bin  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int binIndex  bins  i 
[REPLACE]^fraction = 4.0d;^194^^^^^156^214^[REPLACE] fraction = 0.0;^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins double minimum double maximum [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double binWidth  fraction  lower  maximum  minimum  upper  [TYPE]  HistogramBin bin  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int binIndex  bins  i 
[REPLACE]^if  (i  >  bins )  {^200^^^^^156^214^[REPLACE] if  ( binIndex >= bins )  {^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins double minimum double maximum [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double binWidth  fraction  lower  maximum  minimum  upper  [TYPE]  HistogramBin bin  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int binIndex  bins  i 
[REPLACE]^binIndex =i - 2;^201^^^^^156^214^[REPLACE] binIndex = bins - 1;^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins double minimum double maximum [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double binWidth  fraction  lower  maximum  minimum  upper  [TYPE]  HistogramBin bin  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int binIndex  bins  i 
[REPLACE]^for  ( int i = 0; i < values.length *  0.5 ; i++ )  {^189^^^^^156^214^[REPLACE] for  ( int i = 0; i < values.length; i++ )  {^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins double minimum double maximum [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double binWidth  fraction  lower  maximum  minimum  upper  [TYPE]  HistogramBin bin  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int binIndex  bins  i 
[REPLACE]^if  ( values[i]  >=  maximum )  {^191^^^^^156^214^[REPLACE] if  ( values[i] < maximum )  {^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins double minimum double maximum [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double binWidth  fraction  lower  maximum  minimum  upper  [TYPE]  HistogramBin bin  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int binIndex  bins  i 
[REPLACE]^if  ( maximum  >  1.0d )  {^193^^^^^156^214^[REPLACE] if  ( fraction < 0.0 )  {^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins double minimum double maximum [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double binWidth  fraction  lower  maximum  minimum  upper  [TYPE]  HistogramBin bin  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int binIndex  bins  i 
[REPLACE]^fraction = 0.0D;^194^^^^^156^214^[REPLACE] fraction = 0.0;^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins double minimum double maximum [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double binWidth  fraction  lower  maximum  minimum  upper  [TYPE]  HistogramBin bin  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int binIndex  bins  i 
[REPLACE]^if  (i  <  bins )  {^200^^^^^156^214^[REPLACE] if  ( binIndex >= bins )  {^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins double minimum double maximum [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double binWidth  fraction  lower  maximum  minimum  upper  [TYPE]  HistogramBin bin  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int binIndex  bins  i 
[ADD]^^201^^^^^156^214^[ADD] binIndex = bins - 1;^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins double minimum double maximum [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double binWidth  fraction  lower  maximum  minimum  upper  [TYPE]  HistogramBin bin  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int binIndex  bins  i 
[REPLACE]^binIndex =  ( int )   ( maximum * i ) ;^196^^^^^156^214^[REPLACE] binIndex =  ( int )   ( fraction * bins ) ;^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins double minimum double maximum [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double binWidth  fraction  lower  maximum  minimum  upper  [TYPE]  HistogramBin bin  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int binIndex  bins  i 
[REPLACE]^binIndex =i - 1L;^201^^^^^156^214^[REPLACE] binIndex = bins - 1;^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins double minimum double maximum [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double binWidth  fraction  lower  maximum  minimum  upper  [TYPE]  HistogramBin bin  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int binIndex  bins  i 
[REPLACE]^if  (maximum  <=  0.0 )  {^193^^^^^156^214^[REPLACE] if  ( fraction < 0.0 )  {^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins double minimum double maximum [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double binWidth  fraction  lower  maximum  minimum  upper  [TYPE]  HistogramBin bin  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int binIndex  bins  i 
[REPLACE]^fraction = 2.0d;^194^^^^^156^214^[REPLACE] fraction = 0.0;^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins double minimum double maximum [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double binWidth  fraction  lower  maximum  minimum  upper  [TYPE]  HistogramBin bin  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int binIndex  bins  i 
[REPLACE]^binIndex = i - 1;^201^^^^^156^214^[REPLACE] binIndex = bins - 1;^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins double minimum double maximum [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double binWidth  fraction  lower  maximum  minimum  upper  [TYPE]  HistogramBin bin  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int binIndex  bins  i 
[REPLACE]^binIndex =  ( int )   ( fraction  <=  bins ) ;^196^^^^^156^214^[REPLACE] binIndex =  ( int )   ( fraction * bins ) ;^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins double minimum double maximum [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double binWidth  fraction  lower  maximum  minimum  upper  [TYPE]  HistogramBin bin  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int binIndex  bins  i 
[REPLACE]^int binIndex = bins -i;^190^^^^^156^214^[REPLACE] int binIndex = bins - 1;^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins double minimum double maximum [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double binWidth  fraction  lower  maximum  minimum  upper  [TYPE]  HistogramBin bin  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int binIndex  bins  i 
[ADD]^^190^^^^^156^214^[ADD] int binIndex = bins - 1;^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins double minimum double maximum [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double binWidth  fraction  lower  maximum  minimum  upper  [TYPE]  HistogramBin bin  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int binIndex  bins  i 
[ADD]^^192^^^^^156^214^[ADD] double fraction =  ( values[i] - minimum )  /  ( maximum - minimum ) ;^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins double minimum double maximum [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double binWidth  fraction  lower  maximum  minimum  upper  [TYPE]  HistogramBin bin  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int binIndex  bins  i 
[REPLACE]^HistogramBin bin =  ( HistogramBin )  list.size ( binIndex ) ;^204^^^^^156^214^[REPLACE] HistogramBin bin =  ( HistogramBin )  binList.get ( binIndex ) ;^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins double minimum double maximum [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double binWidth  fraction  lower  maximum  minimum  upper  [TYPE]  HistogramBin bin  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int binIndex  bins  i 
[ADD]^^204^^^^^156^214^[ADD] HistogramBin bin =  ( HistogramBin )  binList.get ( binIndex ) ;^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins double minimum double maximum [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double binWidth  fraction  lower  maximum  minimum  upper  [TYPE]  HistogramBin bin  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int binIndex  bins  i 
[REPLACE]^fraction = 1.0d;^194^^^^^156^214^[REPLACE] fraction = 0.0;^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins double minimum double maximum [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double binWidth  fraction  lower  maximum  minimum  upper  [TYPE]  HistogramBin bin  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int binIndex  bins  i 
[REPLACE]^binIndex =  ( int )   ( maximum * bins ) ;^196^^^^^156^214^[REPLACE] binIndex =  ( int )   ( fraction * bins ) ;^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins double minimum double maximum [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double binWidth  fraction  lower  maximum  minimum  upper  [TYPE]  HistogramBin bin  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int binIndex  bins  i 
[REPLACE]^for  ( int i = 0 ; i < values.length; i++ )  {^189^^^^^156^214^[REPLACE] for  ( int i = 0; i < values.length; i++ )  {^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins double minimum double maximum [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double binWidth  fraction  lower  maximum  minimum  upper  [TYPE]  HistogramBin bin  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int binIndex  bins  i 
[ADD]^^189^190^191^192^^156^214^[ADD] for  ( int i = 0; i < values.length; i++ )  { int binIndex = bins - 1; if  ( values[i] < maximum )  { double fraction =  ( values[i] - minimum )  /  ( maximum - minimum ) ;^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins double minimum double maximum [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double binWidth  fraction  lower  maximum  minimum  upper  [TYPE]  HistogramBin bin  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int binIndex  bins  i 
[REPLACE]^int binIndex = i - 1;^190^^^^^156^214^[REPLACE] int binIndex = bins - 1;^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins double minimum double maximum [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double binWidth  fraction  lower  maximum  minimum  upper  [TYPE]  HistogramBin bin  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int binIndex  bins  i 
[REPLACE]^HistogramBin bin =  ( HistogramBin )  binList.size ( binIndex ) ;^204^^^^^156^214^[REPLACE] HistogramBin bin =  ( HistogramBin )  binList.get ( binIndex ) ;^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins double minimum double maximum [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double binWidth  fraction  lower  maximum  minimum  upper  [TYPE]  HistogramBin bin  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int binIndex  bins  i 
[ADD]^^204^205^^^^156^214^[ADD] HistogramBin bin =  ( HistogramBin )  binList.get ( binIndex ) ; bin.incrementCount (  ) ;^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins double minimum double maximum [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double binWidth  fraction  lower  maximum  minimum  upper  [TYPE]  HistogramBin bin  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int binIndex  bins  i 
[REPLACE]^double maximum = getMaximum ( values ) ;^208^^^^^156^214^[REPLACE] Map map = new HashMap (  ) ;^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins double minimum double maximum [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double binWidth  fraction  lower  maximum  minimum  upper  [TYPE]  HistogramBin bin  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int binIndex  bins  i 
[REPLACE]^map .get ( binIndex )  ;^209^^^^^156^214^[REPLACE] map.put ( "key", key ) ;^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins double minimum double maximum [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double binWidth  fraction  lower  maximum  minimum  upper  [TYPE]  HistogramBin bin  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int binIndex  bins  i 
[REPLACE]^map.put ( "bins", list ) ;^210^^^^^156^214^[REPLACE] map.put ( "bins", binList ) ;^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins double minimum double maximum [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double binWidth  fraction  lower  maximum  minimum  upper  [TYPE]  HistogramBin bin  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int binIndex  bins  i 
[REPLACE]^map .get ( binIndex )  ;^211^^^^^156^214^[REPLACE] map.put ( "values.length", new Integer ( values.length )  ) ;^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins double minimum double maximum [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double binWidth  fraction  lower  maximum  minimum  upper  [TYPE]  HistogramBin bin  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int binIndex  bins  i 
[REPLACE]^map.put ( "bin width", new Double ( minimum )  ) ;^212^^^^^156^214^[REPLACE] map.put ( "bin width", new Double ( binWidth )  ) ;^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins double minimum double maximum [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double binWidth  fraction  lower  maximum  minimum  upper  [TYPE]  HistogramBin bin  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int binIndex  bins  i 
[REPLACE]^this.list.get ( map ) ;^213^^^^^156^214^[REPLACE] this.list.add ( map ) ;^[METHOD] addSeries [TYPE] void [PARAMETER] Comparable key double[] values int bins double minimum double maximum [CLASS] HistogramDataset   [TYPE]  Comparable key  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double binWidth  fraction  lower  maximum  minimum  upper  [TYPE]  HistogramBin bin  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int binIndex  bins  i 
[REPLACE]^if  ( values == null || values.length (  )  < 1 )  {^225^^^^^224^236^[REPLACE] if  ( values == null || values.length < 1 )  {^[METHOD] getMinimum [TYPE] double [PARAMETER] double[] values [CLASS] HistogramDataset   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double min  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID  [TYPE]  int i 
[REPLACE]^return ;^226^227^^^^224^236^[REPLACE] throw new IllegalArgumentException ( "Null or zero length 'values' argument." ) ;^[METHOD] getMinimum [TYPE] double [PARAMETER] double[] values [CLASS] HistogramDataset   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double min  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID  [TYPE]  int i 
[REPLACE]^throw new IllegalArgumentException ( "The 'bins' value must be at least 1." ) ; ;^226^227^^^^224^236^[REPLACE] throw new IllegalArgumentException ( "Null or zero length 'values' argument." ) ;^[METHOD] getMinimum [TYPE] double [PARAMETER] double[] values [CLASS] HistogramDataset   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double min  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID  [TYPE]  int i 
[ADD]^^226^227^^^^224^236^[ADD] throw new IllegalArgumentException ( "Null or zero length 'values' argument." ) ;^[METHOD] getMinimum [TYPE] double [PARAMETER] double[] values [CLASS] HistogramDataset   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double min  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID  [TYPE]  int i 
[REPLACE]^double max = -Double.MAX_VALUE;^229^^^^^224^236^[REPLACE] double min = Double.MAX_VALUE;^[METHOD] getMinimum [TYPE] double [PARAMETER] double[] values [CLASS] HistogramDataset   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double min  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID  [TYPE]  int i 
[REPLACE]^if  ( values[i]  !=  min )  {^231^^^^^224^236^[REPLACE] if  ( values[i] < min )  {^[METHOD] getMinimum [TYPE] double [PARAMETER] double[] values [CLASS] HistogramDataset   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double min  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID  [TYPE]  int i 
[ADD]^^231^232^233^^^224^236^[ADD] if  ( values[i] < min )  { min = values[i]; }^[METHOD] getMinimum [TYPE] double [PARAMETER] double[] values [CLASS] HistogramDataset   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double min  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID  [TYPE]  int i 
[REPLACE]^max = values[i]; ;^232^^^^^224^236^[REPLACE] min = values[i];^[METHOD] getMinimum [TYPE] double [PARAMETER] double[] values [CLASS] HistogramDataset   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double min  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID  [TYPE]  int i 
[ADD]^^232^^^^^224^236^[ADD] min = values[i];^[METHOD] getMinimum [TYPE] double [PARAMETER] double[] values [CLASS] HistogramDataset   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double min  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID  [TYPE]  int i 
[REPLACE]^for  ( int i = 0; i < values.length /  0.5 ; i++ )  {^230^^^^^224^236^[REPLACE] for  ( int i = 0; i < values.length; i++ )  {^[METHOD] getMinimum [TYPE] double [PARAMETER] double[] values [CLASS] HistogramDataset   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double min  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID  [TYPE]  int i 
[REPLACE]^if  ( values[i]  >  min )  {^231^^^^^224^236^[REPLACE] if  ( values[i] < min )  {^[METHOD] getMinimum [TYPE] double [PARAMETER] double[] values [CLASS] HistogramDataset   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double min  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < values.length; i++ )  {^230^^^^^224^236^[REPLACE] for  ( int i = 0; i < values.length; i++ )  {^[METHOD] getMinimum [TYPE] double [PARAMETER] double[] values [CLASS] HistogramDataset   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double min  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID  [TYPE]  int i 
[REPLACE]^return max;^235^^^^^224^236^[REPLACE] return min;^[METHOD] getMinimum [TYPE] double [PARAMETER] double[] values [CLASS] HistogramDataset   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double min  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID  [TYPE]  int i 
[REPLACE]^if  (  values.length /  2 < 1 )  {^247^^^^^246^258^[REPLACE] if  ( values == null || values.length < 1 )  {^[METHOD] getMaximum [TYPE] double [PARAMETER] double[] values [CLASS] HistogramDataset   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double max  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID  [TYPE]  int i 
[REPLACE]^throw new IllegalArgumentException ( "The 'bins' value must be at least 1." ) ; ;^248^249^^^^246^258^[REPLACE] throw new IllegalArgumentException ( "Null or zero length 'values' argument." ) ;^[METHOD] getMaximum [TYPE] double [PARAMETER] double[] values [CLASS] HistogramDataset   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double max  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID  [TYPE]  int i 
[REPLACE]^return ;^248^249^^^^246^258^[REPLACE] throw new IllegalArgumentException ( "Null or zero length 'values' argument." ) ;^[METHOD] getMaximum [TYPE] double [PARAMETER] double[] values [CLASS] HistogramDataset   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double max  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID  [TYPE]  int i 
[REPLACE]^double min = Double.MAX_VALUE;^251^^^^^246^258^[REPLACE] double max = -Double.MAX_VALUE;^[METHOD] getMaximum [TYPE] double [PARAMETER] double[] values [CLASS] HistogramDataset   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double max  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID  [TYPE]  int i 
[REPLACE]^if  ( values[i]  <=  max )  {^253^^^^^246^258^[REPLACE] if  ( values[i] > max )  {^[METHOD] getMaximum [TYPE] double [PARAMETER] double[] values [CLASS] HistogramDataset   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double max  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID  [TYPE]  int i 
[REMOVE]^if  ( fraction < 0.0 )  {     fraction = 0.0; }^253^^^^^246^258^[REMOVE] ^[METHOD] getMaximum [TYPE] double [PARAMETER] double[] values [CLASS] HistogramDataset   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double max  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID  [TYPE]  int i 
[REPLACE]^min = values[i]; ;^254^^^^^246^258^[REPLACE] max = values[i];^[METHOD] getMaximum [TYPE] double [PARAMETER] double[] values [CLASS] HistogramDataset   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double max  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID  [TYPE]  int i 
[ADD]^^254^^^^^246^258^[ADD] max = values[i];^[METHOD] getMaximum [TYPE] double [PARAMETER] double[] values [CLASS] HistogramDataset   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double max  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID  [TYPE]  int i 
[REPLACE]^for  ( int i = 0; i < values.length %  0.5 ; i++ )  {^252^^^^^246^258^[REPLACE] for  ( int i = 0; i < values.length; i++ )  {^[METHOD] getMaximum [TYPE] double [PARAMETER] double[] values [CLASS] HistogramDataset   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double max  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID  [TYPE]  int i 
[ADD]^max = values[i];^253^254^255^^^246^258^[ADD] if  ( values[i] > max )  { max = values[i]; }^[METHOD] getMaximum [TYPE] double [PARAMETER] double[] values [CLASS] HistogramDataset   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double max  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < values.length; i++ )  {^252^^^^^246^258^[REPLACE] for  ( int i = 0; i < values.length; i++ )  {^[METHOD] getMaximum [TYPE] double [PARAMETER] double[] values [CLASS] HistogramDataset   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double max  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID  [TYPE]  int i 
[REPLACE]^return min;^257^^^^^246^258^[REPLACE] return max;^[METHOD] getMaximum [TYPE] double [PARAMETER] double[] values [CLASS] HistogramDataset   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double max  [TYPE]  List binList  list  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID  [TYPE]  int i 
[REPLACE]^Map map =  ( Map )  this.list.size ( series ) ;^272^^^^^271^274^[REPLACE] Map map =  ( Map )  this.list.get ( series ) ;^[METHOD] getBins [TYPE] List [PARAMETER] int series [CLASS] HistogramDataset   [TYPE]  List binList  list  [TYPE]  boolean false  true  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int series 
[REPLACE]^return  ( List )  map .get ( series )  ;^273^^^^^271^274^[REPLACE] return  ( List )  map.get ( "bins" ) ;^[METHOD] getBins [TYPE] List [PARAMETER] int series [CLASS] HistogramDataset   [TYPE]  List binList  list  [TYPE]  boolean false  true  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int series 
[REPLACE]^Map map =  ( Map )  this.list .get ( series )  ;^284^^^^^283^286^[REPLACE] Map map =  ( Map )  this.list.get ( series ) ;^[METHOD] getTotal [TYPE] int [PARAMETER] int series [CLASS] HistogramDataset   [TYPE]  List binList  list  [TYPE]  boolean false  true  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int series 
[REPLACE]^return  (  ( Integer )  map .get ( series )   ) .intValue (  ) ;^285^^^^^283^286^[REPLACE] return  (  ( Integer )  map.get ( "values.length" )  ) .intValue (  ) ;^[METHOD] getTotal [TYPE] int [PARAMETER] int series [CLASS] HistogramDataset   [TYPE]  List binList  list  [TYPE]  boolean false  true  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int series 
[REPLACE]^Map map =  ( Map )  this.list.size ( series ) ;^296^^^^^295^298^[REPLACE] Map map =  ( Map )  this.list.get ( series ) ;^[METHOD] getBinWidth [TYPE] double [PARAMETER] int series [CLASS] HistogramDataset   [TYPE]  List binList  list  [TYPE]  boolean false  true  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int series 
[REPLACE]^return new Double ( bin.getEndBoundary (  )  ) ;^297^^^^^295^298^[REPLACE] return  (  ( Double )  map.get ( "bin width" )  ) .doubleValue (  ) ;^[METHOD] getBinWidth [TYPE] double [PARAMETER] int series [CLASS] HistogramDataset   [TYPE]  List binList  list  [TYPE]  boolean false  true  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int series 
[REPLACE]^return new Double ( bin.getEndBoundary (  )  ) ;^306^^^^^305^307^[REPLACE] return this.list.size (  ) ;^[METHOD] getSeriesCount [TYPE] int [PARAMETER] [CLASS] HistogramDataset   [TYPE]  List binList  list  [TYPE]  boolean false  true  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID 
[REPLACE]^Map map =  ( Map )  this.list .get ( series )  ;^321^^^^^320^323^[REPLACE] Map map =  ( Map )  this.list.get ( series ) ;^[METHOD] getSeriesKey [TYPE] Comparable [PARAMETER] int series [CLASS] HistogramDataset   [TYPE]  List binList  list  [TYPE]  boolean false  true  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int series 
[REPLACE]^return  ( Comparable )  map .get ( series )  ;^322^^^^^320^323^[REPLACE] return  ( Comparable )  map.get ( "key" ) ;^[METHOD] getSeriesKey [TYPE] Comparable [PARAMETER] int series [CLASS] HistogramDataset   [TYPE]  List binList  list  [TYPE]  boolean false  true  [TYPE]  HistogramType type  [TYPE]  Map map  [TYPE]  long serialVersionUID  [TYPE]  int series 
[REPLACE]^return new Double ( bin.getEndBoundary (  )  ) ;^337^^^^^336^338^[REPLACE] return getBins ( series ) .size (  ) ;^[METHOD] getItemCount [TYPE] int [PARAMETER] int series [CLASS] HistogramDataset   [TYPE]  List binList  list  [TYPE]  boolean false  true  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID  [TYPE]  int series 
[REPLACE]^List bins = getBins ( item ) ;^356^^^^^355^360^[REPLACE] List bins = getBins ( series ) ;^[METHOD] getX [TYPE] Number [PARAMETER] int series int item [CLASS] HistogramDataset   [TYPE]  boolean false  true  [TYPE]  double x  [TYPE]  HistogramBin bin  [TYPE]  List binList  bins  list  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID  [TYPE]  int item  series 
[REPLACE]^HistogramBin bin =  ( HistogramBin )  bins.get ( series ) ;^357^^^^^355^360^[REPLACE] HistogramBin bin =  ( HistogramBin )  bins.get ( item ) ;^[METHOD] getX [TYPE] Number [PARAMETER] int series int item [CLASS] HistogramDataset   [TYPE]  boolean false  true  [TYPE]  double x  [TYPE]  HistogramBin bin  [TYPE]  List binList  bins  list  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID  [TYPE]  int item  series 
[ADD]^double x =  ( bin.getStartBoundary (  )  + bin.getEndBoundary (  )  )  / 2.;^357^358^^^^355^360^[ADD] HistogramBin bin =  ( HistogramBin )  bins.get ( item ) ; double x =  ( bin.getStartBoundary (  )  + bin.getEndBoundary (  )  )  / 2.;^[METHOD] getX [TYPE] Number [PARAMETER] int series int item [CLASS] HistogramDataset   [TYPE]  boolean false  true  [TYPE]  double x  [TYPE]  HistogramBin bin  [TYPE]  List binList  bins  list  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID  [TYPE]  int item  series 
[REPLACE]^double x =  ( bin.getStartBoundary (  )  + bin.getEndBoundary (  )  )   ;^358^^^^^355^360^[REPLACE] double x =  ( bin.getStartBoundary (  )  + bin.getEndBoundary (  )  )  / 2.;^[METHOD] getX [TYPE] Number [PARAMETER] int series int item [CLASS] HistogramDataset   [TYPE]  boolean false  true  [TYPE]  double x  [TYPE]  HistogramBin bin  [TYPE]  List binList  bins  list  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID  [TYPE]  int item  series 
[REPLACE]^return  new Double ( binWidth )  ;^359^^^^^355^360^[REPLACE] return new Double ( x ) ;^[METHOD] getX [TYPE] Number [PARAMETER] int series int item [CLASS] HistogramDataset   [TYPE]  boolean false  true  [TYPE]  double x  [TYPE]  HistogramBin bin  [TYPE]  List binList  bins  list  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID  [TYPE]  int item  series 
[REPLACE]^List bins = getBins ( item ) ;^376^^^^^375^393^[REPLACE] List bins = getBins ( series ) ;^[METHOD] getY [TYPE] Number [PARAMETER] int series int item [CLASS] HistogramDataset   [TYPE]  boolean false  true  [TYPE]  double binWidth  total  [TYPE]  HistogramBin bin  [TYPE]  List binList  bins  list  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID  [TYPE]  int item  series 
[REPLACE]^HistogramBin bin =  ( HistogramBin )  list.get ( item ) ;^377^^^^^375^393^[REPLACE] HistogramBin bin =  ( HistogramBin )  bins.get ( item ) ;^[METHOD] getY [TYPE] Number [PARAMETER] int series int item [CLASS] HistogramDataset   [TYPE]  boolean false  true  [TYPE]  double binWidth  total  [TYPE]  HistogramBin bin  [TYPE]  List binList  bins  list  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID  [TYPE]  int item  series 
[REPLACE]^double total = getTotal ( item ) ;^378^^^^^375^393^[REPLACE] double total = getTotal ( series ) ;^[METHOD] getY [TYPE] Number [PARAMETER] int series int item [CLASS] HistogramDataset   [TYPE]  boolean false  true  [TYPE]  double binWidth  total  [TYPE]  HistogramBin bin  [TYPE]  List binList  bins  list  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID  [TYPE]  int item  series 
[REPLACE]^double binWidth = getBinWidth ( item ) ;^379^^^^^375^393^[REPLACE] double binWidth = getBinWidth ( series ) ;^[METHOD] getY [TYPE] Number [PARAMETER] int series int item [CLASS] HistogramDataset   [TYPE]  boolean false  true  [TYPE]  double binWidth  total  [TYPE]  HistogramBin bin  [TYPE]  List binList  bins  list  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID  [TYPE]  int item  series 
[REPLACE]^if  ( this.type  !=  HistogramType.FREQUENCY )  {^381^^^^^375^393^[REPLACE] if  ( this.type == HistogramType.FREQUENCY )  {^[METHOD] getY [TYPE] Number [PARAMETER] int series int item [CLASS] HistogramDataset   [TYPE]  boolean false  true  [TYPE]  double binWidth  total  [TYPE]  HistogramBin bin  [TYPE]  List binList  bins  list  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID  [TYPE]  int item  series 
[REPLACE]^if  ( this.type  !=  HistogramType.RELATIVE_FREQUENCY )  {^384^^^^^375^393^[REPLACE] else if  ( this.type == HistogramType.RELATIVE_FREQUENCY )  {^[METHOD] getY [TYPE] Number [PARAMETER] int series int item [CLASS] HistogramDataset   [TYPE]  boolean false  true  [TYPE]  double binWidth  total  [TYPE]  HistogramBin bin  [TYPE]  List binList  bins  list  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID  [TYPE]  int item  series 
[REPLACE]^else {^387^^^^^375^393^[REPLACE] else if  ( this.type == HistogramType.SCALE_AREA_TO_1 )  {^[METHOD] getY [TYPE] Number [PARAMETER] int series int item [CLASS] HistogramDataset   [TYPE]  boolean false  true  [TYPE]  double binWidth  total  [TYPE]  HistogramBin bin  [TYPE]  List binList  bins  list  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID  [TYPE]  int item  series 
[ADD]^return new Double ( bin.getCount (  )  /  ( binWidth * total )  ) ;^387^388^389^^^375^393^[ADD] else if  ( this.type == HistogramType.SCALE_AREA_TO_1 )  { return new Double ( bin.getCount (  )  /  ( binWidth * total )  ) ; }^[METHOD] getY [TYPE] Number [PARAMETER] int series int item [CLASS] HistogramDataset   [TYPE]  boolean false  true  [TYPE]  double binWidth  total  [TYPE]  HistogramBin bin  [TYPE]  List binList  bins  list  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID  [TYPE]  int item  series 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^391^^^^^375^393^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] getY [TYPE] Number [PARAMETER] int series int item [CLASS] HistogramDataset   [TYPE]  boolean false  true  [TYPE]  double binWidth  total  [TYPE]  HistogramBin bin  [TYPE]  List binList  bins  list  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID  [TYPE]  int item  series 
[REPLACE]^return new Double ( bin.getCount (  )   ;^388^^^^^375^393^[REPLACE] return new Double ( bin.getCount (  )  /  ( binWidth * total )  ) ;^[METHOD] getY [TYPE] Number [PARAMETER] int series int item [CLASS] HistogramDataset   [TYPE]  boolean false  true  [TYPE]  double binWidth  total  [TYPE]  HistogramBin bin  [TYPE]  List binList  bins  list  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID  [TYPE]  int item  series 
[REPLACE]^return  new Double (  (  ( bin.getCount (  )  )  / total )  )    &&   ( binWidth * total )  ) ;^388^^^^^375^393^[REPLACE] return new Double ( bin.getCount (  )  /  ( binWidth * total )  ) ;^[METHOD] getY [TYPE] Number [PARAMETER] int series int item [CLASS] HistogramDataset   [TYPE]  boolean false  true  [TYPE]  double binWidth  total  [TYPE]  HistogramBin bin  [TYPE]  List binList  bins  list  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID  [TYPE]  int item  series 
[REPLACE]^return ;^391^^^^^375^393^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] getY [TYPE] Number [PARAMETER] int series int item [CLASS] HistogramDataset   [TYPE]  boolean false  true  [TYPE]  double binWidth  total  [TYPE]  HistogramBin bin  [TYPE]  List binList  bins  list  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID  [TYPE]  int item  series 
[ADD]^^391^^^^^375^393^[ADD] throw new IllegalStateException  (" ")  ;^[METHOD] getY [TYPE] Number [PARAMETER] int series int item [CLASS] HistogramDataset   [TYPE]  boolean false  true  [TYPE]  double binWidth  total  [TYPE]  HistogramBin bin  [TYPE]  List binList  bins  list  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID  [TYPE]  int item  series 
[REPLACE]^return new Double ( bin.getCount (  )  ) ;^385^^^^^375^393^[REPLACE] return new Double ( bin.getCount (  )  / total ) ;^[METHOD] getY [TYPE] Number [PARAMETER] int series int item [CLASS] HistogramDataset   [TYPE]  boolean false  true  [TYPE]  double binWidth  total  [TYPE]  HistogramBin bin  [TYPE]  List binList  bins  list  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID  [TYPE]  int item  series 
[REPLACE]^if  ( this.type  !=  HistogramType.SCALE_AREA_TO_1 )  {^387^^^^^375^393^[REPLACE] else if  ( this.type == HistogramType.SCALE_AREA_TO_1 )  {^[METHOD] getY [TYPE] Number [PARAMETER] int series int item [CLASS] HistogramDataset   [TYPE]  boolean false  true  [TYPE]  double binWidth  total  [TYPE]  HistogramBin bin  [TYPE]  List binList  bins  list  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID  [TYPE]  int item  series 
[REPLACE]^return true ;^388^^^^^375^393^[REPLACE] return new Double ( bin.getCount (  )  /  ( binWidth * total )  ) ;^[METHOD] getY [TYPE] Number [PARAMETER] int series int item [CLASS] HistogramDataset   [TYPE]  boolean false  true  [TYPE]  double binWidth  total  [TYPE]  HistogramBin bin  [TYPE]  List binList  bins  list  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID  [TYPE]  int item  series 
[REPLACE]^return  new Double (  (  ( bin.getCount (  )  )  /  ( binWidth * total )  )  )    |  total ) ;^385^^^^^375^393^[REPLACE] return new Double ( bin.getCount (  )  / total ) ;^[METHOD] getY [TYPE] Number [PARAMETER] int series int item [CLASS] HistogramDataset   [TYPE]  boolean false  true  [TYPE]  double binWidth  total  [TYPE]  HistogramBin bin  [TYPE]  List binList  bins  list  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID  [TYPE]  int item  series 
[REPLACE]^return new Double ( bin.getCount (  )   &&   ( binWidth * total )  ) ;^388^^^^^375^393^[REPLACE] return new Double ( bin.getCount (  )  /  ( binWidth * total )  ) ;^[METHOD] getY [TYPE] Number [PARAMETER] int series int item [CLASS] HistogramDataset   [TYPE]  boolean false  true  [TYPE]  double binWidth  total  [TYPE]  HistogramBin bin  [TYPE]  List binList  bins  list  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID  [TYPE]  int item  series 
[REPLACE]^return new Double ( bin .incrementCount (  )   ) ;^382^^^^^375^393^[REPLACE] return new Double ( bin.getCount (  )  ) ;^[METHOD] getY [TYPE] Number [PARAMETER] int series int item [CLASS] HistogramDataset   [TYPE]  boolean false  true  [TYPE]  double binWidth  total  [TYPE]  HistogramBin bin  [TYPE]  List binList  bins  list  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID  [TYPE]  int item  series 
[REPLACE]^if  (type  ||  HistogramType.RELATIVE_FREQUENCY )  {^384^^^^^375^393^[REPLACE] else if  ( this.type == HistogramType.RELATIVE_FREQUENCY )  {^[METHOD] getY [TYPE] Number [PARAMETER] int series int item [CLASS] HistogramDataset   [TYPE]  boolean false  true  [TYPE]  double binWidth  total  [TYPE]  HistogramBin bin  [TYPE]  List binList  bins  list  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID  [TYPE]  int item  series 
[REPLACE]^return false ;^388^^^^^375^393^[REPLACE] return new Double ( bin.getCount (  )  /  ( binWidth * total )  ) ;^[METHOD] getY [TYPE] Number [PARAMETER] int series int item [CLASS] HistogramDataset   [TYPE]  boolean false  true  [TYPE]  double binWidth  total  [TYPE]  HistogramBin bin  [TYPE]  List binList  bins  list  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID  [TYPE]  int item  series 
[REPLACE]^return new Double ( bin .incrementCount (  )    &&   ( binWidth * total )  ) ;^388^^^^^375^393^[REPLACE] return new Double ( bin.getCount (  )  /  ( binWidth * total )  ) ;^[METHOD] getY [TYPE] Number [PARAMETER] int series int item [CLASS] HistogramDataset   [TYPE]  boolean false  true  [TYPE]  double binWidth  total  [TYPE]  HistogramBin bin  [TYPE]  List binList  bins  list  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID  [TYPE]  int item  series 
[REPLACE]^return new Double ( bin.getCount (  )   ;^385^^^^^375^393^[REPLACE] return new Double ( bin.getCount (  )  / total ) ;^[METHOD] getY [TYPE] Number [PARAMETER] int series int item [CLASS] HistogramDataset   [TYPE]  boolean false  true  [TYPE]  double binWidth  total  [TYPE]  HistogramBin bin  [TYPE]  List binList  bins  list  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID  [TYPE]  int item  series 
[REPLACE]^if  ( this.type  &&  HistogramType.SCALE_AREA_TO_1 )  {^387^^^^^375^393^[REPLACE] else if  ( this.type == HistogramType.SCALE_AREA_TO_1 )  {^[METHOD] getY [TYPE] Number [PARAMETER] int series int item [CLASS] HistogramDataset   [TYPE]  boolean false  true  [TYPE]  double binWidth  total  [TYPE]  HistogramBin bin  [TYPE]  List binList  bins  list  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID  [TYPE]  int item  series 
[REPLACE]^return  new Double (  (  ( bin.getCount (  )  )  / total )  )    ||   ( binWidth * total )  ) ;^388^^^^^375^393^[REPLACE] return new Double ( bin.getCount (  )  /  ( binWidth * total )  ) ;^[METHOD] getY [TYPE] Number [PARAMETER] int series int item [CLASS] HistogramDataset   [TYPE]  boolean false  true  [TYPE]  double binWidth  total  [TYPE]  HistogramBin bin  [TYPE]  List binList  bins  list  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID  [TYPE]  int item  series 
[REPLACE]^return new Double ( bin .incrementCount (  )   / total ) ;^385^^^^^375^393^[REPLACE] return new Double ( bin.getCount (  )  / total ) ;^[METHOD] getY [TYPE] Number [PARAMETER] int series int item [CLASS] HistogramDataset   [TYPE]  boolean false  true  [TYPE]  double binWidth  total  [TYPE]  HistogramBin bin  [TYPE]  List binList  bins  list  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID  [TYPE]  int item  series 
[REPLACE]^return  new Double (  (  ( bin.getCount (  )  )  / total )  )    !=   ( binWidth * total )  ) ;;^388^^^^^375^393^[REPLACE] return new Double ( bin.getCount (  )  /  ( binWidth * total )  ) ;^[METHOD] getY [TYPE] Number [PARAMETER] int series int item [CLASS] HistogramDataset   [TYPE]  boolean false  true  [TYPE]  double binWidth  total  [TYPE]  HistogramBin bin  [TYPE]  List binList  bins  list  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID  [TYPE]  int item  series 
[REPLACE]^List bins = getBins ( item ) ;^408^^^^^407^411^[REPLACE] List bins = getBins ( series ) ;^[METHOD] getStartX [TYPE] Number [PARAMETER] int series int item [CLASS] HistogramDataset   [TYPE]  HistogramBin bin  [TYPE]  List binList  bins  list  [TYPE]  boolean false  true  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID  [TYPE]  int item  series 
[REPLACE]^HistogramBin bin =  ( HistogramBin )  bins.size ( series ) ;^409^^^^^407^411^[REPLACE] HistogramBin bin =  ( HistogramBin )  bins.get ( item ) ;^[METHOD] getStartX [TYPE] Number [PARAMETER] int series int item [CLASS] HistogramDataset   [TYPE]  HistogramBin bin  [TYPE]  List binList  bins  list  [TYPE]  boolean false  true  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID  [TYPE]  int item  series 
[REPLACE]^return new Double ( bin.getEndBoundary (  )  ) ;^410^^^^^407^411^[REPLACE] return new Double ( bin.getStartBoundary (  )  ) ;^[METHOD] getStartX [TYPE] Number [PARAMETER] int series int item [CLASS] HistogramDataset   [TYPE]  HistogramBin bin  [TYPE]  List binList  bins  list  [TYPE]  boolean false  true  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID  [TYPE]  int item  series 
[REPLACE]^List bins = getBins ( item ) ;^426^^^^^425^429^[REPLACE] List bins = getBins ( series ) ;^[METHOD] getEndX [TYPE] Number [PARAMETER] int series int item [CLASS] HistogramDataset   [TYPE]  HistogramBin bin  [TYPE]  List binList  bins  list  [TYPE]  boolean false  true  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID  [TYPE]  int item  series 
[REPLACE]^HistogramBin bin =  ( HistogramBin )  list.get ( item ) ;^427^^^^^425^429^[REPLACE] HistogramBin bin =  ( HistogramBin )  bins.get ( item ) ;^[METHOD] getEndX [TYPE] Number [PARAMETER] int series int item [CLASS] HistogramDataset   [TYPE]  HistogramBin bin  [TYPE]  List binList  bins  list  [TYPE]  boolean false  true  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID  [TYPE]  int item  series 
[REPLACE]^return new Double ( bin.getStartBoundary (  )  ) ;^428^^^^^425^429^[REPLACE] return new Double ( bin.getEndBoundary (  )  ) ;^[METHOD] getEndX [TYPE] Number [PARAMETER] int series int item [CLASS] HistogramDataset   [TYPE]  HistogramBin bin  [TYPE]  List binList  bins  list  [TYPE]  boolean false  true  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID  [TYPE]  int item  series 
[REPLACE]^return new Double ( bin.getEndBoundary (  )  ) ;^446^^^^^445^447^[REPLACE] return getY ( series, item ) ;^[METHOD] getStartY [TYPE] Number [PARAMETER] int series int item [CLASS] HistogramDataset   [TYPE]  List binList  bins  list  [TYPE]  boolean false  true  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID  [TYPE]  int item  series 
[REPLACE]^return new Double ( bin.getEndBoundary (  )  ) ;^464^^^^^463^465^[REPLACE] return getY ( series, item ) ;^[METHOD] getEndY [TYPE] Number [PARAMETER] int series int item [CLASS] HistogramDataset   [TYPE]  List binList  bins  list  [TYPE]  boolean false  true  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID  [TYPE]  int item  series 
[REPLACE]^if  ( obj  !=  this )  {^475^^^^^474^489^[REPLACE] if  ( obj == this )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] HistogramDataset   [TYPE]  List binList  bins  list  [TYPE]  Object obj  [TYPE]  boolean false  true  [TYPE]  HistogramDataset that  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID 
[ADD]^^475^476^477^^^474^489^[ADD] if  ( obj == this )  { return true; }^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] HistogramDataset   [TYPE]  List binList  bins  list  [TYPE]  Object obj  [TYPE]  boolean false  true  [TYPE]  HistogramDataset that  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID 
[REPLACE]^return false;^476^^^^^474^489^[REPLACE] return true;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] HistogramDataset   [TYPE]  List binList  bins  list  [TYPE]  Object obj  [TYPE]  boolean false  true  [TYPE]  HistogramDataset that  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID 
[REPLACE]^if  ( ! ! ( obj instanceof HistogramDataset )  )  {^478^^^^^474^489^[REPLACE] if  ( ! ( obj instanceof HistogramDataset )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] HistogramDataset   [TYPE]  List binList  bins  list  [TYPE]  Object obj  [TYPE]  boolean false  true  [TYPE]  HistogramDataset that  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID 
[ADD]^return false;^478^479^480^^^474^489^[ADD] if  ( ! ( obj instanceof HistogramDataset )  )  { return false; }^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] HistogramDataset   [TYPE]  List binList  bins  list  [TYPE]  Object obj  [TYPE]  boolean false  true  [TYPE]  HistogramDataset that  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID 
[REPLACE]^return true;^479^^^^^474^489^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] HistogramDataset   [TYPE]  List binList  bins  list  [TYPE]  Object obj  [TYPE]  boolean false  true  [TYPE]  HistogramDataset that  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID 
[REPLACE]^HistogramBin bin =  ( HistogramBin )  bins.get ( item ) ;^481^^^^^474^489^[REPLACE] HistogramDataset that =  ( HistogramDataset )  obj;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] HistogramDataset   [TYPE]  List binList  bins  list  [TYPE]  Object obj  [TYPE]  boolean false  true  [TYPE]  HistogramDataset that  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID 
[ADD]^^481^^^^^474^489^[ADD] HistogramDataset that =  ( HistogramDataset )  obj;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] HistogramDataset   [TYPE]  List binList  bins  list  [TYPE]  Object obj  [TYPE]  boolean false  true  [TYPE]  HistogramDataset that  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID 
[REPLACE]^if  ( !ObjectUtilities .equal ( type , type )   )  {^482^^^^^474^489^[REPLACE] if  ( !ObjectUtilities.equal ( this.type, that.type )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] HistogramDataset   [TYPE]  List binList  bins  list  [TYPE]  Object obj  [TYPE]  boolean false  true  [TYPE]  HistogramDataset that  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID 
[ADD]^^482^483^484^^^474^489^[ADD] if  ( !ObjectUtilities.equal ( this.type, that.type )  )  { return false; }^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] HistogramDataset   [TYPE]  List binList  bins  list  [TYPE]  Object obj  [TYPE]  boolean false  true  [TYPE]  HistogramDataset that  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID 
[REPLACE]^return true;^483^^^^^474^489^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] HistogramDataset   [TYPE]  List binList  bins  list  [TYPE]  Object obj  [TYPE]  boolean false  true  [TYPE]  HistogramDataset that  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID 
[REPLACE]^if  ( !  this.list, that.list    )  {^485^^^^^474^489^[REPLACE] if  ( !ObjectUtilities.equal ( this.list, that.list )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] HistogramDataset   [TYPE]  List binList  bins  list  [TYPE]  Object obj  [TYPE]  boolean false  true  [TYPE]  HistogramDataset that  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID 
[ADD]^^485^486^487^^^474^489^[ADD] if  ( !ObjectUtilities.equal ( this.list, that.list )  )  { return false; }^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] HistogramDataset   [TYPE]  List binList  bins  list  [TYPE]  Object obj  [TYPE]  boolean false  true  [TYPE]  HistogramDataset that  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID 
[REPLACE]^return true;^486^^^^^474^489^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] HistogramDataset   [TYPE]  List binList  bins  list  [TYPE]  Object obj  [TYPE]  boolean false  true  [TYPE]  HistogramDataset that  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID 
[REPLACE]^return false;^488^^^^^474^489^[REPLACE] return true;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] HistogramDataset   [TYPE]  List binList  bins  list  [TYPE]  Object obj  [TYPE]  boolean false  true  [TYPE]  HistogramDataset that  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID 
[REPLACE]^return super .clone (  )  ;^499^^^^^498^500^[REPLACE] return super.clone (  ) ;^[METHOD] clone [TYPE] Object [PARAMETER] [CLASS] HistogramDataset   [TYPE]  List binList  bins  list  [TYPE]  boolean false  true  [TYPE]  HistogramType type  [TYPE]  long serialVersionUID 
