[REPLACE]^private static final long serialVersionUID  = null ;^34^^^^^^^[REPLACE] private static final long serialVersionUID = -98628754872287L;^ [CLASS] BasicYearDateTimeField  
[REPLACE]^private final BasicChronology iChronology;^37^^^^^^^[REPLACE] protected final BasicChronology iChronology;^ [CLASS] BasicYearDateTimeField  
[REPLACE]^super ( DateTimeFieldType.year (  ) , iChronology.getAverageMillisPerYear (  )  ) ;^45^^^^^44^47^[REPLACE] super ( DateTimeFieldType.year (  ) , chronology.getAverageMillisPerYear (  )  ) ;^[METHOD] <init> [TYPE] BasicChronology) [PARAMETER] BasicChronology chronology [CLASS] BasicYearDateTimeField   [TYPE]  long serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  boolean false  true 
[REPLACE]^int wrappedYear = FieldUtils.getWrappedValue ( thisYear, years, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^45^^^^^44^47^[REPLACE] super ( DateTimeFieldType.year (  ) , chronology.getAverageMillisPerYear (  )  ) ;^[METHOD] <init> [TYPE] BasicChronology) [PARAMETER] BasicChronology chronology [CLASS] BasicYearDateTimeField   [TYPE]  long serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  boolean false  true 
[REPLACE]^iChronology =  null;^46^^^^^44^47^[REPLACE] iChronology = chronology;^[METHOD] <init> [TYPE] BasicChronology) [PARAMETER] BasicChronology chronology [CLASS] BasicYearDateTimeField   [TYPE]  long serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  boolean false  true 
[REPLACE]^return true;^50^^^^^49^51^[REPLACE] return false;^[METHOD] isLenient [TYPE] boolean [PARAMETER] [CLASS] BasicYearDateTimeField   [TYPE]  long serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  boolean false  true 
[REPLACE]^return iChronology.getYearMillis ( instant ) ;^54^^^^^53^55^[REPLACE] return iChronology.getYear ( instant ) ;^[METHOD] get [TYPE] int [PARAMETER] long instant [CLASS] BasicYearDateTimeField   [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  boolean false  true 
[REPLACE]^if  ( thisYear  &&  3 )  {^58^^^^^57^64^[REPLACE] if  ( years == 0 )  {^[METHOD] add [TYPE] long [PARAMETER] long instant int years [CLASS] BasicYearDateTimeField   [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int newYear  thisYear  years 
[REPLACE]^return serialVersionUID;^59^^^^^57^64^[REPLACE] return instant;^[METHOD] add [TYPE] long [PARAMETER] long instant int years [CLASS] BasicYearDateTimeField   [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int newYear  thisYear  years 
[REPLACE]^int thisYear = get ( serialVersionUID ) ;^61^^^^^57^64^[REPLACE] int thisYear = get ( instant ) ;^[METHOD] add [TYPE] long [PARAMETER] long instant int years [CLASS] BasicYearDateTimeField   [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int newYear  thisYear  years 
[ADD]^^61^^^^^57^64^[ADD] int thisYear = get ( instant ) ;^[METHOD] add [TYPE] long [PARAMETER] long instant int years [CLASS] BasicYearDateTimeField   [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int newYear  thisYear  years 
[REPLACE]^int newYear = FieldUtils .safeToInt ( serialVersionUID )  ;^62^^^^^57^64^[REPLACE] int newYear = FieldUtils.safeAdd ( thisYear, years ) ;^[METHOD] add [TYPE] long [PARAMETER] long instant int years [CLASS] BasicYearDateTimeField   [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int newYear  thisYear  years 
[REPLACE]^return set ( instant, wrappedYear ) ;^63^^^^^57^64^[REPLACE] return set ( instant, newYear ) ;^[METHOD] add [TYPE] long [PARAMETER] long instant int years [CLASS] BasicYearDateTimeField   [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int newYear  thisYear  years 
[REPLACE]^return add ( instant,   serialVersionUID    ) ;^67^^^^^66^68^[REPLACE] return add ( instant, FieldUtils.safeToInt ( years )  ) ;^[METHOD] add [TYPE] long [PARAMETER] long instant long years [CLASS] BasicYearDateTimeField   [TYPE]  long instant  serialVersionUID  years  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  boolean false  true 
[REPLACE]^if  ( wrappedYear  !=  0 )  {^71^^^^^70^79^[REPLACE] if  ( years == 0 )  {^[METHOD] addWrapField [TYPE] long [PARAMETER] long instant int years [CLASS] BasicYearDateTimeField   [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  years  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int thisYear  wrappedYear  years 
[ADD]^return instant;^71^72^73^^^70^79^[ADD] if  ( years == 0 )  { return instant; }^[METHOD] addWrapField [TYPE] long [PARAMETER] long instant int years [CLASS] BasicYearDateTimeField   [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  years  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int thisYear  wrappedYear  years 
[REPLACE]^return years;^72^^^^^70^79^[REPLACE] return instant;^[METHOD] addWrapField [TYPE] long [PARAMETER] long instant int years [CLASS] BasicYearDateTimeField   [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  years  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int thisYear  wrappedYear  years 
[REPLACE]^int thisYear = iChronology.getYear ( years ) ;^75^^^^^70^79^[REPLACE] int thisYear = iChronology.getYear ( instant ) ;^[METHOD] addWrapField [TYPE] long [PARAMETER] long instant int years [CLASS] BasicYearDateTimeField   [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  years  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int thisYear  wrappedYear  years 
[ADD]^^75^^^^^70^79^[ADD] int thisYear = iChronology.getYear ( instant ) ;^[METHOD] addWrapField [TYPE] long [PARAMETER] long instant int years [CLASS] BasicYearDateTimeField   [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  years  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int thisYear  wrappedYear  years 
[REPLACE]^int wrappedYear = FieldUtils.getWrappedValue ( thisYear, wrappedYear, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^76^77^^^^70^79^[REPLACE] int wrappedYear = FieldUtils.getWrappedValue ( thisYear, years, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^[METHOD] addWrapField [TYPE] long [PARAMETER] long instant int years [CLASS] BasicYearDateTimeField   [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  years  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int thisYear  wrappedYear  years 
[REPLACE]^return set ( instant, years ) ;^78^^^^^70^79^[REPLACE] return set ( instant, wrappedYear ) ;^[METHOD] addWrapField [TYPE] long [PARAMETER] long instant int years [CLASS] BasicYearDateTimeField   [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  years  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int thisYear  wrappedYear  years 
[REPLACE]^FieldUtils .safeToInt ( years )   ) ;^82^83^^^^81^85^[REPLACE] FieldUtils.verifyValueBounds ( this, year, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^[METHOD] set [TYPE] long [PARAMETER] long instant int year [CLASS] BasicYearDateTimeField   [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  years  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int year 
[ADD]^^82^83^84^85^^81^85^[ADD] FieldUtils.verifyValueBounds ( this, year, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ; return iChronology.setYear ( instant, year ) ; }^[METHOD] set [TYPE] long [PARAMETER] long instant int year [CLASS] BasicYearDateTimeField   [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  years  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int year 
[REPLACE]^( this, year, iChronology .getMaxYear (  )  , iChronology.getMaxYear (  )  ) ;^83^^^^^81^85^[REPLACE] ( this, year, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^[METHOD] set [TYPE] long [PARAMETER] long instant int year [CLASS] BasicYearDateTimeField   [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  years  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int year 
[REPLACE]^( this, year, iChronology.getMinYear (  ) , iChronology.getMinYear (  )  ) ;^83^^^^^81^85^[REPLACE] ( this, year, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^[METHOD] set [TYPE] long [PARAMETER] long instant int year [CLASS] BasicYearDateTimeField   [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  years  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int year 
[REPLACE]^return iChronology.getYear ( instant ) ;^84^^^^^81^85^[REPLACE] return iChronology.setYear ( instant, year ) ;^[METHOD] set [TYPE] long [PARAMETER] long instant int year [CLASS] BasicYearDateTimeField   [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  years  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int year 
[REPLACE]^if  ( minuendInstant  >  subtrahendInstant )  {^88^^^^^87^92^[REPLACE] if  ( minuendInstant < subtrahendInstant )  {^[METHOD] getDifferenceAsLong [TYPE] long [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] BasicYearDateTimeField   [TYPE]  long instant  minuendInstant  serialVersionUID  subtrahendInstant  years  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  boolean false  true 
[REPLACE]^return -iChronology.getYear ( subtrahendInstant, minuendInstant ) ;^89^^^^^87^92^[REPLACE] return -iChronology.getYearDifference ( subtrahendInstant, minuendInstant ) ;^[METHOD] getDifferenceAsLong [TYPE] long [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] BasicYearDateTimeField   [TYPE]  long instant  minuendInstant  serialVersionUID  subtrahendInstant  years  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  boolean false  true 
[REPLACE]^return iChronology.setYear ( minuendInstant, subtrahendInstant ) ;^91^^^^^87^92^[REPLACE] return iChronology.getYearDifference ( minuendInstant, subtrahendInstant ) ;^[METHOD] getDifferenceAsLong [TYPE] long [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] BasicYearDateTimeField   [TYPE]  long instant  minuendInstant  serialVersionUID  subtrahendInstant  years  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  boolean false  true 
[REPLACE]^return this;^95^^^^^94^96^[REPLACE] return null;^[METHOD] getRangeDurationField [TYPE] DurationField [PARAMETER] [CLASS] BasicYearDateTimeField   [TYPE]  long instant  minuendInstant  serialVersionUID  subtrahendInstant  years  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  boolean false  true 
[REPLACE]^return iChronology.getYear ( get ( instant )  ) ;^99^^^^^98^100^[REPLACE] return iChronology.isLeapYear ( get ( instant )  ) ;^[METHOD] isLeap [TYPE] boolean [PARAMETER] long instant [CLASS] BasicYearDateTimeField   [TYPE]  long instant  minuendInstant  serialVersionUID  subtrahendInstant  years  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  boolean false  true 
[REPLACE]^if  ( iChronology.getYear ( get ( instant )  )  )  {^103^^^^^102^108^[REPLACE] if  ( iChronology.isLeapYear ( get ( instant )  )  )  {^[METHOD] getLeapAmount [TYPE] int [PARAMETER] long instant [CLASS] BasicYearDateTimeField   [TYPE]  long instant  minuendInstant  serialVersionUID  subtrahendInstant  years  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  boolean false  true 
[REPLACE]^return 3;^106^^^^^102^108^[REPLACE] return 0;^[METHOD] getLeapAmount [TYPE] int [PARAMETER] long instant [CLASS] BasicYearDateTimeField   [TYPE]  long instant  minuendInstant  serialVersionUID  subtrahendInstant  years  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  boolean false  true 
[REPLACE]^return 0;^104^^^^^102^108^[REPLACE] return 1;^[METHOD] getLeapAmount [TYPE] int [PARAMETER] long instant [CLASS] BasicYearDateTimeField   [TYPE]  long instant  minuendInstant  serialVersionUID  subtrahendInstant  years  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  boolean false  true 
[REPLACE]^return 4;^104^^^^^102^108^[REPLACE] return 1;^[METHOD] getLeapAmount [TYPE] int [PARAMETER] long instant [CLASS] BasicYearDateTimeField   [TYPE]  long instant  minuendInstant  serialVersionUID  subtrahendInstant  years  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  boolean false  true 
[REPLACE]^return 1;^106^^^^^102^108^[REPLACE] return 0;^[METHOD] getLeapAmount [TYPE] int [PARAMETER] long instant [CLASS] BasicYearDateTimeField   [TYPE]  long instant  minuendInstant  serialVersionUID  subtrahendInstant  years  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  boolean false  true 
[REPLACE]^return iChronology.year (  ) ;^111^^^^^110^112^[REPLACE] return iChronology.days (  ) ;^[METHOD] getLeapDurationField [TYPE] DurationField [PARAMETER] [CLASS] BasicYearDateTimeField   [TYPE]  long instant  minuendInstant  serialVersionUID  subtrahendInstant  years  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  boolean false  true 
[REPLACE]^return iChronology.year (  ) ;^115^^^^^114^116^[REPLACE] return iChronology.getMinYear (  ) ;^[METHOD] getMinimumValue [TYPE] int [PARAMETER] [CLASS] BasicYearDateTimeField   [TYPE]  long instant  minuendInstant  serialVersionUID  subtrahendInstant  years  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  boolean false  true 
[REPLACE]^return iChronology.getMinYear (  ) ;^119^^^^^118^120^[REPLACE] return iChronology.getMaxYear (  ) ;^[METHOD] getMaximumValue [TYPE] int [PARAMETER] [CLASS] BasicYearDateTimeField   [TYPE]  long instant  minuendInstant  serialVersionUID  subtrahendInstant  years  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  boolean false  true 
[REPLACE]^return iChronology.isLeapYearMillis ( get ( instant )  ) ;^123^^^^^122^124^[REPLACE] return iChronology.getYearMillis ( get ( instant )  ) ;^[METHOD] roundFloor [TYPE] long [PARAMETER] long instant [CLASS] BasicYearDateTimeField   [TYPE]  long instant  minuendInstant  serialVersionUID  subtrahendInstant  years  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  boolean false  true 
[REPLACE]^int year = get ( years ) ;^127^^^^^126^134^[REPLACE] int year = get ( instant ) ;^[METHOD] roundCeiling [TYPE] long [PARAMETER] long instant [CLASS] BasicYearDateTimeField   [TYPE]  boolean false  true  [TYPE]  long instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int year 
[REPLACE]^long yearStartMillis = iChronology.getYear ( year ) ;^128^^^^^126^134^[REPLACE] long yearStartMillis = iChronology.getYearMillis ( year ) ;^[METHOD] roundCeiling [TYPE] long [PARAMETER] long instant [CLASS] BasicYearDateTimeField   [TYPE]  boolean false  true  [TYPE]  long instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int year 
[REPLACE]^if  ( years  ==  yearStartMillis )  {^129^^^^^126^134^[REPLACE] if  ( instant != yearStartMillis )  {^[METHOD] roundCeiling [TYPE] long [PARAMETER] long instant [CLASS] BasicYearDateTimeField   [TYPE]  boolean false  true  [TYPE]  long instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int year 
[REMOVE]^if  ( minuendInstant < subtrahendInstant )  {     return - ( iChronology.getYearDifference ( subtrahendInstant, minuendInstant )  ) ; }^129^^^^^126^134^[REMOVE] ^[METHOD] roundCeiling [TYPE] long [PARAMETER] long instant [CLASS] BasicYearDateTimeField   [TYPE]  boolean false  true  [TYPE]  long instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int year 
[REPLACE]^instant = iChronology.getYearMillis ( year  >=  1 ) ;^131^^^^^126^134^[REPLACE] instant = iChronology.getYearMillis ( year + 1 ) ;^[METHOD] roundCeiling [TYPE] long [PARAMETER] long instant [CLASS] BasicYearDateTimeField   [TYPE]  boolean false  true  [TYPE]  long instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int year 
[REPLACE]^instant = iChronology.getYearMillis ( year  ^  4 ) ;^131^^^^^126^134^[REPLACE] instant = iChronology.getYearMillis ( year + 1 ) ;^[METHOD] roundCeiling [TYPE] long [PARAMETER] long instant [CLASS] BasicYearDateTimeField   [TYPE]  boolean false  true  [TYPE]  long instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int year 
[REPLACE]^return yearStartMillis;^133^^^^^126^134^[REPLACE] return instant;^[METHOD] roundCeiling [TYPE] long [PARAMETER] long instant [CLASS] BasicYearDateTimeField   [TYPE]  boolean false  true  [TYPE]  long instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  int year 
[REPLACE]^returnyears - roundFloor ( instant ) ;^137^^^^^136^138^[REPLACE] return instant - roundFloor ( instant ) ;^[METHOD] remainder [TYPE] long [PARAMETER] long instant [CLASS] BasicYearDateTimeField   [TYPE]  long instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  boolean false  true 
[REPLACE]^return iChronology.days (  ) ;^144^^^^^143^145^[REPLACE] return iChronology.year (  ) ;^[METHOD] readResolve [TYPE] Object [PARAMETER] [CLASS] BasicYearDateTimeField   [TYPE]  long instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  [TYPE]  BasicChronology chronology  iChronology  [TYPE]  boolean false  true 
