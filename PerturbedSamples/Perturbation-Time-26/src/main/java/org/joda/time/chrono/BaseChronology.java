[REPLACE]^private  final long serialVersionUID = -7310865996721419676L;^48^^^^^^^[REPLACE] private static final long serialVersionUID = -7310865996721419676L;^ [CLASS] BaseChronology  
[REPLACE]^int size = period.size (  ) ;^54^^^^^53^55^[REPLACE] super (  ) ;^[METHOD] <init> [TYPE] BaseChronology() [PARAMETER] [CLASS] BaseChronology   [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^long instant = monthOfYear (  ) .set ( 3, year ) ;^102^^^^^98^106^[REPLACE] long instant = year (  ) .set ( 0, year ) ;^[METHOD] getDateTimeMillis [TYPE] long [PARAMETER] int year int monthOfYear int dayOfMonth int millisOfDay [CLASS] BaseChronology   [TYPE]  long instant  serialVersionUID  [TYPE]  int dayOfMonth  millisOfDay  monthOfYear  year  [TYPE]  boolean false  true 
[REPLACE]^instant = hourOfDay (  ) .set ( instant, hourOfDay ) ; ;^103^^^^^98^106^[REPLACE] instant = monthOfYear (  ) .set ( instant, monthOfYear ) ;^[METHOD] getDateTimeMillis [TYPE] long [PARAMETER] int year int monthOfYear int dayOfMonth int millisOfDay [CLASS] BaseChronology   [TYPE]  long instant  serialVersionUID  [TYPE]  int dayOfMonth  millisOfDay  monthOfYear  year  [TYPE]  boolean false  true 
[REPLACE]^instant = secondOfMinute (  ) .set ( instant, secondOfMinute ) ; ;^104^^^^^98^106^[REPLACE] instant = dayOfMonth (  ) .set ( instant, dayOfMonth ) ;^[METHOD] getDateTimeMillis [TYPE] long [PARAMETER] int year int monthOfYear int dayOfMonth int millisOfDay [CLASS] BaseChronology   [TYPE]  long instant  serialVersionUID  [TYPE]  int dayOfMonth  millisOfDay  monthOfYear  year  [TYPE]  boolean false  true 
[REPLACE]^return millisOfSecond (  ) .set ( instant, millisOfSecond ) ;^105^^^^^98^106^[REPLACE] return millisOfDay (  ) .set ( instant, millisOfDay ) ;^[METHOD] getDateTimeMillis [TYPE] long [PARAMETER] int year int monthOfYear int dayOfMonth int millisOfDay [CLASS] BaseChronology   [TYPE]  long instant  serialVersionUID  [TYPE]  int dayOfMonth  millisOfDay  monthOfYear  year  [TYPE]  boolean false  true 
[REPLACE]^long instant = year (  ) .set ( 3, year ) ;^132^^^^^127^139^[REPLACE] long instant = year (  ) .set ( 0, year ) ;^[METHOD] getDateTimeMillis [TYPE] long [PARAMETER] int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [CLASS] BaseChronology   [TYPE]  long instant  serialVersionUID  [TYPE]  int dayOfMonth  hourOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  [TYPE]  boolean false  true 
[ADD]^instant = monthOfYear (  ) .set ( instant, monthOfYear ) ;^132^133^^^^127^139^[ADD] long instant = year (  ) .set ( 0, year ) ; instant = monthOfYear (  ) .set ( instant, monthOfYear ) ;^[METHOD] getDateTimeMillis [TYPE] long [PARAMETER] int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [CLASS] BaseChronology   [TYPE]  long instant  serialVersionUID  [TYPE]  int dayOfMonth  hourOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  [TYPE]  boolean false  true 
[REPLACE]^instant = hourOfDay (  ) .set ( instant, hourOfDay ) ; ;^133^^^^^127^139^[REPLACE] instant = monthOfYear (  ) .set ( instant, monthOfYear ) ;^[METHOD] getDateTimeMillis [TYPE] long [PARAMETER] int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [CLASS] BaseChronology   [TYPE]  long instant  serialVersionUID  [TYPE]  int dayOfMonth  hourOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  [TYPE]  boolean false  true 
[ADD]^^133^^^^^127^139^[ADD] instant = monthOfYear (  ) .set ( instant, monthOfYear ) ;^[METHOD] getDateTimeMillis [TYPE] long [PARAMETER] int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [CLASS] BaseChronology   [TYPE]  long instant  serialVersionUID  [TYPE]  int dayOfMonth  hourOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  [TYPE]  boolean false  true 
[REPLACE]^instant = secondOfMinute (  ) .set ( instant, secondOfMinute ) ; ;^134^^^^^127^139^[REPLACE] instant = dayOfMonth (  ) .set ( instant, dayOfMonth ) ;^[METHOD] getDateTimeMillis [TYPE] long [PARAMETER] int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [CLASS] BaseChronology   [TYPE]  long instant  serialVersionUID  [TYPE]  int dayOfMonth  hourOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  [TYPE]  boolean false  true 
[ADD]^^134^135^^^^127^139^[ADD] instant = dayOfMonth (  ) .set ( instant, dayOfMonth ) ; instant = hourOfDay (  ) .set ( instant, hourOfDay ) ;^[METHOD] getDateTimeMillis [TYPE] long [PARAMETER] int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [CLASS] BaseChronology   [TYPE]  long instant  serialVersionUID  [TYPE]  int dayOfMonth  hourOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  [TYPE]  boolean false  true 
[REPLACE]^instant = monthOfYear (  ) .set ( instant, monthOfYear ) ; ;^135^^^^^127^139^[REPLACE] instant = hourOfDay (  ) .set ( instant, hourOfDay ) ;^[METHOD] getDateTimeMillis [TYPE] long [PARAMETER] int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [CLASS] BaseChronology   [TYPE]  long instant  serialVersionUID  [TYPE]  int dayOfMonth  hourOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  [TYPE]  boolean false  true 
[REPLACE]^instant = monthOfYear (  ) .set ( instant, monthOfYear ) ; ;^136^^^^^127^139^[REPLACE] instant = minuteOfHour (  ) .set ( instant, minuteOfHour ) ;^[METHOD] getDateTimeMillis [TYPE] long [PARAMETER] int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [CLASS] BaseChronology   [TYPE]  long instant  serialVersionUID  [TYPE]  int dayOfMonth  hourOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  [TYPE]  boolean false  true 
[REPLACE]^instant = dayOfMonth (  ) .set ( instant, dayOfMonth ) ; ;^137^^^^^127^139^[REPLACE] instant = secondOfMinute (  ) .set ( instant, secondOfMinute ) ;^[METHOD] getDateTimeMillis [TYPE] long [PARAMETER] int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [CLASS] BaseChronology   [TYPE]  long instant  serialVersionUID  [TYPE]  int dayOfMonth  hourOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  [TYPE]  boolean false  true 
[REPLACE]^return millisOfSecond (  )  .set ( dayOfMonth , minuteOfHour )  ;^138^^^^^127^139^[REPLACE] return millisOfSecond (  ) .set ( instant, millisOfSecond ) ;^[METHOD] getDateTimeMillis [TYPE] long [PARAMETER] int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [CLASS] BaseChronology   [TYPE]  long instant  serialVersionUID  [TYPE]  int dayOfMonth  hourOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  [TYPE]  boolean false  true 
[REPLACE]^instant = monthOfYear (  ) .set ( instant, monthOfYear ) ; ;^163^^^^^158^167^[REPLACE] instant = hourOfDay (  ) .set ( instant, hourOfDay ) ;^[METHOD] getDateTimeMillis [TYPE] long [PARAMETER] long instant int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [CLASS] BaseChronology   [TYPE]  long instant  serialVersionUID  [TYPE]  int hourOfDay  millisOfSecond  minuteOfHour  secondOfMinute  [TYPE]  boolean false  true 
[REPLACE]^instant = monthOfYear (  ) .set ( instant, monthOfYear ) ; ;^164^^^^^158^167^[REPLACE] instant = minuteOfHour (  ) .set ( instant, minuteOfHour ) ;^[METHOD] getDateTimeMillis [TYPE] long [PARAMETER] long instant int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [CLASS] BaseChronology   [TYPE]  long instant  serialVersionUID  [TYPE]  int hourOfDay  millisOfSecond  minuteOfHour  secondOfMinute  [TYPE]  boolean false  true 
[REPLACE]^instant = dayOfMonth (  ) .set ( instant, dayOfMonth ) ; ;^165^^^^^158^167^[REPLACE] instant = secondOfMinute (  ) .set ( instant, secondOfMinute ) ;^[METHOD] getDateTimeMillis [TYPE] long [PARAMETER] long instant int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [CLASS] BaseChronology   [TYPE]  long instant  serialVersionUID  [TYPE]  int hourOfDay  millisOfSecond  minuteOfHour  secondOfMinute  [TYPE]  boolean false  true 
[REPLACE]^return millisOfSecond (  ) .set ( serialVersionUID, millisOfSecond ) ;^166^^^^^158^167^[REPLACE] return millisOfSecond (  ) .set ( instant, millisOfSecond ) ;^[METHOD] getDateTimeMillis [TYPE] long [PARAMETER] long instant int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [CLASS] BaseChronology   [TYPE]  long instant  serialVersionUID  [TYPE]  int hourOfDay  millisOfSecond  minuteOfHour  secondOfMinute  [TYPE]  boolean false  true 
[REPLACE]^int size = partial .getFieldType ( value )  ;^183^^^^^180^213^[REPLACE] int size = partial.size (  ) ;^[METHOD] validate [TYPE] void [PARAMETER] ReadablePartial partial int[] values [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  DateTimeField field  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  int i  size  value 
[REPLACE]^if  ( value  !=  field.getMinimumValue (  )  )  {^187^^^^^180^213^[REPLACE] if  ( value < field.getMinimumValue (  )  )  {^[METHOD] validate [TYPE] void [PARAMETER] ReadablePartial partial int[] values [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  DateTimeField field  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  int i  size  value 
[REPLACE]^throw new IllegalFieldValueException ( field.getType (  ) , new Integer ( value ) , ;^188^189^190^^^180^213^[REPLACE] throw new IllegalFieldValueException ( field.getType (  ) , new Integer ( value ) , new Integer ( field.getMinimumValue (  )  ) , null ) ;^[METHOD] validate [TYPE] void [PARAMETER] ReadablePartial partial int[] values [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  DateTimeField field  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  int i  size  value 
[REPLACE]^( field.getMinimumValue (  ) , new Integer ( value ) , new Integer ( field.getMinimumValue (  )  ) , null ) ;^189^190^^^^180^213^[REPLACE] ( field.getType (  ) , new Integer ( value ) , new Integer ( field.getMinimumValue (  )  ) , null ) ;^[METHOD] validate [TYPE] void [PARAMETER] ReadablePartial partial int[] values [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  DateTimeField field  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  int i  size  value 
[REPLACE]^new Integer ( field.getMaximumValue (  )  ) , null ) ;^190^^^^^180^213^[REPLACE] new Integer ( field.getMinimumValue (  )  ) , null ) ;^[METHOD] validate [TYPE] void [PARAMETER] ReadablePartial partial int[] values [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  DateTimeField field  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  int i  size  value 
[REPLACE]^if  ( value  < size (  )  )  {^192^^^^^180^213^[REPLACE] if  ( value > field.getMaximumValue (  )  )  {^[METHOD] validate [TYPE] void [PARAMETER] ReadablePartial partial int[] values [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  DateTimeField field  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  int i  size  value 
[REPLACE]^return ;^193^194^195^^^180^213^[REPLACE] throw new IllegalFieldValueException ( field.getType (  ) , new Integer ( value ) , null, new Integer ( field.getMaximumValue (  )  )  ) ;^[METHOD] validate [TYPE] void [PARAMETER] ReadablePartial partial int[] values [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  DateTimeField field  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  int i  size  value 
[REPLACE]^( field.getMinimumValue (  ) , new Integer ( value ) , null, new Integer ( field.getMaximumValue (  )  )  ) ;^194^195^^^^180^213^[REPLACE] ( field.getType (  ) , new Integer ( value ) , null, new Integer ( field.getMaximumValue (  )  )  ) ;^[METHOD] validate [TYPE] void [PARAMETER] ReadablePartial partial int[] values [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  DateTimeField field  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  int i  size  value 
[REPLACE]^null, new Integer ( field .getMaximumValue (  )   )  ) ;^195^^^^^180^213^[REPLACE] null, new Integer ( field.getMaximumValue (  )  )  ) ;^[METHOD] validate [TYPE] void [PARAMETER] ReadablePartial partial int[] values [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  DateTimeField field  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  int i  size  value 
[REPLACE]^for (int i = 0 ; i  >=  size; i++) {^184^^^^^180^213^[REPLACE] for  ( int i = 0; i < size; i++ )  {^[METHOD] validate [TYPE] void [PARAMETER] ReadablePartial partial int[] values [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  DateTimeField field  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  int i  size  value 
[ADD]^^184^185^186^187^188^180^213^[ADD] for  ( int i = 0; i < size; i++ )  { int value = values[i]; DateTimeField field = partial.getField ( i ) ; if  ( value < field.getMinimumValue (  )  )  { throw new IllegalFieldValueException^[METHOD] validate [TYPE] void [PARAMETER] ReadablePartial partial int[] values [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  DateTimeField field  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  int i  size  value 
[REPLACE]^if  ( value  ==  field.getMinimumValue (  )  )  {^187^^^^^180^213^[REPLACE] if  ( value < field.getMinimumValue (  )  )  {^[METHOD] validate [TYPE] void [PARAMETER] ReadablePartial partial int[] values [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  DateTimeField field  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  int i  size  value 
[REPLACE]^if  ( size  <  field.getMaximumValue (  )  )  {^192^^^^^180^213^[REPLACE] if  ( value > field.getMaximumValue (  )  )  {^[METHOD] validate [TYPE] void [PARAMETER] ReadablePartial partial int[] values [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  DateTimeField field  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  int i  size  value 
[REPLACE]^throw new IllegalFieldValueException ( field.getType (  ) , new Integer ( value ) , ;^193^194^195^^^180^213^[REPLACE] throw new IllegalFieldValueException ( field.getType (  ) , new Integer ( value ) , null, new Integer ( field.getMaximumValue (  )  )  ) ;^[METHOD] validate [TYPE] void [PARAMETER] ReadablePartial partial int[] values [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  DateTimeField field  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  int i  size  value 
[ADD]^^195^^^^^180^213^[ADD] null, new Integer ( field.getMaximumValue (  )  )  ) ;^[METHOD] validate [TYPE] void [PARAMETER] ReadablePartial partial int[] values [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  DateTimeField field  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  int i  size  value 
[REPLACE]^int size = partial.size (  ) ;^185^^^^^180^213^[REPLACE] int value = values[i];^[METHOD] validate [TYPE] void [PARAMETER] ReadablePartial partial int[] values [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  DateTimeField field  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  int i  size  value 
[REPLACE]^DateTimeField field = partial .getFieldType ( size )  ;^186^^^^^180^213^[REPLACE] DateTimeField field = partial.getField ( i ) ;^[METHOD] validate [TYPE] void [PARAMETER] ReadablePartial partial int[] values [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  DateTimeField field  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  int i  size  value 
[ADD]^^188^189^190^^^180^213^[ADD] throw new IllegalFieldValueException ( field.getType (  ) , new Integer ( value ) , new Integer ( field.getMinimumValue (  )  ) , null ) ;^[METHOD] validate [TYPE] void [PARAMETER] ReadablePartial partial int[] values [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  DateTimeField field  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  int i  size  value 
[REPLACE]^for  ( int i = 0 ; i < size; i++ )  {^184^^^^^180^213^[REPLACE] for  ( int i = 0; i < size; i++ )  {^[METHOD] validate [TYPE] void [PARAMETER] ReadablePartial partial int[] values [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  DateTimeField field  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  int i  size  value 
[REPLACE]^DateTimeField field = partial.getFieldType ( i ) ;^186^^^^^180^213^[REPLACE] DateTimeField field = partial.getField ( i ) ;^[METHOD] validate [TYPE] void [PARAMETER] ReadablePartial partial int[] values [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  DateTimeField field  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  int i  size  value 
[ADD]^^193^194^195^^^180^213^[ADD] throw new IllegalFieldValueException ( field.getType (  ) , new Integer ( value ) , null, new Integer ( field.getMaximumValue (  )  )  ) ;^[METHOD] validate [TYPE] void [PARAMETER] ReadablePartial partial int[] values [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  DateTimeField field  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  int i  size  value 
[REPLACE]^if  ( value  >=  field.getMinimumValue ( partial, values )  )  {^202^^^^^180^213^[REPLACE] if  ( value < field.getMinimumValue ( partial, values )  )  {^[METHOD] validate [TYPE] void [PARAMETER] ReadablePartial partial int[] values [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  DateTimeField field  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  int i  size  value 
[REPLACE]^return ;^203^204^205^^^180^213^[REPLACE] throw new IllegalFieldValueException ( field.getType (  ) , new Integer ( value ) , new Integer ( field.getMinimumValue ( partial, values )  ) , null ) ;^[METHOD] validate [TYPE] void [PARAMETER] ReadablePartial partial int[] values [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  DateTimeField field  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  int i  size  value 
[ADD]^^203^204^205^^^180^213^[ADD] throw new IllegalFieldValueException ( field.getType (  ) , new Integer ( value ) , new Integer ( field.getMinimumValue ( partial, values )  ) , null ) ;^[METHOD] validate [TYPE] void [PARAMETER] ReadablePartial partial int[] values [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  DateTimeField field  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  int i  size  value 
[REPLACE]^( field.getMinimumValue (  ) , new Integer ( value ) , new Integer ( field.getMinimumValue ( partial, values )  ) , null ) ;^204^205^^^^180^213^[REPLACE] ( field.getType (  ) , new Integer ( value ) , new Integer ( field.getMinimumValue ( partial, values )  ) , null ) ;^[METHOD] validate [TYPE] void [PARAMETER] ReadablePartial partial int[] values [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  DateTimeField field  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  int i  size  value 
[ADD]^^204^205^^^^180^213^[ADD] ( field.getType (  ) , new Integer ( value ) , new Integer ( field.getMinimumValue ( partial, values )  ) , null ) ;^[METHOD] validate [TYPE] void [PARAMETER] ReadablePartial partial int[] values [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  DateTimeField field  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  int i  size  value 
[REPLACE]^new Integer ( field.getMaximumValue ( partial, values )  ) , null ) ;^205^^^^^180^213^[REPLACE] new Integer ( field.getMinimumValue ( partial, values )  ) , null ) ;^[METHOD] validate [TYPE] void [PARAMETER] ReadablePartial partial int[] values [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  DateTimeField field  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  int i  size  value 
[REPLACE]^if  ( value  <  field.getMaximumValue ( partial, values )  )  {^207^^^^^180^213^[REPLACE] if  ( value > field.getMaximumValue ( partial, values )  )  {^[METHOD] validate [TYPE] void [PARAMETER] ReadablePartial partial int[] values [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  DateTimeField field  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  int i  size  value 
[REPLACE]^return ;^208^209^210^^^180^213^[REPLACE] throw new IllegalFieldValueException ( field.getType (  ) , new Integer ( value ) , null, new Integer ( field.getMaximumValue ( partial, values )  )  ) ;^[METHOD] validate [TYPE] void [PARAMETER] ReadablePartial partial int[] values [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  DateTimeField field  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  int i  size  value 
[REPLACE]^( field.getMinimumValue (  ) , new Integer ( value ) , null, new Integer ( field.getMaximumValue ( partial, values )  )  ) ;^209^210^^^^180^213^[REPLACE] ( field.getType (  ) , new Integer ( value ) , null, new Integer ( field.getMaximumValue ( partial, values )  )  ) ;^[METHOD] validate [TYPE] void [PARAMETER] ReadablePartial partial int[] values [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  DateTimeField field  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  int i  size  value 
[REPLACE]^null, new Integer ( field.getMinimumValue ( partial, values )  )  ) ;^210^^^^^180^213^[REPLACE] null, new Integer ( field.getMaximumValue ( partial, values )  )  ) ;^[METHOD] validate [TYPE] void [PARAMETER] ReadablePartial partial int[] values [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  DateTimeField field  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  int i  size  value 
[REPLACE]^for (int i = 0; i  >=  size; i++) {^199^^^^^180^213^[REPLACE] for  ( int i = 0; i < size; i++ )  {^[METHOD] validate [TYPE] void [PARAMETER] ReadablePartial partial int[] values [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  DateTimeField field  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  int i  size  value 
[ADD]^^202^203^204^205^206^180^213^[ADD] if  ( value < field.getMinimumValue ( partial, values )  )  { throw new IllegalFieldValueException ( field.getType (  ) , new Integer ( value ) , new Integer ( field.getMinimumValue ( partial, values )  ) , null ) ; }^[METHOD] validate [TYPE] void [PARAMETER] ReadablePartial partial int[] values [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  DateTimeField field  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  int i  size  value 
[REPLACE]^throw new IllegalFieldValueException ( field.getType (  ) , new Integer ( value ) , ;^203^204^205^^^180^213^[REPLACE] throw new IllegalFieldValueException ( field.getType (  ) , new Integer ( value ) , new Integer ( field.getMinimumValue ( partial, values )  ) , null ) ;^[METHOD] validate [TYPE] void [PARAMETER] ReadablePartial partial int[] values [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  DateTimeField field  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  int i  size  value 
[REPLACE]^( field .set ( value , size )  , new Integer ( value ) , new Integer ( field.getMinimumValue ( partial, values )  ) , null ) ;^204^205^^^^180^213^[REPLACE] ( field.getType (  ) , new Integer ( value ) , new Integer ( field.getMinimumValue ( partial, values )  ) , null ) ;^[METHOD] validate [TYPE] void [PARAMETER] ReadablePartial partial int[] values [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  DateTimeField field  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  int i  size  value 
[REPLACE]^new Integer ( field .getMinimumValue (  )   ) , null ) ;^205^^^^^180^213^[REPLACE] new Integer ( field.getMinimumValue ( partial, values )  ) , null ) ;^[METHOD] validate [TYPE] void [PARAMETER] ReadablePartial partial int[] values [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  DateTimeField field  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  int i  size  value 
[REPLACE]^if  (size  <  field.getMaximumValue ( partial, values )  )  {^207^^^^^180^213^[REPLACE] if  ( value > field.getMaximumValue ( partial, values )  )  {^[METHOD] validate [TYPE] void [PARAMETER] ReadablePartial partial int[] values [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  DateTimeField field  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  int i  size  value 
[REPLACE]^int size = partial.size (  ) ;^200^^^^^180^213^[REPLACE] int value = values[i];^[METHOD] validate [TYPE] void [PARAMETER] ReadablePartial partial int[] values [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  DateTimeField field  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  int i  size  value 
[REPLACE]^DateTimeField field = partial.getField ( size ) ;^201^^^^^180^213^[REPLACE] DateTimeField field = partial.getField ( i ) ;^[METHOD] validate [TYPE] void [PARAMETER] ReadablePartial partial int[] values [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  DateTimeField field  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  int i  size  value 
[REPLACE]^for  ( int i = 0 ; i < size; i++ )  {^199^^^^^180^213^[REPLACE] for  ( int i = 0; i < size; i++ )  {^[METHOD] validate [TYPE] void [PARAMETER] ReadablePartial partial int[] values [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  DateTimeField field  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  int i  size  value 
[REPLACE]^DateTimeField field = partial .getFieldType ( value )  ;^201^^^^^180^213^[REPLACE] DateTimeField field = partial.getField ( i ) ;^[METHOD] validate [TYPE] void [PARAMETER] ReadablePartial partial int[] values [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  DateTimeField field  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  int i  size  value 
[ADD]^^201^^^^^180^213^[ADD] DateTimeField field = partial.getField ( i ) ;^[METHOD] validate [TYPE] void [PARAMETER] ReadablePartial partial int[] values [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  DateTimeField field  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  int i  size  value 
[REPLACE]^throw new IllegalFieldValueException ( field.getType (  ) , new Integer ( value ) , ;^208^209^210^^^180^213^[REPLACE] throw new IllegalFieldValueException ( field.getType (  ) , new Integer ( value ) , null, new Integer ( field.getMaximumValue ( partial, values )  )  ) ;^[METHOD] validate [TYPE] void [PARAMETER] ReadablePartial partial int[] values [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  DateTimeField field  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  int i  size  value 
[ADD]^^208^209^210^^^180^213^[ADD] throw new IllegalFieldValueException ( field.getType (  ) , new Integer ( value ) , null, new Integer ( field.getMaximumValue ( partial, values )  )  ) ;^[METHOD] validate [TYPE] void [PARAMETER] ReadablePartial partial int[] values [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  DateTimeField field  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  int i  size  value 
[REPLACE]^int size = period.size (  ) ;^223^^^^^222^229^[REPLACE] int size = partial.size (  ) ;^[METHOD] get [TYPE] int[] [PARAMETER] ReadablePartial partial long instant [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  int i  size 
[ADD]^^223^^^^^222^229^[ADD] int size = partial.size (  ) ;^[METHOD] get [TYPE] int[] [PARAMETER] ReadablePartial partial long instant [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  int i  size 
[REPLACE]^int value = values[i];^224^^^^^222^229^[REPLACE] int[] values = new int[size];^[METHOD] get [TYPE] int[] [PARAMETER] ReadablePartial partial long instant [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  int i  size 
[ADD]^^224^^^^^222^229^[ADD] int[] values = new int[size];^[METHOD] get [TYPE] int[] [PARAMETER] ReadablePartial partial long instant [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  int i  size 
[REPLACE]^for (int i = 0 ; i  >=  size; i++) {^225^^^^^222^229^[REPLACE] for  ( int i = 0; i < size; i++ )  {^[METHOD] get [TYPE] int[] [PARAMETER] ReadablePartial partial long instant [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  int i  size 
[REPLACE]^values[i]  = null ;^226^^^^^222^229^[REPLACE] values[i] = partial.getFieldType ( i ) .getField ( this ) .get ( instant ) ;^[METHOD] get [TYPE] int[] [PARAMETER] ReadablePartial partial long instant [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  int i  size 
[REPLACE]^values[i]  =  values[i] ;^226^^^^^222^229^[REPLACE] values[i] = partial.getFieldType ( i ) .getField ( this ) .get ( instant ) ;^[METHOD] get [TYPE] int[] [PARAMETER] ReadablePartial partial long instant [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  int i  size 
[REPLACE]^for  ( int i = 0 ; i < size; i++ )  {^225^^^^^222^229^[REPLACE] for  ( int i = 0; i < size; i++ )  {^[METHOD] get [TYPE] int[] [PARAMETER] ReadablePartial partial long instant [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  int i  size 
[REPLACE]^return instant;^228^^^^^222^229^[REPLACE] return values;^[METHOD] get [TYPE] int[] [PARAMETER] ReadablePartial partial long instant [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  int i  size 
[REPLACE]^for  ( int i = 0, isize = partial.size (  )  + 1; i < isize; i++ )  {^239^^^^^238^243^[REPLACE] for  ( int i = 0, isize = partial.size (  ) ; i < isize; i++ )  {^[METHOD] set [TYPE] long [PARAMETER] ReadablePartial partial long instant [CLASS] BaseChronology   [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  int i  isize 
[REPLACE]^instant = period.getFieldType ( i ) .getField ( this ) .add ( instant, value * scalar ) ; ;^240^^^^^238^243^[REPLACE] instant = partial.getFieldType ( i ) .getField ( this ) .set ( instant, partial.getValue ( i )  ) ;^[METHOD] set [TYPE] long [PARAMETER] ReadablePartial partial long instant [CLASS] BaseChronology   [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  int i  isize 
[REPLACE]^for  ( int i = 0 , isize = partial.size (  ) ; i < isize; i++ )  {^239^^^^^238^243^[REPLACE] for  ( int i = 0, isize = partial.size (  ) ; i < isize; i++ )  {^[METHOD] set [TYPE] long [PARAMETER] ReadablePartial partial long instant [CLASS] BaseChronology   [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  int i  isize 
[REPLACE]^for  ( int i = 0; i < size; i++ )  { values[i] = partial.getFieldType ( i ) .getField ( this ) .get ( instant ) ;^239^^^^^238^243^[REPLACE] for  ( int i = 0, isize = partial.size (  ) ; i < isize; i++ )  {^[METHOD] set [TYPE] long [PARAMETER] ReadablePartial partial long instant [CLASS] BaseChronology   [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  int i  isize 
[REPLACE]^return serialVersionUID;^242^^^^^238^243^[REPLACE] return instant;^[METHOD] set [TYPE] long [PARAMETER] ReadablePartial partial long instant [CLASS] BaseChronology   [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true  [TYPE]  long instant  serialVersionUID  [TYPE]  int i  isize 
[REPLACE]^int size = partial.size (  ) ;^255^^^^^254^266^[REPLACE] int size = period.size (  ) ;^[METHOD] get [TYPE] int[] [PARAMETER] ReadablePeriod period long startInstant long endInstant [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  DurationField field  [TYPE]  long endInstant  instant  serialVersionUID  startInstant  [TYPE]  int i  size  value 
[REPLACE]^int value = values[i];^256^^^^^254^266^[REPLACE] int[] values = new int[size];^[METHOD] get [TYPE] int[] [PARAMETER] ReadablePeriod period long startInstant long endInstant [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  DurationField field  [TYPE]  long endInstant  instant  serialVersionUID  startInstant  [TYPE]  int i  size  value 
[ADD]^^256^^^^^254^266^[ADD] int[] values = new int[size];^[METHOD] get [TYPE] int[] [PARAMETER] ReadablePeriod period long startInstant long endInstant [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  DurationField field  [TYPE]  long endInstant  instant  serialVersionUID  startInstant  [TYPE]  int i  size  value 
[REPLACE]^if  ( startInstant  ==  endInstant )  {^257^^^^^254^266^[REPLACE] if  ( startInstant != endInstant )  {^[METHOD] get [TYPE] int[] [PARAMETER] ReadablePeriod period long startInstant long endInstant [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  DurationField field  [TYPE]  long endInstant  instant  serialVersionUID  startInstant  [TYPE]  int i  size  value 
[REPLACE]^for (int i = 0; i  <=  size; i++) {^258^^^^^254^266^[REPLACE] for  ( int i = 0; i < size; i++ )  {^[METHOD] get [TYPE] int[] [PARAMETER] ReadablePeriod period long startInstant long endInstant [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  DurationField field  [TYPE]  long endInstant  instant  serialVersionUID  startInstant  [TYPE]  int i  size  value 
[REPLACE]^startInstant =  null.add ( startInstant, value ) ;^261^^^^^254^266^[REPLACE] startInstant = field.add ( startInstant, value ) ;^[METHOD] get [TYPE] int[] [PARAMETER] ReadablePeriod period long startInstant long endInstant [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  DurationField field  [TYPE]  long endInstant  instant  serialVersionUID  startInstant  [TYPE]  int i  size  value 
[REPLACE]^values[i]  = null ;^262^^^^^254^266^[REPLACE] values[i] = value;^[METHOD] get [TYPE] int[] [PARAMETER] ReadablePeriod period long startInstant long endInstant [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  DurationField field  [TYPE]  long endInstant  instant  serialVersionUID  startInstant  [TYPE]  int i  size  value 
[REPLACE]^DurationField field = period.getValue ( size ) .getField ( this ) ;^259^^^^^254^266^[REPLACE] DurationField field = period.getFieldType ( i ) .getField ( this ) ;^[METHOD] get [TYPE] int[] [PARAMETER] ReadablePeriod period long startInstant long endInstant [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  DurationField field  [TYPE]  long endInstant  instant  serialVersionUID  startInstant  [TYPE]  int i  size  value 
[REPLACE]^int value = field .isPrecise (  )  ;^260^^^^^254^266^[REPLACE] int value = field.getDifference ( endInstant, startInstant ) ;^[METHOD] get [TYPE] int[] [PARAMETER] ReadablePeriod period long startInstant long endInstant [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  DurationField field  [TYPE]  long endInstant  instant  serialVersionUID  startInstant  [TYPE]  int i  size  value 
[ADD]^startInstant = field.add ( startInstant, value ) ;values[i] = value;^260^261^262^263^^254^266^[ADD] int value = field.getDifference ( endInstant, startInstant ) ; startInstant = field.add ( startInstant, value ) ; values[i] = value; }^[METHOD] get [TYPE] int[] [PARAMETER] ReadablePeriod period long startInstant long endInstant [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  DurationField field  [TYPE]  long endInstant  instant  serialVersionUID  startInstant  [TYPE]  int i  size  value 
[REPLACE]^values[i]  =  values[i] ;^262^^^^^254^266^[REPLACE] values[i] = value;^[METHOD] get [TYPE] int[] [PARAMETER] ReadablePeriod period long startInstant long endInstant [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  DurationField field  [TYPE]  long endInstant  instant  serialVersionUID  startInstant  [TYPE]  int i  size  value 
[REPLACE]^for  ( int i = 0 ; i < size; i++ )  {^258^^^^^254^266^[REPLACE] for  ( int i = 0; i < size; i++ )  {^[METHOD] get [TYPE] int[] [PARAMETER] ReadablePeriod period long startInstant long endInstant [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  DurationField field  [TYPE]  long endInstant  instant  serialVersionUID  startInstant  [TYPE]  int i  size  value 
[REPLACE]^DurationField field = period .getFieldType ( size )^259^^^^^254^266^[REPLACE] DurationField field = period.getFieldType ( i ) .getField ( this ) ;^[METHOD] get [TYPE] int[] [PARAMETER] ReadablePeriod period long startInstant long endInstant [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  DurationField field  [TYPE]  long endInstant  instant  serialVersionUID  startInstant  [TYPE]  int i  size  value 
[ADD]^int value = field.getDifference ( endInstant, startInstant ) ;^259^260^^^^254^266^[ADD] DurationField field = period.getFieldType ( i ) .getField ( this ) ; int value = field.getDifference ( endInstant, startInstant ) ;^[METHOD] get [TYPE] int[] [PARAMETER] ReadablePeriod period long startInstant long endInstant [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  DurationField field  [TYPE]  long endInstant  instant  serialVersionUID  startInstant  [TYPE]  int i  size  value 
[REPLACE]^for (int i = 0; i  >=  size; i++) {^258^^^^^254^266^[REPLACE] for  ( int i = 0; i < size; i++ )  {^[METHOD] get [TYPE] int[] [PARAMETER] ReadablePeriod period long startInstant long endInstant [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  DurationField field  [TYPE]  long endInstant  instant  serialVersionUID  startInstant  [TYPE]  int i  size  value 
[ADD]^^258^259^260^261^262^254^266^[ADD] for  ( int i = 0; i < size; i++ )  { DurationField field = period.getFieldType ( i ) .getField ( this ) ; int value = field.getDifference ( endInstant, startInstant ) ; startInstant = field.add ( startInstant, value ) ; values[i] = value;^[METHOD] get [TYPE] int[] [PARAMETER] ReadablePeriod period long startInstant long endInstant [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  DurationField field  [TYPE]  long endInstant  instant  serialVersionUID  startInstant  [TYPE]  int i  size  value 
[REPLACE]^DurationField field = period.getType ( i ) .getField ( this ) ;^259^^^^^254^266^[REPLACE] DurationField field = period.getFieldType ( i ) .getField ( this ) ;^[METHOD] get [TYPE] int[] [PARAMETER] ReadablePeriod period long startInstant long endInstant [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  DurationField field  [TYPE]  long endInstant  instant  serialVersionUID  startInstant  [TYPE]  int i  size  value 
[ADD]^^259^^^^^254^266^[ADD] DurationField field = period.getFieldType ( i ) .getField ( this ) ;^[METHOD] get [TYPE] int[] [PARAMETER] ReadablePeriod period long startInstant long endInstant [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  DurationField field  [TYPE]  long endInstant  instant  serialVersionUID  startInstant  [TYPE]  int i  size  value 
[REPLACE]^int value = field.add ( endInstant, startInstant ) ;^260^^^^^254^266^[REPLACE] int value = field.getDifference ( endInstant, startInstant ) ;^[METHOD] get [TYPE] int[] [PARAMETER] ReadablePeriod period long startInstant long endInstant [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  DurationField field  [TYPE]  long endInstant  instant  serialVersionUID  startInstant  [TYPE]  int i  size  value 
[REPLACE]^DurationField field = period .getField ( i )  .getField ( this ) ;^259^^^^^254^266^[REPLACE] DurationField field = period.getFieldType ( i ) .getField ( this ) ;^[METHOD] get [TYPE] int[] [PARAMETER] ReadablePeriod period long startInstant long endInstant [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  DurationField field  [TYPE]  long endInstant  instant  serialVersionUID  startInstant  [TYPE]  int i  size  value 
[ADD]^^259^260^^^^254^266^[ADD] DurationField field = period.getFieldType ( i ) .getField ( this ) ; int value = field.getDifference ( endInstant, startInstant ) ;^[METHOD] get [TYPE] int[] [PARAMETER] ReadablePeriod period long startInstant long endInstant [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  DurationField field  [TYPE]  long endInstant  instant  serialVersionUID  startInstant  [TYPE]  int i  size  value 
[REPLACE]^return instant;^265^^^^^254^266^[REPLACE] return values;^[METHOD] get [TYPE] int[] [PARAMETER] ReadablePeriod period long startInstant long endInstant [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  DurationField field  [TYPE]  long endInstant  instant  serialVersionUID  startInstant  [TYPE]  int i  size  value 
[REPLACE]^int size = partial.size (  ) ;^276^^^^^275^290^[REPLACE] int size = period.size (  ) ;^[METHOD] get [TYPE] int[] [PARAMETER] ReadablePeriod period long duration [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  DurationField field  [TYPE]  long current  duration  endInstant  instant  serialVersionUID  startInstant  [TYPE]  int i  size  value 
[REPLACE]^int value = values[i];^277^^^^^275^290^[REPLACE] int[] values = new int[size];^[METHOD] get [TYPE] int[] [PARAMETER] ReadablePeriod period long duration [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  DurationField field  [TYPE]  long current  duration  endInstant  instant  serialVersionUID  startInstant  [TYPE]  int i  size  value 
[REPLACE]^if  ( duration  ==  0 )  {^278^^^^^275^290^[REPLACE] if  ( duration != 0 )  {^[METHOD] get [TYPE] int[] [PARAMETER] ReadablePeriod period long duration [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  DurationField field  [TYPE]  long current  duration  endInstant  instant  serialVersionUID  startInstant  [TYPE]  int i  size  value 
[ADD]^^278^279^280^281^^275^290^[ADD] if  ( duration != 0 )  { long current = 0; for  ( int i = 0; i < size; i++ )  { DurationField field = period.getFieldType ( i ) .getField ( this ) ;^[METHOD] get [TYPE] int[] [PARAMETER] ReadablePeriod period long duration [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  DurationField field  [TYPE]  long current  duration  endInstant  instant  serialVersionUID  startInstant  [TYPE]  int i  size  value 
[REPLACE]^if  ( value != 0 )  {^282^^^^^275^290^[REPLACE] if  ( field.isPrecise (  )  )  {^[METHOD] get [TYPE] int[] [PARAMETER] ReadablePeriod period long duration [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  DurationField field  [TYPE]  long current  duration  endInstant  instant  serialVersionUID  startInstant  [TYPE]  int i  size  value 
[REPLACE]^current =  null.add ( current, value ) ;^284^^^^^275^290^[REPLACE] current = field.add ( current, value ) ;^[METHOD] get [TYPE] int[] [PARAMETER] ReadablePeriod period long duration [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  DurationField field  [TYPE]  long current  duration  endInstant  instant  serialVersionUID  startInstant  [TYPE]  int i  size  value 
[ADD]^^284^285^^^^275^290^[ADD] current = field.add ( current, value ) ; values[i] = value;^[METHOD] get [TYPE] int[] [PARAMETER] ReadablePeriod period long duration [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  DurationField field  [TYPE]  long current  duration  endInstant  instant  serialVersionUID  startInstant  [TYPE]  int i  size  value 
[REPLACE]^values[i]  = null ;^285^^^^^275^290^[REPLACE] values[i] = value;^[METHOD] get [TYPE] int[] [PARAMETER] ReadablePeriod period long duration [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  DurationField field  [TYPE]  long current  duration  endInstant  instant  serialVersionUID  startInstant  [TYPE]  int i  size  value 
[ADD]^^285^^^^^275^290^[ADD] values[i] = value;^[METHOD] get [TYPE] int[] [PARAMETER] ReadablePeriod period long duration [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  DurationField field  [TYPE]  long current  duration  endInstant  instant  serialVersionUID  startInstant  [TYPE]  int i  size  value 
[REPLACE]^int value = field.getDifference ( duration, startInstant ) ;^283^^^^^275^290^[REPLACE] int value = field.getDifference ( duration, current ) ;^[METHOD] get [TYPE] int[] [PARAMETER] ReadablePeriod period long duration [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  DurationField field  [TYPE]  long current  duration  endInstant  instant  serialVersionUID  startInstant  [TYPE]  int i  size  value 
[REPLACE]^for (int i = 0; i  !=  size; i++) {^280^^^^^275^290^[REPLACE] for  ( int i = 0; i < size; i++ )  {^[METHOD] get [TYPE] int[] [PARAMETER] ReadablePeriod period long duration [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  DurationField field  [TYPE]  long current  duration  endInstant  instant  serialVersionUID  startInstant  [TYPE]  int i  size  value 
[ADD]^^282^283^284^285^286^275^290^[ADD] if  ( field.isPrecise (  )  )  { int value = field.getDifference ( duration, current ) ; current = field.add ( current, value ) ; values[i] = value; }^[METHOD] get [TYPE] int[] [PARAMETER] ReadablePeriod period long duration [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  DurationField field  [TYPE]  long current  duration  endInstant  instant  serialVersionUID  startInstant  [TYPE]  int i  size  value 
[ADD]^values[i] = value;^284^285^^^^275^290^[ADD] current = field.add ( current, value ) ; values[i] = value;^[METHOD] get [TYPE] int[] [PARAMETER] ReadablePeriod period long duration [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  DurationField field  [TYPE]  long current  duration  endInstant  instant  serialVersionUID  startInstant  [TYPE]  int i  size  value 
[REPLACE]^values[i] ;^285^^^^^275^290^[REPLACE] values[i] = value;^[METHOD] get [TYPE] int[] [PARAMETER] ReadablePeriod period long duration [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  DurationField field  [TYPE]  long current  duration  endInstant  instant  serialVersionUID  startInstant  [TYPE]  int i  size  value 
[REPLACE]^int value = field.add ( duration, current ) ;^283^^^^^275^290^[REPLACE] int value = field.getDifference ( duration, current ) ;^[METHOD] get [TYPE] int[] [PARAMETER] ReadablePeriod period long duration [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  DurationField field  [TYPE]  long current  duration  endInstant  instant  serialVersionUID  startInstant  [TYPE]  int i  size  value 
[REPLACE]^DurationField field = period.getValue ( i ) .getField ( this ) ;^281^^^^^275^290^[REPLACE] DurationField field = period.getFieldType ( i ) .getField ( this ) ;^[METHOD] get [TYPE] int[] [PARAMETER] ReadablePeriod period long duration [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  DurationField field  [TYPE]  long current  duration  endInstant  instant  serialVersionUID  startInstant  [TYPE]  int i  size  value 
[REPLACE]^values[i]  =  values[i] ;^285^^^^^275^290^[REPLACE] values[i] = value;^[METHOD] get [TYPE] int[] [PARAMETER] ReadablePeriod period long duration [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  DurationField field  [TYPE]  long current  duration  endInstant  instant  serialVersionUID  startInstant  [TYPE]  int i  size  value 
[REPLACE]^long current = 2;^279^^^^^275^290^[REPLACE] long current = 0;^[METHOD] get [TYPE] int[] [PARAMETER] ReadablePeriod period long duration [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  DurationField field  [TYPE]  long current  duration  endInstant  instant  serialVersionUID  startInstant  [TYPE]  int i  size  value 
[REPLACE]^for  ( int i = 0 ; i < size; i++ )  {^280^^^^^275^290^[REPLACE] for  ( int i = 0; i < size; i++ )  {^[METHOD] get [TYPE] int[] [PARAMETER] ReadablePeriod period long duration [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  DurationField field  [TYPE]  long current  duration  endInstant  instant  serialVersionUID  startInstant  [TYPE]  int i  size  value 
[REPLACE]^DurationField field = period.getType ( i ) .getField ( this ) ;^281^^^^^275^290^[REPLACE] DurationField field = period.getFieldType ( i ) .getField ( this ) ;^[METHOD] get [TYPE] int[] [PARAMETER] ReadablePeriod period long duration [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  DurationField field  [TYPE]  long current  duration  endInstant  instant  serialVersionUID  startInstant  [TYPE]  int i  size  value 
[REPLACE]^int value = field.getDifference ( startInstant, current ) ;^283^^^^^275^290^[REPLACE] int value = field.getDifference ( duration, current ) ;^[METHOD] get [TYPE] int[] [PARAMETER] ReadablePeriod period long duration [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  DurationField field  [TYPE]  long current  duration  endInstant  instant  serialVersionUID  startInstant  [TYPE]  int i  size  value 
[ADD]^^280^281^282^283^284^275^290^[ADD] for  ( int i = 0; i < size; i++ )  { DurationField field = period.getFieldType ( i ) .getField ( this ) ; if  ( field.isPrecise (  )  )  { int value = field.getDifference ( duration, current ) ; current = field.add ( current, value ) ;^[METHOD] get [TYPE] int[] [PARAMETER] ReadablePeriod period long duration [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  DurationField field  [TYPE]  long current  duration  endInstant  instant  serialVersionUID  startInstant  [TYPE]  int i  size  value 
[REPLACE]^int value = field.getDifference ( serialVersionUID, current ) ;^283^^^^^275^290^[REPLACE] int value = field.getDifference ( duration, current ) ;^[METHOD] get [TYPE] int[] [PARAMETER] ReadablePeriod period long duration [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  DurationField field  [TYPE]  long current  duration  endInstant  instant  serialVersionUID  startInstant  [TYPE]  int i  size  value 
[REPLACE]^int value = field .isPrecise (  )  ;^283^^^^^275^290^[REPLACE] int value = field.getDifference ( duration, current ) ;^[METHOD] get [TYPE] int[] [PARAMETER] ReadablePeriod period long duration [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  DurationField field  [TYPE]  long current  duration  endInstant  instant  serialVersionUID  startInstant  [TYPE]  int i  size  value 
[ADD]^^283^284^285^286^^275^290^[ADD] int value = field.getDifference ( duration, current ) ; current = field.add ( current, value ) ; values[i] = value; }^[METHOD] get [TYPE] int[] [PARAMETER] ReadablePeriod period long duration [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  DurationField field  [TYPE]  long current  duration  endInstant  instant  serialVersionUID  startInstant  [TYPE]  int i  size  value 
[REPLACE]^long current = 0 >>> 2;^279^^^^^275^290^[REPLACE] long current = 0;^[METHOD] get [TYPE] int[] [PARAMETER] ReadablePeriod period long duration [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  DurationField field  [TYPE]  long current  duration  endInstant  instant  serialVersionUID  startInstant  [TYPE]  int i  size  value 
[REPLACE]^DurationField field = period .getFieldType ( i )^281^^^^^275^290^[REPLACE] DurationField field = period.getFieldType ( i ) .getField ( this ) ;^[METHOD] get [TYPE] int[] [PARAMETER] ReadablePeriod period long duration [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  DurationField field  [TYPE]  long current  duration  endInstant  instant  serialVersionUID  startInstant  [TYPE]  int i  size  value 
[ADD]^current = field.add ( current, value ) ;values[i] = value;^283^284^285^286^^275^290^[ADD] int value = field.getDifference ( duration, current ) ; current = field.add ( current, value ) ; values[i] = value; }^[METHOD] get [TYPE] int[] [PARAMETER] ReadablePeriod period long duration [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  DurationField field  [TYPE]  long current  duration  endInstant  instant  serialVersionUID  startInstant  [TYPE]  int i  size  value 
[REPLACE]^return instant;^289^^^^^275^290^[REPLACE] return values;^[METHOD] get [TYPE] int[] [PARAMETER] ReadablePeriod period long duration [CLASS] BaseChronology   [TYPE]  int[] values  [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  DurationField field  [TYPE]  long current  duration  endInstant  instant  serialVersionUID  startInstant  [TYPE]  int i  size  value 
[REPLACE]^if  ( scalar == 0 ) {^301^^^^^300^310^[REPLACE] if  ( scalar != 0 && period != null )  {^[METHOD] add [TYPE] long [PARAMETER] ReadablePeriod period long instant int scalar [CLASS] BaseChronology   [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  long current  duration  endInstant  instant  serialVersionUID  startInstant  value  [TYPE]  int i  isize  scalar 
[ADD]^^301^302^303^304^305^300^310^[ADD] if  ( scalar != 0 && period != null )  { for  ( int i = 0, isize = period.size (  ) ; i < isize; i++ )  { long value = period.getValue ( i ) ; if  ( value != 0 )  { instant = period.getFieldType ( i ) .getField ( this ) .add ( instant, value * scalar ) ;^[METHOD] add [TYPE] long [PARAMETER] ReadablePeriod period long instant int scalar [CLASS] BaseChronology   [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  long current  duration  endInstant  instant  serialVersionUID  startInstant  value  [TYPE]  int i  isize  scalar 
[REPLACE]^if  ( value  ==  0 * 4 )  {^304^^^^^300^310^[REPLACE] if  ( value != 0 )  {^[METHOD] add [TYPE] long [PARAMETER] ReadablePeriod period long instant int scalar [CLASS] BaseChronology   [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  long current  duration  endInstant  instant  serialVersionUID  startInstant  value  [TYPE]  int i  isize  scalar 
[REPLACE]^instant = period.getFieldType ( i ) .getField ( this ) .add ( instant, value  &&  scalar ) ;^305^^^^^300^310^[REPLACE] instant = period.getFieldType ( i ) .getField ( this ) .add ( instant, value * scalar ) ;^[METHOD] add [TYPE] long [PARAMETER] ReadablePeriod period long instant int scalar [CLASS] BaseChronology   [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  long current  duration  endInstant  instant  serialVersionUID  startInstant  value  [TYPE]  int i  isize  scalar 
[ADD]^^305^^^^^300^310^[ADD] instant = period.getFieldType ( i ) .getField ( this ) .add ( instant, value * scalar ) ;^[METHOD] add [TYPE] long [PARAMETER] ReadablePeriod period long instant int scalar [CLASS] BaseChronology   [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  long current  duration  endInstant  instant  serialVersionUID  startInstant  value  [TYPE]  int i  isize  scalar 
[REPLACE]^for  ( int i = 0 , isize = period.size (  )  - 2; i < isize; i++ )  {^302^^^^^300^310^[REPLACE] for  ( int i = 0, isize = period.size (  ) ; i < isize; i++ )  {^[METHOD] add [TYPE] long [PARAMETER] ReadablePeriod period long instant int scalar [CLASS] BaseChronology   [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  long current  duration  endInstant  instant  serialVersionUID  startInstant  value  [TYPE]  int i  isize  scalar 
[ADD]^^302^303^304^305^306^300^310^[ADD] for  ( int i = 0, isize = period.size (  ) ; i < isize; i++ )  { long value = period.getValue ( i ) ; if  ( value != 0 )  { instant = period.getFieldType ( i ) .getField ( this ) .add ( instant, value * scalar ) ; }^[METHOD] add [TYPE] long [PARAMETER] ReadablePeriod period long instant int scalar [CLASS] BaseChronology   [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  long current  duration  endInstant  instant  serialVersionUID  startInstant  value  [TYPE]  int i  isize  scalar 
[REPLACE]^if  ( value  ==  1 )  {^304^^^^^300^310^[REPLACE] if  ( value != 0 )  {^[METHOD] add [TYPE] long [PARAMETER] ReadablePeriod period long instant int scalar [CLASS] BaseChronology   [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  long current  duration  endInstant  instant  serialVersionUID  startInstant  value  [TYPE]  int i  isize  scalar 
[REPLACE]^instant = period.getFieldType ( i ) .getField ( this ) .add ( instant,startInstant * scalar ) ;^305^^^^^300^310^[REPLACE] instant = period.getFieldType ( i ) .getField ( this ) .add ( instant, value * scalar ) ;^[METHOD] add [TYPE] long [PARAMETER] ReadablePeriod period long instant int scalar [CLASS] BaseChronology   [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  long current  duration  endInstant  instant  serialVersionUID  startInstant  value  [TYPE]  int i  isize  scalar 
[REPLACE]^instant = period.getFieldType ( i ) .getField ( this ) .add ( instant, startInstant * scalar ) ;^305^^^^^300^310^[REPLACE] instant = period.getFieldType ( i ) .getField ( this ) .add ( instant, value * scalar ) ;^[METHOD] add [TYPE] long [PARAMETER] ReadablePeriod period long instant int scalar [CLASS] BaseChronology   [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  long current  duration  endInstant  instant  serialVersionUID  startInstant  value  [TYPE]  int i  isize  scalar 
[REPLACE]^long value = period.getFieldType ( i ) ;^303^^^^^300^310^[REPLACE] long value = period.getValue ( i ) ;^[METHOD] add [TYPE] long [PARAMETER] ReadablePeriod period long instant int scalar [CLASS] BaseChronology   [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  long current  duration  endInstant  instant  serialVersionUID  startInstant  value  [TYPE]  int i  isize  scalar 
[REPLACE]^instant = partial.getFieldType ( i ) .getField ( this ) .set ( instant, partial.getValue ( i )  ) ; ;^305^^^^^300^310^[REPLACE] instant = period.getFieldType ( i ) .getField ( this ) .add ( instant, value * scalar ) ;^[METHOD] add [TYPE] long [PARAMETER] ReadablePeriod period long instant int scalar [CLASS] BaseChronology   [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  long current  duration  endInstant  instant  serialVersionUID  startInstant  value  [TYPE]  int i  isize  scalar 
[REPLACE]^for  ( int i = 0 , isize = period.size (  ) ; i < isize; i++ )  {^302^^^^^300^310^[REPLACE] for  ( int i = 0, isize = period.size (  ) ; i < isize; i++ )  {^[METHOD] add [TYPE] long [PARAMETER] ReadablePeriod period long instant int scalar [CLASS] BaseChronology   [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  long current  duration  endInstant  instant  serialVersionUID  startInstant  value  [TYPE]  int i  isize  scalar 
[REPLACE]^for  ( int i = 0; i < size; i++ )  { values[i] = partial.getFieldType ( i ) .getField ( this ) .get ( instant ) ;^302^^^^^300^310^[REPLACE] for  ( int i = 0, isize = period.size (  ) ; i < isize; i++ )  {^[METHOD] add [TYPE] long [PARAMETER] ReadablePeriod period long instant int scalar [CLASS] BaseChronology   [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  long current  duration  endInstant  instant  serialVersionUID  startInstant  value  [TYPE]  int i  isize  scalar 
[REPLACE]^long value = period.getFieldType ( isize ) ;^303^^^^^300^310^[REPLACE] long value = period.getValue ( i ) ;^[METHOD] add [TYPE] long [PARAMETER] ReadablePeriod period long instant int scalar [CLASS] BaseChronology   [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  long current  duration  endInstant  instant  serialVersionUID  startInstant  value  [TYPE]  int i  isize  scalar 
[REPLACE]^if  (startInstant  ==  0 )  {^304^^^^^300^310^[REPLACE] if  ( value != 0 )  {^[METHOD] add [TYPE] long [PARAMETER] ReadablePeriod period long instant int scalar [CLASS] BaseChronology   [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  long current  duration  endInstant  instant  serialVersionUID  startInstant  value  [TYPE]  int i  isize  scalar 
[ADD]^instant = period.getFieldType ( i ) .getField ( this ) .add ( instant, value * scalar ) ;^304^305^306^^^300^310^[ADD] if  ( value != 0 )  { instant = period.getFieldType ( i ) .getField ( this ) .add ( instant, value * scalar ) ; }^[METHOD] add [TYPE] long [PARAMETER] ReadablePeriod period long instant int scalar [CLASS] BaseChronology   [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  long current  duration  endInstant  instant  serialVersionUID  startInstant  value  [TYPE]  int i  isize  scalar 
[REPLACE]^for  ( int i = 0 , isize = period.length (  ) ; i < isize; i++ )  {^302^^^^^300^310^[REPLACE] for  ( int i = 0, isize = period.size (  ) ; i < isize; i++ )  {^[METHOD] add [TYPE] long [PARAMETER] ReadablePeriod period long instant int scalar [CLASS] BaseChronology   [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  long current  duration  endInstant  instant  serialVersionUID  startInstant  value  [TYPE]  int i  isize  scalar 
[REPLACE]^if  ( value  ==  0 )  {^304^^^^^300^310^[REPLACE] if  ( value != 0 )  {^[METHOD] add [TYPE] long [PARAMETER] ReadablePeriod period long instant int scalar [CLASS] BaseChronology   [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  long current  duration  endInstant  instant  serialVersionUID  startInstant  value  [TYPE]  int i  isize  scalar 
[REPLACE]^instant = period.getFieldType ( i ) .getField ( this ) .add ( instant, value  ||  scalar ) ;^305^^^^^300^310^[REPLACE] instant = period.getFieldType ( i ) .getField ( this ) .add ( instant, value * scalar ) ;^[METHOD] add [TYPE] long [PARAMETER] ReadablePeriod period long instant int scalar [CLASS] BaseChronology   [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  long current  duration  endInstant  instant  serialVersionUID  startInstant  value  [TYPE]  int i  isize  scalar 
[REPLACE]^long value = period .getFieldType ( isize )  ;^303^^^^^300^310^[REPLACE] long value = period.getValue ( i ) ;^[METHOD] add [TYPE] long [PARAMETER] ReadablePeriod period long instant int scalar [CLASS] BaseChronology   [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  long current  duration  endInstant  instant  serialVersionUID  startInstant  value  [TYPE]  int i  isize  scalar 
[ADD]^^303^^^^^300^310^[ADD] long value = period.getValue ( i ) ;^[METHOD] add [TYPE] long [PARAMETER] ReadablePeriod period long instant int scalar [CLASS] BaseChronology   [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  long current  duration  endInstant  instant  serialVersionUID  startInstant  value  [TYPE]  int i  isize  scalar 
[REPLACE]^return startInstant;^309^^^^^300^310^[REPLACE] return instant;^[METHOD] add [TYPE] long [PARAMETER] ReadablePeriod period long instant int scalar [CLASS] BaseChronology   [TYPE]  boolean false  true  [TYPE]  ReadablePeriod period  [TYPE]  long current  duration  endInstant  instant  serialVersionUID  startInstant  value  [TYPE]  int i  isize  scalar 
[REPLACE]^if  ( duration == 0 &&true )  {^322^^^^^321^327^[REPLACE] if  ( duration == 0 || scalar == 0 )  {^[METHOD] add [TYPE] long [PARAMETER] long instant long duration int scalar [CLASS] BaseChronology   [TYPE]  long add  current  duration  endInstant  instant  serialVersionUID  startInstant  value  [TYPE]  int scalar  [TYPE]  boolean false  true 
[REPLACE]^return startInstant;^323^^^^^321^327^[REPLACE] return instant;^[METHOD] add [TYPE] long [PARAMETER] long instant long duration int scalar [CLASS] BaseChronology   [TYPE]  long add  current  duration  endInstant  instant  serialVersionUID  startInstant  value  [TYPE]  int scalar  [TYPE]  boolean false  true 
[REPLACE]^long add = FieldUtils.safeAdd ( duration, scalar ) ;^325^^^^^321^327^[REPLACE] long add = FieldUtils.safeMultiply ( duration, scalar ) ;^[METHOD] add [TYPE] long [PARAMETER] long instant long duration int scalar [CLASS] BaseChronology   [TYPE]  long add  current  duration  endInstant  instant  serialVersionUID  startInstant  value  [TYPE]  int scalar  [TYPE]  boolean false  true 
[REPLACE]^return FieldUtils.safeMultiply ( startInstant, add ) ;^326^^^^^321^327^[REPLACE] return FieldUtils.safeAdd ( instant, add ) ;^[METHOD] add [TYPE] long [PARAMETER] long instant long duration int scalar [CLASS] BaseChronology   [TYPE]  long add  current  duration  endInstant  instant  serialVersionUID  startInstant  value  [TYPE]  int scalar  [TYPE]  boolean false  true 
[REPLACE]^return   DurationFieldType.millis (  )  ;^337^^^^^336^338^[REPLACE] return UnsupportedDurationField.getInstance ( DurationFieldType.millis (  )  ) ;^[METHOD] millis [TYPE] DurationField [PARAMETER] [CLASS] BaseChronology   [TYPE]  long add  current  duration  endInstant  instant  serialVersionUID  startInstant  value  [TYPE]  boolean false  true 
[REPLACE]^return UnsupportedDateTimeField.getInstance ( DateTimeFieldType .millisOfDay (  )  , millis (  )  ) ;^346^^^^^345^347^[REPLACE] return UnsupportedDateTimeField.getInstance ( DateTimeFieldType.millisOfSecond (  ) , millis (  )  ) ;^[METHOD] millisOfSecond [TYPE] DateTimeField [PARAMETER] [CLASS] BaseChronology   [TYPE]  long add  current  duration  endInstant  instant  serialVersionUID  startInstant  value  [TYPE]  boolean false  true 
[REPLACE]^return   DateTimeFieldType.millisOfDay (  )   ) ;^355^^^^^354^356^[REPLACE] return UnsupportedDateTimeField.getInstance ( DateTimeFieldType.millisOfDay (  ) , millis (  )  ) ;^[METHOD] millisOfDay [TYPE] DateTimeField [PARAMETER] [CLASS] BaseChronology   [TYPE]  long add  current  duration  endInstant  instant  serialVersionUID  startInstant  value  [TYPE]  boolean false  true 
[REPLACE]^return UnsupportedDurationField.getInstance ( DurationFieldType.hours (  )  ) ;^366^^^^^365^367^[REPLACE] return UnsupportedDurationField.getInstance ( DurationFieldType.seconds (  )  ) ;^[METHOD] seconds [TYPE] DurationField [PARAMETER] [CLASS] BaseChronology   [TYPE]  long add  current  duration  endInstant  instant  serialVersionUID  startInstant  value  [TYPE]  boolean false  true 
[REPLACE]^return   DateTimeFieldType.secondOfMinute (  )   ) ;^375^^^^^374^376^[REPLACE] return UnsupportedDateTimeField.getInstance ( DateTimeFieldType.secondOfMinute (  ) , seconds (  )  ) ;^[METHOD] secondOfMinute [TYPE] DateTimeField [PARAMETER] [CLASS] BaseChronology   [TYPE]  long add  current  duration  endInstant  instant  serialVersionUID  startInstant  value  [TYPE]  boolean false  true 
[REPLACE]^return   DateTimeFieldType.secondOfDay (  )   ) ;^384^^^^^383^385^[REPLACE] return UnsupportedDateTimeField.getInstance ( DateTimeFieldType.secondOfDay (  ) , seconds (  )  ) ;^[METHOD] secondOfDay [TYPE] DateTimeField [PARAMETER] [CLASS] BaseChronology   [TYPE]  long add  current  duration  endInstant  instant  serialVersionUID  startInstant  value  [TYPE]  boolean false  true 
[REPLACE]^return UnsupportedDurationField.getInstance ( DurationFieldType.months (  )  ) ;^395^^^^^394^396^[REPLACE] return UnsupportedDurationField.getInstance ( DurationFieldType.minutes (  )  ) ;^[METHOD] minutes [TYPE] DurationField [PARAMETER] [CLASS] BaseChronology   [TYPE]  long add  current  duration  endInstant  instant  serialVersionUID  startInstant  value  [TYPE]  boolean false  true 
[REPLACE]^return UnsupportedDateTimeField.getInstance ( DateTimeFieldType.minuteOfDay (  ) , minutes (  )  ) ;^404^^^^^403^405^[REPLACE] return UnsupportedDateTimeField.getInstance ( DateTimeFieldType.minuteOfHour (  ) , minutes (  )  ) ;^[METHOD] minuteOfHour [TYPE] DateTimeField [PARAMETER] [CLASS] BaseChronology   [TYPE]  long add  current  duration  endInstant  instant  serialVersionUID  startInstant  value  [TYPE]  boolean false  true 
[REPLACE]^return   DateTimeFieldType.minuteOfDay (  )   ) ;^413^^^^^412^414^[REPLACE] return UnsupportedDateTimeField.getInstance ( DateTimeFieldType.minuteOfDay (  ) , minutes (  )  ) ;^[METHOD] minuteOfDay [TYPE] DateTimeField [PARAMETER] [CLASS] BaseChronology   [TYPE]  long add  current  duration  endInstant  instant  serialVersionUID  startInstant  value  [TYPE]  boolean false  true 
[REPLACE]^return   DurationFieldType.hours (  )  ;^424^^^^^423^425^[REPLACE] return UnsupportedDurationField.getInstance ( DurationFieldType.hours (  )  ) ;^[METHOD] hours [TYPE] DurationField [PARAMETER] [CLASS] BaseChronology   [TYPE]  long add  current  duration  endInstant  instant  serialVersionUID  startInstant  value  [TYPE]  boolean false  true 
[REPLACE]^return   DateTimeFieldType.hourOfDay (  )   ) ;^433^^^^^432^434^[REPLACE] return UnsupportedDateTimeField.getInstance ( DateTimeFieldType.hourOfDay (  ) , hours (  )  ) ;^[METHOD] hourOfDay [TYPE] DateTimeField [PARAMETER] [CLASS] BaseChronology   [TYPE]  long add  current  duration  endInstant  instant  serialVersionUID  startInstant  value  [TYPE]  boolean false  true 
[REPLACE]^return UnsupportedDateTimeField.getInstance ( DateTimeFieldType.clockhourOfHalfday (  ) , hours (  )  ) ;^442^^^^^441^443^[REPLACE] return UnsupportedDateTimeField.getInstance ( DateTimeFieldType.clockhourOfDay (  ) , hours (  )  ) ;^[METHOD] clockhourOfDay [TYPE] DateTimeField [PARAMETER] [CLASS] BaseChronology   [TYPE]  long add  current  duration  endInstant  instant  serialVersionUID  startInstant  value  [TYPE]  boolean false  true 
[REPLACE]^return   DurationFieldType.halfdays (  )  ;^453^^^^^452^454^[REPLACE] return UnsupportedDurationField.getInstance ( DurationFieldType.halfdays (  )  ) ;^[METHOD] halfdays [TYPE] DurationField [PARAMETER] [CLASS] BaseChronology   [TYPE]  long add  current  duration  endInstant  instant  serialVersionUID  startInstant  value  [TYPE]  boolean false  true 
[REPLACE]^return   DateTimeFieldType.hourOfHalfday (  )   ) ;^462^^^^^461^463^[REPLACE] return UnsupportedDateTimeField.getInstance ( DateTimeFieldType.hourOfHalfday (  ) , hours (  )  ) ;^[METHOD] hourOfHalfday [TYPE] DateTimeField [PARAMETER] [CLASS] BaseChronology   [TYPE]  long add  current  duration  endInstant  instant  serialVersionUID  startInstant  value  [TYPE]  boolean false  true 
[REPLACE]^return UnsupportedDateTimeField.getInstance ( DateTimeFieldType .clockhourOfDay (  )  , hours (  )  ) ;^471^^^^^470^472^[REPLACE] return UnsupportedDateTimeField.getInstance ( DateTimeFieldType.clockhourOfHalfday (  ) , hours (  )  ) ;^[METHOD] clockhourOfHalfday [TYPE] DateTimeField [PARAMETER] [CLASS] BaseChronology   [TYPE]  long add  current  duration  endInstant  instant  serialVersionUID  startInstant  value  [TYPE]  boolean false  true 
[REPLACE]^return UnsupportedDateTimeField.getInstance ( DateTimeFieldType.millisOfDay (  ) , halfdays (  )  ) ;^480^^^^^479^481^[REPLACE] return UnsupportedDateTimeField.getInstance ( DateTimeFieldType.halfdayOfDay (  ) , halfdays (  )  ) ;^[METHOD] halfdayOfDay [TYPE] DateTimeField [PARAMETER] [CLASS] BaseChronology   [TYPE]  long add  current  duration  endInstant  instant  serialVersionUID  startInstant  value  [TYPE]  boolean false  true 
[REPLACE]^return   DurationFieldType.days (  )  ;^491^^^^^490^492^[REPLACE] return UnsupportedDurationField.getInstance ( DurationFieldType.days (  )  ) ;^[METHOD] days [TYPE] DurationField [PARAMETER] [CLASS] BaseChronology   [TYPE]  long add  current  duration  endInstant  instant  serialVersionUID  startInstant  value  [TYPE]  boolean false  true 
[REPLACE]^return UnsupportedDateTimeField.getInstance ( DateTimeFieldType.era (  ) , eras (  )  ) ;^504^^^^^503^505^[REPLACE] return UnsupportedDateTimeField.getInstance ( DateTimeFieldType.dayOfWeek (  ) , days (  )  ) ;^[METHOD] dayOfWeek [TYPE] DateTimeField [PARAMETER] [CLASS] BaseChronology   [TYPE]  long add  current  duration  endInstant  instant  serialVersionUID  startInstant  value  [TYPE]  boolean false  true 
[REPLACE]^return   DateTimeFieldType.dayOfMonth (  )   ) ;^513^^^^^512^514^[REPLACE] return UnsupportedDateTimeField.getInstance ( DateTimeFieldType.dayOfMonth (  ) , days (  )  ) ;^[METHOD] dayOfMonth [TYPE] DateTimeField [PARAMETER] [CLASS] BaseChronology   [TYPE]  long add  current  duration  endInstant  instant  serialVersionUID  startInstant  value  [TYPE]  boolean false  true 
[REPLACE]^return UnsupportedDateTimeField.getInstance ( DateTimeFieldType.era (  ) , eras (  )  ) ;^522^^^^^521^523^[REPLACE] return UnsupportedDateTimeField.getInstance ( DateTimeFieldType.dayOfYear (  ) , days (  )  ) ;^[METHOD] dayOfYear [TYPE] DateTimeField [PARAMETER] [CLASS] BaseChronology   [TYPE]  long add  current  duration  endInstant  instant  serialVersionUID  startInstant  value  [TYPE]  boolean false  true 
[REPLACE]^return UnsupportedDurationField.getInstance ( DurationFieldType.years (  )  ) ;^533^^^^^532^534^[REPLACE] return UnsupportedDurationField.getInstance ( DurationFieldType.weeks (  )  ) ;^[METHOD] weeks [TYPE] DurationField [PARAMETER] [CLASS] BaseChronology   [TYPE]  long add  current  duration  endInstant  instant  serialVersionUID  startInstant  value  [TYPE]  boolean false  true 
[REPLACE]^return UnsupportedDateTimeField.getInstance ( DateTimeFieldType .weekyear (  )  , weeks (  )  ) ;^542^^^^^541^543^[REPLACE] return UnsupportedDateTimeField.getInstance ( DateTimeFieldType.weekOfWeekyear (  ) , weeks (  )  ) ;^[METHOD] weekOfWeekyear [TYPE] DateTimeField [PARAMETER] [CLASS] BaseChronology   [TYPE]  long add  current  duration  endInstant  instant  serialVersionUID  startInstant  value  [TYPE]  boolean false  true 
[REPLACE]^return   DurationFieldType.weekyears (  )  ;^553^^^^^552^554^[REPLACE] return UnsupportedDurationField.getInstance ( DurationFieldType.weekyears (  )  ) ;^[METHOD] weekyears [TYPE] DurationField [PARAMETER] [CLASS] BaseChronology   [TYPE]  long add  current  duration  endInstant  instant  serialVersionUID  startInstant  value  [TYPE]  boolean false  true 
[REPLACE]^return UnsupportedDateTimeField.getInstance ( DateTimeFieldType.era (  ) , eras (  )  ) ;^562^^^^^561^563^[REPLACE] return UnsupportedDateTimeField.getInstance ( DateTimeFieldType.weekyear (  ) , weekyears (  )  ) ;^[METHOD] weekyear [TYPE] DateTimeField [PARAMETER] [CLASS] BaseChronology   [TYPE]  long add  current  duration  endInstant  instant  serialVersionUID  startInstant  value  [TYPE]  boolean false  true 
[REPLACE]^return UnsupportedDateTimeField.getInstance ( DateTimeFieldType.era (  ) , eras (  )  ) ;^571^^^^^570^572^[REPLACE] return UnsupportedDateTimeField.getInstance ( DateTimeFieldType.weekyearOfCentury (  ) , weekyears (  )  ) ;^[METHOD] weekyearOfCentury [TYPE] DateTimeField [PARAMETER] [CLASS] BaseChronology   [TYPE]  long add  current  duration  endInstant  instant  serialVersionUID  startInstant  value  [TYPE]  boolean false  true 
[REPLACE]^return   DurationFieldType.months (  )  ;^582^^^^^581^583^[REPLACE] return UnsupportedDurationField.getInstance ( DurationFieldType.months (  )  ) ;^[METHOD] months [TYPE] DurationField [PARAMETER] [CLASS] BaseChronology   [TYPE]  long add  current  duration  endInstant  instant  serialVersionUID  startInstant  value  [TYPE]  boolean false  true 
[REPLACE]^return   DateTimeFieldType.monthOfYear (  )   ) ;^591^^^^^590^592^[REPLACE] return UnsupportedDateTimeField.getInstance ( DateTimeFieldType.monthOfYear (  ) , months (  )  ) ;^[METHOD] monthOfYear [TYPE] DateTimeField [PARAMETER] [CLASS] BaseChronology   [TYPE]  long add  current  duration  endInstant  instant  serialVersionUID  startInstant  value  [TYPE]  boolean false  true 
[REPLACE]^return UnsupportedDurationField.getInstance ( DurationFieldType.hours (  )  ) ;^602^^^^^601^603^[REPLACE] return UnsupportedDurationField.getInstance ( DurationFieldType.years (  )  ) ;^[METHOD] years [TYPE] DurationField [PARAMETER] [CLASS] BaseChronology   [TYPE]  long add  current  duration  endInstant  instant  serialVersionUID  startInstant  value  [TYPE]  boolean false  true 
[REPLACE]^return UnsupportedDateTimeField.getInstance ( DateTimeFieldType.era (  ) , eras (  )  ) ;^611^^^^^610^612^[REPLACE] return UnsupportedDateTimeField.getInstance ( DateTimeFieldType.year (  ) , years (  )  ) ;^[METHOD] year [TYPE] DateTimeField [PARAMETER] [CLASS] BaseChronology   [TYPE]  long add  current  duration  endInstant  instant  serialVersionUID  startInstant  value  [TYPE]  boolean false  true 
[REPLACE]^return UnsupportedDateTimeField.getInstance ( DateTimeFieldType.yearOfCentury (  ) , years (  )  ) ;^620^^^^^619^621^[REPLACE] return UnsupportedDateTimeField.getInstance ( DateTimeFieldType.yearOfEra (  ) , years (  )  ) ;^[METHOD] yearOfEra [TYPE] DateTimeField [PARAMETER] [CLASS] BaseChronology   [TYPE]  long add  current  duration  endInstant  instant  serialVersionUID  startInstant  value  [TYPE]  boolean false  true 
[REPLACE]^return UnsupportedDateTimeField.getInstance ( DateTimeFieldType.era (  ) , eras (  )  ) ;^629^^^^^628^630^[REPLACE] return UnsupportedDateTimeField.getInstance ( DateTimeFieldType.yearOfCentury (  ) , years (  )  ) ;^[METHOD] yearOfCentury [TYPE] DateTimeField [PARAMETER] [CLASS] BaseChronology   [TYPE]  long add  current  duration  endInstant  instant  serialVersionUID  startInstant  value  [TYPE]  boolean false  true 
[REPLACE]^return   DurationFieldType.centuries (  )  ;^640^^^^^639^641^[REPLACE] return UnsupportedDurationField.getInstance ( DurationFieldType.centuries (  )  ) ;^[METHOD] centuries [TYPE] DurationField [PARAMETER] [CLASS] BaseChronology   [TYPE]  long add  current  duration  endInstant  instant  serialVersionUID  startInstant  value  [TYPE]  boolean false  true 
[REPLACE]^return   DateTimeFieldType.centuryOfEra (  )   ) ;^649^^^^^648^650^[REPLACE] return UnsupportedDateTimeField.getInstance ( DateTimeFieldType.centuryOfEra (  ) , centuries (  )  ) ;^[METHOD] centuryOfEra [TYPE] DateTimeField [PARAMETER] [CLASS] BaseChronology   [TYPE]  long add  current  duration  endInstant  instant  serialVersionUID  startInstant  value  [TYPE]  boolean false  true 
[REPLACE]^return UnsupportedDurationField.getInstance ( DurationFieldType.weeks (  )  ) ;^660^^^^^659^661^[REPLACE] return UnsupportedDurationField.getInstance ( DurationFieldType.eras (  )  ) ;^[METHOD] eras [TYPE] DurationField [PARAMETER] [CLASS] BaseChronology   [TYPE]  long add  current  duration  endInstant  instant  serialVersionUID  startInstant  value  [TYPE]  boolean false  true 
[REPLACE]^return   DateTimeFieldType.era (  )   ) ;^669^^^^^668^670^[REPLACE] return UnsupportedDateTimeField.getInstance ( DateTimeFieldType.era (  ) , eras (  )  ) ;^[METHOD] era [TYPE] DateTimeField [PARAMETER] [CLASS] BaseChronology   [TYPE]  long add  current  duration  endInstant  instant  serialVersionUID  startInstant  value  [TYPE]  boolean false  true 
