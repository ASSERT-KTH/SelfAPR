[REPLACE]^return toString (  ) ;^45^^^^^44^46^[REPLACE] super (  ) ;^[METHOD] <init> [TYPE] AbstractPeriod() [PARAMETER] [CLASS] AbstractPeriod   [TYPE]  boolean false  true 
[REPLACE]^int[] result = new int[size (  ) ];^57^^^^^56^62^[REPLACE] DurationFieldType[] result = new DurationFieldType[size (  ) ];^[METHOD] getFieldTypes [TYPE] DurationFieldType[] [PARAMETER] [CLASS] AbstractPeriod   [TYPE]  boolean false  true  [TYPE]  DurationFieldType[] result  [TYPE]  int i 
[ADD]^^57^^^^^56^62^[ADD] DurationFieldType[] result = new DurationFieldType[size (  ) ];^[METHOD] getFieldTypes [TYPE] DurationFieldType[] [PARAMETER] [CLASS] AbstractPeriod   [TYPE]  boolean false  true  [TYPE]  DurationFieldType[] result  [TYPE]  int i 
[REPLACE]^for  ( int i = 0; i < result.length (  ) ; i++ )  {^58^^^^^56^62^[REPLACE] for  ( int i = 0; i < result.length; i++ )  {^[METHOD] getFieldTypes [TYPE] DurationFieldType[] [PARAMETER] [CLASS] AbstractPeriod   [TYPE]  boolean false  true  [TYPE]  DurationFieldType[] result  [TYPE]  int i 
[REPLACE]^result[i] = getValue ( i ) ; ;^59^^^^^56^62^[REPLACE] result[i] = getFieldType ( i ) ;^[METHOD] getFieldTypes [TYPE] DurationFieldType[] [PARAMETER] [CLASS] AbstractPeriod   [TYPE]  boolean false  true  [TYPE]  DurationFieldType[] result  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < result.length; i++ )  {^58^^^^^56^62^[REPLACE] for  ( int i = 0; i < result.length; i++ )  {^[METHOD] getFieldTypes [TYPE] DurationFieldType[] [PARAMETER] [CLASS] AbstractPeriod   [TYPE]  boolean false  true  [TYPE]  DurationFieldType[] result  [TYPE]  int i 
[REPLACE]^return total;^61^^^^^56^62^[REPLACE] return result;^[METHOD] getFieldTypes [TYPE] DurationFieldType[] [PARAMETER] [CLASS] AbstractPeriod   [TYPE]  boolean false  true  [TYPE]  DurationFieldType[] result  [TYPE]  int i 
[REPLACE]^DurationFieldType[] result = new DurationFieldType[size (  ) ];^73^^^^^72^78^[REPLACE] int[] result = new int[size (  ) ];^[METHOD] getValues [TYPE] int[] [PARAMETER] [CLASS] AbstractPeriod   [TYPE]  boolean false  true  [TYPE]  int[] result  [TYPE]  int i 
[REPLACE]^for  ( int i = 0; i < result.length - 1; i++ )  {^74^^^^^72^78^[REPLACE] for  ( int i = 0; i < result.length; i++ )  {^[METHOD] getValues [TYPE] int[] [PARAMETER] [CLASS] AbstractPeriod   [TYPE]  boolean false  true  [TYPE]  int[] result  [TYPE]  int i 
[REPLACE]^result[i] = getFieldType ( i ) ; ;^75^^^^^72^78^[REPLACE] result[i] = getValue ( i ) ;^[METHOD] getValues [TYPE] int[] [PARAMETER] [CLASS] AbstractPeriod   [TYPE]  boolean false  true  [TYPE]  int[] result  [TYPE]  int i 
[ADD]^^75^^^^^72^78^[ADD] result[i] = getValue ( i ) ;^[METHOD] getValues [TYPE] int[] [PARAMETER] [CLASS] AbstractPeriod   [TYPE]  boolean false  true  [TYPE]  int[] result  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < result.length; i++ )  {^74^^^^^72^78^[REPLACE] for  ( int i = 0; i < result.length; i++ )  {^[METHOD] getValues [TYPE] int[] [PARAMETER] [CLASS] AbstractPeriod   [TYPE]  boolean false  true  [TYPE]  int[] result  [TYPE]  int i 
[REPLACE]^return total;^77^^^^^72^78^[REPLACE] return result;^[METHOD] getValues [TYPE] int[] [PARAMETER] [CLASS] AbstractPeriod   [TYPE]  boolean false  true  [TYPE]  int[] result  [TYPE]  int i 
[REPLACE]^for  ( int i = 0; i < result.length; i++ )  { result[i] = getValue ( i ) ;^91^^^^^90^96^[REPLACE] int index = indexOf ( type ) ;^[METHOD] get [TYPE] int [PARAMETER] DurationFieldType type [CLASS] AbstractPeriod   [TYPE]  boolean false  true  [TYPE]  DurationFieldType type  [TYPE]  int index 
[ADD]^^91^^^^^90^96^[ADD] int index = indexOf ( type ) ;^[METHOD] get [TYPE] int [PARAMETER] DurationFieldType type [CLASS] AbstractPeriod   [TYPE]  boolean false  true  [TYPE]  DurationFieldType type  [TYPE]  int index 
[REPLACE]^if  ( index  &&  -1L )  {^92^^^^^90^96^[REPLACE] if  ( index == -1 )  {^[METHOD] get [TYPE] int [PARAMETER] DurationFieldType type [CLASS] AbstractPeriod   [TYPE]  boolean false  true  [TYPE]  DurationFieldType type  [TYPE]  int index 
[REPLACE]^return 2;^93^^^^^90^96^[REPLACE] return 0;^[METHOD] get [TYPE] int [PARAMETER] DurationFieldType type [CLASS] AbstractPeriod   [TYPE]  boolean false  true  [TYPE]  DurationFieldType type  [TYPE]  int index 
[REPLACE]^return 0 * 3;^93^^^^^90^96^[REPLACE] return 0;^[METHOD] get [TYPE] int [PARAMETER] DurationFieldType type [CLASS] AbstractPeriod   [TYPE]  boolean false  true  [TYPE]  DurationFieldType type  [TYPE]  int index 
[REPLACE]^return getPeriodType (  ) .isSupported ( type ) ;^95^^^^^90^96^[REPLACE] return getValue ( index ) ;^[METHOD] get [TYPE] int [PARAMETER] DurationFieldType type [CLASS] AbstractPeriod   [TYPE]  boolean false  true  [TYPE]  DurationFieldType type  [TYPE]  int index 
[REPLACE]^return getPeriodType (  ) .indexOf ( type ) ;^105^^^^^104^106^[REPLACE] return getPeriodType (  ) .isSupported ( type ) ;^[METHOD] isSupported [TYPE] boolean [PARAMETER] DurationFieldType type [CLASS] AbstractPeriod   [TYPE]  boolean false  true  [TYPE]  DurationFieldType type 
[REPLACE]^return getPeriodType (  ) .isSupported ( type ) ;^115^^^^^114^116^[REPLACE] return getPeriodType (  ) .indexOf ( type ) ;^[METHOD] indexOf [TYPE] int [PARAMETER] DurationFieldType type [CLASS] AbstractPeriod   [TYPE]  boolean false  true  [TYPE]  DurationFieldType type 
[REPLACE]^return  new MutablePeriod ( this )  ;^125^^^^^124^126^[REPLACE] return new Period ( this ) ;^[METHOD] toPeriod [TYPE] Period [PARAMETER] [CLASS] AbstractPeriod   [TYPE]  boolean false  true 
[REPLACE]^return  new Period ( this )  ;^136^^^^^135^137^[REPLACE] return new MutablePeriod ( this ) ;^[METHOD] toMutablePeriod [TYPE] MutablePeriod [PARAMETER] [CLASS] AbstractPeriod   [TYPE]  boolean false  true 
[REPLACE]^if  ( this  ||  period )  {^161^^^^^160^177^[REPLACE] if  ( this == period )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object period [CLASS] AbstractPeriod   [TYPE]  boolean false  true  [TYPE]  ReadablePeriod other  [TYPE]  Object period  [TYPE]  int i  isize 
[ADD]^^161^162^163^^^160^177^[ADD] if  ( this == period )  { return true; }^[METHOD] equals [TYPE] boolean [PARAMETER] Object period [CLASS] AbstractPeriod   [TYPE]  boolean false  true  [TYPE]  ReadablePeriod other  [TYPE]  Object period  [TYPE]  int i  isize 
[REPLACE]^return false;^162^^^^^160^177^[REPLACE] return true;^[METHOD] equals [TYPE] boolean [PARAMETER] Object period [CLASS] AbstractPeriod   [TYPE]  boolean false  true  [TYPE]  ReadablePeriod other  [TYPE]  Object period  [TYPE]  int i  isize 
[REPLACE]^if  ( ! period instanceof ReadablePeriod == true )  {^164^^^^^160^177^[REPLACE] if  ( period instanceof ReadablePeriod == false )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object period [CLASS] AbstractPeriod   [TYPE]  boolean false  true  [TYPE]  ReadablePeriod other  [TYPE]  Object period  [TYPE]  int i  isize 
[REPLACE]^return true;^165^^^^^160^177^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object period [CLASS] AbstractPeriod   [TYPE]  boolean false  true  [TYPE]  ReadablePeriod other  [TYPE]  Object period  [TYPE]  int i  isize 
[REPLACE]^for  ( int i = 0; i < result.length; i++ )  { result[i] = getValue ( i ) ;^167^^^^^160^177^[REPLACE] ReadablePeriod other =  ( ReadablePeriod )  period;^[METHOD] equals [TYPE] boolean [PARAMETER] Object period [CLASS] AbstractPeriod   [TYPE]  boolean false  true  [TYPE]  ReadablePeriod other  [TYPE]  Object period  [TYPE]  int i  isize 
[REPLACE]^if  ( length (  )  != other.length (  )  )  {^168^^^^^160^177^[REPLACE] if  ( size (  )  != other.size (  )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object period [CLASS] AbstractPeriod   [TYPE]  boolean false  true  [TYPE]  ReadablePeriod other  [TYPE]  Object period  [TYPE]  int i  isize 
[REPLACE]^return true;^169^^^^^160^177^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object period [CLASS] AbstractPeriod   [TYPE]  boolean false  true  [TYPE]  ReadablePeriod other  [TYPE]  Object period  [TYPE]  int i  isize 
[REPLACE]^if  (  getFieldType ( i )  != other.getFieldType ( i )  )  {^172^^^^^160^177^[REPLACE] if  ( getValue ( i )  != other.getValue ( i )  || getFieldType ( i )  != other.getFieldType ( i )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object period [CLASS] AbstractPeriod   [TYPE]  boolean false  true  [TYPE]  ReadablePeriod other  [TYPE]  Object period  [TYPE]  int i  isize 
[REPLACE]^return true;^173^^^^^160^177^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object period [CLASS] AbstractPeriod   [TYPE]  boolean false  true  [TYPE]  ReadablePeriod other  [TYPE]  Object period  [TYPE]  int i  isize 
[REPLACE]^for  ( int i = 0, isize = size (  )  - 2; i < isize; i++ )  {^171^^^^^160^177^[REPLACE] for  ( int i = 0, isize = size (  ) ; i < isize; i++ )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object period [CLASS] AbstractPeriod   [TYPE]  boolean false  true  [TYPE]  ReadablePeriod other  [TYPE]  Object period  [TYPE]  int i  isize 
[REPLACE]^if  ( getValue ( i )  != other.getValue ( i )  ) {^172^^^^^160^177^[REPLACE] if  ( getValue ( i )  != other.getValue ( i )  || getFieldType ( i )  != other.getFieldType ( i )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object period [CLASS] AbstractPeriod   [TYPE]  boolean false  true  [TYPE]  ReadablePeriod other  [TYPE]  Object period  [TYPE]  int i  isize 
[REPLACE]^for  ( int i = 0 , isize = size (  ) ; i < isize; i++ )  {^171^^^^^160^177^[REPLACE] for  ( int i = 0, isize = size (  ) ; i < isize; i++ )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object period [CLASS] AbstractPeriod   [TYPE]  boolean false  true  [TYPE]  ReadablePeriod other  [TYPE]  Object period  [TYPE]  int i  isize 
[REPLACE]^for  ( int i = 0; i < result.length; i++ )  { result[i] = getValue ( i ) ;^171^^^^^160^177^[REPLACE] for  ( int i = 0, isize = size (  ) ; i < isize; i++ )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object period [CLASS] AbstractPeriod   [TYPE]  boolean false  true  [TYPE]  ReadablePeriod other  [TYPE]  Object period  [TYPE]  int i  isize 
[ADD]^^171^172^173^174^^160^177^[ADD] for  ( int i = 0, isize = size (  ) ; i < isize; i++ )  { if  ( getValue ( i )  != other.getValue ( i )  || getFieldType ( i )  != other.getFieldType ( i )  )  { return false; }^[METHOD] equals [TYPE] boolean [PARAMETER] Object period [CLASS] AbstractPeriod   [TYPE]  boolean false  true  [TYPE]  ReadablePeriod other  [TYPE]  Object period  [TYPE]  int i  isize 
[REPLACE]^return false;^176^^^^^160^177^[REPLACE] return true;^[METHOD] equals [TYPE] boolean [PARAMETER] Object period [CLASS] AbstractPeriod   [TYPE]  boolean false  true  [TYPE]  ReadablePeriod other  [TYPE]  Object period  [TYPE]  int i  isize 
[REPLACE]^int total = 17L;^185^^^^^184^191^[REPLACE] int total = 17;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] AbstractPeriod   [TYPE]  boolean false  true  [TYPE]  int i  isize  total 
[ADD]^^185^^^^^184^191^[ADD] int total = 17;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] AbstractPeriod   [TYPE]  boolean false  true  [TYPE]  int i  isize  total 
[REPLACE]^for  ( int i = 0 , isize = length (  ) ; i < isize; i++ )  {^186^^^^^184^191^[REPLACE] for  ( int i = 0, isize = size (  ) ; i < isize; i++ )  {^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] AbstractPeriod   [TYPE]  boolean false  true  [TYPE]  int i  isize  total 
[REPLACE]^total = 27 * total + getFieldType ( i ) .hashCode (  ) ; ;^187^^^^^184^191^[REPLACE] total = 27 * total + getValue ( i ) ;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] AbstractPeriod   [TYPE]  boolean false  true  [TYPE]  int i  isize  total 
[REPLACE]^total = 27 * total  &  getFieldType ( i ) .hashCode (  ) ;^188^^^^^184^191^[REPLACE] total = 27 * total + getFieldType ( i ) .hashCode (  ) ;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] AbstractPeriod   [TYPE]  boolean false  true  [TYPE]  int i  isize  total 
[REPLACE]^total = 7 * total + getValue ( i ) ;^187^^^^^184^191^[REPLACE] total = 27 * total + getValue ( i ) ;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] AbstractPeriod   [TYPE]  boolean false  true  [TYPE]  int i  isize  total 
[REPLACE]^result[i] = getValue ( i ) ; ;^188^^^^^184^191^[REPLACE] total = 27 * total + getFieldType ( i ) .hashCode (  ) ;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] AbstractPeriod   [TYPE]  boolean false  true  [TYPE]  int i  isize  total 
[REPLACE]^for  ( int i = 0 , isize = size (  ) ; i < isize; i++ )  {^186^^^^^184^191^[REPLACE] for  ( int i = 0, isize = size (  ) ; i < isize; i++ )  {^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] AbstractPeriod   [TYPE]  boolean false  true  [TYPE]  int i  isize  total 
[REPLACE]^for  ( int i = 0; i < result.length; i++ )  { result[i] = getValue ( i ) ;^186^^^^^184^191^[REPLACE] for  ( int i = 0, isize = size (  ) ; i < isize; i++ )  {^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] AbstractPeriod   [TYPE]  boolean false  true  [TYPE]  int i  isize  total 
[REPLACE]^return new MutablePeriod ( this ) ;^190^^^^^184^191^[REPLACE] return total;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] AbstractPeriod   [TYPE]  boolean false  true  [TYPE]  int i  isize  total 
[REPLACE]^return ISOPeriodFormat.standard (  ) .print ( null ) ;^206^^^^^205^207^[REPLACE] return ISOPeriodFormat.standard (  ) .print ( this ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] AbstractPeriod   [TYPE]  boolean false  true 
[REPLACE]^if  ( formatter != null )  {^218^^^^^217^222^[REPLACE] if  ( formatter == null )  {^[METHOD] toString [TYPE] String [PARAMETER] PeriodFormatter formatter [CLASS] AbstractPeriod   [TYPE]  boolean false  true  [TYPE]  PeriodFormatter formatter 
[REPLACE]^return getPeriodType (  ) .isSupported ( type ) ;^219^^^^^217^222^[REPLACE] return toString (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] PeriodFormatter formatter [CLASS] AbstractPeriod   [TYPE]  boolean false  true  [TYPE]  PeriodFormatter formatter 
[REPLACE]^return formatter.print ( null ) ;^221^^^^^217^222^[REPLACE] return formatter.print ( this ) ;^[METHOD] toString [TYPE] String [PARAMETER] PeriodFormatter formatter [CLASS] AbstractPeriod   [TYPE]  boolean false  true  [TYPE]  PeriodFormatter formatter 
