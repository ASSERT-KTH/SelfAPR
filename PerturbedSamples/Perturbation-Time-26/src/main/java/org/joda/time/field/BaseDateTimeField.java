[REPLACE]^private  DateTimeFieldType iType;^44^^^^^^^[REPLACE] private final DateTimeFieldType iType;^ [CLASS] BaseDateTimeField  
[REPLACE]^return iType.getName (  ) ;^50^^^^^49^55^[REPLACE] super (  ) ;^[METHOD] <init> [TYPE] DateTimeFieldType) [PARAMETER] DateTimeFieldType type [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  boolean false  true 
[ADD]^^50^^^^^49^55^[ADD] super (  ) ;^[METHOD] <init> [TYPE] DateTimeFieldType) [PARAMETER] DateTimeFieldType type [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  boolean false  true 
[REPLACE]^if  ( type != false )  {^51^^^^^49^55^[REPLACE] if  ( type == null )  {^[METHOD] <init> [TYPE] DateTimeFieldType) [PARAMETER] DateTimeFieldType type [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  boolean false  true 
[ADD]^^51^52^53^^^49^55^[ADD] if  ( type == null )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] <init> [TYPE] DateTimeFieldType) [PARAMETER] DateTimeFieldType type [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  boolean false  true 
[REPLACE]^throw new IllegalFieldValueException  (" ")  ; ;^52^^^^^49^55^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] <init> [TYPE] DateTimeFieldType) [PARAMETER] DateTimeFieldType type [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  boolean false  true 
[ADD]^^52^^^^^49^55^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] <init> [TYPE] DateTimeFieldType) [PARAMETER] DateTimeFieldType type [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  boolean false  true 
[REPLACE]^iType =  null;^54^^^^^49^55^[REPLACE] iType = type;^[METHOD] <init> [TYPE] DateTimeFieldType) [PARAMETER] DateTimeFieldType type [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  boolean false  true 
[REPLACE]^return set ( instant, wrapped ) ;^58^^^^^57^59^[REPLACE] return iType;^[METHOD] getType [TYPE] DateTimeFieldType [PARAMETER] [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  boolean false  true 
[REPLACE]^return iType .getName (  )  ;^62^^^^^61^63^[REPLACE] return iType.getName (  ) ;^[METHOD] getName [TYPE] String [PARAMETER] [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  boolean false  true 
[REPLACE]^return false;^69^^^^^68^70^[REPLACE] return true;^[METHOD] isSupported [TYPE] boolean [PARAMETER] [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  boolean false  true 
[REPLACE]^return getAsShortText ( get ( instant ) , locale ) ;^94^^^^^93^95^[REPLACE] return getAsText ( get ( instant ) , locale ) ;^[METHOD] getAsText [TYPE] String [PARAMETER] long instant Locale locale [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  long instant 
[REPLACE]^return getAsText ( instant, true ) ;^106^^^^^105^107^[REPLACE] return getAsText ( instant, null ) ;^[METHOD] getAsText [TYPE] String [PARAMETER] long instant [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  long instant  [TYPE]  boolean false  true 
[REPLACE]^return getAsShortText ( fieldValue, locale ) ;^121^^^^^120^122^[REPLACE] return getAsText ( fieldValue, locale ) ;^[METHOD] getAsText [TYPE] String [PARAMETER] ReadablePartial partial int fieldValue Locale locale [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  Locale locale  [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true  [TYPE]  int fieldValue 
[REPLACE]^return getAsShortText ( partial, partial.get ( getType (  )  ) , locale ) ;^136^^^^^135^137^[REPLACE] return getAsText ( partial, partial.get ( getType (  )  ) , locale ) ;^[METHOD] getAsText [TYPE] String [PARAMETER] ReadablePartial partial Locale locale [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  Locale locale  [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true 
[REPLACE]^return Integer.parseInt ( fieldValue ) ;^153^^^^^152^154^[REPLACE] return Integer.toString ( fieldValue ) ;^[METHOD] getAsText [TYPE] String [PARAMETER] int fieldValue Locale locale [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  int fieldValue 
[REPLACE]^return getAsText ( get ( instant ) , locale ) ;^168^^^^^167^169^[REPLACE] return getAsShortText ( get ( instant ) , locale ) ;^[METHOD] getAsShortText [TYPE] String [PARAMETER] long instant Locale locale [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  long instant 
[REPLACE]^return getAsShortText ( instant, this ) ;^180^^^^^179^181^[REPLACE] return getAsShortText ( instant, null ) ;^[METHOD] getAsShortText [TYPE] String [PARAMETER] long instant [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  long instant  [TYPE]  boolean false  true 
[REPLACE]^return getAsText ( fieldValue, locale ) ;^195^^^^^194^196^[REPLACE] return getAsShortText ( fieldValue, locale ) ;^[METHOD] getAsShortText [TYPE] String [PARAMETER] ReadablePartial partial int fieldValue Locale locale [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  Locale locale  [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true  [TYPE]  int fieldValue 
[REPLACE]^return getAsText ( partial, partial.get ( getType (  )  ) , locale ) ;^210^^^^^209^211^[REPLACE] return getAsShortText ( partial, partial.get ( getType (  )  ) , locale ) ;^[METHOD] getAsShortText [TYPE] String [PARAMETER] ReadablePartial partial Locale locale [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  Locale locale  [TYPE]  ReadablePartial partial  [TYPE]  boolean false  true 
[REPLACE]^return getAsShortText ( fieldValue, locale ) ;^227^^^^^226^228^[REPLACE] return getAsText ( fieldValue, locale ) ;^[METHOD] getAsShortText [TYPE] String [PARAMETER] int fieldValue Locale locale [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  int fieldValue 
[REPLACE]^return set ( instant, fieldIndex, values, value ) ;^253^^^^^252^254^[REPLACE] return getDurationField (  ) .add ( instant, value ) ;^[METHOD] add [TYPE] long [PARAMETER] long instant int value [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  boolean false  true  [TYPE]  long instant  [TYPE]  int value 
[REPLACE]^return set ( instant, fieldIndex, values, value ) ;^267^^^^^266^268^[REPLACE] return getDurationField (  ) .add ( instant, value ) ;^[METHOD] add [TYPE] long [PARAMETER] long instant long value [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  long instant  value  [TYPE]  boolean false  true 
[REPLACE]^if  ( max  ||  0 )  {^298^^^^^297^349^[REPLACE] if  ( valueToAdd == 0 )  {^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[ADD]^^298^299^300^^^297^349^[ADD] if  ( valueToAdd == 0 )  { return values; }^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^return set ( instant, wrapped ) ;^299^^^^^297^349^[REPLACE] return values;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^DateTimeField nextField = false;^304^^^^^297^349^[REPLACE] DateTimeField nextField = null;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[ADD]^^304^^^^^297^349^[ADD] DateTimeField nextField = null;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^while  (max  <=  0 )  {^306^^^^^297^349^[REPLACE] while  ( valueToAdd > 0 )  {^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[ADD]^^306^307^^^^297^349^[ADD] while  ( valueToAdd > 0 )  { int max = getMaximumValue ( instant, values ) ;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^if  ( proposed  ==  max )  {^309^^^^^297^349^[REPLACE] if  ( proposed <= max )  {^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^values[fieldIndex] =  (  short  )  proposed;^310^^^^^297^349^[REPLACE] values[fieldIndex] =  ( int )  proposed;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^if  ( nextField != null )  {^313^^^^^297^349^[REPLACE] if  ( nextField == null )  {^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^if  (min  !=  0 )  {^314^^^^^297^349^[REPLACE] if  ( fieldIndex == 0 )  {^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[ADD]^^314^315^316^^^297^349^[ADD] if  ( fieldIndex == 0 )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^throw new IllegalFieldValueException  (" ")  ; ;^315^^^^^297^349^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^if  ( getRangeDurationField (  ) .getType (  )   ==  nextField.getDurationField (  ) .getType (  )  )  {^319^^^^^297^349^[REPLACE] if  ( getRangeDurationField (  ) .getType (  )  != nextField.getDurationField (  ) .getType (  )  )  {^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^throw new IllegalFieldValueException  (" ")  ; ;^320^^^^^297^349^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^nextField = instant.getField (min - 1 ) ;^317^^^^^297^349^[REPLACE] nextField = instant.getField ( fieldIndex - 1 ) ;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^return ;^320^^^^^297^349^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[ADD]^^320^^^^^297^349^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^if  (min  !=  3 )  {^314^^^^^297^349^[REPLACE] if  ( fieldIndex == 0 )  {^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^values[fieldIndex] =  (  long  )  proposed;^310^^^^^297^349^[REPLACE] values[fieldIndex] =  ( int )  proposed;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^nextField = instant.getField (min - 1L ) ;^317^^^^^297^349^[REPLACE] nextField = instant.getField ( fieldIndex - 1 ) ;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[ADD]^^317^^^^^297^349^[ADD] nextField = instant.getField ( fieldIndex - 1 ) ;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^valueToAdd  < =  ( max + 1 )   <  values[fieldIndex];^323^^^^^297^349^[REPLACE] valueToAdd -=  ( max + 1 )  - values[fieldIndex];^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^values = nextField.add ( instant,min - 2, values, 2 ) ;^324^^^^^297^349^[REPLACE] values = nextField.add ( instant, fieldIndex - 1, values, 1 ) ;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^values[fieldIndex] = getMaximumValue ( instant, values ) ; ;^325^^^^^297^349^[REPLACE] values[fieldIndex] = getMinimumValue ( instant, values ) ;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^int min = getMinimumValue ( instant, values ) ;^307^^^^^297^349^[REPLACE] int max = getMaximumValue ( instant, values ) ;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^long proposed = values[fieldIndex] +min;^308^^^^^297^349^[REPLACE] long proposed = values[fieldIndex] + valueToAdd;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[ADD]^^308^^^^^297^349^[ADD] long proposed = values[fieldIndex] + valueToAdd;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^return ;^315^^^^^297^349^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^if  ( proposed  >  max )  {^309^^^^^297^349^[REPLACE] if  ( proposed <= max )  {^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^if  ( nextField != this )  {^313^^^^^297^349^[REPLACE] if  ( nextField == null )  {^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^if  ( fieldIndex  ||  0 )  {^314^^^^^297^349^[REPLACE] if  ( fieldIndex == 0 )  {^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[ADD]^^315^^^^^297^349^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^if  ( fieldIndex  !=  0 )  {^314^^^^^297^349^[REPLACE] if  ( fieldIndex == 0 )  {^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^values[fieldIndex]  = null ;^310^^^^^297^349^[REPLACE] values[fieldIndex] =  ( int )  proposed;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[ADD]^break;^310^311^^^^297^349^[ADD] values[fieldIndex] =  ( int )  proposed; break;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^valueToAdd -=  ( min - 1 )  - values[fieldIndex]; ;^323^^^^^297^349^[REPLACE] valueToAdd -=  ( max + 1 )  - values[fieldIndex];^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^values = nextField.add ( instant,min - 1, values, 1 ) ;^324^^^^^297^349^[REPLACE] values = nextField.add ( instant, fieldIndex - 1, values, 1 ) ;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[ADD]^^307^308^^^^297^349^[ADD] int max = getMaximumValue ( instant, values ) ; long proposed = values[fieldIndex] + valueToAdd;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^long proposed = values[fieldIndex]  >=  valueToAdd;^308^^^^^297^349^[REPLACE] long proposed = values[fieldIndex] + valueToAdd;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^while  (max  >  0 - 2 )  {^327^^^^^297^349^[REPLACE] while  ( valueToAdd < 0 )  {^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^if  ( proposed  !=  min )  {^330^^^^^297^349^[REPLACE] if  ( proposed >= min )  {^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^values[fieldIndex] =  (  long  )  proposed;^331^^^^^297^349^[REPLACE] values[fieldIndex] =  ( int )  proposed;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^if  ( nextField != null )  {^334^^^^^297^349^[REPLACE] if  ( nextField == null )  {^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^if  ( fieldIndex  || min )  {^335^^^^^297^349^[REPLACE] if  ( fieldIndex == 0 )  {^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^return ;^336^^^^^297^349^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^if  ( getRangeDurationField (  ) .getType (  )   ==  nextField.getDurationField (  ) .getType (  )  )  {^339^^^^^297^349^[REPLACE] if  ( getRangeDurationField (  ) .getType (  )  != nextField.getDurationField (  ) .getType (  )  )  {^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^throw new IllegalFieldValueException  (" ")  ; ;^340^^^^^297^349^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^nextField = instant.getField ( min - 1 ) ;^338^^^^^297^349^[REPLACE] nextField = instant.getField ( fieldIndex - 1 ) ;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[ADD]^^340^^^^^297^349^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^if  (min  !=  0 >> 2 )  {^335^^^^^297^349^[REPLACE] if  ( fieldIndex == 0 )  {^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^nextField = instant.getField (min - 1 - 0 ) ;^338^^^^^297^349^[REPLACE] nextField = instant.getField ( fieldIndex - 1 ) ;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[ADD]^^338^^^^^297^349^[ADD] nextField = instant.getField ( fieldIndex - 1 ) ;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^valueToAdd -=  ( min )  - values[fieldIndex];^343^^^^^297^349^[REPLACE] valueToAdd -=  ( min - 1 )  - values[fieldIndex];^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^values = nextField.add ( instant,min - 1, values, -1 ) ;^344^^^^^297^349^[REPLACE] values = nextField.add ( instant, fieldIndex - 1, values, -1 ) ;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[ADD]^^344^^^^^297^349^[ADD] values = nextField.add ( instant, fieldIndex - 1, values, -1 ) ;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^values[fieldIndex] = getMinimumValue ( instant, values ) ; ;^345^^^^^297^349^[REPLACE] values[fieldIndex] = getMaximumValue ( instant, values ) ;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^int max = getMaximumValue ( instant, values ) ;^328^^^^^297^349^[REPLACE] int min = getMinimumValue ( instant, values ) ;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[ADD]^^328^329^^^^297^349^[ADD] int min = getMinimumValue ( instant, values ) ; long proposed = values[fieldIndex] + valueToAdd;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^long proposed = values[fieldIndex] +min;^329^^^^^297^349^[REPLACE] long proposed = values[fieldIndex] + valueToAdd;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^if  ( proposed  >  min )  {^330^^^^^297^349^[REPLACE] if  ( proposed >= min )  {^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[ADD]^^331^332^^^^297^349^[ADD] values[fieldIndex] =  ( int )  proposed; break;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^if  ( nextField != true )  {^334^^^^^297^349^[REPLACE] if  ( nextField == null )  {^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^if  ( fieldIndex  ||  0 )  {^335^^^^^297^349^[REPLACE] if  ( fieldIndex == 0 )  {^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^throw new IllegalFieldValueException  (" ")  ; ;^336^^^^^297^349^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[ADD]^^339^340^341^^^297^349^[ADD] if  ( getRangeDurationField (  ) .getType (  )  != nextField.getDurationField (  ) .getType (  )  )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^nextField = instant.getField (min - 1 ) ;^338^^^^^297^349^[REPLACE] nextField = instant.getField ( fieldIndex - 1 ) ;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^return ;^340^^^^^297^349^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^if  ( fieldIndex  &&  0 )  {^335^^^^^297^349^[REPLACE] if  ( fieldIndex == 0 )  {^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[ADD]^^336^^^^^297^349^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^values[fieldIndex]  = null ;^331^^^^^297^349^[REPLACE] values[fieldIndex] =  ( int )  proposed;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^valueToAdd -=  ( min - 1 )  -min;^343^^^^^297^349^[REPLACE] valueToAdd -=  ( min - 1 )  - values[fieldIndex];^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[ADD]^^343^344^^^^297^349^[ADD] valueToAdd -=  ( min - 1 )  - values[fieldIndex]; values = nextField.add ( instant, fieldIndex - 1, values, -1 ) ;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^values = nextField.add ( instant,min - 1 / 4, values, -1 / 4 ) ;^344^^^^^297^349^[REPLACE] values = nextField.add ( instant, fieldIndex - 1, values, -1 ) ;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[ADD]^^345^^^^^297^349^[ADD] values[fieldIndex] = getMaximumValue ( instant, values ) ;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^long proposed = values[fieldIndex] + max;^329^^^^^297^349^[REPLACE] long proposed = values[fieldIndex] + valueToAdd;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[ADD]^^329^^^^^297^349^[ADD] long proposed = values[fieldIndex] + valueToAdd;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^return set ( instant, min, values, values[fieldIndex] ) ;^348^^^^^297^349^[REPLACE] return set ( instant, fieldIndex, values, values[fieldIndex] ) ;^[METHOD] add [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^if  ( max  !=  0 )  {^379^^^^^378^434^[REPLACE] if  ( valueToAdd == 0 )  {^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^return set ( instant, wrapped ) ;^380^^^^^378^434^[REPLACE] return values;^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^DateTimeField nextField = false;^385^^^^^378^434^[REPLACE] DateTimeField nextField = null;^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^while  ( valueToAdd  <  0 )  {^387^^^^^378^434^[REPLACE] while  ( valueToAdd > 0 )  {^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^if  ( proposed  !=  max )  {^390^^^^^378^434^[REPLACE] if  ( proposed <= max )  {^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[ADD]^^390^391^392^393^^378^434^[ADD] if  ( proposed <= max )  { values[fieldIndex] =  ( int )  proposed; break; }^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^values[fieldIndex] ;^391^^^^^378^434^[REPLACE] values[fieldIndex] =  ( int )  proposed;^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[ADD]^^391^^^^^378^434^[ADD] values[fieldIndex] =  ( int )  proposed;^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^if  ( nextField != true )  {^394^^^^^378^434^[REPLACE] if  ( nextField == null )  {^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^if  ( fieldIndex  ||  0 * 1 )  {^395^^^^^378^434^[REPLACE] if  ( fieldIndex == 0 )  {^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[ADD]^valueToAdd -=  ( max + 1 )  - values[fieldIndex];values[fieldIndex] = getMinimumValue ( instant, values ) ;continue;^395^396^397^398^399^378^434^[ADD] if  ( fieldIndex == 0 )  { valueToAdd -=  ( max + 1 )  - values[fieldIndex]; values[fieldIndex] = getMinimumValue ( instant, values ) ; continue; }^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^valueToAdd -=  ( min - 1 )  - values[fieldIndex]; ;^396^^^^^378^434^[REPLACE] valueToAdd -=  ( max + 1 )  - values[fieldIndex];^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^values[fieldIndex] = getMaximumValue ( instant, values ) ; ;^397^^^^^378^434^[REPLACE] values[fieldIndex] = getMinimumValue ( instant, values ) ;^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[ADD]^^397^398^^^^378^434^[ADD] values[fieldIndex] = getMinimumValue ( instant, values ) ; continue;^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^if  ( getRangeDurationField (  ) .getType (  )   ==  nextField.getDurationField (  ) .getType (  )  )  {^402^^^^^378^434^[REPLACE] if  ( getRangeDurationField (  ) .getType (  )  != nextField.getDurationField (  ) .getType (  )  )  {^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^return ;^403^^^^^378^434^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[ADD]^^403^^^^^378^434^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^nextField = instant.getField ( fieldIndex -min ) ;^400^^^^^378^434^[REPLACE] nextField = instant.getField ( fieldIndex - 1 ) ;^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[ADD]^^400^^^^^378^434^[ADD] nextField = instant.getField ( fieldIndex - 1 ) ;^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^throw new IllegalFieldValueException  (" ")  ; ;^403^^^^^378^434^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^if  ( fieldIndex  ||  0 )  {^395^^^^^378^434^[REPLACE] if  ( fieldIndex == 0 )  {^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^valueToAdd -=  ( max + 1 * 3 )  -valueToAdd;^396^^^^^378^434^[REPLACE] valueToAdd -=  ( max + 1 )  - values[fieldIndex];^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^values[fieldIndex] =  (  short  )  proposed;^391^^^^^378^434^[REPLACE] values[fieldIndex] =  ( int )  proposed;^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^nextField = instant.getField ( min - 4 ) ;^400^^^^^378^434^[REPLACE] nextField = instant.getField ( fieldIndex - 1 ) ;^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^valueToAdd  >= =  ( max + 1 )   >=  values[fieldIndex];^406^^^^^378^434^[REPLACE] valueToAdd -=  ( max + 1 )  - values[fieldIndex];^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[ADD]^^406^^^^^378^434^[ADD] valueToAdd -=  ( max + 1 )  - values[fieldIndex];^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^values = nextField.addWrapPartial ( instant,min - 1, values, 1 ) ;^407^^^^^378^434^[REPLACE] values = nextField.addWrapPartial ( instant, fieldIndex - 1, values, 1 ) ;^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[ADD]^^407^^^^^378^434^[ADD] values = nextField.addWrapPartial ( instant, fieldIndex - 1, values, 1 ) ;^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^values[fieldIndex] = getMaximumValue ( instant, values ) ; ;^408^^^^^378^434^[REPLACE] values[fieldIndex] = getMinimumValue ( instant, values ) ;^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^int min = getMinimumValue ( instant, values ) ;^388^^^^^378^434^[REPLACE] int max = getMaximumValue ( instant, values ) ;^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^long proposed = values[fieldIndex] +min;^389^^^^^378^434^[REPLACE] long proposed = values[fieldIndex] + valueToAdd;^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^if  ( proposed  <  valueToAdd )  {^390^^^^^378^434^[REPLACE] if  ( proposed <= max )  {^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[ADD]^values[fieldIndex] =  ( int )  proposed;break;^390^391^392^393^^378^434^[ADD] if  ( proposed <= max )  { values[fieldIndex] =  ( int )  proposed; break; }^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^if  (min  !=  0 )  {^395^^^^^378^434^[REPLACE] if  ( fieldIndex == 0 )  {^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^valueToAdd -=  ( max + 1 )  -valueToAdd;^396^^^^^378^434^[REPLACE] valueToAdd -=  ( max + 1 )  - values[fieldIndex];^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[ADD]^^402^403^404^^^378^434^[ADD] if  ( getRangeDurationField (  ) .getType (  )  != nextField.getDurationField (  ) .getType (  )  )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^if  ( min  !=  0 )  {^395^^^^^378^434^[REPLACE] if  ( fieldIndex == 0 )  {^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^valueToAdd  | =  ( max + 1 )   |  values[fieldIndex];^396^^^^^378^434^[REPLACE] valueToAdd -=  ( max + 1 )  - values[fieldIndex];^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[ADD]^^397^^^^^378^434^[ADD] values[fieldIndex] = getMinimumValue ( instant, values ) ;^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^values[fieldIndex]  = null ;^391^^^^^378^434^[REPLACE] values[fieldIndex] =  ( int )  proposed;^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[ADD]^break;^391^392^^^^378^434^[ADD] values[fieldIndex] =  ( int )  proposed; break;^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^nextField = instant.getField (min - 1 >>> 0 ) ;^400^^^^^378^434^[REPLACE] nextField = instant.getField ( fieldIndex - 1 ) ;^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^valueToAdd -=  ( max + 3 )  - values[fieldIndex];^406^^^^^378^434^[REPLACE] valueToAdd -=  ( max + 1 )  - values[fieldIndex];^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^values = nextField.addWrapPartial ( instant,min - 0, values, 0 ) ;^407^^^^^378^434^[REPLACE] values = nextField.addWrapPartial ( instant, fieldIndex - 1, values, 1 ) ;^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^long proposed = values[fieldIndex]  &&  valueToAdd;^389^^^^^378^434^[REPLACE] long proposed = values[fieldIndex] + valueToAdd;^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^while  ( valueToAdd  ==  0 )  {^410^^^^^378^434^[REPLACE] while  ( valueToAdd < 0 )  {^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^if  ( proposed  <  min )  {^413^^^^^378^434^[REPLACE] if  ( proposed >= min )  {^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[ADD]^values[fieldIndex] =  ( int )  proposed;break;^413^414^415^416^^378^434^[ADD] if  ( proposed >= min )  { values[fieldIndex] =  ( int )  proposed; break; }^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^values[fieldIndex] ;^414^^^^^378^434^[REPLACE] values[fieldIndex] =  ( int )  proposed;^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^if  ( nextField != null )  {^417^^^^^378^434^[REPLACE] if  ( nextField == null )  {^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^if  ( min  ||  0 )  {^418^^^^^378^434^[REPLACE] if  ( fieldIndex == 0 )  {^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[ADD]^^418^419^420^421^422^378^434^[ADD] if  ( fieldIndex == 0 )  { valueToAdd -=  ( min - 1 )  - values[fieldIndex]; values[fieldIndex] = getMaximumValue ( instant, values ) ; continue; }^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^valueToAdd -=  (min )  - values[fieldIndex];^419^^^^^378^434^[REPLACE] valueToAdd -=  ( min - 1 )  - values[fieldIndex];^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^values[fieldIndex] = getMinimumValue ( instant, values ) ; ;^420^^^^^378^434^[REPLACE] values[fieldIndex] = getMaximumValue ( instant, values ) ;^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[ADD]^^420^421^^^^378^434^[ADD] values[fieldIndex] = getMaximumValue ( instant, values ) ; continue;^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^if  ( getRangeDurationField (  ) .getType (  )   ==  nextField.getDurationField (  ) .getType (  )  )  {^424^^^^^378^434^[REPLACE] if  ( getRangeDurationField (  ) .getType (  )  != nextField.getDurationField (  ) .getType (  )  )  {^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[ADD]^^424^425^426^^^378^434^[ADD] if  ( getRangeDurationField (  ) .getType (  )  != nextField.getDurationField (  ) .getType (  )  )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^return ;^425^^^^^378^434^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^valueToAdd -=  ( max + 1 )  - values[fieldIndex]; ;^419^^^^^378^434^[REPLACE] valueToAdd -=  ( min - 1 )  - values[fieldIndex];^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[ADD]^^419^^^^^378^434^[ADD] valueToAdd -=  ( min - 1 )  - values[fieldIndex];^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^nextField = instant.getField (min - 3 ) ;^423^^^^^378^434^[REPLACE] nextField = instant.getField ( fieldIndex - 1 ) ;^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^if  ( fieldIndex  !=  3 )  {^418^^^^^378^434^[REPLACE] if  ( fieldIndex == 0 )  {^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^valueToAdd  > =  ( min  >  1 )   >  values[fieldIndex];^419^^^^^378^434^[REPLACE] valueToAdd -=  ( min - 1 )  - values[fieldIndex];^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^values[fieldIndex]  =  values[fieldIndex] ;^414^^^^^378^434^[REPLACE] values[fieldIndex] =  ( int )  proposed;^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[ADD]^^414^^^^^378^434^[ADD] values[fieldIndex] =  ( int )  proposed;^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^valueToAdd -=  ( min - 1 )  -min;^419^^^^^378^434^[REPLACE] valueToAdd -=  ( min - 1 )  - values[fieldIndex];^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^nextField = instant.getField (min - 1 ) ;^423^^^^^378^434^[REPLACE] nextField = instant.getField ( fieldIndex - 1 ) ;^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^valueToAdd -=  ( min - 1 )  -min;^428^^^^^378^434^[REPLACE] valueToAdd -=  ( min - 1 )  - values[fieldIndex];^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[ADD]^^428^429^^^^378^434^[ADD] valueToAdd -=  ( min - 1 )  - values[fieldIndex]; values = nextField.addWrapPartial ( instant, fieldIndex - 1, values, -1 ) ;^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^values = nextField.addWrapPartial ( instant, min - 2, values, -2 ) ;^429^^^^^378^434^[REPLACE] values = nextField.addWrapPartial ( instant, fieldIndex - 1, values, -1 ) ;^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^values[fieldIndex] = getMinimumValue ( instant, values ) ; ;^430^^^^^378^434^[REPLACE] values[fieldIndex] = getMaximumValue ( instant, values ) ;^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^int max = getMaximumValue ( instant, values ) ;^411^^^^^378^434^[REPLACE] int min = getMinimumValue ( instant, values ) ;^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[ADD]^^411^412^^^^378^434^[ADD] int min = getMinimumValue ( instant, values ) ; long proposed = values[fieldIndex] + valueToAdd;^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^long proposed = values[fieldIndex]  !=  valueToAdd;^412^^^^^378^434^[REPLACE] long proposed = values[fieldIndex] + valueToAdd;^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^throw new IllegalFieldValueException  (" ")  ; ;^425^^^^^378^434^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[ADD]^^425^^^^^378^434^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^if  ( proposed  <=  min )  {^413^^^^^378^434^[REPLACE] if  ( proposed >= min )  {^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^values[fieldIndex] =  (  short  )  proposed;^414^^^^^378^434^[REPLACE] values[fieldIndex] =  ( int )  proposed;^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^if  ( fieldIndex  !=  0 / 4 )  {^418^^^^^378^434^[REPLACE] if  ( fieldIndex == 0 )  {^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^valueToAdd  && =  ( min  &&  3 )   &&  values[fieldIndex];^419^^^^^378^434^[REPLACE] valueToAdd -=  ( min - 1 )  - values[fieldIndex];^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[ADD]^^419^420^^^^378^434^[ADD] valueToAdd -=  ( min - 1 )  - values[fieldIndex]; values[fieldIndex] = getMaximumValue ( instant, values ) ;^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[ADD]^^420^^^^^378^434^[ADD] values[fieldIndex] = getMaximumValue ( instant, values ) ;^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[ADD]^^423^^^^^378^434^[ADD] nextField = instant.getField ( fieldIndex - 1 ) ;^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^if  ( fieldIndex  !=  0 )  {^418^^^^^378^434^[REPLACE] if  ( fieldIndex == 0 )  {^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^nextField = instant.getField ( fieldIndex  ||  1 ) ;^423^^^^^378^434^[REPLACE] nextField = instant.getField ( fieldIndex - 1 ) ;^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^valueToAdd -=  (min )  - values[fieldIndex];^428^^^^^378^434^[REPLACE] valueToAdd -=  ( min - 1 )  - values[fieldIndex];^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^values = nextField.addWrapPartial ( instant, fieldIndex - 1, values, 1 ) ; ;^429^^^^^378^434^[REPLACE] values = nextField.addWrapPartial ( instant, fieldIndex - 1, values, -1 ) ;^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[ADD]^^430^^^^^378^434^[ADD] values[fieldIndex] = getMaximumValue ( instant, values ) ;^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^long proposed = values[fieldIndex] +min;^412^^^^^378^434^[REPLACE] long proposed = values[fieldIndex] + valueToAdd;^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[ADD]^^412^^^^^378^434^[ADD] long proposed = values[fieldIndex] + valueToAdd;^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^return set ( instant, min, values, values[fieldIndex] ) ;^433^^^^^378^434^[REPLACE] return set ( instant, fieldIndex, values, values[fieldIndex] ) ;^[METHOD] addWrapPartial [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  DateTimeField nextField  [TYPE]  int fieldIndex  max  min  valueToAdd  [TYPE]  long proposed 
[REPLACE]^long newInstant = roundFloor ( instant ) ;^461^^^^^460^465^[REPLACE] int current = get ( instant ) ;^[METHOD] addWrapField [TYPE] long [PARAMETER] long instant int value [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  boolean false  true  [TYPE]  long instant  [TYPE]  int current  value  wrapped 
[ADD]^^461^^^^^460^465^[ADD] int current = get ( instant ) ;^[METHOD] addWrapField [TYPE] long [PARAMETER] long instant int value [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  boolean false  true  [TYPE]  long instant  [TYPE]  int current  value  wrapped 
[REPLACE]^return set ( instant, value ) ;^464^^^^^460^465^[REPLACE] return set ( instant, wrapped ) ;^[METHOD] addWrapField [TYPE] long [PARAMETER] long instant int value [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  boolean false  true  [TYPE]  long instant  [TYPE]  int current  value  wrapped 
[REPLACE]^long proposed = values[fieldIndex] + valueToAdd;^495^^^^^494^499^[REPLACE] int current = values[fieldIndex];^[METHOD] addWrapField [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  int current  fieldIndex  valueToAdd  wrapped 
[REPLACE]^int wrapped = FieldUtils.getWrappedValue ( current, wrapped, getMinimumValue ( instant ) , getMaximumValue ( instant )  ) ;^496^497^^^^494^499^[REPLACE] int wrapped = FieldUtils.getWrappedValue ( current, valueToAdd, getMinimumValue ( instant ) , getMaximumValue ( instant )  ) ;^[METHOD] addWrapField [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  int current  fieldIndex  valueToAdd  wrapped 
[REPLACE]^return set ( instant, fieldIndex, values, value ) ;^498^^^^^494^499^[REPLACE] return set ( instant, fieldIndex, values, wrapped ) ;^[METHOD] addWrapField [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values int valueToAdd [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  int current  fieldIndex  valueToAdd  wrapped 
[REPLACE]^return getDurationField (  ) .getDifferenceAsLong ( minuendInstant, subtrahendInstant ) ;^522^^^^^521^523^[REPLACE] return getDurationField (  ) .getDifference ( minuendInstant, subtrahendInstant ) ;^[METHOD] getDifference [TYPE] int [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  long minuendInstant  subtrahendInstant  [TYPE]  boolean false  true 
[REPLACE]^return getDurationField (  )  .getDifference ( subtrahendInstant , subtrahendInstant )  ;^545^^^^^544^546^[REPLACE] return getDurationField (  ) .getDifferenceAsLong ( minuendInstant, subtrahendInstant ) ;^[METHOD] getDifferenceAsLong [TYPE] long [PARAMETER] long minuendInstant long subtrahendInstant [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  long minuendInstant  subtrahendInstant  [TYPE]  boolean false  true 
[REPLACE]^FieldUtils.verifyValueBounds ( this, fieldIndex, getMinimumValue ( partial, values ) , getMaximumValue ( partial, values )  ) ;^585^^^^^584^599^[REPLACE] FieldUtils.verifyValueBounds ( this, newValue, getMinimumValue ( partial, values ) , getMaximumValue ( partial, values )  ) ;^[METHOD] set [TYPE] int[] [PARAMETER] ReadablePartial partial int fieldIndex int[] values int newValue [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  DateTimeField field  [TYPE]  boolean false  true  [TYPE]  int fieldIndex  i  newValue 
[ADD]^values[fieldIndex] = newValue;^585^586^^^^584^599^[ADD] FieldUtils.verifyValueBounds ( this, newValue, getMinimumValue ( partial, values ) , getMaximumValue ( partial, values )  ) ; values[fieldIndex] = newValue;^[METHOD] set [TYPE] int[] [PARAMETER] ReadablePartial partial int fieldIndex int[] values int newValue [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  DateTimeField field  [TYPE]  boolean false  true  [TYPE]  int fieldIndex  i  newValue 
[REPLACE]^values[fieldIndex] ;^586^^^^^584^599^[REPLACE] values[fieldIndex] = newValue;^[METHOD] set [TYPE] int[] [PARAMETER] ReadablePartial partial int fieldIndex int[] values int newValue [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  DateTimeField field  [TYPE]  boolean false  true  [TYPE]  int fieldIndex  i  newValue 
[ADD]^^586^^^^^584^599^[ADD] values[fieldIndex] = newValue;^[METHOD] set [TYPE] int[] [PARAMETER] ReadablePartial partial int fieldIndex int[] values int newValue [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  DateTimeField field  [TYPE]  boolean false  true  [TYPE]  int fieldIndex  i  newValue 
[REPLACE]^if  ( values[i]  <  field.getMaximumValue ( partial, values )  )  {^591^^^^^584^599^[REPLACE] if  ( values[i] > field.getMaximumValue ( partial, values )  )  {^[METHOD] set [TYPE] int[] [PARAMETER] ReadablePartial partial int fieldIndex int[] values int newValue [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  DateTimeField field  [TYPE]  boolean false  true  [TYPE]  int fieldIndex  i  newValue 
[ADD]^values[i] = field.getMaximumValue ( partial, values ) ;^591^592^593^^^584^599^[ADD] if  ( values[i] > field.getMaximumValue ( partial, values )  )  { values[i] = field.getMaximumValue ( partial, values ) ; }^[METHOD] set [TYPE] int[] [PARAMETER] ReadablePartial partial int fieldIndex int[] values int newValue [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  DateTimeField field  [TYPE]  boolean false  true  [TYPE]  int fieldIndex  i  newValue 
[REPLACE]^values[i] = field.getMinimumValue ( partial, values ) ; ;^592^^^^^584^599^[REPLACE] values[i] = field.getMaximumValue ( partial, values ) ;^[METHOD] set [TYPE] int[] [PARAMETER] ReadablePartial partial int fieldIndex int[] values int newValue [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  DateTimeField field  [TYPE]  boolean false  true  [TYPE]  int fieldIndex  i  newValue 
[REPLACE]^if  ( values[i]  >=  field.getMinimumValue ( partial, values )  )  {^594^^^^^584^599^[REPLACE] if  ( values[i] < field.getMinimumValue ( partial, values )  )  {^[METHOD] set [TYPE] int[] [PARAMETER] ReadablePartial partial int fieldIndex int[] values int newValue [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  DateTimeField field  [TYPE]  boolean false  true  [TYPE]  int fieldIndex  i  newValue 
[REPLACE]^values[i] = field.getMaximumValue ( partial, values ) ; ;^595^^^^^584^599^[REPLACE] values[i] = field.getMinimumValue ( partial, values ) ;^[METHOD] set [TYPE] int[] [PARAMETER] ReadablePartial partial int fieldIndex int[] values int newValue [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  DateTimeField field  [TYPE]  boolean false  true  [TYPE]  int fieldIndex  i  newValue 
[ADD]^^595^^^^^584^599^[ADD] values[i] = field.getMinimumValue ( partial, values ) ;^[METHOD] set [TYPE] int[] [PARAMETER] ReadablePartial partial int fieldIndex int[] values int newValue [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  DateTimeField field  [TYPE]  boolean false  true  [TYPE]  int fieldIndex  i  newValue 
[REPLACE]^for  ( fieldIndexnt i = fieldIndex + 1; i < partial.getField (  )  - 3; i++ )  {^589^^^^^584^599^[REPLACE] for  ( int i = fieldIndex + 1; i < partial.size (  ) ; i++ )  {^[METHOD] set [TYPE] int[] [PARAMETER] ReadablePartial partial int fieldIndex int[] values int newValue [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  DateTimeField field  [TYPE]  boolean false  true  [TYPE]  int fieldIndex  i  newValue 
[ADD]^^589^590^591^592^593^584^599^[ADD] for  ( int i = fieldIndex + 1; i < partial.size (  ) ; i++ )  { DateTimeField field = partial.getField ( i ) ; if  ( values[i] > field.getMaximumValue ( partial, values )  )  { values[i] = field.getMaximumValue ( partial, values ) ; }^[METHOD] set [TYPE] int[] [PARAMETER] ReadablePartial partial int fieldIndex int[] values int newValue [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  DateTimeField field  [TYPE]  boolean false  true  [TYPE]  int fieldIndex  i  newValue 
[ADD]^^591^592^593^^^584^599^[ADD] if  ( values[i] > field.getMaximumValue ( partial, values )  )  { values[i] = field.getMaximumValue ( partial, values ) ; }^[METHOD] set [TYPE] int[] [PARAMETER] ReadablePartial partial int fieldIndex int[] values int newValue [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  DateTimeField field  [TYPE]  boolean false  true  [TYPE]  int fieldIndex  i  newValue 
[REPLACE]^if  ( values[i]  ==  field.getMinimumValue ( partial, values )  )  {^594^^^^^584^599^[REPLACE] if  ( values[i] < field.getMinimumValue ( partial, values )  )  {^[METHOD] set [TYPE] int[] [PARAMETER] ReadablePartial partial int fieldIndex int[] values int newValue [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  DateTimeField field  [TYPE]  boolean false  true  [TYPE]  int fieldIndex  i  newValue 
[ADD]^^594^595^596^^^584^599^[ADD] if  ( values[i] < field.getMinimumValue ( partial, values )  )  { values[i] = field.getMinimumValue ( partial, values ) ; }^[METHOD] set [TYPE] int[] [PARAMETER] ReadablePartial partial int fieldIndex int[] values int newValue [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  DateTimeField field  [TYPE]  boolean false  true  [TYPE]  int fieldIndex  i  newValue 
[REPLACE]^DateTimeField field = partial.get ( i ) ;^590^^^^^584^599^[REPLACE] DateTimeField field = partial.getField ( i ) ;^[METHOD] set [TYPE] int[] [PARAMETER] ReadablePartial partial int fieldIndex int[] values int newValue [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  DateTimeField field  [TYPE]  boolean false  true  [TYPE]  int fieldIndex  i  newValue 
[ADD]^^590^^^^^584^599^[ADD] DateTimeField field = partial.getField ( i ) ;^[METHOD] set [TYPE] int[] [PARAMETER] ReadablePartial partial int fieldIndex int[] values int newValue [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  DateTimeField field  [TYPE]  boolean false  true  [TYPE]  int fieldIndex  i  newValue 
[REPLACE]^for  ( int i = newValue + 0 ; i < partial.size (  )  + 3; i++ )  {^589^^^^^584^599^[REPLACE] for  ( int i = fieldIndex + 1; i < partial.size (  ) ; i++ )  {^[METHOD] set [TYPE] int[] [PARAMETER] ReadablePartial partial int fieldIndex int[] values int newValue [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  DateTimeField field  [TYPE]  boolean false  true  [TYPE]  int fieldIndex  i  newValue 
[REPLACE]^return set ( instant, wrapped ) ;^598^^^^^584^599^[REPLACE] return values;^[METHOD] set [TYPE] int[] [PARAMETER] ReadablePartial partial int fieldIndex int[] values int newValue [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  ReadablePartial partial  [TYPE]  DateTimeField field  [TYPE]  boolean false  true  [TYPE]  int fieldIndex  i  newValue 
[REPLACE]^int current = get ( instant ) ;^618^^^^^617^620^[REPLACE] int value = convertText ( text, locale ) ;^[METHOD] set [TYPE] long [PARAMETER] long instant String text Locale locale [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  Locale locale  [TYPE]  String text  [TYPE]  boolean false  true  [TYPE]  long instant  [TYPE]  int value 
[REPLACE]^return set ( instant, wrapped ) ;^619^^^^^617^620^[REPLACE] return set ( instant, value ) ;^[METHOD] set [TYPE] long [PARAMETER] long instant String text Locale locale [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  Locale locale  [TYPE]  String text  [TYPE]  boolean false  true  [TYPE]  long instant  [TYPE]  int value 
[REPLACE]^return set ( instant, text, false ) ;^635^^^^^634^636^[REPLACE] return set ( instant, text, null ) ;^[METHOD] set [TYPE] long [PARAMETER] long instant String text [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  String text  [TYPE]  boolean false  true  [TYPE]  long instant 
[REPLACE]^int current = get ( instant ) ;^654^^^^^653^656^[REPLACE] int value = convertText ( text, locale ) ;^[METHOD] set [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values String text Locale locale [CLASS] BaseDateTimeField   [TYPE]  Locale locale  [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  String text  [TYPE]  int fieldIndex  value 
[REPLACE]^return set ( instant, fieldIndex, values, wrapped ) ;^655^^^^^653^656^[REPLACE] return set ( instant, fieldIndex, values, value ) ;^[METHOD] set [TYPE] int[] [PARAMETER] ReadablePartial instant int fieldIndex int[] values String text Locale locale [CLASS] BaseDateTimeField   [TYPE]  Locale locale  [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true  [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  String text  [TYPE]  int fieldIndex  value 
[ADD]^return Integer.parseInt ( text ) ;^667^668^669^670^671^666^672^[ADD] try { return Integer.parseInt ( text ) ; } catch  ( NumberFormatException ex )  { throw new IllegalFieldValueException  (" ")  ; }^[METHOD] convertText [TYPE] int [PARAMETER] String text Locale locale [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  Locale locale  [TYPE]  NumberFormatException ex  [TYPE]  String text  [TYPE]  boolean false  true 
[REPLACE]^return   text   ;^668^^^^^666^672^[REPLACE] return Integer.parseInt ( text ) ;^[METHOD] convertText [TYPE] int [PARAMETER] String text Locale locale [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  Locale locale  [TYPE]  NumberFormatException ex  [TYPE]  String text  [TYPE]  boolean false  true 
[REPLACE]^return Integer .toString ( null )  ;^668^^^^^666^672^[REPLACE] return Integer.parseInt ( text ) ;^[METHOD] convertText [TYPE] int [PARAMETER] String text Locale locale [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  Locale locale  [TYPE]  NumberFormatException ex  [TYPE]  String text  [TYPE]  boolean false  true 
[REPLACE]^return ;^670^^^^^666^672^[REPLACE] throw new IllegalFieldValueException  (" ")  ;^[METHOD] convertText [TYPE] int [PARAMETER] String text Locale locale [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  Locale locale  [TYPE]  NumberFormatException ex  [TYPE]  String text  [TYPE]  boolean false  true 
[REPLACE]^return true;^704^^^^^703^705^[REPLACE] return false;^[METHOD] isLeap [TYPE] boolean [PARAMETER] long instant [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  long instant  [TYPE]  boolean false  true 
[REPLACE]^return 0 % 4;^716^^^^^715^717^[REPLACE] return 0;^[METHOD] getLeapAmount [TYPE] int [PARAMETER] long instant [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  long instant  [TYPE]  boolean false  true 
[REPLACE]^return true;^726^^^^^725^727^[REPLACE] return null;^[METHOD] getLeapDurationField [TYPE] DurationField [PARAMETER] [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  boolean false  true 
[REPLACE]^return getMinimumValue ( instant ) ;^746^^^^^745^747^[REPLACE] return getMinimumValue (  ) ;^[METHOD] getMinimumValue [TYPE] int [PARAMETER] long instant [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  long instant  [TYPE]  boolean false  true 
[REPLACE]^return getMinimumValue ( instant ) ;^758^^^^^757^759^[REPLACE] return getMinimumValue (  ) ;^[METHOD] getMinimumValue [TYPE] int [PARAMETER] ReadablePartial instant [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true 
[REPLACE]^return getMaximumValue ( instant ) ;^772^^^^^771^773^[REPLACE] return getMinimumValue ( instant ) ;^[METHOD] getMinimumValue [TYPE] int [PARAMETER] ReadablePartial instant int[] values [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true 
[REPLACE]^return getMaximumValue ( instant ) ;^792^^^^^791^793^[REPLACE] return getMaximumValue (  ) ;^[METHOD] getMaximumValue [TYPE] int [PARAMETER] long instant [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  long instant  [TYPE]  boolean false  true 
[REPLACE]^return getMaximumValue ( instant ) ;^804^^^^^803^805^[REPLACE] return getMaximumValue (  ) ;^[METHOD] getMaximumValue [TYPE] int [PARAMETER] ReadablePartial instant [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true 
[REPLACE]^return getMinimumValue ( instant ) ;^818^^^^^817^819^[REPLACE] return getMaximumValue ( instant ) ;^[METHOD] getMaximumValue [TYPE] int [PARAMETER] ReadablePartial instant int[] values [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  int[] values  [TYPE]  ReadablePartial instant  [TYPE]  boolean false  true 
[REPLACE]^int value = convertText ( text, locale ) ;^829^^^^^828^840^[REPLACE] int max = getMaximumValue (  ) ;^[METHOD] getMaximumTextLength [TYPE] int [PARAMETER] Locale locale [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  int max 
[REPLACE]^if  ( max  >  0 - 1 )  {^830^^^^^828^840^[REPLACE] if  ( max >= 0 )  {^[METHOD] getMaximumTextLength [TYPE] int [PARAMETER] Locale locale [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  int max 
[REPLACE]^if  ( max  >  10 )  {^831^^^^^828^840^[REPLACE] if  ( max < 10 )  {^[METHOD] getMaximumTextLength [TYPE] int [PARAMETER] Locale locale [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  int max 
[REPLACE]^}  if  ( max  >  77 )  {^833^^^^^828^840^[REPLACE] } else if  ( max < 100 )  {^[METHOD] getMaximumTextLength [TYPE] int [PARAMETER] Locale locale [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  int max 
[REPLACE]^}  if  ( max  >=  145 )  {^835^^^^^828^840^[REPLACE] } else if  ( max < 1000 )  {^[METHOD] getMaximumTextLength [TYPE] int [PARAMETER] Locale locale [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  int max 
[REPLACE]^return 3 - 0;^836^^^^^828^840^[REPLACE] return 3;^[METHOD] getMaximumTextLength [TYPE] int [PARAMETER] Locale locale [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  int max 
[REPLACE]^return 0;^836^^^^^828^840^[REPLACE] return 3;^[METHOD] getMaximumTextLength [TYPE] int [PARAMETER] Locale locale [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  int max 
[REPLACE]^return 2 * 2;^834^^^^^828^840^[REPLACE] return 2;^[METHOD] getMaximumTextLength [TYPE] int [PARAMETER] Locale locale [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  int max 
[REPLACE]^}  else {^835^^^^^828^840^[REPLACE] } else if  ( max < 1000 )  {^[METHOD] getMaximumTextLength [TYPE] int [PARAMETER] Locale locale [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  int max 
[REPLACE]^return 5;^836^^^^^828^840^[REPLACE] return 3;^[METHOD] getMaximumTextLength [TYPE] int [PARAMETER] Locale locale [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  int max 
[REPLACE]^return 4;^834^^^^^828^840^[REPLACE] return 2;^[METHOD] getMaximumTextLength [TYPE] int [PARAMETER] Locale locale [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  int max 
[REPLACE]^return 1;^836^^^^^828^840^[REPLACE] return 3;^[METHOD] getMaximumTextLength [TYPE] int [PARAMETER] Locale locale [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  int max 
[REPLACE]^return 0;^832^^^^^828^840^[REPLACE] return 1;^[METHOD] getMaximumTextLength [TYPE] int [PARAMETER] Locale locale [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  int max 
[REPLACE]^}  if  ( max  >=  100 )  {^833^^^^^828^840^[REPLACE] } else if  ( max < 100 )  {^[METHOD] getMaximumTextLength [TYPE] int [PARAMETER] Locale locale [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  int max 
[ADD]^}   return 3;^833^834^835^836^837^828^840^[ADD] else if  ( max < 100 )  { return 2; } else if  ( max < 1000 )  { return 3; }^[METHOD] getMaximumTextLength [TYPE] int [PARAMETER] Locale locale [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  int max 
[REPLACE]^return 3L;^836^^^^^828^840^[REPLACE] return 3;^[METHOD] getMaximumTextLength [TYPE] int [PARAMETER] Locale locale [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  int max 
[REPLACE]^return 1;^834^^^^^828^840^[REPLACE] return 2;^[METHOD] getMaximumTextLength [TYPE] int [PARAMETER] Locale locale [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  int max 
[REPLACE]^}  if  ( max  !=  1000 )  {^835^^^^^828^840^[REPLACE] } else if  ( max < 1000 )  {^[METHOD] getMaximumTextLength [TYPE] int [PARAMETER] Locale locale [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  int max 
[ADD]^}^835^836^837^^^828^840^[ADD] else if  ( max < 1000 )  { return 3; }^[METHOD] getMaximumTextLength [TYPE] int [PARAMETER] Locale locale [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  int max 
[REPLACE]^return 3 + 2;^836^^^^^828^840^[REPLACE] return 3;^[METHOD] getMaximumTextLength [TYPE] int [PARAMETER] Locale locale [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  int max 
[REPLACE]^return 4;^836^^^^^828^840^[REPLACE] return 3;^[METHOD] getMaximumTextLength [TYPE] int [PARAMETER] Locale locale [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  int max 
[REPLACE]^if  ( max  <=  10 )  {^831^^^^^828^840^[REPLACE] if  ( max < 10 )  {^[METHOD] getMaximumTextLength [TYPE] int [PARAMETER] Locale locale [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  int max 
[ADD]^return 1;return 2;^831^832^833^834^^828^840^[ADD] if  ( max < 10 )  { return 1; } else if  ( max < 100 )  { return 2;^[METHOD] getMaximumTextLength [TYPE] int [PARAMETER] Locale locale [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  int max 
[REPLACE]^}  else {^833^^^^^828^840^[REPLACE] } else if  ( max < 100 )  {^[METHOD] getMaximumTextLength [TYPE] int [PARAMETER] Locale locale [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  int max 
[REPLACE]^return 0;^834^^^^^828^840^[REPLACE] return 2;^[METHOD] getMaximumTextLength [TYPE] int [PARAMETER] Locale locale [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  int max 
[REPLACE]^}  if  ( max  >  3 )  {^835^^^^^828^840^[REPLACE] } else if  ( max < 1000 )  {^[METHOD] getMaximumTextLength [TYPE] int [PARAMETER] Locale locale [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  int max 
[REPLACE]^return 3 - 4;^836^^^^^828^840^[REPLACE] return 3;^[METHOD] getMaximumTextLength [TYPE] int [PARAMETER] Locale locale [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  int max 
[REPLACE]^return 2 * 0;^834^^^^^828^840^[REPLACE] return 2;^[METHOD] getMaximumTextLength [TYPE] int [PARAMETER] Locale locale [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  int max 
[REPLACE]^return 4;^832^^^^^828^840^[REPLACE] return 1;^[METHOD] getMaximumTextLength [TYPE] int [PARAMETER] Locale locale [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  int max 
[REPLACE]^}  if  ( max  >  100L )  {^833^^^^^828^840^[REPLACE] } else if  ( max < 100 )  {^[METHOD] getMaximumTextLength [TYPE] int [PARAMETER] Locale locale [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  int max 
[REPLACE]^} else if  ( max  !=  1000 )  {^835^^^^^828^840^[REPLACE] } else if  ( max < 1000 )  {^[METHOD] getMaximumTextLength [TYPE] int [PARAMETER] Locale locale [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  int max 
[REPLACE]^return 1 >>> 0;^832^^^^^828^840^[REPLACE] return 1;^[METHOD] getMaximumTextLength [TYPE] int [PARAMETER] Locale locale [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  int max 
[REPLACE]^return 3 + 3;^836^^^^^828^840^[REPLACE] return 3;^[METHOD] getMaximumTextLength [TYPE] int [PARAMETER] Locale locale [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  int max 
[REPLACE]^return Integer.parseInt ( max ) .length (  ) ;^839^^^^^828^840^[REPLACE] return Integer.toString ( max ) .length (  ) ;^[METHOD] getMaximumTextLength [TYPE] int [PARAMETER] Locale locale [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  int max 
[REPLACE]^return set ( instant, fieldIndex, values, value ) ;^850^^^^^849^851^[REPLACE] return getMaximumTextLength ( locale ) ;^[METHOD] getMaximumShortTextLength [TYPE] int [PARAMETER] Locale locale [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  Locale locale  [TYPE]  boolean false  true 
[REPLACE]^long newInstant = roundFloor ( newInstant ) ;^886^^^^^885^891^[REPLACE] long newInstant = roundFloor ( instant ) ;^[METHOD] roundCeiling [TYPE] long [PARAMETER] long instant [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  long instant  newInstant  [TYPE]  boolean false  true 
[ADD]^^886^^^^^885^891^[ADD] long newInstant = roundFloor ( instant ) ;^[METHOD] roundCeiling [TYPE] long [PARAMETER] long instant [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  long instant  newInstant  [TYPE]  boolean false  true 
[REPLACE]^if  ( newInstant  ==  instant )  {^887^^^^^885^891^[REPLACE] if  ( newInstant != instant )  {^[METHOD] roundCeiling [TYPE] long [PARAMETER] long instant [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  long instant  newInstant  [TYPE]  boolean false  true 
[REPLACE]^instant = add ( newInstant, 2 ) ;^888^^^^^885^891^[REPLACE] instant = add ( newInstant, 1 ) ;^[METHOD] roundCeiling [TYPE] long [PARAMETER] long instant [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  long instant  newInstant  [TYPE]  boolean false  true 
[ADD]^^888^^^^^885^891^[ADD] instant = add ( newInstant, 1 ) ;^[METHOD] roundCeiling [TYPE] long [PARAMETER] long instant [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  long instant  newInstant  [TYPE]  boolean false  true 
[REPLACE]^instant = add ( newInstant, 0 ) ;^888^^^^^885^891^[REPLACE] instant = add ( newInstant, 1 ) ;^[METHOD] roundCeiling [TYPE] long [PARAMETER] long instant [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  long instant  newInstant  [TYPE]  boolean false  true 
[REPLACE]^return set ( instant, wrapped ) ;^890^^^^^885^891^[REPLACE] return instant;^[METHOD] roundCeiling [TYPE] long [PARAMETER] long instant [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  long instant  newInstant  [TYPE]  boolean false  true 
[REPLACE]^long floor = roundFloor ( diffToCeiling ) ;^903^^^^^902^915^[REPLACE] long floor = roundFloor ( instant ) ;^[METHOD] roundHalfFloor [TYPE] long [PARAMETER] long instant [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  long ceiling  diffFromFloor  diffToCeiling  floor  instant  [TYPE]  boolean false  true 
[REPLACE]^long ceiling = roundCeiling ( diffToCeiling ) ;^904^^^^^902^915^[REPLACE] long ceiling = roundCeiling ( instant ) ;^[METHOD] roundHalfFloor [TYPE] long [PARAMETER] long instant [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  long ceiling  diffFromFloor  diffToCeiling  floor  instant  [TYPE]  boolean false  true 
[REPLACE]^long diffFromFloor = instant -diffToCeiling;^906^^^^^902^915^[REPLACE] long diffFromFloor = instant - floor;^[METHOD] roundHalfFloor [TYPE] long [PARAMETER] long instant [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  long ceiling  diffFromFloor  diffToCeiling  floor  instant  [TYPE]  boolean false  true 
[REPLACE]^long diffToCeiling = ceiling -floor;^907^^^^^902^915^[REPLACE] long diffToCeiling = ceiling - instant;^[METHOD] roundHalfFloor [TYPE] long [PARAMETER] long instant [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  long ceiling  diffFromFloor  diffToCeiling  floor  instant  [TYPE]  boolean false  true 
[ADD]^^907^908^909^^911^902^915^[ADD] long diffToCeiling = ceiling - instant;  if  ( diffFromFloor <= diffToCeiling )  { return floor;^[METHOD] roundHalfFloor [TYPE] long [PARAMETER] long instant [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  long ceiling  diffFromFloor  diffToCeiling  floor  instant  [TYPE]  boolean false  true 
[REPLACE]^if  (instant  ==  diffToCeiling )  {^909^^^^^902^915^[REPLACE] if  ( diffFromFloor <= diffToCeiling )  {^[METHOD] roundHalfFloor [TYPE] long [PARAMETER] long instant [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  long ceiling  diffFromFloor  diffToCeiling  floor  instant  [TYPE]  boolean false  true 
[REPLACE]^return instant;^913^^^^^902^915^[REPLACE] return ceiling;^[METHOD] roundHalfFloor [TYPE] long [PARAMETER] long instant [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  long ceiling  diffFromFloor  diffToCeiling  floor  instant  [TYPE]  boolean false  true 
[REPLACE]^return diffToCeiling;^911^^^^^902^915^[REPLACE] return floor;^[METHOD] roundHalfFloor [TYPE] long [PARAMETER] long instant [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  long ceiling  diffFromFloor  diffToCeiling  floor  instant  [TYPE]  boolean false  true 
[REPLACE]^long floor = roundFloor ( diffToCeiling ) ;^927^^^^^926^939^[REPLACE] long floor = roundFloor ( instant ) ;^[METHOD] roundHalfCeiling [TYPE] long [PARAMETER] long instant [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  long ceiling  diffFromFloor  diffToCeiling  floor  instant  [TYPE]  boolean false  true 
[ADD]^^927^928^^^^926^939^[ADD] long floor = roundFloor ( instant ) ; long ceiling = roundCeiling ( instant ) ;^[METHOD] roundHalfCeiling [TYPE] long [PARAMETER] long instant [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  long ceiling  diffFromFloor  diffToCeiling  floor  instant  [TYPE]  boolean false  true 
[REPLACE]^long ceiling = roundCeiling ( diffToCeiling ) ;^928^^^^^926^939^[REPLACE] long ceiling = roundCeiling ( instant ) ;^[METHOD] roundHalfCeiling [TYPE] long [PARAMETER] long instant [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  long ceiling  diffFromFloor  diffToCeiling  floor  instant  [TYPE]  boolean false  true 
[REPLACE]^long diffFromFloor =diffToCeiling - floor;^930^^^^^926^939^[REPLACE] long diffFromFloor = instant - floor;^[METHOD] roundHalfCeiling [TYPE] long [PARAMETER] long instant [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  long ceiling  diffFromFloor  diffToCeiling  floor  instant  [TYPE]  boolean false  true 
[REPLACE]^long diffToCeiling = floor - diffToCeiling;^931^^^^^926^939^[REPLACE] long diffToCeiling = ceiling - instant;^[METHOD] roundHalfCeiling [TYPE] long [PARAMETER] long instant [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  long ceiling  diffFromFloor  diffToCeiling  floor  instant  [TYPE]  boolean false  true 
[REPLACE]^if  (instant  !=  diffFromFloor )  {^933^^^^^926^939^[REPLACE] if  ( diffToCeiling <= diffFromFloor )  {^[METHOD] roundHalfCeiling [TYPE] long [PARAMETER] long instant [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  long ceiling  diffFromFloor  diffToCeiling  floor  instant  [TYPE]  boolean false  true 
[ADD]^^933^934^935^936^937^926^939^[ADD] if  ( diffToCeiling <= diffFromFloor )  {  return ceiling; } else { return floor;^[METHOD] roundHalfCeiling [TYPE] long [PARAMETER] long instant [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  long ceiling  diffFromFloor  diffToCeiling  floor  instant  [TYPE]  boolean false  true 
[REPLACE]^return diffToCeiling;^937^^^^^926^939^[REPLACE] return floor;^[METHOD] roundHalfCeiling [TYPE] long [PARAMETER] long instant [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  long ceiling  diffFromFloor  diffToCeiling  floor  instant  [TYPE]  boolean false  true 
[REPLACE]^return instant;^935^^^^^926^939^[REPLACE] return ceiling;^[METHOD] roundHalfCeiling [TYPE] long [PARAMETER] long instant [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  long ceiling  diffFromFloor  diffToCeiling  floor  instant  [TYPE]  boolean false  true 
[REPLACE]^return floor;^935^^^^^926^939^[REPLACE] return ceiling;^[METHOD] roundHalfCeiling [TYPE] long [PARAMETER] long instant [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  long ceiling  diffFromFloor  diffToCeiling  floor  instant  [TYPE]  boolean false  true 
[REPLACE]^long floor = roundFloor ( diffToCeiling ) ;^955^^^^^954^975^[REPLACE] long floor = roundFloor ( instant ) ;^[METHOD] roundHalfEven [TYPE] long [PARAMETER] long instant [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  long ceiling  diffFromFloor  diffToCeiling  floor  instant  [TYPE]  boolean false  true 
[REPLACE]^long ceiling = roundCeiling ( diffToCeiling ) ;^956^^^^^954^975^[REPLACE] long ceiling = roundCeiling ( instant ) ;^[METHOD] roundHalfEven [TYPE] long [PARAMETER] long instant [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  long ceiling  diffFromFloor  diffToCeiling  floor  instant  [TYPE]  boolean false  true 
[REPLACE]^long diffFromFloor = instant -diffToCeiling;^958^^^^^954^975^[REPLACE] long diffFromFloor = instant - floor;^[METHOD] roundHalfEven [TYPE] long [PARAMETER] long instant [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  long ceiling  diffFromFloor  diffToCeiling  floor  instant  [TYPE]  boolean false  true 
[ADD]^^958^959^^961^^954^975^[ADD] long diffFromFloor = instant - floor; long diffToCeiling = ceiling - instant; if  ( diffFromFloor < diffToCeiling )  {^[METHOD] roundHalfEven [TYPE] long [PARAMETER] long instant [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  long ceiling  diffFromFloor  diffToCeiling  floor  instant  [TYPE]  boolean false  true 
[REPLACE]^long diffToCeiling =floor - instant;^959^^^^^954^975^[REPLACE] long diffToCeiling = ceiling - instant;^[METHOD] roundHalfEven [TYPE] long [PARAMETER] long instant [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  long ceiling  diffFromFloor  diffToCeiling  floor  instant  [TYPE]  boolean false  true 
[REPLACE]^if  ( diffFromFloor  !=  diffToCeiling )  {^961^^^^^954^975^[REPLACE] if  ( diffFromFloor < diffToCeiling )  {^[METHOD] roundHalfEven [TYPE] long [PARAMETER] long instant [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  long ceiling  diffFromFloor  diffToCeiling  floor  instant  [TYPE]  boolean false  true 
[REPLACE]^} else if  ( diffToCeiling  !=  diffFromFloor )  {^964^^^^^954^975^[REPLACE] } else if  ( diffToCeiling < diffFromFloor )  {^[METHOD] roundHalfEven [TYPE] long [PARAMETER] long instant [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  long ceiling  diffFromFloor  diffToCeiling  floor  instant  [TYPE]  boolean false  true 
[ADD]^}   return ceiling;^964^965^966^967^^954^975^[ADD] else if  ( diffToCeiling < diffFromFloor )  {  return ceiling; } else {^[METHOD] roundHalfEven [TYPE] long [PARAMETER] long instant [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  long ceiling  diffFromFloor  diffToCeiling  floor  instant  [TYPE]  boolean false  true 
[REPLACE]^if  (  ( get ( ceiling )  & 1 )   &&  0 )  {^970^^^^^954^975^[REPLACE] if  (  ( get ( ceiling )  & 1 )  == 0 )  {^[METHOD] roundHalfEven [TYPE] long [PARAMETER] long instant [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  long ceiling  diffFromFloor  diffToCeiling  floor  instant  [TYPE]  boolean false  true 
[REPLACE]^return instant;^971^^^^^954^975^[REPLACE] return ceiling;^[METHOD] roundHalfEven [TYPE] long [PARAMETER] long instant [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  long ceiling  diffFromFloor  diffToCeiling  floor  instant  [TYPE]  boolean false  true 
[REPLACE]^return diffToCeiling;^973^^^^^954^975^[REPLACE] return floor;^[METHOD] roundHalfEven [TYPE] long [PARAMETER] long instant [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  long ceiling  diffFromFloor  diffToCeiling  floor  instant  [TYPE]  boolean false  true 
[REPLACE]^return floor;^966^^^^^954^975^[REPLACE] return ceiling;^[METHOD] roundHalfEven [TYPE] long [PARAMETER] long instant [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  long ceiling  diffFromFloor  diffToCeiling  floor  instant  [TYPE]  boolean false  true 
[REPLACE]^if  (  ( get ( ceiling )  & 1 )   && null )  {^970^^^^^954^975^[REPLACE] if  (  ( get ( ceiling )  & 1 )  == 0 )  {^[METHOD] roundHalfEven [TYPE] long [PARAMETER] long instant [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  long ceiling  diffFromFloor  diffToCeiling  floor  instant  [TYPE]  boolean false  true 
[REPLACE]^return instant;^966^^^^^954^975^[REPLACE] return ceiling;^[METHOD] roundHalfEven [TYPE] long [PARAMETER] long instant [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  long ceiling  diffFromFloor  diffToCeiling  floor  instant  [TYPE]  boolean false  true 
[REPLACE]^return floor;^971^^^^^954^975^[REPLACE] return ceiling;^[METHOD] roundHalfEven [TYPE] long [PARAMETER] long instant [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  long ceiling  diffFromFloor  diffToCeiling  floor  instant  [TYPE]  boolean false  true 
[REPLACE]^return diffToCeiling;^963^^^^^954^975^[REPLACE] return floor;^[METHOD] roundHalfEven [TYPE] long [PARAMETER] long instant [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  long ceiling  diffFromFloor  diffToCeiling  floor  instant  [TYPE]  boolean false  true 
[REPLACE]^}  else {^964^^^^^954^975^[REPLACE] } else if  ( diffToCeiling < diffFromFloor )  {^[METHOD] roundHalfEven [TYPE] long [PARAMETER] long instant [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  long ceiling  diffFromFloor  diffToCeiling  floor  instant  [TYPE]  boolean false  true 
[REPLACE]^if  (  ( get ( ceiling )  & 1 )   !=  0 )  {^970^^^^^954^975^[REPLACE] if  (  ( get ( ceiling )  & 1 )  == 0 )  {^[METHOD] roundHalfEven [TYPE] long [PARAMETER] long instant [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  long ceiling  diffFromFloor  diffToCeiling  floor  instant  [TYPE]  boolean false  true 
[REPLACE]^if  (  ( get ( instant )  & 1 )   ||  0 )  {^970^^^^^954^975^[REPLACE] if  (  ( get ( ceiling )  & 1 )  == 0 )  {^[METHOD] roundHalfEven [TYPE] long [PARAMETER] long instant [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  long ceiling  diffFromFloor  diffToCeiling  floor  instant  [TYPE]  boolean false  true 
[REPLACE]^return instant  ;^994^^^^^993^995^[REPLACE] return instant - roundFloor ( instant ) ;^[METHOD] remainder [TYPE] long [PARAMETER] long instant [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  long instant  [TYPE]  boolean false  true 
[REPLACE]^return "DateTimeField["  &&  getName (  )   &&  ']';^1003^^^^^1002^1004^[REPLACE] return "DateTimeField[" + getName (  )  + ']';^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] BaseDateTimeField   [TYPE]  DateTimeFieldType iType  type  [TYPE]  boolean false  true 
