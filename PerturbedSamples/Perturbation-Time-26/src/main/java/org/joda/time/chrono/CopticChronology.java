[REPLACE]^private static  long serialVersionUID = -5972804258688333942;^54^^^^^^^[REPLACE] private static final long serialVersionUID = -5972804258688333942L;^ [CLASS] CopticChronology  
[REPLACE]^public static   short  AM = DateTimeConstants.CE;^60^^^^^^^[REPLACE] public static final int AM = DateTimeConstants.CE;^ [CLASS] CopticChronology  
[REPLACE]^private static final DateTimeField ERA_FIELD  = null ;^63^^^^^^^[REPLACE] private static final DateTimeField ERA_FIELD = new BasicSingleEraDateTimeField ( "AM" ) ;^ [CLASS] CopticChronology  
[REPLACE]^private static final int MIN_YEAR  = null ;^66^^^^^^^[REPLACE] private static final int MIN_YEAR = -292269337;^ [CLASS] CopticChronology  
[REPLACE]^private static final int MAX_YEAR ;^69^^^^^^^[REPLACE] private static final int MAX_YEAR = 292272708;^ [CLASS] CopticChronology  
[REPLACE]^private  final Map<DateTimeZone, CopticChronology[]> cCache = new HashMap<DateTimeZone, CopticChronology[]> (  ) ;^72^^^^^^^[REPLACE] private static final Map<DateTimeZone, CopticChronology[]> cCache = new HashMap<DateTimeZone, CopticChronology[]> (  ) ;^ [CLASS] CopticChronology  
[REPLACE]^private static  CopticChronology INSTANCE_UTC;^75^^^^^^^[REPLACE] private static final CopticChronology INSTANCE_UTC;^ [CLASS] CopticChronology  
[REPLACE]^super ( base, param, MIN_YEAR ) ;^161^^^^^160^162^[REPLACE] super ( base, param, minDaysInFirstWeek ) ;^[METHOD] <init> [TYPE] Object,int) [PARAMETER] Chronology base Object param int minDaysInFirstWeek [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  [TYPE]  Object param  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Chronology base  [TYPE]  Map cCache  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek 
[ADD]^^161^^^^^160^162^[ADD] super ( base, param, minDaysInFirstWeek ) ;^[METHOD] <init> [TYPE] Object,int) [PARAMETER] Chronology base Object param int minDaysInFirstWeek [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  [TYPE]  Object param  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Chronology base  [TYPE]  Map cCache  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek 
[REPLACE]^return getInstance ( zone ) ;^89^^^^^88^90^[REPLACE] return INSTANCE_UTC;^[METHOD] getInstanceUTC [TYPE] CopticChronology [PARAMETER] [CLASS] CopticChronology   [TYPE]  CopticChronology INSTANCE_UTC  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  boolean false  true  [TYPE]  Map cCache  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek 
[REPLACE]^return getInstance ( DateTimeZone.getDefault (  ) , 2 ) ;^98^^^^^97^99^[REPLACE] return getInstance ( DateTimeZone.getDefault (  ) , 4 ) ;^[METHOD] getInstance [TYPE] CopticChronology [PARAMETER] [CLASS] CopticChronology   [TYPE]  CopticChronology INSTANCE_UTC  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  boolean false  true  [TYPE]  Map cCache  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek 
[REPLACE]^return getInstance ( zone, 4 - 1 ) ;^108^^^^^107^109^[REPLACE] return getInstance ( zone, 4 ) ;^[METHOD] getInstance [TYPE] CopticChronology [PARAMETER] DateTimeZone zone [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone 
[REPLACE]^if  ( zone != null )  {^119^^^^^118^153^[REPLACE] if  ( zone == null )  {^[METHOD] getInstance [TYPE] CopticChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone  [TYPE]  CopticChronology[] chronos  [TYPE]  DateTime lowerLimit 
[REPLACE]^zone ;^120^^^^^118^153^[REPLACE] zone = DateTimeZone.getDefault (  ) ;^[METHOD] getInstance [TYPE] CopticChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone  [TYPE]  CopticChronology[] chronos  [TYPE]  DateTime lowerLimit 
[REPLACE]^CopticChronology[] chronos = cCache.get ( zone ) ;^122^^^^^118^153^[REPLACE] CopticChronology chrono;^[METHOD] getInstance [TYPE] CopticChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone  [TYPE]  CopticChronology[] chronos  [TYPE]  DateTime lowerLimit 
[REPLACE]^if  ( chronos != null )  {^125^^^^^118^153^[REPLACE] if  ( chronos == null )  {^[METHOD] getInstance [TYPE] CopticChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone  [TYPE]  CopticChronology[] chronos  [TYPE]  DateTime lowerLimit 
[REPLACE]^chronos = new CopticChronology[4];^126^^^^^118^153^[REPLACE] chronos = new CopticChronology[7];^[METHOD] getInstance [TYPE] CopticChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone  [TYPE]  CopticChronology[] chronos  [TYPE]  DateTime lowerLimit 
[REPLACE]^if  (INSTANCE_UTC != true )  {^135^^^^^118^153^[REPLACE] if  ( chrono == null )  {^[METHOD] getInstance [TYPE] CopticChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone  [TYPE]  CopticChronology[] chronos  [TYPE]  DateTime lowerLimit 
[ADD]^^135^136^^138^^118^153^[ADD] if  ( chrono == null )  { if  ( zone == DateTimeZone.UTC )  { chrono = new CopticChronology ( null, null, minDaysInFirstWeek ) ;^[METHOD] getInstance [TYPE] CopticChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone  [TYPE]  CopticChronology[] chronos  [TYPE]  DateTime lowerLimit 
[REPLACE]^if  ( zone  !=  DateTimeZone.UTC )  {^136^^^^^118^153^[REPLACE] if  ( zone == DateTimeZone.UTC )  {^[METHOD] getInstance [TYPE] CopticChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone  [TYPE]  CopticChronology[] chronos  [TYPE]  DateTime lowerLimit 
[ADD]^^136^137^138^^140^118^153^[ADD] if  ( zone == DateTimeZone.UTC )  {  chrono = new CopticChronology ( null, null, minDaysInFirstWeek ) ; DateTime lowerLimit = new DateTime ( 1, 1, 1, 0, 0, 0, 0, chrono ) ;^[METHOD] getInstance [TYPE] CopticChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone  [TYPE]  CopticChronology[] chronos  [TYPE]  DateTime lowerLimit 
[REPLACE]^chrono =  getInstance ( DateTimeZone.UTC, MIN_YEAR ) ;^145^^^^^136^148^[REPLACE] chrono = getInstance ( DateTimeZone.UTC, minDaysInFirstWeek ) ;^[METHOD] getInstance [TYPE] CopticChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone  [TYPE]  CopticChronology[] chronos  [TYPE]  DateTime lowerLimit 
[REPLACE]^chrono = new CopticChronology ( ZonedChronology.getInstance ( chrono, zone ) , false, minDaysInFirstWeek ) ;^146^147^^^^136^148^[REPLACE] chrono = new CopticChronology ( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[METHOD] getInstance [TYPE] CopticChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone  [TYPE]  CopticChronology[] chronos  [TYPE]  DateTime lowerLimit 
[REPLACE]^chrono = new CopticChronology ( true, true, minDaysInFirstWeek ) ;^138^^^^^118^153^[REPLACE] chrono = new CopticChronology ( null, null, minDaysInFirstWeek ) ;^[METHOD] getInstance [TYPE] CopticChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone  [TYPE]  CopticChronology[] chronos  [TYPE]  DateTime lowerLimit 
[REPLACE]^chrono =  new CopticChronology ( getInstance ( chrono, zone ) , null, minDaysInFirstWeek )  , false, minDaysInFirstWeek ) ;^141^142^143^^^118^153^[REPLACE] chrono = new CopticChronology ( LimitChronology.getInstance ( chrono, lowerLimit, null ) , null, minDaysInFirstWeek ) ;^[METHOD] getInstance [TYPE] CopticChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone  [TYPE]  CopticChronology[] chronos  [TYPE]  DateTime lowerLimit 
[REPLACE]^DateTime lowerLimit = new DateTime ( 1 + 0, 1 + 0, 1 + 0, 0, 0, 0, 0, chrono ) ;^140^^^^^118^153^[REPLACE] DateTime lowerLimit = new DateTime ( 1, 1, 1, 0, 0, 0, 0, chrono ) ;^[METHOD] getInstance [TYPE] CopticChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone  [TYPE]  CopticChronology[] chronos  [TYPE]  DateTime lowerLimit 
[REPLACE]^chrono = new CopticChronology ( this, this, minDaysInFirstWeek ) ;^138^^^^^118^153^[REPLACE] chrono = new CopticChronology ( null, null, minDaysInFirstWeek ) ;^[METHOD] getInstance [TYPE] CopticChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone  [TYPE]  CopticChronology[] chronos  [TYPE]  DateTime lowerLimit 
[REPLACE]^chrono =  new CopticChronology ( getInstance ( chrono, zone ) , null, minDaysInFirstWeek )  , true, minDaysInFirstWeek ) ;^141^142^143^^^118^153^[REPLACE] chrono = new CopticChronology ( LimitChronology.getInstance ( chrono, lowerLimit, null ) , null, minDaysInFirstWeek ) ;^[METHOD] getInstance [TYPE] CopticChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone  [TYPE]  CopticChronology[] chronos  [TYPE]  DateTime lowerLimit 
[ADD]^^141^142^143^^^118^153^[ADD] chrono = new CopticChronology ( LimitChronology.getInstance ( chrono, lowerLimit, null ) , null, minDaysInFirstWeek ) ;^[METHOD] getInstance [TYPE] CopticChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone  [TYPE]  CopticChronology[] chronos  [TYPE]  DateTime lowerLimit 
[REPLACE]^chrono =  getInstance ( DateTimeZone.UTC, MIN_YEAR ) ;^145^^^^^118^153^[REPLACE] chrono = getInstance ( DateTimeZone.UTC, minDaysInFirstWeek ) ;^[METHOD] getInstance [TYPE] CopticChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone  [TYPE]  CopticChronology[] chronos  [TYPE]  DateTime lowerLimit 
[REPLACE]^chrono = new CopticChronology ( ZonedChronology.getInstance ( chrono, zone ) , false, minDaysInFirstWeek ) ;^146^147^^^^118^153^[REPLACE] chrono = new CopticChronology ( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[METHOD] getInstance [TYPE] CopticChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone  [TYPE]  CopticChronology[] chronos  [TYPE]  DateTime lowerLimit 
[REPLACE]^chronos[minDaysInFirstWeek -MIN_YEAR] = chrono;^149^^^^^118^153^[REPLACE] chronos[minDaysInFirstWeek - 1] = chrono;^[METHOD] getInstance [TYPE] CopticChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone  [TYPE]  CopticChronology[] chronos  [TYPE]  DateTime lowerLimit 
[REPLACE]^DateTime lowerLimit = new DateTime ( 1 * 0, 1 * 0, 1 * 0, 0, 0, 0, 0, INSTANCE_UTC ) ;^140^^^^^118^153^[REPLACE] DateTime lowerLimit = new DateTime ( 1, 1, 1, 0, 0, 0, 0, chrono ) ;^[METHOD] getInstance [TYPE] CopticChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone  [TYPE]  CopticChronology[] chronos  [TYPE]  DateTime lowerLimit 
[REPLACE]^if  ( zone  ||  DateTimeZone.UTC )  {^136^^^^^118^153^[REPLACE] if  ( zone == DateTimeZone.UTC )  {^[METHOD] getInstance [TYPE] CopticChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone  [TYPE]  CopticChronology[] chronos  [TYPE]  DateTime lowerLimit 
[REPLACE]^chrono =  new CopticChronology ( getInstance ( chrono, lowerLimit, null ) , null, minDaysInFirstWeek )  , true, minDaysInFirstWeek ) ;^146^147^^^^136^148^[REPLACE] chrono = new CopticChronology ( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[METHOD] getInstance [TYPE] CopticChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone  [TYPE]  CopticChronology[] chronos  [TYPE]  DateTime lowerLimit 
[REPLACE]^chrono = new CopticChronology ( LimitChronology.getInstance ( chrono, lowerLimit, this ) , this, minDaysInFirstWeek ) ;^141^142^143^^^118^153^[REPLACE] chrono = new CopticChronology ( LimitChronology.getInstance ( chrono, lowerLimit, null ) , null, minDaysInFirstWeek ) ;^[METHOD] getInstance [TYPE] CopticChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone  [TYPE]  CopticChronology[] chronos  [TYPE]  DateTime lowerLimit 
[REPLACE]^DateTime lowerLimit = new DateTime ( 1 >> 4, 1 >> 4, 1 >> 4, 0, 0, 0, 0, chrono ) ;^140^^^^^118^153^[REPLACE] DateTime lowerLimit = new DateTime ( 1, 1, 1, 0, 0, 0, 0, chrono ) ;^[METHOD] getInstance [TYPE] CopticChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone  [TYPE]  CopticChronology[] chronos  [TYPE]  DateTime lowerLimit 
[ADD]^chrono = chronos[minDaysInFirstWeek - 1];( "Invalid min days in first week: " + minDaysInFirstWeek ) ;^129^130^131^132^133^118^153^[ADD] try { chrono = chronos[minDaysInFirstWeek - 1]; } catch  ( ArrayIndexOutOfBoundsException e )  { throw new IllegalArgumentException ( "Invalid min days in first week: " + minDaysInFirstWeek ) ;^[METHOD] getInstance [TYPE] CopticChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone  [TYPE]  CopticChronology[] chronos  [TYPE]  DateTime lowerLimit 
[REPLACE]^chrono = chronos[minDaysInFirstWeek  !=  1];^130^^^^^118^153^[REPLACE] chrono = chronos[minDaysInFirstWeek - 1];^[METHOD] getInstance [TYPE] CopticChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone  [TYPE]  CopticChronology[] chronos  [TYPE]  DateTime lowerLimit 
[REPLACE]^chronos = new CopticChronology[0];^126^^^^^118^153^[REPLACE] chronos = new CopticChronology[7];^[METHOD] getInstance [TYPE] CopticChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone  [TYPE]  CopticChronology[] chronos  [TYPE]  DateTime lowerLimit 
[REPLACE]^chrono = chronos[minDaysInFirstWeek  ^  1];^130^^^^^118^153^[REPLACE] chrono = chronos[minDaysInFirstWeek - 1];^[METHOD] getInstance [TYPE] CopticChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone  [TYPE]  CopticChronology[] chronos  [TYPE]  DateTime lowerLimit 
[ADD]^^145^^^^^118^153^[ADD] chrono = getInstance ( DateTimeZone.UTC, minDaysInFirstWeek ) ;^[METHOD] getInstance [TYPE] CopticChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone  [TYPE]  CopticChronology[] chronos  [TYPE]  DateTime lowerLimit 
[REPLACE]^chrono =  new CopticChronology ( getInstance ( chrono, lowerLimit, null ) , null, minDaysInFirstWeek )  , true, minDaysInFirstWeek ) ;^146^147^^^^118^153^[REPLACE] chrono = new CopticChronology ( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[METHOD] getInstance [TYPE] CopticChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone  [TYPE]  CopticChronology[] chronos  [TYPE]  DateTime lowerLimit 
[REPLACE]^chronos[minDaysInFirstWeek  ||  0] = chrono;^149^^^^^118^153^[REPLACE] chronos[minDaysInFirstWeek - 1] = chrono;^[METHOD] getInstance [TYPE] CopticChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone  [TYPE]  CopticChronology[] chronos  [TYPE]  DateTime lowerLimit 
[REPLACE]^CopticChronology[] chronos = cCache .put ( zone , chronos )  ;^124^^^^^118^153^[REPLACE] CopticChronology[] chronos = cCache.get ( zone ) ;^[METHOD] getInstance [TYPE] CopticChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone  [TYPE]  CopticChronology[] chronos  [TYPE]  DateTime lowerLimit 
[REPLACE]^DateTime lowerLimit = new DateTime ( 1L, 1L, 1L, 0, 0, 0, 0, INSTANCE_UTC ) ;^140^^^^^118^153^[REPLACE] DateTime lowerLimit = new DateTime ( 1, 1, 1, 0, 0, 0, 0, chrono ) ;^[METHOD] getInstance [TYPE] CopticChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone  [TYPE]  CopticChronology[] chronos  [TYPE]  DateTime lowerLimit 
[ADD]^^140^^^^^118^153^[ADD] DateTime lowerLimit = new DateTime ( 1, 1, 1, 0, 0, 0, 0, chrono ) ;^[METHOD] getInstance [TYPE] CopticChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone  [TYPE]  CopticChronology[] chronos  [TYPE]  DateTime lowerLimit 
[REPLACE]^return ;^132^133^^^^118^153^[REPLACE] throw new IllegalArgumentException ( "Invalid min days in first week: " + minDaysInFirstWeek ) ;^[METHOD] getInstance [TYPE] CopticChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone  [TYPE]  CopticChronology[] chronos  [TYPE]  DateTime lowerLimit 
[REPLACE]^return INSTANCE_UTC;^152^^^^^118^153^[REPLACE] return chrono;^[METHOD] getInstance [TYPE] CopticChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone  [TYPE]  CopticChronology[] chronos  [TYPE]  DateTime lowerLimit 
[REPLACE]^CopticChronology[] chronos = cCache.get ( zone ) ;^168^^^^^167^174^[REPLACE] Chronology base = getBase (  ) ;^[METHOD] readResolve [TYPE] Object [PARAMETER] [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Chronology base  [TYPE]  Map cCache  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek 
[ADD]^int minDays = getMinimumDaysInFirstWeek (  ) ;^168^169^^^^167^174^[ADD] Chronology base = getBase (  ) ; int minDays = getMinimumDaysInFirstWeek (  ) ;^[METHOD] readResolve [TYPE] Object [PARAMETER] [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Chronology base  [TYPE]  Map cCache  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek 
[REPLACE]^CopticChronology[] chronos = cCache.get ( zone ) ;^169^^^^^167^174^[REPLACE] int minDays = getMinimumDaysInFirstWeek (  ) ;^[METHOD] readResolve [TYPE] Object [PARAMETER] [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Chronology base  [TYPE]  Map cCache  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek 
[ADD]^^169^^^^^167^174^[ADD] int minDays = getMinimumDaysInFirstWeek (  ) ;^[METHOD] readResolve [TYPE] Object [PARAMETER] [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Chronology base  [TYPE]  Map cCache  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek 
[REPLACE]^minDays  =  4 ;^170^^^^^167^174^[REPLACE] minDays =  ( minDays == 0 ? 4 : minDays ) ;^[METHOD] readResolve [TYPE] Object [PARAMETER] [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Chronology base  [TYPE]  Map cCache  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek 
[REPLACE]^return base != null ? getInstance ( DateTimeZone.UTC, MIN_YEAR )  : getInstance ( base.getZone (  ) , minDays ) ;;^171^172^173^^^167^174^[REPLACE] return base == null ? getInstance ( DateTimeZone.UTC, minDays )  : getInstance ( base.getZone (  ) , minDays ) ;^[METHOD] readResolve [TYPE] Object [PARAMETER] [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Chronology base  [TYPE]  Map cCache  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek 
[REPLACE]^return getInstance ( zone ) ;^184^^^^^183^185^[REPLACE] return INSTANCE_UTC;^[METHOD] withUTC [TYPE] Chronology [PARAMETER] [CLASS] CopticChronology   [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  boolean false  true  [TYPE]  Map cCache  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek 
[REPLACE]^if  ( zone != null )  {^194^^^^^193^201^[REPLACE] if  ( zone == null )  {^[METHOD] withZone [TYPE] Chronology [PARAMETER] DateTimeZone zone [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  [TYPE]  DateTimeZone zone 
[REPLACE]^zone  = null ;^195^^^^^193^201^[REPLACE] zone = DateTimeZone.getDefault (  ) ;^[METHOD] withZone [TYPE] Chronology [PARAMETER] DateTimeZone zone [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  [TYPE]  DateTimeZone zone 
[ADD]^^195^^^^^193^201^[ADD] zone = DateTimeZone.getDefault (  ) ;^[METHOD] withZone [TYPE] Chronology [PARAMETER] DateTimeZone zone [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  [TYPE]  DateTimeZone zone 
[REPLACE]^zone ;^195^^^^^193^201^[REPLACE] zone = DateTimeZone.getDefault (  ) ;^[METHOD] withZone [TYPE] Chronology [PARAMETER] DateTimeZone zone [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  [TYPE]  DateTimeZone zone 
[REPLACE]^if  ( zone  ||  getZone (  )  )  {^197^^^^^193^201^[REPLACE] if  ( zone == getZone (  )  )  {^[METHOD] withZone [TYPE] Chronology [PARAMETER] DateTimeZone zone [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  [TYPE]  DateTimeZone zone 
[REPLACE]^return null;^198^^^^^193^201^[REPLACE] return this;^[METHOD] withZone [TYPE] Chronology [PARAMETER] DateTimeZone zone [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  [TYPE]  DateTimeZone zone 
[REPLACE]^return getInstance ( zone, 4 ) ;^200^^^^^193^201^[REPLACE] return getInstance ( zone ) ;^[METHOD] withZone [TYPE] Chronology [PARAMETER] DateTimeZone zone [CLASS] CopticChronology   [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  long serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  [TYPE]  DateTimeZone zone 
[REPLACE]^int relativeYear =relativeYear - 262;^209^^^^^204^229^[REPLACE] int relativeYear = year - 1687;^[METHOD] calculateFirstDayOfYearMillis [TYPE] long [PARAMETER] int year [CLASS] CopticChronology   [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  boolean false  true  [TYPE]  Map cCache  [TYPE]  long millis  serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  relativeYear  year 
[REPLACE]^int relativeYear = year - 1687;^210^^^^^204^229^[REPLACE] int leapYears;^[METHOD] calculateFirstDayOfYearMillis [TYPE] long [PARAMETER] int year [CLASS] CopticChronology   [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  boolean false  true  [TYPE]  Map cCache  [TYPE]  long millis  serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  relativeYear  year 
[ADD]^^210^^^^^204^229^[ADD] int leapYears;^[METHOD] calculateFirstDayOfYearMillis [TYPE] long [PARAMETER] int year [CLASS] CopticChronology   [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  boolean false  true  [TYPE]  Map cCache  [TYPE]  long millis  serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  relativeYear  year 
[REPLACE]^if  ( relativeYear  >  0 )  {^211^^^^^204^229^[REPLACE] if  ( relativeYear <= 0 )  {^[METHOD] calculateFirstDayOfYearMillis [TYPE] long [PARAMETER] int year [CLASS] CopticChronology   [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  boolean false  true  [TYPE]  Map cCache  [TYPE]  long millis  serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  relativeYear  year 
[REPLACE]^if  ( isLeapYear ( year )  )  {^218^^^^^204^229^[REPLACE] if  ( !isLeapYear ( year )  )  {^[METHOD] calculateFirstDayOfYearMillis [TYPE] long [PARAMETER] int year [CLASS] CopticChronology   [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  boolean false  true  [TYPE]  Map cCache  [TYPE]  long millis  serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  relativeYear  year 
[REPLACE]^leapYears = relativeYear  <  1;^216^^^^^204^229^[REPLACE] leapYears = relativeYear >> 2;^[METHOD] calculateFirstDayOfYearMillis [TYPE] long [PARAMETER] int year [CLASS] CopticChronology   [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  boolean false  true  [TYPE]  Map cCache  [TYPE]  long millis  serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  relativeYear  year 
[REPLACE]^leapYears =  ( relativeYear + 3 )   >=  2;^214^^^^^204^229^[REPLACE] leapYears =  ( relativeYear + 3 )  >> 2;^[METHOD] calculateFirstDayOfYearMillis [TYPE] long [PARAMETER] int year [CLASS] CopticChronology   [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  boolean false  true  [TYPE]  Map cCache  [TYPE]  long millis  serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  relativeYear  year 
[REPLACE]^if  ( !isLeapYear ( relativeYear )  )  {^218^^^^^204^229^[REPLACE] if  ( !isLeapYear ( year )  )  {^[METHOD] calculateFirstDayOfYearMillis [TYPE] long [PARAMETER] int year [CLASS] CopticChronology   [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  boolean false  true  [TYPE]  Map cCache  [TYPE]  long millis  serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  relativeYear  year 
[REPLACE]^leapYears =  ( relativeYear + 0 )   <=  2;^214^^^^^204^229^[REPLACE] leapYears =  ( relativeYear + 3 )  >> 2;^[METHOD] calculateFirstDayOfYearMillis [TYPE] long [PARAMETER] int year [CLASS] CopticChronology   [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  boolean false  true  [TYPE]  Map cCache  [TYPE]  long millis  serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  relativeYear  year 
[REPLACE]^leapYears = relativeYear  == year;^216^^^^^204^229^[REPLACE] leapYears = relativeYear >> 2;^[METHOD] calculateFirstDayOfYearMillis [TYPE] long [PARAMETER] int year [CLASS] CopticChronology   [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  boolean false  true  [TYPE]  Map cCache  [TYPE]  long millis  serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  relativeYear  year 
[REPLACE]^long millis =  ( relativeYear * 365L + year )^223^224^225^226^^204^229^[REPLACE] long millis =  ( relativeYear * 365L + leapYears )^[METHOD] calculateFirstDayOfYearMillis [TYPE] long [PARAMETER] int year [CLASS] CopticChronology   [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  boolean false  true  [TYPE]  Map cCache  [TYPE]  long millis  serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  relativeYear  year 
[REPLACE]^return millis  ||   ( 365 - 112 )  * DateTimeConstants.MILLIS_PER_DAY;^228^^^^^204^229^[REPLACE] return millis +  ( 365L - 112 )  * DateTimeConstants.MILLIS_PER_DAY;^[METHOD] calculateFirstDayOfYearMillis [TYPE] long [PARAMETER] int year [CLASS] CopticChronology   [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  boolean false  true  [TYPE]  Map cCache  [TYPE]  long millis  serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  relativeYear  year 
[REPLACE]^return MAX_YEAR;^233^^^^^232^234^[REPLACE] return MIN_YEAR;^[METHOD] getMinYear [TYPE] int [PARAMETER] [CLASS] CopticChronology   [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  boolean false  true  [TYPE]  Map cCache  [TYPE]  long millis  serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  relativeYear  year 
[REPLACE]^return MIN_YEAR;^238^^^^^237^239^[REPLACE] return MAX_YEAR;^[METHOD] getMaxYear [TYPE] int [PARAMETER] [CLASS] CopticChronology   [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  boolean false  true  [TYPE]  Map cCache  [TYPE]  long millis  serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  relativeYear  year 
[REPLACE]^return  ( 1686 * MILLIS_PER_YEAR + 112L * DateTimeConstants.MILLIS_PER_DAY )   ;^243^^^^^242^244^[REPLACE] return  ( 1686L * MILLIS_PER_YEAR + 112L * DateTimeConstants.MILLIS_PER_DAY )  / 2;^[METHOD] getApproxMillisAtEpochDividedByTwo [TYPE] long [PARAMETER] [CLASS] CopticChronology   [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  boolean false  true  [TYPE]  Map cCache  [TYPE]  long millis  serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  relativeYear  year 
[REPLACE]^if  ( getBase (  )  != true )  {^248^^^^^247^259^[REPLACE] if  ( getBase (  )  == null )  {^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] CopticChronology   [TYPE]  Fields fields  [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  long millis  serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  relativeYear  year 
[REPLACE]^fields.weekyear = new SkipDateTimeField ( this, fields.weekyear ) ; ;^252^^^^^247^259^[REPLACE] fields.year = new SkipDateTimeField ( this, fields.year ) ;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] CopticChronology   [TYPE]  Fields fields  [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  long millis  serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  relativeYear  year 
[REPLACE]^fields.year = new SkipDateTimeField ( this, fields.year ) ; ;^253^^^^^247^259^[REPLACE] fields.weekyear = new SkipDateTimeField ( this, fields.weekyear ) ;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] CopticChronology   [TYPE]  Fields fields  [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  long millis  serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  relativeYear  year 
[REPLACE]^fields.era  =  fields.era ;^255^^^^^247^259^[REPLACE] fields.era = ERA_FIELD;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] CopticChronology   [TYPE]  Fields fields  [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  long millis  serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  relativeYear  year 
[REPLACE]^fields.monthOfYear = new BasicMonthOfYearDateTimeField ( this, 13 * 1 ) ;^256^^^^^247^259^[REPLACE] fields.monthOfYear = new BasicMonthOfYearDateTimeField ( this, 13 ) ;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] CopticChronology   [TYPE]  Fields fields  [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  long millis  serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  relativeYear  year 
[ADD]^fields.months = fields.monthOfYear.getDurationField (  ) ;^256^257^^^^247^259^[ADD] fields.monthOfYear = new BasicMonthOfYearDateTimeField ( this, 13 ) ; fields.months = fields.monthOfYear.getDurationField (  ) ;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] CopticChronology   [TYPE]  Fields fields  [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  long millis  serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  relativeYear  year 
[REPLACE]^fields.months =  null.monthOfYear.getDurationField (  ) ;^257^^^^^247^259^[REPLACE] fields.months = fields.monthOfYear.getDurationField (  ) ;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] CopticChronology   [TYPE]  Fields fields  [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  long millis  serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  relativeYear  year 
[REPLACE]^fields.monthOfYear = new BasicMonthOfYearDateTimeField ( this, 10 ) ;^256^^^^^247^259^[REPLACE] fields.monthOfYear = new BasicMonthOfYearDateTimeField ( this, 13 ) ;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] CopticChronology   [TYPE]  Fields fields  [TYPE]  boolean false  true  [TYPE]  CopticChronology INSTANCE_UTC  chrono  [TYPE]  DateTimeField ERA_FIELD  [TYPE]  Map cCache  [TYPE]  long millis  serialVersionUID  [TYPE]  int AM  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  relativeYear  year 
