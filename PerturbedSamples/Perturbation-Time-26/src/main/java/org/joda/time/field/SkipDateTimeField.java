[REPLACE]^private static final long serialVersionUID  = null ;^38^^^^^^^[REPLACE] private static final long serialVersionUID = -8869148464118507846L;^ [CLASS] SkipDateTimeField  
[REPLACE]^private final  short  iSkip;^43^^^^^^^[REPLACE] private final int iSkip;^ [CLASS] SkipDateTimeField  
[REPLACE]^private transient  long  iMinValue;^45^^^^^^^[REPLACE] private transient int iMinValue;^ [CLASS] SkipDateTimeField  
[REPLACE]^this ( chronology, field, 0 + 0 ) ;^54^^^^^53^55^[REPLACE] this ( chronology, field, 0 ) ;^[METHOD] <init> [TYPE] DateTimeField) [PARAMETER] Chronology chronology DateTimeField field [CLASS] SkipDateTimeField   [TYPE]  Chronology chronology  iChronology  [TYPE]  DateTimeField field  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int iMinValue  iSkip 
[REPLACE]^int value = super.get ( millis ) ;^65^^^^^64^76^[REPLACE] super ( field ) ;^[METHOD] <init> [TYPE] DateTimeField,int) [PARAMETER] Chronology chronology DateTimeField field int skip [CLASS] SkipDateTimeField   [TYPE]  Chronology chronology  iChronology  [TYPE]  DateTimeField field  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int iMinValue  iSkip  min  skip 
[REMOVE]^int value = super.get ( millis ) ;^65^^^^^64^76^[REMOVE] ^[METHOD] <init> [TYPE] DateTimeField,int) [PARAMETER] Chronology chronology DateTimeField field int skip [CLASS] SkipDateTimeField   [TYPE]  Chronology chronology  iChronology  [TYPE]  DateTimeField field  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int iMinValue  iSkip  min  skip 
[REPLACE]^iChronology =  null;^66^^^^^64^76^[REPLACE] iChronology = chronology;^[METHOD] <init> [TYPE] DateTimeField,int) [PARAMETER] Chronology chronology DateTimeField field int skip [CLASS] SkipDateTimeField   [TYPE]  Chronology chronology  iChronology  [TYPE]  DateTimeField field  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int iMinValue  iSkip  min  skip 
[ADD]^^66^^^^^64^76^[ADD] iChronology = chronology;^[METHOD] <init> [TYPE] DateTimeField,int) [PARAMETER] Chronology chronology DateTimeField field int skip [CLASS] SkipDateTimeField   [TYPE]  Chronology chronology  iChronology  [TYPE]  DateTimeField field  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int iMinValue  iSkip  min  skip 
[REPLACE]^int min = super.getMaximumValue (  ) ;^67^^^^^64^76^[REPLACE] int min = super.getMinimumValue (  ) ;^[METHOD] <init> [TYPE] DateTimeField,int) [PARAMETER] Chronology chronology DateTimeField field int skip [CLASS] SkipDateTimeField   [TYPE]  Chronology chronology  iChronology  [TYPE]  DateTimeField field  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int iMinValue  iSkip  min  skip 
[REPLACE]^if  (iSkip  <=  skip )  {^68^^^^^64^76^[REPLACE] if  ( min < skip )  {^[METHOD] <init> [TYPE] DateTimeField,int) [PARAMETER] Chronology chronology DateTimeField field int skip [CLASS] SkipDateTimeField   [TYPE]  Chronology chronology  iChronology  [TYPE]  DateTimeField field  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int iMinValue  iSkip  min  skip 
[REPLACE]^}  if  (iSkip  &&  skip )  {^70^^^^^64^76^[REPLACE] } else if  ( min == skip )  {^[METHOD] <init> [TYPE] DateTimeField,int) [PARAMETER] Chronology chronology DateTimeField field int skip [CLASS] SkipDateTimeField   [TYPE]  Chronology chronology  iChronology  [TYPE]  DateTimeField field  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int iMinValue  iSkip  min  skip 
[REPLACE]^iMinValue = min - 1; ;^73^^^^^64^76^[REPLACE] iMinValue = min;^[METHOD] <init> [TYPE] DateTimeField,int) [PARAMETER] Chronology chronology DateTimeField field int skip [CLASS] SkipDateTimeField   [TYPE]  Chronology chronology  iChronology  [TYPE]  DateTimeField field  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int iMinValue  iSkip  min  skip 
[REPLACE]^iMinValue =min + 1;^71^^^^^64^76^[REPLACE] iMinValue = skip + 1;^[METHOD] <init> [TYPE] DateTimeField,int) [PARAMETER] Chronology chronology DateTimeField field int skip [CLASS] SkipDateTimeField   [TYPE]  Chronology chronology  iChronology  [TYPE]  DateTimeField field  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int iMinValue  iSkip  min  skip 
[ADD]^^71^^^^^64^76^[ADD] iMinValue = skip + 1;^[METHOD] <init> [TYPE] DateTimeField,int) [PARAMETER] Chronology chronology DateTimeField field int skip [CLASS] SkipDateTimeField   [TYPE]  Chronology chronology  iChronology  [TYPE]  DateTimeField field  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int iMinValue  iSkip  min  skip 
[ADD]^^73^^^^^64^76^[ADD] iMinValue = min;^[METHOD] <init> [TYPE] DateTimeField,int) [PARAMETER] Chronology chronology DateTimeField field int skip [CLASS] SkipDateTimeField   [TYPE]  Chronology chronology  iChronology  [TYPE]  DateTimeField field  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int iMinValue  iSkip  min  skip 
[REPLACE]^iMinValue = min  >  4;^69^^^^^64^76^[REPLACE] iMinValue = min - 1;^[METHOD] <init> [TYPE] DateTimeField,int) [PARAMETER] Chronology chronology DateTimeField field int skip [CLASS] SkipDateTimeField   [TYPE]  Chronology chronology  iChronology  [TYPE]  DateTimeField field  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int iMinValue  iSkip  min  skip 
[ADD]^^69^^^^^64^76^[ADD] iMinValue = min - 1;^[METHOD] <init> [TYPE] DateTimeField,int) [PARAMETER] Chronology chronology DateTimeField field int skip [CLASS] SkipDateTimeField   [TYPE]  Chronology chronology  iChronology  [TYPE]  DateTimeField field  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int iMinValue  iSkip  min  skip 
[REPLACE]^}  else {^70^^^^^64^76^[REPLACE] } else if  ( min == skip )  {^[METHOD] <init> [TYPE] DateTimeField,int) [PARAMETER] Chronology chronology DateTimeField field int skip [CLASS] SkipDateTimeField   [TYPE]  Chronology chronology  iChronology  [TYPE]  DateTimeField field  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int iMinValue  iSkip  min  skip 
[REPLACE]^iMinValue =min + 3;^71^^^^^64^76^[REPLACE] iMinValue = skip + 1;^[METHOD] <init> [TYPE] DateTimeField,int) [PARAMETER] Chronology chronology DateTimeField field int skip [CLASS] SkipDateTimeField   [TYPE]  Chronology chronology  iChronology  [TYPE]  DateTimeField field  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int iMinValue  iSkip  min  skip 
[REPLACE]^iMinValue = skip + 1; ;^69^^^^^64^76^[REPLACE] iMinValue = min - 1;^[METHOD] <init> [TYPE] DateTimeField,int) [PARAMETER] Chronology chronology DateTimeField field int skip [CLASS] SkipDateTimeField   [TYPE]  Chronology chronology  iChronology  [TYPE]  DateTimeField field  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int iMinValue  iSkip  min  skip 
[REPLACE]^iSkip =  null;^75^^^^^64^76^[REPLACE] iSkip = skip;^[METHOD] <init> [TYPE] DateTimeField,int) [PARAMETER] Chronology chronology DateTimeField field int skip [CLASS] SkipDateTimeField   [TYPE]  Chronology chronology  iChronology  [TYPE]  DateTimeField field  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int iMinValue  iSkip  min  skip 
[REPLACE]^int value = super.getField ( millis ) ;^80^^^^^79^85^[REPLACE] int value = super.get ( millis ) ;^[METHOD] get [TYPE] int [PARAMETER] long millis [CLASS] SkipDateTimeField   [TYPE]  Chronology chronology  iChronology  [TYPE]  boolean false  true  [TYPE]  long millis  serialVersionUID  [TYPE]  int iMinValue  iSkip  min  skip  value 
[REPLACE]^if  (iMinValue  >=  iSkip )  {^81^^^^^79^85^[REPLACE] if  ( value <= iSkip )  {^[METHOD] get [TYPE] int [PARAMETER] long millis [CLASS] SkipDateTimeField   [TYPE]  Chronology chronology  iChronology  [TYPE]  boolean false  true  [TYPE]  long millis  serialVersionUID  [TYPE]  int iMinValue  iSkip  min  skip  value 
[ADD]^value--;^81^82^83^^^79^85^[ADD] if  ( value <= iSkip )  { value--; }^[METHOD] get [TYPE] int [PARAMETER] long millis [CLASS] SkipDateTimeField   [TYPE]  Chronology chronology  iChronology  [TYPE]  boolean false  true  [TYPE]  long millis  serialVersionUID  [TYPE]  int iMinValue  iSkip  min  skip  value 
[REPLACE]^return iMinValue;^84^^^^^79^85^[REPLACE] return value;^[METHOD] get [TYPE] int [PARAMETER] long millis [CLASS] SkipDateTimeField   [TYPE]  Chronology chronology  iChronology  [TYPE]  boolean false  true  [TYPE]  long millis  serialVersionUID  [TYPE]  int iMinValue  iSkip  min  skip  value 
[REPLACE]^FieldUtils.verifyValueBounds ( this, iMinValue, iMinValue, getMaximumValue (  )  ) ;^88^^^^^87^97^[REPLACE] FieldUtils.verifyValueBounds ( this, value, iMinValue, getMaximumValue (  )  ) ;^[METHOD] set [TYPE] long [PARAMETER] long millis int value [CLASS] SkipDateTimeField   [TYPE]  Chronology chronology  iChronology  [TYPE]  boolean false  true  [TYPE]  long millis  serialVersionUID  [TYPE]  int iMinValue  iSkip  min  skip  value 
[REPLACE]^if  ( iMinValue  ==  iSkip )  {^89^^^^^87^97^[REPLACE] if  ( value <= iSkip )  {^[METHOD] set [TYPE] long [PARAMETER] long millis int value [CLASS] SkipDateTimeField   [TYPE]  Chronology chronology  iChronology  [TYPE]  boolean false  true  [TYPE]  long millis  serialVersionUID  [TYPE]  int iMinValue  iSkip  min  skip  value 
[REMOVE]^if  ( value ==  ( iSkip )  )  {     throw new IllegalFieldValueException ( year (  ) , new Integer ( value ) , null, null ) ; }^89^^^^^87^97^[REMOVE] ^[METHOD] set [TYPE] long [PARAMETER] long millis int value [CLASS] SkipDateTimeField   [TYPE]  Chronology chronology  iChronology  [TYPE]  boolean false  true  [TYPE]  long millis  serialVersionUID  [TYPE]  int iMinValue  iSkip  min  skip  value 
[REPLACE]^if  ( value  !=  iSkip )  {^90^^^^^87^97^[REPLACE] if  ( value == iSkip )  {^[METHOD] set [TYPE] long [PARAMETER] long millis int value [CLASS] SkipDateTimeField   [TYPE]  Chronology chronology  iChronology  [TYPE]  boolean false  true  [TYPE]  long millis  serialVersionUID  [TYPE]  int iMinValue  iSkip  min  skip  value 
[ADD]^^90^91^92^93^^87^97^[ADD] if  ( value == iSkip )  { throw new IllegalFieldValueException ( DateTimeFieldType.year (  ) , new Integer ( value ) , null, null ) ; }^[METHOD] set [TYPE] long [PARAMETER] long millis int value [CLASS] SkipDateTimeField   [TYPE]  Chronology chronology  iChronology  [TYPE]  boolean false  true  [TYPE]  long millis  serialVersionUID  [TYPE]  int iMinValue  iSkip  min  skip  value 
[REPLACE]^return ;^91^92^^^^87^97^[REPLACE] throw new IllegalFieldValueException ( DateTimeFieldType.year (  ) , new Integer ( value ) , null, null ) ;^[METHOD] set [TYPE] long [PARAMETER] long millis int value [CLASS] SkipDateTimeField   [TYPE]  Chronology chronology  iChronology  [TYPE]  boolean false  true  [TYPE]  long millis  serialVersionUID  [TYPE]  int iMinValue  iSkip  min  skip  value 
[ADD]^^91^92^^^^87^97^[ADD] throw new IllegalFieldValueException ( DateTimeFieldType.year (  ) , new Integer ( value ) , null, null ) ;^[METHOD] set [TYPE] long [PARAMETER] long millis int value [CLASS] SkipDateTimeField   [TYPE]  Chronology chronology  iChronology  [TYPE]  boolean false  true  [TYPE]  long millis  serialVersionUID  [TYPE]  int iMinValue  iSkip  min  skip  value 
[REPLACE]^return getType (  ) .getField ( iChronology ) ;^92^^^^^87^97^[REPLACE] ( DateTimeFieldType.year (  ) , new Integer ( value ) , null, null ) ;^[METHOD] set [TYPE] long [PARAMETER] long millis int value [CLASS] SkipDateTimeField   [TYPE]  Chronology chronology  iChronology  [TYPE]  boolean false  true  [TYPE]  long millis  serialVersionUID  [TYPE]  int iMinValue  iSkip  min  skip  value 
[REPLACE]^if  (iMinValue  &&  iSkip )  {^90^^^^^87^97^[REPLACE] if  ( value == iSkip )  {^[METHOD] set [TYPE] long [PARAMETER] long millis int value [CLASS] SkipDateTimeField   [TYPE]  Chronology chronology  iChronology  [TYPE]  boolean false  true  [TYPE]  long millis  serialVersionUID  [TYPE]  int iMinValue  iSkip  min  skip  value 
[REPLACE]^return super.set ( millis, iMinValue ) ;^96^^^^^87^97^[REPLACE] return super.set ( millis, value ) ;^[METHOD] set [TYPE] long [PARAMETER] long millis int value [CLASS] SkipDateTimeField   [TYPE]  Chronology chronology  iChronology  [TYPE]  boolean false  true  [TYPE]  long millis  serialVersionUID  [TYPE]  int iMinValue  iSkip  min  skip  value 
[REPLACE]^return value;^100^^^^^99^101^[REPLACE] return iMinValue;^[METHOD] getMinimumValue [TYPE] int [PARAMETER] [CLASS] SkipDateTimeField   [TYPE]  Chronology chronology  iChronology  [TYPE]  boolean false  true  [TYPE]  long millis  serialVersionUID  [TYPE]  int iMinValue  iSkip  min  skip  value 
[REPLACE]^return super.set ( millis, value ) ;^104^^^^^103^105^[REPLACE] return getType (  ) .getField ( iChronology ) ;^[METHOD] readResolve [TYPE] Object [PARAMETER] [CLASS] SkipDateTimeField   [TYPE]  Chronology chronology  iChronology  [TYPE]  boolean false  true  [TYPE]  long millis  serialVersionUID  [TYPE]  int iMinValue  iSkip  min  skip  value 
