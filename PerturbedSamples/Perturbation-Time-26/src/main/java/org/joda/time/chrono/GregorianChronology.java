[REPLACE]^private static final long serialVersionUID  = null ;^48^^^^^^^[REPLACE] private static final long serialVersionUID = -861407383323710522L;^ [CLASS] GregorianChronology  
[REPLACE]^private static final long MILLIS_PER_YEAR  = null ;^50^51^^^^50^51^[REPLACE] private static final long MILLIS_PER_YEAR = ( long )   ( 365.2425 * DateTimeConstants.MILLIS_PER_DAY ) ;^ [CLASS] GregorianChronology  
[REPLACE]^private static final  short  MILLIS_PER_MONTH = (  short  )   ( 2.0d * DateTimeConstants.MILLIS_PER_DAY / 12 ) ;^53^54^^^^53^54^[REPLACE] private static final long MILLIS_PER_MONTH = ( long )   ( 365.2425 * DateTimeConstants.MILLIS_PER_DAY / 12 ) ;^ [CLASS] GregorianChronology  
[REPLACE]^private static final  long  DAYS_0000_TO_1970 = 381281;^56^^^^^^^[REPLACE] private static final int DAYS_0000_TO_1970 = 719527;^ [CLASS] GregorianChronology  
[REPLACE]^private static final  long  MIN_YEAR = -292275054;^59^^^^^^^[REPLACE] private static final int MIN_YEAR = -292275054;^ [CLASS] GregorianChronology  
[REPLACE]^private  final int MAX_YEAR = 292278993;^62^^^^^^^[REPLACE] private static final int MAX_YEAR = 292278993;^ [CLASS] GregorianChronology  
[REPLACE]^private static  GregorianChronology INSTANCE_UTC;^65^^^^^^^[REPLACE] private static final GregorianChronology INSTANCE_UTC;^ [CLASS] GregorianChronology  
[REPLACE]^private static  Map<DateTimeZone, GregorianChronology[]> cCache = new HashMap<DateTimeZone, GregorianChronology[]> (  ) ;^68^^^^^^^[REPLACE] private static final Map<DateTimeZone, GregorianChronology[]> cCache = new HashMap<DateTimeZone, GregorianChronology[]> (  ) ;^ [CLASS] GregorianChronology  
[REPLACE]^super ( base, param, MIN_YEAR ) ;^148^^^^^147^149^[REPLACE] super ( base, param, minDaysInFirstWeek ) ;^[METHOD] <init> [TYPE] Object,int) [PARAMETER] Chronology base Object param int minDaysInFirstWeek [CLASS] GregorianChronology   [TYPE]  boolean false  true  [TYPE]  GregorianChronology INSTANCE_UTC  [TYPE]  Object param  [TYPE]  Chronology base  [TYPE]  Map cCache  [TYPE]  long MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  [TYPE]  int DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek 
[REPLACE]^return MILLIS_PER_YEAR / 2;^81^^^^^80^82^[REPLACE] return INSTANCE_UTC;^[METHOD] getInstanceUTC [TYPE] GregorianChronology [PARAMETER] [CLASS] GregorianChronology   [TYPE]  boolean false  true  [TYPE]  Map cCache  [TYPE]  long MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  [TYPE]  int DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  GregorianChronology INSTANCE_UTC 
[REPLACE]^return getInstance ( DateTimeZone.getDefault (  ) , 4L ) ;^90^^^^^89^91^[REPLACE] return getInstance ( DateTimeZone.getDefault (  ) , 4 ) ;^[METHOD] getInstance [TYPE] GregorianChronology [PARAMETER] [CLASS] GregorianChronology   [TYPE]  boolean false  true  [TYPE]  Map cCache  [TYPE]  long MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  [TYPE]  int DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  GregorianChronology INSTANCE_UTC 
[REPLACE]^return getInstance ( zone, 4 - 1 ) ;^100^^^^^99^101^[REPLACE] return getInstance ( zone, 4 ) ;^[METHOD] getInstance [TYPE] GregorianChronology [PARAMETER] DateTimeZone zone [CLASS] GregorianChronology   [TYPE]  boolean false  true  [TYPE]  Map cCache  [TYPE]  long MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  [TYPE]  int DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone  [TYPE]  GregorianChronology INSTANCE_UTC 
[REPLACE]^if  ( zone != null )  {^111^^^^^110^139^[REPLACE] if  ( zone == null )  {^[METHOD] getInstance [TYPE] GregorianChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] GregorianChronology   [TYPE]  boolean false  true  [TYPE]  GregorianChronology INSTANCE_UTC  chrono  [TYPE]  Map cCache  [TYPE]  GregorianChronology[] chronos  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  [TYPE]  int DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone 
[ADD]^^111^112^113^^^110^139^[ADD] if  ( zone == null )  { zone = DateTimeZone.getDefault (  ) ; }^[METHOD] getInstance [TYPE] GregorianChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] GregorianChronology   [TYPE]  boolean false  true  [TYPE]  GregorianChronology INSTANCE_UTC  chrono  [TYPE]  Map cCache  [TYPE]  GregorianChronology[] chronos  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  [TYPE]  int DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone 
[REPLACE]^zone  =  zone ;^112^^^^^110^139^[REPLACE] zone = DateTimeZone.getDefault (  ) ;^[METHOD] getInstance [TYPE] GregorianChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] GregorianChronology   [TYPE]  boolean false  true  [TYPE]  GregorianChronology INSTANCE_UTC  chrono  [TYPE]  Map cCache  [TYPE]  GregorianChronology[] chronos  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  [TYPE]  int DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone 
[REPLACE]^zone ;^112^^^^^110^139^[REPLACE] zone = DateTimeZone.getDefault (  ) ;^[METHOD] getInstance [TYPE] GregorianChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] GregorianChronology   [TYPE]  boolean false  true  [TYPE]  GregorianChronology INSTANCE_UTC  chrono  [TYPE]  Map cCache  [TYPE]  GregorianChronology[] chronos  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  [TYPE]  int DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone 
[REPLACE]^GregorianChronology[] chronos = cCache.get ( zone ) ;^114^^^^^110^139^[REPLACE] GregorianChronology chrono;^[METHOD] getInstance [TYPE] GregorianChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] GregorianChronology   [TYPE]  boolean false  true  [TYPE]  GregorianChronology INSTANCE_UTC  chrono  [TYPE]  Map cCache  [TYPE]  GregorianChronology[] chronos  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  [TYPE]  int DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone 
[ADD]^^114^^^^^110^139^[ADD] GregorianChronology chrono;^[METHOD] getInstance [TYPE] GregorianChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] GregorianChronology   [TYPE]  boolean false  true  [TYPE]  GregorianChronology INSTANCE_UTC  chrono  [TYPE]  Map cCache  [TYPE]  GregorianChronology[] chronos  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  [TYPE]  int DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone 
[REPLACE]^if  ( chronos != null )  {^117^^^^^110^139^[REPLACE] if  ( chronos == null )  {^[METHOD] getInstance [TYPE] GregorianChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] GregorianChronology   [TYPE]  boolean false  true  [TYPE]  GregorianChronology INSTANCE_UTC  chrono  [TYPE]  Map cCache  [TYPE]  GregorianChronology[] chronos  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  [TYPE]  int DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone 
[REPLACE]^chronos = new GregorianChronology[4];^118^^^^^110^139^[REPLACE] chronos = new GregorianChronology[7];^[METHOD] getInstance [TYPE] GregorianChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] GregorianChronology   [TYPE]  boolean false  true  [TYPE]  GregorianChronology INSTANCE_UTC  chrono  [TYPE]  Map cCache  [TYPE]  GregorianChronology[] chronos  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  [TYPE]  int DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone 
[REPLACE]^if  ( INSTANCE_UTC != null )  {^127^^^^^110^139^[REPLACE] if  ( chrono == null )  {^[METHOD] getInstance [TYPE] GregorianChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] GregorianChronology   [TYPE]  boolean false  true  [TYPE]  GregorianChronology INSTANCE_UTC  chrono  [TYPE]  Map cCache  [TYPE]  GregorianChronology[] chronos  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  [TYPE]  int DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone 
[REPLACE]^if  ( zone  ||  DateTimeZone.UTC )  {^128^^^^^110^139^[REPLACE] if  ( zone == DateTimeZone.UTC )  {^[METHOD] getInstance [TYPE] GregorianChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] GregorianChronology   [TYPE]  boolean false  true  [TYPE]  GregorianChronology INSTANCE_UTC  chrono  [TYPE]  Map cCache  [TYPE]  GregorianChronology[] chronos  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  [TYPE]  int DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone 
[REPLACE]^chrono =  getInstance ( DateTimeZone.UTC, MIN_YEAR ) ;^131^^^^^128^134^[REPLACE] chrono = getInstance ( DateTimeZone.UTC, minDaysInFirstWeek ) ;^[METHOD] getInstance [TYPE] GregorianChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] GregorianChronology   [TYPE]  boolean false  true  [TYPE]  GregorianChronology INSTANCE_UTC  chrono  [TYPE]  Map cCache  [TYPE]  GregorianChronology[] chronos  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  [TYPE]  int DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone 
[REPLACE]^chrono = new GregorianChronology ( ZonedChronology.getInstance ( chrono, zone ) , true, minDaysInFirstWeek ) ;^132^133^^^^128^134^[REPLACE] chrono = new GregorianChronology ( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[METHOD] getInstance [TYPE] GregorianChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] GregorianChronology   [TYPE]  boolean false  true  [TYPE]  GregorianChronology INSTANCE_UTC  chrono  [TYPE]  Map cCache  [TYPE]  GregorianChronology[] chronos  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  [TYPE]  int DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone 
[ADD]^^132^133^^^^128^134^[ADD] chrono = new GregorianChronology ( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[METHOD] getInstance [TYPE] GregorianChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] GregorianChronology   [TYPE]  boolean false  true  [TYPE]  GregorianChronology INSTANCE_UTC  chrono  [TYPE]  Map cCache  [TYPE]  GregorianChronology[] chronos  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  [TYPE]  int DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone 
[REPLACE]^chrono = new GregorianChronology ( true, true, minDaysInFirstWeek ) ;^129^^^^^110^139^[REPLACE] chrono = new GregorianChronology ( null, null, minDaysInFirstWeek ) ;^[METHOD] getInstance [TYPE] GregorianChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] GregorianChronology   [TYPE]  boolean false  true  [TYPE]  GregorianChronology INSTANCE_UTC  chrono  [TYPE]  Map cCache  [TYPE]  GregorianChronology[] chronos  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  [TYPE]  int DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone 
[REPLACE]^chrono = new GregorianChronology ( false, false, minDaysInFirstWeek ) ;^129^^^^^110^139^[REPLACE] chrono = new GregorianChronology ( null, null, minDaysInFirstWeek ) ;^[METHOD] getInstance [TYPE] GregorianChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] GregorianChronology   [TYPE]  boolean false  true  [TYPE]  GregorianChronology INSTANCE_UTC  chrono  [TYPE]  Map cCache  [TYPE]  GregorianChronology[] chronos  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  [TYPE]  int DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone 
[REPLACE]^chrono =  getInstance ( DateTimeZone.UTC, MIN_YEAR ) ;^131^^^^^110^139^[REPLACE] chrono = getInstance ( DateTimeZone.UTC, minDaysInFirstWeek ) ;^[METHOD] getInstance [TYPE] GregorianChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] GregorianChronology   [TYPE]  boolean false  true  [TYPE]  GregorianChronology INSTANCE_UTC  chrono  [TYPE]  Map cCache  [TYPE]  GregorianChronology[] chronos  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  [TYPE]  int DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone 
[REPLACE]^chrono = new GregorianChronology ( ZonedChronology.getInstance ( chrono, zone ) , false, minDaysInFirstWeek ) ;^132^133^^^^110^139^[REPLACE] chrono = new GregorianChronology ( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[METHOD] getInstance [TYPE] GregorianChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] GregorianChronology   [TYPE]  boolean false  true  [TYPE]  GregorianChronology INSTANCE_UTC  chrono  [TYPE]  Map cCache  [TYPE]  GregorianChronology[] chronos  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  [TYPE]  int DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone 
[ADD]^^132^133^^^^110^139^[ADD] chrono = new GregorianChronology ( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[METHOD] getInstance [TYPE] GregorianChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] GregorianChronology   [TYPE]  boolean false  true  [TYPE]  GregorianChronology INSTANCE_UTC  chrono  [TYPE]  Map cCache  [TYPE]  GregorianChronology[] chronos  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  [TYPE]  int DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone 
[REPLACE]^chronos[minDaysInFirstWeek  !=  1] = chrono;^135^^^^^110^139^[REPLACE] chronos[minDaysInFirstWeek - 1] = chrono;^[METHOD] getInstance [TYPE] GregorianChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] GregorianChronology   [TYPE]  boolean false  true  [TYPE]  GregorianChronology INSTANCE_UTC  chrono  [TYPE]  Map cCache  [TYPE]  GregorianChronology[] chronos  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  [TYPE]  int DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone 
[REPLACE]^if  ( zone  !=  DateTimeZone.UTC )  {^128^^^^^110^139^[REPLACE] if  ( zone == DateTimeZone.UTC )  {^[METHOD] getInstance [TYPE] GregorianChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] GregorianChronology   [TYPE]  boolean false  true  [TYPE]  GregorianChronology INSTANCE_UTC  chrono  [TYPE]  Map cCache  [TYPE]  GregorianChronology[] chronos  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  [TYPE]  int DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone 
[REPLACE]^chrono =  getInstance ( DateTimeZone.UTC, null ) ;^131^^^^^128^134^[REPLACE] chrono = getInstance ( DateTimeZone.UTC, minDaysInFirstWeek ) ;^[METHOD] getInstance [TYPE] GregorianChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] GregorianChronology   [TYPE]  boolean false  true  [TYPE]  GregorianChronology INSTANCE_UTC  chrono  [TYPE]  Map cCache  [TYPE]  GregorianChronology[] chronos  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  [TYPE]  int DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone 
[ADD]^^129^^^^^110^139^[ADD] chrono = new GregorianChronology ( null, null, minDaysInFirstWeek ) ;^[METHOD] getInstance [TYPE] GregorianChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] GregorianChronology   [TYPE]  boolean false  true  [TYPE]  GregorianChronology INSTANCE_UTC  chrono  [TYPE]  Map cCache  [TYPE]  GregorianChronology[] chronos  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  [TYPE]  int DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone 
[ADD]^chrono = chronos[minDaysInFirstWeek - 1];( "Invalid min days in first week: " + minDaysInFirstWeek ) ;^121^122^123^124^125^110^139^[ADD] try { chrono = chronos[minDaysInFirstWeek - 1]; } catch  ( ArrayIndexOutOfBoundsException e )  { throw new IllegalArgumentException ( "Invalid min days in first week: " + minDaysInFirstWeek ) ;^[METHOD] getInstance [TYPE] GregorianChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] GregorianChronology   [TYPE]  boolean false  true  [TYPE]  GregorianChronology INSTANCE_UTC  chrono  [TYPE]  Map cCache  [TYPE]  GregorianChronology[] chronos  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  [TYPE]  int DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone 
[REPLACE]^chrono = chronos[minDaysInFirstWeek  &  1];^122^^^^^110^139^[REPLACE] chrono = chronos[minDaysInFirstWeek - 1];^[METHOD] getInstance [TYPE] GregorianChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] GregorianChronology   [TYPE]  boolean false  true  [TYPE]  GregorianChronology INSTANCE_UTC  chrono  [TYPE]  Map cCache  [TYPE]  GregorianChronology[] chronos  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  [TYPE]  int DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone 
[REPLACE]^chronos = new GregorianChronology[3];^118^^^^^110^139^[REPLACE] chronos = new GregorianChronology[7];^[METHOD] getInstance [TYPE] GregorianChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] GregorianChronology   [TYPE]  boolean false  true  [TYPE]  GregorianChronology INSTANCE_UTC  chrono  [TYPE]  Map cCache  [TYPE]  GregorianChronology[] chronos  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  [TYPE]  int DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone 
[REPLACE]^chrono = chronos[minDaysInFirstWeek -MIN_YEAR];^122^^^^^110^139^[REPLACE] chrono = chronos[minDaysInFirstWeek - 1];^[METHOD] getInstance [TYPE] GregorianChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] GregorianChronology   [TYPE]  boolean false  true  [TYPE]  GregorianChronology INSTANCE_UTC  chrono  [TYPE]  Map cCache  [TYPE]  GregorianChronology[] chronos  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  [TYPE]  int DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone 
[REPLACE]^chrono = new GregorianChronology ( ZonedChronology.getInstance ( chrono, zone ) , true, minDaysInFirstWeek ) ;^132^133^^^^110^139^[REPLACE] chrono = new GregorianChronology ( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[METHOD] getInstance [TYPE] GregorianChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] GregorianChronology   [TYPE]  boolean false  true  [TYPE]  GregorianChronology INSTANCE_UTC  chrono  [TYPE]  Map cCache  [TYPE]  GregorianChronology[] chronos  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  [TYPE]  int DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone 
[REPLACE]^chronos[minDaysInFirstWeek  >=  1] = chrono;^135^^^^^110^139^[REPLACE] chronos[minDaysInFirstWeek - 1] = chrono;^[METHOD] getInstance [TYPE] GregorianChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] GregorianChronology   [TYPE]  boolean false  true  [TYPE]  GregorianChronology INSTANCE_UTC  chrono  [TYPE]  Map cCache  [TYPE]  GregorianChronology[] chronos  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  [TYPE]  int DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone 
[ADD]^^135^^^^^110^139^[ADD] chronos[minDaysInFirstWeek - 1] = chrono;^[METHOD] getInstance [TYPE] GregorianChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] GregorianChronology   [TYPE]  boolean false  true  [TYPE]  GregorianChronology INSTANCE_UTC  chrono  [TYPE]  Map cCache  [TYPE]  GregorianChronology[] chronos  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  [TYPE]  int DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone 
[REPLACE]^GregorianChronology[] chronos = cCache .put ( zone , chronos )  ;^116^^^^^110^139^[REPLACE] GregorianChronology[] chronos = cCache.get ( zone ) ;^[METHOD] getInstance [TYPE] GregorianChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] GregorianChronology   [TYPE]  boolean false  true  [TYPE]  GregorianChronology INSTANCE_UTC  chrono  [TYPE]  Map cCache  [TYPE]  GregorianChronology[] chronos  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  [TYPE]  int DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone 
[REPLACE]^return ;^124^125^^^^110^139^[REPLACE] throw new IllegalArgumentException ( "Invalid min days in first week: " + minDaysInFirstWeek ) ;^[METHOD] getInstance [TYPE] GregorianChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] GregorianChronology   [TYPE]  boolean false  true  [TYPE]  GregorianChronology INSTANCE_UTC  chrono  [TYPE]  Map cCache  [TYPE]  GregorianChronology[] chronos  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  [TYPE]  int DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone 
[ADD]^^123^124^125^^^110^139^[ADD] catch  ( ArrayIndexOutOfBoundsException e )  { throw new IllegalArgumentException ( "Invalid min days in first week: " + minDaysInFirstWeek ) ;^[METHOD] getInstance [TYPE] GregorianChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] GregorianChronology   [TYPE]  boolean false  true  [TYPE]  GregorianChronology INSTANCE_UTC  chrono  [TYPE]  Map cCache  [TYPE]  GregorianChronology[] chronos  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  [TYPE]  int DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone 
[REPLACE]^return INSTANCE_UTC;^138^^^^^110^139^[REPLACE] return chrono;^[METHOD] getInstance [TYPE] GregorianChronology [PARAMETER] DateTimeZone zone int minDaysInFirstWeek [CLASS] GregorianChronology   [TYPE]  boolean false  true  [TYPE]  GregorianChronology INSTANCE_UTC  chrono  [TYPE]  Map cCache  [TYPE]  GregorianChronology[] chronos  [TYPE]  ArrayIndexOutOfBoundsException e  [TYPE]  long MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  [TYPE]  int DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  [TYPE]  DateTimeZone zone 
[REPLACE]^GregorianChronology[] chronos = cCache.get ( zone ) ;^155^^^^^154^161^[REPLACE] Chronology base = getBase (  ) ;^[METHOD] readResolve [TYPE] Object [PARAMETER] [CLASS] GregorianChronology   [TYPE]  Chronology base  [TYPE]  boolean false  true  [TYPE]  Map cCache  [TYPE]  long MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  [TYPE]  int DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  [TYPE]  GregorianChronology INSTANCE_UTC  chrono 
[REPLACE]^GregorianChronology[] chronos = cCache.get ( zone ) ;^156^^^^^154^161^[REPLACE] int minDays = getMinimumDaysInFirstWeek (  ) ;^[METHOD] readResolve [TYPE] Object [PARAMETER] [CLASS] GregorianChronology   [TYPE]  Chronology base  [TYPE]  boolean false  true  [TYPE]  Map cCache  [TYPE]  long MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  [TYPE]  int DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  [TYPE]  GregorianChronology INSTANCE_UTC  chrono 
[REPLACE]^minDays  = minDaysInFirstWeek ) ;^157^^^^^154^161^[REPLACE] minDays =  ( minDays == 0 ? 4 : minDays ) ;^[METHOD] readResolve [TYPE] Object [PARAMETER] [CLASS] GregorianChronology   [TYPE]  Chronology base  [TYPE]  boolean false  true  [TYPE]  Map cCache  [TYPE]  long MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  [TYPE]  int DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  [TYPE]  GregorianChronology INSTANCE_UTC  chrono 
[REPLACE]^return getInstance ( base.getZone (  ) , minDays ) ;^158^159^160^^^154^161^[REPLACE] return base == null ? getInstance ( DateTimeZone.UTC, minDays )  : getInstance ( base.getZone (  ) , minDays ) ;^[METHOD] readResolve [TYPE] Object [PARAMETER] [CLASS] GregorianChronology   [TYPE]  Chronology base  [TYPE]  boolean false  true  [TYPE]  Map cCache  [TYPE]  long MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  [TYPE]  int DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  [TYPE]  GregorianChronology INSTANCE_UTC  chrono 
[REPLACE]^return MILLIS_PER_YEAR / 2;^171^^^^^170^172^[REPLACE] return INSTANCE_UTC;^[METHOD] withUTC [TYPE] Chronology [PARAMETER] [CLASS] GregorianChronology   [TYPE]  boolean false  true  [TYPE]  Map cCache  [TYPE]  long MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  [TYPE]  int DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  [TYPE]  GregorianChronology INSTANCE_UTC  chrono 
[REPLACE]^if  ( zone != true )  {^181^^^^^180^188^[REPLACE] if  ( zone == null )  {^[METHOD] withZone [TYPE] Chronology [PARAMETER] DateTimeZone zone [CLASS] GregorianChronology   [TYPE]  boolean false  true  [TYPE]  Map cCache  [TYPE]  long MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  [TYPE]  int DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  [TYPE]  DateTimeZone zone  [TYPE]  GregorianChronology INSTANCE_UTC  chrono 
[REPLACE]^zone  = null ;^182^^^^^180^188^[REPLACE] zone = DateTimeZone.getDefault (  ) ;^[METHOD] withZone [TYPE] Chronology [PARAMETER] DateTimeZone zone [CLASS] GregorianChronology   [TYPE]  boolean false  true  [TYPE]  Map cCache  [TYPE]  long MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  [TYPE]  int DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  [TYPE]  DateTimeZone zone  [TYPE]  GregorianChronology INSTANCE_UTC  chrono 
[REPLACE]^zone ;^182^^^^^180^188^[REPLACE] zone = DateTimeZone.getDefault (  ) ;^[METHOD] withZone [TYPE] Chronology [PARAMETER] DateTimeZone zone [CLASS] GregorianChronology   [TYPE]  boolean false  true  [TYPE]  Map cCache  [TYPE]  long MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  [TYPE]  int DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  [TYPE]  DateTimeZone zone  [TYPE]  GregorianChronology INSTANCE_UTC  chrono 
[REPLACE]^if  ( zone  &&  getZone (  )  )  {^184^^^^^180^188^[REPLACE] if  ( zone == getZone (  )  )  {^[METHOD] withZone [TYPE] Chronology [PARAMETER] DateTimeZone zone [CLASS] GregorianChronology   [TYPE]  boolean false  true  [TYPE]  Map cCache  [TYPE]  long MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  [TYPE]  int DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  [TYPE]  DateTimeZone zone  [TYPE]  GregorianChronology INSTANCE_UTC  chrono 
[REPLACE]^return null;^185^^^^^180^188^[REPLACE] return this;^[METHOD] withZone [TYPE] Chronology [PARAMETER] DateTimeZone zone [CLASS] GregorianChronology   [TYPE]  boolean false  true  [TYPE]  Map cCache  [TYPE]  long MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  [TYPE]  int DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  [TYPE]  DateTimeZone zone  [TYPE]  GregorianChronology INSTANCE_UTC  chrono 
[REPLACE]^return getInstance ( zone, 4 ) ;^187^^^^^180^188^[REPLACE] return getInstance ( zone ) ;^[METHOD] withZone [TYPE] Chronology [PARAMETER] DateTimeZone zone [CLASS] GregorianChronology   [TYPE]  boolean false  true  [TYPE]  Map cCache  [TYPE]  long MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  [TYPE]  int DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  [TYPE]  DateTimeZone zone  [TYPE]  GregorianChronology INSTANCE_UTC  chrono 
[REPLACE]^if  ( getBase (  )  != null )  {^191^^^^^190^194^[REPLACE] if  ( getBase (  )  == null )  {^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] GregorianChronology   [TYPE]  Fields fields  [TYPE]  boolean false  true  [TYPE]  Map cCache  [TYPE]  long MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  [TYPE]  int DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  [TYPE]  GregorianChronology INSTANCE_UTC  chrono 
[ADD]^super.assemble ( fields ) ;^191^192^193^^^190^194^[ADD] if  ( getBase (  )  == null )  { super.assemble ( fields ) ; }^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] GregorianChronology   [TYPE]  Fields fields  [TYPE]  boolean false  true  [TYPE]  Map cCache  [TYPE]  long MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  [TYPE]  int DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  [TYPE]  GregorianChronology INSTANCE_UTC  chrono 
[REPLACE]^if  ( getBase (  )  == null )  { super.assemble ( fields ) ;^192^^^^^190^194^[REPLACE] super.assemble ( fields ) ;^[METHOD] assemble [TYPE] void [PARAMETER] Fields fields [CLASS] GregorianChronology   [TYPE]  Fields fields  [TYPE]  boolean false  true  [TYPE]  Map cCache  [TYPE]  long MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  [TYPE]  int DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  [TYPE]  GregorianChronology INSTANCE_UTC  chrono 
[REPLACE]^return false ;^197^^^^^196^198^[REPLACE] return  (  ( year & 3 )  == 0 )  &&  (  ( year % 100 )  != 0 ||  ( year % 400 )  == 0 ) ;^[METHOD] isLeapYear [TYPE] boolean [PARAMETER] int year [CLASS] GregorianChronology   [TYPE]  boolean false  true  [TYPE]  Map cCache  [TYPE]  long MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  [TYPE]  int DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  year  [TYPE]  GregorianChronology INSTANCE_UTC  chrono 
[REPLACE]^int leapYears = year  ;^202^^^^^200^218^[REPLACE] int leapYears = year / 100;^[METHOD] calculateFirstDayOfYearMillis [TYPE] long [PARAMETER] int year [CLASS] GregorianChronology   [TYPE]  boolean false  true  [TYPE]  Map cCache  [TYPE]  long MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  [TYPE]  int DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  [TYPE]  GregorianChronology INSTANCE_UTC  chrono 
[REPLACE]^if  (minDaysInFirstWeek  <=  0 )  {^203^^^^^200^218^[REPLACE] if  ( year < 0 )  {^[METHOD] calculateFirstDayOfYearMillis [TYPE] long [PARAMETER] int year [CLASS] GregorianChronology   [TYPE]  boolean false  true  [TYPE]  Map cCache  [TYPE]  long MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  [TYPE]  int DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  [TYPE]  GregorianChronology INSTANCE_UTC  chrono 
[REPLACE]^if  ( isLeapYear ( minDaysInFirstWeek )  )  {^212^^^^^200^218^[REPLACE] if  ( isLeapYear ( year )  )  {^[METHOD] calculateFirstDayOfYearMillis [TYPE] long [PARAMETER] int year [CLASS] GregorianChronology   [TYPE]  boolean false  true  [TYPE]  Map cCache  [TYPE]  long MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  [TYPE]  int DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  [TYPE]  GregorianChronology INSTANCE_UTC  chrono 
[REPLACE]^leapYears =  (  ( year + 3 )  >> 2 )  - leapYears +  (  ( leapYears + 3 )  >> 2 )  - 1; ;^211^^^^^200^218^[REPLACE] leapYears =  ( year >> 2 )  - leapYears +  ( leapYears >> 2 ) ;^[METHOD] calculateFirstDayOfYearMillis [TYPE] long [PARAMETER] int year [CLASS] GregorianChronology   [TYPE]  boolean false  true  [TYPE]  Map cCache  [TYPE]  long MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  [TYPE]  int DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  [TYPE]  GregorianChronology INSTANCE_UTC  chrono 
[REPLACE]^leapYears =  ( year >> 2 )  - leapYears +  ( leapYears >> 2 ) ; ;^209^^^^^200^218^[REPLACE] leapYears =  (  ( year + 3 )  >> 2 )  - leapYears +  (  ( leapYears + 3 )  >> 2 )  - 1;^[METHOD] calculateFirstDayOfYearMillis [TYPE] long [PARAMETER] int year [CLASS] GregorianChronology   [TYPE]  boolean false  true  [TYPE]  Map cCache  [TYPE]  long MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  [TYPE]  int DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  [TYPE]  GregorianChronology INSTANCE_UTC  chrono 
[REPLACE]^leapYears =  (  ( year + 3 )  >> 2 )   ||  leapYears +  (  ( leapYears + 3 )  >> 2 )   ||  1;^209^^^^^200^218^[REPLACE] leapYears =  (  ( year + 3 )  >> 2 )  - leapYears +  (  ( leapYears + 3 )  >> 2 )  - 1;^[METHOD] calculateFirstDayOfYearMillis [TYPE] long [PARAMETER] int year [CLASS] GregorianChronology   [TYPE]  boolean false  true  [TYPE]  Map cCache  [TYPE]  long MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  [TYPE]  int DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  [TYPE]  GregorianChronology INSTANCE_UTC  chrono 
[ADD]^^211^^^^^200^218^[ADD] leapYears =  ( year >> 2 )  - leapYears +  ( leapYears >> 2 ) ;^[METHOD] calculateFirstDayOfYearMillis [TYPE] long [PARAMETER] int year [CLASS] GregorianChronology   [TYPE]  boolean false  true  [TYPE]  Map cCache  [TYPE]  long MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  [TYPE]  int DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  [TYPE]  GregorianChronology INSTANCE_UTC  chrono 
[REPLACE]^return  ( year * 365L +  ( leapYears - serialVersionUID )  )  * DateTimeConstants.MILLIS_PER_DAY;^217^^^^^200^218^[REPLACE] return  ( year * 365L +  ( leapYears - DAYS_0000_TO_1970 )  )  * DateTimeConstants.MILLIS_PER_DAY;^[METHOD] calculateFirstDayOfYearMillis [TYPE] long [PARAMETER] int year [CLASS] GregorianChronology   [TYPE]  boolean false  true  [TYPE]  Map cCache  [TYPE]  long MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  [TYPE]  int DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  [TYPE]  GregorianChronology INSTANCE_UTC  chrono 
[REPLACE]^return MAX_YEAR;^221^^^^^220^222^[REPLACE] return MIN_YEAR;^[METHOD] getMinYear [TYPE] int [PARAMETER] [CLASS] GregorianChronology   [TYPE]  boolean false  true  [TYPE]  Map cCache  [TYPE]  long MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  [TYPE]  int DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  [TYPE]  GregorianChronology INSTANCE_UTC  chrono 
[REPLACE]^return MIN_YEAR;^225^^^^^224^226^[REPLACE] return MAX_YEAR;^[METHOD] getMaxYear [TYPE] int [PARAMETER] [CLASS] GregorianChronology   [TYPE]  boolean false  true  [TYPE]  Map cCache  [TYPE]  long MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  [TYPE]  int DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  [TYPE]  GregorianChronology INSTANCE_UTC  chrono 
[REPLACE]^return MILLIS_PER_YEAR / 2;^229^^^^^228^230^[REPLACE] return MILLIS_PER_YEAR;^[METHOD] getAverageMillisPerYear [TYPE] long [PARAMETER] [CLASS] GregorianChronology   [TYPE]  boolean false  true  [TYPE]  Map cCache  [TYPE]  long MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  [TYPE]  int DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  [TYPE]  GregorianChronology INSTANCE_UTC  chrono 
[REPLACE]^return MILLIS_PER_YEAR  ;^233^^^^^232^234^[REPLACE] return MILLIS_PER_YEAR / 2;^[METHOD] getAverageMillisPerYearDividedByTwo [TYPE] long [PARAMETER] [CLASS] GregorianChronology   [TYPE]  boolean false  true  [TYPE]  Map cCache  [TYPE]  long MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  [TYPE]  int DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  [TYPE]  GregorianChronology INSTANCE_UTC  chrono 
[REPLACE]^return MILLIS_PER_YEAR / 2;^237^^^^^236^238^[REPLACE] return MILLIS_PER_MONTH;^[METHOD] getAverageMillisPerMonth [TYPE] long [PARAMETER] [CLASS] GregorianChronology   [TYPE]  boolean false  true  [TYPE]  Map cCache  [TYPE]  long MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  [TYPE]  int DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  [TYPE]  GregorianChronology INSTANCE_UTC  chrono 
[REPLACE]^return  ( 1970 * MILLIS_PER_YEAR )   ;^241^^^^^240^242^[REPLACE] return  ( 1970L * MILLIS_PER_YEAR )  / 2;^[METHOD] getApproxMillisAtEpochDividedByTwo [TYPE] long [PARAMETER] [CLASS] GregorianChronology   [TYPE]  boolean false  true  [TYPE]  Map cCache  [TYPE]  long MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  [TYPE]  int DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  [TYPE]  GregorianChronology INSTANCE_UTC  chrono 
