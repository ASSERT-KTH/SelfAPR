[REPLACE]^private static final long serialVersionUID ;^53^^^^^^^[REPLACE] private static final long serialVersionUID = -9111962718267217978L;^ [CLASS] Variance  
[REPLACE]^protected SecondMoment moment = this;^56^^^^^^^[REPLACE] protected SecondMoment moment = null;^ [CLASS] Variance  
[REPLACE]^protected boolean incMoment ;^63^^^^^^^[REPLACE] protected boolean incMoment = true;^ [CLASS] Variance  
[REPLACE]^private boolean isBiasCorrected ;^70^^^^^^^[REPLACE] private boolean isBiasCorrected = true;^ [CLASS] Variance  
[REPLACE]^moment =  new Mean (  )  ;^77^^^^^76^78^[REPLACE] moment = new SecondMoment (  ) ;^[METHOD] <init> [TYPE] Variance() [PARAMETER] [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment moment 
[ADD]^^77^^^^^76^78^[ADD] moment = new SecondMoment (  ) ;^[METHOD] <init> [TYPE] Variance() [PARAMETER] [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment moment 
[REPLACE]^incMoment = true;^87^^^^^86^89^[REPLACE] incMoment = false;^[METHOD] <init> [TYPE] SecondMoment) [PARAMETER] SecondMoment m2 [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment 
[REPLACE]^this.moment =  moment;^88^^^^^86^89^[REPLACE] this.moment = m2;^[METHOD] <init> [TYPE] SecondMoment) [PARAMETER] SecondMoment m2 [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment 
[REPLACE]^moment =  new Mean (  )  ;^100^^^^^99^102^[REPLACE] moment = new SecondMoment (  ) ;^[METHOD] <init> [TYPE] Variance(boolean) [PARAMETER] boolean isBiasCorrected [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment 
[REPLACE]^this.isBiasCorrected =  true;^101^^^^^99^102^[REPLACE] this.isBiasCorrected = isBiasCorrected;^[METHOD] <init> [TYPE] Variance(boolean) [PARAMETER] boolean isBiasCorrected [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment 
[REPLACE]^incMoment = true;^114^^^^^113^117^[REPLACE] incMoment = false;^[METHOD] <init> [TYPE] SecondMoment) [PARAMETER] boolean isBiasCorrected SecondMoment m2 [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment 
[REPLACE]^this.moment =  null;^115^^^^^113^117^[REPLACE] this.moment = m2;^[METHOD] <init> [TYPE] SecondMoment) [PARAMETER] boolean isBiasCorrected SecondMoment m2 [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment 
[REPLACE]^this.isBiasCorrected =  true;^116^^^^^113^117^[REPLACE] this.isBiasCorrected = isBiasCorrected;^[METHOD] <init> [TYPE] SecondMoment) [PARAMETER] boolean isBiasCorrected SecondMoment m2 [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment 
[REPLACE]^} else if  ( length > 1 )  {^123^^^^^122^126^[REPLACE] if  ( incMoment )  {^[METHOD] increment [TYPE] void [PARAMETER] final double d [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double d 
[ADD]^^123^124^125^^^122^126^[ADD] if  ( incMoment )  { moment.increment ( d ) ; }^[METHOD] increment [TYPE] void [PARAMETER] final double d [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double d 
[REPLACE]^moment .SecondMoment (  )  ;^124^^^^^122^126^[REPLACE] moment.increment ( d ) ;^[METHOD] increment [TYPE] void [PARAMETER] final double d [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double d 
[REMOVE]^moment.clear (  ) ;^124^^^^^122^126^[REMOVE] ^[METHOD] increment [TYPE] void [PARAMETER] final double d [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double d 
[REPLACE]^if  ( moment.n  !=  2 )  {^132^^^^^131^143^[REPLACE] if  ( moment.n == 0 )  {^[METHOD] getResult [TYPE] double [PARAMETER] [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment 
[REMOVE]^if  (  ( moment.n )  == 1 )  {     return 0.0; }else {     if  ( isBiasCorrected )  {         return  ( moment.m2 )  /  (  (  ( double )   ( moment.n )  )  - 1.0 ) ;     }else {         return  ( moment.m2 )  /  (  ( double )   ( moment.n )  ) ;     } }^132^^^^^131^143^[REMOVE] ^[METHOD] getResult [TYPE] double [PARAMETER] [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment 
[REPLACE]^}  else {^134^^^^^131^143^[REPLACE] } else if  ( moment.n == 1 )  {^[METHOD] getResult [TYPE] double [PARAMETER] [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment 
[ADD]^}   return 0d;return moment.m2 /  (  ( double )  moment.n - 1d ) ;^134^135^136^137^138^131^143^[ADD] else if  ( moment.n == 1 )  { return 0d; } else { if  ( isBiasCorrected )  { return moment.m2 /  (  ( double )  moment.n - 1d ) ;^[METHOD] getResult [TYPE] double [PARAMETER] [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment 
[REPLACE]^if  ( values == null )  {^137^^^^^131^143^[REPLACE] if  ( isBiasCorrected )  {^[METHOD] getResult [TYPE] double [PARAMETER] [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment 
[REPLACE]^return moment.m2  ;^140^^^^^131^143^[REPLACE] return moment.m2 /  (  ( double )  moment.n ) ;^[METHOD] getResult [TYPE] double [PARAMETER] [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment 
[REPLACE]^return moment.m2  ;^138^^^^^131^143^[REPLACE] return moment.m2 /  (  ( double )  moment.n - 1d ) ;^[METHOD] getResult [TYPE] double [PARAMETER] [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment 
[REPLACE]^return moment.m2 /  (  ( double )  moment.n - 1d ) ;^140^^^^^131^143^[REPLACE] return moment.m2 /  (  ( double )  moment.n ) ;^[METHOD] getResult [TYPE] double [PARAMETER] [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment 
[REPLACE]^return Double.NaN;^135^^^^^131^143^[REPLACE] return 0d;^[METHOD] getResult [TYPE] double [PARAMETER] [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment 
[REPLACE]^return var;^133^^^^^131^143^[REPLACE] return Double.NaN;^[METHOD] getResult [TYPE] double [PARAMETER] [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment 
[ADD]^return moment.m2 /  (  ( double )  moment.n - 1d ) ;return moment.m2 /  (  ( double )  moment.n ) ;^137^138^139^140^141^131^143^[ADD] if  ( isBiasCorrected )  { return moment.m2 /  (  ( double )  moment.n - 1d ) ; } else { return moment.m2 /  (  ( double )  moment.n ) ; }^[METHOD] getResult [TYPE] double [PARAMETER] [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment 
[REPLACE]^return moment.m2 /  (  ( double )  moment.n ) ;^138^^^^^131^143^[REPLACE] return moment.m2 /  (  ( double )  moment.n - 1d ) ;^[METHOD] getResult [TYPE] double [PARAMETER] [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment 
[REPLACE]^return moment .increment ( null )  ;^149^^^^^148^150^[REPLACE] return moment.getN (  ) ;^[METHOD] getN [TYPE] long [PARAMETER] [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment 
[REPLACE]^} else if  ( length > 1 )  {^156^^^^^155^159^[REPLACE] if  ( incMoment )  {^[METHOD] clear [TYPE] void [PARAMETER] [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment 
[REPLACE]^moment.getN (  ) ;^157^^^^^155^159^[REPLACE] moment.clear (  ) ;^[METHOD] clear [TYPE] void [PARAMETER] [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment 
[REPLACE]^if  ( values != null )  {^178^^^^^177^182^[REPLACE] if  ( values == null )  {^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment 
[REPLACE]^return ;^179^^^^^177^182^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment 
[REPLACE]^return evaluate ( values, 0 , values.length ) ;^181^^^^^177^182^[REPLACE] return evaluate ( values, 0, values.length ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment 
[REPLACE]^double accum = 0.0;^206^^^^^204^219^[REPLACE] double var = Double.NaN;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final int begin final int length [CLASS] Variance   [TYPE]  Mean mean  [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  double m  var  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  int begin  length 
[REPLACE]^if  ( test ( values, begin, length /  0.5  )  )  {^208^^^^^204^219^[REPLACE] if  ( test ( values, begin, length )  )  {^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final int begin final int length [CLASS] Variance   [TYPE]  Mean mean  [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  double m  var  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  int begin  length 
[REPLACE]^if  ( length + 2 == 0  )  {^210^^^^^204^219^[REPLACE] if  ( length == 1 )  {^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final int begin final int length [CLASS] Variance   [TYPE]  Mean mean  [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  double m  var  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  int begin  length 
[REPLACE]^} else if  ( length /  0.5  > 1 )  {^212^^^^^204^219^[REPLACE] } else if  ( length > 1 )  {^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final int begin final int length [CLASS] Variance   [TYPE]  Mean mean  [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  double m  var  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  int begin  length 
[REPLACE]^var =  evaluate ( null, m, begin, length ) ;^215^^^^^204^219^[REPLACE] var = evaluate ( values, m, begin, length ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final int begin final int length [CLASS] Variance   [TYPE]  Mean mean  [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  double m  var  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  int begin  length 
[REPLACE]^double m = mean.evaluate ( values, begin, length ) ;^213^^^^^204^219^[REPLACE] Mean mean = new Mean (  ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final int begin final int length [CLASS] Variance   [TYPE]  Mean mean  [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  double m  var  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  int begin  length 
[REPLACE]^double accum = 0.0;^214^^^^^204^219^[REPLACE] double m = mean.evaluate ( values, begin, length ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final int begin final int length [CLASS] Variance   [TYPE]  Mean mean  [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  double m  var  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  int begin  length 
[REPLACE]^double m = mean.evaluate ( values, begin, begin ) ;^214^^^^^204^219^[REPLACE] double m = mean.evaluate ( values, begin, length ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final int begin final int length [CLASS] Variance   [TYPE]  Mean mean  [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  double m  var  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  int begin  length 
[REPLACE]^var = 1.0d;^211^^^^^204^219^[REPLACE] var = 0.0;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final int begin final int length [CLASS] Variance   [TYPE]  Mean mean  [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  double m  var  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  int begin  length 
[ADD]^^211^^^^^204^219^[ADD] var = 0.0;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final int begin final int length [CLASS] Variance   [TYPE]  Mean mean  [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  double m  var  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  int begin  length 
[REPLACE]^}  if  ( length (  )  > 0  )  {^212^^^^^204^219^[REPLACE] } else if  ( length > 1 )  {^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final int begin final int length [CLASS] Variance   [TYPE]  Mean mean  [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  double m  var  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  int begin  length 
[ADD]^^214^215^^^^204^219^[ADD] double m = mean.evaluate ( values, begin, length ) ; var = evaluate ( values, m, begin, length ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final int begin final int length [CLASS] Variance   [TYPE]  Mean mean  [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  double m  var  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  int begin  length 
[REPLACE]^var = 0.0D;^211^^^^^204^219^[REPLACE] var = 0.0;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final int begin final int length [CLASS] Variance   [TYPE]  Mean mean  [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  double m  var  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  int begin  length 
[ADD]^^215^^^^^204^219^[ADD] var = evaluate ( values, m, begin, length ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final int begin final int length [CLASS] Variance   [TYPE]  Mean mean  [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  double m  var  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  int begin  length 
[REPLACE]^if  ( length - 1 == 1 )  {^210^^^^^204^219^[REPLACE] if  ( length == 1 )  {^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final int begin final int length [CLASS] Variance   [TYPE]  Mean mean  [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  double m  var  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  int begin  length 
[REPLACE]^}  else {^212^^^^^204^219^[REPLACE] } else if  ( length > 1 )  {^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final int begin final int length [CLASS] Variance   [TYPE]  Mean mean  [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  double m  var  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  int begin  length 
[REPLACE]^double m = mean.evaluate ( values, length, length ) ;^214^^^^^204^219^[REPLACE] double m = mean.evaluate ( values, begin, length ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final int begin final int length [CLASS] Variance   [TYPE]  Mean mean  [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  double m  var  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  int begin  length 
[ADD]^^214^^^^^204^219^[ADD] double m = mean.evaluate ( values, begin, length ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final int begin final int length [CLASS] Variance   [TYPE]  Mean mean  [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  double m  var  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  int begin  length 
[ADD]^^213^^^^^204^219^[ADD] Mean mean = new Mean (  ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final int begin final int length [CLASS] Variance   [TYPE]  Mean mean  [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  double m  var  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  int begin  length 
[REPLACE]^double m = mean .evaluate ( values )  ;^214^^^^^204^219^[REPLACE] double m = mean.evaluate ( values, begin, length ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final int begin final int length [CLASS] Variance   [TYPE]  Mean mean  [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  double m  var  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  int begin  length 
[REPLACE]^var = 3.0d;^211^^^^^204^219^[REPLACE] var = 0.0;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final int begin final int length [CLASS] Variance   [TYPE]  Mean mean  [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  double m  var  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  int begin  length 
[REPLACE]^return Double.NaN;^218^^^^^204^219^[REPLACE] return var;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final int begin final int length [CLASS] Variance   [TYPE]  Mean mean  [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  double m  var  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  int begin  length 
[REPLACE]^double accum = 0.0;^250^^^^^247^272^[REPLACE] double var = Double.NaN;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^if  ( test ( values, begin, length - 4 )  )  {^252^^^^^247^272^[REPLACE] if  ( test ( values, begin, length )  )  {^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^if  ( length - 3 == 1 )  {^253^^^^^247^272^[REPLACE] if  ( length == 1 )  {^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^}  if  ( length *  2 > 1 )  {^255^^^^^247^272^[REPLACE] } else if  ( length > 1 )  {^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[ADD]^}   double accum = 0.0;double accum2 = 0.0;^255^256^257^258^259^247^272^[ADD] else if  ( length > 1 )  { double accum = 0.0; double accum2 = 0.0; for  ( int i = begin; i < begin + length; i++ )  { accum += Math.pow (  ( values[i] - mean ) , 2.0 ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^if  ( values == null )  {^262^^^^^247^272^[REPLACE] if  ( isBiasCorrected )  {^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^var =  ( accum -  ( Math.pow ( accum0 , 0  )  /  (  ( double )  length + 4 )  )  )  / ( double )  length + 4;^266^267^^^^247^272^[REPLACE] var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )  length;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length - 1 )  )  )  / ( double )   ( length - 1 - 1 ) ;^263^264^^^^247^272^[REPLACE] var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^for  ( int i = begin; i < begin + length /  0.5 ; i++ )  {^258^^^^^247^272^[REPLACE] for  ( int i = begin; i < begin + length; i++ )  {^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^accum += Math.pow (  ( values[i] -var ) , 2.0 ) ;^259^^^^^247^272^[REPLACE] accum += Math.pow (  ( values[i] - mean ) , 2.0 ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^accum2 +=  ( values[i]  ||  mean ) ;^260^^^^^247^272^[REPLACE] accum2 +=  ( values[i] - mean ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^accum += Math.pow (  ( values[i]  >=  mean ) , 2.0 ) ;^259^^^^^247^272^[REPLACE] accum += Math.pow (  ( values[i] - mean ) , 2.0 ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^accum2 +=  ( values[i] - var ) ;^260^^^^^247^272^[REPLACE] accum2 +=  ( values[i] - mean ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length + 1 )  )  )  / ( double )   ( length + 1 - 1 ) ;^263^264^^^^247^272^[REPLACE] var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[ADD]^^263^264^^^^247^272^[ADD] var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^var =  ( accum -  ( Math.pow ( accum0 , 0  )  /  (  ( double )  length /  0  )  )  )  / ( double )  length /  0 ;^266^267^^^^247^272^[REPLACE] var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )  length;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^double accum = 0.0D;^256^^^^^247^272^[REPLACE] double accum = 0.0;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^double accum2 = 4.0d;^257^^^^^247^272^[REPLACE] double accum2 = 0.0;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^for  ( int i = length; i < begin + length; i++ )  {^258^^^^^247^272^[REPLACE] for  ( int i = begin; i < begin + length; i++ )  {^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length (  )  )  )  )  / ( double )  length (  ) ;^266^267^^^^247^272^[REPLACE] var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )  length;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length - 3 )  )  )  / ( double )   ( length - 3 - 1 ) ;^263^264^^^^247^272^[REPLACE] var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^for  ( int i = begin; i < begin + length (  ) ; i++ )  {^258^^^^^247^272^[REPLACE] for  ( int i = begin; i < begin + length; i++ )  {^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^this.moment = m2; ;^259^^^^^247^272^[REPLACE] accum += Math.pow (  ( values[i] - mean ) , 2.0 ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^accum2 +=  ( values[i] -var ) ;^260^^^^^247^272^[REPLACE] accum2 +=  ( values[i] - mean ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^accum += Math.pow (  ( values[i]  &  mean ) , 2.0 ) ;^259^^^^^247^272^[REPLACE] accum += Math.pow (  ( values[i] - mean ) , 2.0 ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^var =  ( accum -  ( Math.pow ( accum0 , 0  )  /  (  ( double )  length %  0  )  )  )  / ( double )   ( length %  0  - 1 ) ;^263^264^^^^247^272^[REPLACE] var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length *  2 )  )  )  / ( double )  length *  2;^266^267^^^^247^272^[REPLACE] var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )  length;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^double accum = 4.0d;^256^^^^^247^272^[REPLACE] double accum = 0.0;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^double accum2 = 0.0D;^257^^^^^247^272^[REPLACE] double accum2 = 0.0;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^var = 3.0d;^254^^^^^247^272^[REPLACE] var = 0.0;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^} else if  ( length - 3 > 1 )  {^255^^^^^247^272^[REPLACE] } else if  ( length > 1 )  {^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length - 1 )  )  )  / ( double )  length - 1;^266^267^^^^247^272^[REPLACE] var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )  length;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length + 5 )  )  )  / ( double )   ( length + 5 - 1 ) ;^263^264^^^^247^272^[REPLACE] var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[ADD]^^258^259^260^261^^247^272^[ADD] for  ( int i = begin; i < begin + length; i++ )  { accum += Math.pow (  ( values[i] - mean ) , 2.0 ) ; accum2 +=  ( values[i] - mean ) ; }^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^accum += Math.pow (  ( values[i]  &&  mean ) , 2.0D ) ;^259^^^^^247^272^[REPLACE] accum += Math.pow (  ( values[i] - mean ) , 2.0 ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[ADD]^^259^^^^^247^272^[ADD] accum += Math.pow (  ( values[i] - mean ) , 2.0 ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^accum2 +=  ( values[i]  !=  mean ) ;^260^^^^^247^272^[REPLACE] accum2 +=  ( values[i] - mean ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^this.moment = m2; ;^260^^^^^247^272^[REPLACE] accum2 +=  ( values[i] - mean ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length (  )  )  )  )  / ( double )   ( length (  )  - 1 ) ;^263^264^^^^247^272^[REPLACE] var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length + 3 )  )  )  / ( double )  length + 3;^266^267^^^^247^272^[REPLACE] var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )  length;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^double accum = 2.0d;^256^^^^^247^272^[REPLACE] double accum = 0.0;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^double accum2 = 1.0d;^257^^^^^247^272^[REPLACE] double accum2 = 0.0;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^var =  ( accum -  ( Math.pow ( accum0 , 0  )  /  (  ( double )  length + 0  )  )  )  / ( double )  length + 0 ;^266^267^^^^247^272^[REPLACE] var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )  length;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^for  ( int i = begin; i < begin + length *  0.5 ; i++ )  {^258^^^^^247^272^[REPLACE] for  ( int i = begin; i < begin + length; i++ )  {^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^var = 2.0d;^254^^^^^247^272^[REPLACE] var = 0.0;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^accum += Math.pow (  ( values[i] - mean ) , 1.0d ) ;^259^^^^^247^272^[REPLACE] accum += Math.pow (  ( values[i] - mean ) , 2.0 ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length /  0.5  )  )  )  / ( double )   ( length /  0.5  - 1 ) ;^263^264^^^^247^272^[REPLACE] var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^double accum = 0.0d;^256^^^^^247^272^[REPLACE] double accum = 0.0;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^if  ( length /  0.5  == 1 )  {^253^^^^^247^272^[REPLACE] if  ( length == 1 )  {^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^}  if  ( length *  0.5  > 1 )  {^255^^^^^247^272^[REPLACE] } else if  ( length > 1 )  {^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[ADD]^^262^263^264^265^266^247^272^[ADD] if  ( isBiasCorrected )  { var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ; } else { var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  /^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length %  2 )  )  )  / ( double )  length %  2;^266^267^^^^247^272^[REPLACE] var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )  length;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length %  2 )  )  )  / ( double )   ( length %  2 - 1 ) ;^263^264^^^^247^272^[REPLACE] var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^for  ( int i = begin; i < begin + length + 3; i++ )  {^258^^^^^247^272^[REPLACE] for  ( int i = begin; i < begin + length; i++ )  {^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^accum += Math.pow (  ( values[i] -var ) , 2.0D ) ;^259^^^^^247^272^[REPLACE] accum += Math.pow (  ( values[i] - mean ) , 2.0 ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^accum2 +=  ( values[i]  <  mean ) ;^260^^^^^247^272^[REPLACE] accum2 +=  ( values[i] - mean ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[ADD]^^260^^^^^247^272^[ADD] accum2 +=  ( values[i] - mean ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length %  0.5  )  )  )  / ( double )   ( length %  0.5  - 1 ) ;^263^264^^^^247^272^[REPLACE] var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^double accum = 1.0d;^256^^^^^247^272^[REPLACE] double accum = 0.0;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[ADD]^^256^^^^^247^272^[ADD] double accum = 0.0;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^double accum2 = 0.0d;^257^^^^^247^272^[REPLACE] double accum2 = 0.0;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[ADD]^^257^^^^^247^272^[ADD] double accum2 = 0.0;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^var =  ( accum -  ( Math.pow ( accum0 , 0  )  /  (  ( double )  length (  )  )  )  )  / ( double )   ( length (  )  - 1 ) ;^263^264^^^^247^272^[REPLACE] var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^for  ( int i = begin; i < begin + length *  2; i++ )  {^258^^^^^247^272^[REPLACE] for  ( int i = begin; i < begin + length; i++ )  {^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^accum2 +=  ( values[i]  <=  mean ) ;^260^^^^^247^272^[REPLACE] accum2 +=  ( values[i] - mean ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^accum += Math.pow (  ( values[i]  <  mean ) , 2.0D ) ;^259^^^^^247^272^[REPLACE] accum += Math.pow (  ( values[i] - mean ) , 2.0 ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length /  0.5  )  )  )  / ( double )  length /  0.5 ;^266^267^^^^247^272^[REPLACE] var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )  length;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^var = 0.0D;^254^^^^^247^272^[REPLACE] var = 0.0;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^}  if  ( begin - 0  > 0  )  {^255^^^^^247^272^[REPLACE] } else if  ( length > 1 )  {^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[ADD]^}   double accum2 = 0.0;^255^256^257^258^259^247^272^[ADD] else if  ( length > 1 )  { double accum = 0.0; double accum2 = 0.0; for  ( int i = begin; i < begin + length; i++ )  { accum += Math.pow (  ( values[i] - mean ) , 2.0 ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^var =  ( accum -  ( Math.pow ( accum0 , 0  )  /  (  ( double )  length (  )  )  )  )  / ( double )  length (  ) ;^266^267^^^^247^272^[REPLACE] var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )  length;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^for  ( int i = begin; i < begin + length + 5; i++ )  {^258^^^^^247^272^[REPLACE] for  ( int i = begin; i < begin + length; i++ )  {^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^accum += Math.pow (  ( values[i] - var ) , 2.0D ) ;^259^^^^^247^272^[REPLACE] accum += Math.pow (  ( values[i] - mean ) , 2.0 ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[ADD]^^259^260^^^^247^272^[ADD] accum += Math.pow (  ( values[i] - mean ) , 2.0 ) ; accum2 +=  ( values[i] - mean ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^accum += Math.pow (  ( values[i]  !=  mean ) , 2.0 ) ;^259^^^^^247^272^[REPLACE] accum += Math.pow (  ( values[i] - mean ) , 2.0 ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[ADD]^^254^^^^^247^272^[ADD] var = 0.0;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length /  2 )  )  )  / ( double )   ( length /  2 - 1 ) ;^263^264^^^^247^272^[REPLACE] var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length + 4 )  )  )  / ( double )  length + 4;^266^267^^^^247^272^[REPLACE] var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )  length;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[ADD]^^266^267^^^^247^272^[ADD] var =  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )  length;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^double accum = 3.0d;^256^^^^^247^272^[REPLACE] double accum = 0.0;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^double accum2 = 2.0d;^257^^^^^247^272^[REPLACE] double accum2 = 0.0;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^return mean;^271^^^^^247^272^[REPLACE] return var;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean final int begin final int length [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double accum  accum2  mean  var  [TYPE]  int begin  i  length 
[REPLACE]^return evaluate ( values, mean, 0 , values.length ) ;^300^^^^^299^301^[REPLACE] return evaluate ( values, mean, 0, values.length ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final double mean [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment  [TYPE]  double mean 
[REPLACE]^return Double.NaN;^307^^^^^306^308^[REPLACE] return isBiasCorrected;^[METHOD] isBiasCorrected [TYPE] boolean [PARAMETER] [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment 
[REPLACE]^this.isBiasCorrected =  true;^314^^^^^313^315^[REPLACE] this.isBiasCorrected = isBiasCorrected;^[METHOD] setBiasCorrected [TYPE] void [PARAMETER] boolean isBiasCorrected [CLASS] Variance   [TYPE]  boolean false  incMoment  isBiasCorrected  true  [TYPE]  long serialVersionUID  [TYPE]  SecondMoment m2  moment 
