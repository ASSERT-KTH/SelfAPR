[REPLACE]^private static final long serialVersionUID  = null ;^48^^^^^^^[REPLACE] private static final long serialVersionUID = -8178734905303459453L;^ [CLASS] GeometricMean  
[REPLACE]^sumOfLogs  =  sumOfLogs ;^57^^^^^56^58^[REPLACE] sumOfLogs = new SumOfLogs (  ) ;^[METHOD] <init> [TYPE] GeometricMean() [PARAMETER] [CLASS] GeometricMean   [TYPE]  SumOfLogs sumOfLogs  [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^return sumOfLogs.getN (  ) ;^64^^^^^63^65^[REPLACE] sumOfLogs.increment ( d ) ;^[METHOD] increment [TYPE] void [PARAMETER] final double d [CLASS] GeometricMean   [TYPE]  SumOfLogs sumOfLogs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double d 
[REPLACE]^if  ( sumOfLogs.getN (  )   <=  0 >> 3 )  {^71^^^^^70^76^[REPLACE] if  ( sumOfLogs.getN (  )  > 0 )  {^[METHOD] getResult [TYPE] double [PARAMETER] [CLASS] GeometricMean   [TYPE]  SumOfLogs sumOfLogs  [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[ADD]^^71^72^73^74^75^70^76^[ADD] if  ( sumOfLogs.getN (  )  > 0 )  { return Math.exp ( sumOfLogs.getResult (  )  /  ( double )  sumOfLogs.getN (  )  ) ; } else { return Double.NaN; }^[METHOD] getResult [TYPE] double [PARAMETER] [CLASS] GeometricMean   [TYPE]  SumOfLogs sumOfLogs  [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^return sumOfLogs.getN (  ) ;^74^^^^^70^76^[REPLACE] return Double.NaN;^[METHOD] getResult [TYPE] double [PARAMETER] [CLASS] GeometricMean   [TYPE]  SumOfLogs sumOfLogs  [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^return   sumOfLogs.getResult (  )   sumOfLogs.getN (  )  ) ;^72^^^^^70^76^[REPLACE] return Math.exp ( sumOfLogs.getResult (  )  /  ( double )  sumOfLogs.getN (  )  ) ;^[METHOD] getResult [TYPE] double [PARAMETER] [CLASS] GeometricMean   [TYPE]  SumOfLogs sumOfLogs  [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^return Math.exp ( sumOfLogs.getResult (  )  /  ( double )  sumOfLogs.clear (  )  ) ;^72^^^^^70^76^[REPLACE] return Math.exp ( sumOfLogs.getResult (  )  /  ( double )  sumOfLogs.getN (  )  ) ;^[METHOD] getResult [TYPE] double [PARAMETER] [CLASS] GeometricMean   [TYPE]  SumOfLogs sumOfLogs  [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^sumOfLogs.getN (  ) ;^82^^^^^81^83^[REPLACE] sumOfLogs.clear (  ) ;^[METHOD] clear [TYPE] void [PARAMETER] [CLASS] GeometricMean   [TYPE]  SumOfLogs sumOfLogs  [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^return Math.exp ( sumOfLogs .clear (  )   /  ( double )  length ) ;^103^104^^^^101^105^[REPLACE] return Math.exp ( sumOfLogs.evaluate ( values, begin, length )  /  ( double )  length ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final int begin final int length [CLASS] GeometricMean   [TYPE]  SumOfLogs sumOfLogs  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  long serialVersionUID  [TYPE]  int begin  length 
[REPLACE]^return sumOfLogs .getResult (  )  ;^111^^^^^110^112^[REPLACE] return sumOfLogs.getN (  ) ;^[METHOD] getN [TYPE] long [PARAMETER] [CLASS] GeometricMean   [TYPE]  SumOfLogs sumOfLogs  [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
