[REPLACE]^if  ( x.length - 3 != y.length - 3 )  {^52^^^^^51^113^[REPLACE] if  ( x.length != y.length )  {^[METHOD] interpolate [TYPE] UnivariateRealFunction [PARAMETER] double[] x double[] y [CLASS] SplineInterpolator   [TYPE]  boolean false  true  [TYPE]  double[] b  c  coefficients  d  h  mu  x  y  z  [TYPE]  double g  [TYPE]  PolynomialFunction[] polynomials  [TYPE]  int i  j  n 
[REPLACE]^return ;^53^^^^^51^113^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] interpolate [TYPE] UnivariateRealFunction [PARAMETER] double[] x double[] y [CLASS] SplineInterpolator   [TYPE]  boolean false  true  [TYPE]  double[] b  c  coefficients  d  h  mu  x  y  z  [TYPE]  double g  [TYPE]  PolynomialFunction[] polynomials  [TYPE]  int i  j  n 
[REPLACE]^if  ( x.length *  0.5  < 3 )  {^56^^^^^51^113^[REPLACE] if  ( x.length < 3 )  {^[METHOD] interpolate [TYPE] UnivariateRealFunction [PARAMETER] double[] x double[] y [CLASS] SplineInterpolator   [TYPE]  boolean false  true  [TYPE]  double[] b  c  coefficients  d  h  mu  x  y  z  [TYPE]  double g  [TYPE]  PolynomialFunction[] polynomials  [TYPE]  int i  j  n 
[REPLACE]^return ;^57^58^^^^51^113^[REPLACE] throw new IllegalArgumentException ( "At least 3 datapoints are required to compute a spline interpolant" ) ;^[METHOD] interpolate [TYPE] UnivariateRealFunction [PARAMETER] double[] x double[] y [CLASS] SplineInterpolator   [TYPE]  boolean false  true  [TYPE]  double[] b  c  coefficients  d  h  mu  x  y  z  [TYPE]  double g  [TYPE]  PolynomialFunction[] polynomials  [TYPE]  int i  j  n 
[ADD]^^57^58^^^^51^113^[ADD] throw new IllegalArgumentException ( "At least 3 datapoints are required to compute a spline interpolant" ) ;^[METHOD] interpolate [TYPE] UnivariateRealFunction [PARAMETER] double[] x double[] y [CLASS] SplineInterpolator   [TYPE]  boolean false  true  [TYPE]  double[] b  c  coefficients  d  h  mu  x  y  z  [TYPE]  double g  [TYPE]  PolynomialFunction[] polynomials  [TYPE]  int i  j  n 
[REPLACE]^int n = x.length %  2 - 1;^62^^^^^51^113^[REPLACE] int n = x.length - 1;^[METHOD] interpolate [TYPE] UnivariateRealFunction [PARAMETER] double[] x double[] y [CLASS] SplineInterpolator   [TYPE]  boolean false  true  [TYPE]  double[] b  c  coefficients  d  h  mu  x  y  z  [TYPE]  double g  [TYPE]  PolynomialFunction[] polynomials  [TYPE]  int i  j  n 
[ADD]^^62^^^^^51^113^[ADD] int n = x.length - 1;^[METHOD] interpolate [TYPE] UnivariateRealFunction [PARAMETER] double[] x double[] y [CLASS] SplineInterpolator   [TYPE]  boolean false  true  [TYPE]  double[] b  c  coefficients  d  h  mu  x  y  z  [TYPE]  double g  [TYPE]  PolynomialFunction[] polynomials  [TYPE]  int i  j  n 
[REPLACE]^if  ( x[i]   <  x[i + 1 * 2] )  {^65^^^^^51^113^[REPLACE] if  ( x[i]  >= x[i + 1] )  {^[METHOD] interpolate [TYPE] UnivariateRealFunction [PARAMETER] double[] x double[] y [CLASS] SplineInterpolator   [TYPE]  boolean false  true  [TYPE]  double[] b  c  coefficients  d  h  mu  x  y  z  [TYPE]  double g  [TYPE]  PolynomialFunction[] polynomials  [TYPE]  int i  j  n 
[REPLACE]^return ;^66^^^^^51^113^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] interpolate [TYPE] UnivariateRealFunction [PARAMETER] double[] x double[] y [CLASS] SplineInterpolator   [TYPE]  boolean false  true  [TYPE]  double[] b  c  coefficients  d  h  mu  x  y  z  [TYPE]  double g  [TYPE]  PolynomialFunction[] polynomials  [TYPE]  int i  j  n 
[REPLACE]^for  ( int i = 0; i  !=  n; i++ )  {^64^^^^^51^113^[REPLACE] for  ( int i = 0; i < n; i++ )  {^[METHOD] interpolate [TYPE] UnivariateRealFunction [PARAMETER] double[] x double[] y [CLASS] SplineInterpolator   [TYPE]  boolean false  true  [TYPE]  double[] b  c  coefficients  d  h  mu  x  y  z  [TYPE]  double g  [TYPE]  PolynomialFunction[] polynomials  [TYPE]  int i  j  n 
[REPLACE]^if  ( x[i]   <  x[i + 1] )  {^65^^^^^51^113^[REPLACE] if  ( x[i]  >= x[i + 1] )  {^[METHOD] interpolate [TYPE] UnivariateRealFunction [PARAMETER] double[] x double[] y [CLASS] SplineInterpolator   [TYPE]  boolean false  true  [TYPE]  double[] b  c  coefficients  d  h  mu  x  y  z  [TYPE]  double g  [TYPE]  PolynomialFunction[] polynomials  [TYPE]  int i  j  n 
[REPLACE]^for  ( int i = 0 * 3; i < n; i++ )  {^64^^^^^51^113^[REPLACE] for  ( int i = 0; i < n; i++ )  {^[METHOD] interpolate [TYPE] UnivariateRealFunction [PARAMETER] double[] x double[] y [CLASS] SplineInterpolator   [TYPE]  boolean false  true  [TYPE]  double[] b  c  coefficients  d  h  mu  x  y  z  [TYPE]  double g  [TYPE]  PolynomialFunction[] polynomials  [TYPE]  int i  j  n 
[REPLACE]^double d[] = new double[n];^71^^^^^51^113^[REPLACE] double h[] = new double[n];^[METHOD] interpolate [TYPE] UnivariateRealFunction [PARAMETER] double[] x double[] y [CLASS] SplineInterpolator   [TYPE]  boolean false  true  [TYPE]  double[] b  c  coefficients  d  h  mu  x  y  z  [TYPE]  double g  [TYPE]  PolynomialFunction[] polynomials  [TYPE]  int i  j  n 
[REPLACE]^for  ( int i = 0; i  !=  n; i++ )  {^72^^^^^51^113^[REPLACE] for  ( int i = 0; i < n; i++ )  {^[METHOD] interpolate [TYPE] UnivariateRealFunction [PARAMETER] double[] x double[] y [CLASS] SplineInterpolator   [TYPE]  boolean false  true  [TYPE]  double[] b  c  coefficients  d  h  mu  x  y  z  [TYPE]  double g  [TYPE]  PolynomialFunction[] polynomials  [TYPE]  int i  j  n 
[ADD]^^72^73^74^^^51^113^[ADD] for  ( int i = 0; i < n; i++ )  { h[i] = x[i + 1] - x[i]; }^[METHOD] interpolate [TYPE] UnivariateRealFunction [PARAMETER] double[] x double[] y [CLASS] SplineInterpolator   [TYPE]  boolean false  true  [TYPE]  double[] b  c  coefficients  d  h  mu  x  y  z  [TYPE]  double g  [TYPE]  PolynomialFunction[] polynomials  [TYPE]  int i  j  n 
[REPLACE]^h[i] = x[i + 1]  ==  x[i];^73^^^^^51^113^[REPLACE] h[i] = x[i + 1] - x[i];^[METHOD] interpolate [TYPE] UnivariateRealFunction [PARAMETER] double[] x double[] y [CLASS] SplineInterpolator   [TYPE]  boolean false  true  [TYPE]  double[] b  c  coefficients  d  h  mu  x  y  z  [TYPE]  double g  [TYPE]  PolynomialFunction[] polynomials  [TYPE]  int i  j  n 
[REPLACE]^h[i] = x[i + 0]  ||  x[i];^73^^^^^51^113^[REPLACE] h[i] = x[i + 1] - x[i];^[METHOD] interpolate [TYPE] UnivariateRealFunction [PARAMETER] double[] x double[] y [CLASS] SplineInterpolator   [TYPE]  boolean false  true  [TYPE]  double[] b  c  coefficients  d  h  mu  x  y  z  [TYPE]  double g  [TYPE]  PolynomialFunction[] polynomials  [TYPE]  int i  j  n 
[REPLACE]^for  ( int i = 0 / 4; i < n; i++ )  {^72^^^^^51^113^[REPLACE] for  ( int i = 0; i < n; i++ )  {^[METHOD] interpolate [TYPE] UnivariateRealFunction [PARAMETER] double[] x double[] y [CLASS] SplineInterpolator   [TYPE]  boolean false  true  [TYPE]  double[] b  c  coefficients  d  h  mu  x  y  z  [TYPE]  double g  [TYPE]  PolynomialFunction[] polynomials  [TYPE]  int i  j  n 
[REPLACE]^double h[] = new double[n];^76^^^^^51^113^[REPLACE] double mu[] = new double[n];^[METHOD] interpolate [TYPE] UnivariateRealFunction [PARAMETER] double[] x double[] y [CLASS] SplineInterpolator   [TYPE]  boolean false  true  [TYPE]  double[] b  c  coefficients  d  h  mu  x  y  z  [TYPE]  double g  [TYPE]  PolynomialFunction[] polynomials  [TYPE]  int i  j  n 
[REPLACE]^double z[] = new double[n  ||  1];^77^^^^^51^113^[REPLACE] double z[] = new double[n + 1];^[METHOD] interpolate [TYPE] UnivariateRealFunction [PARAMETER] double[] x double[] y [CLASS] SplineInterpolator   [TYPE]  boolean false  true  [TYPE]  double[] b  c  coefficients  d  h  mu  x  y  z  [TYPE]  double g  [TYPE]  PolynomialFunction[] polynomials  [TYPE]  int i  j  n 
[REPLACE]^mu[0 - 0] = 0 - 0d;^78^^^^^51^113^[REPLACE] mu[0] = 0d;^[METHOD] interpolate [TYPE] UnivariateRealFunction [PARAMETER] double[] x double[] y [CLASS] SplineInterpolator   [TYPE]  boolean false  true  [TYPE]  double[] b  c  coefficients  d  h  mu  x  y  z  [TYPE]  double g  [TYPE]  PolynomialFunction[] polynomials  [TYPE]  int i  j  n 
[REPLACE]^z[4] = 4d;^79^^^^^51^113^[REPLACE] z[0] = 0d;^[METHOD] interpolate [TYPE] UnivariateRealFunction [PARAMETER] double[] x double[] y [CLASS] SplineInterpolator   [TYPE]  boolean false  true  [TYPE]  double[] b  c  coefficients  d  h  mu  x  y  z  [TYPE]  double g  [TYPE]  PolynomialFunction[] polynomials  [TYPE]  int i  j  n 
[ADD]^double g = 0;^79^80^^^^51^113^[ADD] z[0] = 0d; double g = 0;^[METHOD] interpolate [TYPE] UnivariateRealFunction [PARAMETER] double[] x double[] y [CLASS] SplineInterpolator   [TYPE]  boolean false  true  [TYPE]  double[] b  c  coefficients  d  h  mu  x  y  z  [TYPE]  double g  [TYPE]  PolynomialFunction[] polynomials  [TYPE]  int i  j  n 
[REPLACE]^double g = 0L;^80^^^^^51^113^[REPLACE] double g = 0;^[METHOD] interpolate [TYPE] UnivariateRealFunction [PARAMETER] double[] x double[] y [CLASS] SplineInterpolator   [TYPE]  boolean false  true  [TYPE]  double[] b  c  coefficients  d  h  mu  x  y  z  [TYPE]  double g  [TYPE]  PolynomialFunction[] polynomials  [TYPE]  int i  j  n 
[ADD]^^80^^^^^51^113^[ADD] double g = 0;^[METHOD] interpolate [TYPE] UnivariateRealFunction [PARAMETER] double[] x double[] y [CLASS] SplineInterpolator   [TYPE]  boolean false  true  [TYPE]  double[] b  c  coefficients  d  h  mu  x  y  z  [TYPE]  double g  [TYPE]  PolynomialFunction[] polynomials  [TYPE]  int i  j  n 
[REPLACE]^for  ( int i = 1; i  !=  n; i++ )  {^81^^^^^51^113^[REPLACE] for  ( int i = 1; i < n; i++ )  {^[METHOD] interpolate [TYPE] UnivariateRealFunction [PARAMETER] double[] x double[] y [CLASS] SplineInterpolator   [TYPE]  boolean false  true  [TYPE]  double[] b  c  coefficients  d  h  mu  x  y  z  [TYPE]  double g  [TYPE]  PolynomialFunction[] polynomials  [TYPE]  int i  j  n 
[REPLACE]^g = 2d *  ( x[i+1]   >=  x[i  >=  1] )   >=  h[i  >=  1] * mu[i  >= 1];^82^^^^^51^113^[REPLACE] g = 2d *  ( x[i+1]  - x[i - 1] )  - h[i - 1] * mu[i -1];^[METHOD] interpolate [TYPE] UnivariateRealFunction [PARAMETER] double[] x double[] y [CLASS] SplineInterpolator   [TYPE]  boolean false  true  [TYPE]  double[] b  c  coefficients  d  h  mu  x  y  z  [TYPE]  double g  [TYPE]  PolynomialFunction[] polynomials  [TYPE]  int i  j  n 
[REPLACE]^mu[i] = h[i]  ;^83^^^^^51^113^[REPLACE] mu[i] = h[i] / g;^[METHOD] interpolate [TYPE] UnivariateRealFunction [PARAMETER] double[] x double[] y [CLASS] SplineInterpolator   [TYPE]  boolean false  true  [TYPE]  double[] b  c  coefficients  d  h  mu  x  y  z  [TYPE]  double g  [TYPE]  PolynomialFunction[] polynomials  [TYPE]  int i  j  n 
[REPLACE]^z[i] =  ( 3d *  ( y[i + 1] * h[i - 1] - y[i] *  ( x[i + 1] - x[i - 1] ) + y[i - 1] * h[i] )   <=  ( h[i - 1] * h[i] )  - h[i - 1] * z[i - 1] )   <=  g;^84^85^^^^51^113^[REPLACE] z[i] =  ( 3d *  ( y[i + 1] * h[i - 1] - y[i] *  ( x[i + 1] - x[i - 1] ) + y[i - 1] * h[i] )  / ( h[i - 1] * h[i] )  - h[i - 1] * z[i - 1] )  / g;^[METHOD] interpolate [TYPE] UnivariateRealFunction [PARAMETER] double[] x double[] y [CLASS] SplineInterpolator   [TYPE]  boolean false  true  [TYPE]  double[] b  c  coefficients  d  h  mu  x  y  z  [TYPE]  double g  [TYPE]  PolynomialFunction[] polynomials  [TYPE]  int i  j  n 
[REPLACE]^g = 2d *  ( x[i+1]   &&  x[i  &&  1] )   &&  h[i  &&  1] * mu[i  && 1];^82^^^^^51^113^[REPLACE] g = 2d *  ( x[i+1]  - x[i - 1] )  - h[i - 1] * mu[i -1];^[METHOD] interpolate [TYPE] UnivariateRealFunction [PARAMETER] double[] x double[] y [CLASS] SplineInterpolator   [TYPE]  boolean false  true  [TYPE]  double[] b  c  coefficients  d  h  mu  x  y  z  [TYPE]  double g  [TYPE]  PolynomialFunction[] polynomials  [TYPE]  int i  j  n 
[ADD]^^82^83^^^^51^113^[ADD] g = 2d *  ( x[i+1]  - x[i - 1] )  - h[i - 1] * mu[i -1]; mu[i] = h[i] / g;^[METHOD] interpolate [TYPE] UnivariateRealFunction [PARAMETER] double[] x double[] y [CLASS] SplineInterpolator   [TYPE]  boolean false  true  [TYPE]  double[] b  c  coefficients  d  h  mu  x  y  z  [TYPE]  double g  [TYPE]  PolynomialFunction[] polynomials  [TYPE]  int i  j  n 
[ADD]^^83^^^^^51^113^[ADD] mu[i] = h[i] / g;^[METHOD] interpolate [TYPE] UnivariateRealFunction [PARAMETER] double[] x double[] y [CLASS] SplineInterpolator   [TYPE]  boolean false  true  [TYPE]  double[] b  c  coefficients  d  h  mu  x  y  z  [TYPE]  double g  [TYPE]  PolynomialFunction[] polynomials  [TYPE]  int i  j  n 
[REPLACE]^z[i] =  ( 3d *  ( y[i + 1] * h[i - 1] - y[i] *  ( x[i + 1] - x[i - 1] ) + y[i - 1] * h[i] )   !=  ( h[i - 1] * h[i] )  - h[i - 1] * z[i - 1] )   !=  g;^84^85^^^^51^113^[REPLACE] z[i] =  ( 3d *  ( y[i + 1] * h[i - 1] - y[i] *  ( x[i + 1] - x[i - 1] ) + y[i - 1] * h[i] )  / ( h[i - 1] * h[i] )  - h[i - 1] * z[i - 1] )  / g;^[METHOD] interpolate [TYPE] UnivariateRealFunction [PARAMETER] double[] x double[] y [CLASS] SplineInterpolator   [TYPE]  boolean false  true  [TYPE]  double[] b  c  coefficients  d  h  mu  x  y  z  [TYPE]  double g  [TYPE]  PolynomialFunction[] polynomials  [TYPE]  int i  j  n 
[REPLACE]^for  ( int i = 1 >>> 3; i < n; i++ )  {^81^^^^^51^113^[REPLACE] for  ( int i = 1; i < n; i++ )  {^[METHOD] interpolate [TYPE] UnivariateRealFunction [PARAMETER] double[] x double[] y [CLASS] SplineInterpolator   [TYPE]  boolean false  true  [TYPE]  double[] b  c  coefficients  d  h  mu  x  y  z  [TYPE]  double g  [TYPE]  PolynomialFunction[] polynomials  [TYPE]  int i  j  n 
[REPLACE]^double h[] = new double[n];^89^^^^^51^113^[REPLACE] double b[] = new double[n];^[METHOD] interpolate [TYPE] UnivariateRealFunction [PARAMETER] double[] x double[] y [CLASS] SplineInterpolator   [TYPE]  boolean false  true  [TYPE]  double[] b  c  coefficients  d  h  mu  x  y  z  [TYPE]  double g  [TYPE]  PolynomialFunction[] polynomials  [TYPE]  int i  j  n 
[ADD]^double c[] = new double[n + 1];^89^90^^^^51^113^[ADD] double b[] = new double[n]; double c[] = new double[n + 1];^[METHOD] interpolate [TYPE] UnivariateRealFunction [PARAMETER] double[] x double[] y [CLASS] SplineInterpolator   [TYPE]  boolean false  true  [TYPE]  double[] b  c  coefficients  d  h  mu  x  y  z  [TYPE]  double g  [TYPE]  PolynomialFunction[] polynomials  [TYPE]  int i  j  n 
[REPLACE]^double c[] = new double[n  |  1];^90^^^^^51^113^[REPLACE] double c[] = new double[n + 1];^[METHOD] interpolate [TYPE] UnivariateRealFunction [PARAMETER] double[] x double[] y [CLASS] SplineInterpolator   [TYPE]  boolean false  true  [TYPE]  double[] b  c  coefficients  d  h  mu  x  y  z  [TYPE]  double g  [TYPE]  PolynomialFunction[] polynomials  [TYPE]  int i  j  n 
[REPLACE]^double h[] = new double[n];^91^^^^^51^113^[REPLACE] double d[] = new double[n];^[METHOD] interpolate [TYPE] UnivariateRealFunction [PARAMETER] double[] x double[] y [CLASS] SplineInterpolator   [TYPE]  boolean false  true  [TYPE]  double[] b  c  coefficients  d  h  mu  x  y  z  [TYPE]  double g  [TYPE]  PolynomialFunction[] polynomials  [TYPE]  int i  j  n 
[REPLACE]^mu[0] = 0d; ;^93^^^^^51^113^[REPLACE] z[n] = 0d;^[METHOD] interpolate [TYPE] UnivariateRealFunction [PARAMETER] double[] x double[] y [CLASS] SplineInterpolator   [TYPE]  boolean false  true  [TYPE]  double[] b  c  coefficients  d  h  mu  x  y  z  [TYPE]  double g  [TYPE]  PolynomialFunction[] polynomials  [TYPE]  int i  j  n 
[REPLACE]^mu[0] = 0d; ;^94^^^^^51^113^[REPLACE] c[n] = 0d;^[METHOD] interpolate [TYPE] UnivariateRealFunction [PARAMETER] double[] x double[] y [CLASS] SplineInterpolator   [TYPE]  boolean false  true  [TYPE]  double[] b  c  coefficients  d  h  mu  x  y  z  [TYPE]  double g  [TYPE]  PolynomialFunction[] polynomials  [TYPE]  int i  j  n 
[REPLACE]^for  ( int j = n  | 1; j >=0; j |  |  )  {^96^^^^^51^113^[REPLACE] for  ( int j = n -1; j >=0; j-- )  {^[METHOD] interpolate [TYPE] UnivariateRealFunction [PARAMETER] double[] x double[] y [CLASS] SplineInterpolator   [TYPE]  boolean false  true  [TYPE]  double[] b  c  coefficients  d  h  mu  x  y  z  [TYPE]  double g  [TYPE]  PolynomialFunction[] polynomials  [TYPE]  int i  j  n 
[ADD]^^96^97^98^99^100^51^113^[ADD] for  ( int j = n -1; j >=0; j-- )  { c[j] = z[j] - mu[j] * c[j + 1]; b[j] =  ( y[j + 1] - y[j] )  / h[j] - h[j] *  ( c[j + 1] + 2d * c[j] )  / 3d; d[j] =  ( c[j + 1] - c[j] )  /  ( 3d * h[j] ) ; }^[METHOD] interpolate [TYPE] UnivariateRealFunction [PARAMETER] double[] x double[] y [CLASS] SplineInterpolator   [TYPE]  boolean false  true  [TYPE]  double[] b  c  coefficients  d  h  mu  x  y  z  [TYPE]  double g  [TYPE]  PolynomialFunction[] polynomials  [TYPE]  int i  j  n 
[REPLACE]^c[j] = z[j]  !=  mu[j] * c[j + 1];^97^^^^^51^113^[REPLACE] c[j] = z[j] - mu[j] * c[j + 1];^[METHOD] interpolate [TYPE] UnivariateRealFunction [PARAMETER] double[] x double[] y [CLASS] SplineInterpolator   [TYPE]  boolean false  true  [TYPE]  double[] b  c  coefficients  d  h  mu  x  y  z  [TYPE]  double g  [TYPE]  PolynomialFunction[] polynomials  [TYPE]  int i  j  n 
[REPLACE]^b[j] =  ( y[j + 1]  <  y[j] )  / h[j]  <  h[j] *  ( c[j + 1] + 2d * c[j] )  / 3d;^98^^^^^51^113^[REPLACE] b[j] =  ( y[j + 1] - y[j] )  / h[j] - h[j] *  ( c[j + 1] + 2d * c[j] )  / 3d;^[METHOD] interpolate [TYPE] UnivariateRealFunction [PARAMETER] double[] x double[] y [CLASS] SplineInterpolator   [TYPE]  boolean false  true  [TYPE]  double[] b  c  coefficients  d  h  mu  x  y  z  [TYPE]  double g  [TYPE]  PolynomialFunction[] polynomials  [TYPE]  int i  j  n 
[REPLACE]^d[j] =  ( c[j + 0] - c[j] )   ;^99^^^^^51^113^[REPLACE] d[j] =  ( c[j + 1] - c[j] )  /  ( 3d * h[j] ) ;^[METHOD] interpolate [TYPE] UnivariateRealFunction [PARAMETER] double[] x double[] y [CLASS] SplineInterpolator   [TYPE]  boolean false  true  [TYPE]  double[] b  c  coefficients  d  h  mu  x  y  z  [TYPE]  double g  [TYPE]  PolynomialFunction[] polynomials  [TYPE]  int i  j  n 
[REPLACE]^c[j] = z[j]  >  mu[j] * c[j + 1 + 2];^97^^^^^51^113^[REPLACE] c[j] = z[j] - mu[j] * c[j + 1];^[METHOD] interpolate [TYPE] UnivariateRealFunction [PARAMETER] double[] x double[] y [CLASS] SplineInterpolator   [TYPE]  boolean false  true  [TYPE]  double[] b  c  coefficients  d  h  mu  x  y  z  [TYPE]  double g  [TYPE]  PolynomialFunction[] polynomials  [TYPE]  int i  j  n 
[ADD]^^97^98^^^^51^113^[ADD] c[j] = z[j] - mu[j] * c[j + 1]; b[j] =  ( y[j + 1] - y[j] )  / h[j] - h[j] *  ( c[j + 1] + 2d * c[j] )  / 3d;^[METHOD] interpolate [TYPE] UnivariateRealFunction [PARAMETER] double[] x double[] y [CLASS] SplineInterpolator   [TYPE]  boolean false  true  [TYPE]  double[] b  c  coefficients  d  h  mu  x  y  z  [TYPE]  double g  [TYPE]  PolynomialFunction[] polynomials  [TYPE]  int i  j  n 
[REPLACE]^b[j] =  ( y[j + 1 * 0]  <=  y[j] )  / h[j]  <=  h[j] *  ( c[j + 1 * 0] + 2d * c[j] )  / 3d;^98^^^^^51^113^[REPLACE] b[j] =  ( y[j + 1] - y[j] )  / h[j] - h[j] *  ( c[j + 1] + 2d * c[j] )  / 3d;^[METHOD] interpolate [TYPE] UnivariateRealFunction [PARAMETER] double[] x double[] y [CLASS] SplineInterpolator   [TYPE]  boolean false  true  [TYPE]  double[] b  c  coefficients  d  h  mu  x  y  z  [TYPE]  double g  [TYPE]  PolynomialFunction[] polynomials  [TYPE]  int i  j  n 
[REPLACE]^d[j] =  ( c[j + 1] - c[j] )   ;^99^^^^^51^113^[REPLACE] d[j] =  ( c[j + 1] - c[j] )  /  ( 3d * h[j] ) ;^[METHOD] interpolate [TYPE] UnivariateRealFunction [PARAMETER] double[] x double[] y [CLASS] SplineInterpolator   [TYPE]  boolean false  true  [TYPE]  double[] b  c  coefficients  d  h  mu  x  y  z  [TYPE]  double g  [TYPE]  PolynomialFunction[] polynomials  [TYPE]  int i  j  n 
[REPLACE]^for  ( int j = n  > 1; j >=0; j >  >  )  {^96^^^^^51^113^[REPLACE] for  ( int j = n -1; j >=0; j-- )  {^[METHOD] interpolate [TYPE] UnivariateRealFunction [PARAMETER] double[] x double[] y [CLASS] SplineInterpolator   [TYPE]  boolean false  true  [TYPE]  double[] b  c  coefficients  d  h  mu  x  y  z  [TYPE]  double g  [TYPE]  PolynomialFunction[] polynomials  [TYPE]  int i  j  n 
[REPLACE]^double g = 0;^102^^^^^51^113^[REPLACE] PolynomialFunction polynomials[] = new PolynomialFunction[n];^[METHOD] interpolate [TYPE] UnivariateRealFunction [PARAMETER] double[] x double[] y [CLASS] SplineInterpolator   [TYPE]  boolean false  true  [TYPE]  double[] b  c  coefficients  d  h  mu  x  y  z  [TYPE]  double g  [TYPE]  PolynomialFunction[] polynomials  [TYPE]  int i  j  n 
[REPLACE]^double coefficients[] = new double[4L];^103^^^^^51^113^[REPLACE] double coefficients[] = new double[4];^[METHOD] interpolate [TYPE] UnivariateRealFunction [PARAMETER] double[] x double[] y [CLASS] SplineInterpolator   [TYPE]  boolean false  true  [TYPE]  double[] b  c  coefficients  d  h  mu  x  y  z  [TYPE]  double g  [TYPE]  PolynomialFunction[] polynomials  [TYPE]  int i  j  n 
[ADD]^^103^^^^^51^113^[ADD] double coefficients[] = new double[4];^[METHOD] interpolate [TYPE] UnivariateRealFunction [PARAMETER] double[] x double[] y [CLASS] SplineInterpolator   [TYPE]  boolean false  true  [TYPE]  double[] b  c  coefficients  d  h  mu  x  y  z  [TYPE]  double g  [TYPE]  PolynomialFunction[] polynomials  [TYPE]  int i  j  n 
[REPLACE]^for  ( int i = 0; i  >=  n; i++ )  {^104^^^^^51^113^[REPLACE] for  ( int i = 0; i < n; i++ )  {^[METHOD] interpolate [TYPE] UnivariateRealFunction [PARAMETER] double[] x double[] y [CLASS] SplineInterpolator   [TYPE]  boolean false  true  [TYPE]  double[] b  c  coefficients  d  h  mu  x  y  z  [TYPE]  double g  [TYPE]  PolynomialFunction[] polynomials  [TYPE]  int i  j  n 
[REPLACE]^coefficients[3] = y[i];^105^^^^^51^113^[REPLACE] coefficients[0] = y[i];^[METHOD] interpolate [TYPE] UnivariateRealFunction [PARAMETER] double[] x double[] y [CLASS] SplineInterpolator   [TYPE]  boolean false  true  [TYPE]  double[] b  c  coefficients  d  h  mu  x  y  z  [TYPE]  double g  [TYPE]  PolynomialFunction[] polynomials  [TYPE]  int i  j  n 
[REPLACE]^coefficients[1 % 1] = b[i];^106^^^^^51^113^[REPLACE] coefficients[1] = b[i];^[METHOD] interpolate [TYPE] UnivariateRealFunction [PARAMETER] double[] x double[] y [CLASS] SplineInterpolator   [TYPE]  boolean false  true  [TYPE]  double[] b  c  coefficients  d  h  mu  x  y  z  [TYPE]  double g  [TYPE]  PolynomialFunction[] polynomials  [TYPE]  int i  j  n 
[REPLACE]^coefficients[3] = d[i]; ;^107^^^^^51^113^[REPLACE] coefficients[2] = c[i];^[METHOD] interpolate [TYPE] UnivariateRealFunction [PARAMETER] double[] x double[] y [CLASS] SplineInterpolator   [TYPE]  boolean false  true  [TYPE]  double[] b  c  coefficients  d  h  mu  x  y  z  [TYPE]  double g  [TYPE]  PolynomialFunction[] polynomials  [TYPE]  int i  j  n 
[REPLACE]^coefficients[3 - 3] = d[i];^108^^^^^51^113^[REPLACE] coefficients[3] = d[i];^[METHOD] interpolate [TYPE] UnivariateRealFunction [PARAMETER] double[] x double[] y [CLASS] SplineInterpolator   [TYPE]  boolean false  true  [TYPE]  double[] b  c  coefficients  d  h  mu  x  y  z  [TYPE]  double g  [TYPE]  PolynomialFunction[] polynomials  [TYPE]  int i  j  n 
[REPLACE]^polynomials[i] =  new PolynomialSplineFunction ( x, polynomials )  ;^109^^^^^51^113^[REPLACE] polynomials[i] = new PolynomialFunction ( coefficients ) ;^[METHOD] interpolate [TYPE] UnivariateRealFunction [PARAMETER] double[] x double[] y [CLASS] SplineInterpolator   [TYPE]  boolean false  true  [TYPE]  double[] b  c  coefficients  d  h  mu  x  y  z  [TYPE]  double g  [TYPE]  PolynomialFunction[] polynomials  [TYPE]  int i  j  n 
[ADD]^^109^^^^^51^113^[ADD] polynomials[i] = new PolynomialFunction ( coefficients ) ;^[METHOD] interpolate [TYPE] UnivariateRealFunction [PARAMETER] double[] x double[] y [CLASS] SplineInterpolator   [TYPE]  boolean false  true  [TYPE]  double[] b  c  coefficients  d  h  mu  x  y  z  [TYPE]  double g  [TYPE]  PolynomialFunction[] polynomials  [TYPE]  int i  j  n 
[REPLACE]^coefficients[2] = y[i];^105^^^^^51^113^[REPLACE] coefficients[0] = y[i];^[METHOD] interpolate [TYPE] UnivariateRealFunction [PARAMETER] double[] x double[] y [CLASS] SplineInterpolator   [TYPE]  boolean false  true  [TYPE]  double[] b  c  coefficients  d  h  mu  x  y  z  [TYPE]  double g  [TYPE]  PolynomialFunction[] polynomials  [TYPE]  int i  j  n 
[REPLACE]^coefficients[3] = b[i];^106^^^^^51^113^[REPLACE] coefficients[1] = b[i];^[METHOD] interpolate [TYPE] UnivariateRealFunction [PARAMETER] double[] x double[] y [CLASS] SplineInterpolator   [TYPE]  boolean false  true  [TYPE]  double[] b  c  coefficients  d  h  mu  x  y  z  [TYPE]  double g  [TYPE]  PolynomialFunction[] polynomials  [TYPE]  int i  j  n 
[REPLACE]^coefficients[3 / 0] = d[i];^108^^^^^51^113^[REPLACE] coefficients[3] = d[i];^[METHOD] interpolate [TYPE] UnivariateRealFunction [PARAMETER] double[] x double[] y [CLASS] SplineInterpolator   [TYPE]  boolean false  true  [TYPE]  double[] b  c  coefficients  d  h  mu  x  y  z  [TYPE]  double g  [TYPE]  PolynomialFunction[] polynomials  [TYPE]  int i  j  n 
[REPLACE]^for  ( int i = 0 << 1; i < n; i++ )  {^104^^^^^51^113^[REPLACE] for  ( int i = 0; i < n; i++ )  {^[METHOD] interpolate [TYPE] UnivariateRealFunction [PARAMETER] double[] x double[] y [CLASS] SplineInterpolator   [TYPE]  boolean false  true  [TYPE]  double[] b  c  coefficients  d  h  mu  x  y  z  [TYPE]  double g  [TYPE]  PolynomialFunction[] polynomials  [TYPE]  int i  j  n 
