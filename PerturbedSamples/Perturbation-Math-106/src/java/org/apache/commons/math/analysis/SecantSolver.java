[REPLACE]^private static final long serialVersionUID ;^43^^^^^^^[REPLACE] private static final long serialVersionUID = 1984971194738974867L;^ [CLASS] SecantSolver  
[REPLACE]^super ( f, 71, 1E-6 ) ;^50^^^^^49^51^[REPLACE] super ( f, 100, 1E-6 ) ;^[METHOD] <init> [TYPE] UnivariateRealFunction) [PARAMETER] UnivariateRealFunction f [CLASS] SecantSolver   [TYPE]  long serialVersionUID  [TYPE]  UnivariateRealFunction f  [TYPE]  boolean false  true 
[ADD]^^50^^^^^49^51^[ADD] super ( f, 100, 1E-6 ) ;^[METHOD] <init> [TYPE] UnivariateRealFunction) [PARAMETER] UnivariateRealFunction f [CLASS] SecantSolver   [TYPE]  long serialVersionUID  [TYPE]  UnivariateRealFunction f  [TYPE]  boolean false  true 
[REPLACE]^return solve ( min, initial ) ;^69^^^^^66^70^[REPLACE] return solve ( min, max ) ;^[METHOD] solve [TYPE] double [PARAMETER] double min double max double initial [CLASS] SecantSolver   [TYPE]  long serialVersionUID  [TYPE]  double initial  max  min  [TYPE]  boolean false  true 
[REPLACE]^double y1 = f.value ( x1 ) ;^86^^^^^84^154^[REPLACE] clearResult (  ) ;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^double x0 = max;^94^^^^^84^154^[REPLACE] double x0 = min;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^double x1 = min;^95^^^^^84^154^[REPLACE] double x1 = max;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^double y0 = f.value ( y0 ) ;^96^^^^^84^154^[REPLACE] double y0 = f.value ( x0 ) ;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^double y1 = f.value ( y1 ) ;^97^^^^^84^154^[REPLACE] double y1 = f.value ( x1 ) ;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^if  ( y0 * y1  <  0 )  {^100^^^^^84^154^[REPLACE] if  ( y0 * y1 >= 0 )  {^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[ADD]^^100^101^102^103^104^84^154^[ADD] if  ( y0 * y1 >= 0 )  { throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + ;^101^102^103^104^^84^154^[REPLACE] throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[ADD]^^101^102^103^^^84^154^[ADD] throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" +^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^return ;^101^102^103^104^^84^154^[REPLACE] throw new IllegalArgumentException ( "Function values at endpoints do not have different signs." + "  Endpoints: [" + min + "," + max + "]" + "  Values: [" + y0 + "," + y1 + "]" ) ;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^double x2 = y0;^107^^^^^84^154^[REPLACE] double x2 = x0;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^double y2 = y2;^108^^^^^84^154^[REPLACE] double y2 = y0;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^double oldDelta = x2 -y2;^109^^^^^84^154^[REPLACE] double oldDelta = x2 - x1;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[ADD]^^109^110^^^^84^154^[ADD] double oldDelta = x2 - x1; int i = 0;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^int i = 2;^110^^^^^84^154^[REPLACE] int i = 0;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[ADD]^^110^^^^^84^154^[ADD] int i = 0;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^while  ( i  >  maximalIterationCount )  {^111^^^^^84^154^[REPLACE] while  ( i < maximalIterationCount )  {^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^if  ( Math.abs ( y2 )   ==  Math.abs ( y1 )  )  {^112^^^^^84^154^[REPLACE] if  ( Math.abs ( y2 )  < Math.abs ( y1 )  )  {^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[ADD]^^112^113^114^115^116^84^154^[ADD] if  ( Math.abs ( y2 )  < Math.abs ( y1 )  )  { x0 = x1; x1 = x2; x2 = x0; y0 = y1;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^x2 = x0; ;^113^^^^^84^154^[REPLACE] x0 = x1;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^x2 = x0; ;^114^^^^^84^154^[REPLACE] x1 = x2;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^x1 = x2; ;^115^^^^^84^154^[REPLACE] x2 = x0;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[ADD]^^115^^^^^84^154^[ADD] x2 = x0;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^y1 = y2; ;^116^^^^^84^154^[REPLACE] y0 = y1;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[ADD]^^116^117^^^^84^154^[ADD] y0 = y1; y1 = y2;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^x1 = x2; ;^117^^^^^84^154^[REPLACE] y1 = y2;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^x2 = x0; ;^118^^^^^84^154^[REPLACE] y2 = y0;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^if  ( Math.abs ( y1 )   ==  functionValueAccuracy )  {^120^^^^^84^154^[REPLACE] if  ( Math.abs ( y1 )  <= functionValueAccuracy )  {^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[ADD]^^120^121^122^123^^84^154^[ADD] if  ( Math.abs ( y1 )  <= functionValueAccuracy )  { setResult ( x1, i ) ; return result; }^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^return solve ( min, max ) ;^122^^^^^84^154^[REPLACE] return result;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^if  ( Math.abs ( delta )   !=  Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy )  )  {^124^125^^^^84^154^[REPLACE] if  ( Math.abs ( oldDelta )  < Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy )  )  {^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[ADD]^^124^125^126^127^128^84^154^[ADD] if  ( Math.abs ( oldDelta )  < Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy )  )  { setResult ( x1, i ) ; return result; }^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^return solve ( min, max ) ;^127^^^^^124^128^[REPLACE] return result;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^if  (   y1     >=  Math.^130^^^^^84^154^[REPLACE] if  ( Math.abs ( y1 )  > Math.abs ( y0 )  )  {^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REMOVE]^if  (  ( abs ( y2 )  )  <  ( abs ( y1 )  )  )  {     x0 = x1;     x1 = x2;     x2 = x0;     y0 = y1;     y1 = y2;     y2 = y0; }^130^^^^^84^154^[REMOVE] ^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^if  ( delta / oldDelta  !=  1 )  {^135^^^^^130^140^[REPLACE] if  ( delta / oldDelta > 1 )  {^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REMOVE]^if  (  ( y1 > 0 )  ==  ( y2 > 0 )  )  {     x2 = x0;     y2 = y0; }^135^^^^^130^140^[REMOVE] ^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^delta = 0.5  ;^138^^^^^130^140^[REPLACE] delta = 0.5 * oldDelta;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^delta =  ( y1 - 4 )   ;^134^^^^^130^140^[REPLACE] delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^delta = 0.5D  ;^138^^^^^130^140^[REPLACE] delta = 0.5 * oldDelta;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^delta = 0.5D  ;^132^^^^^84^154^[REPLACE] delta = 0.5 * oldDelta;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^if  ( oldDelta  ==  1 )  {^135^^^^^84^154^[REPLACE] if  ( delta / oldDelta > 1 )  {^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[ADD]^^135^136^^138^139^84^154^[ADD] if  ( delta / oldDelta > 1 )  {  delta = 0.5 * oldDelta; }^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^delta = 4.0d  ;^138^^^^^84^154^[REPLACE] delta = 0.5 * oldDelta;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[ADD]^^138^^^^^84^154^[ADD] delta = 0.5 * oldDelta;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^if  (  ( y1 > 0 / 3 )   !=   ( y2 > 0 / 3 )  )  {^145^^^^^84^154^[REPLACE] if  (  ( y1 > 0 )  ==  ( y2 > 0 )  )  {^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REMOVE]^if  (  ( delta / oldDelta )  > 1 )  {     delta = 0.5 * oldDelta; }^145^^^^^84^154^[REMOVE] ^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^x1 = x2; ;^147^^^^^84^154^[REPLACE] x2 = x0;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^x2 = x0; ;^148^^^^^84^154^[REPLACE] y2 = y0;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^delta = 0.5  ;^132^^^^^84^154^[REPLACE] delta = 0.5 * oldDelta;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^delta =  ( x0 - x1 )   ;^134^^^^^84^154^[REPLACE] delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[ADD]^^134^^^^^84^154^[ADD] delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^delta = 1.0d  ;^138^^^^^84^154^[REPLACE] delta = 0.5 * oldDelta;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^x2 = x0; ;^141^^^^^84^154^[REPLACE] x0 = x1;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^y1 = y2; ;^142^^^^^84^154^[REPLACE] y0 = y1;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^x1 = x1  ==  delta;^143^^^^^84^154^[REPLACE] x1 = x1 + delta;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[ADD]^^143^144^^^^84^154^[ADD] x1 = x1 + delta; y1 = f.value ( x1 ) ;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^y1 =  f.value ( x2 ) ;^144^^^^^84^154^[REPLACE] y1 = f.value ( x1 ) ;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^oldDelta =y2 - x1;^150^^^^^84^154^[REPLACE] oldDelta = x2 - x1;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^return solve ( min, max ) ;^127^^^^^84^154^[REPLACE] return result;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^double x1 = max;^129^^^^^84^154^[REPLACE] double delta;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^if  (   y1     == y2 )  {^120^^^^^84^154^[REPLACE] if  ( Math.abs ( y1 )  <= functionValueAccuracy )  {^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[ADD]^setResult ( x1, i ) ;return result;^120^121^122^123^^84^154^[ADD] if  ( Math.abs ( y1 )  <= functionValueAccuracy )  { setResult ( x1, i ) ; return result; }^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^if  ( Math.abs ( oldDelta )   !=  Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy )  )  {^124^125^^^^84^154^[REPLACE] if  ( Math.abs ( oldDelta )  < Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy )  )  {^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^if  ( Math.abs ( y1 )   <=  Math.abs ( y0 )  )  {^130^^^^^84^154^[REPLACE] if  ( Math.abs ( y1 )  > Math.abs ( y0 )  )  {^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[ADD]^^130^131^132^133^134^84^154^[ADD] if  ( Math.abs ( y1 )  > Math.abs ( y0 )  )  {  delta = 0.5 * oldDelta; } else { delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^if  ( delta / oldDelta  >=  1 )  {^135^^^^^130^140^[REPLACE] if  ( delta / oldDelta > 1 )  {^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[ADD]^^138^^^^^130^140^[ADD] delta = 0.5 * oldDelta;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^delta =  ( x0 - x1 * 4 )   ;^134^^^^^130^140^[REPLACE] delta =  ( x0 - x1 )  /  ( 1 - y0 / y1 ) ;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^if  ( delta / oldDelta  <=  1 )  {^135^^^^^84^154^[REPLACE] if  ( delta / oldDelta > 1 )  {^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^delta = 0.5  ;^138^^^^^84^154^[REPLACE] delta = 0.5 * oldDelta;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^if  (  ( y1 > 0 )   ||   ( y2 > 0 )  )  {^145^^^^^84^154^[REPLACE] if  (  ( y1 > 0 )  ==  ( y2 > 0 )  )  {^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[ADD]^^147^148^^^^84^154^[ADD] x2 = x0; y2 = y0;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[ADD]^^114^^^^^84^154^[ADD] x1 = x2;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[ADD]^^115^116^^^^84^154^[ADD] x2 = x0; y0 = y1;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[ADD]^^132^^^^^84^154^[ADD] delta = 0.5 * oldDelta;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^y1 = x1 + oldDelta;^143^^^^^84^154^[REPLACE] x1 = x1 + delta;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[ADD]^^144^^^^^84^154^[ADD] y1 = f.value ( x1 ) ;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^oldDelta = y2 - y1;^150^^^^^84^154^[REPLACE] oldDelta = x2 - x1;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
[REPLACE]^return ;^153^^^^^84^154^[REPLACE] throw new ConvergenceException  (" ")  ;^[METHOD] solve [TYPE] double [PARAMETER] double min double max [CLASS] SecantSolver   [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  double delta  max  min  oldDelta  x0  x1  x2  y0  y1  y2  [TYPE]  int i 
