[REPLACE]^private static final long serialVersionUID  = null ;^31^^^^^^^[REPLACE] private static final long serialVersionUID = -1868088725461221010L;^ [CLASS] DescriptiveStatisticsImpl  
[REPLACE]^protected  long  windowSize;^34^^^^^^^[REPLACE] protected int windowSize;^ [CLASS] DescriptiveStatisticsImpl  
[REPLACE]^setWindowSize ( window ) ;^45^^^^^44^46^[REPLACE] this ( INFINITE_WINDOW ) ;^[METHOD] <init> [TYPE] DescriptiveStatisticsImpl() [PARAMETER] [CLASS] DescriptiveStatisticsImpl   [TYPE]  ResizableDoubleArray eDA  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int windowSize 
[ADD]^^45^^^^^44^46^[ADD] this ( INFINITE_WINDOW ) ;^[METHOD] <init> [TYPE] DescriptiveStatisticsImpl() [PARAMETER] [CLASS] DescriptiveStatisticsImpl   [TYPE]  ResizableDoubleArray eDA  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int windowSize 
[REPLACE]^eDA.addElement ( v ) ;^53^^^^^52^56^[REPLACE] super (  ) ;^[METHOD] <init> [TYPE] DescriptiveStatisticsImpl(int) [PARAMETER] int window [CLASS] DescriptiveStatisticsImpl   [TYPE]  ResizableDoubleArray eDA  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int window  windowSize 
[REPLACE]^eDA ;^54^^^^^52^56^[REPLACE] eDA = new ResizableDoubleArray (  ) ;^[METHOD] <init> [TYPE] DescriptiveStatisticsImpl(int) [PARAMETER] int window [CLASS] DescriptiveStatisticsImpl   [TYPE]  ResizableDoubleArray eDA  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int window  windowSize 
[REPLACE]^setWindowSize ( windowSize ) ;^55^^^^^52^56^[REPLACE] setWindowSize ( window ) ;^[METHOD] <init> [TYPE] DescriptiveStatisticsImpl(int) [PARAMETER] int window [CLASS] DescriptiveStatisticsImpl   [TYPE]  ResizableDoubleArray eDA  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int window  windowSize 
[REPLACE]^return copiedArray;^63^^^^^62^64^[REPLACE] return windowSize;^[METHOD] getWindowSize [TYPE] int [PARAMETER] [CLASS] DescriptiveStatisticsImpl   [TYPE]  ResizableDoubleArray eDA  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int window  windowSize 
[REPLACE]^double[] copiedArray = new double[eDA.getElements (  ) ];^71^^^^^69^79^[REPLACE] double[] copiedArray = new double[eDA.getNumElements (  ) ];^[METHOD] getValues [TYPE] double[] [PARAMETER] [CLASS] DescriptiveStatisticsImpl   [TYPE]  ResizableDoubleArray eDA  [TYPE]  boolean false  true  [TYPE]  double[] copiedArray  [TYPE]  long serialVersionUID  [TYPE]  int window  windowSize 
[REPLACE]^System.arraycopy ( eDA.getElements (  ) , 0 - 1, copiedArray,^72^73^74^75^^69^79^[REPLACE] System.arraycopy ( eDA.getElements (  ) , 0, copiedArray,^[METHOD] getValues [TYPE] double[] [PARAMETER] [CLASS] DescriptiveStatisticsImpl   [TYPE]  ResizableDoubleArray eDA  [TYPE]  boolean false  true  [TYPE]  double[] copiedArray  [TYPE]  long serialVersionUID  [TYPE]  int window  windowSize 
[REPLACE]^eDA.getNumElements (  ) , 0, copiedArray, 0,^73^74^75^76^^69^79^[REPLACE] eDA.getElements (  ) , 0, copiedArray, 0,^[METHOD] getValues [TYPE] double[] [PARAMETER] [CLASS] DescriptiveStatisticsImpl   [TYPE]  ResizableDoubleArray eDA  [TYPE]  boolean false  true  [TYPE]  double[] copiedArray  [TYPE]  long serialVersionUID  [TYPE]  int window  windowSize 
[REPLACE]^eDA.getElements (  )  ) ;^77^^^^^69^79^[REPLACE] eDA.getNumElements (  )  ) ;^[METHOD] getValues [TYPE] double[] [PARAMETER] [CLASS] DescriptiveStatisticsImpl   [TYPE]  ResizableDoubleArray eDA  [TYPE]  boolean false  true  [TYPE]  double[] copiedArray  [TYPE]  long serialVersionUID  [TYPE]  int window  windowSize 
[REPLACE]^return windowSize;^78^^^^^69^79^[REPLACE] return copiedArray;^[METHOD] getValues [TYPE] double[] [PARAMETER] [CLASS] DescriptiveStatisticsImpl   [TYPE]  ResizableDoubleArray eDA  [TYPE]  boolean false  true  [TYPE]  double[] copiedArray  [TYPE]  long serialVersionUID  [TYPE]  int window  windowSize 
[REPLACE]^return eDA.addElement ( index ) ;^85^^^^^84^86^[REPLACE] return eDA.getElement ( index ) ;^[METHOD] getElement [TYPE] double [PARAMETER] int index [CLASS] DescriptiveStatisticsImpl   [TYPE]  ResizableDoubleArray eDA  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int index  window  windowSize 
[REPLACE]^return eDA.getElements (  ) ;^92^^^^^91^93^[REPLACE] return eDA.getNumElements (  ) ;^[METHOD] getN [TYPE] long [PARAMETER] [CLASS] DescriptiveStatisticsImpl   [TYPE]  ResizableDoubleArray eDA  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int index  window  windowSize 
[REPLACE]^if  ( windowSize  ==  INFINITE_WINDOW )  {^99^^^^^98^108^[REPLACE] if  ( windowSize != INFINITE_WINDOW )  {^[METHOD] addValue [TYPE] void [PARAMETER] double v [CLASS] DescriptiveStatisticsImpl   [TYPE]  ResizableDoubleArray eDA  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int index  window  windowSize  [TYPE]  double v 
[REPLACE]^eDA .getElement ( windowSize )  ;^106^^^^^98^108^[REPLACE] eDA.addElement ( v ) ;^[METHOD] addValue [TYPE] void [PARAMETER] double v [CLASS] DescriptiveStatisticsImpl   [TYPE]  ResizableDoubleArray eDA  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int index  window  windowSize  [TYPE]  double v 
[ADD]^^106^^^^^98^108^[ADD] eDA.addElement ( v ) ;^[METHOD] addValue [TYPE] void [PARAMETER] double v [CLASS] DescriptiveStatisticsImpl   [TYPE]  ResizableDoubleArray eDA  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int index  window  windowSize  [TYPE]  double v 
[REPLACE]^if  (serialVersionUID (  )   !=  windowSize )  {^100^^^^^98^108^[REPLACE] if  ( getN (  )  == windowSize )  {^[METHOD] addValue [TYPE] void [PARAMETER] double v [CLASS] DescriptiveStatisticsImpl   [TYPE]  ResizableDoubleArray eDA  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int index  window  windowSize  [TYPE]  double v 
[REPLACE]^}  if  ( getN (  )   ==  windowSize )  {^102^^^^^98^108^[REPLACE] } else if  ( getN (  )  < windowSize )  {^[METHOD] addValue [TYPE] void [PARAMETER] double v [CLASS] DescriptiveStatisticsImpl   [TYPE]  ResizableDoubleArray eDA  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int index  window  windowSize  [TYPE]  double v 
[ADD]^}   eDA.addElement ( v ) ;^102^103^104^^^98^108^[ADD] else if  ( getN (  )  < windowSize )  { eDA.addElement ( v ) ; }^[METHOD] addValue [TYPE] void [PARAMETER] double v [CLASS] DescriptiveStatisticsImpl   [TYPE]  ResizableDoubleArray eDA  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int index  window  windowSize  [TYPE]  double v 
[REPLACE]^eDA.addElementRolling ( v ) ;^103^^^^^98^108^[REPLACE] eDA.addElement ( v ) ;^[METHOD] addValue [TYPE] void [PARAMETER] double v [CLASS] DescriptiveStatisticsImpl   [TYPE]  ResizableDoubleArray eDA  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int index  window  windowSize  [TYPE]  double v 
[REPLACE]^eDA.addElement ( v ) ;^101^^^^^98^108^[REPLACE] eDA.addElementRolling ( v ) ;^[METHOD] addValue [TYPE] void [PARAMETER] double v [CLASS] DescriptiveStatisticsImpl   [TYPE]  ResizableDoubleArray eDA  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int index  window  windowSize  [TYPE]  double v 
[REPLACE]^} else if  ( getN (  )   > serialVersionUID )  {^102^^^^^98^108^[REPLACE] } else if  ( getN (  )  < windowSize )  {^[METHOD] addValue [TYPE] void [PARAMETER] double v [CLASS] DescriptiveStatisticsImpl   [TYPE]  ResizableDoubleArray eDA  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int index  window  windowSize  [TYPE]  double v 
[REPLACE]^if  ( getN (  )   != serialVersionUID )  {^100^^^^^98^108^[REPLACE] if  ( getN (  )  == windowSize )  {^[METHOD] addValue [TYPE] void [PARAMETER] double v [CLASS] DescriptiveStatisticsImpl   [TYPE]  ResizableDoubleArray eDA  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int index  window  windowSize  [TYPE]  double v 
[REPLACE]^}  if  ( getN (  )   >  windowSize )  {^102^^^^^98^108^[REPLACE] } else if  ( getN (  )  < windowSize )  {^[METHOD] addValue [TYPE] void [PARAMETER] double v [CLASS] DescriptiveStatisticsImpl   [TYPE]  ResizableDoubleArray eDA  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int index  window  windowSize  [TYPE]  double v 
[ADD]^}^102^103^104^^^98^108^[ADD] else if  ( getN (  )  < windowSize )  { eDA.addElement ( v ) ; }^[METHOD] addValue [TYPE] void [PARAMETER] double v [CLASS] DescriptiveStatisticsImpl   [TYPE]  ResizableDoubleArray eDA  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int index  window  windowSize  [TYPE]  double v 
[ADD]^^101^^^^^98^108^[ADD] eDA.addElementRolling ( v ) ;^[METHOD] addValue [TYPE] void [PARAMETER] double v [CLASS] DescriptiveStatisticsImpl   [TYPE]  ResizableDoubleArray eDA  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int index  window  windowSize  [TYPE]  double v 
[REPLACE]^}  else {^102^^^^^98^108^[REPLACE] } else if  ( getN (  )  < windowSize )  {^[METHOD] addValue [TYPE] void [PARAMETER] double v [CLASS] DescriptiveStatisticsImpl   [TYPE]  ResizableDoubleArray eDA  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int index  window  windowSize  [TYPE]  double v 
[REPLACE]^eDA.start (  ) ;^114^^^^^113^115^[REPLACE] eDA.clear (  ) ;^[METHOD] clear [TYPE] void [PARAMETER] [CLASS] DescriptiveStatisticsImpl   [TYPE]  ResizableDoubleArray eDA  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int index  window  windowSize 
[REMOVE]^eDA.getNumElements (  )  ) ;^114^^^^^113^115^[REMOVE] ^[METHOD] clear [TYPE] void [PARAMETER] [CLASS] DescriptiveStatisticsImpl   [TYPE]  ResizableDoubleArray eDA  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int index  window  windowSize 
[REPLACE]^if  ( windowSize  <=  1 )  {^121^^^^^120^135^[REPLACE] if  ( windowSize < 1 )  {^[METHOD] setWindowSize [TYPE] void [PARAMETER] int windowSize [CLASS] DescriptiveStatisticsImpl   [TYPE]  ResizableDoubleArray eDA  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int index  window  windowSize 
[REPLACE]^if  ( windowSize  ==  INFINITE_WINDOW )  {^122^^^^^120^135^[REPLACE] if  ( windowSize != INFINITE_WINDOW )  {^[METHOD] setWindowSize [TYPE] void [PARAMETER] int windowSize [CLASS] DescriptiveStatisticsImpl   [TYPE]  ResizableDoubleArray eDA  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int index  window  windowSize 
[REPLACE]^return ;^123^^^^^120^135^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] setWindowSize [TYPE] void [PARAMETER] int windowSize [CLASS] DescriptiveStatisticsImpl   [TYPE]  ResizableDoubleArray eDA  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int index  window  windowSize 
[ADD]^^123^^^^^120^135^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] setWindowSize [TYPE] void [PARAMETER] int windowSize [CLASS] DescriptiveStatisticsImpl   [TYPE]  ResizableDoubleArray eDA  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int index  window  windowSize 
[REPLACE]^if  (window  ==  INFINITE_WINDOW )  {^122^^^^^120^135^[REPLACE] if  ( windowSize != INFINITE_WINDOW )  {^[METHOD] setWindowSize [TYPE] void [PARAMETER] int windowSize [CLASS] DescriptiveStatisticsImpl   [TYPE]  ResizableDoubleArray eDA  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int index  window  windowSize 
[ADD]^^122^123^124^^^120^135^[ADD] if  ( windowSize != INFINITE_WINDOW )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] setWindowSize [TYPE] void [PARAMETER] int windowSize [CLASS] DescriptiveStatisticsImpl   [TYPE]  ResizableDoubleArray eDA  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int index  window  windowSize 
[REPLACE]^this.windowSize =  window;^127^^^^^120^135^[REPLACE] this.windowSize = windowSize;^[METHOD] setWindowSize [TYPE] void [PARAMETER] int windowSize [CLASS] DescriptiveStatisticsImpl   [TYPE]  ResizableDoubleArray eDA  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int index  window  windowSize 
[REPLACE]^if  ( windowSize != INFINITE_WINDOW ) {^132^^^^^120^135^[REPLACE] if  ( windowSize != INFINITE_WINDOW && windowSize < eDA.getNumElements (  )  )  {^[METHOD] setWindowSize [TYPE] void [PARAMETER] int windowSize [CLASS] DescriptiveStatisticsImpl   [TYPE]  ResizableDoubleArray eDA  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int index  window  windowSize 
[REPLACE]^eDA.discardFrontElements ( eDA.getNumElements (  )   ||  windowSize ) ;^133^^^^^120^135^[REPLACE] eDA.discardFrontElements ( eDA.getNumElements (  )  - windowSize ) ;^[METHOD] setWindowSize [TYPE] void [PARAMETER] int windowSize [CLASS] DescriptiveStatisticsImpl   [TYPE]  ResizableDoubleArray eDA  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int index  window  windowSize 
[ADD]^^133^^^^^120^135^[ADD] eDA.discardFrontElements ( eDA.getNumElements (  )  - windowSize ) ;^[METHOD] setWindowSize [TYPE] void [PARAMETER] int windowSize [CLASS] DescriptiveStatisticsImpl   [TYPE]  ResizableDoubleArray eDA  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int index  window  windowSize 
[REPLACE]^eDA.discardFrontElements ( eDA.getElement (  )  - windowSize ) ;^133^^^^^120^135^[REPLACE] eDA.discardFrontElements ( eDA.getNumElements (  )  - windowSize ) ;^[METHOD] setWindowSize [TYPE] void [PARAMETER] int windowSize [CLASS] DescriptiveStatisticsImpl   [TYPE]  ResizableDoubleArray eDA  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int index  window  windowSize 
[REPLACE]^return stat.evaluate ( eDA.getValues (  ) , eDA.clear (  ) , eDA.getNumElements (  )  ) ;^143^^^^^142^144^[REPLACE] return stat.evaluate ( eDA.getValues (  ) , eDA.start (  ) , eDA.getNumElements (  )  ) ;^[METHOD] apply [TYPE] double [PARAMETER] UnivariateStatistic stat [CLASS] DescriptiveStatisticsImpl   [TYPE]  ResizableDoubleArray eDA  [TYPE]  boolean false  true  [TYPE]  UnivariateStatistic stat  [TYPE]  long serialVersionUID  [TYPE]  int index  window  windowSize 
