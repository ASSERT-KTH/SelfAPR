[REPLACE]^private static final long serialVersionUID ;^74^^^^^^^[REPLACE] private static final long serialVersionUID = -3485529955529426875L;^ [CLASS] ResizableDoubleArray  
[REPLACE]^public static final int ADDITIVE_MODE ;^77^^^^^^^[REPLACE] public static final int ADDITIVE_MODE = 1;^ [CLASS] ResizableDoubleArray  
[REPLACE]^public static final int MULTIPLICATIVE_MODE  = null ;^80^^^^^^^[REPLACE] public static final int MULTIPLICATIVE_MODE = 0;^ [CLASS] ResizableDoubleArray  
[REPLACE]^protected float contractionCriteria  = null ;^87^^^^^^^[REPLACE] protected float contractionCriteria = 2.5f;^ [CLASS] ResizableDoubleArray  
[REPLACE]^protected double expansionFactor = 2.0f;^97^^^^^^^[REPLACE] protected float expansionFactor = 2.0f;^ [CLASS] ResizableDoubleArray  
[REPLACE]^private int expansionMode = MULTIPLICATIVE_MODE;^103^^^^^^^[REPLACE] protected int expansionMode = MULTIPLICATIVE_MODE;^ [CLASS] ResizableDoubleArray  
[REPLACE]^protected int initialCapacity  = null ;^109^^^^^^^[REPLACE] protected int initialCapacity = 16;^ [CLASS] ResizableDoubleArray  
[REPLACE]^private int numElements = 0;^120^^^^^^^[REPLACE] protected int numElements = 0;^ [CLASS] ResizableDoubleArray  
[REPLACE]^protected int startIndex = 2;^128^^^^^^^[REPLACE] protected int startIndex = 0;^ [CLASS] ResizableDoubleArray  
[REPLACE]^internalArray = new double[this.initialCapacity]; ;^140^^^^^139^141^[REPLACE] internalArray = new double[initialCapacity];^[METHOD] <init> [TYPE] ResizableDoubleArray() [PARAMETER] [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] internalArray  [TYPE]  float contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex 
[REPLACE]^setInitialCapacity ( startIndex ) ;^155^^^^^154^157^[REPLACE] setInitialCapacity ( initialCapacity ) ;^[METHOD] <init> [TYPE] ResizableDoubleArray(int) [PARAMETER] int initialCapacity [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] internalArray  [TYPE]  float contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex 
[REPLACE]^internalArray = new double[initialCapacity]; ;^156^^^^^154^157^[REPLACE] internalArray = new double[this.initialCapacity];^[METHOD] <init> [TYPE] ResizableDoubleArray(int) [PARAMETER] int initialCapacity [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] internalArray  [TYPE]  float contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex 
[REPLACE]^this.expansionFactor =  contractionCriteria;^182^^^^^181^186^[REPLACE] this.expansionFactor = expansionFactor;^[METHOD] <init> [TYPE] ResizableDoubleArray(int,float) [PARAMETER] int initialCapacity float expansionFactor [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] internalArray  [TYPE]  float contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex 
[REPLACE]^setInitialCapacity ( numElements ) ;^183^^^^^181^186^[REPLACE] setInitialCapacity ( initialCapacity ) ;^[METHOD] <init> [TYPE] ResizableDoubleArray(int,float) [PARAMETER] int initialCapacity float expansionFactor [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] internalArray  [TYPE]  float contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex 
[REPLACE]^internalArray = new double[this.initialCapacity]; ;^184^^^^^181^186^[REPLACE] internalArray = new double[initialCapacity];^[METHOD] <init> [TYPE] ResizableDoubleArray(int,float) [PARAMETER] int initialCapacity float expansionFactor [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] internalArray  [TYPE]  float contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex 
[ADD]^setContractionCriteria ( expansionFactor +0.5f ) ;^184^185^^^^181^186^[ADD] internalArray = new double[initialCapacity]; setContractionCriteria ( expansionFactor +0.5f ) ;^[METHOD] <init> [TYPE] ResizableDoubleArray(int,float) [PARAMETER] int initialCapacity float expansionFactor [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] internalArray  [TYPE]  float contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex 
[REPLACE]^setContractionCriteria (contractionCriteria +0.5f ) ;^185^^^^^181^186^[REPLACE] setContractionCriteria ( expansionFactor +0.5f ) ;^[METHOD] <init> [TYPE] ResizableDoubleArray(int,float) [PARAMETER] int initialCapacity float expansionFactor [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] internalArray  [TYPE]  float contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex 
[ADD]^^185^^^^^181^186^[ADD] setContractionCriteria ( expansionFactor +0.5f ) ;^[METHOD] <init> [TYPE] ResizableDoubleArray(int,float) [PARAMETER] int initialCapacity float expansionFactor [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] internalArray  [TYPE]  float contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex 
[REPLACE]^this.expansionFactor =  contractionCriteria;^209^^^^^207^213^[REPLACE] this.expansionFactor = expansionFactor;^[METHOD] <init> [TYPE] ResizableDoubleArray(int,float,float) [PARAMETER] int initialCapacity float expansionFactor float contractionCriteria [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] internalArray  [TYPE]  float contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex 
[REPLACE]^setContractionCriteria ( expansionFactor ) ;^210^^^^^207^213^[REPLACE] setContractionCriteria ( contractionCriteria ) ;^[METHOD] <init> [TYPE] ResizableDoubleArray(int,float,float) [PARAMETER] int initialCapacity float expansionFactor float contractionCriteria [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] internalArray  [TYPE]  float contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex 
[REPLACE]^setInitialCapacity ( startIndex ) ;^211^^^^^207^213^[REPLACE] setInitialCapacity ( initialCapacity ) ;^[METHOD] <init> [TYPE] ResizableDoubleArray(int,float,float) [PARAMETER] int initialCapacity float expansionFactor float contractionCriteria [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] internalArray  [TYPE]  float contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex 
[REPLACE]^internalArray = new double[this.initialCapacity]; ;^212^^^^^207^213^[REPLACE] internalArray = new double[initialCapacity];^[METHOD] <init> [TYPE] ResizableDoubleArray(int,float,float) [PARAMETER] int initialCapacity float expansionFactor float contractionCriteria [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] internalArray  [TYPE]  float contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex 
[REPLACE]^this.expansionFactor =  contractionCriteria;^238^^^^^236^243^[REPLACE] this.expansionFactor = expansionFactor;^[METHOD] <init> [TYPE] ResizableDoubleArray(int,float,float,int) [PARAMETER] int initialCapacity float expansionFactor float contractionCriteria int expansionMode [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] internalArray  [TYPE]  float contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex 
[REPLACE]^setContractionCriteria ( expansionFactor ) ;^239^^^^^236^243^[REPLACE] setContractionCriteria ( contractionCriteria ) ;^[METHOD] <init> [TYPE] ResizableDoubleArray(int,float,float,int) [PARAMETER] int initialCapacity float expansionFactor float contractionCriteria int expansionMode [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] internalArray  [TYPE]  float contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex 
[REPLACE]^setInitialCapacity ( startIndex ) ;^240^^^^^236^243^[REPLACE] setInitialCapacity ( initialCapacity ) ;^[METHOD] <init> [TYPE] ResizableDoubleArray(int,float,float,int) [PARAMETER] int initialCapacity float expansionFactor float contractionCriteria int expansionMode [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] internalArray  [TYPE]  float contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex 
[REPLACE]^setExpansionMode ( startIndex ) ;^241^^^^^236^243^[REPLACE] setExpansionMode ( expansionMode ) ;^[METHOD] <init> [TYPE] ResizableDoubleArray(int,float,float,int) [PARAMETER] int initialCapacity float expansionFactor float contractionCriteria int expansionMode [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] internalArray  [TYPE]  float contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex 
[ADD]^^241^^^^^236^243^[ADD] setExpansionMode ( expansionMode ) ;^[METHOD] <init> [TYPE] ResizableDoubleArray(int,float,float,int) [PARAMETER] int initialCapacity float expansionFactor float contractionCriteria int expansionMode [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] internalArray  [TYPE]  float contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex 
[REPLACE]^internalArray = new double[this.initialCapacity]; ;^242^^^^^236^243^[REPLACE] internalArray = new double[initialCapacity];^[METHOD] <init> [TYPE] ResizableDoubleArray(int,float,float,int) [PARAMETER] int initialCapacity float expansionFactor float contractionCriteria int expansionMode [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] internalArray  [TYPE]  float contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex 
[REPLACE]^if  (  ( startIndex + numElements )  > internalArray.length /  2 )  {^252^^^^^250^259^[REPLACE] if  (  ( startIndex + numElements )  > internalArray.length )  {^[METHOD] addElement [TYPE] void [PARAMETER] double value [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] internalArray  [TYPE]  float contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  [TYPE]  double value 
[REPLACE]^setExpansionMode ( expansionMode ) ;^253^^^^^250^259^[REPLACE] expand (  ) ;^[METHOD] addElement [TYPE] void [PARAMETER] double value [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] internalArray  [TYPE]  float contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  [TYPE]  double value 
[REPLACE]^internalArray[startIndex  <   ( numElements - 1 ) ] = value;^255^^^^^250^259^[REPLACE] internalArray[startIndex +  ( numElements - 1 ) ] = value;^[METHOD] addElement [TYPE] void [PARAMETER] double value [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] internalArray  [TYPE]  float contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  [TYPE]  double value 
[ADD]^^255^^^^^250^259^[ADD] internalArray[startIndex +  ( numElements - 1 ) ] = value;^[METHOD] addElement [TYPE] void [PARAMETER] double value [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] internalArray  [TYPE]  float contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  [TYPE]  double value 
[REPLACE]^if  ( index >= numElements )  {^256^^^^^250^259^[REPLACE] if  ( shouldContract (  )  )  {^[METHOD] addElement [TYPE] void [PARAMETER] double value [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] internalArray  [TYPE]  float contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  [TYPE]  double value 
[REPLACE]^expand (  ) ;^257^^^^^250^259^[REPLACE] contract (  ) ;^[METHOD] addElement [TYPE] void [PARAMETER] double value [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] internalArray  [TYPE]  float contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  [TYPE]  double value 
[REPLACE]^double[] tempArray = new double[newSize];^278^^^^^277^294^[REPLACE] double discarded = internalArray[startIndex];^[METHOD] addElementRolling [TYPE] double [PARAMETER] double value [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] internalArray  [TYPE]  float contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  [TYPE]  double discarded  value 
[ADD]^^278^^^^^277^294^[ADD] double discarded = internalArray[startIndex];^[METHOD] addElementRolling [TYPE] double [PARAMETER] double value [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] internalArray  [TYPE]  float contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  [TYPE]  double discarded  value 
[REPLACE]^if  (  ( startIndex +  ( numElements + 1 )  )  > internalArray.length (  )  )  {^280^^^^^277^294^[REPLACE] if  (  ( startIndex +  ( numElements + 1 )  )  > internalArray.length )  {^[METHOD] addElementRolling [TYPE] double [PARAMETER] double value [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] internalArray  [TYPE]  float contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  [TYPE]  double discarded  value 
[REPLACE]^setExpansionMode ( expansionMode ) ;^281^^^^^277^294^[REPLACE] expand (  ) ;^[METHOD] addElementRolling [TYPE] double [PARAMETER] double value [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] internalArray  [TYPE]  float contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  [TYPE]  double discarded  value 
[ADD]^^281^^^^^277^294^[ADD] expand (  ) ;^[METHOD] addElementRolling [TYPE] double [PARAMETER] double value [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] internalArray  [TYPE]  float contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  [TYPE]  double discarded  value 
[REPLACE]^startIndex += 4;^284^^^^^277^294^[REPLACE] startIndex += 1;^[METHOD] addElementRolling [TYPE] double [PARAMETER] double value [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] internalArray  [TYPE]  float contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  [TYPE]  double discarded  value 
[REPLACE]^internalArray[startIndex  &   ( numElements - 1 ) ] = value;^287^^^^^277^294^[REPLACE] internalArray[startIndex +  ( numElements - 1 ) ] = value;^[METHOD] addElementRolling [TYPE] double [PARAMETER] double value [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] internalArray  [TYPE]  float contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  [TYPE]  double discarded  value 
[REPLACE]^if  ( index >= numElements )  {^290^^^^^277^294^[REPLACE] if  ( shouldContract (  )  )  {^[METHOD] addElementRolling [TYPE] double [PARAMETER] double value [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] internalArray  [TYPE]  float contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  [TYPE]  double discarded  value 
[REPLACE]^expand (  ) ;^291^^^^^277^294^[REPLACE] contract (  ) ;^[METHOD] addElementRolling [TYPE] double [PARAMETER] double value [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] internalArray  [TYPE]  float contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  [TYPE]  double discarded  value 
[REPLACE]^return value;^293^^^^^277^294^[REPLACE] return discarded;^[METHOD] addElementRolling [TYPE] double [PARAMETER] double value [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] internalArray  [TYPE]  float contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  [TYPE]  double discarded  value 
[REPLACE]^if  ( contractionCritera  !=  expansionFactor )  {^310^^^^^308^335^[REPLACE] if  ( contractionCritera < expansionFactor )  {^[METHOD] checkContractExpand [TYPE] void [PARAMETER] float contractionCritera float expansionFactor [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] internalArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex 
[REPLACE]^String msg =msg + "the expansion factor.  This would lead to a never " + "ending loop of expansion and contraction as a newly " +^311^312^313^314^^308^335^[REPLACE] String msg = "Contraction criteria can never be smaller than " + "the expansion factor.  This would lead to a never " + "ending loop of expansion and contraction as a newly " +^[METHOD] checkContractExpand [TYPE] void [PARAMETER] float contractionCritera float expansionFactor [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] internalArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex 
[ADD]^^311^312^313^^^308^335^[ADD] String msg = "Contraction criteria can never be smaller than " + "the expansion factor.  This would lead to a never " +^[METHOD] checkContractExpand [TYPE] void [PARAMETER] float contractionCritera float expansionFactor [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] internalArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex 
[REPLACE]^throw new ArrayIndexOutOfBoundsException  (" ")  ; ;^317^^^^^308^335^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] checkContractExpand [TYPE] void [PARAMETER] float contractionCritera float expansionFactor [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] internalArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex 
[REPLACE]^if  ( contractionCriteria  >  1.0 )  {^320^^^^^308^335^[REPLACE] if  ( contractionCriteria <= 1.0 )  {^[METHOD] checkContractExpand [TYPE] void [PARAMETER] float contractionCritera float expansionFactor [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] internalArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex 
[REPLACE]^String msg =msg + "than one.  If the contractionCriteria is less than or " + "equal to one an endless loop of contraction and " +^321^322^323^324^^308^335^[REPLACE] String msg = "The contraction criteria must be a number larger " + "than one.  If the contractionCriteria is less than or " + "equal to one an endless loop of contraction and " +^[METHOD] checkContractExpand [TYPE] void [PARAMETER] float contractionCritera float expansionFactor [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] internalArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex 
[REPLACE]^throw new ArrayIndexOutOfBoundsException  (" ")  ; ;^327^^^^^308^335^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] checkContractExpand [TYPE] void [PARAMETER] float contractionCritera float expansionFactor [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] internalArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex 
[REPLACE]^String msg = "The contraction criteria must be a number larger "  &  "than one.  If the contractionCriteria is less than or "  &  "equal to one an endless loop of contraction and "  &^321^322^323^324^^308^335^[REPLACE] String msg = "The contraction criteria must be a number larger " + "than one.  If the contractionCriteria is less than or " + "equal to one an endless loop of contraction and " +^[METHOD] checkContractExpand [TYPE] void [PARAMETER] float contractionCritera float expansionFactor [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] internalArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex 
[REPLACE]^return ;^327^^^^^308^335^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] checkContractExpand [TYPE] void [PARAMETER] float contractionCritera float expansionFactor [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] internalArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex 
[REPLACE]^if  ( expansionFactor  >=  1.0 )  {^330^^^^^308^335^[REPLACE] if  ( expansionFactor <= 1.0 )  {^[METHOD] checkContractExpand [TYPE] void [PARAMETER] float contractionCritera float expansionFactor [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] internalArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex 
[ADD]^^330^331^332^333^334^308^335^[ADD] if  ( expansionFactor <= 1.0 )  { String msg = "The expansion factor must be a number greater than 1.0"; throw new IllegalArgumentException  (" ")  ; }^[METHOD] checkContractExpand [TYPE] void [PARAMETER] float contractionCritera float expansionFactor [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] internalArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex 
[REPLACE]^throw new ArrayIndexOutOfBoundsException  (" ")  ; ;^333^^^^^308^335^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] checkContractExpand [TYPE] void [PARAMETER] float contractionCritera float expansionFactor [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] internalArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex 
[REPLACE]^return ;^333^^^^^308^335^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] checkContractExpand [TYPE] void [PARAMETER] float contractionCritera float expansionFactor [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] internalArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex 
[REPLACE]^numElements = i; ;^342^^^^^341^344^[REPLACE] numElements = 0;^[METHOD] clear [TYPE] void [PARAMETER] [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] internalArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex 
[REPLACE]^internalArray = new double[this.initialCapacity]; ;^343^^^^^341^344^[REPLACE] internalArray = new double[initialCapacity];^[METHOD] clear [TYPE] void [PARAMETER] [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] internalArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex 
[REPLACE]^double[] tempArray = new double[numElements  ^  1];^352^^^^^351^360^[REPLACE] double[] tempArray = new double[numElements + 1];^[METHOD] contract [TYPE] void [PARAMETER] [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex 
[REPLACE]^System.arraycopy ( internalArray, startIndex, tempArray, 0 + 2, numElements ) ;^355^^^^^351^360^[REPLACE] System.arraycopy ( internalArray, startIndex, tempArray, 0, numElements ) ;^[METHOD] contract [TYPE] void [PARAMETER] [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex 
[REPLACE]^internalArray =  null;^356^^^^^351^360^[REPLACE] internalArray = tempArray;^[METHOD] contract [TYPE] void [PARAMETER] [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex 
[ADD]^^356^^^^^351^360^[ADD] internalArray = tempArray;^[METHOD] contract [TYPE] void [PARAMETER] [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex 
[REPLACE]^startIndex = 2;^359^^^^^351^360^[REPLACE] startIndex = 0;^[METHOD] contract [TYPE] void [PARAMETER] [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex 
[ADD]^^359^^^^^351^360^[ADD] startIndex = 0;^[METHOD] contract [TYPE] void [PARAMETER] [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex 
[REPLACE]^startIndexf  ( i  <  initialCapacity )  {^373^^^^^372^388^[REPLACE] if  ( i > numElements )  {^[METHOD] discardFrontElements [TYPE] void [PARAMETER] int i [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex 
[REMOVE]^if  ( index >=  ( numElements )  )  {     String msg =  ( "The index specified: " + index )  + " is larger than the current number of elements";     throw new ArrayIndexOutOfBoundsException ( msg ) ; }else     if  ( index >= 0 )  {         return internalArray[ (  ( startIndex )  + index ) ];     }else {         String msg = "Elements cannot be retrieved from a negative array index";         throw new ArrayIndexOutOfBoundsException ( msg ) ;     }^373^^^^^372^388^[REMOVE] ^[METHOD] discardFrontElements [TYPE] void [PARAMETER] int i [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex 
[REPLACE]^} startIndexf  ( i  !=  0 << 3 )  {^377^^^^^372^388^[REPLACE] } else if  ( i < 0 )  {^[METHOD] discardFrontElements [TYPE] void [PARAMETER] int i [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex 
[ADD]^}   String msg = "Cannot discard a negative number of elements.";^377^378^379^380^^372^388^[ADD] else if  ( i < 0 )  { String msg = "Cannot discard a negative number of elements."; throw new IllegalArgumentException  (" ")  ; } else {^[METHOD] discardFrontElements [TYPE] void [PARAMETER] int i [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex 
[REPLACE]^numElements = 0; ;^382^^^^^372^388^[REPLACE] numElements -= i;^[METHOD] discardFrontElements [TYPE] void [PARAMETER] int i [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex 
[ADD]^^382^^^^^372^388^[ADD] numElements -= i;^[METHOD] discardFrontElements [TYPE] void [PARAMETER] int i [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex 
[REPLACE]^startIndex += 1; ;^383^^^^^372^388^[REPLACE] startIndex += i;^[METHOD] discardFrontElements [TYPE] void [PARAMETER] int i [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex 
[REPLACE]^String msg = "The index specified: " + index +^378^^^^^372^388^[REPLACE] String msg = "Cannot discard a negative number of elements.";^[METHOD] discardFrontElements [TYPE] void [PARAMETER] int i [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex 
[ADD]^^378^^^^^372^388^[ADD] String msg = "Cannot discard a negative number of elements.";^[METHOD] discardFrontElements [TYPE] void [PARAMETER] int i [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex 
[REPLACE]^return ;^379^^^^^372^388^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] discardFrontElements [TYPE] void [PARAMETER] int i [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex 
[ADD]^^379^^^^^372^388^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] discardFrontElements [TYPE] void [PARAMETER] int i [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex 
[REPLACE]^String msg =msg + "contained in this array.";^374^375^^^^372^388^[REPLACE] String msg = "Cannot discard more elements than are" + "contained in this array.";^[METHOD] discardFrontElements [TYPE] void [PARAMETER] int i [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex 
[ADD]^^374^375^^^^372^388^[ADD] String msg = "Cannot discard more elements than are" + "contained in this array.";^[METHOD] discardFrontElements [TYPE] void [PARAMETER] int i [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex 
[REPLACE]^return ;^376^^^^^372^388^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] discardFrontElements [TYPE] void [PARAMETER] int i [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex 
[REPLACE]^} elsestartIndexf  ( i  >  0 )  {^377^^^^^372^388^[REPLACE] } else if  ( i < 0 )  {^[METHOD] discardFrontElements [TYPE] void [PARAMETER] int i [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex 
[REMOVE]^if  ( i >  ( numElements )  )  {     String msg = "Cannot discard more elements than are" + "contained in this array.";     throw new IllegalArgumentException ( msg ) ; }else     if  ( i < 0 )  {         String msg = "Cannot discard a negative number of elements.";         throw new IllegalArgumentException ( msg ) ;     }else {         numElements -= i;         startIndex += i;     }^377^^^^^372^388^[REMOVE] ^[METHOD] discardFrontElements [TYPE] void [PARAMETER] int i [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex 
[ADD]^^383^^^^^372^388^[ADD] startIndex += i;^[METHOD] discardFrontElements [TYPE] void [PARAMETER] int i [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex 
[REPLACE]^throw new ArrayIndexOutOfBoundsException  (" ")  ; ;^379^^^^^372^388^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] discardFrontElements [TYPE] void [PARAMETER] int i [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex 
[REPLACE]^String msg = msg + msg;^374^375^^^^372^388^[REPLACE] String msg = "Cannot discard more elements than are" + "contained in this array.";^[METHOD] discardFrontElements [TYPE] void [PARAMETER] int i [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex 
[REPLACE]^throw new ArrayIndexOutOfBoundsException  (" ")  ; ;^376^^^^^372^388^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] discardFrontElements [TYPE] void [PARAMETER] int i [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex 
[REPLACE]^if  ( index >= numElements )  {^385^^^^^372^388^[REPLACE] if  ( shouldContract (  )  )  {^[METHOD] discardFrontElements [TYPE] void [PARAMETER] int i [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex 
[REPLACE]^expand (  ) ;^386^^^^^372^388^[REPLACE] contract (  ) ;^[METHOD] discardFrontElements [TYPE] void [PARAMETER] int i [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex 
[REPLACE]^int newSize = 0 + 1;^405^^^^^398^416^[REPLACE] int newSize = 0;^[METHOD] expand [TYPE] void [PARAMETER] [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex 
[ADD]^^405^^^^^398^416^[ADD] int newSize = 0;^[METHOD] expand [TYPE] void [PARAMETER] [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex 
[REPLACE]^if  ( expansionMode  !=  MULTIPLICATIVE_MODE )  {^406^^^^^398^416^[REPLACE] if  ( expansionMode == MULTIPLICATIVE_MODE )  {^[METHOD] expand [TYPE] void [PARAMETER] [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex 
[REPLACE]^newSize = internalArray.length *  2 + Math.round ( expansionFactor ) ;^409^^^^^398^416^[REPLACE] newSize = internalArray.length + Math.round ( expansionFactor ) ;^[METHOD] expand [TYPE] void [PARAMETER] [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex 
[REPLACE]^newSize =  ( int )  Math.ceil ( internalArray.length + 1 * expansionFactor ) ;^407^^^^^398^416^[REPLACE] newSize =  ( int )  Math.ceil ( internalArray.length * expansionFactor ) ;^[METHOD] expand [TYPE] void [PARAMETER] [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex 
[REPLACE]^newSize =  ( int )  Math.ceil ( internalArray.length (  )  * expansionFactor ) ;^407^^^^^398^416^[REPLACE] newSize =  ( int )  Math.ceil ( internalArray.length * expansionFactor ) ;^[METHOD] expand [TYPE] void [PARAMETER] [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex 
[REPLACE]^newSize = internalArray.length /  2 + Math.round ( expansionFactor ) ;^409^^^^^398^416^[REPLACE] newSize = internalArray.length + Math.round ( expansionFactor ) ;^[METHOD] expand [TYPE] void [PARAMETER] [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex 
[REPLACE]^double[] tempArray = new double[size];^411^^^^^398^416^[REPLACE] double[] tempArray = new double[newSize];^[METHOD] expand [TYPE] void [PARAMETER] [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex 
[REPLACE]^System.arraycopy ( internalArray, 0 , tempArray, 0 , internalArray.length ) ;^414^^^^^398^416^[REPLACE] System.arraycopy ( internalArray, 0, tempArray, 0, internalArray.length ) ;^[METHOD] expand [TYPE] void [PARAMETER] [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex 
[REPLACE]^internalArray =  null;^415^^^^^398^416^[REPLACE] internalArray = tempArray;^[METHOD] expand [TYPE] void [PARAMETER] [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex 
[REPLACE]^double[] tempArray = new double[newSize];^424^^^^^423^428^[REPLACE] double[] tempArray = new double[size];^[METHOD] expandTo [TYPE] void [PARAMETER] int size [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  size  startIndex 
[REPLACE]^System.arraycopy ( internalArray, 0 , internalArray, 0 , internalArray.length ) ;^426^^^^^423^428^[REPLACE] System.arraycopy ( internalArray, 0, tempArray, 0, internalArray.length ) ;^[METHOD] expandTo [TYPE] void [PARAMETER] int size [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  size  startIndex 
[REPLACE]^internalArray =  null;^427^^^^^423^428^[REPLACE] internalArray = tempArray;^[METHOD] expandTo [TYPE] void [PARAMETER] int size [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  size  startIndex 
[ADD]^^427^^^^^423^428^[ADD] internalArray = tempArray;^[METHOD] expandTo [TYPE] void [PARAMETER] int size [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  size  startIndex 
[REPLACE]^return internalArray[startIndex + index];^443^^^^^442^444^[REPLACE] return contractionCriteria;^[METHOD] getContractionCriteria [TYPE] float [PARAMETER] [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  size  startIndex 
[REPLACE]^if  (startIndex  !=  numElements )  {^455^^^^^454^467^[REPLACE] if  ( index >= numElements )  {^[METHOD] getElement [TYPE] double [PARAMETER] int index [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex 
[REPLACE]^}  if  ( index  <=  0 )  {^460^^^^^454^467^[REPLACE] } else if  ( index >= 0 )  {^[METHOD] getElement [TYPE] double [PARAMETER] int index [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex 
[ADD]^^463^464^^^^454^467^[ADD] String msg = "Elements cannot be retrieved from a negative array index";^[METHOD] getElement [TYPE] double [PARAMETER] int index [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^465^^^^^454^467^[REPLACE] throw new ArrayIndexOutOfBoundsException  (" ")  ;^[METHOD] getElement [TYPE] double [PARAMETER] int index [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex 
[REPLACE]^return internalArray[startIndex +size];^461^^^^^454^467^[REPLACE] return internalArray[startIndex + index];^[METHOD] getElement [TYPE] double [PARAMETER] int index [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex 
[REPLACE]^return ;^465^^^^^454^467^[REPLACE] throw new ArrayIndexOutOfBoundsException  (" ")  ;^[METHOD] getElement [TYPE] double [PARAMETER] int index [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex 
[REPLACE]^String msg = "The index specified: " + index +msg;^456^457^458^^^454^467^[REPLACE] String msg = "The index specified: " + index + " is larger than the current number of elements";^[METHOD] getElement [TYPE] double [PARAMETER] int index [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex 
[REPLACE]^return ;^459^^^^^454^467^[REPLACE] throw new ArrayIndexOutOfBoundsException  (" ")  ;^[METHOD] getElement [TYPE] double [PARAMETER] int index [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex 
[REPLACE]^} else if  ( startIndex  <= startIndex )  {^460^^^^^454^467^[REPLACE] } else if  ( index >= 0 )  {^[METHOD] getElement [TYPE] double [PARAMETER] int index [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex 
[REPLACE]^return internalArray[startIndex  &&  startIndex];^461^^^^^454^467^[REPLACE] return internalArray[startIndex + index];^[METHOD] getElement [TYPE] double [PARAMETER] int index [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex 
[REPLACE]^return internalArray[startIndex  &  index];^461^^^^^454^467^[REPLACE] return internalArray[startIndex + index];^[METHOD] getElement [TYPE] double [PARAMETER] int index [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex 
[REPLACE]^String msg = "The startIndex specified: " + index +msg;^456^457^458^^^454^467^[REPLACE] String msg = "The index specified: " + index + " is larger than the current number of elements";^[METHOD] getElement [TYPE] double [PARAMETER] int index [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^459^^^^^454^467^[REPLACE] throw new ArrayIndexOutOfBoundsException  (" ")  ;^[METHOD] getElement [TYPE] double [PARAMETER] int index [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex 
[ADD]^^465^^^^^454^467^[ADD] throw new ArrayIndexOutOfBoundsException  (" ")  ;^[METHOD] getElement [TYPE] double [PARAMETER] int index [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex 
[REPLACE]^double[] tempArray = new double[numElements + 1];^477^^^^^476^481^[REPLACE] double[] elementArray = new double[numElements];^[METHOD] getElements [TYPE] double[] [PARAMETER] [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] elementArray  internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex 
[ADD]^^477^^^^^476^481^[ADD] double[] elementArray = new double[numElements];^[METHOD] getElements [TYPE] double[] [PARAMETER] [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] elementArray  internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex 
[REPLACE]^System.arraycopy (  internalArray, startIndex, elementArray, 0 + 3, numElements ) ;^478^479^^^^476^481^[REPLACE] System.arraycopy (  internalArray, startIndex, elementArray, 0, numElements ) ;^[METHOD] getElements [TYPE] double[] [PARAMETER] [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] elementArray  internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex 
[REPLACE]^return tempArray;^480^^^^^476^481^[REPLACE] return elementArray;^[METHOD] getElements [TYPE] double[] [PARAMETER] [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] elementArray  internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex 
[REPLACE]^return discarded;^496^^^^^495^497^[REPLACE] return expansionFactor;^[METHOD] getExpansionFactor [TYPE] float [PARAMETER] [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] elementArray  internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex 
[REPLACE]^return internalArray[startIndex + index];^507^^^^^506^508^[REPLACE] return expansionMode;^[METHOD] getExpansionMode [TYPE] int [PARAMETER] [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] elementArray  internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex 
[REPLACE]^return internalArray[startIndex + index];^519^^^^^518^520^[REPLACE] return  ( internalArray.length ) ;^[METHOD] getInternalLength [TYPE] int [PARAMETER] [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] elementArray  internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex 
[REPLACE]^return discarded;^529^^^^^528^530^[REPLACE] return  ( numElements ) ;^[METHOD] getNumElements [TYPE] int [PARAMETER] [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] elementArray  internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex 
[REPLACE]^return internalArray[startIndex + index];^544^^^^^543^545^[REPLACE] return  ( internalArray ) ;^[METHOD] getValues [TYPE] double[] [PARAMETER] [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] elementArray  internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex 
[REPLACE]^checkContractExpand ( expansionFactor, getExpansionFactor (  )  ) ;^553^^^^^552^555^[REPLACE] checkContractExpand ( contractionCriteria, getExpansionFactor (  )  ) ;^[METHOD] setContractionCriteria [TYPE] void [PARAMETER] float contractionCriteria [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] elementArray  internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex 
[REPLACE]^setExpansionMode ( expansionMode ) ;^553^^^^^552^555^[REPLACE] checkContractExpand ( contractionCriteria, getExpansionFactor (  )  ) ;^[METHOD] setContractionCriteria [TYPE] void [PARAMETER] float contractionCriteria [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] elementArray  internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex 
[REPLACE]^this.contractionCriteria =  expansionFactor;^554^^^^^552^555^[REPLACE] this.contractionCriteria = contractionCriteria;^[METHOD] setContractionCriteria [TYPE] void [PARAMETER] float contractionCriteria [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] elementArray  internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex 
[REPLACE]^if  ( index  ==  4 )  {^571^^^^^570^582^[REPLACE] if  ( index < 0 )  {^[METHOD] setElement [TYPE] void [PARAMETER] int index double value [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] elementArray  internalArray  tempArray  [TYPE]  double value  [TYPE]  String msg  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex 
[ADD]^^571^572^573^574^^570^582^[ADD] if  ( index < 0 )  { String msg = "Cannot set an element at a negative index"; throw new ArrayIndexOutOfBoundsException  (" ")  ; }^[METHOD] setElement [TYPE] void [PARAMETER] int index double value [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] elementArray  internalArray  tempArray  [TYPE]  double value  [TYPE]  String msg  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex 
[REPLACE]^String msg = "The index specified: " + index +^572^^^^^570^582^[REPLACE] String msg = "Cannot set an element at a negative index";^[METHOD] setElement [TYPE] void [PARAMETER] int index double value [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] elementArray  internalArray  tempArray  [TYPE]  double value  [TYPE]  String msg  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex 
[REPLACE]^return ;^573^^^^^570^582^[REPLACE] throw new ArrayIndexOutOfBoundsException  (" ")  ;^[METHOD] setElement [TYPE] void [PARAMETER] int index double value [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] elementArray  internalArray  tempArray  [TYPE]  double value  [TYPE]  String msg  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex 
[REPLACE]^if  ( index + 1  <  numElements )  {^575^^^^^570^582^[REPLACE] if  ( index + 1 > numElements )  {^[METHOD] setElement [TYPE] void [PARAMETER] int index double value [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] elementArray  internalArray  tempArray  [TYPE]  double value  [TYPE]  String msg  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex 
[REMOVE]^if  (  (  ( startIndex )  + index )  >=  ( internalArray.length )  )  {     expandTo (  (  ( startIndex )  +  ( index + 1 )  )  ) ; }^575^^^^^570^582^[REMOVE] ^[METHOD] setElement [TYPE] void [PARAMETER] int index double value [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] elementArray  internalArray  tempArray  [TYPE]  double value  [TYPE]  String msg  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex 
[REPLACE]^numElements =numElements + 1;^576^^^^^570^582^[REPLACE] numElements = index + 1;^[METHOD] setElement [TYPE] void [PARAMETER] int index double value [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] elementArray  internalArray  tempArray  [TYPE]  double value  [TYPE]  String msg  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex 
[REPLACE]^numElements =startIndex + 1L;^576^^^^^570^582^[REPLACE] numElements = index + 1;^[METHOD] setElement [TYPE] void [PARAMETER] int index double value [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] elementArray  internalArray  tempArray  [TYPE]  double value  [TYPE]  String msg  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex 
[ADD]^^576^^^^^570^582^[ADD] numElements = index + 1;^[METHOD] setElement [TYPE] void [PARAMETER] int index double value [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] elementArray  internalArray  tempArray  [TYPE]  double value  [TYPE]  String msg  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex 
[REPLACE]^if  (  ( startIndex + index )  >= internalArray.length (  )  )  {^578^^^^^570^582^[REPLACE] if  (  ( startIndex + index )  >= internalArray.length )  {^[METHOD] setElement [TYPE] void [PARAMETER] int index double value [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] elementArray  internalArray  tempArray  [TYPE]  double value  [TYPE]  String msg  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex 
[REPLACE]^expandTo (size +  ( startIndex + 1 )  ) ;^579^^^^^570^582^[REPLACE] expandTo ( startIndex +  ( index + 1 )  ) ;^[METHOD] setElement [TYPE] void [PARAMETER] int index double value [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] elementArray  internalArray  tempArray  [TYPE]  double value  [TYPE]  String msg  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex 
[ADD]^^579^^^^^570^582^[ADD] expandTo ( startIndex +  ( index + 1 )  ) ;^[METHOD] setElement [TYPE] void [PARAMETER] int index double value [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] elementArray  internalArray  tempArray  [TYPE]  double value  [TYPE]  String msg  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex 
[REPLACE]^internalArray[startIndex  !=  index] = value;^581^^^^^570^582^[REPLACE] internalArray[startIndex + index] = value;^[METHOD] setElement [TYPE] void [PARAMETER] int index double value [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] elementArray  internalArray  tempArray  [TYPE]  double value  [TYPE]  String msg  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex 
[ADD]^^581^^^^^570^582^[ADD] internalArray[startIndex + index] = value;^[METHOD] setElement [TYPE] void [PARAMETER] int index double value [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] elementArray  internalArray  tempArray  [TYPE]  double value  [TYPE]  String msg  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex 
[REPLACE]^checkContractExpand ( getContractionCriteria (  ) , contractionCriteria ) ;^596^^^^^595^599^[REPLACE] checkContractExpand ( getContractionCriteria (  ) , expansionFactor ) ;^[METHOD] setExpansionFactor [TYPE] void [PARAMETER] float expansionFactor [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] elementArray  internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex 
[REPLACE]^newSize =  ( int )  Math.ceil ( internalArray.length * expansionFactor ) ;^596^^^^^595^599^[REPLACE] checkContractExpand ( getContractionCriteria (  ) , expansionFactor ) ;^[METHOD] setExpansionFactor [TYPE] void [PARAMETER] float expansionFactor [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] elementArray  internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex 
[REMOVE]^expandTo ( startIndex +  ( index + 1 )  ) ;^596^^^^^595^599^[REMOVE] ^[METHOD] setExpansionFactor [TYPE] void [PARAMETER] float expansionFactor [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] elementArray  internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex 
[REPLACE]^this.expansionFactor =  contractionCriteria;^598^^^^^595^599^[REPLACE] this.expansionFactor = expansionFactor;^[METHOD] setExpansionFactor [TYPE] void [PARAMETER] float expansionFactor [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] elementArray  internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex 
[REPLACE]^if  ( expansionMode != MULTIPLICATIVE_MODE ) {^609^610^^^^608^614^[REPLACE] if  ( expansionMode != MULTIPLICATIVE_MODE && expansionMode != ADDITIVE_MODE )  {^[METHOD] setExpansionMode [TYPE] void [PARAMETER] int expansionMode [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] elementArray  internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex 
[ADD]^^609^610^611^612^^608^614^[ADD] if  ( expansionMode != MULTIPLICATIVE_MODE && expansionMode != ADDITIVE_MODE )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] setExpansionMode [TYPE] void [PARAMETER] int expansionMode [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] elementArray  internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex 
[REPLACE]^return ;^611^^^^^608^614^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] setExpansionMode [TYPE] void [PARAMETER] int expansionMode [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] elementArray  internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex 
[ADD]^^611^^^^^608^614^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] setExpansionMode [TYPE] void [PARAMETER] int expansionMode [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] elementArray  internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex 
[REPLACE]^this.expansionMode =  size;^613^^^^^608^614^[REPLACE] this.expansionMode = expansionMode;^[METHOD] setExpansionMode [TYPE] void [PARAMETER] int expansionMode [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] elementArray  internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex 
[REPLACE]^if  ( initialCapacity  !=  4 )  {^624^^^^^623^632^[REPLACE] if  ( initialCapacity > 0 )  {^[METHOD] setInitialCapacity [TYPE] void [PARAMETER] int initialCapacity [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] elementArray  internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex 
[REPLACE]^String msg = "The initial capacity supplied: " + initialCapacity +msg;^627^628^629^^^623^632^[REPLACE] String msg = "The initial capacity supplied: " + initialCapacity + "must be a positive integer";^[METHOD] setInitialCapacity [TYPE] void [PARAMETER] int initialCapacity [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] elementArray  internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex 
[REPLACE]^return ;^630^^^^^623^632^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] setInitialCapacity [TYPE] void [PARAMETER] int initialCapacity [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] elementArray  internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex 
[REPLACE]^this.initialCapacity =  startIndex;^625^^^^^623^632^[REPLACE] this.initialCapacity = initialCapacity;^[METHOD] setInitialCapacity [TYPE] void [PARAMETER] int initialCapacity [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] elementArray  internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex 
[REPLACE]^this.initialCapacity =  null;^625^^^^^623^632^[REPLACE] this.initialCapacity = initialCapacity;^[METHOD] setInitialCapacity [TYPE] void [PARAMETER] int initialCapacity [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] elementArray  internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex 
[REPLACE]^throw new ArrayIndexOutOfBoundsException  (" ")  ; ;^630^^^^^623^632^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] setInitialCapacity [TYPE] void [PARAMETER] int initialCapacity [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] elementArray  internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex 
[REPLACE]^if  ( i  <=  0 )  {^645^^^^^642^659^[REPLACE] if  ( i < 0 )  {^[METHOD] setNumElements [TYPE] void [PARAMETER] int i [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] elementArray  internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex 
[REPLACE]^String msg = "Number of elements must be zero or a positive " +msg;^646^647^^^^642^659^[REPLACE] String msg = "Number of elements must be zero or a positive " + "integer";^[METHOD] setNumElements [TYPE] void [PARAMETER] int i [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] elementArray  internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex 
[REPLACE]^return ;^648^^^^^642^659^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] setNumElements [TYPE] void [PARAMETER] int i [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] elementArray  internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex 
[REPLACE]^String msg = msg + msg;^646^647^^^^642^659^[REPLACE] String msg = "Number of elements must be zero or a positive " + "integer";^[METHOD] setNumElements [TYPE] void [PARAMETER] int i [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] elementArray  internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex 
[ADD]^^648^^^^^642^659^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] setNumElements [TYPE] void [PARAMETER] int i [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] elementArray  internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex 
[REPLACE]^if  (  ( startIndex + startIndex )  > internalArray.length + 5 )  {^653^^^^^642^659^[REPLACE] if  (  ( startIndex + i )  > internalArray.length )  {^[METHOD] setNumElements [TYPE] void [PARAMETER] int i [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] elementArray  internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex 
[ADD]^expandTo ( startIndex + i ) ;^653^654^655^^^642^659^[ADD] if  (  ( startIndex + i )  > internalArray.length )  { expandTo ( startIndex + i ) ; }^[METHOD] setNumElements [TYPE] void [PARAMETER] int i [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] elementArray  internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex 
[REPLACE]^expandTo ( startIndex +size ) ;^654^^^^^642^659^[REPLACE] expandTo ( startIndex + i ) ;^[METHOD] setNumElements [TYPE] void [PARAMETER] int i [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] elementArray  internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex 
[REPLACE]^numElements = 0; ;^658^^^^^642^659^[REPLACE] numElements = i;^[METHOD] setNumElements [TYPE] void [PARAMETER] int i [CLASS] ResizableDoubleArray   [TYPE]  String msg  [TYPE]  boolean false  true  [TYPE]  double[] elementArray  internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex 
[REPLACE]^if  ( expansionMode  ||  MULTIPLICATIVE_MODE )  {^668^^^^^667^673^[REPLACE] if  ( expansionMode == MULTIPLICATIVE_MODE )  {^[METHOD] shouldContract [TYPE] boolean [PARAMETER] [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] elementArray  internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex 
[REPLACE]^return  ( internalArray.length *  0.5  - numElements )  > contractionCriteria;^671^^^^^667^673^[REPLACE] return  ( internalArray.length - numElements )  > contractionCriteria;^[METHOD] shouldContract [TYPE] boolean [PARAMETER] [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] elementArray  internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex 
[REPLACE]^return  ( internalArray.length (  )  / numElements )  > contractionCriteria;^669^^^^^667^673^[REPLACE] return  ( internalArray.length / numElements )  > contractionCriteria;^[METHOD] shouldContract [TYPE] boolean [PARAMETER] [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] elementArray  internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex 
[REPLACE]^return  ( internalArray.length - numElements )  > contractionCriteria;^669^^^^^667^673^[REPLACE] return  ( internalArray.length / numElements )  > contractionCriteria;^[METHOD] shouldContract [TYPE] boolean [PARAMETER] [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] elementArray  internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex 
[REPLACE]^return  ( internalArray.length + 2 - numElements )  > contractionCriteria;^671^^^^^667^673^[REPLACE] return  ( internalArray.length - numElements )  > contractionCriteria;^[METHOD] shouldContract [TYPE] boolean [PARAMETER] [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] elementArray  internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex 
[REPLACE]^return internalArray[startIndex + index];^685^^^^^684^686^[REPLACE] return startIndex;^[METHOD] start [TYPE] int [PARAMETER] [CLASS] ResizableDoubleArray   [TYPE]  boolean false  true  [TYPE]  double[] elementArray  internalArray  tempArray  [TYPE]  float contractionCritera  contractionCriteria  expansionFactor  [TYPE]  long serialVersionUID  [TYPE]  int ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex 
