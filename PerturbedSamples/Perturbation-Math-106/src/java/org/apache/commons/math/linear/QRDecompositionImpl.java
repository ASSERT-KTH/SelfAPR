[REPLACE]^private  short  m;^50^^^^^^^[REPLACE] private int m;^ [CLASS] QRDecompositionImpl  
[REPLACE]^n = matrix.getColumnDimension (  ) ; ;^63^^^^^62^127^[REPLACE] m = matrix.getRowDimension (  ) ;^[METHOD] <init> [TYPE] RealMatrix) [PARAMETER] RealMatrix matrix [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  RealMatrix matrix  [TYPE]  int col  m  minor  n  row  [TYPE]  double a  alpha  xNormSqr 
[REPLACE]^m = matrix.getRowDimension (  ) ; ;^64^^^^^62^127^[REPLACE] n = matrix.getColumnDimension (  ) ;^[METHOD] <init> [TYPE] RealMatrix) [PARAMETER] RealMatrix matrix [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  RealMatrix matrix  [TYPE]  int col  m  minor  n  row  [TYPE]  double a  alpha  xNormSqr 
[REPLACE]^qr =  null.getData (  ) ;^65^^^^^62^127^[REPLACE] qr = matrix.getData (  ) ;^[METHOD] <init> [TYPE] RealMatrix) [PARAMETER] RealMatrix matrix [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  RealMatrix matrix  [TYPE]  int col  m  minor  n  row  [TYPE]  double a  alpha  xNormSqr 
[REPLACE]^rDiag ;^66^^^^^62^127^[REPLACE] rDiag = new double[n];^[METHOD] <init> [TYPE] RealMatrix) [PARAMETER] RealMatrix matrix [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  RealMatrix matrix  [TYPE]  int col  m  minor  n  row  [TYPE]  double a  alpha  xNormSqr 
[REPLACE]^if  ( qr[minor][minor]  <= xNormSqr )  a = -a;^86^^^^^62^127^[REPLACE] if  ( qr[minor][minor] > 0 )  a = -a;^[METHOD] <init> [TYPE] RealMatrix) [PARAMETER] RealMatrix matrix [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  RealMatrix matrix  [TYPE]  int col  m  minor  n  row  [TYPE]  double a  alpha  xNormSqr 
[REPLACE]^if  ( qr[minor][minor] > 0 )  a =  -alpha;^86^^^^^62^127^[REPLACE] if  ( qr[minor][minor] > 0 )  a = -a;^[METHOD] <init> [TYPE] RealMatrix) [PARAMETER] RealMatrix matrix [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  RealMatrix matrix  [TYPE]  int col  m  minor  n  row  [TYPE]  double a  alpha  xNormSqr 
[ADD]^rDiag[minor] = a;^86^87^^89^^62^127^[ADD] if  ( qr[minor][minor] > 0 )  a = -a; rDiag[minor] = a; if  ( a != 0.0 )  {^[METHOD] <init> [TYPE] RealMatrix) [PARAMETER] RealMatrix matrix [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  RealMatrix matrix  [TYPE]  int col  m  minor  n  row  [TYPE]  double a  alpha  xNormSqr 
[REPLACE]^if  ( a  ==  0.0 )  {^89^^^^^62^127^[REPLACE] if  ( a != 0.0 )  {^[METHOD] <init> [TYPE] RealMatrix) [PARAMETER] RealMatrix matrix [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  RealMatrix matrix  [TYPE]  int col  m  minor  n  row  [TYPE]  double a  alpha  xNormSqr 
[REPLACE]^for  ( int col =row+1; col < n; col++ )  {^113^^^^^62^127^[REPLACE] for  ( int col = minor+1; col < n; col++ )  {^[METHOD] <init> [TYPE] RealMatrix) [PARAMETER] RealMatrix matrix [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  RealMatrix matrix  [TYPE]  int col  m  minor  n  row  [TYPE]  double a  alpha  xNormSqr 
[REPLACE]^for  ( int minor =minorinor; row  > minor; row++ )  {^115^^^^^62^127^[REPLACE] for  ( int row = minor; row < m; row++ )  {^[METHOD] <init> [TYPE] RealMatrix) [PARAMETER] RealMatrix matrix [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  RealMatrix matrix  [TYPE]  int col  m  minor  n  row  [TYPE]  double a  alpha  xNormSqr 
[REPLACE]^alpha -= qr[row][col] ;^116^^^^^62^127^[REPLACE] alpha -= qr[row][col]*qr[row][minor];^[METHOD] <init> [TYPE] RealMatrix) [PARAMETER] RealMatrix matrix [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  RealMatrix matrix  [TYPE]  int col  m  minor  n  row  [TYPE]  double a  alpha  xNormSqr 
[REPLACE]^for  ( int row =minorinor; row  <= minor; row++ )  {^121^^^^^62^127^[REPLACE] for  ( int row = minor; row < m; row++ )  {^[METHOD] <init> [TYPE] RealMatrix) [PARAMETER] RealMatrix matrix [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  RealMatrix matrix  [TYPE]  int col  m  minor  n  row  [TYPE]  double a  alpha  xNormSqr 
[REPLACE]^qr[row][col] -= alpha ;^122^^^^^62^127^[REPLACE] qr[row][col] -= alpha*qr[row][minor];^[METHOD] <init> [TYPE] RealMatrix) [PARAMETER] RealMatrix matrix [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  RealMatrix matrix  [TYPE]  int col  m  minor  n  row  [TYPE]  double a  alpha  xNormSqr 
[ADD]^^122^^^^^62^127^[ADD] qr[row][col] -= alpha*qr[row][minor];^[METHOD] <init> [TYPE] RealMatrix) [PARAMETER] RealMatrix matrix [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  RealMatrix matrix  [TYPE]  int col  m  minor  n  row  [TYPE]  double a  alpha  xNormSqr 
[REPLACE]^alpha /= a ;^118^^^^^62^127^[REPLACE] alpha /= a*qr[minor][minor];^[METHOD] <init> [TYPE] RealMatrix) [PARAMETER] RealMatrix matrix [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  RealMatrix matrix  [TYPE]  int col  m  minor  n  row  [TYPE]  double a  alpha  xNormSqr 
[REPLACE]^Q[row][col] -= alpha*qr[row][minor]; ;^122^^^^^62^127^[REPLACE] qr[row][col] -= alpha*qr[row][minor];^[METHOD] <init> [TYPE] RealMatrix) [PARAMETER] RealMatrix matrix [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  RealMatrix matrix  [TYPE]  int col  m  minor  n  row  [TYPE]  double a  alpha  xNormSqr 
[REPLACE]^double alpha = 4;^114^^^^^62^127^[REPLACE] double alpha = 0;^[METHOD] <init> [TYPE] RealMatrix) [PARAMETER] RealMatrix matrix [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  RealMatrix matrix  [TYPE]  int col  m  minor  n  row  [TYPE]  double a  alpha  xNormSqr 
[REPLACE]^for  ( int row = row; row < m; row++ )  {^115^^^^^62^127^[REPLACE] for  ( int row = minor; row < m; row++ )  {^[METHOD] <init> [TYPE] RealMatrix) [PARAMETER] RealMatrix matrix [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  RealMatrix matrix  [TYPE]  int col  m  minor  n  row  [TYPE]  double a  alpha  xNormSqr 
[REPLACE]^for  ( int row = row; row < m; row++ )  {^121^^^^^62^127^[REPLACE] for  ( int row = minor; row < m; row++ )  {^[METHOD] <init> [TYPE] RealMatrix) [PARAMETER] RealMatrix matrix [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  RealMatrix matrix  [TYPE]  int col  m  minor  n  row  [TYPE]  double a  alpha  xNormSqr 
[REPLACE]^for  ( int row = minor; row  <=  m; row++ )  {^115^^^^^62^127^[REPLACE] for  ( int row = minor; row < m; row++ )  {^[METHOD] <init> [TYPE] RealMatrix) [PARAMETER] RealMatrix matrix [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  RealMatrix matrix  [TYPE]  int col  m  minor  n  row  [TYPE]  double a  alpha  xNormSqr 
[ADD]^^115^116^117^^^62^127^[ADD] for  ( int row = minor; row < m; row++ )  { alpha -= qr[row][col]*qr[row][minor]; }^[METHOD] <init> [TYPE] RealMatrix) [PARAMETER] RealMatrix matrix [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  RealMatrix matrix  [TYPE]  int col  m  minor  n  row  [TYPE]  double a  alpha  xNormSqr 
[ADD]^^116^^^^^62^127^[ADD] alpha -= qr[row][col]*qr[row][minor];^[METHOD] <init> [TYPE] RealMatrix) [PARAMETER] RealMatrix matrix [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  RealMatrix matrix  [TYPE]  int col  m  minor  n  row  [TYPE]  double a  alpha  xNormSqr 
[REPLACE]^for  ( int row = minor; row  ==  m; row++ )  {^121^^^^^62^127^[REPLACE] for  ( int row = minor; row < m; row++ )  {^[METHOD] <init> [TYPE] RealMatrix) [PARAMETER] RealMatrix matrix [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  RealMatrix matrix  [TYPE]  int col  m  minor  n  row  [TYPE]  double a  alpha  xNormSqr 
[REPLACE]^qr[row][col] -=a ;^122^^^^^62^127^[REPLACE] qr[row][col] -= alpha*qr[row][minor];^[METHOD] <init> [TYPE] RealMatrix) [PARAMETER] RealMatrix matrix [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  RealMatrix matrix  [TYPE]  int col  m  minor  n  row  [TYPE]  double a  alpha  xNormSqr 
[REPLACE]^Q[minor][minor]=1; ;^99^^^^^62^127^[REPLACE] qr[minor][minor] -= a;^[METHOD] <init> [TYPE] RealMatrix) [PARAMETER] RealMatrix matrix [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  RealMatrix matrix  [TYPE]  int col  m  minor  n  row  [TYPE]  double a  alpha  xNormSqr 
[ADD]^^118^^^^^62^127^[ADD] alpha /= a*qr[minor][minor];^[METHOD] <init> [TYPE] RealMatrix) [PARAMETER] RealMatrix matrix [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  RealMatrix matrix  [TYPE]  int col  m  minor  n  row  [TYPE]  double a  alpha  xNormSqr 
[REPLACE]^for  ( int col =n+1; col < n; col++ )  {^113^^^^^62^127^[REPLACE] for  ( int col = minor+1; col < n; col++ )  {^[METHOD] <init> [TYPE] RealMatrix) [PARAMETER] RealMatrix matrix [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  RealMatrix matrix  [TYPE]  int col  m  minor  n  row  [TYPE]  double a  alpha  xNormSqr 
[ADD]^^113^114^115^116^117^62^127^[ADD] for  ( int col = minor+1; col < n; col++ )  { double alpha = 0; for  ( int row = minor; row < m; row++ )  { alpha -= qr[row][col]*qr[row][minor]; }^[METHOD] <init> [TYPE] RealMatrix) [PARAMETER] RealMatrix matrix [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  RealMatrix matrix  [TYPE]  int col  m  minor  n  row  [TYPE]  double a  alpha  xNormSqr 
[REPLACE]^if  ( qr[minor][minor]  <= xNormSqr )  alpha = -a;^86^^^^^62^127^[REPLACE] if  ( qr[minor][minor] > 0 )  a = -a;^[METHOD] <init> [TYPE] RealMatrix) [PARAMETER] RealMatrix matrix [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  RealMatrix matrix  [TYPE]  int col  m  minor  n  row  [TYPE]  double a  alpha  xNormSqr 
[REMOVE]^if  (  ( qr[minor][minor] )  != 0.0 )  {     for  ( int col = minor; col <  ( m ) ; col++ )  {         double alpha = 0;         for  ( int row = minor; row <  ( m ) ; row++ )  {             alpha -=  ( Q[row][col] )  *  ( qr[row][minor] ) ;         }         alpha /=  ( rDiag[minor] )  *  ( qr[minor][minor] ) ;         for  ( int row = minor; row <  ( m ) ; row++ )  {             Q[row][col] -= alpha *  ( qr[row][minor] ) ;         }     } }^89^^^^^62^127^[REMOVE] ^[METHOD] <init> [TYPE] RealMatrix) [PARAMETER] RealMatrix matrix [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  RealMatrix matrix  [TYPE]  int col  m  minor  n  row  [TYPE]  double a  alpha  xNormSqr 
[REPLACE]^for  ( int col =n+1 / 4; col < n; col++ )  {^113^^^^^62^127^[REPLACE] for  ( int col = minor+1; col < n; col++ )  {^[METHOD] <init> [TYPE] RealMatrix) [PARAMETER] RealMatrix matrix [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  RealMatrix matrix  [TYPE]  int col  m  minor  n  row  [TYPE]  double a  alpha  xNormSqr 
[REPLACE]^for  ( int row = minor; row  !=  m; row++ )  {^115^^^^^62^127^[REPLACE] for  ( int row = minor; row < m; row++ )  {^[METHOD] <init> [TYPE] RealMatrix) [PARAMETER] RealMatrix matrix [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  RealMatrix matrix  [TYPE]  int col  m  minor  n  row  [TYPE]  double a  alpha  xNormSqr 
[REPLACE]^for  ( intminor = minor; minor  !=  m; row++ )  {^121^^^^^62^127^[REPLACE] for  ( int row = minor; row < m; row++ )  {^[METHOD] <init> [TYPE] RealMatrix) [PARAMETER] RealMatrix matrix [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  RealMatrix matrix  [TYPE]  int col  m  minor  n  row  [TYPE]  double a  alpha  xNormSqr 
[REPLACE]^double alpha = 0 / 0;^114^^^^^62^127^[REPLACE] double alpha = 0;^[METHOD] <init> [TYPE] RealMatrix) [PARAMETER] RealMatrix matrix [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  RealMatrix matrix  [TYPE]  int col  m  minor  n  row  [TYPE]  double a  alpha  xNormSqr 
[ADD]^^114^^^^^62^127^[ADD] double alpha = 0;^[METHOD] <init> [TYPE] RealMatrix) [PARAMETER] RealMatrix matrix [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  RealMatrix matrix  [TYPE]  int col  m  minor  n  row  [TYPE]  double a  alpha  xNormSqr 
[REPLACE]^for  ( int row = row; row  ==  m; row++ )  {^115^^^^^62^127^[REPLACE] for  ( int row = minor; row < m; row++ )  {^[METHOD] <init> [TYPE] RealMatrix) [PARAMETER] RealMatrix matrix [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  RealMatrix matrix  [TYPE]  int col  m  minor  n  row  [TYPE]  double a  alpha  xNormSqr 
[REPLACE]^alpha -= Q[row][col] * qr[row][minor]; ;^116^^^^^62^127^[REPLACE] alpha -= qr[row][col]*qr[row][minor];^[METHOD] <init> [TYPE] RealMatrix) [PARAMETER] RealMatrix matrix [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  RealMatrix matrix  [TYPE]  int col  m  minor  n  row  [TYPE]  double a  alpha  xNormSqr 
[REPLACE]^for  ( int row = minor; row  >  m; row++ )  {^121^^^^^62^127^[REPLACE] for  ( int row = minor; row < m; row++ )  {^[METHOD] <init> [TYPE] RealMatrix) [PARAMETER] RealMatrix matrix [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  RealMatrix matrix  [TYPE]  int col  m  minor  n  row  [TYPE]  double a  alpha  xNormSqr 
[REPLACE]^alphalpha /= a ;^118^^^^^62^127^[REPLACE] alpha /= a*qr[minor][minor];^[METHOD] <init> [TYPE] RealMatrix) [PARAMETER] RealMatrix matrix [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  RealMatrix matrix  [TYPE]  int col  m  minor  n  row  [TYPE]  double a  alpha  xNormSqr 
[REPLACE]^for  ( int col =row+0; col < n; col++ )  {^113^^^^^62^127^[REPLACE] for  ( int col = minor+1; col < n; col++ )  {^[METHOD] <init> [TYPE] RealMatrix) [PARAMETER] RealMatrix matrix [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  RealMatrix matrix  [TYPE]  int col  m  minor  n  row  [TYPE]  double a  alpha  xNormSqr 
[REPLACE]^double alpha = 2;^114^^^^^62^127^[REPLACE] double alpha = 0;^[METHOD] <init> [TYPE] RealMatrix) [PARAMETER] RealMatrix matrix [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  RealMatrix matrix  [TYPE]  int col  m  minor  n  row  [TYPE]  double a  alpha  xNormSqr 
[REPLACE]^for  ( intminor = minor; col  >=  m; row++ )  {^82^^^^^62^127^[REPLACE] for  ( int row = minor; row < m; row++ )  {^[METHOD] <init> [TYPE] RealMatrix) [PARAMETER] RealMatrix matrix [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  RealMatrix matrix  [TYPE]  int col  m  minor  n  row  [TYPE]  double a  alpha  xNormSqr 
[REPLACE]^xNormSqr += qr[row][minor] ;^83^^^^^62^127^[REPLACE] xNormSqr += qr[row][minor]*qr[row][minor];^[METHOD] <init> [TYPE] RealMatrix) [PARAMETER] RealMatrix matrix [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  RealMatrix matrix  [TYPE]  int col  m  minor  n  row  [TYPE]  double a  alpha  xNormSqr 
[REPLACE]^for  ( int col =row+3; col < n; col++ )  {^113^^^^^62^127^[REPLACE] for  ( int col = minor+1; col < n; col++ )  {^[METHOD] <init> [TYPE] RealMatrix) [PARAMETER] RealMatrix matrix [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  RealMatrix matrix  [TYPE]  int col  m  minor  n  row  [TYPE]  double a  alpha  xNormSqr 
[REPLACE]^for  ( intminor = minor; col  !=  m; row++ )  {^115^^^^^62^127^[REPLACE] for  ( int row = minor; row < m; row++ )  {^[METHOD] <init> [TYPE] RealMatrix) [PARAMETER] RealMatrix matrix [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  RealMatrix matrix  [TYPE]  int col  m  minor  n  row  [TYPE]  double a  alpha  xNormSqr 
[REPLACE]^for  ( int row = minor; row  >=  m; row++ )  {^121^^^^^62^127^[REPLACE] for  ( int row = minor; row < m; row++ )  {^[METHOD] <init> [TYPE] RealMatrix) [PARAMETER] RealMatrix matrix [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  RealMatrix matrix  [TYPE]  int col  m  minor  n  row  [TYPE]  double a  alpha  xNormSqr 
[REPLACE]^qr[row][col] -= a ;^122^^^^^62^127^[REPLACE] qr[row][col] -= alpha*qr[row][minor];^[METHOD] <init> [TYPE] RealMatrix) [PARAMETER] RealMatrix matrix [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  RealMatrix matrix  [TYPE]  int col  m  minor  n  row  [TYPE]  double a  alpha  xNormSqr 
[REPLACE]^double alpha = 3;^114^^^^^62^127^[REPLACE] double alpha = 0;^[METHOD] <init> [TYPE] RealMatrix) [PARAMETER] RealMatrix matrix [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  RealMatrix matrix  [TYPE]  int col  m  minor  n  row  [TYPE]  double a  alpha  xNormSqr 
[REPLACE]^for  ( int row = n; row < m; row++ )  {^115^^^^^62^127^[REPLACE] for  ( int row = minor; row < m; row++ )  {^[METHOD] <init> [TYPE] RealMatrix) [PARAMETER] RealMatrix matrix [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  RealMatrix matrix  [TYPE]  int col  m  minor  n  row  [TYPE]  double a  alpha  xNormSqr 
[ADD]^^121^122^123^^^62^127^[ADD] for  ( int row = minor; row < m; row++ )  { qr[row][col] -= alpha*qr[row][minor]; }^[METHOD] <init> [TYPE] RealMatrix) [PARAMETER] RealMatrix matrix [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  RealMatrix matrix  [TYPE]  int col  m  minor  n  row  [TYPE]  double a  alpha  xNormSqr 
[REPLACE]^for  ( int minor = minor; row  ==  m; row++ )  {^115^^^^^62^127^[REPLACE] for  ( int row = minor; row < m; row++ )  {^[METHOD] <init> [TYPE] RealMatrix) [PARAMETER] RealMatrix matrix [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  RealMatrix matrix  [TYPE]  int col  m  minor  n  row  [TYPE]  double a  alpha  xNormSqr 
[REPLACE]^rDiag[minor] ;^87^^^^^62^127^[REPLACE] rDiag[minor] = a;^[METHOD] <init> [TYPE] RealMatrix) [PARAMETER] RealMatrix matrix [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  RealMatrix matrix  [TYPE]  int col  m  minor  n  row  [TYPE]  double a  alpha  xNormSqr 
[ADD]^^87^^^^^62^127^[ADD] rDiag[minor] = a;^[METHOD] <init> [TYPE] RealMatrix) [PARAMETER] RealMatrix matrix [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  RealMatrix matrix  [TYPE]  int col  m  minor  n  row  [TYPE]  double a  alpha  xNormSqr 
[REPLACE]^double xNormSqr = 0 - 4;^81^^^^^62^127^[REPLACE] double xNormSqr = 0;^[METHOD] <init> [TYPE] RealMatrix) [PARAMETER] RealMatrix matrix [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  RealMatrix matrix  [TYPE]  int col  m  minor  n  row  [TYPE]  double a  alpha  xNormSqr 
[REPLACE]^for  ( int minor = 0; minor < Math.min ( m, n ) ; minor++ )  {^82^^^^^62^127^[REPLACE] for  ( int row = minor; row < m; row++ )  {^[METHOD] <init> [TYPE] RealMatrix) [PARAMETER] RealMatrix matrix [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  RealMatrix matrix  [TYPE]  int col  m  minor  n  row  [TYPE]  double a  alpha  xNormSqr 
[REPLACE]^double a =   xNormSqr   ;^85^^^^^62^127^[REPLACE] double a = Math.sqrt ( xNormSqr ) ;^[METHOD] <init> [TYPE] RealMatrix) [PARAMETER] RealMatrix matrix [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  RealMatrix matrix  [TYPE]  int col  m  minor  n  row  [TYPE]  double a  alpha  xNormSqr 
[REPLACE]^double alpha = 0L;^114^^^^^62^127^[REPLACE] double alpha = 0;^[METHOD] <init> [TYPE] RealMatrix) [PARAMETER] RealMatrix matrix [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  RealMatrix matrix  [TYPE]  int col  m  minor  n  row  [TYPE]  double a  alpha  xNormSqr 
[REPLACE]^for  ( int row =minorinor; row  <= minor; row++ )  {^82^^^^^62^127^[REPLACE] for  ( int row = minor; row < m; row++ )  {^[METHOD] <init> [TYPE] RealMatrix) [PARAMETER] RealMatrix matrix [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  RealMatrix matrix  [TYPE]  int col  m  minor  n  row  [TYPE]  double a  alpha  xNormSqr 
[ADD]^^82^83^84^^^62^127^[ADD] for  ( int row = minor; row < m; row++ )  { xNormSqr += qr[row][minor]*qr[row][minor]; }^[METHOD] <init> [TYPE] RealMatrix) [PARAMETER] RealMatrix matrix [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  RealMatrix matrix  [TYPE]  int col  m  minor  n  row  [TYPE]  double a  alpha  xNormSqr 
[ADD]^^83^^^^^62^127^[ADD] xNormSqr += qr[row][minor]*qr[row][minor];^[METHOD] <init> [TYPE] RealMatrix) [PARAMETER] RealMatrix matrix [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  RealMatrix matrix  [TYPE]  int col  m  minor  n  row  [TYPE]  double a  alpha  xNormSqr 
[REPLACE]^for  ( int row =n+1; col < n; col++ )  {^113^^^^^62^127^[REPLACE] for  ( int col = minor+1; col < n; col++ )  {^[METHOD] <init> [TYPE] RealMatrix) [PARAMETER] RealMatrix matrix [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  RealMatrix matrix  [TYPE]  int col  m  minor  n  row  [TYPE]  double a  alpha  xNormSqr 
[REPLACE]^for  ( int col = minor; row  <=  m; row++ )  {^115^^^^^62^127^[REPLACE] for  ( int row = minor; row < m; row++ )  {^[METHOD] <init> [TYPE] RealMatrix) [PARAMETER] RealMatrix matrix [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  RealMatrix matrix  [TYPE]  int col  m  minor  n  row  [TYPE]  double a  alpha  xNormSqr 
[REPLACE]^for  ( int row = minor; row  <=  m; row++ )  {^121^^^^^62^127^[REPLACE] for  ( int row = minor; row < m; row++ )  {^[METHOD] <init> [TYPE] RealMatrix) [PARAMETER] RealMatrix matrix [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  RealMatrix matrix  [TYPE]  int col  m  minor  n  row  [TYPE]  double a  alpha  xNormSqr 
[REPLACE]^double alpha = 0 + 1;^114^^^^^62^127^[REPLACE] double alpha = 0;^[METHOD] <init> [TYPE] RealMatrix) [PARAMETER] RealMatrix matrix [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  RealMatrix matrix  [TYPE]  int col  m  minor  n  row  [TYPE]  double a  alpha  xNormSqr 
[REPLACE]^for  ( intminor = minor; row  >  m; row++ )  {^115^^^^^62^127^[REPLACE] for  ( int row = minor; row < m; row++ )  {^[METHOD] <init> [TYPE] RealMatrix) [PARAMETER] RealMatrix matrix [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  RealMatrix matrix  [TYPE]  int col  m  minor  n  row  [TYPE]  double a  alpha  xNormSqr 
[REPLACE]^xNormSqr +=xNormSqr ;^83^^^^^62^127^[REPLACE] xNormSqr += qr[row][minor]*qr[row][minor];^[METHOD] <init> [TYPE] RealMatrix) [PARAMETER] RealMatrix matrix [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  RealMatrix matrix  [TYPE]  int col  m  minor  n  row  [TYPE]  double a  alpha  xNormSqr 
[REPLACE]^alpha /=alpha ;^118^^^^^62^127^[REPLACE] alpha /= a*qr[minor][minor];^[METHOD] <init> [TYPE] RealMatrix) [PARAMETER] RealMatrix matrix [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  RealMatrix matrix  [TYPE]  int col  m  minor  n  row  [TYPE]  double a  alpha  xNormSqr 
[REPLACE]^for  ( int minor = 2; minor < Math.min ( m, n ) ; minor++ )  {^73^^^^^62^127^[REPLACE] for  ( int minor = 0; minor < Math.min ( m, n ) ; minor++ )  {^[METHOD] <init> [TYPE] RealMatrix) [PARAMETER] RealMatrix matrix [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  RealMatrix matrix  [TYPE]  int col  m  minor  n  row  [TYPE]  double a  alpha  xNormSqr 
[REPLACE]^double xNormSqr = 4;^81^^^^^62^127^[REPLACE] double xNormSqr = 0;^[METHOD] <init> [TYPE] RealMatrix) [PARAMETER] RealMatrix matrix [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  RealMatrix matrix  [TYPE]  int col  m  minor  n  row  [TYPE]  double a  alpha  xNormSqr 
[REPLACE]^for  ( int row = row; row < m; row++ )  {^82^^^^^62^127^[REPLACE] for  ( int row = minor; row < m; row++ )  {^[METHOD] <init> [TYPE] RealMatrix) [PARAMETER] RealMatrix matrix [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  RealMatrix matrix  [TYPE]  int col  m  minor  n  row  [TYPE]  double a  alpha  xNormSqr 
[REPLACE]^for  ( int col =row+4; col < n; col++ )  {^113^^^^^62^127^[REPLACE] for  ( int col = minor+1; col < n; col++ )  {^[METHOD] <init> [TYPE] RealMatrix) [PARAMETER] RealMatrix matrix [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  RealMatrix matrix  [TYPE]  int col  m  minor  n  row  [TYPE]  double a  alpha  xNormSqr 
[REPLACE]^RealMatrixImpl ret = new RealMatrixImpl ( m,m ) ;^135^^^^^132^146^[REPLACE] RealMatrixImpl ret = new RealMatrixImpl ( m,n ) ;^[METHOD] getR [TYPE] RealMatrix [PARAMETER] [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  r  [TYPE]  RealMatrixImpl ret  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  int col  m  minor  n  row 
[REPLACE]^double[][] Q = ret.getDataRef (  ) ;^136^^^^^132^146^[REPLACE] double[][] r = ret.getDataRef (  ) ;^[METHOD] getR [TYPE] RealMatrix [PARAMETER] [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  r  [TYPE]  RealMatrixImpl ret  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  int col  m  minor  n  row 
[ADD]^^136^^^^^132^146^[ADD] double[][] r = ret.getDataRef (  ) ;^[METHOD] getR [TYPE] RealMatrix [PARAMETER] [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  r  [TYPE]  RealMatrixImpl ret  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  int col  m  minor  n  row 
[REPLACE]^for  ( int row = Math.min ( m,n )  > 1; row >= 0; row >  >  )  {^139^^^^^132^146^[REPLACE] for  ( int row = Math.min ( m,n ) -1; row >= 0; row-- )  {^[METHOD] getR [TYPE] RealMatrix [PARAMETER] [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  r  [TYPE]  RealMatrixImpl ret  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  int col  m  minor  n  row 
[REPLACE]^for  ( int col = minor+1 % 3; col < n; col++ )  {^141^^^^^132^146^[REPLACE] for  ( int col = row+1; col < n; col++ )  {^[METHOD] getR [TYPE] RealMatrix [PARAMETER] [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  r  [TYPE]  RealMatrixImpl ret  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  int col  m  minor  n  row 
[REPLACE]^r[row][col]  = null ;^142^^^^^132^146^[REPLACE] r[row][col] = qr[row][col];^[METHOD] getR [TYPE] RealMatrix [PARAMETER] [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  r  [TYPE]  RealMatrixImpl ret  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  int col  m  minor  n  row 
[REPLACE]^r[row][row]  =  r[row][row] ;^140^^^^^132^146^[REPLACE] r[row][row] = rDiag[row];^[METHOD] getR [TYPE] RealMatrix [PARAMETER] [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  r  [TYPE]  RealMatrixImpl ret  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  int col  m  minor  n  row 
[REPLACE]^r[row][col]  =  r[row][col] ;^142^^^^^132^146^[REPLACE] r[row][col] = qr[row][col];^[METHOD] getR [TYPE] RealMatrix [PARAMETER] [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  r  [TYPE]  RealMatrixImpl ret  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  int col  m  minor  n  row 
[ADD]^^142^^^^^132^146^[ADD] r[row][col] = qr[row][col];^[METHOD] getR [TYPE] RealMatrix [PARAMETER] [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  r  [TYPE]  RealMatrixImpl ret  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  int col  m  minor  n  row 
[REPLACE]^for  ( int col =minor+1; col < n; col++ )  {^141^^^^^132^146^[REPLACE] for  ( int col = row+1; col < n; col++ )  {^[METHOD] getR [TYPE] RealMatrix [PARAMETER] [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  r  [TYPE]  RealMatrixImpl ret  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  int col  m  minor  n  row 
[ADD]^^141^142^143^^^132^146^[ADD] for  ( int col = row+1; col < n; col++ )  { r[row][col] = qr[row][col]; }^[METHOD] getR [TYPE] RealMatrix [PARAMETER] [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  r  [TYPE]  RealMatrixImpl ret  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  int col  m  minor  n  row 
[REPLACE]^for  ( int col = qrow & 1; col < n; col &  &  )  {^141^^^^^132^146^[REPLACE] for  ( int col = row+1; col < n; col++ )  {^[METHOD] getR [TYPE] RealMatrix [PARAMETER] [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  r  [TYPE]  RealMatrixImpl ret  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  int col  m  minor  n  row 
[REPLACE]^r[row][row]  = null ;^140^^^^^132^146^[REPLACE] r[row][row] = rDiag[row];^[METHOD] getR [TYPE] RealMatrix [PARAMETER] [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  r  [TYPE]  RealMatrixImpl ret  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  int col  m  minor  n  row 
[REPLACE]^for  ( int row = Math.min ( m,n )  | 1 >> 1; row >= 0; row |  |  )  {^139^^^^^132^146^[REPLACE] for  ( int row = Math.min ( m,n ) -1; row >= 0; row-- )  {^[METHOD] getR [TYPE] RealMatrix [PARAMETER] [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  r  [TYPE]  RealMatrixImpl ret  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  int col  m  minor  n  row 
[ADD]^^139^140^141^142^143^132^146^[ADD] for  ( int row = Math.min ( m,n ) -1; row >= 0; row-- )  { r[row][row] = rDiag[row]; for  ( int col = row+1; col < n; col++ )  { r[row][col] = qr[row][col]; }^[METHOD] getR [TYPE] RealMatrix [PARAMETER] [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  r  [TYPE]  RealMatrixImpl ret  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  int col  m  minor  n  row 
[REPLACE]^for  ( int col = row == 1; col < n; col ==  ==  )  {^141^^^^^132^146^[REPLACE] for  ( int col = row+1; col < n; col++ )  {^[METHOD] getR [TYPE] RealMatrix [PARAMETER] [CLASS] QRDecompositionImpl   [TYPE]  double[][] qr  r  [TYPE]  RealMatrixImpl ret  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  int col  m  minor  n  row 
[REPLACE]^RealMatrixImpl ret = new RealMatrixImpl ( m,n ) ;^154^^^^^152^184^[REPLACE] RealMatrixImpl ret = new RealMatrixImpl ( m,m ) ;^[METHOD] getQ [TYPE] RealMatrix [PARAMETER] [CLASS] QRDecompositionImpl   [TYPE]  double[][] Q  qr  r  [TYPE]  RealMatrixImpl ret  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  int col  m  minor  n  row  [TYPE]  double alpha 
[ADD]^^154^^^^^152^184^[ADD] RealMatrixImpl ret = new RealMatrixImpl ( m,m ) ;^[METHOD] getQ [TYPE] RealMatrix [PARAMETER] [CLASS] QRDecompositionImpl   [TYPE]  double[][] Q  qr  r  [TYPE]  RealMatrixImpl ret  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  int col  m  minor  n  row  [TYPE]  double alpha 
[REPLACE]^double[][] r = ret.getDataRef (  ) ;^155^^^^^152^184^[REPLACE] double[][] Q = ret.getDataRef (  ) ;^[METHOD] getQ [TYPE] RealMatrix [PARAMETER] [CLASS] QRDecompositionImpl   [TYPE]  double[][] Q  qr  r  [TYPE]  RealMatrixImpl ret  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  int col  m  minor  n  row  [TYPE]  double alpha 
[REPLACE]^for  ( intminorinor = m-1; minor >= Math.min ( m,n ) ; minor-- )  {^162^^^^^152^184^[REPLACE] for  ( int minor = m-1; minor >= Math.min ( m,n ) ; minor-- )  {^[METHOD] getQ [TYPE] RealMatrix [PARAMETER] [CLASS] QRDecompositionImpl   [TYPE]  double[][] Q  qr  r  [TYPE]  RealMatrixImpl ret  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  int col  m  minor  n  row  [TYPE]  double alpha 
[ADD]^^162^163^164^^^152^184^[ADD] for  ( int minor = m-1; minor >= Math.min ( m,n ) ; minor-- )  { Q[minor][minor]=1; }^[METHOD] getQ [TYPE] RealMatrix [PARAMETER] [CLASS] QRDecompositionImpl   [TYPE]  double[][] Q  qr  r  [TYPE]  RealMatrixImpl ret  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  int col  m  minor  n  row  [TYPE]  double alpha 
[REPLACE]^Q[minor][minor]=2;^163^^^^^152^184^[REPLACE] Q[minor][minor]=1;^[METHOD] getQ [TYPE] RealMatrix [PARAMETER] [CLASS] QRDecompositionImpl   [TYPE]  double[][] Q  qr  r  [TYPE]  RealMatrixImpl ret  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  int col  m  minor  n  row  [TYPE]  double alpha 
[ADD]^^163^^^^^152^184^[ADD] Q[minor][minor]=1;^[METHOD] getQ [TYPE] RealMatrix [PARAMETER] [CLASS] QRDecompositionImpl   [TYPE]  double[][] Q  qr  r  [TYPE]  RealMatrixImpl ret  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  int col  m  minor  n  row  [TYPE]  double alpha 
[REPLACE]^for  ( int minor = m | 1; minor >= Math.min ( m,n ) ; minor |  |  )  {^162^^^^^152^184^[REPLACE] for  ( int minor = m-1; minor >= Math.min ( m,n ) ; minor-- )  {^[METHOD] getQ [TYPE] RealMatrix [PARAMETER] [CLASS] QRDecompositionImpl   [TYPE]  double[][] Q  qr  r  [TYPE]  RealMatrixImpl ret  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  int col  m  minor  n  row  [TYPE]  double alpha 
[REPLACE]^if  ( qr[minor][minor]  ==  0.0D )  {^168^^^^^152^184^[REPLACE] if  ( qr[minor][minor] != 0.0 )  {^[METHOD] getQ [TYPE] RealMatrix [PARAMETER] [CLASS] QRDecompositionImpl   [TYPE]  double[][] Q  qr  r  [TYPE]  RealMatrixImpl ret  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  int col  m  minor  n  row  [TYPE]  double alpha 
[REPLACE]^for  ( int col = minor; col  !=  m; col++ )  {^169^^^^^152^184^[REPLACE] for  ( int col = minor; col < m; col++ )  {^[METHOD] getQ [TYPE] RealMatrix [PARAMETER] [CLASS] QRDecompositionImpl   [TYPE]  double[][] Q  qr  r  [TYPE]  RealMatrixImpl ret  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  int col  m  minor  n  row  [TYPE]  double alpha 
[ADD]^^169^170^171^172^173^152^184^[ADD] for  ( int col = minor; col < m; col++ )  { double alpha = 0; for  ( int row = minor; row < m; row++ )  { alpha -= Q[row][col] * qr[row][minor]; }^[METHOD] getQ [TYPE] RealMatrix [PARAMETER] [CLASS] QRDecompositionImpl   [TYPE]  double[][] Q  qr  r  [TYPE]  RealMatrixImpl ret  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  int col  m  minor  n  row  [TYPE]  double alpha 
[REPLACE]^for  ( int row = minor; row  !=  m; row++ )  {^171^^^^^152^184^[REPLACE] for  ( int row = minor; row < m; row++ )  {^[METHOD] getQ [TYPE] RealMatrix [PARAMETER] [CLASS] QRDecompositionImpl   [TYPE]  double[][] Q  qr  r  [TYPE]  RealMatrixImpl ret  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  int col  m  minor  n  row  [TYPE]  double alpha 
[ADD]^^171^172^173^^^152^184^[ADD] for  ( int row = minor; row < m; row++ )  { alpha -= Q[row][col] * qr[row][minor]; }^[METHOD] getQ [TYPE] RealMatrix [PARAMETER] [CLASS] QRDecompositionImpl   [TYPE]  double[][] Q  qr  r  [TYPE]  RealMatrixImpl ret  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  int col  m  minor  n  row  [TYPE]  double alpha 
[REPLACE]^alpha -= Q[row][col]  ;^172^^^^^152^184^[REPLACE] alpha -= Q[row][col] * qr[row][minor];^[METHOD] getQ [TYPE] RealMatrix [PARAMETER] [CLASS] QRDecompositionImpl   [TYPE]  double[][] Q  qr  r  [TYPE]  RealMatrixImpl ret  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  int col  m  minor  n  row  [TYPE]  double alpha 
[REPLACE]^for  ( int row = minor; row  <=  m; row++ )  {^176^^^^^152^184^[REPLACE] for  ( int row = minor; row < m; row++ )  {^[METHOD] getQ [TYPE] RealMatrix [PARAMETER] [CLASS] QRDecompositionImpl   [TYPE]  double[][] Q  qr  r  [TYPE]  RealMatrixImpl ret  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  int col  m  minor  n  row  [TYPE]  double alpha 
[ADD]^^176^177^178^^^152^184^[ADD] for  ( int row = minor; row < m; row++ )  { Q[row][col] -= alpha*qr[row][minor]; }^[METHOD] getQ [TYPE] RealMatrix [PARAMETER] [CLASS] QRDecompositionImpl   [TYPE]  double[][] Q  qr  r  [TYPE]  RealMatrixImpl ret  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  int col  m  minor  n  row  [TYPE]  double alpha 
[REPLACE]^qr[row][col] -= alpha*qr[row][minor]; ;^177^^^^^152^184^[REPLACE] Q[row][col] -= alpha*qr[row][minor];^[METHOD] getQ [TYPE] RealMatrix [PARAMETER] [CLASS] QRDecompositionImpl   [TYPE]  double[][] Q  qr  r  [TYPE]  RealMatrixImpl ret  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  int col  m  minor  n  row  [TYPE]  double alpha 
[REPLACE]^alpha /= a*qr[minor][minor]; ;^174^^^^^152^184^[REPLACE] alpha /= rDiag[minor]*qr[minor][minor];^[METHOD] getQ [TYPE] RealMatrix [PARAMETER] [CLASS] QRDecompositionImpl   [TYPE]  double[][] Q  qr  r  [TYPE]  RealMatrixImpl ret  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  int col  m  minor  n  row  [TYPE]  double alpha 
[REPLACE]^Q[row][col] -= alpha ;^177^^^^^152^184^[REPLACE] Q[row][col] -= alpha*qr[row][minor];^[METHOD] getQ [TYPE] RealMatrix [PARAMETER] [CLASS] QRDecompositionImpl   [TYPE]  double[][] Q  qr  r  [TYPE]  RealMatrixImpl ret  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  int col  m  minor  n  row  [TYPE]  double alpha 
[ADD]^^177^^^^^152^184^[ADD] Q[row][col] -= alpha*qr[row][minor];^[METHOD] getQ [TYPE] RealMatrix [PARAMETER] [CLASS] QRDecompositionImpl   [TYPE]  double[][] Q  qr  r  [TYPE]  RealMatrixImpl ret  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  int col  m  minor  n  row  [TYPE]  double alpha 
[REPLACE]^double alpha = 0L;^170^^^^^152^184^[REPLACE] double alpha = 0;^[METHOD] getQ [TYPE] RealMatrix [PARAMETER] [CLASS] QRDecompositionImpl   [TYPE]  double[][] Q  qr  r  [TYPE]  RealMatrixImpl ret  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  int col  m  minor  n  row  [TYPE]  double alpha 
[REPLACE]^for  ( int row = row; row < m; row++ )  {^171^^^^^152^184^[REPLACE] for  ( int row = minor; row < m; row++ )  {^[METHOD] getQ [TYPE] RealMatrix [PARAMETER] [CLASS] QRDecompositionImpl   [TYPE]  double[][] Q  qr  r  [TYPE]  RealMatrixImpl ret  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  int col  m  minor  n  row  [TYPE]  double alpha 
[REPLACE]^for  ( int row = row; row < m; row++ )  {^176^^^^^152^184^[REPLACE] for  ( int row = minor; row < m; row++ )  {^[METHOD] getQ [TYPE] RealMatrix [PARAMETER] [CLASS] QRDecompositionImpl   [TYPE]  double[][] Q  qr  r  [TYPE]  RealMatrixImpl ret  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  int col  m  minor  n  row  [TYPE]  double alpha 
[REPLACE]^for  ( int row =minorinor; row  == minor; row++ )  {^176^^^^^152^184^[REPLACE] for  ( int row = minor; row < m; row++ )  {^[METHOD] getQ [TYPE] RealMatrix [PARAMETER] [CLASS] QRDecompositionImpl   [TYPE]  double[][] Q  qr  r  [TYPE]  RealMatrixImpl ret  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  int col  m  minor  n  row  [TYPE]  double alpha 
[REPLACE]^alpha /= rDiag[minor] ;^174^^^^^152^184^[REPLACE] alpha /= rDiag[minor]*qr[minor][minor];^[METHOD] getQ [TYPE] RealMatrix [PARAMETER] [CLASS] QRDecompositionImpl   [TYPE]  double[][] Q  qr  r  [TYPE]  RealMatrixImpl ret  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  int col  m  minor  n  row  [TYPE]  double alpha 
[REPLACE]^for  ( int col = row; col < m; col++ )  {^169^^^^^152^184^[REPLACE] for  ( int col = minor; col < m; col++ )  {^[METHOD] getQ [TYPE] RealMatrix [PARAMETER] [CLASS] QRDecompositionImpl   [TYPE]  double[][] Q  qr  r  [TYPE]  RealMatrixImpl ret  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  int col  m  minor  n  row  [TYPE]  double alpha 
[REPLACE]^double alpha = 0 * 0;^170^^^^^152^184^[REPLACE] double alpha = 0;^[METHOD] getQ [TYPE] RealMatrix [PARAMETER] [CLASS] QRDecompositionImpl   [TYPE]  double[][] Q  qr  r  [TYPE]  RealMatrixImpl ret  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  int col  m  minor  n  row  [TYPE]  double alpha 
[REPLACE]^for  ( int row = n; row < m; row++ )  {^176^^^^^152^184^[REPLACE] for  ( int row = minor; row < m; row++ )  {^[METHOD] getQ [TYPE] RealMatrix [PARAMETER] [CLASS] QRDecompositionImpl   [TYPE]  double[][] Q  qr  r  [TYPE]  RealMatrixImpl ret  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  int col  m  minor  n  row  [TYPE]  double alpha 
[REPLACE]^if  ( qr[minor][minor]  ==  0.0 )  {^168^^^^^152^184^[REPLACE] if  ( qr[minor][minor] != 0.0 )  {^[METHOD] getQ [TYPE] RealMatrix [PARAMETER] [CLASS] QRDecompositionImpl   [TYPE]  double[][] Q  qr  r  [TYPE]  RealMatrixImpl ret  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  int col  m  minor  n  row  [TYPE]  double alpha 
[REPLACE]^for  ( introw = minor; col  <=  m; col++ )  {^169^^^^^152^184^[REPLACE] for  ( int col = minor; col < m; col++ )  {^[METHOD] getQ [TYPE] RealMatrix [PARAMETER] [CLASS] QRDecompositionImpl   [TYPE]  double[][] Q  qr  r  [TYPE]  RealMatrixImpl ret  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  int col  m  minor  n  row  [TYPE]  double alpha 
[REPLACE]^for  ( int row = minor; row  <=  m; row++ )  {^171^^^^^152^184^[REPLACE] for  ( int row = minor; row < m; row++ )  {^[METHOD] getQ [TYPE] RealMatrix [PARAMETER] [CLASS] QRDecompositionImpl   [TYPE]  double[][] Q  qr  r  [TYPE]  RealMatrixImpl ret  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  int col  m  minor  n  row  [TYPE]  double alpha 
[ADD]^^172^^^^^152^184^[ADD] alpha -= Q[row][col] * qr[row][minor];^[METHOD] getQ [TYPE] RealMatrix [PARAMETER] [CLASS] QRDecompositionImpl   [TYPE]  double[][] Q  qr  r  [TYPE]  RealMatrixImpl ret  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  int col  m  minor  n  row  [TYPE]  double alpha 
[REPLACE]^for  ( int row = minor; row  >=  m; row++ )  {^176^^^^^152^184^[REPLACE] for  ( int row = minor; row < m; row++ )  {^[METHOD] getQ [TYPE] RealMatrix [PARAMETER] [CLASS] QRDecompositionImpl   [TYPE]  double[][] Q  qr  r  [TYPE]  RealMatrixImpl ret  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  int col  m  minor  n  row  [TYPE]  double alpha 
[ADD]^^174^^^^^152^184^[ADD] alpha /= rDiag[minor]*qr[minor][minor];^[METHOD] getQ [TYPE] RealMatrix [PARAMETER] [CLASS] QRDecompositionImpl   [TYPE]  double[][] Q  qr  r  [TYPE]  RealMatrixImpl ret  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  int col  m  minor  n  row  [TYPE]  double alpha 
[REPLACE]^double alpha = 0 << 4;^170^^^^^152^184^[REPLACE] double alpha = 0;^[METHOD] getQ [TYPE] RealMatrix [PARAMETER] [CLASS] QRDecompositionImpl   [TYPE]  double[][] Q  qr  r  [TYPE]  RealMatrixImpl ret  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  int col  m  minor  n  row  [TYPE]  double alpha 
[REPLACE]^for  ( int row = row; row  <=  m; row++ )  {^171^^^^^152^184^[REPLACE] for  ( int row = minor; row < m; row++ )  {^[METHOD] getQ [TYPE] RealMatrix [PARAMETER] [CLASS] QRDecompositionImpl   [TYPE]  double[][] Q  qr  r  [TYPE]  RealMatrixImpl ret  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  int col  m  minor  n  row  [TYPE]  double alpha 
[REPLACE]^for  ( int minor = minor; row  >  m; row++ )  {^176^^^^^152^184^[REPLACE] for  ( int row = minor; row < m; row++ )  {^[METHOD] getQ [TYPE] RealMatrix [PARAMETER] [CLASS] QRDecompositionImpl   [TYPE]  double[][] Q  qr  r  [TYPE]  RealMatrixImpl ret  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  int col  m  minor  n  row  [TYPE]  double alpha 
[REPLACE]^double alpha = 3;^170^^^^^152^184^[REPLACE] double alpha = 0;^[METHOD] getQ [TYPE] RealMatrix [PARAMETER] [CLASS] QRDecompositionImpl   [TYPE]  double[][] Q  qr  r  [TYPE]  RealMatrixImpl ret  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  int col  m  minor  n  row  [TYPE]  double alpha 
[REPLACE]^for  ( int minorinor = minor; row  !=  m; row++ )  {^171^^^^^152^184^[REPLACE] for  ( int row = minor; row < m; row++ )  {^[METHOD] getQ [TYPE] RealMatrix [PARAMETER] [CLASS] QRDecompositionImpl   [TYPE]  double[][] Q  qr  r  [TYPE]  RealMatrixImpl ret  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  int col  m  minor  n  row  [TYPE]  double alpha 
[REPLACE]^for  ( int minorinor = minor; row  <=  m; row++ )  {^176^^^^^152^184^[REPLACE] for  ( int row = minor; row < m; row++ )  {^[METHOD] getQ [TYPE] RealMatrix [PARAMETER] [CLASS] QRDecompositionImpl   [TYPE]  double[][] Q  qr  r  [TYPE]  RealMatrixImpl ret  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  int col  m  minor  n  row  [TYPE]  double alpha 
[REPLACE]^for  ( intminor = minor; row  ==  m; row++ )  {^171^^^^^152^184^[REPLACE] for  ( int row = minor; row < m; row++ )  {^[METHOD] getQ [TYPE] RealMatrix [PARAMETER] [CLASS] QRDecompositionImpl   [TYPE]  double[][] Q  qr  r  [TYPE]  RealMatrixImpl ret  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  int col  m  minor  n  row  [TYPE]  double alpha 
[REPLACE]^alpha -= qr[row][col]*qr[row][minor]; ;^172^^^^^152^184^[REPLACE] alpha -= Q[row][col] * qr[row][minor];^[METHOD] getQ [TYPE] RealMatrix [PARAMETER] [CLASS] QRDecompositionImpl   [TYPE]  double[][] Q  qr  r  [TYPE]  RealMatrixImpl ret  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  int col  m  minor  n  row  [TYPE]  double alpha 
[REPLACE]^Q[minor][minor] = 1 / 0;^167^^^^^152^184^[REPLACE] Q[minor][minor] = 1;^[METHOD] getQ [TYPE] RealMatrix [PARAMETER] [CLASS] QRDecompositionImpl   [TYPE]  double[][] Q  qr  r  [TYPE]  RealMatrixImpl ret  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  int col  m  minor  n  row  [TYPE]  double alpha 
[ADD]^^167^^^^^152^184^[ADD] Q[minor][minor] = 1;^[METHOD] getQ [TYPE] RealMatrix [PARAMETER] [CLASS] QRDecompositionImpl   [TYPE]  double[][] Q  qr  r  [TYPE]  RealMatrixImpl ret  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  int col  m  minor  n  row  [TYPE]  double alpha 
[REPLACE]^double alpha = 1;^170^^^^^152^184^[REPLACE] double alpha = 0;^[METHOD] getQ [TYPE] RealMatrix [PARAMETER] [CLASS] QRDecompositionImpl   [TYPE]  double[][] Q  qr  r  [TYPE]  RealMatrixImpl ret  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  int col  m  minor  n  row  [TYPE]  double alpha 
[REPLACE]^for  ( int col = minor; col  >  m; col++ )  {^169^^^^^152^184^[REPLACE] for  ( int col = minor; col < m; col++ )  {^[METHOD] getQ [TYPE] RealMatrix [PARAMETER] [CLASS] QRDecompositionImpl   [TYPE]  double[][] Q  qr  r  [TYPE]  RealMatrixImpl ret  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  int col  m  minor  n  row  [TYPE]  double alpha 
[REPLACE]^for  ( intminor = minor; row  <=  m; row++ )  {^171^^^^^152^184^[REPLACE] for  ( int row = minor; row < m; row++ )  {^[METHOD] getQ [TYPE] RealMatrix [PARAMETER] [CLASS] QRDecompositionImpl   [TYPE]  double[][] Q  qr  r  [TYPE]  RealMatrixImpl ret  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  int col  m  minor  n  row  [TYPE]  double alpha 
[REPLACE]^for  ( int row = minor; row  ==  m; row++ )  {^176^^^^^152^184^[REPLACE] for  ( int row = minor; row < m; row++ )  {^[METHOD] getQ [TYPE] RealMatrix [PARAMETER] [CLASS] QRDecompositionImpl   [TYPE]  double[][] Q  qr  r  [TYPE]  RealMatrixImpl ret  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  int col  m  minor  n  row  [TYPE]  double alpha 
[REPLACE]^for  ( int row = minor; row  ==  m; row++ )  {^171^^^^^152^184^[REPLACE] for  ( int row = minor; row < m; row++ )  {^[METHOD] getQ [TYPE] RealMatrix [PARAMETER] [CLASS] QRDecompositionImpl   [TYPE]  double[][] Q  qr  r  [TYPE]  RealMatrixImpl ret  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  int col  m  minor  n  row  [TYPE]  double alpha 
[REPLACE]^for  ( int row = minor; row  >  m; row++ )  {^176^^^^^152^184^[REPLACE] for  ( int row = minor; row < m; row++ )  {^[METHOD] getQ [TYPE] RealMatrix [PARAMETER] [CLASS] QRDecompositionImpl   [TYPE]  double[][] Q  qr  r  [TYPE]  RealMatrixImpl ret  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  int col  m  minor  n  row  [TYPE]  double alpha 
[REPLACE]^Q[minor][minor] = 1 >>> 3;^167^^^^^152^184^[REPLACE] Q[minor][minor] = 1;^[METHOD] getQ [TYPE] RealMatrix [PARAMETER] [CLASS] QRDecompositionImpl   [TYPE]  double[][] Q  qr  r  [TYPE]  RealMatrixImpl ret  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  int col  m  minor  n  row  [TYPE]  double alpha 
[REPLACE]^for  ( int minor = Math.min ( m,n )  | 2; minor >= 0; minor |  |  ) {^166^^^^^152^184^[REPLACE] for  ( int minor = Math.min ( m,n ) -1; minor >= 0; minor-- ) {^[METHOD] getQ [TYPE] RealMatrix [PARAMETER] [CLASS] QRDecompositionImpl   [TYPE]  double[][] Q  qr  r  [TYPE]  RealMatrixImpl ret  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  int col  m  minor  n  row  [TYPE]  double alpha 
[REPLACE]^for  ( int col = n; col < m; col++ )  {^169^^^^^152^184^[REPLACE] for  ( int col = minor; col < m; col++ )  {^[METHOD] getQ [TYPE] RealMatrix [PARAMETER] [CLASS] QRDecompositionImpl   [TYPE]  double[][] Q  qr  r  [TYPE]  RealMatrixImpl ret  [TYPE]  boolean false  true  [TYPE]  double[] rDiag  [TYPE]  int col  m  minor  n  row  [TYPE]  double alpha 
