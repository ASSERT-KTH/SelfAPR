[REPLACE]^private static  long serialVersionUID = 1768555336266158242L;^40^^^^^^^[REPLACE] private static final long serialVersionUID = 1768555336266158242L;^ [CLASS] ContinuedFraction  
[REPLACE]^private static final float DEFAULT_EPSILON = 10e-9;^43^^^^^^^[REPLACE] private static final double DEFAULT_EPSILON = 10e-9;^ [CLASS] ContinuedFraction  
[REPLACE]^double p1 = getA ( 0, x ) ;^49^^^^^48^50^[REPLACE] super (  ) ;^[METHOD] <init> [TYPE] ContinuedFraction() [PARAMETER] [CLASS] ContinuedFraction   [TYPE]  double DEFAULT_EPSILON  [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^return evaluate ( x, epsilon, Integer.MAX_VALUE ) ;^77^^^^^76^78^[REPLACE] return evaluate ( x, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] double x [CLASS] ContinuedFraction   [TYPE]  double DEFAULT_EPSILON  x  [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^return evaluate ( x, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^88^^^^^87^89^[REPLACE] return evaluate ( x, epsilon, Integer.MAX_VALUE ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon [CLASS] ContinuedFraction   [TYPE]  double DEFAULT_EPSILON  epsilon  x  [TYPE]  long serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^return evaluate ( x, epsilon, Integer.MAX_VALUE ) ;^99^^^^^98^100^[REPLACE] return evaluate ( x, DEFAULT_EPSILON, maxIterations ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] double x int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  epsilon  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations 
[REPLACE]^double p0 = 3.0d;^131^^^^^130^176^[REPLACE] double p0 = 1.0;^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
[REPLACE]^double p1 = getA ( 0 / 3, x ) ;^132^^^^^130^176^[REPLACE] double p1 = getA ( 0, x ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
[REPLACE]^double q0 = 0.0D;^133^^^^^130^176^[REPLACE] double q0 = 0.0;^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
[ADD]^double q1 = 1.0;^133^134^^^^130^176^[ADD] double q0 = 0.0; double q1 = 1.0;^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
[REPLACE]^double q1 = 3.0d;^134^^^^^130^176^[REPLACE] double q1 = 1.0;^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
[REPLACE]^double c = p2  ;^135^^^^^130^176^[REPLACE] double c = p1 / q1;^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
[REPLACE]^int n = 1;^136^^^^^130^176^[REPLACE] int n = 0;^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
[REPLACE]^double c = p1 / q1;^137^^^^^130^176^[REPLACE] double relativeError = Double.MAX_VALUE;^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
[REPLACE]^while  (true ;^138^^^^^130^176^[REPLACE] while  ( n < maxIterations && relativeError > epsilon )  {^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
[ADD]^^138^139^^^^130^176^[ADD] while  ( n < maxIterations && relativeError > epsilon )  { ++n;^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
[REPLACE]^if  (  Double.isInfinite ( q2 )  )  {^144^^^^^130^176^[REPLACE] if  ( Double.isInfinite ( p2 )  || Double.isInfinite ( q2 )  )  {^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
[ADD]^^144^145^146^147^148^130^176^[ADD] if  ( Double.isInfinite ( p2 )  || Double.isInfinite ( q2 )  )  {  if  ( a != 0.0 )  { p2 = p1 +  ( b / a * p0 ) ; q2 = q1 +  ( b / a * q0 ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
[REPLACE]^if  ( a  ==  0.0D )  {^146^^^^^130^176^[REPLACE] if  ( a != 0.0 )  {^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
[REPLACE]^}  else {^149^^^^^130^176^[REPLACE] } else if  ( b != 0 )  {^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
[ADD]^}   p2 =  ( a / b * p1 )  + p0;q2 =  ( a / b * q1 )  + q0;^149^150^151^152^^130^176^[ADD] else if  ( b != 0 )  { p2 =  ( a / b * p1 )  + p0; q2 =  ( a / b * q1 )  + q0; } else {^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
[REPLACE]^throw new ConvergenceException ( "Continued fraction convergents failed to converge." ) ; ;^154^155^156^^^149^157^[REPLACE] throw new ConvergenceException ( "Continued fraction convergents diverged to +/- " + "infinity." ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
[REPLACE]^q2 =  ( a / b * q1 )  + q0; ;^150^^^^^130^176^[REPLACE] p2 =  ( a / b * p1 )  + p0;^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
[REPLACE]^q2 =  ( a / b * q1 )  + q2;^151^^^^^130^176^[REPLACE] q2 =  ( a / b * q1 )  + q0;^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
[REPLACE]^p2 =  ( a / b * p1 )   &  p0;^150^^^^^130^176^[REPLACE] p2 =  ( a / b * p1 )  + p0;^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
[ADD]^^151^^^^^130^176^[ADD] q2 =  ( a / b * q1 )  + q0;^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
[REPLACE]^throw new ConvergenceException ( "Continued fraction convergents failed to converge." ) ; ;^154^155^156^^^130^176^[REPLACE] throw new ConvergenceException ( "Continued fraction convergents diverged to +/- " + "infinity." ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
[REPLACE]^p2 =q1 +  ( b / a * p0 ) ;^147^^^^^130^176^[REPLACE] p2 = p1 +  ( b / a * p0 ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
[REPLACE]^q2 =q2 +  ( b / a * q0 ) ;^148^^^^^130^176^[REPLACE] q2 = q1 +  ( b / a * q0 ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
[REPLACE]^}  if  ( b  ==  0 )  {^149^^^^^130^176^[REPLACE] } else if  ( b != 0 )  {^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
[REPLACE]^p2 =  ( a / b * p1 )  + p0; ;^151^^^^^130^176^[REPLACE] q2 =  ( a / b * q1 )  + q0;^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
[REPLACE]^p2 = p1 +  (q1 ) ;^147^^^^^130^176^[REPLACE] p2 = p1 +  ( b / a * p0 ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
[ADD]^q2 = q1 +  ( b / a * q0 ) ;^147^148^^^^130^176^[ADD] p2 = p1 +  ( b / a * p0 ) ; q2 = q1 +  ( b / a * q0 ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
[REPLACE]^return ;^154^155^156^^^130^176^[REPLACE] throw new ConvergenceException ( "Continued fraction convergents diverged to +/- " + "infinity." ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
[ADD]^^154^155^156^^^130^176^[ADD] throw new ConvergenceException ( "Continued fraction convergents diverged to +/- " + "infinity." ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
[REPLACE]^if  ( a  == relativeError )  {^146^^^^^130^176^[REPLACE] if  ( a != 0.0 )  {^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
[ADD]^p2 = p1 +  ( b / a * p0 ) ;q2 = q1 +  ( b / a * q0 ) ;p2 =  ( a / b * p1 )  + p0;^146^147^148^149^150^130^176^[ADD] if  ( a != 0.0 )  { p2 = p1 +  ( b / a * p0 ) ; q2 = q1 +  ( b / a * q0 ) ; } else if  ( b != 0 )  { p2 =  ( a / b * p1 )  + p0;^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
[REPLACE]^p2 =  ( a / b * p1 )  + q0;^150^^^^^130^176^[REPLACE] p2 =  ( a / b * p1 )  + p0;^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
[ADD]^^150^151^^^^130^176^[ADD] p2 =  ( a / b * p1 )  + p0; q2 =  ( a / b * q1 )  + q0;^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
[REPLACE]^p2 =  ( a / b * p1 )   <=  p0;^150^^^^^130^176^[REPLACE] p2 =  ( a / b * p1 )  + p0;^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
[REPLACE]^q2 =  ( a / b * q1 )   ^  q0;^151^^^^^130^176^[REPLACE] q2 =  ( a / b * q1 )  + q0;^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
[REPLACE]^p2 = p1  >   ( b / a * p0 ) ;^147^^^^^130^176^[REPLACE] p2 = p1 +  ( b / a * p0 ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
[REPLACE]^q2 = q1 +  (q2 ) ;^148^^^^^130^176^[REPLACE] q2 = q1 +  ( b / a * q0 ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
[ADD]^^148^^^^^130^176^[ADD] q2 = q1 +  ( b / a * q0 ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
[REPLACE]^}  if  ( b  ==  2 )  {^149^^^^^130^176^[REPLACE] } else if  ( b != 0 )  {^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
[REPLACE]^p2 =  ( a / b * p1 )   ==  p0;^150^^^^^130^176^[REPLACE] p2 =  ( a / b * p1 )  + p0;^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
[REPLACE]^q2 = q1 +  ( b / a * q0 ) ; ;^147^^^^^130^176^[REPLACE] p2 = p1 +  ( b / a * p0 ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
[REPLACE]^p2 = p1 +  ( b / a * p0 ) ; ;^148^^^^^130^176^[REPLACE] q2 = q1 +  ( b / a * q0 ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
[REPLACE]^relativeError = Math.abs ( relativeError - 1.0D ) ;^160^^^^^130^176^[REPLACE] relativeError = Math.abs ( r / c - 1.0 ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
[REPLACE]^c = p2  ;^163^^^^^130^176^[REPLACE] c = p2 / q2;^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
[REPLACE]^q0 = q1; ;^164^^^^^130^176^[REPLACE] p0 = p1;^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
[REPLACE]^p0 = p1; ;^165^^^^^130^176^[REPLACE] p1 = p2;^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
[REPLACE]^p0 = p1; ;^166^^^^^130^176^[REPLACE] q0 = q1;^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
[REPLACE]^q0 = q1; ;^167^^^^^130^176^[REPLACE] q1 = q2;^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
[REPLACE]^double p1 = getA ( 0, x ) ;^140^^^^^130^176^[REPLACE] double a = getA ( n, x ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
[REPLACE]^double a = getA ( n, x ) ;^141^^^^^130^176^[REPLACE] double b = getB ( n, x ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
[REPLACE]^double p2 = a * p1  |  b * p0;^142^^^^^130^176^[REPLACE] double p2 = a * p1 + b * p0;^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
[ADD]^^142^^^^^130^176^[ADD] double p2 = a * p1 + b * p0;^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
[REPLACE]^double p2 = a * p1 + b * p0;^143^^^^^130^176^[REPLACE] double q2 = a * q1 + b * q0;^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
[REPLACE]^double r = p2  ;^159^^^^^130^176^[REPLACE] double r = p2 / q2;^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
[REPLACE]^if  ( Double.isInfinite ( p2 )  ) {^144^^^^^130^176^[REPLACE] if  ( Double.isInfinite ( p2 )  || Double.isInfinite ( q2 )  )  {^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
[REPLACE]^if  ( a  ==  0.0 )  {^146^^^^^130^176^[REPLACE] if  ( a != 0.0 )  {^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
[REPLACE]^return ;^154^155^156^^^149^157^[REPLACE] throw new ConvergenceException ( "Continued fraction convergents diverged to +/- " + "infinity." ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
[ADD]^^154^155^156^^^149^157^[ADD] throw new ConvergenceException ( "Continued fraction convergents diverged to +/- " + "infinity." ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
[REPLACE]^p2 =  ( a / b * p1 )   ||  p0;^150^^^^^130^176^[REPLACE] p2 =  ( a / b * p1 )  + p0;^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
[REPLACE]^q2 =  ( a / b * q1 )   <=  q0;^151^^^^^130^176^[REPLACE] q2 =  ( a / b * q1 )  + q0;^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
[REPLACE]^p2 = q1 +  ( b / a * p0 ) ;^147^^^^^130^176^[REPLACE] p2 = p1 +  ( b / a * p0 ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
[REPLACE]^q2 = q2 +  ( b / a * q0 ) ;^148^^^^^130^176^[REPLACE] q2 = q1 +  ( b / a * q0 ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
[REPLACE]^p2 =  ( a / b * p1 )  +relativeError;^150^^^^^130^176^[REPLACE] p2 =  ( a / b * p1 )  + p0;^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
[REPLACE]^q2 =  ( a / b * q1 )  +relativeError;^151^^^^^130^176^[REPLACE] q2 =  ( a / b * q1 )  + q0;^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
[REPLACE]^} else if  ( b  ==  0 )  {^149^^^^^130^176^[REPLACE] } else if  ( b != 0 )  {^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
[REPLACE]^q2 =  ( a / b * q1 )   |  q0;^151^^^^^130^176^[REPLACE] q2 =  ( a / b * q1 )  + q0;^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
[ADD]^}   q2 =  ( a / b * q1 )  + q0;^149^150^151^152^^130^176^[ADD] else if  ( b != 0 )  { p2 =  ( a / b * p1 )  + p0; q2 =  ( a / b * q1 )  + q0; } else {^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
[REPLACE]^p2 =  ( a / b * p1 )   >=  p0;^150^^^^^130^176^[REPLACE] p2 =  ( a / b * p1 )  + p0;^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
[REPLACE]^p2 = p1  <=   ( b / a * p0 ) ;^147^^^^^130^176^[REPLACE] p2 = p1 +  ( b / a * p0 ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
[REPLACE]^relativeError = Math.abs ( r / c -relativeError ) ;^160^^^^^130^176^[REPLACE] relativeError = Math.abs ( r / c - 1.0 ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
[ADD]^^165^166^^^^130^176^[ADD] p1 = p2; q0 = q1;^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
[ADD]^^166^^^^^130^176^[ADD] q0 = q1;^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
[REPLACE]^double b = getB ( maxIterations, x ) ;^141^^^^^130^176^[REPLACE] double b = getB ( n, x ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
[ADD]^^141^^^^^130^176^[ADD] double b = getB ( n, x ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
[REPLACE]^double q2 = a * q1 + b * q0;^142^^^^^130^176^[REPLACE] double p2 = a * p1 + b * p0;^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
[ADD]^^142^143^^^^130^176^[ADD] double p2 = a * p1 + b * p0; double q2 = a * q1 + b * q0;^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
[REPLACE]^double q2 = a * q1  >  b * q0;^143^^^^^130^176^[REPLACE] double q2 = a * q1 + b * q0;^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
[REPLACE]^double r =p1  ;^159^^^^^130^176^[REPLACE] double r = p2 / q2;^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
[REPLACE]^if  ( n  !=  maxIterations )  {^170^^^^^130^176^[REPLACE] if  ( n >= maxIterations )  {^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
[ADD]^^170^171^172^173^^130^176^[ADD] if  ( n >= maxIterations )  { throw new ConvergenceException ( "Continued fraction convergents failed to converge." ) ; }^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
[REPLACE]^return ;^171^172^^^^130^176^[REPLACE] throw new ConvergenceException ( "Continued fraction convergents failed to converge." ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
[REPLACE]^throw new ConvergenceException ( "Continued fraction convergents diverged to +/- " + ;^171^172^^^^130^176^[REPLACE] throw new ConvergenceException ( "Continued fraction convergents failed to converge." ) ;^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
[REPLACE]^return evaluate ( x, DEFAULT_EPSILON, maxIterations ) ;^175^^^^^130^176^[REPLACE] return c;^[METHOD] evaluate [TYPE] double [PARAMETER] double x double epsilon int maxIterations [CLASS] ContinuedFraction   [TYPE]  boolean false  true  [TYPE]  double DEFAULT_EPSILON  a  b  c  epsilon  p0  p1  p2  q0  q1  q2  r  relativeError  x  [TYPE]  long serialVersionUID  [TYPE]  int maxIterations  n 
