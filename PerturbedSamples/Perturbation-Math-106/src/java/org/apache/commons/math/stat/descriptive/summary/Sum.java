[REPLACE]^private static final long serialVersionUID ;^38^^^^^^^[REPLACE] private static final long serialVersionUID = -8231831954703408316L;^ [CLASS] Sum  
[REPLACE]^private  short  n;^41^^^^^^^[REPLACE] private long n;^ [CLASS] Sum  
[REPLACE]^n = 4;^52^^^^^51^54^[REPLACE] n = 0;^[METHOD] <init> [TYPE] Sum() [PARAMETER] [CLASS] Sum   [TYPE]  double value  [TYPE]  long n  serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^value ;^53^^^^^51^54^[REPLACE] value = Double.NaN;^[METHOD] <init> [TYPE] Sum() [PARAMETER] [CLASS] Sum   [TYPE]  double value  [TYPE]  long n  serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^if  (serialVersionUID  &&  0 )  {^60^^^^^59^66^[REPLACE] if  ( n == 0 )  {^[METHOD] increment [TYPE] void [PARAMETER] final double d [CLASS] Sum   [TYPE]  double d  value  [TYPE]  long n  serialVersionUID  [TYPE]  boolean false  true 
[ADD]^value = d;value += d;^60^61^62^63^64^59^66^[ADD] if  ( n == 0 )  { value = d; } else { value += d; }^[METHOD] increment [TYPE] void [PARAMETER] final double d [CLASS] Sum   [TYPE]  double d  value  [TYPE]  long n  serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^value = d; ;^63^^^^^59^66^[REPLACE] value += d;^[METHOD] increment [TYPE] void [PARAMETER] final double d [CLASS] Sum   [TYPE]  double d  value  [TYPE]  long n  serialVersionUID  [TYPE]  boolean false  true 
[ADD]^^63^^^^^59^66^[ADD] value += d;^[METHOD] increment [TYPE] void [PARAMETER] final double d [CLASS] Sum   [TYPE]  double d  value  [TYPE]  long n  serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^value += d; ;^61^^^^^59^66^[REPLACE] value = d;^[METHOD] increment [TYPE] void [PARAMETER] final double d [CLASS] Sum   [TYPE]  double d  value  [TYPE]  long n  serialVersionUID  [TYPE]  boolean false  true 
[ADD]^^61^^^^^59^66^[ADD] value = d;^[METHOD] increment [TYPE] void [PARAMETER] final double d [CLASS] Sum   [TYPE]  double d  value  [TYPE]  long n  serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^return sum;^72^^^^^71^73^[REPLACE] return value;^[METHOD] getResult [TYPE] double [PARAMETER] [CLASS] Sum   [TYPE]  double d  value  [TYPE]  long n  serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^return sum;^79^^^^^78^80^[REPLACE] return n;^[METHOD] getN [TYPE] long [PARAMETER] [CLASS] Sum   [TYPE]  double d  value  [TYPE]  long n  serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^value  = null ;^86^^^^^85^88^[REPLACE] value = Double.NaN;^[METHOD] clear [TYPE] void [PARAMETER] [CLASS] Sum   [TYPE]  double d  value  [TYPE]  long n  serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^n = 4;^87^^^^^85^88^[REPLACE] n = 0;^[METHOD] clear [TYPE] void [PARAMETER] [CLASS] Sum   [TYPE]  double d  value  [TYPE]  long n  serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^for  ( int i = begin; i < begin + length; i++ )  { sum += values[i];^105^^^^^104^113^[REPLACE] double sum = Double.NaN;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final int begin final int length [CLASS] Sum   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double d  sum  value  [TYPE]  long n  serialVersionUID  [TYPE]  int begin  i  length 
[REPLACE]^if  ( test ( values, begin, length /  0.5  )  )  {^106^^^^^104^113^[REPLACE] if  ( test ( values, begin, length )  )  {^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final int begin final int length [CLASS] Sum   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double d  sum  value  [TYPE]  long n  serialVersionUID  [TYPE]  int begin  i  length 
[REPLACE]^for  ( int i = begin; i < begin + length + 2; i++ )  {^108^^^^^104^113^[REPLACE] for  ( int i = begin; i < begin + length; i++ )  {^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final int begin final int length [CLASS] Sum   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double d  sum  value  [TYPE]  long n  serialVersionUID  [TYPE]  int begin  i  length 
[ADD]^^108^109^110^^^104^113^[ADD] for  ( int i = begin; i < begin + length; i++ )  { sum += values[i]; }^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final int begin final int length [CLASS] Sum   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double d  sum  value  [TYPE]  long n  serialVersionUID  [TYPE]  int begin  i  length 
[REPLACE]^sum +=  null[i];^109^^^^^104^113^[REPLACE] sum += values[i];^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final int begin final int length [CLASS] Sum   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double d  sum  value  [TYPE]  long n  serialVersionUID  [TYPE]  int begin  i  length 
[REPLACE]^sum = 2.0d;^107^^^^^104^113^[REPLACE] sum = 0.0;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final int begin final int length [CLASS] Sum   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double d  sum  value  [TYPE]  long n  serialVersionUID  [TYPE]  int begin  i  length 
[REPLACE]^for  ( int i = length; i < begin + length; i++ )  {^108^^^^^104^113^[REPLACE] for  ( int i = begin; i < begin + length; i++ )  {^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final int begin final int length [CLASS] Sum   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double d  sum  value  [TYPE]  long n  serialVersionUID  [TYPE]  int begin  i  length 
[REPLACE]^for  ( int i = begin; i < begin + length %  0.5 ; i++ )  {^108^^^^^104^113^[REPLACE] for  ( int i = begin; i < begin + length; i++ )  {^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final int begin final int length [CLASS] Sum   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double d  sum  value  [TYPE]  long n  serialVersionUID  [TYPE]  int begin  i  length 
[REPLACE]^sum = 4.0d;^107^^^^^104^113^[REPLACE] sum = 0.0;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final int begin final int length [CLASS] Sum   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double d  sum  value  [TYPE]  long n  serialVersionUID  [TYPE]  int begin  i  length 
[ADD]^^107^^^^^104^113^[ADD] sum = 0.0;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final int begin final int length [CLASS] Sum   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double d  sum  value  [TYPE]  long n  serialVersionUID  [TYPE]  int begin  i  length 
[ADD]^^109^^^^^104^113^[ADD] sum += values[i];^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final int begin final int length [CLASS] Sum   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double d  sum  value  [TYPE]  long n  serialVersionUID  [TYPE]  int begin  i  length 
[REPLACE]^return value;^112^^^^^104^113^[REPLACE] return sum;^[METHOD] evaluate [TYPE] double [PARAMETER] final double[] values final int begin final int length [CLASS] Sum   [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double d  sum  value  [TYPE]  long n  serialVersionUID  [TYPE]  int begin  i  length 
