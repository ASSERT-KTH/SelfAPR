[REPLACE]^static final long serialVersionUID = 4978222553983172543;^34^^^^^^^[REPLACE] static final long serialVersionUID = 4978222553983172543L;^ [CLASS] TrapezoidIntegrator  
[REPLACE]^private float s;^37^^^^^^^[REPLACE] private double s;^ [CLASS] TrapezoidIntegrator  
[REPLACE]^super ( f, 64 - 3 ) ;^45^^^^^44^46^[REPLACE] super ( f, 64 ) ;^[METHOD] <init> [TYPE] UnivariateRealFunction) [PARAMETER] UnivariateRealFunction f [CLASS] TrapezoidIntegrator   [TYPE]  UnivariateRealFunction f  [TYPE]  boolean false  true  [TYPE]  double s  [TYPE]  long serialVersionUID 
[ADD]^^45^^^^^44^46^[ADD] super ( f, 64 ) ;^[METHOD] <init> [TYPE] UnivariateRealFunction) [PARAMETER] UnivariateRealFunction f [CLASS] TrapezoidIntegrator   [TYPE]  UnivariateRealFunction f  [TYPE]  boolean false  true  [TYPE]  double s  [TYPE]  long serialVersionUID 
[REPLACE]^int i = 1;^67^^^^^64^85^[REPLACE] long i, np;^[METHOD] stage [TYPE] double [PARAMETER] double min double max int n [CLASS] TrapezoidIntegrator   [TYPE]  boolean false  true  [TYPE]  double max  min  s  spacing  sum  x  [TYPE]  long i  np  serialVersionUID  [TYPE]  int n 
[REPLACE]^double t, oldt;^68^^^^^64^85^[REPLACE] double x, spacing, sum = 0;^[METHOD] stage [TYPE] double [PARAMETER] double min double max int n [CLASS] TrapezoidIntegrator   [TYPE]  boolean false  true  [TYPE]  double max  min  s  spacing  sum  x  [TYPE]  long i  np  serialVersionUID  [TYPE]  int n 
[REPLACE]^double x, spacing, sum = 0 >>> 3;^68^^^^^64^85^[REPLACE] double x, spacing, sum = 0;^[METHOD] stage [TYPE] double [PARAMETER] double min double max int n [CLASS] TrapezoidIntegrator   [TYPE]  boolean false  true  [TYPE]  double max  min  s  spacing  sum  x  [TYPE]  long i  np  serialVersionUID  [TYPE]  int n 
[REPLACE]^if  ( n  ||  0 )  {^70^^^^^64^85^[REPLACE] if  ( n == 0 )  {^[METHOD] stage [TYPE] double [PARAMETER] double min double max int n [CLASS] TrapezoidIntegrator   [TYPE]  boolean false  true  [TYPE]  double max  min  s  spacing  sum  x  [TYPE]  long i  np  serialVersionUID  [TYPE]  int n 
[ADD]^s = 0.5 *  ( max - min )  *  ( f.value ( min )  + f.value ( max )  ) ;return s;np = 1L <<  ( n-1 ) ;^70^71^72^73^74^64^85^[ADD] if  ( n == 0 )  { s = 0.5 *  ( max - min )  *  ( f.value ( min )  + f.value ( max )  ) ; return s; } else { np = 1L <<  ( n-1 ) ;^[METHOD] stage [TYPE] double [PARAMETER] double min double max int n [CLASS] TrapezoidIntegrator   [TYPE]  boolean false  true  [TYPE]  double max  min  s  spacing  sum  x  [TYPE]  long i  np  serialVersionUID  [TYPE]  int n 
[REPLACE]^for  (serialVersionUID = 0 << 4; i  >=  np; i++ )  {^77^^^^^64^85^[REPLACE] for  ( i = 0; i < np; i++ )  {^[METHOD] stage [TYPE] double [PARAMETER] double min double max int n [CLASS] TrapezoidIntegrator   [TYPE]  boolean false  true  [TYPE]  double max  min  s  spacing  sum  x  [TYPE]  long i  np  serialVersionUID  [TYPE]  int n 
[REPLACE]^sum +=  f.value ( max ) ;^78^^^^^64^85^[REPLACE] sum += f.value ( x ) ;^[METHOD] stage [TYPE] double [PARAMETER] double min double max int n [CLASS] TrapezoidIntegrator   [TYPE]  boolean false  true  [TYPE]  double max  min  s  spacing  sum  x  [TYPE]  long i  np  serialVersionUID  [TYPE]  int n 
[ADD]^^78^^^^^64^85^[ADD] sum += f.value ( x ) ;^[METHOD] stage [TYPE] double [PARAMETER] double min double max int n [CLASS] TrapezoidIntegrator   [TYPE]  boolean false  true  [TYPE]  double max  min  s  spacing  sum  x  [TYPE]  long i  np  serialVersionUID  [TYPE]  int n 
[REPLACE]^x +=  sum;^79^^^^^64^85^[REPLACE] x += spacing;^[METHOD] stage [TYPE] double [PARAMETER] double min double max int n [CLASS] TrapezoidIntegrator   [TYPE]  boolean false  true  [TYPE]  double max  min  s  spacing  sum  x  [TYPE]  long i  np  serialVersionUID  [TYPE]  int n 
[ADD]^^79^^^^^64^85^[ADD] x += spacing;^[METHOD] stage [TYPE] double [PARAMETER] double min double max int n [CLASS] TrapezoidIntegrator   [TYPE]  boolean false  true  [TYPE]  double max  min  s  spacing  sum  x  [TYPE]  long i  np  serialVersionUID  [TYPE]  int n 
[REPLACE]^np = serialVersionUID  >   ( n-1 ) ;^74^^^^^64^85^[REPLACE] np = 1L <<  ( n-1 ) ;^[METHOD] stage [TYPE] double [PARAMETER] double min double max int n [CLASS] TrapezoidIntegrator   [TYPE]  boolean false  true  [TYPE]  double max  min  s  spacing  sum  x  [TYPE]  long i  np  serialVersionUID  [TYPE]  int n 
[REPLACE]^spacing =  (x )   ;^75^^^^^64^85^[REPLACE] spacing =  ( max - min )  / np;^[METHOD] stage [TYPE] double [PARAMETER] double min double max int n [CLASS] TrapezoidIntegrator   [TYPE]  boolean false  true  [TYPE]  double max  min  s  spacing  sum  x  [TYPE]  long i  np  serialVersionUID  [TYPE]  int n 
[REPLACE]^x = min +spacing;^76^^^^^64^85^[REPLACE] x = min + 0.5 * spacing;^[METHOD] stage [TYPE] double [PARAMETER] double min double max int n [CLASS] TrapezoidIntegrator   [TYPE]  boolean false  true  [TYPE]  double max  min  s  spacing  sum  x  [TYPE]  long i  np  serialVersionUID  [TYPE]  int n 
[ADD]^^76^^^^^64^85^[ADD] x = min + 0.5 * spacing;^[METHOD] stage [TYPE] double [PARAMETER] double min double max int n [CLASS] TrapezoidIntegrator   [TYPE]  boolean false  true  [TYPE]  double max  min  s  spacing  sum  x  [TYPE]  long i  np  serialVersionUID  [TYPE]  int n 
[REPLACE]^for  ( i = 3; i < np; i++ )  {^77^^^^^64^85^[REPLACE] for  ( i = 0; i < np; i++ )  {^[METHOD] stage [TYPE] double [PARAMETER] double min double max int n [CLASS] TrapezoidIntegrator   [TYPE]  boolean false  true  [TYPE]  double max  min  s  spacing  sum  x  [TYPE]  long i  np  serialVersionUID  [TYPE]  int n 
[REPLACE]^sum +=  f.value ( null ) ;^78^^^^^64^85^[REPLACE] sum += f.value ( x ) ;^[METHOD] stage [TYPE] double [PARAMETER] double min double max int n [CLASS] TrapezoidIntegrator   [TYPE]  boolean false  true  [TYPE]  double max  min  s  spacing  sum  x  [TYPE]  long i  np  serialVersionUID  [TYPE]  int n 
[ADD]^^78^79^^^^64^85^[ADD] sum += f.value ( x ) ; x += spacing;^[METHOD] stage [TYPE] double [PARAMETER] double min double max int n [CLASS] TrapezoidIntegrator   [TYPE]  boolean false  true  [TYPE]  double max  min  s  spacing  sum  x  [TYPE]  long i  np  serialVersionUID  [TYPE]  int n 
[REPLACE]^s = 0.5  ;^82^^^^^64^85^[REPLACE] s = 0.5 *  ( s + sum * spacing ) ;^[METHOD] stage [TYPE] double [PARAMETER] double min double max int n [CLASS] TrapezoidIntegrator   [TYPE]  boolean false  true  [TYPE]  double max  min  s  spacing  sum  x  [TYPE]  long i  np  serialVersionUID  [TYPE]  int n 
[REPLACE]^return result;^83^^^^^64^85^[REPLACE] return s;^[METHOD] stage [TYPE] double [PARAMETER] double min double max int n [CLASS] TrapezoidIntegrator   [TYPE]  boolean false  true  [TYPE]  double max  min  s  spacing  sum  x  [TYPE]  long i  np  serialVersionUID  [TYPE]  int n 
[REPLACE]^s = 0.5  ;^71^^^^^64^85^[REPLACE] s = 0.5 *  ( max - min )  *  ( f.value ( min )  + f.value ( max )  ) ;^[METHOD] stage [TYPE] double [PARAMETER] double min double max int n [CLASS] TrapezoidIntegrator   [TYPE]  boolean false  true  [TYPE]  double max  min  s  spacing  sum  x  [TYPE]  long i  np  serialVersionUID  [TYPE]  int n 
[REPLACE]^return result;^72^^^^^64^85^[REPLACE] return s;^[METHOD] stage [TYPE] double [PARAMETER] double min double max int n [CLASS] TrapezoidIntegrator   [TYPE]  boolean false  true  [TYPE]  double max  min  s  spacing  sum  x  [TYPE]  long i  np  serialVersionUID  [TYPE]  int n 
[REPLACE]^for  ( i = 0; i  <= serialVersionUID; i++ )  {^77^^^^^64^85^[REPLACE] for  ( i = 0; i < np; i++ )  {^[METHOD] stage [TYPE] double [PARAMETER] double min double max int n [CLASS] TrapezoidIntegrator   [TYPE]  boolean false  true  [TYPE]  double max  min  s  spacing  sum  x  [TYPE]  long i  np  serialVersionUID  [TYPE]  int n 
[REPLACE]^s = 3.0d  ;^71^^^^^64^85^[REPLACE] s = 0.5 *  ( max - min )  *  ( f.value ( min )  + f.value ( max )  ) ;^[METHOD] stage [TYPE] double [PARAMETER] double min double max int n [CLASS] TrapezoidIntegrator   [TYPE]  boolean false  true  [TYPE]  double max  min  s  spacing  sum  x  [TYPE]  long i  np  serialVersionUID  [TYPE]  int n 
[REPLACE]^np =serialVersionUID  !=   ( n-1 ) ;^74^^^^^64^85^[REPLACE] np = 1L <<  ( n-1 ) ;^[METHOD] stage [TYPE] double [PARAMETER] double min double max int n [CLASS] TrapezoidIntegrator   [TYPE]  boolean false  true  [TYPE]  double max  min  s  spacing  sum  x  [TYPE]  long i  np  serialVersionUID  [TYPE]  int n 
[REPLACE]^spacing =  ( max - min )   ;^75^^^^^64^85^[REPLACE] spacing =  ( max - min )  / np;^[METHOD] stage [TYPE] double [PARAMETER] double min double max int n [CLASS] TrapezoidIntegrator   [TYPE]  boolean false  true  [TYPE]  double max  min  s  spacing  sum  x  [TYPE]  long i  np  serialVersionUID  [TYPE]  int n 
[REPLACE]^x =spacing + 0.5 * spacing;^76^^^^^64^85^[REPLACE] x = min + 0.5 * spacing;^[METHOD] stage [TYPE] double [PARAMETER] double min double max int n [CLASS] TrapezoidIntegrator   [TYPE]  boolean false  true  [TYPE]  double max  min  s  spacing  sum  x  [TYPE]  long i  np  serialVersionUID  [TYPE]  int n 
[REPLACE]^for  ( i = 4; i < np; i++ )  {^77^^^^^64^85^[REPLACE] for  ( i = 0; i < np; i++ )  {^[METHOD] stage [TYPE] double [PARAMETER] double min double max int n [CLASS] TrapezoidIntegrator   [TYPE]  boolean false  true  [TYPE]  double max  min  s  spacing  sum  x  [TYPE]  long i  np  serialVersionUID  [TYPE]  int n 
[ADD]^^77^78^79^80^^64^85^[ADD] for  ( i = 0; i < np; i++ )  { sum += f.value ( x ) ; x += spacing; }^[METHOD] stage [TYPE] double [PARAMETER] double min double max int n [CLASS] TrapezoidIntegrator   [TYPE]  boolean false  true  [TYPE]  double max  min  s  spacing  sum  x  [TYPE]  long i  np  serialVersionUID  [TYPE]  int n 
[REPLACE]^s = 0.5D  ;^82^^^^^64^85^[REPLACE] s = 0.5 *  ( s + sum * spacing ) ;^[METHOD] stage [TYPE] double [PARAMETER] double min double max int n [CLASS] TrapezoidIntegrator   [TYPE]  boolean false  true  [TYPE]  double max  min  s  spacing  sum  x  [TYPE]  long i  np  serialVersionUID  [TYPE]  int n 
[REPLACE]^int i = 2;^102^^^^^99^122^[REPLACE] int i = 1;^[METHOD] integrate [TYPE] double [PARAMETER] double min double max [CLASS] TrapezoidIntegrator   [TYPE]  boolean false  true  [TYPE]  double max  min  oldt  s  spacing  sum  t  x  [TYPE]  long i  np  serialVersionUID  [TYPE]  int i 
[REPLACE]^double x, spacing, sum = 0;^103^^^^^99^122^[REPLACE] double t, oldt;^[METHOD] integrate [TYPE] double [PARAMETER] double min double max [CLASS] TrapezoidIntegrator   [TYPE]  boolean false  true  [TYPE]  double max  min  oldt  s  spacing  sum  t  x  [TYPE]  long i  np  serialVersionUID  [TYPE]  int i 
[REPLACE]^super.verifyIterationCount (  ) ;^105^^^^^99^122^[REPLACE] clearResult (  ) ;^[METHOD] integrate [TYPE] double [PARAMETER] double min double max [CLASS] TrapezoidIntegrator   [TYPE]  boolean false  true  [TYPE]  double max  min  oldt  s  spacing  sum  t  x  [TYPE]  long i  np  serialVersionUID  [TYPE]  int i 
[REPLACE]^verifyInterval ( spacing, max ) ;^106^^^^^99^122^[REPLACE] verifyInterval ( min, max ) ;^[METHOD] integrate [TYPE] double [PARAMETER] double min double max [CLASS] TrapezoidIntegrator   [TYPE]  boolean false  true  [TYPE]  double max  min  oldt  s  spacing  sum  t  x  [TYPE]  long i  np  serialVersionUID  [TYPE]  int i 
[REPLACE]^oldt = stage ( min, max, 1 ) ;^109^^^^^99^122^[REPLACE] oldt = stage ( min, max, 0 ) ;^[METHOD] integrate [TYPE] double [PARAMETER] double min double max [CLASS] TrapezoidIntegrator   [TYPE]  boolean false  true  [TYPE]  double max  min  oldt  s  spacing  sum  t  x  [TYPE]  long i  np  serialVersionUID  [TYPE]  int i 
[ADD]^^109^^^^^99^122^[ADD] oldt = stage ( min, max, 0 ) ;^[METHOD] integrate [TYPE] double [PARAMETER] double min double max [CLASS] TrapezoidIntegrator   [TYPE]  boolean false  true  [TYPE]  double max  min  oldt  s  spacing  sum  t  x  [TYPE]  long i  np  serialVersionUID  [TYPE]  int i 
[REPLACE]^while  ( i  >=  maximalIterationCount )  {^110^^^^^99^122^[REPLACE] while  ( i <= maximalIterationCount )  {^[METHOD] integrate [TYPE] double [PARAMETER] double min double max [CLASS] TrapezoidIntegrator   [TYPE]  boolean false  true  [TYPE]  double max  min  oldt  s  spacing  sum  t  x  [TYPE]  long i  np  serialVersionUID  [TYPE]  int i 
[REPLACE]^if  ( i  ==  minimalIterationCount )  {^112^^^^^99^122^[REPLACE] if  ( i >= minimalIterationCount )  {^[METHOD] integrate [TYPE] double [PARAMETER] double min double max [CLASS] TrapezoidIntegrator   [TYPE]  boolean false  true  [TYPE]  double max  min  oldt  s  spacing  sum  t  x  [TYPE]  long i  np  serialVersionUID  [TYPE]  int i 
[REPLACE]^if  ( Math.abs ( t - oldt )   >  Math.abs ( relativeAccuracy * oldt )  )  {^113^^^^^99^122^[REPLACE] if  ( Math.abs ( t - oldt )  <= Math.abs ( relativeAccuracy * oldt )  )  {^[METHOD] integrate [TYPE] double [PARAMETER] double min double max [CLASS] TrapezoidIntegrator   [TYPE]  boolean false  true  [TYPE]  double max  min  oldt  s  spacing  sum  t  x  [TYPE]  long i  np  serialVersionUID  [TYPE]  int i 
[REPLACE]^return s;^115^^^^^99^122^[REPLACE] return result;^[METHOD] integrate [TYPE] double [PARAMETER] double min double max [CLASS] TrapezoidIntegrator   [TYPE]  boolean false  true  [TYPE]  double max  min  oldt  s  spacing  sum  t  x  [TYPE]  long i  np  serialVersionUID  [TYPE]  int i 
[REPLACE]^if  ( Math.abs ( t - oldt )   !=  Math.abs ( relativeAccuracy * oldt )  )  {^113^^^^^99^122^[REPLACE] if  ( Math.abs ( t - oldt )  <= Math.abs ( relativeAccuracy * oldt )  )  {^[METHOD] integrate [TYPE] double [PARAMETER] double min double max [CLASS] TrapezoidIntegrator   [TYPE]  boolean false  true  [TYPE]  double max  min  oldt  s  spacing  sum  t  x  [TYPE]  long i  np  serialVersionUID  [TYPE]  int i 
[REPLACE]^oldt = stage ( min, max, 0 ) ; ;^111^^^^^99^122^[REPLACE] t = stage ( min, max, i ) ;^[METHOD] integrate [TYPE] double [PARAMETER] double min double max [CLASS] TrapezoidIntegrator   [TYPE]  boolean false  true  [TYPE]  double max  min  oldt  s  spacing  sum  t  x  [TYPE]  long i  np  serialVersionUID  [TYPE]  int i 
[REPLACE]^oldt =  null;^118^^^^^99^122^[REPLACE] oldt = t;^[METHOD] integrate [TYPE] double [PARAMETER] double min double max [CLASS] TrapezoidIntegrator   [TYPE]  boolean false  true  [TYPE]  double max  min  oldt  s  spacing  sum  t  x  [TYPE]  long i  np  serialVersionUID  [TYPE]  int i 
[REPLACE]^if  ( i  <=  minimalIterationCounoldt )  {^112^^^^^99^122^[REPLACE] if  ( i >= minimalIterationCount )  {^[METHOD] integrate [TYPE] double [PARAMETER] double min double max [CLASS] TrapezoidIntegrator   [TYPE]  boolean false  true  [TYPE]  double max  min  oldt  s  spacing  sum  t  x  [TYPE]  long i  np  serialVersionUID  [TYPE]  int i 
[REPLACE]^if  ( Math.abs ( t - oldt )   ==  Math.abs ( relativeAccuracy * oldt )  )  {^113^^^^^99^122^[REPLACE] if  ( Math.abs ( t - oldt )  <= Math.abs ( relativeAccuracy * oldt )  )  {^[METHOD] integrate [TYPE] double [PARAMETER] double min double max [CLASS] TrapezoidIntegrator   [TYPE]  boolean false  true  [TYPE]  double max  min  oldt  s  spacing  sum  t  x  [TYPE]  long i  np  serialVersionUID  [TYPE]  int i 
[REPLACE]^if  ( Math.abs ( t - oldt )   >=  Math.abs ( relativeAccuracy * oldt )  )  {^113^^^^^99^122^[REPLACE] if  ( Math.abs ( t - oldt )  <= Math.abs ( relativeAccuracy * oldt )  )  {^[METHOD] integrate [TYPE] double [PARAMETER] double min double max [CLASS] TrapezoidIntegrator   [TYPE]  boolean false  true  [TYPE]  double max  min  oldt  s  spacing  sum  t  x  [TYPE]  long i  np  serialVersionUID  [TYPE]  int i 
[REPLACE]^return ;^121^^^^^99^122^[REPLACE] throw new ConvergenceException  (" ")  ;^[METHOD] integrate [TYPE] double [PARAMETER] double min double max [CLASS] TrapezoidIntegrator   [TYPE]  boolean false  true  [TYPE]  double max  min  oldt  s  spacing  sum  t  x  [TYPE]  long i  np  serialVersionUID  [TYPE]  int i 
[REPLACE]^super.clearResult (  ) ;^130^^^^^129^137^[REPLACE] super.verifyIterationCount (  ) ;^[METHOD] verifyIterationCount [TYPE] void [PARAMETER] [CLASS] TrapezoidIntegrator   [TYPE]  double max  min  oldt  s  spacing  sum  t  x  [TYPE]  long i  np  serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^if  ( maximalIterationCount  ==  2 )  {^132^^^^^129^137^[REPLACE] if  ( maximalIterationCount > 64 )  {^[METHOD] verifyIterationCount [TYPE] void [PARAMETER] [CLASS] TrapezoidIntegrator   [TYPE]  double max  min  oldt  s  spacing  sum  t  x  [TYPE]  long i  np  serialVersionUID  [TYPE]  boolean false  true 
[REPLACE]^return ;^133^134^135^^^129^137^[REPLACE] throw new IllegalArgumentException ( "Iteration upper limit out of [0, 64] range: " + maximalIterationCount ) ;^[METHOD] verifyIterationCount [TYPE] void [PARAMETER] [CLASS] TrapezoidIntegrator   [TYPE]  double max  min  oldt  s  spacing  sum  t  x  [TYPE]  long i  np  serialVersionUID  [TYPE]  boolean false  true 
