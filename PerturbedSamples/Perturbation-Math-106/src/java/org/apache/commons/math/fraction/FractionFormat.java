[REPLACE]^private static  long serialVersionUID = -6337346779577272306L;^40^^^^^^^[REPLACE] private static final long serialVersionUID = -6337346779577272306L;^ [CLASS] FractionFormat  
[REPLACE]^return getDefaultNumberFormat ( Locale.getDefault (  )  ) ;^53^^^^^52^54^[REPLACE] this ( getDefaultNumberFormat (  )  ) ;^[METHOD] <init> [TYPE] FractionFormat() [PARAMETER] [CLASS] FractionFormat   [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  numeratorFormat  [TYPE]  boolean false  true 
[REPLACE]^this ( numeratorFormat,  ( NumberFormat ) format.clone (  )  ) ;^62^^^^^61^63^[REPLACE] this ( format,  ( NumberFormat ) format.clone (  )  ) ;^[METHOD] <init> [TYPE] NumberFormat) [PARAMETER] NumberFormat format [CLASS] FractionFormat   [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  format  numeratorFormat  [TYPE]  boolean false  true 
[ADD]^^62^63^^^^61^63^[ADD] this ( format,  ( NumberFormat ) format.clone (  )  ) ; }^[METHOD] <init> [TYPE] NumberFormat) [PARAMETER] NumberFormat format [CLASS] FractionFormat   [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  format  numeratorFormat  [TYPE]  boolean false  true 
[REPLACE]^this ( format,  ( NumberFormat ) format.getAvailableLocales (  )  ) ;^62^^^^^61^63^[REPLACE] this ( format,  ( NumberFormat ) format.clone (  )  ) ;^[METHOD] <init> [TYPE] NumberFormat) [PARAMETER] NumberFormat format [CLASS] FractionFormat   [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  format  numeratorFormat  [TYPE]  boolean false  true 
[REPLACE]^pos.setBeginIndex ( 0 ) ;^74^^^^^71^77^[REPLACE] super (  ) ;^[METHOD] <init> [TYPE] NumberFormat) [PARAMETER] NumberFormat numeratorFormat NumberFormat denominatorFormat [CLASS] FractionFormat   [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  format  numeratorFormat  [TYPE]  boolean false  true 
[REPLACE]^this.numeratorFormat = format; ;^75^^^^^71^77^[REPLACE] this.numeratorFormat = numeratorFormat;^[METHOD] <init> [TYPE] NumberFormat) [PARAMETER] NumberFormat numeratorFormat NumberFormat denominatorFormat [CLASS] FractionFormat   [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  format  numeratorFormat  [TYPE]  boolean false  true 
[REPLACE]^this.denominatorFormat = format; ;^76^^^^^71^77^[REPLACE] this.denominatorFormat = denominatorFormat;^[METHOD] <init> [TYPE] NumberFormat) [PARAMETER] NumberFormat numeratorFormat NumberFormat denominatorFormat [CLASS] FractionFormat   [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  format  numeratorFormat  [TYPE]  boolean false  true 
[ADD]^^76^^^^^71^77^[ADD] this.denominatorFormat = denominatorFormat;^[METHOD] <init> [TYPE] NumberFormat) [PARAMETER] NumberFormat numeratorFormat NumberFormat denominatorFormat [CLASS] FractionFormat   [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  format  numeratorFormat  [TYPE]  boolean false  true 
[REPLACE]^return getImproperInstance (  )  .format ( f , null , false )  ;^87^^^^^86^88^[REPLACE] return getImproperInstance (  ) .format ( f ) ;^[METHOD] formatFraction [TYPE] String [PARAMETER] Fraction f [CLASS] FractionFormat   [TYPE]  Fraction f  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  format  numeratorFormat 
[REPLACE]^return NumberFormat.clone (  ) ;^96^^^^^95^97^[REPLACE] return NumberFormat.getAvailableLocales (  ) ;^[METHOD] getAvailableLocales [TYPE] Locale[] [PARAMETER] [CLASS] FractionFormat   [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  format  numeratorFormat  [TYPE]  boolean false  true 
[REPLACE]^return getProperInstance ( Locale.getDefault (  )  ) ;^104^^^^^103^105^[REPLACE] return getImproperInstance ( Locale.getDefault (  )  ) ;^[METHOD] getImproperInstance [TYPE] FractionFormat [PARAMETER] [CLASS] FractionFormat   [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  format  numeratorFormat  [TYPE]  boolean false  true 
[REPLACE]^Number num = getNumeratorFormat (  ) .parse ( source, pos ) ;^113^^^^^112^115^[REPLACE] NumberFormat f = getDefaultNumberFormat ( locale ) ;^[METHOD] getImproperInstance [TYPE] FractionFormat [PARAMETER] Locale locale [CLASS] FractionFormat   [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  f  format  numeratorFormat 
[ADD]^^113^^^^^112^115^[ADD] NumberFormat f = getDefaultNumberFormat ( locale ) ;^[METHOD] getImproperInstance [TYPE] FractionFormat [PARAMETER] Locale locale [CLASS] FractionFormat   [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  f  format  numeratorFormat 
[REPLACE]^return  new ProperFractionFormat ( numeratorFormat )  ;^114^^^^^112^115^[REPLACE] return new FractionFormat ( f ) ;^[METHOD] getImproperInstance [TYPE] FractionFormat [PARAMETER] Locale locale [CLASS] FractionFormat   [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  f  format  numeratorFormat 
[REPLACE]^return getImproperInstance ( Locale.getDefault (  )  ) ;^122^^^^^121^123^[REPLACE] return getProperInstance ( Locale.getDefault (  )  ) ;^[METHOD] getProperInstance [TYPE] FractionFormat [PARAMETER] [CLASS] FractionFormat   [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  f  format  numeratorFormat  [TYPE]  boolean false  true 
[REPLACE]^Number num = getNumeratorFormat (  ) .parse ( source, pos ) ;^131^^^^^130^133^[REPLACE] NumberFormat f = getDefaultNumberFormat ( locale ) ;^[METHOD] getProperInstance [TYPE] FractionFormat [PARAMETER] Locale locale [CLASS] FractionFormat   [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  f  format  numeratorFormat 
[REPLACE]^return  new Fraction ( num.intValue (  ) , 1 )  ;^132^^^^^130^133^[REPLACE] return new ProperFractionFormat ( f ) ;^[METHOD] getProperInstance [TYPE] FractionFormat [PARAMETER] Locale locale [CLASS] FractionFormat   [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  f  format  numeratorFormat 
[REPLACE]^return new Fraction ( num.intValue (  ) , den.intValue (  )  ) ;^142^^^^^141^143^[REPLACE] return getDefaultNumberFormat ( Locale.getDefault (  )  ) ;^[METHOD] getDefaultNumberFormat [TYPE] NumberFormat [PARAMETER] [CLASS] FractionFormat   [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  f  format  numeratorFormat  [TYPE]  boolean false  true 
[REPLACE]^NumberFormat nf = NumberFormat.setParseIntegerOnly ( locale ) ;^153^^^^^152^157^[REPLACE] NumberFormat nf = NumberFormat.getNumberInstance ( locale ) ;^[METHOD] getDefaultNumberFormat [TYPE] NumberFormat [PARAMETER] Locale locale [CLASS] FractionFormat   [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat 
[ADD]^^153^^^^^152^157^[ADD] NumberFormat nf = NumberFormat.getNumberInstance ( locale ) ;^[METHOD] getDefaultNumberFormat [TYPE] NumberFormat [PARAMETER] Locale locale [CLASS] FractionFormat   [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat 
[REPLACE]^nf.setMaximumFractionDigits ( 0 << 3 ) ;^154^^^^^152^157^[REPLACE] nf.setMaximumFractionDigits ( 0 ) ;^[METHOD] getDefaultNumberFormat [TYPE] NumberFormat [PARAMETER] Locale locale [CLASS] FractionFormat   [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat 
[REPLACE]^nf.setParseIntegerOnly ( false ) ;^155^^^^^152^157^[REPLACE] nf.setParseIntegerOnly ( true ) ;^[METHOD] getDefaultNumberFormat [TYPE] NumberFormat [PARAMETER] Locale locale [CLASS] FractionFormat   [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat 
[REPLACE]^return numeratorFormat;^156^^^^^152^157^[REPLACE] return nf;^[METHOD] getDefaultNumberFormat [TYPE] NumberFormat [PARAMETER] Locale locale [CLASS] FractionFormat   [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat 
[REPLACE]^pos.setEndIndex ( 0 - 4 ) ;^172^^^^^169^181^[REPLACE] pos.setBeginIndex ( 0 ) ;^[METHOD] format [TYPE] StringBuffer [PARAMETER] Fraction fraction StringBuffer toAppendTo FieldPosition pos [CLASS] FractionFormat   [TYPE]  Fraction fraction  [TYPE]  StringBuffer toAppendTo  [TYPE]  boolean false  true  [TYPE]  FieldPosition pos  [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat 
[REPLACE]^pos.setEndIndex ( 4 ) ;^173^^^^^169^181^[REPLACE] pos.setEndIndex ( 0 ) ;^[METHOD] format [TYPE] StringBuffer [PARAMETER] Fraction fraction StringBuffer toAppendTo FieldPosition pos [CLASS] FractionFormat   [TYPE]  Fraction fraction  [TYPE]  StringBuffer toAppendTo  [TYPE]  boolean false  true  [TYPE]  FieldPosition pos  [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat 
[REPLACE]^getDenominatorFormat (  ) .format ( fraction.getDenominator (  ) , toAppendTo, pos ) ;^175^^^^^169^181^[REPLACE] getNumeratorFormat (  ) .format ( fraction.getNumerator (  ) , toAppendTo, pos ) ;^[METHOD] format [TYPE] StringBuffer [PARAMETER] Fraction fraction StringBuffer toAppendTo FieldPosition pos [CLASS] FractionFormat   [TYPE]  Fraction fraction  [TYPE]  StringBuffer toAppendTo  [TYPE]  boolean false  true  [TYPE]  FieldPosition pos  [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat 
[REPLACE]^getNumeratorFormat (  ) .format ( fraction .getDenominator (  )  , toAppendTo, pos ) ;^175^^^^^169^181^[REPLACE] getNumeratorFormat (  ) .format ( fraction.getNumerator (  ) , toAppendTo, pos ) ;^[METHOD] format [TYPE] StringBuffer [PARAMETER] Fraction fraction StringBuffer toAppendTo FieldPosition pos [CLASS] FractionFormat   [TYPE]  Fraction fraction  [TYPE]  StringBuffer toAppendTo  [TYPE]  boolean false  true  [TYPE]  FieldPosition pos  [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat 
[REPLACE]^pos.setBeginIndex ( 0 ) ;^176^^^^^169^181^[REPLACE] toAppendTo.append ( " / " ) ;^[METHOD] format [TYPE] StringBuffer [PARAMETER] Fraction fraction StringBuffer toAppendTo FieldPosition pos [CLASS] FractionFormat   [TYPE]  Fraction fraction  [TYPE]  StringBuffer toAppendTo  [TYPE]  boolean false  true  [TYPE]  FieldPosition pos  [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat 
[REPLACE]^getDenominatorFormat (  ) .getNumberInstance ( fraction.getDenominator (  ) , toAppendTo, pos ) ;^177^178^^^^169^181^[REPLACE] getDenominatorFormat (  ) .format ( fraction.getDenominator (  ) , toAppendTo, pos ) ;^[METHOD] format [TYPE] StringBuffer [PARAMETER] Fraction fraction StringBuffer toAppendTo FieldPosition pos [CLASS] FractionFormat   [TYPE]  Fraction fraction  [TYPE]  StringBuffer toAppendTo  [TYPE]  boolean false  true  [TYPE]  FieldPosition pos  [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat 
[REPLACE]^getDenominatorFormat (  ) .format ( fraction.getNumerator (  ) , toAppendTo, pos ) ;^177^178^^^^169^181^[REPLACE] getDenominatorFormat (  ) .format ( fraction.getDenominator (  ) , toAppendTo, pos ) ;^[METHOD] format [TYPE] StringBuffer [PARAMETER] Fraction fraction StringBuffer toAppendTo FieldPosition pos [CLASS] FractionFormat   [TYPE]  Fraction fraction  [TYPE]  StringBuffer toAppendTo  [TYPE]  boolean false  true  [TYPE]  FieldPosition pos  [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat 
[REPLACE]^return result;^180^^^^^169^181^[REPLACE] return toAppendTo;^[METHOD] format [TYPE] StringBuffer [PARAMETER] Fraction fraction StringBuffer toAppendTo FieldPosition pos [CLASS] FractionFormat   [TYPE]  Fraction fraction  [TYPE]  StringBuffer toAppendTo  [TYPE]  boolean false  true  [TYPE]  FieldPosition pos  [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat 
[REPLACE]^StringBuffer ret = true;^199^^^^^196^217^[REPLACE] StringBuffer ret = null;^[METHOD] format [TYPE] StringBuffer [PARAMETER] Object obj StringBuffer toAppendTo FieldPosition pos [CLASS] FractionFormat   [TYPE]  StringBuffer ret  toAppendTo  [TYPE]  boolean false  true  [TYPE]  ConvergenceException ex  [TYPE]  Object obj  [TYPE]  FieldPosition pos  [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat 
[REPLACE]^if  ( ! obj instanceof Fraction )  {^201^^^^^196^217^[REPLACE] if  ( obj instanceof Fraction )  {^[METHOD] format [TYPE] StringBuffer [PARAMETER] Object obj StringBuffer toAppendTo FieldPosition pos [CLASS] FractionFormat   [TYPE]  StringBuffer ret  toAppendTo  [TYPE]  boolean false  true  [TYPE]  ConvergenceException ex  [TYPE]  Object obj  [TYPE]  FieldPosition pos  [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat 
[REPLACE]^} else if  ( ! obj instanceof Number )  {^203^^^^^196^217^[REPLACE] } else if  ( obj instanceof Number )  {^[METHOD] format [TYPE] StringBuffer [PARAMETER] Object obj StringBuffer toAppendTo FieldPosition pos [CLASS] FractionFormat   [TYPE]  StringBuffer ret  toAppendTo  [TYPE]  boolean false  true  [TYPE]  ConvergenceException ex  [TYPE]  Object obj  [TYPE]  FieldPosition pos  [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat 
[ADD]^}^203^204^205^206^^196^217^[ADD] else if  ( obj instanceof Number )  { try { ret = format (  new Fraction (  (  ( Number ) obj ) .doubleValue (  )  ) , toAppendTo, pos ) ;^[METHOD] format [TYPE] StringBuffer [PARAMETER] Object obj StringBuffer toAppendTo FieldPosition pos [CLASS] FractionFormat   [TYPE]  StringBuffer ret  toAppendTo  [TYPE]  boolean false  true  [TYPE]  ConvergenceException ex  [TYPE]  Object obj  [TYPE]  FieldPosition pos  [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat 
[REPLACE]^return ;^212^213^^^^196^217^[REPLACE] throw new IllegalArgumentException ( "Cannot format given object as a fraction" ) ;^[METHOD] format [TYPE] StringBuffer [PARAMETER] Object obj StringBuffer toAppendTo FieldPosition pos [CLASS] FractionFormat   [TYPE]  StringBuffer ret  toAppendTo  [TYPE]  boolean false  true  [TYPE]  ConvergenceException ex  [TYPE]  Object obj  [TYPE]  FieldPosition pos  [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat 
[ADD]^toAppendTo, pos ) ;^204^205^206^207^208^196^217^[ADD] try { ret = format (  new Fraction (  (  ( Number ) obj ) .doubleValue (  )  ) , toAppendTo, pos ) ; } catch  ( ConvergenceException ex )  { throw new IllegalArgumentException (^[METHOD] format [TYPE] StringBuffer [PARAMETER] Object obj StringBuffer toAppendTo FieldPosition pos [CLASS] FractionFormat   [TYPE]  StringBuffer ret  toAppendTo  [TYPE]  boolean false  true  [TYPE]  ConvergenceException ex  [TYPE]  Object obj  [TYPE]  FieldPosition pos  [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat 
[REPLACE]^ret =  format (  new Fraction (  (  ( Number ) obj ) .doubleValue (  )  ) , toAppendTo, pos ) ;^205^206^^^^196^217^[REPLACE] ret = format (  new Fraction (  (  ( Number ) obj ) .doubleValue (  )  ) , toAppendTo, pos ) ;^[METHOD] format [TYPE] StringBuffer [PARAMETER] Object obj StringBuffer toAppendTo FieldPosition pos [CLASS] FractionFormat   [TYPE]  StringBuffer ret  toAppendTo  [TYPE]  boolean false  true  [TYPE]  ConvergenceException ex  [TYPE]  Object obj  [TYPE]  FieldPosition pos  [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat 
[REPLACE]^return ;^208^209^^^^196^217^[REPLACE] throw new IllegalArgumentException ( "Cannot convert given object to a fraction." ) ;^[METHOD] format [TYPE] StringBuffer [PARAMETER] Object obj StringBuffer toAppendTo FieldPosition pos [CLASS] FractionFormat   [TYPE]  StringBuffer ret  toAppendTo  [TYPE]  boolean false  true  [TYPE]  ConvergenceException ex  [TYPE]  Object obj  [TYPE]  FieldPosition pos  [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat 
[REPLACE]^ret =  format (   new Fraction ( num.intValue (  ) , den.intValue (  )  )  obj ) .doubleValue (  )  ) , toAppendTo, pos ) ;^205^206^^^^196^217^[REPLACE] ret = format (  new Fraction (  (  ( Number ) obj ) .doubleValue (  )  ) , toAppendTo, pos ) ;^[METHOD] format [TYPE] StringBuffer [PARAMETER] Object obj StringBuffer toAppendTo FieldPosition pos [CLASS] FractionFormat   [TYPE]  StringBuffer ret  toAppendTo  [TYPE]  boolean false  true  [TYPE]  ConvergenceException ex  [TYPE]  Object obj  [TYPE]  FieldPosition pos  [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat 
[ADD]^^208^209^^^^196^217^[ADD] throw new IllegalArgumentException ( "Cannot convert given object to a fraction." ) ;^[METHOD] format [TYPE] StringBuffer [PARAMETER] Object obj StringBuffer toAppendTo FieldPosition pos [CLASS] FractionFormat   [TYPE]  StringBuffer ret  toAppendTo  [TYPE]  boolean false  true  [TYPE]  ConvergenceException ex  [TYPE]  Object obj  [TYPE]  FieldPosition pos  [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat 
[REPLACE]^throw new IllegalArgumentException ( "Cannot convert given object to a fraction." ) ; ;^212^213^^^^196^217^[REPLACE] throw new IllegalArgumentException ( "Cannot format given object as a fraction" ) ;^[METHOD] format [TYPE] StringBuffer [PARAMETER] Object obj StringBuffer toAppendTo FieldPosition pos [CLASS] FractionFormat   [TYPE]  StringBuffer ret  toAppendTo  [TYPE]  boolean false  true  [TYPE]  ConvergenceException ex  [TYPE]  Object obj  [TYPE]  FieldPosition pos  [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat 
[ADD]^^207^208^209^^^196^217^[ADD] catch  ( ConvergenceException ex )  { throw new IllegalArgumentException ( "Cannot convert given object to a fraction." ) ;^[METHOD] format [TYPE] StringBuffer [PARAMETER] Object obj StringBuffer toAppendTo FieldPosition pos [CLASS] FractionFormat   [TYPE]  StringBuffer ret  toAppendTo  [TYPE]  boolean false  true  [TYPE]  ConvergenceException ex  [TYPE]  Object obj  [TYPE]  FieldPosition pos  [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat 
[REPLACE]^ret =  format (   ( Fraction ) obj, toAppendTo, pos ) ;^202^^^^^196^217^[REPLACE] ret = format (   ( Fraction ) obj, toAppendTo, pos ) ;^[METHOD] format [TYPE] StringBuffer [PARAMETER] Object obj StringBuffer toAppendTo FieldPosition pos [CLASS] FractionFormat   [TYPE]  StringBuffer ret  toAppendTo  [TYPE]  boolean false  true  [TYPE]  ConvergenceException ex  [TYPE]  Object obj  [TYPE]  FieldPosition pos  [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat 
[REPLACE]^}  if  ( ! obj instanceof Number )  {^203^^^^^196^217^[REPLACE] } else if  ( obj instanceof Number )  {^[METHOD] format [TYPE] StringBuffer [PARAMETER] Object obj StringBuffer toAppendTo FieldPosition pos [CLASS] FractionFormat   [TYPE]  StringBuffer ret  toAppendTo  [TYPE]  boolean false  true  [TYPE]  ConvergenceException ex  [TYPE]  Object obj  [TYPE]  FieldPosition pos  [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat 
[ADD]^^205^206^207^208^209^196^217^[ADD] ret = format (  new Fraction (  (  ( Number ) obj ) .doubleValue (  )  ) , toAppendTo, pos ) ; } catch  ( ConvergenceException ex )  { throw new IllegalArgumentException ( "Cannot convert given object to a fraction." ) ;^[METHOD] format [TYPE] StringBuffer [PARAMETER] Object obj StringBuffer toAppendTo FieldPosition pos [CLASS] FractionFormat   [TYPE]  StringBuffer ret  toAppendTo  [TYPE]  boolean false  true  [TYPE]  ConvergenceException ex  [TYPE]  Object obj  [TYPE]  FieldPosition pos  [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat 
[REPLACE]^throw new IllegalArgumentException ( "numerator format can not be null." ) ; ;^208^209^^^^196^217^[REPLACE] throw new IllegalArgumentException ( "Cannot convert given object to a fraction." ) ;^[METHOD] format [TYPE] StringBuffer [PARAMETER] Object obj StringBuffer toAppendTo FieldPosition pos [CLASS] FractionFormat   [TYPE]  StringBuffer ret  toAppendTo  [TYPE]  boolean false  true  [TYPE]  ConvergenceException ex  [TYPE]  Object obj  [TYPE]  FieldPosition pos  [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat 
[REPLACE]^return toAppendTo;^216^^^^^196^217^[REPLACE] return ret;^[METHOD] format [TYPE] StringBuffer [PARAMETER] Object obj StringBuffer toAppendTo FieldPosition pos [CLASS] FractionFormat   [TYPE]  StringBuffer ret  toAppendTo  [TYPE]  boolean false  true  [TYPE]  ConvergenceException ex  [TYPE]  Object obj  [TYPE]  FieldPosition pos  [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat 
[REPLACE]^return getDefaultNumberFormat ( Locale.getDefault (  )  ) ;^224^^^^^223^225^[REPLACE] return denominatorFormat;^[METHOD] getDenominatorFormat [TYPE] NumberFormat [PARAMETER] [CLASS] FractionFormat   [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  boolean false  true 
[REPLACE]^return getDefaultNumberFormat ( Locale.getDefault (  )  ) ;^232^^^^^231^233^[REPLACE] return numeratorFormat;^[METHOD] getNumeratorFormat [TYPE] NumberFormat [PARAMETER] [CLASS] FractionFormat   [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  boolean false  true 
[REPLACE]^ParsePosition parsePosition = new ParsePosition ( 0 % 0 ) ;^243^^^^^242^250^[REPLACE] ParsePosition parsePosition = new ParsePosition ( 0 ) ;^[METHOD] parse [TYPE] Fraction [PARAMETER] String source [CLASS] FractionFormat   [TYPE]  Fraction result  [TYPE]  String source  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  ParsePosition parsePosition 
[REPLACE]^char c = parseNextCharacter ( source, pos ) ;^244^^^^^242^250^[REPLACE] Fraction result = parse ( source, parsePosition ) ;^[METHOD] parse [TYPE] Fraction [PARAMETER] String source [CLASS] FractionFormat   [TYPE]  Fraction result  [TYPE]  String source  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  ParsePosition parsePosition 
[REPLACE]^if  ( parsePosition.getIndex (  )   !=  0 )  {^245^^^^^242^250^[REPLACE] if  ( parsePosition.getIndex (  )  == 0 )  {^[METHOD] parse [TYPE] Fraction [PARAMETER] String source [CLASS] FractionFormat   [TYPE]  Fraction result  [TYPE]  String source  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  ParsePosition parsePosition 
[ADD]^^245^246^247^248^^242^250^[ADD] if  ( parsePosition.getIndex (  )  == 0 )  { throw new ParseException ( "Unparseable fraction number: \"" + source + "\"", parsePosition.getErrorIndex (  )  ) ; }^[METHOD] parse [TYPE] Fraction [PARAMETER] String source [CLASS] FractionFormat   [TYPE]  Fraction result  [TYPE]  String source  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  ParsePosition parsePosition 
[REPLACE]^return ;^246^247^^^^242^250^[REPLACE] throw new ParseException ( "Unparseable fraction number: \"" + source + "\"", parsePosition.getErrorIndex (  )  ) ;^[METHOD] parse [TYPE] Fraction [PARAMETER] String source [CLASS] FractionFormat   [TYPE]  Fraction result  [TYPE]  String source  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  ParsePosition parsePosition 
[ADD]^^246^247^^^^242^250^[ADD] throw new ParseException ( "Unparseable fraction number: \"" + source + "\"", parsePosition.getErrorIndex (  )  ) ;^[METHOD] parse [TYPE] Fraction [PARAMETER] String source [CLASS] FractionFormat   [TYPE]  Fraction result  [TYPE]  String source  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  ParsePosition parsePosition 
[REPLACE]^source + "\"", parsePosition .setErrorIndex ( this )   ) ;^247^^^^^242^250^[REPLACE] source + "\"", parsePosition.getErrorIndex (  )  ) ;^[METHOD] parse [TYPE] Fraction [PARAMETER] String source [CLASS] FractionFormat   [TYPE]  Fraction result  [TYPE]  String source  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  ParsePosition parsePosition 
[ADD]^^247^^^^^242^250^[ADD] source + "\"", parsePosition.getErrorIndex (  )  ) ;^[METHOD] parse [TYPE] Fraction [PARAMETER] String source [CLASS] FractionFormat   [TYPE]  Fraction result  [TYPE]  String source  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  ParsePosition parsePosition 
[REPLACE]^return nf;^249^^^^^242^250^[REPLACE] return result;^[METHOD] parse [TYPE] Fraction [PARAMETER] String source [CLASS] FractionFormat   [TYPE]  Fraction result  [TYPE]  String source  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  ParsePosition parsePosition 
[REPLACE]^int initialIndex = pos .setIndex ( initialIndex )  ;^260^^^^^259^309^[REPLACE] int initialIndex = pos.getIndex (  ) ;^[METHOD] parse [TYPE] Fraction [PARAMETER] String source ParsePosition pos [CLASS] FractionFormat   [TYPE]  boolean false  true  [TYPE]  Number den  num  [TYPE]  char c  [TYPE]  String source  [TYPE]  long serialVersionUID  [TYPE]  int initialIndex  startIndex  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  ParsePosition pos 
[ADD]^^260^^^^^259^309^[ADD] int initialIndex = pos.getIndex (  ) ;^[METHOD] parse [TYPE] Fraction [PARAMETER] String source ParsePosition pos [CLASS] FractionFormat   [TYPE]  boolean false  true  [TYPE]  Number den  num  [TYPE]  char c  [TYPE]  String source  [TYPE]  long serialVersionUID  [TYPE]  int initialIndex  startIndex  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  ParsePosition pos 
[REPLACE]^} while  ( Character.isWhitespace ( c )  && index < n ) ;^263^^^^^259^309^[REPLACE] parseAndIgnoreWhitespace ( source, pos ) ;^[METHOD] parse [TYPE] Fraction [PARAMETER] String source ParsePosition pos [CLASS] FractionFormat   [TYPE]  boolean false  true  [TYPE]  Number den  num  [TYPE]  char c  [TYPE]  String source  [TYPE]  long serialVersionUID  [TYPE]  int initialIndex  startIndex  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  ParsePosition pos 
[REPLACE]^Number num = getNumeratorFormat (  ) .getNumberInstance ( source, pos ) ;^266^^^^^259^309^[REPLACE] Number num = getNumeratorFormat (  ) .parse ( source, pos ) ;^[METHOD] parse [TYPE] Fraction [PARAMETER] String source ParsePosition pos [CLASS] FractionFormat   [TYPE]  boolean false  true  [TYPE]  Number den  num  [TYPE]  char c  [TYPE]  String source  [TYPE]  long serialVersionUID  [TYPE]  int initialIndex  startIndex  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  ParsePosition pos 
[REPLACE]^if  ( num != this  )  {^267^^^^^259^309^[REPLACE] if  ( num == null )  {^[METHOD] parse [TYPE] Fraction [PARAMETER] String source ParsePosition pos [CLASS] FractionFormat   [TYPE]  boolean false  true  [TYPE]  Number den  num  [TYPE]  char c  [TYPE]  String source  [TYPE]  long serialVersionUID  [TYPE]  int initialIndex  startIndex  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  ParsePosition pos 
[ADD]^^267^268^^^271^259^309^[ADD] if  ( num == null )  {  pos.setIndex ( initialIndex ) ;^[METHOD] parse [TYPE] Fraction [PARAMETER] String source ParsePosition pos [CLASS] FractionFormat   [TYPE]  boolean false  true  [TYPE]  Number den  num  [TYPE]  char c  [TYPE]  String source  [TYPE]  long serialVersionUID  [TYPE]  int initialIndex  startIndex  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  ParsePosition pos 
[REPLACE]^return true;^272^^^^^259^309^[REPLACE] return null;^[METHOD] parse [TYPE] Fraction [PARAMETER] String source ParsePosition pos [CLASS] FractionFormat   [TYPE]  boolean false  true  [TYPE]  Number den  num  [TYPE]  char c  [TYPE]  String source  [TYPE]  long serialVersionUID  [TYPE]  int initialIndex  startIndex  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  ParsePosition pos 
[REPLACE]^return this;^272^^^^^259^309^[REPLACE] return null;^[METHOD] parse [TYPE] Fraction [PARAMETER] String source ParsePosition pos [CLASS] FractionFormat   [TYPE]  boolean false  true  [TYPE]  Number den  num  [TYPE]  char c  [TYPE]  String source  [TYPE]  long serialVersionUID  [TYPE]  int initialIndex  startIndex  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  ParsePosition pos 
[REPLACE]^int startIndex = pos .setIndex ( initialIndex )  ;^276^^^^^259^309^[REPLACE] int startIndex = pos.getIndex (  ) ;^[METHOD] parse [TYPE] Fraction [PARAMETER] String source ParsePosition pos [CLASS] FractionFormat   [TYPE]  boolean false  true  [TYPE]  Number den  num  [TYPE]  char c  [TYPE]  String source  [TYPE]  long serialVersionUID  [TYPE]  int initialIndex  startIndex  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  ParsePosition pos 
[REPLACE]^Number num = getNumeratorFormat (  ) .parse ( source, pos ) ;^277^^^^^259^309^[REPLACE] char c = parseNextCharacter ( source, pos ) ;^[METHOD] parse [TYPE] Fraction [PARAMETER] String source ParsePosition pos [CLASS] FractionFormat   [TYPE]  boolean false  true  [TYPE]  Number den  num  [TYPE]  char c  [TYPE]  String source  [TYPE]  long serialVersionUID  [TYPE]  int initialIndex  startIndex  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  ParsePosition pos 
[REPLACE]^return new Fraction ( num.doubleValue (  ) , 1 ) ;^282^^^^^259^309^[REPLACE] return new Fraction ( num.intValue (  ) , 1 ) ;^[METHOD] parse [TYPE] Fraction [PARAMETER] String source ParsePosition pos [CLASS] FractionFormat   [TYPE]  boolean false  true  [TYPE]  Number den  num  [TYPE]  char c  [TYPE]  String source  [TYPE]  long serialVersionUID  [TYPE]  int initialIndex  startIndex  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  ParsePosition pos 
[REPLACE]^return true;^292^^^^^259^309^[REPLACE] return null;^[METHOD] parse [TYPE] Fraction [PARAMETER] String source ParsePosition pos [CLASS] FractionFormat   [TYPE]  boolean false  true  [TYPE]  Number den  num  [TYPE]  char c  [TYPE]  String source  [TYPE]  long serialVersionUID  [TYPE]  int initialIndex  startIndex  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  ParsePosition pos 
[REPLACE]^} while  ( Character.isWhitespace ( c )  && index < n ) ;^296^^^^^259^309^[REPLACE] parseAndIgnoreWhitespace ( source, pos ) ;^[METHOD] parse [TYPE] Fraction [PARAMETER] String source ParsePosition pos [CLASS] FractionFormat   [TYPE]  boolean false  true  [TYPE]  Number den  num  [TYPE]  char c  [TYPE]  String source  [TYPE]  long serialVersionUID  [TYPE]  int initialIndex  startIndex  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  ParsePosition pos 
[ADD]^^296^^^^^259^309^[ADD] parseAndIgnoreWhitespace ( source, pos ) ;^[METHOD] parse [TYPE] Fraction [PARAMETER] String source ParsePosition pos [CLASS] FractionFormat   [TYPE]  boolean false  true  [TYPE]  Number den  num  [TYPE]  char c  [TYPE]  String source  [TYPE]  long serialVersionUID  [TYPE]  int initialIndex  startIndex  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  ParsePosition pos 
[REPLACE]^Number den = getDenominatorFormat (  )  .parse ( source , pos )  ;^299^^^^^259^309^[REPLACE] Number den = getDenominatorFormat (  ) .parse ( source, pos ) ;^[METHOD] parse [TYPE] Fraction [PARAMETER] String source ParsePosition pos [CLASS] FractionFormat   [TYPE]  boolean false  true  [TYPE]  Number den  num  [TYPE]  char c  [TYPE]  String source  [TYPE]  long serialVersionUID  [TYPE]  int initialIndex  startIndex  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  ParsePosition pos 
[REPLACE]^if  ( den != null )  {^300^^^^^259^309^[REPLACE] if  ( den == null )  {^[METHOD] parse [TYPE] Fraction [PARAMETER] String source ParsePosition pos [CLASS] FractionFormat   [TYPE]  boolean false  true  [TYPE]  Number den  num  [TYPE]  char c  [TYPE]  String source  [TYPE]  long serialVersionUID  [TYPE]  int initialIndex  startIndex  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  ParsePosition pos 
[REPLACE]^return true;^305^^^^^259^309^[REPLACE] return null;^[METHOD] parse [TYPE] Fraction [PARAMETER] String source ParsePosition pos [CLASS] FractionFormat   [TYPE]  boolean false  true  [TYPE]  Number den  num  [TYPE]  char c  [TYPE]  String source  [TYPE]  long serialVersionUID  [TYPE]  int initialIndex  startIndex  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  ParsePosition pos 
[REPLACE]^return new Fraction ( num .doubleValue (  )  , den^308^^^^^259^309^[REPLACE] return new Fraction ( num.intValue (  ) , den.intValue (  )  ) ;^[METHOD] parse [TYPE] Fraction [PARAMETER] String source ParsePosition pos [CLASS] FractionFormat   [TYPE]  boolean false  true  [TYPE]  Number den  num  [TYPE]  char c  [TYPE]  String source  [TYPE]  long serialVersionUID  [TYPE]  int initialIndex  startIndex  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  ParsePosition pos 
[REPLACE]^return getDefaultNumberFormat ( Locale.getDefault (  )  ) ;^319^^^^^318^320^[REPLACE] return parse ( source, pos ) ;^[METHOD] parseObject [TYPE] Object [PARAMETER] String source ParsePosition pos [CLASS] FractionFormat   [TYPE]  String source  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  ParsePosition pos 
[REPLACE]^if  (numeratorFormat != null )  {^329^^^^^328^334^[REPLACE] if  ( format == null )  {^[METHOD] setDenominatorFormat [TYPE] void [PARAMETER] NumberFormat format [CLASS] FractionFormat   [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  boolean false  true 
[ADD]^^329^330^331^332^^328^334^[ADD] if  ( format == null )  { throw new IllegalArgumentException ( "denominator format can not be null." ) ; }^[METHOD] setDenominatorFormat [TYPE] void [PARAMETER] NumberFormat format [CLASS] FractionFormat   [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  boolean false  true 
[REPLACE]^throw new IllegalArgumentException ( "Cannot convert given object to a fraction." ) ; ;^330^331^^^^328^334^[REPLACE] throw new IllegalArgumentException ( "denominator format can not be null." ) ;^[METHOD] setDenominatorFormat [TYPE] void [PARAMETER] NumberFormat format [CLASS] FractionFormat   [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  boolean false  true 
[ADD]^^330^331^^^^328^334^[ADD] throw new IllegalArgumentException ( "denominator format can not be null." ) ;^[METHOD] setDenominatorFormat [TYPE] void [PARAMETER] NumberFormat format [CLASS] FractionFormat   [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  boolean false  true 
[REPLACE]^this.numeratorFormat = format; ;^333^^^^^328^334^[REPLACE] this.denominatorFormat = format;^[METHOD] setDenominatorFormat [TYPE] void [PARAMETER] NumberFormat format [CLASS] FractionFormat   [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  boolean false  true 
[REPLACE]^if  ( format != this )  {^343^^^^^342^348^[REPLACE] if  ( format == null )  {^[METHOD] setNumeratorFormat [TYPE] void [PARAMETER] NumberFormat format [CLASS] FractionFormat   [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  boolean false  true 
[REPLACE]^throw new IllegalArgumentException ( "Cannot convert given object to a fraction." ) ; ;^344^345^^^^342^348^[REPLACE] throw new IllegalArgumentException ( "numerator format can not be null." ) ;^[METHOD] setNumeratorFormat [TYPE] void [PARAMETER] NumberFormat format [CLASS] FractionFormat   [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  boolean false  true 
[ADD]^^344^345^^^^342^348^[ADD] throw new IllegalArgumentException ( "numerator format can not be null." ) ;^[METHOD] setNumeratorFormat [TYPE] void [PARAMETER] NumberFormat format [CLASS] FractionFormat   [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  boolean false  true 
[REPLACE]^this.denominatorFormat = format; ;^347^^^^^342^348^[REPLACE] this.numeratorFormat = format;^[METHOD] setNumeratorFormat [TYPE] void [PARAMETER] NumberFormat format [CLASS] FractionFormat   [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  boolean false  true 
[ADD]^^347^348^^^^342^348^[ADD] this.numeratorFormat = format; }^[METHOD] setNumeratorFormat [TYPE] void [PARAMETER] NumberFormat format [CLASS] FractionFormat   [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  boolean false  true 
[REPLACE]^parseAndIgnoreWhitespace ( source, pos ) ;^359^^^^^356^361^[REPLACE] parseNextCharacter ( source, pos ) ;^[METHOD] parseAndIgnoreWhitespace [TYPE] void [PARAMETER] String source ParsePosition pos [CLASS] FractionFormat   [TYPE]  String source  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  ParsePosition pos 
[ADD]^^359^^^^^356^361^[ADD] parseNextCharacter ( source, pos ) ;^[METHOD] parseAndIgnoreWhitespace [TYPE] void [PARAMETER] String source ParsePosition pos [CLASS] FractionFormat   [TYPE]  String source  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  ParsePosition pos 
[REPLACE]^pos .getIndex (  )  ;^360^^^^^356^361^[REPLACE] pos.setIndex ( pos.getIndex (  )  - 1 ) ;^[METHOD] parseAndIgnoreWhitespace [TYPE] void [PARAMETER] String source ParsePosition pos [CLASS] FractionFormat   [TYPE]  String source  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  ParsePosition pos 
[REPLACE]^pos.setIndex ( pos.setIndex (  )  - 1 ) ;^360^^^^^356^361^[REPLACE] pos.setIndex ( pos.getIndex (  )  - 1 ) ;^[METHOD] parseAndIgnoreWhitespace [TYPE] void [PARAMETER] String source ParsePosition pos [CLASS] FractionFormat   [TYPE]  String source  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  ParsePosition pos 
[REPLACE]^int index = pos.getErrorIndex (  ) ;^370^^^^^369^387^[REPLACE] int index = pos.getIndex (  ) ;^[METHOD] parseNextCharacter [TYPE] char [PARAMETER] String source ParsePosition pos [CLASS] FractionFormat   [TYPE]  boolean false  true  [TYPE]  char c  ret  [TYPE]  String source  [TYPE]  long serialVersionUID  [TYPE]  int index  n  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  ParsePosition pos 
[REPLACE]^int startIndex = pos.getIndex (  ) ;^371^^^^^369^387^[REPLACE] int n = source.length (  ) ;^[METHOD] parseNextCharacter [TYPE] char [PARAMETER] String source ParsePosition pos [CLASS] FractionFormat   [TYPE]  boolean false  true  [TYPE]  char c  ret  [TYPE]  String source  [TYPE]  long serialVersionUID  [TYPE]  int index  n  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  ParsePosition pos 
[ADD]^^371^^^^^369^387^[ADD] int n = source.length (  ) ;^[METHOD] parseNextCharacter [TYPE] char [PARAMETER] String source ParsePosition pos [CLASS] FractionFormat   [TYPE]  boolean false  true  [TYPE]  char c  ret  [TYPE]  String source  [TYPE]  long serialVersionUID  [TYPE]  int index  n  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  ParsePosition pos 
[REPLACE]^char ret = 0 - 4;^372^^^^^369^387^[REPLACE] char ret = 0;^[METHOD] parseNextCharacter [TYPE] char [PARAMETER] String source ParsePosition pos [CLASS] FractionFormat   [TYPE]  boolean false  true  [TYPE]  char c  ret  [TYPE]  String source  [TYPE]  long serialVersionUID  [TYPE]  int index  n  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  ParsePosition pos 
[ADD]^^372^^^^^369^387^[ADD] char ret = 0;^[METHOD] parseNextCharacter [TYPE] char [PARAMETER] String source ParsePosition pos [CLASS] FractionFormat   [TYPE]  boolean false  true  [TYPE]  char c  ret  [TYPE]  String source  [TYPE]  long serialVersionUID  [TYPE]  int index  n  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  ParsePosition pos 
[REPLACE]^if  ( index  <=  n )  {^374^^^^^369^387^[REPLACE] if  ( index < n )  {^[METHOD] parseNextCharacter [TYPE] char [PARAMETER] String source ParsePosition pos [CLASS] FractionFormat   [TYPE]  boolean false  true  [TYPE]  char c  ret  [TYPE]  String source  [TYPE]  long serialVersionUID  [TYPE]  int index  n  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  ParsePosition pos 
[REPLACE]^if  ( index  <=  n )  {^381^^^^^369^387^[REPLACE] if  ( index < n )  {^[METHOD] parseNextCharacter [TYPE] char [PARAMETER] String source ParsePosition pos [CLASS] FractionFormat   [TYPE]  boolean false  true  [TYPE]  char c  ret  [TYPE]  String source  [TYPE]  long serialVersionUID  [TYPE]  int index  n  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  ParsePosition pos 
[REPLACE]^ret =  null;^382^^^^^369^387^[REPLACE] ret = c;^[METHOD] parseNextCharacter [TYPE] char [PARAMETER] String source ParsePosition pos [CLASS] FractionFormat   [TYPE]  boolean false  true  [TYPE]  char c  ret  [TYPE]  String source  [TYPE]  long serialVersionUID  [TYPE]  int index  n  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  ParsePosition pos 
[REPLACE]^c =  null.charAt ( index++ ) ;^377^^^^^369^387^[REPLACE] c = source.charAt ( index++ ) ;^[METHOD] parseNextCharacter [TYPE] char [PARAMETER] String source ParsePosition pos [CLASS] FractionFormat   [TYPE]  boolean false  true  [TYPE]  char c  ret  [TYPE]  String source  [TYPE]  long serialVersionUID  [TYPE]  int index  n  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  ParsePosition pos 
[REPLACE]^char ret = 0;^375^^^^^369^387^[REPLACE] char c;^[METHOD] parseNextCharacter [TYPE] char [PARAMETER] String source ParsePosition pos [CLASS] FractionFormat   [TYPE]  boolean false  true  [TYPE]  char c  ret  [TYPE]  String source  [TYPE]  long serialVersionUID  [TYPE]  int index  n  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  ParsePosition pos 
[REPLACE]^if  ( index  ==  n )  {^381^^^^^369^387^[REPLACE] if  ( index < n )  {^[METHOD] parseNextCharacter [TYPE] char [PARAMETER] String source ParsePosition pos [CLASS] FractionFormat   [TYPE]  boolean false  true  [TYPE]  char c  ret  [TYPE]  String source  [TYPE]  long serialVersionUID  [TYPE]  int index  n  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  ParsePosition pos 
[REPLACE]^return result;^386^^^^^369^387^[REPLACE] return ret;^[METHOD] parseNextCharacter [TYPE] char [PARAMETER] String source ParsePosition pos [CLASS] FractionFormat   [TYPE]  boolean false  true  [TYPE]  char c  ret  [TYPE]  String source  [TYPE]  long serialVersionUID  [TYPE]  int index  n  [TYPE]  NumberFormat denominatorFormat  f  format  nf  numeratorFormat  [TYPE]  ParsePosition pos 
