[REPLACE]^public static  Fraction ONE = new Fraction ( 1, 1 ) ;^31^^^^^^^[REPLACE] public static final Fraction ONE = new Fraction ( 1, 1 ) ;^ [CLASS] Fraction  
[REPLACE]^public static  Fraction ZERO = new Fraction ( 0, 1 ) ;^34^^^^^^^[REPLACE] public static final Fraction ZERO = new Fraction ( 0, 1 ) ;^ [CLASS] Fraction  
[REPLACE]^private static final long serialVersionUID = 65382027393090;^37^^^^^^^[REPLACE] private static final long serialVersionUID = 65382027393090L;^ [CLASS] Fraction  
[REPLACE]^return isAdd ? fraction : fraction.negate (  ) ;^52^^^^^51^53^[REPLACE] this ( value, 1.0e-5, 100 ) ;^[METHOD] <init> [TYPE] Fraction(double) [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int denominator  numerator  [TYPE]  double value 
[REPLACE]^double r0 = epsilon;^74^^^^^73^123^[REPLACE] double r0 = value;^[METHOD] <init> [TYPE] Fraction(double,double,int) [PARAMETER] double value double epsilon int maxIterations [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  stop  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  [TYPE]  double convergent  epsilon  r0  r1  value 
[REPLACE]^int a0 =  ( int )   r1   ;^75^^^^^73^123^[REPLACE] int a0 =  ( int ) Math.floor ( r0 ) ;^[METHOD] <init> [TYPE] Fraction(double,double,int) [PARAMETER] double value double epsilon int maxIterations [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  stop  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  [TYPE]  double convergent  epsilon  r0  r1  value 
[REPLACE]^if  ( Math.abs ( a0 - value )   >=  epsilon )  {^79^^^^^73^123^[REPLACE] if  ( Math.abs ( a0 - value )  < epsilon )  {^[METHOD] <init> [TYPE] Fraction(double,double,int) [PARAMETER] double value double epsilon int maxIterations [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  stop  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  [TYPE]  double convergent  epsilon  r0  r1  value 
[REPLACE]^this.numerator = num; ;^80^^^^^73^123^[REPLACE] this.numerator = a0;^[METHOD] <init> [TYPE] Fraction(double,double,int) [PARAMETER] double value double epsilon int maxIterations [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  stop  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  [TYPE]  double convergent  epsilon  r0  r1  value 
[REPLACE]^this.denominator = 1 - 0;^81^^^^^73^123^[REPLACE] this.denominator = 1;^[METHOD] <init> [TYPE] Fraction(double,double,int) [PARAMETER] double value double epsilon int maxIterations [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  stop  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  [TYPE]  double convergent  epsilon  r0  r1  value 
[REPLACE]^return ZERO;^82^^^^^73^123^[REPLACE] return;^[METHOD] <init> [TYPE] Fraction(double,double,int) [PARAMETER] double value double epsilon int maxIterations [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  stop  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  [TYPE]  double convergent  epsilon  r0  r1  value 
[REPLACE]^this.denominator = 2;^81^^^^^73^123^[REPLACE] this.denominator = 1;^[METHOD] <init> [TYPE] Fraction(double,double,int) [PARAMETER] double value double epsilon int maxIterations [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  stop  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  [TYPE]  double convergent  epsilon  r0  r1  value 
[REPLACE]^int p0 = 2;^85^^^^^73^123^[REPLACE] int p0 = 1;^[METHOD] <init> [TYPE] Fraction(double,double,int) [PARAMETER] double value double epsilon int maxIterations [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  stop  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  [TYPE]  double convergent  epsilon  r0  r1  value 
[ADD]^^85^^^^^73^123^[ADD] int p0 = 1;^[METHOD] <init> [TYPE] Fraction(double,double,int) [PARAMETER] double value double epsilon int maxIterations [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  stop  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  [TYPE]  double convergent  epsilon  r0  r1  value 
[REPLACE]^int q4 = 4;^86^^^^^73^123^[REPLACE] int q0 = 0;^[METHOD] <init> [TYPE] Fraction(double,double,int) [PARAMETER] double value double epsilon int maxIterations [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  stop  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  [TYPE]  double convergent  epsilon  r0  r1  value 
[REPLACE]^int p1 = q0;^87^^^^^73^123^[REPLACE] int p1 = a0;^[METHOD] <init> [TYPE] Fraction(double,double,int) [PARAMETER] double value double epsilon int maxIterations [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  stop  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  [TYPE]  double convergent  epsilon  r0  r1  value 
[REPLACE]^int q0 = 0;^88^^^^^73^123^[REPLACE] int q1 = 1;^[METHOD] <init> [TYPE] Fraction(double,double,int) [PARAMETER] double value double epsilon int maxIterations [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  stop  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  [TYPE]  double convergent  epsilon  r0  r1  value 
[ADD]^^88^^^^^73^123^[ADD] int q1 = 1;^[METHOD] <init> [TYPE] Fraction(double,double,int) [PARAMETER] double value double epsilon int maxIterations [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  stop  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  [TYPE]  double convergent  epsilon  r0  r1  value 
[REPLACE]^int p2 = 2;^90^^^^^73^123^[REPLACE] int p2 = 0;^[METHOD] <init> [TYPE] Fraction(double,double,int) [PARAMETER] double value double epsilon int maxIterations [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  stop  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  [TYPE]  double convergent  epsilon  r0  r1  value 
[REPLACE]^int q2 = 0;^91^^^^^73^123^[REPLACE] int q2 = 1;^[METHOD] <init> [TYPE] Fraction(double,double,int) [PARAMETER] double value double epsilon int maxIterations [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  stop  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  [TYPE]  double convergent  epsilon  r0  r1  value 
[REPLACE]^int n = 0 + 2;^93^^^^^73^123^[REPLACE] int n = 0;^[METHOD] <init> [TYPE] Fraction(double,double,int) [PARAMETER] double value double epsilon int maxIterations [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  stop  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  [TYPE]  double convergent  epsilon  r0  r1  value 
[REPLACE]^boolean stop = true;^94^^^^^73^123^[REPLACE] boolean stop = false;^[METHOD] <init> [TYPE] Fraction(double,double,int) [PARAMETER] double value double epsilon int maxIterations [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  stop  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  [TYPE]  double convergent  epsilon  r0  r1  value 
[REPLACE]^if  ( n < maxIterations || Math.abs ( convergent - value )  > epsilon )  {^103^^^^^73^123^[REPLACE] if  ( n < maxIterations && Math.abs ( convergent - value )  > epsilon )  {^[METHOD] <init> [TYPE] Fraction(double,double,int) [PARAMETER] double value double epsilon int maxIterations [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  stop  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  [TYPE]  double convergent  epsilon  r0  r1  value 
[REPLACE]^stop = false;^111^^^^^103^112^[REPLACE] stop = true;^[METHOD] <init> [TYPE] Fraction(double,double,int) [PARAMETER] double value double epsilon int maxIterations [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  stop  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  [TYPE]  double convergent  epsilon  r0  r1  value 
[REPLACE]^q0 = q1; ;^104^^^^^73^123^[REPLACE] p0 = p1;^[METHOD] <init> [TYPE] Fraction(double,double,int) [PARAMETER] double value double epsilon int maxIterations [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  stop  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  [TYPE]  double convergent  epsilon  r0  r1  value 
[REPLACE]^p0 = p1; ;^105^^^^^73^123^[REPLACE] p1 = p2;^[METHOD] <init> [TYPE] Fraction(double,double,int) [PARAMETER] double value double epsilon int maxIterations [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  stop  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  [TYPE]  double convergent  epsilon  r0  r1  value 
[REPLACE]^p0 = p1; ;^106^^^^^73^123^[REPLACE] q0 = q1;^[METHOD] <init> [TYPE] Fraction(double,double,int) [PARAMETER] double value double epsilon int maxIterations [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  stop  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  [TYPE]  double convergent  epsilon  r0  r1  value 
[ADD]^^106^107^^^^73^123^[ADD] q0 = q1; q1 = q2;^[METHOD] <init> [TYPE] Fraction(double,double,int) [PARAMETER] double value double epsilon int maxIterations [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  stop  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  [TYPE]  double convergent  epsilon  r0  r1  value 
[REPLACE]^q0 = q1; ;^107^^^^^73^123^[REPLACE] q1 = q2;^[METHOD] <init> [TYPE] Fraction(double,double,int) [PARAMETER] double value double epsilon int maxIterations [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  stop  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  [TYPE]  double convergent  epsilon  r0  r1  value 
[REPLACE]^q0 = q1; ;^108^^^^^73^123^[REPLACE] a0 = a1;^[METHOD] <init> [TYPE] Fraction(double,double,int) [PARAMETER] double value double epsilon int maxIterations [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  stop  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  [TYPE]  double convergent  epsilon  r0  r1  value 
[REPLACE]^q0 = q1; ;^109^^^^^73^123^[REPLACE] r0 = r1;^[METHOD] <init> [TYPE] Fraction(double,double,int) [PARAMETER] double value double epsilon int maxIterations [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  stop  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  [TYPE]  double convergent  epsilon  r0  r1  value 
[ADD]^^109^^^^^73^123^[ADD] r0 = r1;^[METHOD] <init> [TYPE] Fraction(double,double,int) [PARAMETER] double value double epsilon int maxIterations [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  stop  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  [TYPE]  double convergent  epsilon  r0  r1  value 
[REPLACE]^p2 =  ( a1 * p1 )  +q1;^99^^^^^73^123^[REPLACE] p2 =  ( a1 * p1 )  + p0;^[METHOD] <init> [TYPE] Fraction(double,double,int) [PARAMETER] double value double epsilon int maxIterations [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  stop  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  [TYPE]  double convergent  epsilon  r0  r1  value 
[ADD]^^99^^^^^73^123^[ADD] p2 =  ( a1 * p1 )  + p0;^[METHOD] <init> [TYPE] Fraction(double,double,int) [PARAMETER] double value double epsilon int maxIterations [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  stop  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  [TYPE]  double convergent  epsilon  r0  r1  value 
[REPLACE]^p2 =  ( a1 * p1 )  + p0; ;^100^^^^^73^123^[REPLACE] q2 =  ( a1 * q1 )  + q0;^[METHOD] <init> [TYPE] Fraction(double,double,int) [PARAMETER] double value double epsilon int maxIterations [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  stop  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  [TYPE]  double convergent  epsilon  r0  r1  value 
[ADD]^^100^^^^^73^123^[ADD] q2 =  ( a1 * q1 )  + q0;^[METHOD] <init> [TYPE] Fraction(double,double,int) [PARAMETER] double value double epsilon int maxIterations [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  stop  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  [TYPE]  double convergent  epsilon  r0  r1  value 
[ADD]^^108^109^^^^73^123^[ADD] a0 = a1; r0 = r1;^[METHOD] <init> [TYPE] Fraction(double,double,int) [PARAMETER] double value double epsilon int maxIterations [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  stop  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  [TYPE]  double convergent  epsilon  r0  r1  value 
[REPLACE]^stop = false;^111^^^^^73^123^[REPLACE] stop = true;^[METHOD] <init> [TYPE] Fraction(double,double,int) [PARAMETER] double value double epsilon int maxIterations [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  stop  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  [TYPE]  double convergent  epsilon  r0  r1  value 
[ADD]^^111^^^^^73^123^[ADD] stop = true;^[METHOD] <init> [TYPE] Fraction(double,double,int) [PARAMETER] double value double epsilon int maxIterations [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  stop  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  [TYPE]  double convergent  epsilon  r0  r1  value 
[REPLACE]^double r1 = 1.0  ;^97^^^^^73^123^[REPLACE] double r1 = 1.0 /  ( r0 - a0 ) ;^[METHOD] <init> [TYPE] Fraction(double,double,int) [PARAMETER] double value double epsilon int maxIterations [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  stop  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  [TYPE]  double convergent  epsilon  r0  r1  value 
[REPLACE]^int a1 =  ( int ) Math.floor ( r0 ) ;^98^^^^^73^123^[REPLACE] int a1 =  ( int ) Math.floor ( r1 ) ;^[METHOD] <init> [TYPE] Fraction(double,double,int) [PARAMETER] double value double epsilon int maxIterations [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  stop  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  [TYPE]  double convergent  epsilon  r0  r1  value 
[REPLACE]^double convergent =  ( double ) p2  ;^102^^^^^73^123^[REPLACE] double convergent =  ( double ) p2 /  ( double ) q2;^[METHOD] <init> [TYPE] Fraction(double,double,int) [PARAMETER] double value double epsilon int maxIterations [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  stop  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  [TYPE]  double convergent  epsilon  r0  r1  value 
[ADD]^^102^^^^^73^123^[ADD] double convergent =  ( double ) p2 /  ( double ) q2;^[METHOD] <init> [TYPE] Fraction(double,double,int) [PARAMETER] double value double epsilon int maxIterations [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  stop  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  [TYPE]  double convergent  epsilon  r0  r1  value 
[REPLACE]^if  (numerator  <=  maxIterations )  {^115^^^^^73^123^[REPLACE] if  ( n >= maxIterations )  {^[METHOD] <init> [TYPE] Fraction(double,double,int) [PARAMETER] double value double epsilon int maxIterations [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  stop  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  [TYPE]  double convergent  epsilon  r0  r1  value 
[REPLACE]^return ;^116^117^^^^73^123^[REPLACE] throw new ConvergenceException ( "Unable to convert double to fraction" ) ;^[METHOD] <init> [TYPE] Fraction(double,double,int) [PARAMETER] double value double epsilon int maxIterations [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  stop  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  [TYPE]  double convergent  epsilon  r0  r1  value 
[ADD]^^116^117^^^^73^123^[ADD] throw new ConvergenceException ( "Unable to convert double to fraction" ) ;^[METHOD] <init> [TYPE] Fraction(double,double,int) [PARAMETER] double value double epsilon int maxIterations [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  stop  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  [TYPE]  double convergent  epsilon  r0  r1  value 
[REPLACE]^this.numerator = num; ;^120^^^^^73^123^[REPLACE] this.numerator = p2;^[METHOD] <init> [TYPE] Fraction(double,double,int) [PARAMETER] double value double epsilon int maxIterations [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  stop  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  [TYPE]  double convergent  epsilon  r0  r1  value 
[REPLACE]^this.denominator = den; ;^121^^^^^73^123^[REPLACE] this.denominator = q2;^[METHOD] <init> [TYPE] Fraction(double,double,int) [PARAMETER] double value double epsilon int maxIterations [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  stop  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  [TYPE]  double convergent  epsilon  r0  r1  value 
[REPLACE]^ret = negate (  ) ;^122^^^^^73^123^[REPLACE] reduce (  ) ;^[METHOD] <init> [TYPE] Fraction(double,double,int) [PARAMETER] double value double epsilon int maxIterations [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  stop  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  denominator  maxIterations  n  numerator  p0  p1  p2  q0  q1  q2  [TYPE]  double convergent  epsilon  r0  r1  value 
[REPLACE]^ret = negate (  ) ;^133^^^^^132^148^[REPLACE] super (  ) ;^[METHOD] <init> [TYPE] Fraction(int,int) [PARAMETER] int num int den [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2 
[REMOVE]^ret = negate (  ) ;^133^^^^^132^148^[REMOVE] ^[METHOD] <init> [TYPE] Fraction(int,int) [PARAMETER] int num int den [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2 
[REPLACE]^if  ( den  ||  0 )  {^134^^^^^132^148^[REPLACE] if  ( den == 0 )  {^[METHOD] <init> [TYPE] Fraction(int,int) [PARAMETER] int num int den [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2 
[REPLACE]^return ;^135^^^^^132^148^[REPLACE] throw new ArithmeticException  (" ")  ;^[METHOD] <init> [TYPE] Fraction(int,int) [PARAMETER] int num int den [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^135^^^^^132^148^[REPLACE] throw new ArithmeticException  (" ")  ;^[METHOD] <init> [TYPE] Fraction(int,int) [PARAMETER] int num int den [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2 
[REPLACE]^if  ( den  ==  0 )  {^137^^^^^132^148^[REPLACE] if  ( den < 0 )  {^[METHOD] <init> [TYPE] Fraction(int,int) [PARAMETER] int num int den [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2 
[ADD]^^137^138^139^140^141^132^148^[ADD] if  ( den < 0 )  { if  ( num == Integer.MIN_VALUE || den == Integer.MIN_VALUE )  { throw new ArithmeticException  (" ")  ; }^[METHOD] <init> [TYPE] Fraction(int,int) [PARAMETER] int num int den [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2 
[REPLACE]^if  ( num == Integer.MIN_VALUE ) {^138^139^^^^132^148^[REPLACE] if  ( num == Integer.MIN_VALUE || den == Integer.MIN_VALUE )  {^[METHOD] <init> [TYPE] Fraction(int,int) [PARAMETER] int num int den [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^140^^^^^132^148^[REPLACE] throw new ArithmeticException  (" ")  ;^[METHOD] <init> [TYPE] Fraction(int,int) [PARAMETER] int num int den [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2 
[REPLACE]^num =  -null;^142^^^^^132^148^[REPLACE] num = -num;^[METHOD] <init> [TYPE] Fraction(int,int) [PARAMETER] int num int den [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2 
[REPLACE]^den =  -numerator;^143^^^^^132^148^[REPLACE] den = -den;^[METHOD] <init> [TYPE] Fraction(int,int) [PARAMETER] int num int den [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2 
[REPLACE]^return ;^140^^^^^132^148^[REPLACE] throw new ArithmeticException  (" ")  ;^[METHOD] <init> [TYPE] Fraction(int,int) [PARAMETER] int num int den [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2 
[ADD]^^138^139^140^141^^132^148^[ADD] if  ( num == Integer.MIN_VALUE || den == Integer.MIN_VALUE )  { throw new ArithmeticException  (" ")  ; }^[METHOD] <init> [TYPE] Fraction(int,int) [PARAMETER] int num int den [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2 
[ADD]^^140^^^^^132^148^[ADD] throw new ArithmeticException  (" ")  ;^[METHOD] <init> [TYPE] Fraction(int,int) [PARAMETER] int num int den [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2 
[REPLACE]^num =  -numerator;^142^^^^^132^148^[REPLACE] num = -num;^[METHOD] <init> [TYPE] Fraction(int,int) [PARAMETER] int num int den [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2 
[REPLACE]^this.numerator = p2; ;^145^^^^^132^148^[REPLACE] this.numerator = num;^[METHOD] <init> [TYPE] Fraction(int,int) [PARAMETER] int num int den [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2 
[ADD]^^145^^^^^132^148^[ADD] this.numerator = num;^[METHOD] <init> [TYPE] Fraction(int,int) [PARAMETER] int num int den [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2 
[REPLACE]^this.denominator = 1; ;^146^^^^^132^148^[REPLACE] this.denominator = den;^[METHOD] <init> [TYPE] Fraction(int,int) [PARAMETER] int num int den [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2 
[REPLACE]^ret = negate (  ) ;^147^^^^^132^148^[REPLACE] reduce (  ) ;^[METHOD] <init> [TYPE] Fraction(int,int) [PARAMETER] int num int den [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2 
[ADD]^^147^^^^^132^148^[ADD] reduce (  ) ;^[METHOD] <init> [TYPE] Fraction(int,int) [PARAMETER] int num int den [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2 
[REPLACE]^boolean ret;^155^^^^^154^162^[REPLACE] Fraction ret;^[METHOD] abs [TYPE] Fraction [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  ret  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2 
[ADD]^^155^^^^^154^162^[ADD] Fraction ret;^[METHOD] abs [TYPE] Fraction [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  ret  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2 
[REPLACE]^if  (num  >  0 )  {^156^^^^^154^162^[REPLACE] if  ( numerator >= 0 )  {^[METHOD] abs [TYPE] Fraction [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  ret  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2 
[REPLACE]^ret  = null ;^159^^^^^154^162^[REPLACE] ret = negate (  ) ;^[METHOD] abs [TYPE] Fraction [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  ret  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2 
[REPLACE]^ret = true; ;^157^^^^^154^162^[REPLACE] ret = this;^[METHOD] abs [TYPE] Fraction [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  ret  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2 
[REPLACE]^ret  =  ret ;^159^^^^^154^162^[REPLACE] ret = negate (  ) ;^[METHOD] abs [TYPE] Fraction [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  ret  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2 
[ADD]^^159^^^^^154^162^[ADD] ret = negate (  ) ;^[METHOD] abs [TYPE] Fraction [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  ret  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2 
[REPLACE]^return ZERO;^161^^^^^154^162^[REPLACE] return ret;^[METHOD] abs [TYPE] Fraction [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  ret  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2 
[REPLACE]^int ret = 0 - 2;^171^^^^^170^186^[REPLACE] int ret = 0;^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  [TYPE]  Object object  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  double first  second 
[REPLACE]^if  ( other  ==  object )  {^173^^^^^170^186^[REPLACE] if  ( this != object )  {^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  [TYPE]  Object object  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  double first  second 
[ADD]^^173^174^175^176^^170^186^[ADD] if  ( this != object )  { Fraction other =  ( Fraction ) object; double first = doubleValue (  ) ; double second = other.doubleValue (  ) ;^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  [TYPE]  Object object  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  double first  second 
[REPLACE]^if  ( first  <=  second )  {^178^^^^^170^186^[REPLACE] if  ( first < second )  {^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  [TYPE]  Object object  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  double first  second 
[REPLACE]^}  else {^180^^^^^170^186^[REPLACE] } else if  ( first > second )  {^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  [TYPE]  Object object  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  double first  second 
[ADD]^}   ret = 1;^180^181^182^^^170^186^[ADD] else if  ( first > second )  { ret = 1; }^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  [TYPE]  Object object  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  double first  second 
[REPLACE]^ret = 1 >> 1;^181^^^^^170^186^[REPLACE] ret = 1;^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  [TYPE]  Object object  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  double first  second 
[ADD]^^181^^^^^170^186^[ADD] ret = 1;^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  [TYPE]  Object object  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  double first  second 
[REPLACE]^ret = -1; ;^181^^^^^170^186^[REPLACE] ret = 1;^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  [TYPE]  Object object  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  double first  second 
[REPLACE]^ret = -3;^179^^^^^170^186^[REPLACE] ret = -1;^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  [TYPE]  Object object  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  double first  second 
[REPLACE]^}  if  ( first  <  second )  {^180^^^^^170^186^[REPLACE] } else if  ( first > second )  {^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  [TYPE]  Object object  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  double first  second 
[REPLACE]^ret = 1 - 0;^181^^^^^170^186^[REPLACE] ret = 1;^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  [TYPE]  Object object  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  double first  second 
[REPLACE]^ret = -1 << 3;^179^^^^^170^186^[REPLACE] ret = -1;^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  [TYPE]  Object object  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  double first  second 
[REPLACE]^ret = 0;^181^^^^^170^186^[REPLACE] ret = 1;^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  [TYPE]  Object object  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  double first  second 
[REPLACE]^Fraction rhs =  ( Fraction ) other;^174^^^^^170^186^[REPLACE] Fraction other =  ( Fraction ) object;^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  [TYPE]  Object object  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  double first  second 
[ADD]^^174^^^^^170^186^[ADD] Fraction other =  ( Fraction ) object;^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  [TYPE]  Object object  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  double first  second 
[REPLACE]^double r0 = value;^175^^^^^170^186^[REPLACE] double first = doubleValue (  ) ;^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  [TYPE]  Object object  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  double first  second 
[REPLACE]^double second = ret .negate (  )  ;^176^^^^^170^186^[REPLACE] double second = other.doubleValue (  ) ;^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  [TYPE]  Object object  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  double first  second 
[REPLACE]^if  ( first  >  second )  {^178^^^^^170^186^[REPLACE] if  ( first < second )  {^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  [TYPE]  Object object  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  double first  second 
[REPLACE]^}  if  ( first  <=  second )  {^180^^^^^170^186^[REPLACE] } else if  ( first > second )  {^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  [TYPE]  Object object  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  double first  second 
[REPLACE]^ret = 4;^181^^^^^170^186^[REPLACE] ret = 1;^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  [TYPE]  Object object  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  double first  second 
[REPLACE]^ret = -1 / 1;^179^^^^^170^186^[REPLACE] ret = -1;^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  [TYPE]  Object object  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  double first  second 
[ADD]^^179^^^^^170^186^[ADD] ret = -1;^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  [TYPE]  Object object  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  double first  second 
[REPLACE]^}  if  ( first  ==  second )  {^180^^^^^170^186^[REPLACE] } else if  ( first > second )  {^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  [TYPE]  Object object  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  double first  second 
[REPLACE]^ret = -1L;^179^^^^^170^186^[REPLACE] ret = -1;^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  [TYPE]  Object object  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  double first  second 
[REPLACE]^double second = ret.doubleValue (  ) ;^176^^^^^170^186^[REPLACE] double second = other.doubleValue (  ) ;^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  [TYPE]  Object object  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  double first  second 
[REPLACE]^return numerator;^185^^^^^170^186^[REPLACE] return ret;^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  [TYPE]  Object object  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  double first  second 
[REPLACE]^return  ( double ) numerator  ;^194^^^^^193^195^[REPLACE] return  ( double ) numerator /  ( double ) denominator;^[METHOD] doubleValue [TYPE] double [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret 
[REPLACE]^boolean stop = false;^207^^^^^206^227^[REPLACE] boolean ret;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  rhs  [TYPE]  Object other  [TYPE]  boolean false  ret  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  ClassCastException ex 
[REPLACE]^if  ( this  != rhs )  {^209^^^^^206^227^[REPLACE] if  ( this == other )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  rhs  [TYPE]  Object other  [TYPE]  boolean false  ret  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  ClassCastException ex 
[REPLACE]^} else if  ( other != null )  {^211^^^^^206^227^[REPLACE] } else if  ( other == null )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  rhs  [TYPE]  Object other  [TYPE]  boolean false  ret  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  ClassCastException ex 
[ADD]^Fraction rhs =  ( Fraction ) other;^214^215^^217^218^206^227^[ADD] try {  Fraction rhs =  ( Fraction ) other; ret =  ( numerator == rhs.numerator )  &&^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  rhs  [TYPE]  Object other  [TYPE]  boolean false  ret  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  ClassCastException ex 
[REPLACE]^ret =  ( numerator == rhs.numerator )   <  ( denominator == rhs.denominator ) ;^218^219^^^^206^227^[REPLACE] ret =  ( numerator == rhs.numerator )  && ( denominator == rhs.denominator ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  rhs  [TYPE]  Object other  [TYPE]  boolean false  ret  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  ClassCastException ex 
[REPLACE]^Fraction other =  ( Fraction ) object;^217^^^^^206^227^[REPLACE] Fraction rhs =  ( Fraction ) other;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  rhs  [TYPE]  Object other  [TYPE]  boolean false  ret  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  ClassCastException ex 
[REPLACE]^ret =  ( numerator == rhs.numerator )   >  ( denominator == rhs.denominator ) ;^218^219^^^^206^227^[REPLACE] ret =  ( numerator == rhs.numerator )  && ( denominator == rhs.denominator ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  rhs  [TYPE]  Object other  [TYPE]  boolean false  ret  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  ClassCastException ex 
[REPLACE]^ret = true;^222^^^^^206^227^[REPLACE] ret = false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  rhs  [TYPE]  Object other  [TYPE]  boolean false  ret  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  ClassCastException ex 
[REPLACE]^ret = true;^212^^^^^206^227^[REPLACE] ret = false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  rhs  [TYPE]  Object other  [TYPE]  boolean false  ret  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  ClassCastException ex 
[REPLACE]^ret =  ( numerator == rhs.numerator )  || ( denominator == rhs.denominator ) ;^218^219^^^^206^227^[REPLACE] ret =  ( numerator == rhs.numerator )  && ( denominator == rhs.denominator ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  rhs  [TYPE]  Object other  [TYPE]  boolean false  ret  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  ClassCastException ex 
[REPLACE]^ret =  (true )  ;^218^219^^^^206^227^[REPLACE] ret =  ( numerator == rhs.numerator )  && ( denominator == rhs.denominator ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  rhs  [TYPE]  Object other  [TYPE]  boolean false  ret  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  ClassCastException ex 
[REPLACE]^ret = false;^210^^^^^206^227^[REPLACE] ret = true;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  rhs  [TYPE]  Object other  [TYPE]  boolean false  ret  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  ClassCastException ex 
[REPLACE]^}  else {^211^^^^^206^227^[REPLACE] } else if  ( other == null )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  rhs  [TYPE]  Object other  [TYPE]  boolean false  ret  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  ClassCastException ex 
[ADD]^}   ret = false;^211^212^213^214^^206^227^[ADD] else if  ( other == null )  { ret = false; } else { try {^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  rhs  [TYPE]  Object other  [TYPE]  boolean false  ret  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  ClassCastException ex 
[REPLACE]^ret =  ( numerator == rhs.numerator )   !=  ( denominator == rhs.denominator ) ;^218^219^^^^206^227^[REPLACE] ret =  ( numerator == rhs.numerator )  && ( denominator == rhs.denominator ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  rhs  [TYPE]  Object other  [TYPE]  boolean false  ret  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  ClassCastException ex 
[ADD]^^218^219^^^^206^227^[ADD] ret =  ( numerator == rhs.numerator )  && ( denominator == rhs.denominator ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  rhs  [TYPE]  Object other  [TYPE]  boolean false  ret  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  ClassCastException ex 
[ADD]^^210^^^^^206^227^[ADD] ret = true;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  rhs  [TYPE]  Object other  [TYPE]  boolean false  ret  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  ClassCastException ex 
[ADD]^^212^^^^^206^227^[ADD] ret = false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  rhs  [TYPE]  Object other  [TYPE]  boolean false  ret  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  ClassCastException ex 
[REPLACE]^ret =  ( numerator == rhs.numerator )   ^  ( denominator == rhs.denominator ) ;^218^219^^^^206^227^[REPLACE] ret =  ( numerator == rhs.numerator )  && ( denominator == rhs.denominator ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  rhs  [TYPE]  Object other  [TYPE]  boolean false  ret  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  ClassCastException ex 
[ADD]^^220^221^222^^^206^227^[ADD] catch  ( ClassCastException ex )  {  ret = false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  rhs  [TYPE]  Object other  [TYPE]  boolean false  ret  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  ClassCastException ex 
[REPLACE]^return true;^226^^^^^206^227^[REPLACE] return ret;^[METHOD] equals [TYPE] boolean [PARAMETER] Object other [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  rhs  [TYPE]  Object other  [TYPE]  boolean false  ret  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  [TYPE]  ClassCastException ex 
[REPLACE]^return  ( long ) doubleValue (  ) ;^235^^^^^234^236^[REPLACE] return  ( float ) doubleValue (  ) ;^[METHOD] floatValue [TYPE] float [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret 
[REPLACE]^return new Fraction ( numerator, denominator ) ;^243^^^^^242^244^[REPLACE] return denominator;^[METHOD] getDenominator [TYPE] int [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret 
[REPLACE]^return  ( float ) doubleValue (  ) ;^251^^^^^250^252^[REPLACE] return numerator;^[METHOD] getNumerator [TYPE] int [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret 
[REPLACE]^return 37 *  ( 37 * 17 + getNumerator (  )  )  +ret (  ) ;^259^^^^^258^260^[REPLACE] return 37 *  ( 37 * 17 + getNumerator (  )  )  + getDenominator (  ) ;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret 
[REPLACE]^return  ( float ) doubleValue (  ) ;^268^^^^^267^269^[REPLACE] return  ( int ) doubleValue (  ) ;^[METHOD] intValue [TYPE] int [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret 
[REPLACE]^return  ( float ) doubleValue (  ) ;^277^^^^^276^278^[REPLACE] return  ( long ) doubleValue (  ) ;^[METHOD] longValue [TYPE] long [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret 
[REPLACE]^if  ( numerator && Integer.MIN_VALUE )  {^285^^^^^284^289^[REPLACE] if  ( numerator==Integer.MIN_VALUE )  {^[METHOD] negate [TYPE] Fraction [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^286^^^^^284^289^[REPLACE] throw new ArithmeticException  (" ")  ;^[METHOD] negate [TYPE] Fraction [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret 
[REPLACE]^return  new Fraction ( numerator, denominator )  ;^288^^^^^284^289^[REPLACE] return new Fraction ( -numerator, denominator ) ;^[METHOD] negate [TYPE] Fraction [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret 
[REPLACE]^return  new Fraction ( numerator, denominator )  ;^296^^^^^295^297^[REPLACE] return new Fraction ( denominator, numerator ) ;^[METHOD] reciprocal [TYPE] Fraction [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret 
[REPLACE]^if  ( rhs != true )  {^338^^^^^337^382^[REPLACE] if  ( fraction == null )  {^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  isAdd  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[ADD]^^338^339^340^^^337^382^[ADD] if  ( fraction == null )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  isAdd  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^return ;^339^^^^^337^382^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  isAdd  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[ADD]^^339^^^^^337^382^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  isAdd  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^throw new ArithmeticException  (" ")  ; ;^339^^^^^337^382^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  isAdd  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^if  ( numerator  != uvp )  {^342^^^^^337^382^[REPLACE] if  ( numerator == 0 )  {^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  isAdd  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^return isAdd ? fraction : fraction.reduce (  ) ;^343^^^^^337^382^[REPLACE] return isAdd ? fraction : fraction.negate (  ) ;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  isAdd  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^return isAdd ? fraction : fraction .reduce (  )  ;^343^^^^^337^382^[REPLACE] return isAdd ? fraction : fraction.negate (  ) ;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  isAdd  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^if  ( ret.numerator  && uvp )  {^345^^^^^337^382^[REPLACE] if  ( fraction.numerator == 0 )  {^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  isAdd  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^return null;^346^^^^^337^382^[REPLACE] return this;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  isAdd  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^int d1 = MathUtils.gcd ( denominator, ret.denominator ) ;^350^^^^^337^382^[REPLACE] int d1 = MathUtils.gcd ( denominator, fraction.denominator ) ;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  isAdd  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^if  ( d1 != 1 )  {^351^^^^^337^382^[REPLACE] if  ( d1==1 )  {^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  isAdd  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[ADD]^^351^352^353^354^355^337^382^[ADD] if  ( d1==1 )  {  int uvp = MathUtils.mulAndCheck ( numerator, fraction.denominator ) ; int upv = MathUtils.mulAndCheck ( fraction.numerator, denominator ) ; return new Fraction^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  isAdd  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^return new Fraction ( isAdd ? MathUtils.addAndCheck ( uvp, upv )  : MathUtils .mulAndCheck ( p1 , upv )  , MathUtils.mulAndCheck ( denominator, fraction.denominator )  ) ;^355^356^357^358^^337^382^[REPLACE] return new Fraction ( isAdd ? MathUtils.addAndCheck ( uvp, upv )  : MathUtils.subAndCheck ( uvp, upv ) , MathUtils.mulAndCheck ( denominator, fraction.denominator )  ) ;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  isAdd  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^int uvp = MathUtils.subAndCheck ( numerator, fraction.denominator ) ;^353^^^^^337^382^[REPLACE] int uvp = MathUtils.mulAndCheck ( numerator, fraction.denominator ) ;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  isAdd  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^int upv = MathUtils.subAndCheck ( fraction.numerator, denominator ) ;^354^^^^^337^382^[REPLACE] int upv = MathUtils.mulAndCheck ( fraction.numerator, denominator ) ;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  isAdd  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^return new Fraction ( isAdd ? MathUtils.addAndCheck ( uvp, upv )  : MathUtils.mulAndCheck ( uvp, upv ) , MathUtils.mulAndCheck ( denominator, fraction.denominator )  ) ;^355^356^357^358^^337^382^[REPLACE] return new Fraction ( isAdd ? MathUtils.addAndCheck ( uvp, upv )  : MathUtils.subAndCheck ( uvp, upv ) , MathUtils.mulAndCheck ( denominator, fraction.denominator )  ) ;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  isAdd  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^int uvp = MathUtils.subAndCheck ( numerator, rhs.denominator ) ;^353^^^^^337^382^[REPLACE] int uvp = MathUtils.mulAndCheck ( numerator, fraction.denominator ) ;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  isAdd  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^int upv = MathUtils.mulAndCheck ( rhs.numerator, denominator ) ;^354^^^^^337^382^[REPLACE] int upv = MathUtils.mulAndCheck ( fraction.numerator, denominator ) ;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  isAdd  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^BigInteger uvp = BigInteger.valueOf ( numerator ) .multiply ( BigInteger.valueOf ( tmodd1/tmodd1 )  ) ;^363^364^^^^337^382^[REPLACE] BigInteger uvp = BigInteger.valueOf ( numerator ) .multiply ( BigInteger.valueOf ( fraction.denominator/d1 )  ) ;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  isAdd  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[ADD]^^363^364^^^^337^382^[ADD] BigInteger uvp = BigInteger.valueOf ( numerator ) .multiply ( BigInteger.valueOf ( fraction.denominator/d1 )  ) ;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  isAdd  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^BigInteger upv = BigInteger.valueOf ( fraction.numerator ) .multiply ( BigInteger.valueOf ( tmodd1/tmodd1 )  ) ;^365^366^^^^337^382^[REPLACE] BigInteger upv = BigInteger.valueOf ( fraction.numerator ) .multiply ( BigInteger.valueOf ( denominator/d1 )  ) ;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  isAdd  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^BigInteger t = isAdd ? uvp.add ( uvp )  : uvp.multiply ( upv ) ;^367^^^^^337^382^[REPLACE] BigInteger t = isAdd ? uvp.add ( upv )  : uvp.subtract ( upv ) ;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  isAdd  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^int tmodd1 = t.mod ( BigInteger.add ( tmodd1 )  ) .intValue (  ) ;^370^^^^^337^382^[REPLACE] int tmodd1 = t.mod ( BigInteger.valueOf ( d1 )  ) .intValue (  ) ;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  isAdd  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^int d2  = d1;^371^^^^^337^382^[REPLACE] int d2 =  ( tmodd1==0 ) ?d1:MathUtils.gcd ( tmodd1, d1 ) ;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  isAdd  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^BigInteger w = t.divide ( BigInteger.valueOf ( tmodd1 )  ) ;^374^^^^^337^382^[REPLACE] BigInteger w = t.divide ( BigInteger.valueOf ( d2 )  ) ;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  isAdd  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^if  ( w.bitLength (  )   >=  31 )  {^375^^^^^337^382^[REPLACE] if  ( w.bitLength (  )  > 31 )  {^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  isAdd  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^return ;^376^377^^^^337^382^[REPLACE] throw new ArithmeticException ( "overflow: numerator too large after multiply" ) ;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  isAdd  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^return new Fraction  ( w.intValue (  ) , MathUtils.mulAndCheck (tmodd1/d1, fraction.denominator/d2 )  ) ;^379^380^381^^^337^382^[REPLACE] return new Fraction  ( w.intValue (  ) , MathUtils.mulAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  isAdd  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^if  ( rhs != true )  {^395^^^^^394^408^[REPLACE] if  ( fraction == null )  {^[METHOD] multiply [TYPE] Fraction [PARAMETER] Fraction fraction [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REMOVE]^if  (  ( numerator )  ==  ( MIN_VALUE )  )  {     throw new ArithmeticException ( "overflow: too large to negate" ) ; }^395^^^^^394^408^[REMOVE] ^[METHOD] multiply [TYPE] Fraction [PARAMETER] Fraction fraction [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^return ;^396^^^^^394^408^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] multiply [TYPE] Fraction [PARAMETER] Fraction fraction [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^throw new ArithmeticException  (" ")  ; ;^396^^^^^394^408^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] multiply [TYPE] Fraction [PARAMETER] Fraction fraction [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^if  ( numerator == 0 + 4 && fraction.numerator == 0 + 4 )  {^398^^^^^394^408^[REPLACE] if  ( numerator == 0 || fraction.numerator == 0 )  {^[METHOD] multiply [TYPE] Fraction [PARAMETER] Fraction fraction [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[ADD]^return ZERO;^398^399^400^^^394^408^[ADD] if  ( numerator == 0 || fraction.numerator == 0 )  { return ZERO; }^[METHOD] multiply [TYPE] Fraction [PARAMETER] Fraction fraction [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^return this;^399^^^^^394^408^[REPLACE] return ZERO;^[METHOD] multiply [TYPE] Fraction [PARAMETER] Fraction fraction [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^int d1 = MathUtils.mulAndCheck ( numerator, fraction.denominator ) ;^403^^^^^394^408^[REPLACE] int d1 = MathUtils.gcd ( numerator, fraction.denominator ) ;^[METHOD] multiply [TYPE] Fraction [PARAMETER] Fraction fraction [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^int d2 = MathUtils.mulAndCheck ( fraction.numerator, denominator ) ;^404^^^^^394^408^[REPLACE] int d2 = MathUtils.gcd ( fraction.numerator, denominator ) ;^[METHOD] multiply [TYPE] Fraction [PARAMETER] Fraction fraction [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^return getReducedFraction ( MathUtils.mulAndCheck (uvp/d1, fraction.numerator/d2 ) , MathUtils.mulAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^405^406^407^^^394^408^[REPLACE] return getReducedFraction ( MathUtils.mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , MathUtils.mulAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[METHOD] multiply [TYPE] Fraction [PARAMETER] Fraction fraction [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^if  ( rhs !=ret )  {^421^^^^^420^428^[REPLACE] if  ( fraction == null )  {^[METHOD] divide [TYPE] Fraction [PARAMETER] Fraction fraction [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^throw new ArithmeticException  (" ")  ; ;^422^^^^^420^428^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] divide [TYPE] Fraction [PARAMETER] Fraction fraction [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^if  (uvp  !=  0 )  {^424^^^^^420^428^[REPLACE] if  ( fraction.numerator == 0 )  {^[METHOD] divide [TYPE] Fraction [PARAMETER] Fraction fraction [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^425^^^^^420^428^[REPLACE] throw new ArithmeticException  (" ")  ;^[METHOD] divide [TYPE] Fraction [PARAMETER] Fraction fraction [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^return multiply ( rhs.reciprocal (  )  ) ;^427^^^^^420^428^[REPLACE] return multiply ( fraction.reciprocal (  )  ) ;^[METHOD] divide [TYPE] Fraction [PARAMETER] Fraction fraction [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^if  (tmodd1  ||  0 )  {^442^^^^^441^465^[REPLACE] if  ( denominator == 0 )  {^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  gcd  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^443^^^^^441^465^[REPLACE] throw new ArithmeticException  (" ")  ;^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  gcd  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^return ;^443^^^^^441^465^[REPLACE] throw new ArithmeticException  (" ")  ;^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  gcd  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^if  ( numerator && 0 )  {^445^^^^^441^465^[REPLACE] if  ( numerator==0 )  {^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  gcd  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^return this;^446^^^^^441^465^[REPLACE] return ZERO;^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  gcd  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^if  ( denominator==Integer.MIN_VALUE ||  ( numerator&3 ) ==0 )  {^449^^^^^441^465^[REPLACE] if  ( denominator==Integer.MIN_VALUE &&  ( numerator&1 ) ==0 )  {^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  gcd  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[ADD]^^449^450^451^^^441^465^[ADD] if  ( denominator==Integer.MIN_VALUE &&  ( numerator&1 ) ==0 )  { numerator/=2; denominator/=2; }^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  gcd  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^numerator/=3; denominator/=3;^450^^^^^441^465^[REPLACE] numerator/=2; denominator/=2;^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  gcd  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[ADD]^^450^^^^^441^465^[ADD] numerator/=2; denominator/=2;^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  gcd  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^numerator/=4; denominator/=4;^450^^^^^441^465^[REPLACE] numerator/=2; denominator/=2;^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  gcd  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^numerator/=0; denominator/=0;^450^^^^^441^465^[REPLACE] numerator/=2; denominator/=2;^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  gcd  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^numerator/=2 - 3; denominator/=2 - 3;^450^^^^^441^465^[REPLACE] numerator/=2; denominator/=2;^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  gcd  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^if  ( denominator  >  0 * 0 )  {^452^^^^^441^465^[REPLACE] if  ( denominator < 0 )  {^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  gcd  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^if  ( numerator==Integer.MIN_VALUE && denominator==Integer.MIN_VALUE )  {^453^454^^^^441^465^[REPLACE] if  ( numerator==Integer.MIN_VALUE || denominator==Integer.MIN_VALUE )  {^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  gcd  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REMOVE]^if  (  ( numerator )  ==  ( MIN_VALUE )  )  {     throw new ArithmeticException ( "overflow: too large to negate" ) ; }^453^^^^^441^465^[REMOVE] ^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  gcd  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^455^^^^^441^465^[REPLACE] throw new ArithmeticException  (" ")  ;^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  gcd  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^numerator =  -uvp;^457^^^^^441^465^[REPLACE] numerator = -numerator;^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  gcd  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^denominator =  -tmodd1;^458^^^^^441^465^[REPLACE] denominator = -denominator;^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  gcd  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^if  ( numerator==Integer.MIN_VALUE && tmodd1==Integer.MIN_VALUE )  {^453^454^^^^441^465^[REPLACE] if  ( numerator==Integer.MIN_VALUE || denominator==Integer.MIN_VALUE )  {^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  gcd  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^return ;^455^^^^^441^465^[REPLACE] throw new ArithmeticException  (" ")  ;^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  gcd  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[ADD]^^455^^^^^441^465^[ADD] throw new ArithmeticException  (" ")  ;^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  gcd  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^int gcd = MathUtils .mulAndCheck ( p1 , q1 )  ;^461^^^^^441^465^[REPLACE] int gcd = MathUtils.gcd ( numerator, denominator ) ;^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  gcd  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^numerator /= d; ;^462^^^^^441^465^[REPLACE] numerator /= gcd;^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  gcd  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^denominator *= -1; ;^463^^^^^441^465^[REPLACE] denominator /= gcd;^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  gcd  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^return  new Fraction ( denominator, numerator )  ;^464^^^^^441^465^[REPLACE] return new Fraction ( numerator, denominator ) ;^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d1  d2  den  denominator  gcd  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^int d = MathUtils.mulAndCheck ( numerator, denominator ) ;^473^^^^^471^484^[REPLACE] int d = MathUtils.gcd ( numerator, denominator ) ;^[METHOD] reduce [TYPE] void [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d  d1  d2  den  denominator  gcd  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[ADD]^^473^^^^^471^484^[ADD] int d = MathUtils.gcd ( numerator, denominator ) ;^[METHOD] reduce [TYPE] void [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d  d1  d2  den  denominator  gcd  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^if  (tmodd1  !=  1 )  {^474^^^^^471^484^[REPLACE] if  ( d > 1 )  {^[METHOD] reduce [TYPE] void [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d  d1  d2  den  denominator  gcd  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^denominator /= d; ;^475^^^^^471^484^[REPLACE] numerator /= d;^[METHOD] reduce [TYPE] void [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d  d1  d2  den  denominator  gcd  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[ADD]^^475^^^^^471^484^[ADD] numerator /= d;^[METHOD] reduce [TYPE] void [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d  d1  d2  den  denominator  gcd  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^denominator *= -1; ;^476^^^^^471^484^[REPLACE] denominator /= d;^[METHOD] reduce [TYPE] void [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d  d1  d2  den  denominator  gcd  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[ADD]^^476^^^^^471^484^[ADD] denominator /= d;^[METHOD] reduce [TYPE] void [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d  d1  d2  den  denominator  gcd  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^if  (tmodd1  <=  0L )  {^480^^^^^471^484^[REPLACE] if  ( denominator < 0 )  {^[METHOD] reduce [TYPE] void [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d  d1  d2  den  denominator  gcd  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REMOVE]^if  (  ( numerator )  >= 0 )  {     ret = this; }else {     ret = negate (  ) ; }^480^^^^^471^484^[REMOVE] ^[METHOD] reduce [TYPE] void [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d  d1  d2  den  denominator  gcd  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^denominator *= -1; ;^481^^^^^471^484^[REPLACE] numerator *= -1;^[METHOD] reduce [TYPE] void [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d  d1  d2  den  denominator  gcd  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^denominator *= -4;^482^^^^^471^484^[REPLACE] denominator *= -1;^[METHOD] reduce [TYPE] void [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d  d1  d2  den  denominator  gcd  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[ADD]^^482^^^^^471^484^[ADD] denominator *= -1;^[METHOD] reduce [TYPE] void [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d  d1  d2  den  denominator  gcd  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^numerator *= -2;^481^^^^^471^484^[REPLACE] numerator *= -1;^[METHOD] reduce [TYPE] void [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d  d1  d2  den  denominator  gcd  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
[REPLACE]^denominator *= -0;^482^^^^^471^484^[REPLACE] denominator *= -1;^[METHOD] reduce [TYPE] void [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction ONE  ZERO  fraction  other  ret  rhs  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int a0  a1  d  d1  d2  den  denominator  gcd  maxIterations  n  num  numerator  p0  p1  p2  q0  q1  q2  ret  tmodd1  upv  uvp 
