[REPLACE]^BeanTransformer b = new BeanTransformer ( name ) ;^33^^^^^32^35^[REPLACE] BeanTransformer b = new BeanTransformer (  ) ;^[METHOD] testConstructor [TYPE] void [PARAMETER] [CLASS] BeanTransformerTest   [TYPE]  boolean false  true  [TYPE]  BeanTransformer b 
[REPLACE]^assertNull ( b.BeanTransformer (  )  ) ;^34^^^^^32^35^[REPLACE] assertNull ( b.getPropertyName (  )  ) ;^[METHOD] testConstructor [TYPE] void [PARAMETER] [CLASS] BeanTransformerTest   [TYPE]  boolean false  true  [TYPE]  BeanTransformer b 
[ADD]^^34^^^^^32^35^[ADD] assertNull ( b.getPropertyName (  )  ) ;^[METHOD] testConstructor [TYPE] void [PARAMETER] [CLASS] BeanTransformerTest   [TYPE]  boolean false  true  [TYPE]  BeanTransformer b 
[REPLACE]^BeanTransformer b = new BeanTransformer ( name ) ;^41^^^^^40^44^[REPLACE] String name = "property";^[METHOD] testConstructorString [TYPE] void [PARAMETER] [CLASS] BeanTransformerTest   [TYPE]  boolean false  true  [TYPE]  String name  [TYPE]  BeanTransformer b 
[REPLACE]^BeanTransformer b = new BeanTransformer ( "y" ) ;^42^^^^^40^44^[REPLACE] BeanTransformer b = new BeanTransformer ( name ) ;^[METHOD] testConstructorString [TYPE] void [PARAMETER] [CLASS] BeanTransformerTest   [TYPE]  boolean false  true  [TYPE]  String name  [TYPE]  BeanTransformer b 
[ADD]^^42^43^44^^^40^44^[ADD] BeanTransformer b = new BeanTransformer ( name ) ; assertEquals ( name, b.getPropertyName (  )  ) ; }^[METHOD] testConstructorString [TYPE] void [PARAMETER] [CLASS] BeanTransformerTest   [TYPE]  boolean false  true  [TYPE]  String name  [TYPE]  BeanTransformer b 
[REPLACE]^assertEquals ( name, b .setPropertyName ( name )   ) ;^43^^^^^40^44^[REPLACE] assertEquals ( name, b.getPropertyName (  )  ) ;^[METHOD] testConstructorString [TYPE] void [PARAMETER] [CLASS] BeanTransformerTest   [TYPE]  boolean false  true  [TYPE]  String name  [TYPE]  BeanTransformer b 
[REPLACE]^assertEquals ( name, b.BeanTransformer (  )  ) ;^43^^^^^40^44^[REPLACE] assertEquals ( name, b.getPropertyName (  )  ) ;^[METHOD] testConstructorString [TYPE] void [PARAMETER] [CLASS] BeanTransformerTest   [TYPE]  boolean false  true  [TYPE]  String name  [TYPE]  BeanTransformer b 
[ADD]^^43^^^^^40^44^[ADD] assertEquals ( name, b.getPropertyName (  )  ) ;^[METHOD] testConstructorString [TYPE] void [PARAMETER] [CLASS] BeanTransformerTest   [TYPE]  boolean false  true  [TYPE]  String name  [TYPE]  BeanTransformer b 
[REPLACE]^BeanTransformer b = new BeanTransformer ( name ) ;^50^^^^^49^54^[REPLACE] String name = "property";^[METHOD] testSetPropertyName [TYPE] void [PARAMETER] [CLASS] BeanTransformerTest   [TYPE]  boolean false  true  [TYPE]  String name  [TYPE]  BeanTransformer b 
[REPLACE]^BeanTransformer b = new BeanTransformer ( name ) ;^51^^^^^49^54^[REPLACE] BeanTransformer b = new BeanTransformer (  ) ;^[METHOD] testSetPropertyName [TYPE] void [PARAMETER] [CLASS] BeanTransformerTest   [TYPE]  boolean false  true  [TYPE]  String name  [TYPE]  BeanTransformer b 
[REPLACE]^b.BeanTransformer ( name ) ;^52^^^^^49^54^[REPLACE] b.setPropertyName ( name ) ;^[METHOD] testSetPropertyName [TYPE] void [PARAMETER] [CLASS] BeanTransformerTest   [TYPE]  boolean false  true  [TYPE]  String name  [TYPE]  BeanTransformer b 
[REPLACE]^assertEquals ( name, b.BeanTransformer (  )  ) ;^53^^^^^49^54^[REPLACE] assertEquals ( name, b.getPropertyName (  )  ) ;^[METHOD] testSetPropertyName [TYPE] void [PARAMETER] [CLASS] BeanTransformerTest   [TYPE]  boolean false  true  [TYPE]  String name  [TYPE]  BeanTransformer b 
[REMOVE]^assertNull ( b.getPropertyName (  )  ) ;^53^^^^^49^54^[REMOVE] ^[METHOD] testSetPropertyName [TYPE] void [PARAMETER] [CLASS] BeanTransformerTest   [TYPE]  boolean false  true  [TYPE]  String name  [TYPE]  BeanTransformer b 
[REPLACE]^BeanTransformer b = new BeanTransformer ( name ) ;^60^^^^^59^68^[REPLACE] BeanTransformer b = new BeanTransformer ( "z" ) ;^[METHOD] testTransformNoSuchMethod [TYPE] void [PARAMETER] [CLASS] BeanTransformerTest   [TYPE]  boolean false  true  [TYPE]  TestBean target  [TYPE]  MathException e  [TYPE]  BeanTransformer b 
[REPLACE]^BeanTransformer b = new BeanTransformer ( name ) ;^61^^^^^59^68^[REPLACE] TestBean target = new TestBean (  ) ;^[METHOD] testTransformNoSuchMethod [TYPE] void [PARAMETER] [CLASS] BeanTransformerTest   [TYPE]  boolean false  true  [TYPE]  TestBean target  [TYPE]  MathException e  [TYPE]  BeanTransformer b 
[ADD]^b.transform ( target ) ;fail ( "Expecting MathException" ) ;^62^63^64^65^66^59^68^[ADD] try { b.transform ( target ) ; fail ( "Expecting MathException" ) ; } catch  ( MathException e )  {^[METHOD] testTransformNoSuchMethod [TYPE] void [PARAMETER] [CLASS] BeanTransformerTest   [TYPE]  boolean false  true  [TYPE]  TestBean target  [TYPE]  MathException e  [TYPE]  BeanTransformer b 
[REPLACE]^b.BeanTransformer ( target ) ;^63^^^^^59^68^[REPLACE] b.transform ( target ) ;^[METHOD] testTransformNoSuchMethod [TYPE] void [PARAMETER] [CLASS] BeanTransformerTest   [TYPE]  boolean false  true  [TYPE]  TestBean target  [TYPE]  MathException e  [TYPE]  BeanTransformer b 
[REPLACE]^fail ( "Expecting ClassCastException" ) ;^64^^^^^59^68^[REPLACE] fail ( "Expecting MathException" ) ;^[METHOD] testTransformNoSuchMethod [TYPE] void [PARAMETER] [CLASS] BeanTransformerTest   [TYPE]  boolean false  true  [TYPE]  TestBean target  [TYPE]  MathException e  [TYPE]  BeanTransformer b 
[REPLACE]^BeanTransformer b = new BeanTransformer ( name ) ;^74^^^^^73^79^[REPLACE] BeanTransformer b = new BeanTransformer ( "x" ) ;^[METHOD] testTransform [TYPE] void [PARAMETER] [CLASS] BeanTransformerTest   [TYPE]  boolean false  true  [TYPE]  TestBean target  [TYPE]  double value  [TYPE]  BeanTransformer b 
[REPLACE]^BeanTransformer b = new BeanTransformer ( name ) ;^75^^^^^73^79^[REPLACE] TestBean target = new TestBean (  ) ;^[METHOD] testTransform [TYPE] void [PARAMETER] [CLASS] BeanTransformerTest   [TYPE]  boolean false  true  [TYPE]  TestBean target  [TYPE]  double value  [TYPE]  BeanTransformer b 
[REPLACE]^BeanTransformer b = new BeanTransformer ( name ) ;^76^^^^^73^79^[REPLACE] double value = Double.NaN;^[METHOD] testTransform [TYPE] void [PARAMETER] [CLASS] BeanTransformerTest   [TYPE]  boolean false  true  [TYPE]  TestBean target  [TYPE]  double value  [TYPE]  BeanTransformer b 
[REPLACE]^value =  null.transform ( target ) ;^77^^^^^73^79^[REPLACE] value = b.transform ( target ) ;^[METHOD] testTransform [TYPE] void [PARAMETER] [CLASS] BeanTransformerTest   [TYPE]  boolean false  true  [TYPE]  TestBean target  [TYPE]  double value  [TYPE]  BeanTransformer b 
[REPLACE]^TestUtils.assertEquals ( 2.0d, value, 2.0de-2 ) ;^78^^^^^73^79^[REPLACE] TestUtils.assertEquals ( 1.0, value, 1.0e-2 ) ;^[METHOD] testTransform [TYPE] void [PARAMETER] [CLASS] BeanTransformerTest   [TYPE]  boolean false  true  [TYPE]  TestBean target  [TYPE]  double value  [TYPE]  BeanTransformer b 
[REPLACE]^BeanTransformer b = new BeanTransformer ( name ) ;^84^^^^^83^92^[REPLACE] BeanTransformer b = new BeanTransformer ( "y" ) ;^[METHOD] testTransformInvalidType [TYPE] void [PARAMETER] [CLASS] BeanTransformerTest   [TYPE]  boolean false  true  [TYPE]  TestBean target  [TYPE]  ClassCastException ex  [TYPE]  BeanTransformer b 
[REPLACE]^BeanTransformer b = new BeanTransformer ( name ) ;^85^^^^^83^92^[REPLACE] TestBean target = new TestBean (  ) ;^[METHOD] testTransformInvalidType [TYPE] void [PARAMETER] [CLASS] BeanTransformerTest   [TYPE]  boolean false  true  [TYPE]  TestBean target  [TYPE]  ClassCastException ex  [TYPE]  BeanTransformer b 
[ADD]^b.transform ( target ) ;fail ( "Expecting ClassCastException" ) ;^86^87^88^89^90^83^92^[ADD] try { b.transform ( target ) ; fail ( "Expecting ClassCastException" ) ; } catch ( ClassCastException ex ) {^[METHOD] testTransformInvalidType [TYPE] void [PARAMETER] [CLASS] BeanTransformerTest   [TYPE]  boolean false  true  [TYPE]  TestBean target  [TYPE]  ClassCastException ex  [TYPE]  BeanTransformer b 
[REPLACE]^b .BeanTransformer (  )  ;^87^^^^^83^92^[REPLACE] b.transform ( target ) ;^[METHOD] testTransformInvalidType [TYPE] void [PARAMETER] [CLASS] BeanTransformerTest   [TYPE]  boolean false  true  [TYPE]  TestBean target  [TYPE]  ClassCastException ex  [TYPE]  BeanTransformer b 
[REPLACE]^fail ( "Expecting MathException" ) ;^88^^^^^83^92^[REPLACE] fail ( "Expecting ClassCastException" ) ;^[METHOD] testTransformInvalidType [TYPE] void [PARAMETER] [CLASS] BeanTransformerTest   [TYPE]  boolean false  true  [TYPE]  TestBean target  [TYPE]  ClassCastException ex  [TYPE]  BeanTransformer b 
[ADD]^^89^90^91^^^83^92^[ADD] catch ( ClassCastException ex ) {  }^[METHOD] testTransformInvalidType [TYPE] void [PARAMETER] [CLASS] BeanTransformerTest   [TYPE]  boolean false  true  [TYPE]  TestBean target  [TYPE]  ClassCastException ex  [TYPE]  BeanTransformer b 
