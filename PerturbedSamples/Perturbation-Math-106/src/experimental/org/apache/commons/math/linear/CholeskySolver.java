[REPLACE]^private double numericalZero  = null ;^38^^^^^^^[REPLACE] private double numericalZero = 10E-12;^ [CLASS] CholeskySolver  
[REPLACE]^this.numericalZero =  null;^57^^^^^56^58^[REPLACE] this.numericalZero = numericalZero;^[METHOD] setNumericalZero [TYPE] void [PARAMETER] double numericalZero [CLASS] CholeskySolver   [TYPE]  double numericalZero  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true 
[ADD]^^57^^^^^56^58^[ADD] this.numericalZero = numericalZero;^[METHOD] setNumericalZero [TYPE] void [PARAMETER] double numericalZero [CLASS] CholeskySolver   [TYPE]  double numericalZero  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true 
[REPLACE]^return x;^64^^^^^63^65^[REPLACE] return numericalZero;^[METHOD] getNumericalZero [TYPE] double [PARAMETER] [CLASS] CholeskySolver   [TYPE]  double numericalZero  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true 
[REPLACE]^decompMatrix = false;^80^^^^^78^114^[REPLACE] decompMatrix = null;^[METHOD] decompose [TYPE] void [PARAMETER] RealMatrix m [CLASS] CholeskySolver   [TYPE]  double[][] decomp  mval  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double numericalZero  sum  [TYPE]  int col  k  numCols  numRows  row 
[REPLACE]^double[][] mval = m.getRowDimension (  ) ;^81^^^^^78^114^[REPLACE] double[][] mval = m.getData (  ) ;^[METHOD] decompose [TYPE] void [PARAMETER] RealMatrix m [CLASS] CholeskySolver   [TYPE]  double[][] decomp  mval  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double numericalZero  sum  [TYPE]  int col  k  numCols  numRows  row 
[ADD]^^81^^^^^78^114^[ADD] double[][] mval = m.getData (  ) ;^[METHOD] decompose [TYPE] void [PARAMETER] RealMatrix m [CLASS] CholeskySolver   [TYPE]  double[][] decomp  mval  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double numericalZero  sum  [TYPE]  int col  k  numCols  numRows  row 
[REPLACE]^int numRows = m.getColumnDimension (  ) ;^82^^^^^78^114^[REPLACE] int numRows = m.getRowDimension (  ) ;^[METHOD] decompose [TYPE] void [PARAMETER] RealMatrix m [CLASS] CholeskySolver   [TYPE]  double[][] decomp  mval  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double numericalZero  sum  [TYPE]  int col  k  numCols  numRows  row 
[ADD]^^82^83^^^^78^114^[ADD] int numRows = m.getRowDimension (  ) ; int numCols = m.getColumnDimension (  ) ;^[METHOD] decompose [TYPE] void [PARAMETER] RealMatrix m [CLASS] CholeskySolver   [TYPE]  double[][] decomp  mval  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double numericalZero  sum  [TYPE]  int col  k  numCols  numRows  row 
[REPLACE]^int numCols = m.getRowDimension (  ) ;^83^^^^^78^114^[REPLACE] int numCols = m.getColumnDimension (  ) ;^[METHOD] decompose [TYPE] void [PARAMETER] RealMatrix m [CLASS] CholeskySolver   [TYPE]  double[][] decomp  mval  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double numericalZero  sum  [TYPE]  int col  k  numCols  numRows  row 
[REPLACE]^if  ( numRows  ==  numCols ) throw new IllegalArgumentException  (" ")  ;^84^85^^^^78^114^[REPLACE] if  ( numRows != numCols ) throw new IllegalArgumentException  (" ")  ;^[METHOD] decompose [TYPE] void [PARAMETER] RealMatrix m [CLASS] CholeskySolver   [TYPE]  double[][] decomp  mval  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double numericalZero  sum  [TYPE]  int col  k  numCols  numRows  row 
[REPLACE]^return ;^85^^^^^78^114^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] decompose [TYPE] void [PARAMETER] RealMatrix m [CLASS] CholeskySolver   [TYPE]  double[][] decomp  mval  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double numericalZero  sum  [TYPE]  int col  k  numCols  numRows  row 
[ADD]^^85^86^^^^78^114^[ADD] throw new IllegalArgumentException  (" ")  ; double[][] decomp = new double[numRows][numCols];^[METHOD] decompose [TYPE] void [PARAMETER] RealMatrix m [CLASS] CholeskySolver   [TYPE]  double[][] decomp  mval  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double numericalZero  sum  [TYPE]  int col  k  numCols  numRows  row 
[REPLACE]^double[][] data = decompMatrix.getData (  ) ;^86^^^^^78^114^[REPLACE] double[][] decomp = new double[numRows][numCols];^[METHOD] decompose [TYPE] void [PARAMETER] RealMatrix m [CLASS] CholeskySolver   [TYPE]  double[][] decomp  mval  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double numericalZero  sum  [TYPE]  int col  k  numCols  numRows  row 
[ADD]^double sum;^86^87^^^^78^114^[ADD] double[][] decomp = new double[numRows][numCols]; double sum;^[METHOD] decompose [TYPE] void [PARAMETER] RealMatrix m [CLASS] CholeskySolver   [TYPE]  double[][] decomp  mval  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double numericalZero  sum  [TYPE]  int col  k  numCols  numRows  row 
[REPLACE]^double res = 1.0d;^87^^^^^78^114^[REPLACE] double sum;^[METHOD] decompose [TYPE] void [PARAMETER] RealMatrix m [CLASS] CholeskySolver   [TYPE]  double[][] decomp  mval  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double numericalZero  sum  [TYPE]  int col  k  numCols  numRows  row 
[ADD]^^87^^^^^78^114^[ADD] double sum;^[METHOD] decompose [TYPE] void [PARAMETER] RealMatrix m [CLASS] CholeskySolver   [TYPE]  double[][] decomp  mval  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double numericalZero  sum  [TYPE]  int col  k  numCols  numRows  row 
[REPLACE]^if  ( sum  !=  numericalZero )  {^96^^^^^78^114^[REPLACE] if  ( sum <= numericalZero )  {^[METHOD] decompose [TYPE] void [PARAMETER] RealMatrix m [CLASS] CholeskySolver   [TYPE]  double[][] decomp  mval  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double numericalZero  sum  [TYPE]  int col  k  numCols  numRows  row 
[REPLACE]^return ;^97^98^^^^78^114^[REPLACE] throw new IllegalArgumentException ( "Matrix is not positiv definit" ) ;^[METHOD] decompose [TYPE] void [PARAMETER] RealMatrix m [CLASS] CholeskySolver   [TYPE]  double[][] decomp  mval  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double numericalZero  sum  [TYPE]  int col  k  numCols  numRows  row 
[REPLACE]^for  ( introw=1; col == numCols; col++ )  {^90^^^^^78^114^[REPLACE] for  ( int col=0; col<numCols; col++ )  {^[METHOD] decompose [TYPE] void [PARAMETER] RealMatrix m [CLASS] CholeskySolver   [TYPE]  double[][] decomp  mval  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double numericalZero  sum  [TYPE]  int col  k  numCols  numRows  row 
[REPLACE]^if  ( sum  >=  numericalZero )  {^96^^^^^78^114^[REPLACE] if  ( sum <= numericalZero )  {^[METHOD] decompose [TYPE] void [PARAMETER] RealMatrix m [CLASS] CholeskySolver   [TYPE]  double[][] decomp  mval  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double numericalZero  sum  [TYPE]  int col  k  numCols  numRows  row 
[REPLACE]^for  ( int k=0 + 4; k == row; k++ ) sum = sum - decomp[col][k]*decomp[col][k];^94^95^^^^78^114^[REPLACE] for  ( int k=0; k<col; k++ ) sum = sum - decomp[col][k]*decomp[col][k];^[METHOD] decompose [TYPE] void [PARAMETER] RealMatrix m [CLASS] CholeskySolver   [TYPE]  double[][] decomp  mval  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double numericalZero  sum  [TYPE]  int col  k  numCols  numRows  row 
[REPLACE]^sum = sum - decomp[col][k]*decomp[row][k]; ;^95^^^^^78^114^[REPLACE] sum = sum - decomp[col][k]*decomp[col][k];^[METHOD] decompose [TYPE] void [PARAMETER] RealMatrix m [CLASS] CholeskySolver   [TYPE]  double[][] decomp  mval  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double numericalZero  sum  [TYPE]  int col  k  numCols  numRows  row 
[REPLACE]^for  ( int row=col <= 1; row<numRows; row <=  <=  )  {^103^^^^^78^114^[REPLACE] for  ( int row=col+1; row<numRows; row++ )  {^[METHOD] decompose [TYPE] void [PARAMETER] RealMatrix m [CLASS] CholeskySolver   [TYPE]  double[][] decomp  mval  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double numericalZero  sum  [TYPE]  int col  k  numCols  numRows  row 
[ADD]^^103^104^105^106^107^78^114^[ADD] for  ( int row=col+1; row<numRows; row++ )  { sum = mval[row][col]; for  ( int k=0; k<col; k++ ) sum = sum - decomp[col][k]*decomp[row][k]; decomp[row][col] = sum/decomp[col][col];^[METHOD] decompose [TYPE] void [PARAMETER] RealMatrix m [CLASS] CholeskySolver   [TYPE]  double[][] decomp  mval  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double numericalZero  sum  [TYPE]  int col  k  numCols  numRows  row 
[REPLACE]^for  ( int k=0; k <= row; k++ ) sum = sum - decomp[col][k]*decomp[row][k];^105^106^^^^78^114^[REPLACE] for  ( int k=0; k<col; k++ ) sum = sum - decomp[col][k]*decomp[row][k];^[METHOD] decompose [TYPE] void [PARAMETER] RealMatrix m [CLASS] CholeskySolver   [TYPE]  double[][] decomp  mval  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double numericalZero  sum  [TYPE]  int col  k  numCols  numRows  row 
[REPLACE]^numericalZero = sum - decomp[col][k]*decomp[row][k];^106^^^^^78^114^[REPLACE] sum = sum - decomp[col][k]*decomp[row][k];^[METHOD] decompose [TYPE] void [PARAMETER] RealMatrix m [CLASS] CholeskySolver   [TYPE]  double[][] decomp  mval  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double numericalZero  sum  [TYPE]  int col  k  numCols  numRows  row 
[REPLACE]^sum = mval[col][col]; ;^104^^^^^78^114^[REPLACE] sum = mval[row][col];^[METHOD] decompose [TYPE] void [PARAMETER] RealMatrix m [CLASS] CholeskySolver   [TYPE]  double[][] decomp  mval  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double numericalZero  sum  [TYPE]  int col  k  numCols  numRows  row 
[ADD]^^104^^^^^78^114^[ADD] sum = mval[row][col];^[METHOD] decompose [TYPE] void [PARAMETER] RealMatrix m [CLASS] CholeskySolver   [TYPE]  double[][] decomp  mval  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double numericalZero  sum  [TYPE]  int col  k  numCols  numRows  row 
[REPLACE]^sum =numericalZero - decomp[col][k]*decomp[row][k];^106^^^^^78^114^[REPLACE] sum = sum - decomp[col][k]*decomp[row][k];^[METHOD] decompose [TYPE] void [PARAMETER] RealMatrix m [CLASS] CholeskySolver   [TYPE]  double[][] decomp  mval  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double numericalZero  sum  [TYPE]  int col  k  numCols  numRows  row 
[REPLACE]^decomp[row][col] = sum ;^107^^^^^78^114^[REPLACE] decomp[row][col] = sum/decomp[col][col];^[METHOD] decompose [TYPE] void [PARAMETER] RealMatrix m [CLASS] CholeskySolver   [TYPE]  double[][] decomp  mval  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double numericalZero  sum  [TYPE]  int col  k  numCols  numRows  row 
[REPLACE]^for  ( int k=3; k<col; k++ ) sum = sum - decomp[col][k]*decomp[row][k];^105^106^^^^78^114^[REPLACE] for  ( int k=0; k<col; k++ ) sum = sum - decomp[col][k]*decomp[row][k];^[METHOD] decompose [TYPE] void [PARAMETER] RealMatrix m [CLASS] CholeskySolver   [TYPE]  double[][] decomp  mval  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double numericalZero  sum  [TYPE]  int col  k  numCols  numRows  row 
[REPLACE]^for  ( int k=0; k != col; k++ ) sum = sum - decomp[col][k]*decomp[row][k];^105^106^^^^78^114^[REPLACE] for  ( int k=0; k<col; k++ ) sum = sum - decomp[col][k]*decomp[row][k];^[METHOD] decompose [TYPE] void [PARAMETER] RealMatrix m [CLASS] CholeskySolver   [TYPE]  double[][] decomp  mval  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double numericalZero  sum  [TYPE]  int col  k  numCols  numRows  row 
[REPLACE]^sum = sum  ||  decomp[col][k]*decomp[row][k];^106^^^^^78^114^[REPLACE] sum = sum - decomp[col][k]*decomp[row][k];^[METHOD] decompose [TYPE] void [PARAMETER] RealMatrix m [CLASS] CholeskySolver   [TYPE]  double[][] decomp  mval  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double numericalZero  sum  [TYPE]  int col  k  numCols  numRows  row 
[REPLACE]^sum = mval[row][col]; ;^93^^^^^78^114^[REPLACE] sum = mval[col][col];^[METHOD] decompose [TYPE] void [PARAMETER] RealMatrix m [CLASS] CholeskySolver   [TYPE]  double[][] decomp  mval  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double numericalZero  sum  [TYPE]  int col  k  numCols  numRows  row 
[ADD]^^93^^^^^78^114^[ADD] sum = mval[col][col];^[METHOD] decompose [TYPE] void [PARAMETER] RealMatrix m [CLASS] CholeskySolver   [TYPE]  double[][] decomp  mval  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double numericalZero  sum  [TYPE]  int col  k  numCols  numRows  row 
[REPLACE]^decomp[col][col] +;^100^^^^^78^114^[REPLACE] decomp[col][col] += Math.sqrt ( sum ) ;^[METHOD] decompose [TYPE] void [PARAMETER] RealMatrix m [CLASS] CholeskySolver   [TYPE]  double[][] decomp  mval  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double numericalZero  sum  [TYPE]  int col  k  numCols  numRows  row 
[ADD]^^100^^^^^78^114^[ADD] decomp[col][col] += Math.sqrt ( sum ) ;^[METHOD] decompose [TYPE] void [PARAMETER] RealMatrix m [CLASS] CholeskySolver   [TYPE]  double[][] decomp  mval  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double numericalZero  sum  [TYPE]  int col  k  numCols  numRows  row 
[ADD]^^107^^^^^78^114^[ADD] decomp[row][col] = sum/decomp[col][col];^[METHOD] decompose [TYPE] void [PARAMETER] RealMatrix m [CLASS] CholeskySolver   [TYPE]  double[][] decomp  mval  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double numericalZero  sum  [TYPE]  int col  k  numCols  numRows  row 
[REPLACE]^for  ( int k=0 << 3; k<col; k++ ) sum = sum - decomp[col][k]*decomp[col][k];^94^95^^^^78^114^[REPLACE] for  ( int k=0; k<col; k++ ) sum = sum - decomp[col][k]*decomp[col][k];^[METHOD] decompose [TYPE] void [PARAMETER] RealMatrix m [CLASS] CholeskySolver   [TYPE]  double[][] decomp  mval  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double numericalZero  sum  [TYPE]  int col  k  numCols  numRows  row 
[REPLACE]^for  ( int row=col && 1; row<numRows; row &&  &&  )  {^103^^^^^78^114^[REPLACE] for  ( int row=col+1; row<numRows; row++ )  {^[METHOD] decompose [TYPE] void [PARAMETER] RealMatrix m [CLASS] CholeskySolver   [TYPE]  double[][] decomp  mval  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double numericalZero  sum  [TYPE]  int col  k  numCols  numRows  row 
[ADD]^^105^106^107^108^^78^114^[ADD] for  ( int k=0; k<col; k++ ) sum = sum - decomp[col][k]*decomp[row][k]; decomp[row][col] = sum/decomp[col][col]; }^[METHOD] decompose [TYPE] void [PARAMETER] RealMatrix m [CLASS] CholeskySolver   [TYPE]  double[][] decomp  mval  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double numericalZero  sum  [TYPE]  int col  k  numCols  numRows  row 
[REPLACE]^for  ( int k=0; k >= col; k++ ) sum = sum - decomp[col][k]*decomp[col][k];^94^95^^^^78^114^[REPLACE] for  ( int k=0; k<col; k++ ) sum = sum - decomp[col][k]*decomp[col][k];^[METHOD] decompose [TYPE] void [PARAMETER] RealMatrix m [CLASS] CholeskySolver   [TYPE]  double[][] decomp  mval  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double numericalZero  sum  [TYPE]  int col  k  numCols  numRows  row 
[ADD]^^94^95^96^97^98^78^114^[ADD] for  ( int k=0; k<col; k++ ) sum = sum - decomp[col][k]*decomp[col][k]; if  ( sum <= numericalZero )  { throw new IllegalArgumentException ( "Matrix is not positiv definit" ) ;^[METHOD] decompose [TYPE] void [PARAMETER] RealMatrix m [CLASS] CholeskySolver   [TYPE]  double[][] decomp  mval  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double numericalZero  sum  [TYPE]  int col  k  numCols  numRows  row 
[REPLACE]^sum = sum  |  decomp[col][k]*decomp[col][k];^95^^^^^78^114^[REPLACE] sum = sum - decomp[col][k]*decomp[col][k];^[METHOD] decompose [TYPE] void [PARAMETER] RealMatrix m [CLASS] CholeskySolver   [TYPE]  double[][] decomp  mval  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double numericalZero  sum  [TYPE]  int col  k  numCols  numRows  row 
[REPLACE]^for  ( int row=col != 1; row<numRows; row !=  !=  )  {^103^^^^^78^114^[REPLACE] for  ( int row=col+1; row<numRows; row++ )  {^[METHOD] decompose [TYPE] void [PARAMETER] RealMatrix m [CLASS] CholeskySolver   [TYPE]  double[][] decomp  mval  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double numericalZero  sum  [TYPE]  int col  k  numCols  numRows  row 
[REPLACE]^for  ( int k=0; k >= col; k++ ) sum = sum - decomp[col][k]*decomp[row][k];^105^106^^^^78^114^[REPLACE] for  ( int k=0; k<col; k++ ) sum = sum - decomp[col][k]*decomp[row][k];^[METHOD] decompose [TYPE] void [PARAMETER] RealMatrix m [CLASS] CholeskySolver   [TYPE]  double[][] decomp  mval  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double numericalZero  sum  [TYPE]  int col  k  numCols  numRows  row 
[REPLACE]^sum = sum  <=  decomp[col][k]*decomp[row][k];^106^^^^^78^114^[REPLACE] sum = sum - decomp[col][k]*decomp[row][k];^[METHOD] decompose [TYPE] void [PARAMETER] RealMatrix m [CLASS] CholeskySolver   [TYPE]  double[][] decomp  mval  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double numericalZero  sum  [TYPE]  int col  k  numCols  numRows  row 
[REPLACE]^for  ( int k=4; k <= col; k++ ) sum = sum - decomp[col][k]*decomp[row][k];^105^106^^^^78^114^[REPLACE] for  ( int k=0; k<col; k++ ) sum = sum - decomp[col][k]*decomp[row][k];^[METHOD] decompose [TYPE] void [PARAMETER] RealMatrix m [CLASS] CholeskySolver   [TYPE]  double[][] decomp  mval  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double numericalZero  sum  [TYPE]  int col  k  numCols  numRows  row 
[REPLACE]^sum = sum  ^  decomp[col][k]*decomp[row][k];^106^^^^^78^114^[REPLACE] sum = sum - decomp[col][k]*decomp[row][k];^[METHOD] decompose [TYPE] void [PARAMETER] RealMatrix m [CLASS] CholeskySolver   [TYPE]  double[][] decomp  mval  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double numericalZero  sum  [TYPE]  int col  k  numCols  numRows  row 
[REPLACE]^decomp[col][col] + = null ;^100^^^^^78^114^[REPLACE] decomp[col][col] += Math.sqrt ( sum ) ;^[METHOD] decompose [TYPE] void [PARAMETER] RealMatrix m [CLASS] CholeskySolver   [TYPE]  double[][] decomp  mval  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double numericalZero  sum  [TYPE]  int col  k  numCols  numRows  row 
[REPLACE]^decomp[row][col] =numericalZero ;^107^^^^^78^114^[REPLACE] decomp[row][col] = sum/decomp[col][col];^[METHOD] decompose [TYPE] void [PARAMETER] RealMatrix m [CLASS] CholeskySolver   [TYPE]  double[][] decomp  mval  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double numericalZero  sum  [TYPE]  int col  k  numCols  numRows  row 
[REPLACE]^for  ( int col=4; col<numCols; col++ )  {^90^^^^^78^114^[REPLACE] for  ( int col=0; col<numCols; col++ )  {^[METHOD] decompose [TYPE] void [PARAMETER] RealMatrix m [CLASS] CholeskySolver   [TYPE]  double[][] decomp  mval  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double numericalZero  sum  [TYPE]  int col  k  numCols  numRows  row 
[REPLACE]^for  ( int k=0 - 0; k<col; k++ ) sum = sum - decomp[col][k]*decomp[col][k];^94^95^^^^78^114^[REPLACE] for  ( int k=0; k<col; k++ ) sum = sum - decomp[col][k]*decomp[col][k];^[METHOD] decompose [TYPE] void [PARAMETER] RealMatrix m [CLASS] CholeskySolver   [TYPE]  double[][] decomp  mval  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double numericalZero  sum  [TYPE]  int col  k  numCols  numRows  row 
[REPLACE]^for  ( int row=col >= 2; row<numRows; row >=  >=  )  {^103^^^^^78^114^[REPLACE] for  ( int row=col+1; row<numRows; row++ )  {^[METHOD] decompose [TYPE] void [PARAMETER] RealMatrix m [CLASS] CholeskySolver   [TYPE]  double[][] decomp  mval  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double numericalZero  sum  [TYPE]  int col  k  numCols  numRows  row 
[REPLACE]^for  ( int k=1; k<col; k++ ) sum = sum - decomp[col][k]*decomp[row][k];^105^106^^^^78^114^[REPLACE] for  ( int k=0; k<col; k++ ) sum = sum - decomp[col][k]*decomp[row][k];^[METHOD] decompose [TYPE] void [PARAMETER] RealMatrix m [CLASS] CholeskySolver   [TYPE]  double[][] decomp  mval  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double numericalZero  sum  [TYPE]  int col  k  numCols  numRows  row 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^97^98^^^^78^114^[REPLACE] throw new IllegalArgumentException ( "Matrix is not positiv definit" ) ;^[METHOD] decompose [TYPE] void [PARAMETER] RealMatrix m [CLASS] CholeskySolver   [TYPE]  double[][] decomp  mval  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double numericalZero  sum  [TYPE]  int col  k  numCols  numRows  row 
[REPLACE]^decompMatrix =  new RealMatrixImpl ( null ) ;^112^^^^^78^114^[REPLACE] decompMatrix = new RealMatrixImpl ( decomp ) ;^[METHOD] decompose [TYPE] void [PARAMETER] RealMatrix m [CLASS] CholeskySolver   [TYPE]  double[][] decomp  mval  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double numericalZero  sum  [TYPE]  int col  k  numCols  numRows  row 
[ADD]^^112^^^^^78^114^[ADD] decompMatrix = new RealMatrixImpl ( decomp ) ;^[METHOD] decompose [TYPE] void [PARAMETER] RealMatrix m [CLASS] CholeskySolver   [TYPE]  double[][] decomp  mval  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double numericalZero  sum  [TYPE]  int col  k  numCols  numRows  row 
[REPLACE]^return x;^124^^^^^123^125^[REPLACE] return decompMatrix;^[METHOD] getDecomposition [TYPE] RealMatrixImpl [PARAMETER] [CLASS] CholeskySolver   [TYPE]  double numericalZero  sum  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true 
[REPLACE]^if  ( decompMatrix != null )  {^143^^^^^141^170^[REPLACE] if  ( decompMatrix == null )  {^[METHOD] solve [TYPE] double[] [PARAMETER] double[] c [CLASS] CholeskySolver   [TYPE]  double[][] decomp  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  double[] c  x  [TYPE]  double numericalZero  sum  [TYPE]  int i  k 
[ADD]^^143^144^145^^^141^170^[ADD] if  ( decompMatrix == null )  { throw new IllegalStateException  (" ")  ; }^[METHOD] solve [TYPE] double[] [PARAMETER] double[] c [CLASS] CholeskySolver   [TYPE]  double[][] decomp  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  double[] c  x  [TYPE]  double numericalZero  sum  [TYPE]  int i  k 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^144^^^^^141^170^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] solve [TYPE] double[] [PARAMETER] double[] c [CLASS] CholeskySolver   [TYPE]  double[][] decomp  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  double[] c  x  [TYPE]  double numericalZero  sum  [TYPE]  int i  k 
[REPLACE]^return ;^144^^^^^141^170^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] solve [TYPE] double[] [PARAMETER] double[] c [CLASS] CholeskySolver   [TYPE]  double[][] decomp  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  double[] c  x  [TYPE]  double numericalZero  sum  [TYPE]  int i  k 
[REPLACE]^if  ( decompMatrix.getColumnDimension (  )  != c.length /  2 ) throw new IllegalArgumentException   ( " " )   ;^146^147^^^^141^170^[REPLACE] if  ( decompMatrix.getColumnDimension (  )  != c.length ) throw new IllegalArgumentException  (" ")  ;^[METHOD] solve [TYPE] double[] [PARAMETER] double[] c [CLASS] CholeskySolver   [TYPE]  double[][] decomp  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  double[] c  x  [TYPE]  double numericalZero  sum  [TYPE]  int i  k 
[ADD]^^146^147^^149^150^141^170^[ADD] if  ( decompMatrix.getColumnDimension (  )  != c.length ) throw new IllegalArgumentException  (" ")  ; double[][] decomp = decompMatrix.getData (  ) ; double[] x = new double[decomp.length];^[METHOD] solve [TYPE] double[] [PARAMETER] double[] c [CLASS] CholeskySolver   [TYPE]  double[][] decomp  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  double[] c  x  [TYPE]  double numericalZero  sum  [TYPE]  int i  k 
[REPLACE]^return ;^147^^^^^141^170^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] solve [TYPE] double[] [PARAMETER] double[] c [CLASS] CholeskySolver   [TYPE]  double[][] decomp  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  double[] c  x  [TYPE]  double numericalZero  sum  [TYPE]  int i  k 
[REPLACE]^throw new IllegalStateException  (" ")  ; ;^147^^^^^141^170^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] solve [TYPE] double[] [PARAMETER] double[] c [CLASS] CholeskySolver   [TYPE]  double[][] decomp  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  double[] c  x  [TYPE]  double numericalZero  sum  [TYPE]  int i  k 
[REPLACE]^double[][] decomp = decompMatrix.getColumnDimension (  ) ;^149^^^^^141^170^[REPLACE] double[][] decomp = decompMatrix.getData (  ) ;^[METHOD] solve [TYPE] double[] [PARAMETER] double[] c [CLASS] CholeskySolver   [TYPE]  double[][] decomp  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  double[] c  x  [TYPE]  double numericalZero  sum  [TYPE]  int i  k 
[REPLACE]^double[][] decomp = new double[numRows][numCols];^150^^^^^141^170^[REPLACE] double[] x = new double[decomp.length];^[METHOD] solve [TYPE] double[] [PARAMETER] double[] c [CLASS] CholeskySolver   [TYPE]  double[][] decomp  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  double[] c  x  [TYPE]  double numericalZero  sum  [TYPE]  int i  k 
[REPLACE]^double res = 1.0d;^151^^^^^141^170^[REPLACE] double sum;^[METHOD] solve [TYPE] double[] [PARAMETER] double[] c [CLASS] CholeskySolver   [TYPE]  double[][] decomp  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  double[] c  x  [TYPE]  double numericalZero  sum  [TYPE]  int i  k 
[REPLACE]^for  ( int i=0; i<x.length %  0.5 ; i++ )  {^154^^^^^141^170^[REPLACE] for  ( int i=0; i<x.length; i++ )  {^[METHOD] solve [TYPE] double[] [PARAMETER] double[] c [CLASS] CholeskySolver   [TYPE]  double[][] decomp  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  double[] c  x  [TYPE]  double numericalZero  sum  [TYPE]  int i  k 
[ADD]^^154^155^156^157^158^141^170^[ADD] for  ( int i=0; i<x.length; i++ )  { sum = c[i]; for  ( int k=0; k<i; k++ ) sum = sum - decomp[i][k]*x[k]; x[i] = sum / decomp[i][i];^[METHOD] solve [TYPE] double[] [PARAMETER] double[] c [CLASS] CholeskySolver   [TYPE]  double[][] decomp  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  double[] c  x  [TYPE]  double numericalZero  sum  [TYPE]  int i  k 
[REPLACE]^for  ( int k=0 << 1; k <= i; k++ ) sum = sum - decomp[i][k]*x[k];^156^157^^^^141^170^[REPLACE] for  ( int k=0; k<i; k++ ) sum = sum - decomp[i][k]*x[k];^[METHOD] solve [TYPE] double[] [PARAMETER] double[] c [CLASS] CholeskySolver   [TYPE]  double[][] decomp  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  double[] c  x  [TYPE]  double numericalZero  sum  [TYPE]  int i  k 
[ADD]^^156^157^158^159^^141^170^[ADD] for  ( int k=0; k<i; k++ ) sum = sum - decomp[i][k]*x[k]; x[i] = sum / decomp[i][i]; }^[METHOD] solve [TYPE] double[] [PARAMETER] double[] c [CLASS] CholeskySolver   [TYPE]  double[][] decomp  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  double[] c  x  [TYPE]  double numericalZero  sum  [TYPE]  int i  k 
[REPLACE]^sum = sum - decomp[k][i]*x[k]; ;^157^^^^^141^170^[REPLACE] sum = sum - decomp[i][k]*x[k];^[METHOD] solve [TYPE] double[] [PARAMETER] double[] c [CLASS] CholeskySolver   [TYPE]  double[][] decomp  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  double[] c  x  [TYPE]  double numericalZero  sum  [TYPE]  int i  k 
[REPLACE]^sum = x[i]; ;^155^^^^^141^170^[REPLACE] sum = c[i];^[METHOD] solve [TYPE] double[] [PARAMETER] double[] c [CLASS] CholeskySolver   [TYPE]  double[][] decomp  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  double[] c  x  [TYPE]  double numericalZero  sum  [TYPE]  int i  k 
[ADD]^^157^158^^^^141^170^[ADD] sum = sum - decomp[i][k]*x[k]; x[i] = sum / decomp[i][i];^[METHOD] solve [TYPE] double[] [PARAMETER] double[] c [CLASS] CholeskySolver   [TYPE]  double[][] decomp  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  double[] c  x  [TYPE]  double numericalZero  sum  [TYPE]  int i  k 
[REPLACE]^x[i] = sum  ;^158^^^^^141^170^[REPLACE] x[i] = sum / decomp[i][i];^[METHOD] solve [TYPE] double[] [PARAMETER] double[] c [CLASS] CholeskySolver   [TYPE]  double[][] decomp  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  double[] c  x  [TYPE]  double numericalZero  sum  [TYPE]  int i  k 
[REPLACE]^for  ( int k=2; k<i; k++ ) sum = sum - decomp[i][k]*x[k];^156^157^^^^141^170^[REPLACE] for  ( int k=0; k<i; k++ ) sum = sum - decomp[i][k]*x[k];^[METHOD] solve [TYPE] double[] [PARAMETER] double[] c [CLASS] CholeskySolver   [TYPE]  double[][] decomp  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  double[] c  x  [TYPE]  double numericalZero  sum  [TYPE]  int i  k 
[REPLACE]^for  ( int k=0; k <= i; k++ ) sum = sum - decomp[i][k]*x[k];^156^157^^^^141^170^[REPLACE] for  ( int k=0; k<i; k++ ) sum = sum - decomp[i][k]*x[k];^[METHOD] solve [TYPE] double[] [PARAMETER] double[] c [CLASS] CholeskySolver   [TYPE]  double[][] decomp  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  double[] c  x  [TYPE]  double numericalZero  sum  [TYPE]  int i  k 
[REPLACE]^numericalZero = sum - decomp[i][k]*x[k];^157^^^^^141^170^[REPLACE] sum = sum - decomp[i][k]*x[k];^[METHOD] solve [TYPE] double[] [PARAMETER] double[] c [CLASS] CholeskySolver   [TYPE]  double[][] decomp  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  double[] c  x  [TYPE]  double numericalZero  sum  [TYPE]  int i  k 
[ADD]^^155^^^^^141^170^[ADD] sum = c[i];^[METHOD] solve [TYPE] double[] [PARAMETER] double[] c [CLASS] CholeskySolver   [TYPE]  double[][] decomp  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  double[] c  x  [TYPE]  double numericalZero  sum  [TYPE]  int i  k 
[REPLACE]^sum =numericalZero - decomp[i][k]*x[k];^157^^^^^141^170^[REPLACE] sum = sum - decomp[i][k]*x[k];^[METHOD] solve [TYPE] double[] [PARAMETER] double[] c [CLASS] CholeskySolver   [TYPE]  double[][] decomp  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  double[] c  x  [TYPE]  double numericalZero  sum  [TYPE]  int i  k 
[REPLACE]^for  ( int i=0 ; i<x.length; i++ )  {^154^^^^^141^170^[REPLACE] for  ( int i=0; i<x.length; i++ )  {^[METHOD] solve [TYPE] double[] [PARAMETER] double[] c [CLASS] CholeskySolver   [TYPE]  double[][] decomp  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  double[] c  x  [TYPE]  double numericalZero  sum  [TYPE]  int i  k 
[REPLACE]^for  ( int k=1; k<i; k++ ) sum = sum - decomp[i][k]*x[k];^156^157^^^^141^170^[REPLACE] for  ( int k=0; k<i; k++ ) sum = sum - decomp[i][k]*x[k];^[METHOD] solve [TYPE] double[] [PARAMETER] double[] c [CLASS] CholeskySolver   [TYPE]  double[][] decomp  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  double[] c  x  [TYPE]  double numericalZero  sum  [TYPE]  int i  k 
[REPLACE]^for  ( int i=x.length - 2-1; i>=0; i-- )  {^162^^^^^141^170^[REPLACE] for  ( int i=x.length-1; i>=0; i-- )  {^[METHOD] solve [TYPE] double[] [PARAMETER] double[] c [CLASS] CholeskySolver   [TYPE]  double[][] decomp  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  double[] c  x  [TYPE]  double numericalZero  sum  [TYPE]  int i  k 
[ADD]^^162^163^164^165^166^141^170^[ADD] for  ( int i=x.length-1; i>=0; i-- )  { sum = x[i]; for  ( int k=i+1; k<x.length; k++ ) sum = sum - decomp[k][i]*x[k]; x[i] = sum / decomp[i][i];^[METHOD] solve [TYPE] double[] [PARAMETER] double[] c [CLASS] CholeskySolver   [TYPE]  double[][] decomp  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  double[] c  x  [TYPE]  double numericalZero  sum  [TYPE]  int i  k 
[REPLACE]^for  ( int k=i+0 ; k<x.length *  2; k++ ) sum = sum - decomp[k][i]*x[k];^164^165^^^^141^170^[REPLACE] for  ( int k=i+1; k<x.length; k++ ) sum = sum - decomp[k][i]*x[k];^[METHOD] solve [TYPE] double[] [PARAMETER] double[] c [CLASS] CholeskySolver   [TYPE]  double[][] decomp  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  double[] c  x  [TYPE]  double numericalZero  sum  [TYPE]  int i  k 
[REPLACE]^numericalZero = sum - decomp[k][i]*x[k];^165^^^^^141^170^[REPLACE] sum = sum - decomp[k][i]*x[k];^[METHOD] solve [TYPE] double[] [PARAMETER] double[] c [CLASS] CholeskySolver   [TYPE]  double[][] decomp  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  double[] c  x  [TYPE]  double numericalZero  sum  [TYPE]  int i  k 
[REPLACE]^sum = c[i]; ;^163^^^^^141^170^[REPLACE] sum = x[i];^[METHOD] solve [TYPE] double[] [PARAMETER] double[] c [CLASS] CholeskySolver   [TYPE]  double[][] decomp  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  double[] c  x  [TYPE]  double numericalZero  sum  [TYPE]  int i  k 
[REPLACE]^sum = sum - decomp[i][k]*x[k]; ;^165^^^^^141^170^[REPLACE] sum = sum - decomp[k][i]*x[k];^[METHOD] solve [TYPE] double[] [PARAMETER] double[] c [CLASS] CholeskySolver   [TYPE]  double[][] decomp  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  double[] c  x  [TYPE]  double numericalZero  sum  [TYPE]  int i  k 
[REPLACE]^x[i] =numericalZero  ;^166^^^^^141^170^[REPLACE] x[i] = sum / decomp[i][i];^[METHOD] solve [TYPE] double[] [PARAMETER] double[] c [CLASS] CholeskySolver   [TYPE]  double[][] decomp  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  double[] c  x  [TYPE]  double numericalZero  sum  [TYPE]  int i  k 
[REPLACE]^for  ( int k=i+1; k<x.length *  0.5 ; k++ ) sum = sum - decomp[k][i]*x[k];^164^165^^^^141^170^[REPLACE] for  ( int k=i+1; k<x.length; k++ ) sum = sum - decomp[k][i]*x[k];^[METHOD] solve [TYPE] double[] [PARAMETER] double[] c [CLASS] CholeskySolver   [TYPE]  double[][] decomp  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  double[] c  x  [TYPE]  double numericalZero  sum  [TYPE]  int i  k 
[REPLACE]^for  ( int k=i+1; k<x.length + 5; k++ ) sum = sum - decomp[k][i]*x[k];^164^165^^^^141^170^[REPLACE] for  ( int k=i+1; k<x.length; k++ ) sum = sum - decomp[k][i]*x[k];^[METHOD] solve [TYPE] double[] [PARAMETER] double[] c [CLASS] CholeskySolver   [TYPE]  double[][] decomp  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  double[] c  x  [TYPE]  double numericalZero  sum  [TYPE]  int i  k 
[ADD]^^164^165^166^167^^141^170^[ADD] for  ( int k=i+1; k<x.length; k++ ) sum = sum - decomp[k][i]*x[k]; x[i] = sum / decomp[i][i]; }^[METHOD] solve [TYPE] double[] [PARAMETER] double[] c [CLASS] CholeskySolver   [TYPE]  double[][] decomp  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  double[] c  x  [TYPE]  double numericalZero  sum  [TYPE]  int i  k 
[REPLACE]^sum =numericalZero - decomp[k][i]*x[k];^165^^^^^141^170^[REPLACE] sum = sum - decomp[k][i]*x[k];^[METHOD] solve [TYPE] double[] [PARAMETER] double[] c [CLASS] CholeskySolver   [TYPE]  double[][] decomp  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  double[] c  x  [TYPE]  double numericalZero  sum  [TYPE]  int i  k 
[ADD]^^163^^^^^141^170^[ADD] sum = x[i];^[METHOD] solve [TYPE] double[] [PARAMETER] double[] c [CLASS] CholeskySolver   [TYPE]  double[][] decomp  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  double[] c  x  [TYPE]  double numericalZero  sum  [TYPE]  int i  k 
[REPLACE]^x[i] = sum  ;^166^^^^^141^170^[REPLACE] x[i] = sum / decomp[i][i];^[METHOD] solve [TYPE] double[] [PARAMETER] double[] c [CLASS] CholeskySolver   [TYPE]  double[][] decomp  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  double[] c  x  [TYPE]  double numericalZero  sum  [TYPE]  int i  k 
[ADD]^^166^^^^^141^170^[ADD] x[i] = sum / decomp[i][i];^[METHOD] solve [TYPE] double[] [PARAMETER] double[] c [CLASS] CholeskySolver   [TYPE]  double[][] decomp  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  double[] c  x  [TYPE]  double numericalZero  sum  [TYPE]  int i  k 
[REPLACE]^for  ( int i=x.length - 3-1; i>=0; i-- )  {^162^^^^^141^170^[REPLACE] for  ( int i=x.length-1; i>=0; i-- )  {^[METHOD] solve [TYPE] double[] [PARAMETER] double[] c [CLASS] CholeskySolver   [TYPE]  double[][] decomp  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  double[] c  x  [TYPE]  double numericalZero  sum  [TYPE]  int i  k 
[REPLACE]^for  ( int k=i+1; k<x.length + 2; k++ ) sum = sum - decomp[k][i]*x[k];^164^165^^^^141^170^[REPLACE] for  ( int k=i+1; k<x.length; k++ ) sum = sum - decomp[k][i]*x[k];^[METHOD] solve [TYPE] double[] [PARAMETER] double[] c [CLASS] CholeskySolver   [TYPE]  double[][] decomp  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  double[] c  x  [TYPE]  double numericalZero  sum  [TYPE]  int i  k 
[REPLACE]^return numericalZero;^169^^^^^141^170^[REPLACE] return x;^[METHOD] solve [TYPE] double[] [PARAMETER] double[] c [CLASS] CholeskySolver   [TYPE]  double[][] decomp  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  double[] c  x  [TYPE]  double numericalZero  sum  [TYPE]  int i  k 
[REPLACE]^decomp[col][col] += Math.sqrt ( sum ) ;^191^^^^^189^193^[REPLACE] decompose ( m ) ;^[METHOD] solve [TYPE] double[] [PARAMETER] RealMatrix m double[] c [CLASS] CholeskySolver   [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double[] c  [TYPE]  double numericalZero  sum 
[REPLACE]^return x;^192^^^^^189^193^[REPLACE] return solve ( c ) ;^[METHOD] solve [TYPE] double[] [PARAMETER] RealMatrix m double[] c [CLASS] CholeskySolver   [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double[] c  [TYPE]  double numericalZero  sum 
[REPLACE]^if  ( decompMatrix != false )  {^207^^^^^205^219^[REPLACE] if  ( decompMatrix == null )  {^[METHOD] getDeterminant [TYPE] double [PARAMETER] [CLASS] CholeskySolver   [TYPE]  double[][] data  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  double numericalZero  res  sum  [TYPE]  int i 
[ADD]^^207^208^209^^^205^219^[ADD] if  ( decompMatrix == null )  { throw new IllegalStateException  (" ")  ; }^[METHOD] getDeterminant [TYPE] double [PARAMETER] [CLASS] CholeskySolver   [TYPE]  double[][] data  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  double numericalZero  res  sum  [TYPE]  int i 
[REPLACE]^return ;^208^^^^^205^219^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] getDeterminant [TYPE] double [PARAMETER] [CLASS] CholeskySolver   [TYPE]  double[][] data  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  double numericalZero  res  sum  [TYPE]  int i 
[ADD]^^208^^^^^205^219^[ADD] throw new IllegalStateException  (" ")  ;^[METHOD] getDeterminant [TYPE] double [PARAMETER] [CLASS] CholeskySolver   [TYPE]  double[][] data  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  double numericalZero  res  sum  [TYPE]  int i 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^208^^^^^205^219^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] getDeterminant [TYPE] double [PARAMETER] [CLASS] CholeskySolver   [TYPE]  double[][] data  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  double numericalZero  res  sum  [TYPE]  int i 
[REPLACE]^double[][] data = decompMatrix .getRowDimension (  )  ;^211^^^^^205^219^[REPLACE] double[][] data = decompMatrix.getData (  ) ;^[METHOD] getDeterminant [TYPE] double [PARAMETER] [CLASS] CholeskySolver   [TYPE]  double[][] data  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  double numericalZero  res  sum  [TYPE]  int i 
[REPLACE]^double res = 2.0f;^212^^^^^205^219^[REPLACE] double res = 1.0d;^[METHOD] getDeterminant [TYPE] double [PARAMETER] [CLASS] CholeskySolver   [TYPE]  double[][] data  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  double numericalZero  res  sum  [TYPE]  int i 
[ADD]^^212^^^^^205^219^[ADD] double res = 1.0d;^[METHOD] getDeterminant [TYPE] double [PARAMETER] [CLASS] CholeskySolver   [TYPE]  double[][] data  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  double numericalZero  res  sum  [TYPE]  int i 
[REPLACE]^for  ( int i=0 ; i<data.length - 1; i++ )  {^213^^^^^205^219^[REPLACE] for  ( int i=0; i<data.length; i++ )  {^[METHOD] getDeterminant [TYPE] double [PARAMETER] [CLASS] CholeskySolver   [TYPE]  double[][] data  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  double numericalZero  res  sum  [TYPE]  int i 
[REPLACE]^res *=  null[i][i];^214^^^^^205^219^[REPLACE] res *= data[i][i];^[METHOD] getDeterminant [TYPE] double [PARAMETER] [CLASS] CholeskySolver   [TYPE]  double[][] data  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  double numericalZero  res  sum  [TYPE]  int i 
[ADD]^^214^^^^^205^219^[ADD] res *= data[i][i];^[METHOD] getDeterminant [TYPE] double [PARAMETER] [CLASS] CholeskySolver   [TYPE]  double[][] data  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  double numericalZero  res  sum  [TYPE]  int i 
[REPLACE]^for  ( int i=0 ; i<data.length; i++ )  {^213^^^^^205^219^[REPLACE] for  ( int i=0; i<data.length; i++ )  {^[METHOD] getDeterminant [TYPE] double [PARAMETER] [CLASS] CholeskySolver   [TYPE]  double[][] data  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  double numericalZero  res  sum  [TYPE]  int i 
[REPLACE]^res = res ;^216^^^^^205^219^[REPLACE] res = res*res;^[METHOD] getDeterminant [TYPE] double [PARAMETER] [CLASS] CholeskySolver   [TYPE]  double[][] data  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  double numericalZero  res  sum  [TYPE]  int i 
[REPLACE]^return numericalZero;^218^^^^^205^219^[REPLACE] return res;^[METHOD] getDeterminant [TYPE] double [PARAMETER] [CLASS] CholeskySolver   [TYPE]  double[][] data  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  double numericalZero  res  sum  [TYPE]  int i 
