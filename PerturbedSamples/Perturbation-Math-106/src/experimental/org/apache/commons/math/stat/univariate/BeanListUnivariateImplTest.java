[REPLACE]^private double one  = null ;^36^^^^^^^[REPLACE] private double one = 1;^ [CLASS] BeanListUnivariateImplTest VitalStats Patient  
[REPLACE]^private float two  = null ;^37^^^^^^^[REPLACE] private float two = 2;^ [CLASS] BeanListUnivariateImplTest VitalStats Patient  
[REPLACE]^private int three  = null ;^38^^^^^^^[REPLACE] private int three = 3;^ [CLASS] BeanListUnivariateImplTest VitalStats Patient  
[REPLACE]^private double mean  = null ;^39^^^^^^^[REPLACE] private double mean = 2;^ [CLASS] BeanListUnivariateImplTest VitalStats Patient  
[REPLACE]^private double sumSq ;^40^^^^^^^[REPLACE] private double sumSq = 18;^ [CLASS] BeanListUnivariateImplTest VitalStats Patient  
[REPLACE]^private double sum  = null ;^41^^^^^^^[REPLACE] private double sum = 8;^ [CLASS] BeanListUnivariateImplTest VitalStats Patient  
[REPLACE]^private double var  = null ;^42^^^^^^^[REPLACE] private double var = 0.666666666666666666667;^ [CLASS] BeanListUnivariateImplTest VitalStats Patient  
[REPLACE]^private double std  = null ;^43^^^^^^^[REPLACE] private double std = Math.sqrt ( var ) ;^ [CLASS] BeanListUnivariateImplTest VitalStats Patient  
[REPLACE]^private float n = 4;^44^^^^^^^[REPLACE] private double n = 4;^ [CLASS] BeanListUnivariateImplTest VitalStats Patient  
[REPLACE]^private double min  = null ;^45^^^^^^^[REPLACE] private double min = 1;^ [CLASS] BeanListUnivariateImplTest VitalStats Patient  
[REPLACE]^private double max  = null ;^46^^^^^^^[REPLACE] private double max = 3;^ [CLASS] BeanListUnivariateImplTest VitalStats Patient  
[REPLACE]^private float skewness = 0;^47^^^^^^^[REPLACE] private double skewness = 0;^ [CLASS] BeanListUnivariateImplTest VitalStats Patient  
[REPLACE]^private double kurtosis  = null ;^48^^^^^^^[REPLACE] private double kurtosis = 0.5;^ [CLASS] BeanListUnivariateImplTest VitalStats Patient  
[REPLACE]^private double tolerance  = null ;^49^^^^^^^[REPLACE] private double tolerance = 10E-15;^ [CLASS] BeanListUnivariateImplTest VitalStats Patient  
[REPLACE]^private List patientList ;^52^^^^^^^[REPLACE] private List patientList = null;^ [CLASS] BeanListUnivariateImplTest VitalStats Patient  
[REPLACE]^u.setPropertyName ( expected ) ;^55^^^^^54^56^[REPLACE] super ( name ) ;^[METHOD] <init> [TYPE] String) [PARAMETER] String name [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  boolean false  true  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  [TYPE]  List patientList  [TYPE]  String name  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^setHeartRate (  temperature  ) ;^176^^^^^175^178^[REPLACE] setHeartRate (  heartrate  ) ;^[METHOD] <init> [TYPE] Double) [PARAMETER] Double heartrate Double temperature [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  boolean false  true  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^setTemperature (  heartrate  ) ;^177^^^^^175^178^[REPLACE] setTemperature (  temperature  ) ;^[METHOD] <init> [TYPE] Double) [PARAMETER] Double heartrate Double temperature [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  boolean false  true  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^suite.setName ( "Frequency Tests" ) ;^206^^^^^205^208^[REPLACE] setVitalStats (  vitalStats  ) ;^[METHOD] <init> [TYPE] Integer) [PARAMETER] VitalStats vitalStats Integer age [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  boolean false  true  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^heartU.getMax (  ) , 0.001  ) ;^207^^^^^205^208^[REPLACE] setAge (  age  ) ;^[METHOD] <init> [TYPE] Integer) [PARAMETER] VitalStats vitalStats Integer age [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  boolean false  true  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^patientList ;^59^^^^^58^78^[REPLACE] patientList = new ArrayList (  ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  boolean false  true  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  Patient p1  p2  p3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^VitalStats vs1 = new VitalStats (  new Double ( 3.0d ) , new Double ( 96.4 )   ) ;^62^63^^^^58^78^[REPLACE] VitalStats vs1 = new VitalStats (  new Double ( 120.0 ) , new Double ( 96.4 )   ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  boolean false  true  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  Patient p1  p2  p3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[ADD]^^62^63^^^^58^78^[ADD] VitalStats vs1 = new VitalStats (  new Double ( 120.0 ) , new Double ( 96.4 )   ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  boolean false  true  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  Patient p1  p2  p3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^Patient p1 = new Patient (  vs1, new Integer (  35L  )   ) ;^64^^^^^58^78^[REPLACE] Patient p1 = new Patient (  vs1, new Integer (  35  )   ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  boolean false  true  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  Patient p1  p2  p3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^patient   p1    ;^65^^^^^58^78^[REPLACE] patientList.add (  p1  ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  boolean false  true  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  Patient p1  p2  p3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[ADD]^^65^^^^^58^78^[ADD] patientList.add (  p1  ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  boolean false  true  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  Patient p1  p2  p3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^VitalStats vs2 = new VitalStats (  new Double ( 0.0d ) , new Double ( 97.4 )   ) ;^68^69^^^^58^78^[REPLACE] VitalStats vs2 = new VitalStats (  new Double ( 70.0 ) , new Double ( 97.4 )   ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  boolean false  true  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  Patient p1  p2  p3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^Patient p2 = new Patient (  vs2, new Integer (  23 - 4  )   ) ;^70^^^^^58^78^[REPLACE] Patient p2 = new Patient (  vs2, new Integer (  23  )   ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  boolean false  true  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  Patient p1  p2  p3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^patient   p3    ;^71^^^^^58^78^[REPLACE] patientList.add (  p2  ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  boolean false  true  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  Patient p1  p2  p3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^VitalStats vs3 = new VitalStats (  new Double ( 3.0d ) , new Double ( 98.6 )   ) ;^74^75^^^^58^78^[REPLACE] VitalStats vs3 = new VitalStats (  new Double ( 90.0 ) , new Double ( 98.6 )   ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  boolean false  true  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  Patient p1  p2  p3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^Patient p3 = new Patient (  vs2, new Integer (  15  )   ) ;^76^^^^^58^78^[REPLACE] Patient p3 = new Patient (  vs3, new Integer (  42  )   ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  boolean false  true  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  Patient p1  p2  p3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^patientList.add (  p2  ) ;^77^^^^^58^78^[REPLACE] patientList.add (  p3  ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  boolean false  true  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  Patient p1  p2  p3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^DescriptiveStatistics heartU = new BeanListUnivariateImpl (  patientList, "vitalStats.heartRate"  ) ;^81^^^^^80^84^[REPLACE] TestSuite suite = new TestSuite ( BeanListUnivariateImplTest.class ) ;^[METHOD] suite [TYPE] Test [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  boolean false  true  [TYPE]  TestSuite suite  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^suite.TestSuite ( "Frequency Tests" ) ;^82^^^^^80^84^[REPLACE] suite.setName ( "Frequency Tests" ) ;^[METHOD] suite [TYPE] Test [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  boolean false  true  [TYPE]  TestSuite suite  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^return (  vitalStats  ) ;^83^^^^^80^84^[REPLACE] return suite;^[METHOD] suite [TYPE] Test [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  boolean false  true  [TYPE]  TestSuite suite  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^DescriptiveStatistics ageU = new BeanListUnivariateImpl (  patientList, "age"  ) ;^88^^^^^87^97^[REPLACE] DescriptiveStatistics u = new BeanListUnivariateImpl (  patientList, "age"  ) ;^[METHOD] testStats [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^double[] values = {35d, 23d, 42d, 10d};^89^^^^^87^97^[REPLACE] double[] values = {35d, 23d, 42d};^[METHOD] testStats [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals ( "total count",3,u .getMin (  )  ,tolerance ) ;^90^^^^^87^97^[REPLACE] assertEquals ( "total count",3,u.getN (  ) ,tolerance ) ;^[METHOD] testStats [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals ( "total count",3,u.getMin (  ) ,tolerance ) ;^90^^^^^87^97^[REPLACE] assertEquals ( "total count",3,u.getN (  ) ,tolerance ) ;^[METHOD] testStats [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals ( "mean", StatUtils.mean ( values ) , u.getMin (  ) , tolerance ) ;^91^^^^^87^97^[REPLACE] assertEquals ( "mean", StatUtils.mean ( values ) , u.getMean (  ) , tolerance ) ;^[METHOD] testStats [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals ( .min", StatUtils.mean ( values ) , u.getMean (  ) , tolerance ) ;^91^^^^^87^97^[REPLACE] assertEquals ( "mean", StatUtils.mean ( values ) , u.getMean (  ) , tolerance ) ;^[METHOD] testStats [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals ( "min", StatUtils.min ( values ) , u.getMean (  ) , tolerance ) ;^92^^^^^87^97^[REPLACE] assertEquals ( "min", StatUtils.min ( values ) , u.getMin (  ) , tolerance ) ;^[METHOD] testStats [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals ( .mean", StatUtils.min ( values ) , u.getMin (  ) , tolerance ) ;^92^^^^^87^97^[REPLACE] assertEquals ( "min", StatUtils.min ( values ) , u.getMin (  ) , tolerance ) ;^[METHOD] testStats [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals ( .mean", StatUtils.max ( values ) , u.getMax (  ) , tolerance ) ;^93^^^^^87^97^[REPLACE] assertEquals ( "max", StatUtils.max ( values ) , u.getMax (  ) , tolerance ) ;^[METHOD] testStats [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals ( "max", StatUtils .mean ( values )  , u.getMax (  ) , tolerance ) ;^93^^^^^87^97^[REPLACE] assertEquals ( "max", StatUtils.max ( values ) , u.getMax (  ) , tolerance ) ;^[METHOD] testStats [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals ( "max", StatUtils.max ( values ) , u .getMean (  )  , tolerance ) ;^93^^^^^87^97^[REPLACE] assertEquals ( "max", StatUtils.max ( values ) , u.getMax (  ) , tolerance ) ;^[METHOD] testStats [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals ( "var", StatUtils.variance ( values ) , u .getMean (  )  , tolerance ) ;^94^^^^^87^97^[REPLACE] assertEquals ( "var", StatUtils.variance ( values ) , u.getVariance (  ) , tolerance ) ;^[METHOD] testStats [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals ( "var", StatUtils.mean ( values ) , u.getVariance (  ) , tolerance ) ;^94^^^^^87^97^[REPLACE] assertEquals ( "var", StatUtils.variance ( values ) , u.getVariance (  ) , tolerance ) ;^[METHOD] testStats [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[ADD]^^94^95^^^^87^97^[ADD] assertEquals ( "var", StatUtils.variance ( values ) , u.getVariance (  ) , tolerance ) ; u.clear (  ) ;^[METHOD] testStats [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals ( "var", StatUtils.variance ( values ) , u.getMean (  ) , tolerance ) ;^94^^^^^87^97^[REPLACE] assertEquals ( "var", StatUtils.variance ( values ) , u.getVariance (  ) , tolerance ) ;^[METHOD] testStats [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^u.getN (  ) ;^95^^^^^87^97^[REPLACE] u.clear (  ) ;^[METHOD] testStats [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[ADD]^^95^^^^^87^97^[ADD] u.clear (  ) ;^[METHOD] testStats [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals ( "total count",0,u .getMin (  )  ,tolerance ) ;^96^^^^^87^97^[REPLACE] assertEquals ( "total count",0,u.getN (  ) ,tolerance ) ;^[METHOD] testStats [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[ADD]^^96^^^^^87^97^[ADD] assertEquals ( "total count",0,u.getN (  ) ,tolerance ) ;^[METHOD] testStats [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals ( "total count",0,u.getMin (  ) ,tolerance ) ;^96^^^^^87^97^[REPLACE] assertEquals ( "total count",0,u.getN (  ) ,tolerance ) ;^[METHOD] testStats [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals (  "Mean heart rate unexpected", 93.333, ageU.getMean (  ) , 0.001  ) ;^104^105^^^^99^117^[REPLACE] assertEquals (  "Mean heart rate unexpected", 93.333, heartU.getMean (  ) , 0.001  ) ;^[METHOD] testPropStats [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics ageU  heartU  [TYPE]  boolean false  true  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^heartU.getMin (  ) , 0.001  ) ;^105^^^^^99^117^[REPLACE] heartU.getMean (  ) , 0.001  ) ;^[METHOD] testPropStats [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics ageU  heartU  [TYPE]  boolean false  true  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals (  "Max heart rate unexpected", 120.0, ageU.getMax (  ) , 0.001  ) ;^106^107^^^^99^117^[REPLACE] assertEquals (  "Max heart rate unexpected", 120.0, heartU.getMax (  ) , 0.001  ) ;^[METHOD] testPropStats [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics ageU  heartU  [TYPE]  boolean false  true  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^heartU .getMean (  )  , 0.001  ) ;^107^^^^^99^117^[REPLACE] heartU.getMax (  ) , 0.001  ) ;^[METHOD] testPropStats [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics ageU  heartU  [TYPE]  boolean false  true  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals (  "Mean age unexpected", 33.333, heartU.getMean (  ) , 0.001  ) ;^112^113^^^^99^117^[REPLACE] assertEquals (  "Mean age unexpected", 33.333, ageU.getMean (  ) , 0.001  ) ;^[METHOD] testPropStats [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics ageU  heartU  [TYPE]  boolean false  true  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[ADD]^^112^113^^^^99^117^[ADD] assertEquals (  "Mean age unexpected", 33.333, ageU.getMean (  ) , 0.001  ) ;^[METHOD] testPropStats [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics ageU  heartU  [TYPE]  boolean false  true  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^ageU.getMin (  ) , 0.001  ) ;^113^^^^^99^117^[REPLACE] ageU.getMean (  ) , 0.001  ) ;^[METHOD] testPropStats [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics ageU  heartU  [TYPE]  boolean false  true  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals (  "Max age unexpected", 42.0, heartU.getMax (  ) , 0.001  ) ;^114^115^^^^99^117^[REPLACE] assertEquals (  "Max age unexpected", 42.0, ageU.getMax (  ) , 0.001  ) ;^[METHOD] testPropStats [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics ageU  heartU  [TYPE]  boolean false  true  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^ageU.getMean (  ) , 0.001  ) ;^115^^^^^99^117^[REPLACE] ageU.getMax (  ) , 0.001  ) ;^[METHOD] testPropStats [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics ageU  heartU  [TYPE]  boolean false  true  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^BeanListUnivariateImpl u = new BeanListUnivariateImpl ( true ) ;^120^^^^^119^124^[REPLACE] BeanListUnivariateImpl u = new BeanListUnivariateImpl ( null ) ;^[METHOD] testSetPropertyName [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  boolean false  true  [TYPE]  BeanListUnivariateImpl u  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  String expected  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^DescriptiveStatistics heartU = new BeanListUnivariateImpl (  patientList, "vitalStats.heartRate"  ) ;^121^^^^^119^124^[REPLACE] String expected = "property";^[METHOD] testSetPropertyName [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  boolean false  true  [TYPE]  BeanListUnivariateImpl u  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  String expected  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^u.BeanListUnivariateImpl ( expected ) ;^122^^^^^119^124^[REPLACE] u.setPropertyName ( expected ) ;^[METHOD] testSetPropertyName [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  boolean false  true  [TYPE]  BeanListUnivariateImpl u  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  String expected  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals ( expected, u .setPropertyName ( expected )   ) ;^123^^^^^119^124^[REPLACE] assertEquals ( expected, u.getPropertyName (  )  ) ;^[METHOD] testSetPropertyName [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  boolean false  true  [TYPE]  BeanListUnivariateImpl u  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  String expected  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[ADD]^^123^^^^^119^124^[ADD] assertEquals ( expected, u.getPropertyName (  )  ) ;^[METHOD] testSetPropertyName [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  boolean false  true  [TYPE]  BeanListUnivariateImpl u  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  String expected  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REMOVE]^assertEquals ( "max", StatUtils.max ( values ) , u2.getMax (  ) , tolerance ) ;^123^^^^^119^124^[REMOVE] ^[METHOD] testSetPropertyName [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  boolean false  true  [TYPE]  BeanListUnivariateImpl u  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  String expected  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^DescriptiveStatistics ageU = new BeanListUnivariateImpl (  patientList, "age"  ) ;^127^^^^^126^137^[REPLACE] DescriptiveStatistics u = new BeanListUnivariateImpl (  patientList, "age"  ) ;^[METHOD] testAddValue [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^u.addValue ( 3 ) ;^128^^^^^126^137^[REPLACE] u.addValue ( 10 ) ;^[METHOD] testAddValue [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^double[] values = {35d, 23d, 42d};^129^^^^^126^137^[REPLACE] double[] values = {35d, 23d, 42d, 10d};^[METHOD] testAddValue [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals ( "total count",4,u.getMin (  ) ,tolerance ) ;^130^^^^^126^137^[REPLACE] assertEquals ( "total count",4,u.getN (  ) ,tolerance ) ;^[METHOD] testAddValue [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals ( "max", StatUtils.max ( values ) , u2.getMax (  ) , tolerance ) ;^131^^^^^126^137^[REPLACE] assertEquals ( "mean", StatUtils.mean ( values ) , u.getMean (  ) , tolerance ) ;^[METHOD] testAddValue [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[ADD]^^131^^^^^126^137^[ADD] assertEquals ( "mean", StatUtils.mean ( values ) , u.getMean (  ) , tolerance ) ;^[METHOD] testAddValue [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals ( .min", StatUtils.mean ( values ) , u.getMean (  ) , tolerance ) ;^131^^^^^126^137^[REPLACE] assertEquals ( "mean", StatUtils.mean ( values ) , u.getMean (  ) , tolerance ) ;^[METHOD] testAddValue [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals ( "mean", StatUtils.mean ( values ) , u.getMin (  ) , tolerance ) ;^131^^^^^126^137^[REPLACE] assertEquals ( "mean", StatUtils.mean ( values ) , u.getMean (  ) , tolerance ) ;^[METHOD] testAddValue [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals ( "min", StatUtils .mean ( values )  , u.getMin (  ) , tolerance ) ;^132^^^^^126^137^[REPLACE] assertEquals ( "min", StatUtils.min ( values ) , u.getMin (  ) , tolerance ) ;^[METHOD] testAddValue [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[ADD]^^132^^^^^126^137^[ADD] assertEquals ( "min", StatUtils.min ( values ) , u.getMin (  ) , tolerance ) ;^[METHOD] testAddValue [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals ( .mean", StatUtils.min ( values ) , u.getMin (  ) , tolerance ) ;^132^^^^^126^137^[REPLACE] assertEquals ( "min", StatUtils.min ( values ) , u.getMin (  ) , tolerance ) ;^[METHOD] testAddValue [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[ADD]^^132^133^^^^126^137^[ADD] assertEquals ( "min", StatUtils.min ( values ) , u.getMin (  ) , tolerance ) ; assertEquals ( "max", StatUtils.max ( values ) , u.getMax (  ) , tolerance ) ;^[METHOD] testAddValue [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals ( "min", StatUtils.min ( values ) , u.getMean (  ) , tolerance ) ;^132^^^^^126^137^[REPLACE] assertEquals ( "min", StatUtils.min ( values ) , u.getMin (  ) , tolerance ) ;^[METHOD] testAddValue [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals ( .mean", StatUtils.max ( values ) , u.getMax (  ) , tolerance ) ;^133^^^^^126^137^[REPLACE] assertEquals ( "max", StatUtils.max ( values ) , u.getMax (  ) , tolerance ) ;^[METHOD] testAddValue [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals ( "max", StatUtils.max ( values ) , u.getMean (  ) , tolerance ) ;^133^^^^^126^137^[REPLACE] assertEquals ( "max", StatUtils.max ( values ) , u.getMax (  ) , tolerance ) ;^[METHOD] testAddValue [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REMOVE]^assertEquals ( "max", StatUtils.max ( values ) , u2.getMax (  ) , tolerance ) ;^133^^^^^126^137^[REMOVE] ^[METHOD] testAddValue [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals ( "var", StatUtils.variance ( values ) , u2.getVariance (  ) , tolerance ) ;^134^^^^^126^137^[REPLACE] assertEquals ( "var", StatUtils.variance ( values ) , u.getVariance (  ) , tolerance ) ;^[METHOD] testAddValue [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals ( "var", StatUtils.mean ( values ) , u.getVariance (  ) , tolerance ) ;^134^^^^^126^137^[REPLACE] assertEquals ( "var", StatUtils.variance ( values ) , u.getVariance (  ) , tolerance ) ;^[METHOD] testAddValue [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[ADD]^^134^^^^^126^137^[ADD] assertEquals ( "var", StatUtils.variance ( values ) , u.getVariance (  ) , tolerance ) ;^[METHOD] testAddValue [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals ( "var", StatUtils.variance ( values ) , u.getMean (  ) , tolerance ) ;^134^^^^^126^137^[REPLACE] assertEquals ( "var", StatUtils.variance ( values ) , u.getVariance (  ) , tolerance ) ;^[METHOD] testAddValue [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^u.getN (  ) ;^135^^^^^126^137^[REPLACE] u.clear (  ) ;^[METHOD] testAddValue [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REMOVE]^heartU.getMax (  ) , 0.001  ) ;^135^^^^^126^137^[REMOVE] ^[METHOD] testAddValue [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals ( "total count",3,u2.getN (  ) ,tolerance ) ;^136^^^^^126^137^[REPLACE] assertEquals ( "total count",0,u.getN (  ) ,tolerance ) ;^[METHOD] testAddValue [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals ( "total count",0,u.getMin (  ) ,tolerance ) ;^136^^^^^126^137^[REPLACE] assertEquals ( "total count",0,u.getN (  ) ,tolerance ) ;^[METHOD] testAddValue [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[ADD]^^136^^^^^126^137^[ADD] assertEquals ( "total count",0,u.getN (  ) ,tolerance ) ;^[METHOD] testAddValue [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^double[] values = {35d, 23d, 42d, 10d};^142^^^^^140^165^[REPLACE] double[] values = {35d, 23d, 42d};^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[ADD]^^142^^^^^140^165^[ADD] double[] values = {35d, 23d, 42d};^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^DescriptiveStatistics ageU = new BeanListUnivariateImpl (  patientList, "age"  ) ;^144^^^^^140^165^[REPLACE] DescriptiveStatistics u = new BeanListUnivariateImpl (  patientList, "age"  ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals ( "total count",3,u2.getN (  ) ,tolerance ) ;^145^^^^^140^165^[REPLACE] assertEquals ( "total count",3,u.getN (  ) ,tolerance ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals ( "total count",3,u.getMin (  ) ,tolerance ) ;^145^^^^^140^165^[REPLACE] assertEquals ( "total count",3,u.getN (  ) ,tolerance ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals ( "mean", StatUtils.mean ( values ) , u2.getMean (  ) , tolerance ) ;^146^^^^^140^165^[REPLACE] assertEquals ( "mean", StatUtils.mean ( values ) , u.getMean (  ) , tolerance ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[ADD]^^146^^^^^140^165^[ADD] assertEquals ( "mean", StatUtils.mean ( values ) , u.getMean (  ) , tolerance ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals ( .min", StatUtils.mean ( values ) , u.getMean (  ) , tolerance ) ;^146^^^^^140^165^[REPLACE] assertEquals ( "mean", StatUtils.mean ( values ) , u.getMean (  ) , tolerance ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[ADD]^^146^147^^^^140^165^[ADD] assertEquals ( "mean", StatUtils.mean ( values ) , u.getMean (  ) , tolerance ) ; assertEquals ( "min", StatUtils.min ( values ) , u.getMin (  ) , tolerance ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals ( "mean", StatUtils.mean ( values ) , u2.getMin (  ) , tolerance ) ;^146^^^^^140^165^[REPLACE] assertEquals ( "mean", StatUtils.mean ( values ) , u.getMean (  ) , tolerance ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[ADD]^assertEquals ( "min", StatUtils.min ( values ) , u.getMin (  ) , tolerance ) ;^146^147^^^^140^165^[ADD] assertEquals ( "mean", StatUtils.mean ( values ) , u.getMean (  ) , tolerance ) ; assertEquals ( "min", StatUtils.min ( values ) , u.getMin (  ) , tolerance ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals ( "min", StatUtils.min ( values ) , u2.getMin (  ) , tolerance ) ;^147^^^^^140^165^[REPLACE] assertEquals ( "min", StatUtils.min ( values ) , u.getMin (  ) , tolerance ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals ( .mean", StatUtils.min ( values ) , u.getMin (  ) , tolerance ) ;^147^^^^^140^165^[REPLACE] assertEquals ( "min", StatUtils.min ( values ) , u.getMin (  ) , tolerance ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals ( "min", StatUtils.min ( values ) , u2 .getMean (  )  , tolerance ) ;^147^^^^^140^165^[REPLACE] assertEquals ( "min", StatUtils.min ( values ) , u.getMin (  ) , tolerance ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals ( "max", StatUtils.max ( values ) , u .getMean (  )  , tolerance ) ;^148^^^^^140^165^[REPLACE] assertEquals ( "max", StatUtils.max ( values ) , u.getMax (  ) , tolerance ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REMOVE]^assertEquals ( "max", StatUtils.max ( values ) , u2.getMax (  ) , tolerance ) ;^148^^^^^140^165^[REMOVE] ^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals ( .mean", StatUtils.max ( values ) , u.getMax (  ) , tolerance ) ;^148^^^^^140^165^[REPLACE] assertEquals ( "max", StatUtils.max ( values ) , u.getMax (  ) , tolerance ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals ( "max", StatUtils.max ( values ) , u2.getMax (  ) , tolerance ) ;^148^^^^^140^165^[REPLACE] assertEquals ( "max", StatUtils.max ( values ) , u.getMax (  ) , tolerance ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals ( "var", StatUtils.variance ( values ) , u2.getVariance (  ) , tolerance ) ;^149^^^^^140^165^[REPLACE] assertEquals ( "var", StatUtils.variance ( values ) , u.getVariance (  ) , tolerance ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals ( "var", StatUtils.mean ( values ) , u.getVariance (  ) , tolerance ) ;^149^^^^^140^165^[REPLACE] assertEquals ( "var", StatUtils.variance ( values ) , u.getVariance (  ) , tolerance ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^DescriptiveStatistics u22 =  ( DescriptiveStatistics ) TestUtils.serializeAndRecover ( u ) ;^152^^^^^140^165^[REPLACE] DescriptiveStatistics u2 =  ( DescriptiveStatistics ) TestUtils.serializeAndRecover ( u ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[ADD]^^152^153^^^^140^165^[ADD] DescriptiveStatistics u2 =  ( DescriptiveStatistics ) TestUtils.serializeAndRecover ( u ) ; assertEquals ( "total count",3,u2.getN (  ) ,tolerance ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals ( "total count",0,u2.getN (  ) ,tolerance ) ;^153^^^^^140^165^[REPLACE] assertEquals ( "total count",3,u2.getN (  ) ,tolerance ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals ( "total count",3,u2.getMin (  ) ,tolerance ) ;^153^^^^^140^165^[REPLACE] assertEquals ( "total count",3,u2.getN (  ) ,tolerance ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals ( "mean", StatUtils.mean ( values ) , u.getMean (  ) , tolerance ) ;^154^^^^^140^165^[REPLACE] assertEquals ( "mean", StatUtils.mean ( values ) , u2.getMean (  ) , tolerance ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals ( "mean", StatUtils .min ( values )  , u2.getMean (  ) , tolerance ) ;^154^^^^^140^165^[REPLACE] assertEquals ( "mean", StatUtils.mean ( values ) , u2.getMean (  ) , tolerance ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[ADD]^^154^155^^^^140^165^[ADD] assertEquals ( "mean", StatUtils.mean ( values ) , u2.getMean (  ) , tolerance ) ; assertEquals ( "min", StatUtils.min ( values ) , u2.getMin (  ) , tolerance ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals ( "min", StatUtils.min ( values ) , u.getMin (  ) , tolerance ) ;^155^^^^^140^165^[REPLACE] assertEquals ( "min", StatUtils.min ( values ) , u2.getMin (  ) , tolerance ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals ( "min", StatUtils .mean ( values )  , u2.getMin (  ) , tolerance ) ;^155^^^^^140^165^[REPLACE] assertEquals ( "min", StatUtils.min ( values ) , u2.getMin (  ) , tolerance ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[ADD]^^155^156^^^^140^165^[ADD] assertEquals ( "min", StatUtils.min ( values ) , u2.getMin (  ) , tolerance ) ; assertEquals ( "max", StatUtils.max ( values ) , u2.getMax (  ) , tolerance ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[ADD]^^155^^^^^140^165^[ADD] assertEquals ( "min", StatUtils.min ( values ) , u2.getMin (  ) , tolerance ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals ( "max", StatUtils.max ( values ) , u .getMean (  )  , tolerance ) ;^156^^^^^140^165^[REPLACE] assertEquals ( "max", StatUtils.max ( values ) , u2.getMax (  ) , tolerance ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals ( "max", StatUtils .mean ( values )  , u2.getMax (  ) , tolerance ) ;^156^^^^^140^165^[REPLACE] assertEquals ( "max", StatUtils.max ( values ) , u2.getMax (  ) , tolerance ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals ( "max", StatUtils.max ( values ) , u.getMean (  ) , tolerance ) ;^156^^^^^140^165^[REPLACE] assertEquals ( "max", StatUtils.max ( values ) , u2.getMax (  ) , tolerance ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals ( "var", StatUtils.variance ( values ) , u.getVariance (  ) , tolerance ) ;^157^^^^^140^165^[REPLACE] assertEquals ( "var", StatUtils.variance ( values ) , u2.getVariance (  ) , tolerance ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals ( "var", StatUtils .mean ( values )  , u2.getVariance (  ) , tolerance ) ;^157^^^^^140^165^[REPLACE] assertEquals ( "var", StatUtils.variance ( values ) , u2.getVariance (  ) , tolerance ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals ( "var", StatUtils.variance ( values ) , u.getMean (  ) , tolerance ) ;^157^^^^^140^165^[REPLACE] assertEquals ( "var", StatUtils.variance ( values ) , u2.getVariance (  ) , tolerance ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^u .getMean (  )  ;^159^^^^^140^165^[REPLACE] u.clear (  ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals ( "total count",3,u2.getN (  ) ,tolerance ) ;^160^^^^^140^165^[REPLACE] assertEquals ( "total count",0,u.getN (  ) ,tolerance ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals ( "total count",0,u .getMin (  )  ,tolerance ) ;^160^^^^^140^165^[REPLACE] assertEquals ( "total count",0,u.getN (  ) ,tolerance ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^u2 .getMean (  )  ;^162^^^^^140^165^[REPLACE] u2.clear (  ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[ADD]^^162^163^^^^140^165^[ADD] u2.clear (  ) ; assertEquals ( "total count",0,u2.getN (  ) ,tolerance ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals ( "total count",3,u2.getN (  ) ,tolerance ) ;^163^^^^^140^165^[REPLACE] assertEquals ( "total count",0,u2.getN (  ) ,tolerance ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^assertEquals ( "total count",0,u2 .getMin (  )  ,tolerance ) ;^163^^^^^140^165^[REPLACE] assertEquals ( "total count",0,u2.getN (  ) ,tolerance ) ;^[METHOD] testSerialization [TYPE] void [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  DescriptiveStatistics u  u2  [TYPE]  boolean false  true  [TYPE]  double[] values  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^return suite;^181^^^^^180^182^[REPLACE] return heartrate;^[METHOD] getHeartRate [TYPE] Double [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  boolean false  true  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^this.heartrate =  temperature;^185^^^^^184^186^[REPLACE] this.heartrate = heartrate;^[METHOD] setHeartRate [TYPE] void [PARAMETER] Double heartrate [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  boolean false  true  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[ADD]^^185^^^^^184^186^[ADD] this.heartrate = heartrate;^[METHOD] setHeartRate [TYPE] void [PARAMETER] Double heartrate [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  boolean false  true  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^return suite;^189^^^^^188^190^[REPLACE] return temperature;^[METHOD] getTemperature [TYPE] Double [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  boolean false  true  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^this.temperature =  heartrate;^193^^^^^192^194^[REPLACE] this.temperature = temperature;^[METHOD] setTemperature [TYPE] void [PARAMETER] Double temperature [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  boolean false  true  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[ADD]^^193^^^^^192^194^[ADD] this.temperature = temperature;^[METHOD] setTemperature [TYPE] void [PARAMETER] Double temperature [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  boolean false  true  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^return suite;^211^^^^^210^212^[REPLACE] return (  vitalStats  ) ;^[METHOD] getVitalStats [TYPE] BeanListUnivariateImplTest$VitalStats [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  boolean false  true  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^this.vitalStats =  vs3;^215^^^^^214^216^[REPLACE] this.vitalStats = vitalStats;^[METHOD] setVitalStats [TYPE] void [PARAMETER] VitalStats vitalStats [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  boolean false  true  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^return suite;^219^^^^^218^220^[REPLACE] return age;^[METHOD] getAge [TYPE] Integer [PARAMETER] [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  boolean false  true  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^this.age =  null;^223^^^^^222^224^[REPLACE] this.age = age;^[METHOD] setAge [TYPE] void [PARAMETER] Integer age [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  boolean false  true  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[ADD]^^223^^^^^222^224^[ADD] this.age = age;^[METHOD] setAge [TYPE] void [PARAMETER] Integer age [CLASS] BeanListUnivariateImplTest VitalStats Patient   [TYPE]  Integer age  [TYPE]  boolean false  true  [TYPE]  double kurtosis  max  mean  min  n  one  skewness  std  sum  sumSq  tolerance  var  [TYPE]  VitalStats vitalStats  vs1  vs2  vs3  [TYPE]  List patientList  [TYPE]  float two  [TYPE]  Double heartrate  temperature  [TYPE]  int three 
[REPLACE]^setHeartRate (  temperature  ) ;^176^^^^^175^178^[REPLACE] setHeartRate (  heartrate  ) ;^[METHOD] <init> [TYPE] Double) [PARAMETER] Double heartrate Double temperature [CLASS] VitalStats   [TYPE]  Double heartrate  temperature  [TYPE]  boolean false  true 
[ADD]^^176^^^^^175^178^[ADD] setHeartRate (  heartrate  ) ;^[METHOD] <init> [TYPE] Double) [PARAMETER] Double heartrate Double temperature [CLASS] VitalStats   [TYPE]  Double heartrate  temperature  [TYPE]  boolean false  true 
[REPLACE]^setTemperature (  heartrate  ) ;^177^^^^^175^178^[REPLACE] setTemperature (  temperature  ) ;^[METHOD] <init> [TYPE] Double) [PARAMETER] Double heartrate Double temperature [CLASS] VitalStats   [TYPE]  Double heartrate  temperature  [TYPE]  boolean false  true 
[REPLACE]^return temperature;^181^^^^^180^182^[REPLACE] return heartrate;^[METHOD] getHeartRate [TYPE] Double [PARAMETER] [CLASS] VitalStats   [TYPE]  Double heartrate  temperature  [TYPE]  boolean false  true 
[REPLACE]^this.heartrate =  temperature;^185^^^^^184^186^[REPLACE] this.heartrate = heartrate;^[METHOD] setHeartRate [TYPE] void [PARAMETER] Double heartrate [CLASS] VitalStats   [TYPE]  Double heartrate  temperature  [TYPE]  boolean false  true 
[REPLACE]^return heartrate;^189^^^^^188^190^[REPLACE] return temperature;^[METHOD] getTemperature [TYPE] Double [PARAMETER] [CLASS] VitalStats   [TYPE]  Double heartrate  temperature  [TYPE]  boolean false  true 
[REPLACE]^this.temperature =  heartrate;^193^^^^^192^194^[REPLACE] this.temperature = temperature;^[METHOD] setTemperature [TYPE] void [PARAMETER] Double temperature [CLASS] VitalStats   [TYPE]  Double heartrate  temperature  [TYPE]  boolean false  true 
[REPLACE]^setAge (  age  ) ;^206^^^^^205^208^[REPLACE] setVitalStats (  vitalStats  ) ;^[METHOD] <init> [TYPE] Integer) [PARAMETER] VitalStats vitalStats Integer age [CLASS] Patient   [TYPE]  Integer age  [TYPE]  VitalStats vitalStats  [TYPE]  boolean false  true 
[REPLACE]^setVitalStats (  vitalStats  ) ;^207^^^^^205^208^[REPLACE] setAge (  age  ) ;^[METHOD] <init> [TYPE] Integer) [PARAMETER] VitalStats vitalStats Integer age [CLASS] Patient   [TYPE]  Integer age  [TYPE]  VitalStats vitalStats  [TYPE]  boolean false  true 
[REPLACE]^return age;^211^^^^^210^212^[REPLACE] return (  vitalStats  ) ;^[METHOD] getVitalStats [TYPE] BeanListUnivariateImplTest$VitalStats [PARAMETER] [CLASS] Patient   [TYPE]  Integer age  [TYPE]  VitalStats vitalStats  [TYPE]  boolean false  true 
[REPLACE]^this.vitalStats =  null;^215^^^^^214^216^[REPLACE] this.vitalStats = vitalStats;^[METHOD] setVitalStats [TYPE] void [PARAMETER] VitalStats vitalStats [CLASS] Patient   [TYPE]  Integer age  [TYPE]  VitalStats vitalStats  [TYPE]  boolean false  true 
[REPLACE]^return (  vitalStats  ) ;^219^^^^^218^220^[REPLACE] return age;^[METHOD] getAge [TYPE] Integer [PARAMETER] [CLASS] Patient   [TYPE]  Integer age  [TYPE]  VitalStats vitalStats  [TYPE]  boolean false  true 
[REPLACE]^this.age =  null;^223^^^^^222^224^[REPLACE] this.age = age;^[METHOD] setAge [TYPE] void [PARAMETER] Integer age [CLASS] Patient   [TYPE]  Integer age  [TYPE]  VitalStats vitalStats  [TYPE]  boolean false  true 
[ADD]^^223^^^^^222^224^[ADD] this.age = age;^[METHOD] setAge [TYPE] void [PARAMETER] Integer age [CLASS] Patient   [TYPE]  Integer age  [TYPE]  VitalStats vitalStats  [TYPE]  boolean false  true 
