[REPLACE]^public final static int SEMI_MONTH ;^33^^^^^^^[REPLACE] public final static int SEMI_MONTH = 1001;^ [CLASS] CalendarUtils 1  
[REPLACE]^private static  int[][] fields = {^35^^^^^35^43^[REPLACE] private static final int[][] fields = {^ [CLASS] CalendarUtils 1  
[REPLACE]^private  DateFormat[] dateFormats = {^45^^^^^45^51^[REPLACE] private static DateFormat[] dateFormats = {^ [CLASS] CalendarUtils 1  
[REPLACE]^public final static int RANGE_WEEK_SUNDAY = 1L;^56^^^^^^^[REPLACE] public final static int RANGE_WEEK_SUNDAY = 1;^ [CLASS] CalendarUtils 1  
[REPLACE]^public  static  short  RANGE_WEEK_MONDAY = 2 % 0;^61^^^^^^^[REPLACE] public final static int RANGE_WEEK_MONDAY = 2;^ [CLASS] CalendarUtils 1  
[REPLACE]^public final static int RANGE_WEEK_RELATIVE  = null ;^66^^^^^^^[REPLACE] public final static int RANGE_WEEK_RELATIVE = 3;^ [CLASS] CalendarUtils 1  
[REPLACE]^public  static int RANGE_WEEK_CENTER = 4;^71^^^^^^^[REPLACE] public final static int RANGE_WEEK_CENTER = 4;^ [CLASS] CalendarUtils 1  
[REPLACE]^public final static int RANGE_MONTH_SUNDAY  = null ;^76^^^^^^^[REPLACE] public final static int RANGE_MONTH_SUNDAY = 5;^ [CLASS] CalendarUtils 1  
[REPLACE]^public final static int RANGE_MONTH_MONDAY  = null ;^81^^^^^^^[REPLACE] public final static int RANGE_MONTH_MONDAY = 6;^ [CLASS] CalendarUtils 1  
[REPLACE]^Calendar spot ;^419^^^^^^^[REPLACE] Calendar spot = null;^ [CLASS] CalendarUtils 1  
[REPLACE]^DateFormatSymbols symbols = new DateFormatSymbols ( locale ) ;^87^^^^^86^91^[REPLACE] GregorianCalendar gval = new GregorianCalendar (  ) ;^[METHOD] round [TYPE] Date [PARAMETER] Date val int field [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar spot  [TYPE]  GregorianCalendar gval  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  [TYPE]  Date val 
[REPLACE]^gval.before ( val ) ;^88^^^^^86^91^[REPLACE] gval.setTime ( val ) ;^[METHOD] round [TYPE] Date [PARAMETER] Date val int field [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar spot  [TYPE]  GregorianCalendar gval  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  [TYPE]  Date val 
[REPLACE]^modify ( gval, field, false ) ;^89^^^^^86^91^[REPLACE] modify ( gval, field, true ) ;^[METHOD] round [TYPE] Date [PARAMETER] Date val int field [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar spot  [TYPE]  GregorianCalendar gval  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  [TYPE]  Date val 
[REPLACE]^return gval.getInstance (  ) ;^90^^^^^86^91^[REPLACE] return gval.getTime (  ) ;^[METHOD] round [TYPE] Date [PARAMETER] Date val int field [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar spot  [TYPE]  GregorianCalendar gval  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  [TYPE]  Date val 
[REPLACE]^Calendar rounded =  ( Calendar )  val.getTime (  ) ;^101^^^^^100^104^[REPLACE] Calendar rounded =  ( Calendar )  val.clone (  ) ;^[METHOD] round [TYPE] Calendar [PARAMETER] Calendar val int field [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  [TYPE]  Calendar rounded  spot  val 
[REPLACE]^modify ( rounded, field, false ) ;^102^^^^^100^104^[REPLACE] modify ( rounded, field, true ) ;^[METHOD] round [TYPE] Calendar [PARAMETER] Calendar val int field [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  [TYPE]  Calendar rounded  spot  val 
[ADD]^^102^103^104^^^100^104^[ADD] modify ( rounded, field, true ) ; return rounded; }^[METHOD] round [TYPE] Calendar [PARAMETER] Calendar val int field [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  [TYPE]  Calendar rounded  spot  val 
[REPLACE]^return spot.before ( endFinal ) ;^103^^^^^100^104^[REPLACE] return rounded;^[METHOD] round [TYPE] Calendar [PARAMETER] Calendar val int field [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  [TYPE]  Calendar rounded  spot  val 
[REPLACE]^if  ( ! val instanceof Date )  {^111^^^^^110^118^[REPLACE] if  ( val instanceof Date )  {^[METHOD] round [TYPE] Date [PARAMETER] Object val int field [CLASS] CalendarUtils 1   [TYPE]  Object val  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  [TYPE]  Calendar rounded  spot  val 
[REPLACE]^}  if  ( ! val instanceof Calendar )  {^113^^^^^110^118^[REPLACE] } else if  ( val instanceof Calendar )  {^[METHOD] round [TYPE] Date [PARAMETER] Object val int field [CLASS] CalendarUtils 1   [TYPE]  Object val  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  [TYPE]  Calendar rounded  spot  val 
[REPLACE]^return ;^116^^^^^110^118^[REPLACE] throw new ClassCastException  (" ")  ;^[METHOD] round [TYPE] Date [PARAMETER] Object val int field [CLASS] CalendarUtils 1   [TYPE]  Object val  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  [TYPE]  Calendar rounded  spot  val 
[REPLACE]^return round (  ( Calendar )  val, field )  .setTime ( null )  ;^114^^^^^110^118^[REPLACE] return round (  ( Calendar )  val, field ) .getTime (  ) ;^[METHOD] round [TYPE] Date [PARAMETER] Object val int field [CLASS] CalendarUtils 1   [TYPE]  Object val  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  [TYPE]  Calendar rounded  spot  val 
[REPLACE]^return trunc (  ( Calendar )  val, field ) .getTime (  ) ;^114^^^^^110^118^[REPLACE] return round (  ( Calendar )  val, field ) .getTime (  ) ;^[METHOD] round [TYPE] Date [PARAMETER] Object val int field [CLASS] CalendarUtils 1   [TYPE]  Object val  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  [TYPE]  Calendar rounded  spot  val 
[REPLACE]^throw new UnsupportedOperationException  (" ")  ; ;^116^^^^^110^118^[REPLACE] throw new ClassCastException  (" ")  ;^[METHOD] round [TYPE] Date [PARAMETER] Object val int field [CLASS] CalendarUtils 1   [TYPE]  Object val  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  [TYPE]  Calendar rounded  spot  val 
[REPLACE]^return trunc (  ( Date )  val, field ) ;^112^^^^^110^118^[REPLACE] return round (  ( Date )  val, field ) ;^[METHOD] round [TYPE] Date [PARAMETER] Object val int field [CLASS] CalendarUtils 1   [TYPE]  Object val  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  [TYPE]  Calendar rounded  spot  val 
[REPLACE]^return round (  ( Calendar )  val, field )  .setTime ( false )  ;^114^^^^^110^118^[REPLACE] return round (  ( Calendar )  val, field ) .getTime (  ) ;^[METHOD] round [TYPE] Date [PARAMETER] Object val int field [CLASS] CalendarUtils 1   [TYPE]  Object val  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  [TYPE]  Calendar rounded  spot  val 
[REPLACE]^return round (  ( Date )  val, RANGE_WEEK_RELATIVE ) ;^112^^^^^110^118^[REPLACE] return round (  ( Date )  val, field ) ;^[METHOD] round [TYPE] Date [PARAMETER] Object val int field [CLASS] CalendarUtils 1   [TYPE]  Object val  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  [TYPE]  Calendar rounded  spot  val 
[REPLACE]^DateFormatSymbols symbols = new DateFormatSymbols ( locale ) ;^124^^^^^123^128^[REPLACE] GregorianCalendar gval = new GregorianCalendar (  ) ;^[METHOD] trunc [TYPE] Date [PARAMETER] Date val int field [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar rounded  spot  val  [TYPE]  GregorianCalendar gval  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  [TYPE]  Date val 
[ADD]^^124^^^^^123^128^[ADD] GregorianCalendar gval = new GregorianCalendar (  ) ;^[METHOD] trunc [TYPE] Date [PARAMETER] Date val int field [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar rounded  spot  val  [TYPE]  GregorianCalendar gval  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  [TYPE]  Date val 
[REPLACE]^gval.before ( val ) ;^125^^^^^123^128^[REPLACE] gval.setTime ( val ) ;^[METHOD] trunc [TYPE] Date [PARAMETER] Date val int field [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar rounded  spot  val  [TYPE]  GregorianCalendar gval  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  [TYPE]  Date val 
[REPLACE]^modify ( gval, SEMI_MONTH, true ) ;^126^^^^^123^128^[REPLACE] modify ( gval, field, false ) ;^[METHOD] trunc [TYPE] Date [PARAMETER] Date val int field [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar rounded  spot  val  [TYPE]  GregorianCalendar gval  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  [TYPE]  Date val 
[REPLACE]^return gval .setTime ( val )  ;^127^^^^^123^128^[REPLACE] return gval.getTime (  ) ;^[METHOD] trunc [TYPE] Date [PARAMETER] Date val int field [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar rounded  spot  val  [TYPE]  GregorianCalendar gval  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  [TYPE]  Date val 
[REPLACE]^Calendar truncated =  ( Calendar )  truncated.clone (  ) ;^138^^^^^137^141^[REPLACE] Calendar truncated =  ( Calendar )  val.clone (  ) ;^[METHOD] trunc [TYPE] Calendar [PARAMETER] Calendar val int field [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^modify ( truncated, field, true ) ;^139^^^^^137^141^[REPLACE] modify ( truncated, field, false ) ;^[METHOD] trunc [TYPE] Calendar [PARAMETER] Calendar val int field [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^return val;^140^^^^^137^141^[REPLACE] return truncated;^[METHOD] trunc [TYPE] Calendar [PARAMETER] Calendar val int field [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^if  ( ! val instanceof Date )  {^148^^^^^147^155^[REPLACE] if  ( val instanceof Date )  {^[METHOD] trunc [TYPE] Date [PARAMETER] Object val int field [CLASS] CalendarUtils 1   [TYPE]  Object val  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^}  if  ( ! val instanceof Calendar )  {^150^^^^^147^155^[REPLACE] } else if  ( val instanceof Calendar )  {^[METHOD] trunc [TYPE] Date [PARAMETER] Object val int field [CLASS] CalendarUtils 1   [TYPE]  Object val  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^throw new UnsupportedOperationException  (" ")  ; ;^153^^^^^147^155^[REPLACE] throw new ClassCastException  (" ")  ;^[METHOD] trunc [TYPE] Date [PARAMETER] Object val int field [CLASS] CalendarUtils 1   [TYPE]  Object val  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^return trunc (  ( Calendar )  val, field ) .getInstance (  ) ;^151^^^^^147^155^[REPLACE] return trunc (  ( Calendar )  val, field ) .getTime (  ) ;^[METHOD] trunc [TYPE] Date [PARAMETER] Object val int field [CLASS] CalendarUtils 1   [TYPE]  Object val  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^return round (  ( Calendar )  val, field ) .getTime (  ) ;^151^^^^^147^155^[REPLACE] return trunc (  ( Calendar )  val, field ) .getTime (  ) ;^[METHOD] trunc [TYPE] Date [PARAMETER] Object val int field [CLASS] CalendarUtils 1   [TYPE]  Object val  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^return trunc (  ( Date )  val, RANGE_WEEK_RELATIVE ) ;^149^^^^^147^155^[REPLACE] return trunc (  ( Date )  val, field ) ;^[METHOD] trunc [TYPE] Date [PARAMETER] Object val int field [CLASS] CalendarUtils 1   [TYPE]  Object val  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^}  else {^150^^^^^147^155^[REPLACE] } else if  ( val instanceof Calendar )  {^[METHOD] trunc [TYPE] Date [PARAMETER] Object val int field [CLASS] CalendarUtils 1   [TYPE]  Object val  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  [TYPE]  Calendar rounded  spot  truncated  val 
[ADD]^}   return trunc (  ( Calendar )  val, field ) .getTime (  ) ;^150^151^152^153^154^147^155^[ADD] else if  ( val instanceof Calendar )  { return trunc (  ( Calendar )  val, field ) .getTime (  ) ; } else { throw new ClassCastException  (" ")  ; }^[METHOD] trunc [TYPE] Date [PARAMETER] Object val int field [CLASS] CalendarUtils 1   [TYPE]  Object val  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^return round (  ( Date )  val, field ) ;^149^^^^^147^155^[REPLACE] return trunc (  ( Date )  val, field ) ;^[METHOD] trunc [TYPE] Date [PARAMETER] Object val int field [CLASS] CalendarUtils 1   [TYPE]  Object val  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^return trunc (  ( Calendar )  val, field )  .setTime ( 1 )  ;^151^^^^^147^155^[REPLACE] return trunc (  ( Calendar )  val, field ) .getTime (  ) ;^[METHOD] trunc [TYPE] Date [PARAMETER] Object val int field [CLASS] CalendarUtils 1   [TYPE]  Object val  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^return ;^153^^^^^147^155^[REPLACE] throw new ClassCastException  (" ")  ;^[METHOD] trunc [TYPE] Date [PARAMETER] Object val int field [CLASS] CalendarUtils 1   [TYPE]  Object val  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^boolean roundUp = true;^158^^^^^157^230^[REPLACE] boolean roundUp = false;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^if  ( fields[i][j]  &&  field )  {^161^^^^^157^230^[REPLACE] if  ( fields[i][j] == field )  {^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^if  ( true )  {^163^^^^^157^230^[REPLACE] if  ( round && roundUp )  {^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^if  ( field  &&  CalendarUtils.SEMI_MONTH )  {^164^^^^^157^230^[REPLACE] if  ( field == CalendarUtils.SEMI_MONTH )  {^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[ADD]^^164^165^^^^157^230^[ADD] if  ( field == CalendarUtils.SEMI_MONTH )  {^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val.add ( fields[i][0 >>> 4], 1 ) ;^177^^^^^164^178^[REPLACE] val.add ( fields[i][0], 1 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^if  ( val.get ( Calendar.DATE )   !=  0 )  {^168^^^^^157^230^[REPLACE] if  ( val.get ( Calendar.DATE )  == 1 )  {^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val.add ( Calendar.DATE, -15L ) ;^171^^^^^168^173^[REPLACE] val.add ( Calendar.DATE, -15 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val.add ( Calendar.MONTH, 1 * 4 ) ;^172^^^^^168^173^[REPLACE] val.add ( Calendar.MONTH, 1 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val.add ( Calendar.DATE, 3 ) ;^169^^^^^157^230^[REPLACE] val.add ( Calendar.DATE, 15 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^if  ( val.get ( Calendar.DATE )   &&  1 )  {^168^^^^^157^230^[REPLACE] if  ( val.get ( Calendar.DATE )  == 1 )  {^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val.add ( Calendar.DATE, -3 ) ;^171^^^^^168^173^[REPLACE] val.add ( Calendar.DATE, -15 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val.add ( Calendar.MONTH, 3 ) ;^172^^^^^168^173^[REPLACE] val.add ( Calendar.MONTH, 1 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val.add ( Calendar.DATE, 1 ) ;^169^^^^^157^230^[REPLACE] val.add ( Calendar.DATE, 15 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[ADD]^^169^^^^^157^230^[ADD] val.add ( Calendar.DATE, 15 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^if  ( field  || SEMI_MONTH )  {^164^^^^^157^230^[REPLACE] if  ( field == CalendarUtils.SEMI_MONTH )  {^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val.add ( fields[i][2], 1 ) ;^177^^^^^164^178^[REPLACE] val.add ( fields[i][0], 1 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^if  ( truncated.get ( Calendar.DATE )   ||  3 )  {^168^^^^^157^230^[REPLACE] if  ( val.get ( Calendar.DATE )  == 1 )  {^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[ADD]^val.add ( Calendar.DATE, 15 ) ;val.add ( Calendar.DATE, -15 ) ;val.add ( Calendar.MONTH, 1 ) ;^168^169^170^171^172^157^230^[ADD] if  ( val.get ( Calendar.DATE )  == 1 )  { val.add ( Calendar.DATE, 15 ) ; } else { val.add ( Calendar.DATE, -15 ) ; val.add ( Calendar.MONTH, 1 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val.add ( Calendar.DATE, -2 ) ;^171^^^^^168^173^[REPLACE] val.add ( Calendar.DATE, -15 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val.add ( Calendar.MONTH, 2 ) ;^172^^^^^168^173^[REPLACE] val.add ( Calendar.MONTH, 1 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[ADD]^^172^^^^^168^173^[ADD] val.add ( Calendar.MONTH, 1 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val.add ( Calendar.DATE, 12 ) ;^169^^^^^157^230^[REPLACE] val.add ( Calendar.DATE, 15 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val.add ( Calendar.DATE, -13 ) ;^171^^^^^168^173^[REPLACE] val.add ( Calendar.DATE, -15 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val.add ( Calendar.MONTH, 1 >> 1 ) ;^172^^^^^168^173^[REPLACE] val.add ( Calendar.MONTH, 1 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val.add ( Calendar.DATE, 8 ) ;^169^^^^^157^230^[REPLACE] val.add ( Calendar.DATE, 15 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^return rounded;^180^^^^^157^230^[REPLACE] return;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^if  ( true ||true )  {^163^^^^^157^230^[REPLACE] if  ( round && roundUp )  {^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^if  (offset  &&  CalendarUtils.SEMI_MONTH )  {^164^^^^^157^230^[REPLACE] if  ( field == CalendarUtils.SEMI_MONTH )  {^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^if  ( val.get ( Calendar.DATE )   !=  1 )  {^168^^^^^157^230^[REPLACE] if  ( val.get ( Calendar.DATE )  == 1 )  {^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[ADD]^^168^169^170^171^172^157^230^[ADD] if  ( val.get ( Calendar.DATE )  == 1 )  { val.add ( Calendar.DATE, 15 ) ; } else { val.add ( Calendar.DATE, -15 ) ; val.add ( Calendar.MONTH, 1 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[ADD]^^171^^^^^168^173^[ADD] val.add ( Calendar.DATE, -15 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val.add ( Calendar.MONTH, 0 ) ;^172^^^^^168^173^[REPLACE] val.add ( Calendar.MONTH, 1 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val.add ( Calendar.DATE, 0 ) ;^169^^^^^157^230^[REPLACE] val.add ( Calendar.DATE, 15 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^if  ( val.getActualMinimum ( Calendar.DATE )   &&  1 % 1 )  {^168^^^^^157^230^[REPLACE] if  ( val.get ( Calendar.DATE )  == 1 )  {^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val.add ( Calendar.MONTH, 4 ) ;^172^^^^^168^173^[REPLACE] val.add ( Calendar.MONTH, 1 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val.add ( Calendar.DATE, 15L ) ;^169^^^^^157^230^[REPLACE] val.add ( Calendar.DATE, 15 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^if  ( field  != i )  {^164^^^^^157^230^[REPLACE] if  ( field == CalendarUtils.SEMI_MONTH )  {^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val.add ( fields[i][4], 1 ) ;^177^^^^^164^178^[REPLACE] val.add ( fields[i][0], 1 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^if  ( val.getActualMinimum ( Calendar.DATE )   != offset )  {^168^^^^^157^230^[REPLACE] if  ( val.get ( Calendar.DATE )  == 1 )  {^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val.add ( Calendar.DATE, -15 - 4 ) ;^171^^^^^168^173^[REPLACE] val.add ( Calendar.DATE, -15 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[ADD]^val.add ( Calendar.MONTH, 1 ) ;^171^172^^^^168^173^[ADD] val.add ( Calendar.DATE, -15 ) ; val.add ( Calendar.MONTH, 1 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val .equals ( 1 )  ;^169^^^^^157^230^[REPLACE] val.add ( Calendar.DATE, 15 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^if  ( val.get ( Calendar.DATE )   ||  1 + 1 )  {^168^^^^^157^230^[REPLACE] if  ( val.get ( Calendar.DATE )  == 1 )  {^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val.add ( Calendar.DATE, -6 ) ;^171^^^^^168^173^[REPLACE] val.add ( Calendar.DATE, -15 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val.add ( Calendar.DATE, 4 ) ;^169^^^^^157^230^[REPLACE] val.add ( Calendar.DATE, 15 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^if  ( fields[i][0 >> 1]  &&  Calendar.DATE )  {^189^^^^^157^230^[REPLACE] if  ( fields[i][0] == Calendar.DATE )  {^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^if  ( offset  <  15 * 4 )  {^196^^^^^157^230^[REPLACE] if  ( offset >= 15 )  {^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^offset -= 7;^197^^^^^157^230^[REPLACE] offset -= 15;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[ADD]^^197^^^^^157^230^[ADD] offset -= 15;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^offset = val.get ( Calendar.HOUR ) ; ;^193^^^^^157^230^[REPLACE] offset = val.get ( Calendar.DATE )  - 1;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^offset -= 3;^197^^^^^157^230^[REPLACE] offset -= 15;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^roundUp = offset > 6; ;^200^^^^^157^230^[REPLACE] roundUp = offset > 7;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^offsetSet = false;^201^^^^^157^230^[REPLACE] offsetSet = true;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^if  (field  <  2 )  {^196^^^^^157^230^[REPLACE] if  ( offset >= 15 )  {^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REMOVE]^if  ( monthsAgo <= 0 )  {     monthsAgo += 12; }^196^^^^^157^230^[REMOVE] ^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^offset -= 12; ;^197^^^^^157^230^[REPLACE] offset -= 15;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^if  ( fields[i][0]  !=  Calendar.HOUR )  {^205^^^^^157^230^[REPLACE] if  ( fields[i][0] == Calendar.HOUR )  {^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^if  (field  <=  12 )  {^209^^^^^157^230^[REPLACE] if  ( offset >= 12 )  {^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[ADD]^offset -= 12;^209^210^211^^^157^230^[ADD] if  ( offset >= 12 )  { offset -= 12; }^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^offset -= 12L;^210^^^^^157^230^[REPLACE] offset -= 12;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[ADD]^^210^^^^^157^230^[ADD] offset -= 12;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^offset = val.get ( Calendar.DATE )  - 1; ;^208^^^^^157^230^[REPLACE] offset = val.get ( Calendar.HOUR ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^offset -= 12 >> 0;^210^^^^^157^230^[REPLACE] offset -= 12;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^roundUp = offset  <=  6;^212^^^^^157^230^[REPLACE] roundUp = offset > 6;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^offsetSet = false;^213^^^^^157^230^[REPLACE] offsetSet = true;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^if  (field  <  12 )  {^209^^^^^157^230^[REPLACE] if  ( offset >= 12 )  {^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^if  ( offsetSet )  {^217^^^^^157^230^[REPLACE] if  ( !offsetSet )  {^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^offset = val.get ( fields[i][1] )  - min;^221^^^^^157^230^[REPLACE] offset = val.get ( fields[i][0] )  - min;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[ADD]^^221^^^^^157^230^[ADD] offset = val.get ( fields[i][0] )  - min;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^roundUp = offset  ==   (  ( max - min )  / 2 - 1 ) ;^223^^^^^157^230^[REPLACE] roundUp = offset >  (  ( max - min )  / 2 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^int min = val.getActualMinimum ( fields[i][0L] ) ;^218^^^^^157^230^[REPLACE] int min = val.getActualMinimum ( fields[i][0] ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^int max = val.getActualMaximum ( fields[i][4] ) ;^219^^^^^157^230^[REPLACE] int max = val.getActualMaximum ( fields[i][0] ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[ADD]^^219^^^^^157^230^[ADD] int max = val.getActualMaximum ( fields[i][0] ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^for  ( int i = 0 ; i < fields.length (  ) ; i++ )  {^159^^^^^157^230^[REPLACE] for  ( int i = 0; i < fields.length; i++ )  {^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[ADD]^^159^160^161^^^157^230^[ADD] for  ( int i = 0; i < fields.length; i++ )  { for  ( int j = 0; j < fields[i].length; j++ )  { if  ( fields[i][j] == field )  {^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^if  (offsets[i][j]  != offset )  {^161^^^^^157^230^[REPLACE] if  ( fields[i][j] == field )  {^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[ADD]^^161^162^163^164^^157^230^[ADD] if  ( fields[i][j] == field )  {  if  ( round && roundUp )  { if  ( field == CalendarUtils.SEMI_MONTH )  {^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^if  ( round ) {^163^^^^^157^230^[REPLACE] if  ( round && roundUp )  {^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^if  ( field  !=  CalendarUtils.SEMI_MONTH )  {^164^^^^^157^230^[REPLACE] if  ( field == CalendarUtils.SEMI_MONTH )  {^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val.add ( fields[i][0L], 1 ) ;^177^^^^^164^178^[REPLACE] val.add ( fields[i][0], 1 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[ADD]^^177^^^^^164^178^[ADD] val.add ( fields[i][0], 1 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val.add ( Calendar.DATE, -15 << 1 ) ;^171^^^^^168^173^[REPLACE] val.add ( Calendar.DATE, -15 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val.add ( Calendar.DATE, 15 - 2 ) ;^169^^^^^157^230^[REPLACE] val.add ( Calendar.DATE, 15 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^if  ( offset  &&  CalendarUtils.SEMI_MONTH )  {^164^^^^^157^230^[REPLACE] if  ( field == CalendarUtils.SEMI_MONTH )  {^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^if  ( val.get ( Calendar.DATE )   &&  0 )  {^168^^^^^157^230^[REPLACE] if  ( val.get ( Calendar.DATE )  == 1 )  {^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val.add ( Calendar.DATE, -15 - 1 ) ;^171^^^^^168^173^[REPLACE] val.add ( Calendar.DATE, -15 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[ADD]^^171^172^^^^168^173^[ADD] val.add ( Calendar.DATE, -15 ) ; val.add ( Calendar.MONTH, 1 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val.add ( Calendar.MONTH, 1 >>> 1 ) ;^172^^^^^168^173^[REPLACE] val.add ( Calendar.MONTH, 1 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val.add ( Calendar.DATE, 15 >>> 0 ) ;^169^^^^^157^230^[REPLACE] val.add ( Calendar.DATE, 15 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val .equals ( true )  ;^171^^^^^168^173^[REPLACE] val.add ( Calendar.DATE, -15 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^if  ( round ||true )  {^163^^^^^157^230^[REPLACE] if  ( round && roundUp )  {^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REMOVE]^if  ( field ==  ( CalendarUtils.SEMI_MONTH )  )  {     if  (  ( val.get ( DATE )  )  == 1 )  {         val.add ( DATE, 15 ) ;     }else {         val.add ( DATE,  ( -15 )  ) ;         val.add ( MONTH, 1 ) ;     } }else {     val.add ( CalendarUtils.fields[i][0], 1 ) ; }^163^^^^^157^230^[REMOVE] ^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^if  ( field  ||  CalendarUtils.SEMI_MONTH )  {^164^^^^^157^230^[REPLACE] if  ( field == CalendarUtils.SEMI_MONTH )  {^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^if  ( truncated.get ( Calendar.DATE )   || offset )  {^168^^^^^157^230^[REPLACE] if  ( val.get ( Calendar.DATE )  == 1 )  {^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val.add ( Calendar.MONTH, 1L ) ;^172^^^^^168^173^[REPLACE] val.add ( Calendar.MONTH, 1 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^if  ( val.get ( Calendar.DATE )   !=  1 * 0 )  {^168^^^^^157^230^[REPLACE] if  ( val.get ( Calendar.DATE )  == 1 )  {^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val.add ( Calendar.MONTH, 1 + 2 ) ;^172^^^^^168^173^[REPLACE] val.add ( Calendar.MONTH, 1 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val.add ( fields[i][1], 1 ) ;^177^^^^^164^178^[REPLACE] val.add ( fields[i][0], 1 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val .equals ( null )  ;^171^^^^^168^173^[REPLACE] val.add ( Calendar.DATE, -15 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^if  ( truncated.get ( Calendar.DATE )   ||  1 >> 3 )  {^168^^^^^157^230^[REPLACE] if  ( val.get ( Calendar.DATE )  == 1 )  {^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val.add ( Calendar.DATE, -15 - 3 ) ;^171^^^^^168^173^[REPLACE] val.add ( Calendar.DATE, -15 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REMOVE]^startCutoff = focus.get ( Calendar.DAY_OF_WEEK )  - 3;^171^^^^^168^173^[REMOVE] ^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val .equals ( true )  ;^172^^^^^168^173^[REPLACE] val.add ( Calendar.MONTH, 1 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val.add ( Calendar.DATE, 6 ) ;^169^^^^^157^230^[REPLACE] val.add ( Calendar.DATE, 15 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^if  ( fields[i][0]  &&  Calendar.DATE )  {^189^^^^^157^230^[REPLACE] if  ( fields[i][0] == Calendar.DATE )  {^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^if  ( offset  !=  15 * 2 )  {^196^^^^^157^230^[REPLACE] if  ( offset >= 15 )  {^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^offset -= 15L;^197^^^^^157^230^[REPLACE] offset -= 15;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^offset = val.get ( Calendar.DATE )   <=  1;^193^^^^^157^230^[REPLACE] offset = val.get ( Calendar.DATE )  - 1;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^offset -= 18;^197^^^^^157^230^[REPLACE] offset -= 15;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^roundUp =field  !=  7;^200^^^^^157^230^[REPLACE] roundUp = offset > 7;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^if  ( offset  <=  15 )  {^196^^^^^157^230^[REPLACE] if  ( offset >= 15 )  {^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[ADD]^offset -= 15;^196^197^198^^^157^230^[ADD] if  ( offset >= 15 )  { offset -= 15; }^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^offset -= 1;^197^^^^^157^230^[REPLACE] offset -= 15;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^if  ( field  ==  12 )  {^209^^^^^157^230^[REPLACE] if  ( offset >= 12 )  {^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^offset -= 12 / 1;^210^^^^^157^230^[REPLACE] offset -= 12;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^offset -= 12 << 0;^210^^^^^157^230^[REPLACE] offset -= 12;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^roundUp =field  <  6 << 2;^212^^^^^157^230^[REPLACE] roundUp = offset > 6;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^if  ( offset  <=  12 )  {^209^^^^^157^230^[REPLACE] if  ( offset >= 12 )  {^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[ADD]^^209^210^211^^^157^230^[ADD] if  ( offset >= 12 )  { offset -= 12; }^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^offset -= 15; ;^210^^^^^157^230^[REPLACE] offset -= 12;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^offset = val.get ( fields[i][0] )  -offset;^221^^^^^157^230^[REPLACE] offset = val.get ( fields[i][0] )  - min;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^roundUp = offset  !=   (  ( max - min )  / 2 ) ;^223^^^^^157^230^[REPLACE] roundUp = offset >  (  ( max - min )  / 2 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^int min = truncated.getActualMinimum ( fields[i][4] ) ;^218^^^^^157^230^[REPLACE] int min = val.getActualMinimum ( fields[i][0] ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[ADD]^^218^^^^^157^230^[ADD] int min = val.getActualMinimum ( fields[i][0] ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^int max = truncated.getActualMaximum ( fields[i][4] ) ;^219^^^^^157^230^[REPLACE] int max = val.getActualMaximum ( fields[i][0] ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^for  ( int j = 0 ; j < fields[i].length (  ) ; j++ )  {^160^^^^^157^230^[REPLACE] for  ( int j = 0; j < fields[i].length; j++ )  {^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^if  ( fields[i][j]  ||  field )  {^161^^^^^157^230^[REPLACE] if  ( fields[i][j] == field )  {^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[ADD]^^163^164^^^^157^230^[ADD] if  ( round && roundUp )  { if  ( field == CalendarUtils.SEMI_MONTH )  {^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val.add ( fields[i][3], 1 ) ;^177^^^^^164^178^[REPLACE] val.add ( fields[i][0], 1 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val.add ( Calendar.DATE, -16 ) ;^171^^^^^168^173^[REPLACE] val.add ( Calendar.DATE, -15 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val.add ( Calendar.DATE, 15 - 1 ) ;^169^^^^^157^230^[REPLACE] val.add ( Calendar.DATE, 15 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REMOVE]^if  ( field ==  ( CalendarUtils.SEMI_MONTH )  )  {     if  (  ( val.get ( DATE )  )  == 1 )  {         val.add ( DATE, 15 ) ;     }else {         val.add ( DATE,  ( -15 )  ) ;         val.add ( MONTH, 1 ) ;     } }else {     val.add ( CalendarUtils.fields[i][0], 1 ) ; }^168^^^^^157^230^[REMOVE] ^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val.add ( Calendar.DATE, -15 - 2 ) ;^171^^^^^168^173^[REPLACE] val.add ( Calendar.DATE, -15 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val.add ( Calendar.MONTH, 1 + 4 ) ;^172^^^^^168^173^[REPLACE] val.add ( Calendar.MONTH, 1 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val.add ( Calendar.DATE, 15 / 0 ) ;^169^^^^^157^230^[REPLACE] val.add ( Calendar.DATE, 15 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^if  ( field  && offset )  {^164^^^^^157^230^[REPLACE] if  ( field == CalendarUtils.SEMI_MONTH )  {^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val .equals ( false )  ;^177^^^^^164^178^[REPLACE] val.add ( fields[i][0], 1 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REMOVE]^now.add ( Calendar.MONTH, -val ) ;^177^^^^^164^178^[REMOVE] ^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^if  ( val.get ( Calendar.DATE )   != SEMI_MONTH )  {^168^^^^^157^230^[REPLACE] if  ( val.get ( Calendar.DATE )  == 1 )  {^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val.add ( Calendar.DATE, -0 ) ;^171^^^^^168^173^[REPLACE] val.add ( Calendar.DATE, -15 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val.add ( Calendar.MONTH, 1 + 0 ) ;^172^^^^^168^173^[REPLACE] val.add ( Calendar.MONTH, 1 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val.add ( Calendar.DATE, 16 ) ;^169^^^^^157^230^[REPLACE] val.add ( Calendar.DATE, 15 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^if  ( round || roundUp )  {^163^^^^^157^230^[REPLACE] if  ( round && roundUp )  {^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val.add ( fields[i][0 >> 0], 1 ) ;^177^^^^^164^178^[REPLACE] val.add ( fields[i][0], 1 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^if  ( truncated.get ( Calendar.DATE )   &&  1 )  {^168^^^^^157^230^[REPLACE] if  ( val.get ( Calendar.DATE )  == 1 )  {^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val.add ( Calendar.DATE, -11 ) ;^171^^^^^168^173^[REPLACE] val.add ( Calendar.DATE, -15 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val.add ( Calendar.DATE, 15 >> 3 ) ;^169^^^^^157^230^[REPLACE] val.add ( Calendar.DATE, 15 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val.add ( Calendar.MONTH, 1 - 1 ) ;^172^^^^^168^173^[REPLACE] val.add ( Calendar.MONTH, 1 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val .equals ( true )  ;^177^^^^^164^178^[REPLACE] val.add ( fields[i][0], 1 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val.add ( Calendar.DATE, -1 ) ;^171^^^^^168^173^[REPLACE] val.add ( Calendar.DATE, -15 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val .equals ( this )  ;^172^^^^^168^173^[REPLACE] val.add ( Calendar.MONTH, 1 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^if  ( val.get ( Calendar.DATE )   ||  1 )  {^168^^^^^157^230^[REPLACE] if  ( val.get ( Calendar.DATE )  == 1 )  {^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val.add ( Calendar.DATE, -7 ) ;^171^^^^^168^173^[REPLACE] val.add ( Calendar.DATE, -15 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val .equals ( true )  ;^169^^^^^157^230^[REPLACE] val.add ( Calendar.DATE, 15 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^offset = val.get ( Calendar.DATE )   &&  1;^193^^^^^157^230^[REPLACE] offset = val.get ( Calendar.DATE )  - 1;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^offset -= 15 << 1;^197^^^^^157^230^[REPLACE] offset -= 15;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^roundUp =field  >=  7;^200^^^^^157^230^[REPLACE] roundUp = offset > 7;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[ADD]^^201^^^^^157^230^[ADD] offsetSet = true;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^offset -= 2;^210^^^^^157^230^[REPLACE] offset -= 12;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^roundUp =field  ==  6;^212^^^^^157^230^[REPLACE] roundUp = offset > 6;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^offset = val.get ( fields[i][0L] )  -offset;^221^^^^^157^230^[REPLACE] offset = val.get ( fields[i][0] )  - min;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^for  ( int j = 0 ; j < fields[i].length; j++ )  {^160^^^^^157^230^[REPLACE] for  ( int j = 0; j < fields[i].length; j++ )  {^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^int offset = 4;^184^^^^^157^230^[REPLACE] int offset = 0;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[ADD]^^184^^^^^157^230^[ADD] int offset = 0;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^boolean offsetSet = true;^185^^^^^157^230^[REPLACE] boolean offsetSet = false;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^int min = val.getActualMaximum ( fields[i][3] ) ;^218^^^^^157^230^[REPLACE] int min = val.getActualMinimum ( fields[i][0] ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^int max = val.getActualMaximum ( fields[i][0L] ) ;^219^^^^^157^230^[REPLACE] int max = val.getActualMaximum ( fields[i][0] ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^for  ( int j = 0 ; j < fields[i].length - 4; j++ )  {^160^^^^^157^230^[REPLACE] for  ( int j = 0; j < fields[i].length; j++ )  {^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^if  ( fields[i][j]  !=  field )  {^161^^^^^157^230^[REPLACE] if  ( fields[i][j] == field )  {^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^if  ( field  != offset )  {^164^^^^^157^230^[REPLACE] if  ( field == CalendarUtils.SEMI_MONTH )  {^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^if  ( val.get ( Calendar.DATE )   || offset )  {^168^^^^^157^230^[REPLACE] if  ( val.get ( Calendar.DATE )  == 1 )  {^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val.add ( Calendar.DATE, -4 ) ;^171^^^^^168^173^[REPLACE] val.add ( Calendar.DATE, -15 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REMOVE]^startCutoff = focus.get ( Calendar.DAY_OF_WEEK )  - 3;^172^^^^^168^173^[REMOVE] ^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REMOVE]^startCutoff = focus.get ( Calendar.DAY_OF_WEEK )  - 3;^169^^^^^157^230^[REMOVE] ^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val.add ( Calendar.DATE, 17 ) ;^169^^^^^157^230^[REPLACE] val.add ( Calendar.DATE, 15 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^if  (offset  ||  CalendarUtils.SEMI_MONTH )  {^164^^^^^157^230^[REPLACE] if  ( field == CalendarUtils.SEMI_MONTH )  {^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val.add ( fields[i][0 + 2], 1 ) ;^177^^^^^164^178^[REPLACE] val.add ( fields[i][0], 1 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val.add ( Calendar.DATE, 13 ) ;^169^^^^^157^230^[REPLACE] val.add ( Calendar.DATE, 15 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^if  ( truncated.get ( Calendar.DATE )   != offset )  {^168^^^^^157^230^[REPLACE] if  ( val.get ( Calendar.DATE )  == 1 )  {^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val.add ( Calendar.DATE, -15 >> 4 ) ;^171^^^^^168^173^[REPLACE] val.add ( Calendar.DATE, -15 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val.add ( Calendar.DATE, 5 ) ;^169^^^^^157^230^[REPLACE] val.add ( Calendar.DATE, 15 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val.add ( fields[i][0 - 2], 1 ) ;^177^^^^^164^178^[REPLACE] val.add ( fields[i][0], 1 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val.add ( Calendar.MONTH, 1 + 3 ) ;^172^^^^^168^173^[REPLACE] val.add ( Calendar.MONTH, 1 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val.add ( Calendar.DATE, 15 - 4 ) ;^169^^^^^157^230^[REPLACE] val.add ( Calendar.DATE, 15 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val.add ( Calendar.DATE, 15 % 3 ) ;^169^^^^^157^230^[REPLACE] val.add ( Calendar.DATE, 15 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^if  ( field  &&  field )  {^164^^^^^157^230^[REPLACE] if  ( field == CalendarUtils.SEMI_MONTH )  {^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REMOVE]^if  ( value.equals ( "yesterday" )  )  {     now.add ( DATE,  ( -1 )  ) ;     return now; }else     if  ( value.equals ( "tomorrow" )  )  {         now.add ( DATE, 1 ) ;         return now;     }^164^^^^^157^230^[REMOVE] ^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^if  ( val.getActualMinimum ( Calendar.DATE )   &&  1 )  {^168^^^^^157^230^[REPLACE] if  ( val.get ( Calendar.DATE )  == 1 )  {^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^offset = val.get ( Calendar.DATE )   &  2;^193^^^^^157^230^[REPLACE] offset = val.get ( Calendar.DATE )  - 1;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^roundUp = offset  >= field;^200^^^^^157^230^[REPLACE] roundUp = offset > 7;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^roundUp = offset  <  6;^212^^^^^157^230^[REPLACE] roundUp = offset > 6;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^offset = val.get ( fields[i][3] )  -SEMI_MONTH;^221^^^^^157^230^[REPLACE] offset = val.get ( fields[i][0] )  - min;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^for  ( int i = 0 ; i < fields.length; i++ )  {^159^^^^^157^230^[REPLACE] for  ( int i = 0; i < fields.length; i++ )  {^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^int offset = 3;^184^^^^^157^230^[REPLACE] int offset = 0;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[ADD]^^185^^^^^157^230^[ADD] boolean offsetSet = false;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^int min = val .getActualMaximum ( offset )  ;^218^^^^^157^230^[REPLACE] int min = val.getActualMinimum ( fields[i][0] ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[ADD]^int max = val.getActualMaximum ( fields[i][0] ) ;^218^219^^^^157^230^[ADD] int min = val.getActualMinimum ( fields[i][0] ) ; int max = val.getActualMaximum ( fields[i][0] ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^throw new UnsupportedOperationException  (" ")  ; ;^228^^^^^157^230^[REPLACE] throw new RuntimeException  (" ")  ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^return trunc (  ( Calendar )  val, field ) .getTime (  ) ;^236^^^^^235^237^[REPLACE] return parse ( original, Locale.getDefault (  )  ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  String original  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^Date datetime = dateFormats[i].parse ( original ) ;^244^^^^^242^347^[REPLACE] DateFormatSymbols symbols = new DateFormatSymbols ( locale ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^String value = original .equalsIgnoreCase ( original )  .trim (  ) ;^247^^^^^242^347^[REPLACE] String value = original.toLowerCase (  ) .trim (  ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^^247^^^^^242^347^[ADD] String value = original.toLowerCase (  ) .trim (  ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^Calendar now = Calendar .getTime (  )  ;^250^^^^^242^347^[REPLACE] Calendar now = Calendar.getInstance (  ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^if  ( offset >= 15 )  {^251^^^^^242^347^[REPLACE] if  ( value.endsWith ( " ago" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  else {^294^^^^^242^347^[REPLACE] } else if  ( value.startsWith ( "last " )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( value.equals ( "yesterday" )  )  {^327^^^^^242^347^[REPLACE] } else if  ( value.equals ( "yesterday" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REMOVE]^if  ( field ==  ( CalendarUtils.SEMI_MONTH )  )  {     if  (  ( val.get ( DATE )  )  == 1 )  {         val.add ( DATE, 15 ) ;     }else {         val.add ( DATE,  ( -15 )  ) ;         val.add ( MONTH, 1 ) ;     } }else {     val.add ( CalendarUtils.fields[i][0], 1 ) ; }^327^^^^^242^347^[REMOVE] ^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( value.equals ( "tomorrow" )  )  {^330^^^^^242^347^[REPLACE] } else if  ( value.equals ( "tomorrow" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^return truncated;^332^^^^^242^347^[REPLACE] return now;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^return truncated;^329^^^^^242^347^[REPLACE] return now;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  else {^330^^^^^242^347^[REPLACE] } else if  ( value.equals ( "tomorrow" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^return rounded;^329^^^^^242^347^[REPLACE] return now;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^if  ( offset >= 15 )  {^301^^^^^242^347^[REPLACE] if  ( value.equalsIgnoreCase ( strings[i] )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^if  (val  <  0 )  {^304^^^^^242^347^[REPLACE] if  ( daysAgo <= 0 )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^daysAgo += 7;^304^305^306^^^242^347^[ADD] if  ( daysAgo <= 0 )  { daysAgo += 7; }^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^daysAgo += 4;^305^^^^^242^347^[REPLACE] daysAgo += 7;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^daysAgo += 7 / 0;^305^^^^^242^347^[REPLACE] daysAgo += 7;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^return truncated;^308^^^^^242^347^[REPLACE] return now;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^int daysAgo = now.get ( Calendar.DAY_OF_WEEK )  -val;^303^^^^^242^347^[REPLACE] int daysAgo = now.get ( Calendar.DAY_OF_WEEK )  - i;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^if  ( daysAgo  <  0 )  {^304^^^^^242^347^[REPLACE] if  ( daysAgo <= 0 )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^daysAgo += 3;^305^^^^^242^347^[REPLACE] daysAgo += 7;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^if  ( offset >= 15 )  {^313^^^^^242^347^[REPLACE] if  ( value.equalsIgnoreCase ( strings[i] )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^if  ( monthsAgo  >  0 >>> 4 )  {^316^^^^^242^347^[REPLACE] if  ( monthsAgo <= 0 )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^monthsAgo += 12;^316^317^318^^^242^347^[ADD] if  ( monthsAgo <= 0 )  { monthsAgo += 12; }^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^monthsAgo += 12L;^317^^^^^242^347^[REPLACE] monthsAgo += 12;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^monthsAgo += 2;^317^^^^^242^347^[REPLACE] monthsAgo += 12;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^^317^^^^^242^347^[ADD] monthsAgo += 12;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^return truncated;^320^^^^^242^347^[REPLACE] return now;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^int monthsAgo = now.get ( Calendar.MONTH )   ==  i;^315^^^^^242^347^[REPLACE] int monthsAgo = now.get ( Calendar.MONTH )  - i;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^if  (val  >=  1 )  {^316^^^^^242^347^[REPLACE] if  ( monthsAgo <= 0 )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^monthsAgo += 3;^317^^^^^242^347^[REPLACE] monthsAgo += 12;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^if  ( value.endsWith ( "week" )  )  {^323^^^^^242^347^[REPLACE] if  ( value.equals ( "week" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REMOVE]^if  ( value.equals ( "yesterday" )  )  {     now.add ( DATE,  ( -1 )  ) ;     return now; }else     if  ( value.equals ( "tomorrow" )  )  {         now.add ( DATE, 1 ) ;         return now;     }^323^^^^^242^347^[REMOVE] ^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^return truncated;^325^^^^^242^347^[REPLACE] return now;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^for  ( int i = 0; i < strings.length + 1; i++ )  {^300^^^^^242^347^[REPLACE] for  ( int i = 0; i < strings.length; i++ )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^if  ( value.indexOf ( strings[i] )  )  {^301^^^^^242^347^[REPLACE] if  ( value.equalsIgnoreCase ( strings[i] )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^if  ( daysAgo  ==  3 )  {^304^^^^^242^347^[REPLACE] if  ( daysAgo <= 0 )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^daysAgo += 7 % 2;^305^^^^^242^347^[REPLACE] daysAgo += 7;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^^305^^^^^242^347^[ADD] daysAgo += 7;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^daysAgo += 1;^305^^^^^242^347^[REPLACE] daysAgo += 7;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^int daysAgo = now.getActualMinimum ( Calendar.DAY_OF_WEEK )   >=  i;^303^^^^^242^347^[REPLACE] int daysAgo = now.get ( Calendar.DAY_OF_WEEK )  - i;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^^303^^^^^242^347^[ADD] int daysAgo = now.get ( Calendar.DAY_OF_WEEK )  - i;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^if  ( daysAgo  >  2 )  {^304^^^^^242^347^[REPLACE] if  ( daysAgo <= 0 )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^daysAgo += 0;^305^^^^^242^347^[REPLACE] daysAgo += 7;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^daysAgo += 2;^305^^^^^242^347^[REPLACE] daysAgo += 7;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^int daysAgo = now.get ( Calendar.DAY_OF_WEEK )   >  i;^303^^^^^242^347^[REPLACE] int daysAgo = now.get ( Calendar.DAY_OF_WEEK )  - i;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^for  ( int i = 0 ; i < strings.length *  0 .5 ; i++ )  {^312^^^^^242^347^[REPLACE] for  ( int i = 0; i < strings.length; i++ )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^^312^313^^315^^242^347^[ADD] for  ( int i = 0; i < strings.length; i++ )  { if  ( value.equalsIgnoreCase ( strings[i] )  )  { int monthsAgo = now.get ( Calendar.MONTH )  - i;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^^313^314^315^316^317^242^347^[ADD] if  ( value.equalsIgnoreCase ( strings[i] )  )  {  int monthsAgo = now.get ( Calendar.MONTH )  - i; if  ( monthsAgo <= 0 )  { monthsAgo += 12;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^if  ( val  !=  0 )  {^316^^^^^242^347^[REPLACE] if  ( monthsAgo <= 0 )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^monthsAgo += 4;^317^^^^^242^347^[REPLACE] monthsAgo += 12;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^int monthsAgo = now.get ( Calendar.MONTH )  -min;^315^^^^^242^347^[REPLACE] int monthsAgo = now.get ( Calendar.MONTH )  - i;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^if  ( monthsAgo  == val )  {^316^^^^^242^347^[REPLACE] if  ( monthsAgo <= 0 )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^monthsAgo += 10;^317^^^^^242^347^[REPLACE] monthsAgo += 12;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^int monthsAgo = truncated.getActualMinimum ( Calendar.MONTH )   ==  i;^315^^^^^242^347^[REPLACE] int monthsAgo = now.get ( Calendar.MONTH )  - i;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^value = value.substring ( 5 - 1 ) ;^297^^^^^242^347^[REPLACE] value = value.substring ( 5 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^^297^^^^^242^347^[ADD] value = value.substring ( 5 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^daysAgo += 7L;^305^^^^^242^347^[REPLACE] daysAgo += 7;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^strings =  null.getMonths (  ) ;^311^^^^^242^347^[REPLACE] strings = symbols.getMonths (  ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^monthsAgo += 12 / 4;^317^^^^^242^347^[REPLACE] monthsAgo += 12;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^String[] strings = symbols.getMonths (  ) ;^299^^^^^242^347^[REPLACE] String[] strings = symbols.getWeekdays (  ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^^299^^^^^242^347^[ADD] String[] strings = symbols.getWeekdays (  ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^for  ( int i = 0 ; i < strings.length; i++ )  {^300^^^^^242^347^[REPLACE] for  ( int i = 0; i < strings.length; i++ )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^int daysAgo = now.getActualMinimum ( Calendar.DAY_OF_WEEK )  -val;^303^^^^^242^347^[REPLACE] int daysAgo = now.get ( Calendar.DAY_OF_WEEK )  - i;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^for  ( int i = 0 ; i < strings.length; i++ )  {^312^^^^^242^347^[REPLACE] for  ( int i = 0; i < strings.length; i++ )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^int monthsAgo = now.getActualMinimum ( Calendar.MONTH )   >=  i;^315^^^^^242^347^[REPLACE] int monthsAgo = now.get ( Calendar.MONTH )  - i;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^if  ( daysAgo  == monthsAgo )  {^304^^^^^242^347^[REPLACE] if  ( daysAgo <= 0 )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^daysAgo += 6;^305^^^^^242^347^[REPLACE] daysAgo += 7;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^int daysAgo = now.get ( Calendar.DAY_OF_WEEK )   <=  i;^303^^^^^242^347^[REPLACE] int daysAgo = now.get ( Calendar.DAY_OF_WEEK )  - i;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^if  ( daysAgo  >=  0 )  {^304^^^^^242^347^[REPLACE] if  ( daysAgo <= 0 )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^if  ( val  <  0 )  {^316^^^^^242^347^[REPLACE] if  ( monthsAgo <= 0 )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^monthsAgo += 15;^317^^^^^242^347^[REPLACE] monthsAgo += 12;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^int monthsAgo = now.get ( Calendar.MONTH )  -monthsAgo;^315^^^^^242^347^[REPLACE] int monthsAgo = now.get ( Calendar.MONTH )  - i;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^if  ( monthsAgo  >  0 )  {^316^^^^^242^347^[REPLACE] if  ( monthsAgo <= 0 )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^now.add ( Calendar.DATE, -7 ) ;return now;^323^324^325^326^^242^347^[ADD] if  ( value.equals ( "week" )  )  { now.add ( Calendar.DATE, -7 ) ; return now; }^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( value.endsWith ( "yesterday" )  )  {^327^^^^^242^347^[REPLACE] } else if  ( value.equals ( "yesterday" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( value.endsWith ( "tomorrow" )  )  {^330^^^^^242^347^[REPLACE] } else if  ( value.equals ( "tomorrow" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^} else if  ( value.equals ( "yesterday" )  )  {^330^^^^^242^347^[REPLACE] } else if  ( value.equals ( "tomorrow" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^for  ( int i = 0 ; i < strings.length (  ) ; i++ )  {^300^^^^^242^347^[REPLACE] for  ( int i = 0; i < strings.length; i++ )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^^301^302^303^304^305^242^347^[ADD] if  ( value.equalsIgnoreCase ( strings[i] )  )  {  int daysAgo = now.get ( Calendar.DAY_OF_WEEK )  - i; if  ( daysAgo <= 0 )  { daysAgo += 7;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^if  ( val  >  0 )  {^304^^^^^242^347^[REPLACE] if  ( daysAgo <= 0 )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^return rounded;^308^^^^^242^347^[REPLACE] return now;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^int daysAgo = now.get ( Calendar.DAY_OF_WEEK )   !=  i;^303^^^^^242^347^[REPLACE] int daysAgo = now.get ( Calendar.DAY_OF_WEEK )  - i;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^if  ( daysAgo  >  0 )  {^304^^^^^242^347^[REPLACE] if  ( daysAgo <= 0 )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^daysAgo += 7 * 3;^305^^^^^242^347^[REPLACE] daysAgo += 7;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^daysAgo += 7 - 0;^305^^^^^242^347^[REPLACE] daysAgo += 7;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^for  ( minnt i = 0; i < strings.length + 4; i++ )  {^312^^^^^242^347^[REPLACE] for  ( int i = 0; i < strings.length; i++ )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REMOVE]^if  ( value.equals ( "yesterday" )  )  {     now.add ( DATE,  ( -1 )  ) ;     return now; }else     if  ( value.equals ( "tomorrow" )  )  {         now.add ( DATE, 1 ) ;         return now;     }^313^^^^^242^347^[REMOVE] ^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^if  ( monthsAgo  !=  0 )  {^316^^^^^242^347^[REPLACE] if  ( monthsAgo <= 0 )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^int monthsAgo = truncated .getTime (  )    ^  i;^315^^^^^242^347^[REPLACE] int monthsAgo = now.get ( Calendar.MONTH )  - i;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^if  ( monthsAgo  ==  0 )  {^316^^^^^242^347^[REPLACE] if  ( monthsAgo <= 0 )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^int monthsAgo = now.get ( Calendar.MONTH )   &&  i;^315^^^^^242^347^[REPLACE] int monthsAgo = now.get ( Calendar.MONTH )  - i;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^value = value.substring ( 4 ) ;^297^^^^^242^347^[REPLACE] value = value.substring ( 5 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^daysAgo += 7 / 3;^305^^^^^242^347^[REPLACE] daysAgo += 7;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^^300^301^^303^^242^347^[ADD] for  ( int i = 0; i < strings.length; i++ )  { if  ( value.equalsIgnoreCase ( strings[i] )  )  { int daysAgo = now.get ( Calendar.DAY_OF_WEEK )  - i;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^int daysAgo = now.getActualMinimum ( Calendar.DAY_OF_WEEK )   !=  i;^303^^^^^242^347^[REPLACE] int daysAgo = now.get ( Calendar.DAY_OF_WEEK )  - i;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^int monthsAgo = now.get ( Calendar.MONTH )   |  min;^315^^^^^242^347^[REPLACE] int monthsAgo = now.get ( Calendar.MONTH )  - i;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^^315^^^^^242^347^[ADD] int monthsAgo = now.get ( Calendar.MONTH )  - i;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^if  ( start  ==  1 )  {^258^^^^^242^347^[REPLACE] if  ( start < 0 )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^throw new UnsupportedOperationException  (" ")  ; ;^259^^^^^242^347^[REPLACE] throw new RuntimeException  (" ")  ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^if  ( value.equals ( "a" )  ) {^265^^^^^242^347^[REPLACE] if  ( value.equals ( "a" )  || value.equals ( "an" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^val =  Integer.parseInt ( null ) ;^268^^^^^265^269^[REPLACE] val = Integer.parseInt ( value ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^val = 3;^266^^^^^242^347^[REPLACE] val = 1;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^if  ( unit.equals ( "milliseconds" )  ) {^272^^^^^242^347^[REPLACE] if  ( unit.equals ( "milliseconds" )  || unit.equals ( "millisecond" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^^272^273^274^275^^242^347^[ADD] if  ( unit.equals ( "milliseconds" )  || unit.equals ( "millisecond" )  )  { now.add ( Calendar.MILLISECOND, -val ) ; } else if  ( unit.equals ( "seconds" )  || unit.equals ( "second" )  )  { now.add ( Calendar.SECOND, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  (  unit.equals ( "second" )  )  {^274^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "seconds" )  || unit.equals ( "second" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^}   now.add ( Calendar.SECOND, -val ) ;now.add ( Calendar.MINUTE, -val ) ;^274^275^276^277^^242^347^[ADD] else if  ( unit.equals ( "seconds" )  || unit.equals ( "second" )  )  { now.add ( Calendar.SECOND, -val ) ; } else if  ( unit.equals ( "minutes" )  || unit.equals ( "minute" )  )  { now.add ( Calendar.MINUTE, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^} else if  (  unit.equals ( "minute" )  )  {^276^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "minutes" )  || unit.equals ( "minute" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^}   now.add ( Calendar.MINUTE, -val ) ;now.add ( Calendar.HOUR, -val ) ;^276^277^278^279^^242^347^[ADD] else if  ( unit.equals ( "minutes" )  || unit.equals ( "minute" )  )  { now.add ( Calendar.MINUTE, -val ) ; } else if  ( unit.equals ( "hours" )  || unit.equals ( "hour" )  )  { now.add ( Calendar.HOUR, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  else {^278^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "hours" )  || unit.equals ( "hour" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( unit.equals ( "days" )  ) {^280^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "days" )  || unit.equals ( "day" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REMOVE]^if  (  ( unit.equals ( "seconds" )  )  ||  ( unit.equals ( "second" )  )  )  {     now.add ( SECOND,  ( -val )  ) ; }else     if  (  ( unit.equals ( "minutes" )  )  ||  ( unit.equals ( "minute" )  )  )  {         now.add ( MINUTE,  ( -val )  ) ;     }else         if  (  ( unit.equals ( "hours" )  )  ||  ( unit.equals ( "hour" )  )  )  {             now.add ( HOUR,  ( -val )  ) ;         }else             if  (  ( unit.equals ( "days" )  )  ||  ( unit.equals ( "day" )  )  )  {                 now.add ( DATE,  ( -val )  ) ;             }else                 if  (  ( unit.equals ( "weeks" )  )  ||  ( unit.equals ( "week" )  )  )  {                     now.add ( DATE,  (  ( -val )  * 7 )  ) ;                 }else                     if  (  ( unit.equals ( "fortnights" )  )  ||  ( unit.equals ( "fortnight" )  )  )  {                         now.add ( DATE,  (  ( -val )  * 14 )  ) ;                     }else                         if  (  ( unit.equals ( "months" )  )  ||  ( unit.equals ( "month" )  )  )  {                             now.add ( MONTH,  ( -val )  ) ;                         }else                             if  (  ( unit.equals ( "years" )  )  ||  ( unit.equals ( "year" )  )  )  {                                 now.add ( YEAR,  ( -val )  ) ;                             }else {                                 throw new RuntimeException ( "We do not understand that many units ago" ) ;                             }^280^^^^^242^347^[REMOVE] ^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( unit.equals ( "weeks" )  && unit.equals ( "week" )  )  {^282^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "weeks" )  || unit.equals ( "week" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^}   now.add ( Calendar.DATE, -val * 7 ) ;^282^283^284^285^^242^347^[ADD] else if  ( unit.equals ( "weeks" )  || unit.equals ( "week" )  )  { now.add ( Calendar.DATE, -val * 7 ) ; } else if  ( unit.equals ( "fortnights" )  || unit.equals ( "fortnight" )  )  { now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  else {^284^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "fortnights" )  || unit.equals ( "fortnight" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( unit.equals ( "months" )  ) {^286^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "months" )  || unit.equals ( "month" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REMOVE]^if  ( value.equals ( "yesterday" )  )  {     now.add ( DATE,  ( -1 )  ) ;     return now; }else     if  ( value.equals ( "tomorrow" )  )  {         now.add ( DATE, 1 ) ;         return now;     }^286^^^^^242^347^[REMOVE] ^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^} else if  ( unit.equals ( "years" )  ) {^288^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "years" )  || unit.equals ( "year" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^throw new UnsupportedOperationException  (" ")  ; ;^291^^^^^288^292^[REPLACE] throw new RuntimeException  (" ")  ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.YEAR, -start ) ;^289^^^^^242^347^[REPLACE] now.add ( Calendar.YEAR, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^return ;^291^^^^^242^347^[REPLACE] throw new RuntimeException  (" ")  ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^^291^^^^^242^347^[ADD] throw new RuntimeException  (" ")  ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.MONTH, -start ) ;^287^^^^^242^347^[REPLACE] now.add ( Calendar.MONTH, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  else {^288^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "years" )  || unit.equals ( "year" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^return ;^291^^^^^288^292^[REPLACE] throw new RuntimeException  (" ")  ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, val * 0 ) ;^285^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^^285^^^^^242^347^[ADD] now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  else {^286^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "months" )  || unit.equals ( "month" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^}   now.add ( Calendar.MONTH, -val ) ;now.add ( Calendar.YEAR, -val ) ;^286^287^288^289^^242^347^[ADD] else if  ( unit.equals ( "months" )  || unit.equals ( "month" )  )  { now.add ( Calendar.MONTH, -val ) ; } else if  ( unit.equals ( "years" )  || unit.equals ( "year" )  )  { now.add ( Calendar.YEAR, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  (  unit.equals ( "year" )  )  {^288^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "years" )  || unit.equals ( "year" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REMOVE]^if  (  ( unit.equals ( "months" )  )  ||  ( unit.equals ( "month" )  )  )  {     now.add ( MONTH,  ( -val )  ) ; }else     if  (  ( unit.equals ( "years" )  )  ||  ( unit.equals ( "year" )  )  )  {         now.add ( YEAR,  ( -val )  ) ;     }else {         throw new RuntimeException ( "We do not understand that many units ago" ) ;     }^288^^^^^242^347^[REMOVE] ^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^^291^^^^^288^292^[ADD] throw new RuntimeException  (" ")  ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.MONTH, -val ) ;^289^^^^^242^347^[REPLACE] now.add ( Calendar.YEAR, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^throw new UnsupportedOperationException  (" ")  ; ;^291^^^^^242^347^[REPLACE] throw new RuntimeException  (" ")  ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( unit.equals ( "years" )  && unit.equals ( "year" )  )  {^288^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "years" )  || unit.equals ( "year" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^^289^^^^^242^347^[ADD] now.add ( Calendar.YEAR, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, start * 7 ) ;^283^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 7 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now .equals ( this )  ;^289^^^^^242^347^[REPLACE] now.add ( Calendar.YEAR, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.HOUR, -val ) ;^287^^^^^242^347^[REPLACE] now.add ( Calendar.MONTH, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^} else if  (  unit.equals ( "year" )  )  {^288^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "years" )  || unit.equals ( "year" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.YEAR, -monthsAgo ) ;^289^^^^^242^347^[REPLACE] now.add ( Calendar.YEAR, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REMOVE]^startCutoff = focus.get ( Calendar.DAY_OF_WEEK )  - 3;^289^^^^^242^347^[REMOVE] ^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now .equals ( null )  ;^285^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( unit.equals ( "years" )  ) {^288^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "years" )  || unit.equals ( "year" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^} else if  ( unit.equals ( "years" )  && unit.equals ( "year" )  )  {^288^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "years" )  || unit.equals ( "year" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now .equals ( null )  ;^289^^^^^242^347^[REPLACE] now.add ( Calendar.YEAR, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now .equals ( null )  ;^281^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  else {^282^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "weeks" )  || unit.equals ( "week" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^} else if  ( unit.equals ( "months" )  && unit.equals ( "month" )  )  {^286^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "months" )  || unit.equals ( "month" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^} else if  ( original.equals ( "years" )  && unit.equals ( "year" )  )  {^288^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "years" )  || unit.equals ( "year" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REMOVE]^startCutoff = focus.get ( Calendar.DAY_OF_WEEK )  - 3;^287^^^^^242^347^[REMOVE] ^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, val * 14 ) ;^285^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  (  unit.equals ( "month" )  )  {^286^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "months" )  || unit.equals ( "month" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^}^288^289^290^291^292^242^347^[ADD] else if  ( unit.equals ( "years" )  || unit.equals ( "year" )  )  { now.add ( Calendar.YEAR, -val ) ; } else { throw new RuntimeException  (" ")  ; }^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, val * 7 ) ;^283^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 7 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^^283^^^^^242^347^[ADD] now.add ( Calendar.DATE, -val * 7 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.MONTH, -max ) ;^287^^^^^242^347^[REPLACE] now.add ( Calendar.MONTH, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^^287^^^^^242^347^[ADD] now.add ( Calendar.MONTH, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.YEAR, -max ) ;^289^^^^^242^347^[REPLACE] now.add ( Calendar.YEAR, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, -val  <  14L ) ;^285^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^}   now.add ( Calendar.YEAR, -val ) ;^286^287^288^289^^242^347^[ADD] else if  ( unit.equals ( "months" )  || unit.equals ( "month" )  )  { now.add ( Calendar.MONTH, -val ) ; } else if  ( unit.equals ( "years" )  || unit.equals ( "year" )  )  { now.add ( Calendar.YEAR, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^}   now.add ( Calendar.YEAR, -val ) ;^288^289^290^291^292^242^347^[ADD] else if  ( unit.equals ( "years" )  || unit.equals ( "year" )  )  { now.add ( Calendar.YEAR, -val ) ; } else { throw new RuntimeException  (" ")  ; }^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now .equals ( true )  ;^289^^^^^242^347^[REPLACE] now.add ( Calendar.YEAR, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.MONTH, -val ) ;^279^^^^^242^347^[REPLACE] now.add ( Calendar.HOUR, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^} else if  ( unit.equals ( "days" )  && unit.equals ( "day" )  )  {^280^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "days" )  || unit.equals ( "day" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( unit.equals ( "fortnights" )  && unit.equals ( "fortnight" )  )  {^284^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "fortnights" )  || unit.equals ( "fortnight" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( original.equals ( "years" )  && unit.equals ( "year" )  )  {^288^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "years" )  || unit.equals ( "year" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, -val  &&  7 ) ;^283^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 7 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  (  unit.equals ( "fortnight" )  )  {^284^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "fortnights" )  || unit.equals ( "fortnight" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( unit.equals ( "months" )  && unit.equals ( "month" )  )  {^286^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "months" )  || unit.equals ( "month" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE,val * 14 ) ;^285^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, -start ) ;^281^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REMOVE]^if  (  ( unit.equals ( "seconds" )  )  ||  ( unit.equals ( "second" )  )  )  {     now.add ( SECOND,  ( -val )  ) ; }else     if  (  ( unit.equals ( "minutes" )  )  ||  ( unit.equals ( "minute" )  )  )  {         now.add ( MINUTE,  ( -val )  ) ;     }else         if  (  ( unit.equals ( "hours" )  )  ||  ( unit.equals ( "hour" )  )  )  {             now.add ( HOUR,  ( -val )  ) ;         }else             if  (  ( unit.equals ( "days" )  )  ||  ( unit.equals ( "day" )  )  )  {                 now.add ( DATE,  ( -val )  ) ;             }else                 if  (  ( unit.equals ( "weeks" )  )  ||  ( unit.equals ( "week" )  )  )  {                     now.add ( DATE,  (  ( -val )  * 7 )  ) ;                 }else                     if  (  ( unit.equals ( "fortnights" )  )  ||  ( unit.equals ( "fortnight" )  )  )  {                         now.add ( DATE,  (  ( -val )  * 14 )  ) ;                     }else                         if  (  ( unit.equals ( "months" )  )  ||  ( unit.equals ( "month" )  )  )  {                             now.add ( MONTH,  ( -val )  ) ;                         }else                             if  (  ( unit.equals ( "years" )  )  ||  ( unit.equals ( "year" )  )  )  {                                 now.add ( YEAR,  ( -val )  ) ;                             }else {                                 throw new RuntimeException ( "We do not understand that many units ago" ) ;                             }^282^^^^^242^347^[REMOVE] ^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^} else if  (  unit.equals ( "fortnight" )  )  {^284^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "fortnights" )  || unit.equals ( "fortnight" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REMOVE]^if  (  ( unit.equals ( "weeks" )  )  ||  ( unit.equals ( "week" )  )  )  {     now.add ( DATE,  (  ( -val )  * 7 )  ) ; }else     if  (  ( unit.equals ( "fortnights" )  )  ||  ( unit.equals ( "fortnight" )  )  )  {         now.add ( DATE,  (  ( -val )  * 14 )  ) ;     }else         if  (  ( unit.equals ( "months" )  )  ||  ( unit.equals ( "month" )  )  )  {             now.add ( MONTH,  ( -val )  ) ;         }else             if  (  ( unit.equals ( "years" )  )  ||  ( unit.equals ( "year" )  )  )  {                 now.add ( YEAR,  ( -val )  ) ;             }else {                 throw new RuntimeException ( "We do not understand that many units ago" ) ;             }^284^^^^^242^347^[REMOVE] ^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, -val *val ) ;^285^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( unit.endsWith ( "months" )  && unit.equals ( "month" )  )  {^286^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "months" )  || unit.equals ( "month" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE,val * 7 - 3 ) ;^283^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 7 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now .equals ( this )  ;^287^^^^^242^347^[REPLACE] now.add ( Calendar.MONTH, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE,monthsAgo * 14 ) ;^285^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.MINUTE, -start ) ;^277^^^^^242^347^[REPLACE] now.add ( Calendar.MINUTE, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( unit.equals ( "hours" )  && unit.equals ( "hour" )  )  {^278^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "hours" )  || unit.equals ( "hour" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^}   now.add ( Calendar.HOUR, -val ) ;now.add ( Calendar.DATE, -val ) ;^278^279^280^281^^242^347^[ADD] else if  ( unit.equals ( "hours" )  || unit.equals ( "hour" )  )  { now.add ( Calendar.HOUR, -val ) ; } else if  ( unit.equals ( "days" )  || unit.equals ( "day" )  )  { now.add ( Calendar.DATE, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^} else if  ( original.equals ( "days" )  ) {^280^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "days" )  || unit.equals ( "day" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^}^284^285^286^287^^242^347^[ADD] else if  ( unit.equals ( "fortnights" )  || unit.equals ( "fortnight" )  )  { now.add ( Calendar.DATE, -val * 14 ) ; } else if  ( unit.equals ( "months" )  || unit.equals ( "month" )  )  { now.add ( Calendar.MONTH, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now .equals ( null )  ;^287^^^^^242^347^[REPLACE] now.add ( Calendar.MONTH, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE,start * 14 ) ;^285^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.MONTH, -monthsAgo ) ;^287^^^^^242^347^[REPLACE] now.add ( Calendar.MONTH, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE,val * 7 ) ;^283^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 7 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( unit.equals ( "fortnights" )  ) {^284^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "fortnights" )  || unit.equals ( "fortnight" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^} else if  ( unit.endsWith ( "years" )  && unit.equals ( "year" )  )  {^288^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "years" )  || unit.equals ( "year" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, monthsAgo * 14 ) ;^285^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( unit .equalsIgnoreCase ( value )   && unit^288^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "years" )  || unit.equals ( "year" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.MONTH, -val ) ;^281^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^} else if  ( unit.equals ( "weeks" )  ) {^282^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "weeks" )  || unit.equals ( "week" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( unit .equalsIgnoreCase ( original )   && unit^288^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "years" )  || unit.equals ( "year" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE,start * 7 ) ;^283^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 7 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( unit.endsWith ( "years" )  && unit.equals ( "year" )  )  {^288^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "years" )  || unit.equals ( "year" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REMOVE]^startCutoff = focus.get ( Calendar.DAY_OF_WEEK )  - 3;^285^^^^^242^347^[REMOVE] ^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^} else if  ( unit .equalsIgnoreCase ( value )   && unit^288^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "years" )  || unit.equals ( "year" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.HOUR, -start ) ;^279^^^^^242^347^[REPLACE] now.add ( Calendar.HOUR, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^}   now.add ( Calendar.DATE, -val ) ;now.add ( Calendar.DATE, -val * 7 ) ;^280^281^282^283^^242^347^[ADD] else if  ( unit.equals ( "days" )  || unit.equals ( "day" )  )  { now.add ( Calendar.DATE, -val ) ; } else if  ( unit.equals ( "weeks" )  || unit.equals ( "week" )  )  { now.add ( Calendar.DATE, -val * 7 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^^281^^^^^242^347^[ADD] now.add ( Calendar.DATE, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^} else if  ( unit.equals ( "weeks" )  && unit.equals ( "week" )  )  {^282^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "weeks" )  || unit.equals ( "week" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^}^282^283^284^285^^242^347^[ADD] else if  ( unit.equals ( "weeks" )  || unit.equals ( "week" )  )  { now.add ( Calendar.DATE, -val * 7 ) ; } else if  ( unit.equals ( "fortnights" )  || unit.equals ( "fortnight" )  )  { now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE,max * 14 ) ;^285^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( unit .equalsIgnoreCase ( unit )   && unit^288^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "years" )  || unit.equals ( "year" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( original.equals ( "years" )  ) {^288^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "years" )  || unit.equals ( "year" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now .equals ( 0 )  ;^289^^^^^242^347^[REPLACE] now.add ( Calendar.YEAR, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, val * 7 + 2 ) ;^283^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 7 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( original.endsWith ( "years" )  && unit.equals ( "year" )  )  {^288^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "years" )  || unit.equals ( "year" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.SECOND, -start ) ;^275^^^^^242^347^[REPLACE] now.add ( Calendar.SECOND, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REMOVE]^startCutoff = focus.get ( Calendar.DAY_OF_WEEK )  - 3;^275^^^^^242^347^[REMOVE] ^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^} else if  ( unit .equalsIgnoreCase ( unit )   && unit^280^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "days" )  || unit.equals ( "day" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( unit.equals ( "weeks" )  ) {^282^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "weeks" )  || unit.equals ( "week" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE,start * 0 ) ;^285^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^} else if  ( unit.equals ( "months" )  ) {^286^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "months" )  || unit.equals ( "month" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now .equals ( this )  ;^283^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 7 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^} else if  ( unit.endsWith ( "months" )  ) {^286^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "months" )  || unit.equals ( "month" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE,start * 2 ) ;^285^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^} else if  ( unit.endsWith ( "fortnights" )  ) {^284^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "fortnights" )  || unit.equals ( "fortnight" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now .equals ( 1 )  ;^287^^^^^242^347^[REPLACE] now.add ( Calendar.MONTH, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, -val *val ) ;^283^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 7 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^} else if  ( unit .equalsIgnoreCase ( value )   && unit^284^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "fortnights" )  || unit.equals ( "fortnight" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  else {^280^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "days" )  || unit.equals ( "day" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^} else if  (  unit.equals ( "week" )  )  {^282^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "weeks" )  || unit.equals ( "week" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, -start  ||  7 + 3 ) ;^283^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 7 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( unit.endsWith ( "years" )  ) {^288^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "years" )  || unit.equals ( "year" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now .equals ( 1 )  ;^285^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^} else if  (  unit.equals ( "month" )  )  {^286^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "months" )  || unit.equals ( "month" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now .equals ( false )  ;^281^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^} else if  ( unit.equals ( "fortnights" )  && unit.equals ( "fortnight" )  )  {^284^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "fortnights" )  || unit.equals ( "fortnight" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, -val *monthsAgo ) ;^285^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.MONTH, -val ) ;^277^^^^^242^347^[REPLACE] now.add ( Calendar.MINUTE, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( unit .equalsIgnoreCase ( original )   && unit^278^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "hours" )  || unit.equals ( "hour" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now .equals ( 1 )  ;^289^^^^^242^347^[REPLACE] now.add ( Calendar.YEAR, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^} else if  ( unit .equalsIgnoreCase ( unit )   && unit^288^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "years" )  || unit.equals ( "year" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, val * 4 ) ;^285^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now .equals ( null )  ;^283^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 7 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, val * 6 ) ;^285^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now .equals ( this )  ;^281^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( unit .equalsIgnoreCase ( unit )   && unit^282^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "weeks" )  || unit.equals ( "week" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, val * 12 ) ;^285^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^} else if  ( unit.equals ( "fortnights" )  ) {^284^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "fortnights" )  || unit.equals ( "fortnight" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( original.endsWith ( "months" )  ) {^286^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "months" )  || unit.equals ( "month" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( unit.equals ( "days" )  && unit.equals ( "day" )  )  {^280^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "days" )  || unit.equals ( "day" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, -val  |  14 ) ;^285^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now .equals ( false )  ;^289^^^^^242^347^[REPLACE] now.add ( Calendar.YEAR, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now .equals ( true )  ;^287^^^^^242^347^[REPLACE] now.add ( Calendar.MONTH, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE,val * 14 - 2 ) ;^285^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.SECOND, -val ) ;^273^^^^^242^347^[REPLACE] now.add ( Calendar.MILLISECOND, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( unit.equals ( "seconds" )  ) {^274^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "seconds" )  || unit.equals ( "second" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  else {^276^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "minutes" )  || unit.equals ( "minute" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REMOVE]^if  (  ( unit.equals ( "seconds" )  )  ||  ( unit.equals ( "second" )  )  )  {     now.add ( SECOND,  ( -val )  ) ; }else     if  (  ( unit.equals ( "minutes" )  )  ||  ( unit.equals ( "minute" )  )  )  {         now.add ( MINUTE,  ( -val )  ) ;     }else         if  (  ( unit.equals ( "hours" )  )  ||  ( unit.equals ( "hour" )  )  )  {             now.add ( HOUR,  ( -val )  ) ;         }else             if  (  ( unit.equals ( "days" )  )  ||  ( unit.equals ( "day" )  )  )  {                 now.add ( DATE,  ( -val )  ) ;             }else                 if  (  ( unit.equals ( "weeks" )  )  ||  ( unit.equals ( "week" )  )  )  {                     now.add ( DATE,  (  ( -val )  * 7 )  ) ;                 }else                     if  (  ( unit.equals ( "fortnights" )  )  ||  ( unit.equals ( "fortnight" )  )  )  {                         now.add ( DATE,  (  ( -val )  * 14 )  ) ;                     }else                         if  (  ( unit.equals ( "months" )  )  ||  ( unit.equals ( "month" )  )  )  {                             now.add ( MONTH,  ( -val )  ) ;                         }else                             if  (  ( unit.equals ( "years" )  )  ||  ( unit.equals ( "year" )  )  )  {                                 now.add ( YEAR,  ( -val )  ) ;                             }else {                                 throw new RuntimeException ( "We do not understand that many units ago" ) ;                             }^278^^^^^242^347^[REMOVE] ^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  (  unit.equals ( "day" )  )  {^280^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "days" )  || unit.equals ( "day" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, val * 1 ) ;^285^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, -val  &&  5 ) ;^283^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 7 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^} else if  ( unit .equalsIgnoreCase ( original )   && unit^288^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "years" )  || unit.equals ( "year" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, -val *start ) ;^283^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 7 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now .equals ( 0 )  ;^287^^^^^242^347^[REPLACE] now.add ( Calendar.MONTH, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REMOVE]^startCutoff = focus.get ( Calendar.DAY_OF_WEEK )  - 3;^283^^^^^242^347^[REMOVE] ^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  (  unit.equals ( "week" )  )  {^282^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "weeks" )  || unit.equals ( "week" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( unit .equalsIgnoreCase ( value )   && unit^284^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "fortnights" )  || unit.equals ( "fortnight" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now .equals ( true )  ;^283^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 7 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE,monthsAgo * 2 ) ;^285^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE,val * 5 ) ;^283^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 7 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE,monthsAgo * 14 >>> 2 ) ;^285^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, -max ) ;^281^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now .equals ( false )  ;^287^^^^^242^347^[REPLACE] now.add ( Calendar.MONTH, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.MONTH, -val ) ;^275^^^^^242^347^[REPLACE] now.add ( Calendar.SECOND, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^}   now.add ( Calendar.HOUR, -val ) ;^276^277^278^279^^242^347^[ADD] else if  ( unit.equals ( "minutes" )  || unit.equals ( "minute" )  )  { now.add ( Calendar.MINUTE, -val ) ; } else if  ( unit.equals ( "hours" )  || unit.equals ( "hour" )  )  { now.add ( Calendar.HOUR, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, -start  ==  7 ) ;^283^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 7 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, -start *val ) ;^285^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( original .equalsIgnoreCase ( value )   && unit^288^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "years" )  || unit.equals ( "year" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now .equals ( 0 )  ;^281^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^} else if  ( original.equals ( "weeks" )  ) {^282^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "weeks" )  || unit.equals ( "week" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( unit.endsWith ( "months" )  ) {^286^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "months" )  || unit.equals ( "month" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.HOUR, -monthsAgo ) ;^279^^^^^242^347^[REPLACE] now.add ( Calendar.HOUR, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, -val  !=  14 ) ;^285^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^} else if  ( original .equalsIgnoreCase ( value )   && unit^288^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "years" )  || unit.equals ( "year" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE,val * 3 ) ;^283^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 7 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^} else if  ( unit.endsWith ( "years" )  ) {^288^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "years" )  || unit.equals ( "year" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^}   now.add ( Calendar.DATE, -val * 7 ) ;^280^281^282^283^^242^347^[ADD] else if  ( unit.equals ( "days" )  || unit.equals ( "day" )  )  { now.add ( Calendar.DATE, -val ) ; } else if  ( unit.equals ( "weeks" )  || unit.equals ( "week" )  )  { now.add ( Calendar.DATE, -val * 7 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, -val  >  14 % 2 ) ;^285^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( original.equals ( "months" )  && unit.equals ( "month" )  )  {^286^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "months" )  || unit.equals ( "month" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, -monthsAgo  !=  7 ) ;^283^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 7 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REMOVE]^} else if  ( unit.equals ( "days" )  || unit.equals ( "day" )  )  { now.add ( Calendar.DATE, -val ) ;^281^^^^^242^347^[REMOVE] ^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE,monthsAgo * 16 ) ;^285^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE,monthsAgo * 7 ) ;^283^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 7 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( original.equals ( "months" )  ) {^286^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "months" )  || unit.equals ( "month" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.HOUR, -max ) ;^279^^^^^242^347^[REPLACE] now.add ( Calendar.HOUR, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^} else if  ( unit.endsWith ( "fortnights" )  && unit.equals ( "fortnight" )  )  {^284^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "fortnights" )  || unit.equals ( "fortnight" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE,val * 7 + 1 ) ;^283^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 7 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^} else if  ( original.equals ( "months" )  && unit.equals ( "month" )  )  {^286^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "months" )  || unit.equals ( "month" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, -start *monthsAgo ) ;^285^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE,val * 14 * 2 ) ;^285^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^} else if  ( original.endsWith ( "months" )  ) {^286^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "months" )  || unit.equals ( "month" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^value = value.substring ( 0, value.size (  )  - 4 ) ;^254^^^^^242^347^[REPLACE] value = value.substring ( 0, value.length (  )  - 4 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^value = value.substring ( 3, start ) ;^262^^^^^242^347^[REPLACE] value = value.substring ( 0, start ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^^262^^^^^242^347^[ADD] value = value.substring ( 0, start ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^val = 4;^266^^^^^242^347^[REPLACE] val = 1;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^val =  Integer.parseInt ( null ) ;^268^^^^^242^347^[REPLACE] val = Integer.parseInt ( value ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^return truncated;^293^^^^^242^347^[REPLACE] return now;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^int start = value.endsWith ( " " ) ;^257^^^^^242^347^[REPLACE] int start = value.indexOf ( " " ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^String unit = value .substring ( RANGE_WEEK_MONDAY , RANGE_MONTH_SUNDAY )  ;^261^^^^^242^347^[REPLACE] String unit = value.substring ( start + 1 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^int val = 1;^264^^^^^242^347^[REPLACE] int val = 0;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^return ;^259^^^^^242^347^[REPLACE] throw new RuntimeException  (" ")  ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^^259^^^^^242^347^[ADD] throw new RuntimeException  (" ")  ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^if  ( val  !=  0 )  {^258^^^^^242^347^[REPLACE] if  ( start < 0 )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^if  ( value.equals ( "a" )  && value.equals ( "an" )  )  {^265^^^^^242^347^[REPLACE] if  ( value.equals ( "a" )  || value.equals ( "an" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^^268^^^^^265^269^[ADD] val = Integer.parseInt ( value ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^^266^^^^^242^347^[ADD] val = 1;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^if  ( unit.equals ( "milliseconds" )  && unit.equals ( "millisecond" )  )  {^272^^^^^242^347^[REPLACE] if  ( unit.equals ( "milliseconds" )  || unit.equals ( "millisecond" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  else {^274^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "seconds" )  || unit.equals ( "second" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^}   now.add ( Calendar.MINUTE, -val ) ;^274^275^276^277^^242^347^[ADD] else if  ( unit.equals ( "seconds" )  || unit.equals ( "second" )  )  { now.add ( Calendar.SECOND, -val ) ; } else if  ( unit.equals ( "minutes" )  || unit.equals ( "minute" )  )  { now.add ( Calendar.MINUTE, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  (  unit.equals ( "hour" )  )  {^278^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "hours" )  || unit.equals ( "hour" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^} else if  ( unit.equals ( "days" )  ) {^280^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "days" )  || unit.equals ( "day" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( original.equals ( "fortnights" )  ) {^284^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "fortnights" )  || unit.equals ( "fortnight" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, -val  <=  14 ) ;^285^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, monthsAgo * 3 ) ;^285^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, -start *monthsAgo ) ;^283^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 7 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE,monthsAgo * 14 >>> 1 ) ;^285^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE,val * 14 - 3 ) ;^285^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, -val  ==  7 ) ;^283^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 7 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^} else if  ( original.equals ( "weeks" )  && unit.equals ( "week" )  )  {^282^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "weeks" )  || unit.equals ( "week" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, -val *start ) ;^285^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, -val  !=  7 ) ;^283^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 7 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, -val  ==  14 ) ;^285^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now .equals ( false )  ;^283^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 7 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE,monthsAgo * 0 ) ;^285^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, -val  &  14 ) ;^285^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE,val * 7 * 1 ) ;^283^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 7 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now .equals ( false )  ;^285^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now .equals ( null )  ;^275^^^^^242^347^[REPLACE] now.add ( Calendar.SECOND, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( unit .equalsIgnoreCase ( original )   && unit^282^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "weeks" )  || unit.equals ( "week" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^} else if  ( original.equals ( "years" )  ) {^288^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "years" )  || unit.equals ( "year" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE,start * 4 ) ;^283^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 7 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^^279^^^^^242^347^[ADD] now.add ( Calendar.HOUR, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REMOVE]^startCutoff = focus.get ( Calendar.DAY_OF_WEEK )  - 3;^277^^^^^242^347^[REMOVE] ^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^} else if  ( unit .equalsIgnoreCase ( unit )   && unit^286^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "months" )  || unit.equals ( "month" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, val * 15 ) ;^285^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, -val  ^  14 ) ;^285^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, -val *monthsAgo ) ;^283^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 7 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( unit.endsWith ( "fortnights" )  && unit.equals ( "fortnight" )  )  {^284^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "fortnights" )  || unit.equals ( "fortnight" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now .equals ( true )  ;^273^^^^^242^347^[REPLACE] now.add ( Calendar.MILLISECOND, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^} else if  (  unit.equals ( "second" )  )  {^274^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "seconds" )  || unit.equals ( "second" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( unit.equals ( "minutes" )  && unit.equals ( "minute" )  )  {^276^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "minutes" )  || unit.equals ( "minute" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, monthsAgo * 7 ) ;^283^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 7 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( unit .equalsIgnoreCase ( original )   && unit^286^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "months" )  || unit.equals ( "month" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, -val  !=  6 ) ;^285^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE,val * 1 ) ;^285^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( unit.endsWith ( "days" )  && unit.equals ( "day" )  )  {^280^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "days" )  || unit.equals ( "day" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, -val  &&  14 ) ;^285^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE,start * 1 ) ;^283^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 7 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, val * 5 ) ;^285^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, monthsAgo * 0 ) ;^285^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^} else if  ( original .equalsIgnoreCase ( unit )   && unit^286^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "months" )  || unit.equals ( "month" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, -val  <  3 ) ;^285^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now .equals ( null )  ;^279^^^^^242^347^[REPLACE] now.add ( Calendar.HOUR, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, -start *val ) ;^283^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 7 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( unit .equalsIgnoreCase ( value )   && unit^286^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "months" )  || unit.equals ( "month" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, -val  &&  8 ) ;^285^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, -val  <=  7 * 0 ) ;^283^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 7 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( unit.equals ( "hours" )  ) {^278^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "hours" )  || unit.equals ( "hour" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( unit.endsWith ( "days" )  ) {^280^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "days" )  || unit.equals ( "day" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE,val * 7L ) ;^283^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 7 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, val * 7 + 4 ) ;^283^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 7 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, -val  <  11 ) ;^285^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^} else if  ( unit.endsWith ( "days" )  ) {^280^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "days" )  || unit.equals ( "day" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE,val * 5 ) ;^285^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, val * 7L ) ;^283^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 7 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, -val  >=  7 ) ;^283^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 7 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( value.startsWith ( "last " )  )  {^294^^^^^242^347^[REPLACE] } else if  ( value.startsWith ( "last " )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^}   value = value.substring ( 5 ) ;^294^295^^297^^242^347^[ADD] else if  ( value.startsWith ( "last " )  )  {  value = value.substring ( 5 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  else {^327^^^^^242^347^[REPLACE] } else if  ( value.equals ( "yesterday" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^}   return now;^330^331^332^333^^242^347^[ADD] else if  ( value.equals ( "tomorrow" )  )  { now.add ( Calendar.DATE, 1 ) ; return now; }^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REMOVE]^if  ( value.equals ( "yesterday" )  )  {     now.add ( DATE,  ( -1 )  ) ;     return now; }else     if  ( value.equals ( "tomorrow" )  )  {         now.add ( DATE, 1 ) ;         return now;     }^330^^^^^242^347^[REMOVE] ^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^if  ( val  !=  0 )  {^304^^^^^242^347^[REPLACE] if  ( daysAgo <= 0 )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^^304^305^306^^^242^347^[ADD] if  ( daysAgo <= 0 )  { daysAgo += 7; }^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^daysAgo += 7 - 2;^305^^^^^242^347^[REPLACE] daysAgo += 7;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^int daysAgo = truncated.get ( Calendar.DAY_OF_WEEK )   >=  i;^303^^^^^242^347^[REPLACE] int daysAgo = now.get ( Calendar.DAY_OF_WEEK )  - i;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^if  ( max  !=  0 )  {^316^^^^^242^347^[REPLACE] if  ( monthsAgo <= 0 )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^monthsAgo += 12 - 4;^317^^^^^242^347^[REPLACE] monthsAgo += 12;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^if  (val  ==  0 )  {^316^^^^^242^347^[REPLACE] if  ( monthsAgo <= 0 )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^monthsAgo += 1;^317^^^^^242^347^[REPLACE] monthsAgo += 12;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^if  ( value .equalsIgnoreCase ( value )   )  {^323^^^^^242^347^[REPLACE] if  ( value.equals ( "week" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^for  ( int i = 0; i < strings.length (  ) ; i++ )  {^300^^^^^242^347^[REPLACE] for  ( int i = 0; i < strings.length; i++ )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^if  (monthsAgo  <  0 )  {^304^^^^^242^347^[REPLACE] if  ( daysAgo <= 0 )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^daysAgo += 7 * 1;^305^^^^^242^347^[REPLACE] daysAgo += 7;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^if  ( daysAgo  !=  0 )  {^304^^^^^242^347^[REPLACE] if  ( daysAgo <= 0 )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^for  ( int i = 0; i < strings.length - 4; i++ )  {^312^^^^^242^347^[REPLACE] for  ( int i = 0; i < strings.length; i++ )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^if  (val  !=  0 )  {^316^^^^^242^347^[REPLACE] if  ( monthsAgo <= 0 )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^monthsAgo += 6;^317^^^^^242^347^[REPLACE] monthsAgo += 12;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^int monthsAgo = truncated .getTime (  )    >=  i;^315^^^^^242^347^[REPLACE] int monthsAgo = now.get ( Calendar.MONTH )  - i;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^^316^317^318^^^242^347^[ADD] if  ( monthsAgo <= 0 )  { monthsAgo += 12; }^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^monthsAgo += 12 + 4;^317^^^^^242^347^[REPLACE] monthsAgo += 12;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^monthsAgo += 12 * 4;^317^^^^^242^347^[REPLACE] monthsAgo += 12;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^int monthsAgo = now.get ( Calendar.MONTH )   <  i;^315^^^^^242^347^[REPLACE] int monthsAgo = now.get ( Calendar.MONTH )  - i;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^value = value.substring ( 0, start ) ; ;^297^^^^^242^347^[REPLACE] value = value.substring ( 5 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^monthsAgo += 0;^317^^^^^242^347^[REPLACE] monthsAgo += 12;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^int daysAgo = now.get ( Calendar.DAY_OF_WEEK )   |  min;^303^^^^^242^347^[REPLACE] int daysAgo = now.get ( Calendar.DAY_OF_WEEK )  - i;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^int monthsAgo = now.get ( Calendar.MONTH )   ^  i;^315^^^^^242^347^[REPLACE] int monthsAgo = now.get ( Calendar.MONTH )  - i;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^daysAgo += 5;^305^^^^^242^347^[REPLACE] daysAgo += 7;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^int daysAgo = now .getTime (  )   -val;^303^^^^^242^347^[REPLACE] int daysAgo = now.get ( Calendar.DAY_OF_WEEK )  - i;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REMOVE]^if  ( monthsAgo <= 0 )  {     monthsAgo += 12; }^304^^^^^242^347^[REMOVE] ^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^daysAgo += 7 >>> 4;^305^^^^^242^347^[REPLACE] daysAgo += 7;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^if  ( monthsAgo  >  2 )  {^316^^^^^242^347^[REPLACE] if  ( monthsAgo <= 0 )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^monthsAgo += 13;^317^^^^^242^347^[REPLACE] monthsAgo += 12;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^int monthsAgo = now .getTime (  )    <  i;^315^^^^^242^347^[REPLACE] int monthsAgo = now.get ( Calendar.MONTH )  - i;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^monthsAgo += 12 << 0;^317^^^^^242^347^[REPLACE] monthsAgo += 12;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^if  ( offset >= 15 )  {^323^^^^^242^347^[REPLACE] if  ( value.equals ( "week" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^}   now.add ( Calendar.DATE, -1 ) ;return now;now.add ( Calendar.DATE, 1 ) ;^327^328^329^330^331^242^347^[ADD] else if  ( value.equals ( "yesterday" )  )  { now.add ( Calendar.DATE, -1 ) ; return now; } else if  ( value.equals ( "tomorrow" )  )  { now.add ( Calendar.DATE, 1 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^}   now.add ( Calendar.DATE, 1 ) ;return now;^330^331^332^333^^242^347^[ADD] else if  ( value.equals ( "tomorrow" )  )  { now.add ( Calendar.DATE, 1 ) ; return now; }^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( value .equalsIgnoreCase ( unit )   )  {^330^^^^^242^347^[REPLACE] } else if  ( value.equals ( "tomorrow" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^for  ( int i = 0; i < strings.length + 2; i++ )  {^300^^^^^242^347^[REPLACE] for  ( int i = 0; i < strings.length; i++ )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^if  ( daysAgo  != monthsAgo )  {^304^^^^^242^347^[REPLACE] if  ( daysAgo <= 0 )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^int daysAgo = truncated.get ( Calendar.DAY_OF_WEEK )  -val;^303^^^^^242^347^[REPLACE] int daysAgo = now.get ( Calendar.DAY_OF_WEEK )  - i;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^if  ( start  ==  0 )  {^304^^^^^242^347^[REPLACE] if  ( daysAgo <= 0 )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^daysAgo += 7 - 3;^305^^^^^242^347^[REPLACE] daysAgo += 7;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^for  ( int i = 0; i < strings.length /  0.5 ; i++ )  {^312^^^^^242^347^[REPLACE] for  ( int i = 0; i < strings.length; i++ )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^if  ( val  > start )  {^316^^^^^242^347^[REPLACE] if  ( monthsAgo <= 0 )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^int monthsAgo = truncated .getTime (  )    ==  i;^315^^^^^242^347^[REPLACE] int monthsAgo = now.get ( Calendar.MONTH )  - i;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^if  ( monthsAgo  !=  2 )  {^316^^^^^242^347^[REPLACE] if  ( monthsAgo <= 0 )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^monthsAgo += 12 % 2;^317^^^^^242^347^[REPLACE] monthsAgo += 12;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^int monthsAgo = now.getActualMinimum ( Calendar.MONTH )   <=  i;^315^^^^^242^347^[REPLACE] int monthsAgo = now.get ( Calendar.MONTH )  - i;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^value = value.substring ( 4, start ) ;^262^^^^^242^347^[REPLACE] value = value.substring ( 0, start ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^val = 1L;^266^^^^^242^347^[REPLACE] val = 1;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^^268^^^^^242^347^[ADD] val = Integer.parseInt ( value ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^value = value.substring ( 5 << 3 ) ;^297^^^^^242^347^[REPLACE] value = value.substring ( 5 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^String unit = value.substring ( start +val ) ;^261^^^^^242^347^[REPLACE] String unit = value.substring ( start + 1 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^value = value.substring ( 0, start ) ;^261^262^^^^242^347^[ADD] String unit = value.substring ( start + 1 ) ; value = value.substring ( 0, start ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^int val = 4;^264^^^^^242^347^[REPLACE] int val = 0;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^for  ( int i = 0 ; i < dateFormats.length (  ) ; i++ )  {^335^^^^^242^347^[REPLACE] for  ( int i = 0; i < dateFormats.length; i++ )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^Date datetime = dateFormats[i].parse ( original ) ;Calendar cal = Calendar.getInstance (  ) ;cal.setTime ( datetime ) ;return cal;^336^337^338^339^340^242^347^[ADD] try { Date datetime = dateFormats[i].parse ( original ) ; Calendar cal = Calendar.getInstance (  ) ; cal.setTime ( datetime ) ; return cal;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^return val;^340^^^^^242^347^[REPLACE] return cal;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^Date datetime = dateFormats[i].parse ( unit ) ;^337^^^^^242^347^[REPLACE] Date datetime = dateFormats[i].parse ( original ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^Calendar cal = Calendar.getTime (  ) ;^338^^^^^242^347^[REPLACE] Calendar cal = Calendar.getInstance (  ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^^338^^^^^242^347^[ADD] Calendar cal = Calendar.getInstance (  ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^^341^342^343^^^242^347^[ADD] catch  ( ParseException pe )  {  }^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^for  ( int i = 0 ; i < dateFormats.length; i++ )  {^335^^^^^242^347^[REPLACE] for  ( int i = 0; i < dateFormats.length; i++ )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^return ;^346^^^^^242^347^[REPLACE] throw new RuntimeException  (" ")  ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^Calendar start = true;^357^^^^^356^442^[REPLACE] Calendar start = null;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[REPLACE]^Calendar end = true;^358^^^^^356^442^[REPLACE] Calendar end = null;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[REPLACE]^Iterator it = new Iterator (  )  { Calendar spot = null;^359^^^^^356^442^[REPLACE] int startCutoff = Calendar.SUNDAY;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[ADD]^^359^^^^^356^442^[ADD] int startCutoff = Calendar.SUNDAY;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[REPLACE]^Calendar now = Calendar.getInstance (  ) ;^360^^^^^356^442^[REPLACE] int endCutoff = Calendar.SATURDAY;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[REPLACE]^if  (startCutoff  ||  RANGE_MONTH_MONDAY )  {^371^^^^^356^442^[REPLACE] if  ( rangeStyle == RANGE_MONTH_MONDAY )  {^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[REPLACE]^endCutoff = Calendar.SUNDAY; ;^372^^^^^356^442^[REPLACE] startCutoff = Calendar.MONDAY;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[REPLACE]^startCutoff = Calendar.MONDAY; ;^373^^^^^356^442^[REPLACE] endCutoff = Calendar.SUNDAY;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[REPLACE]^start = trunc ( focus, Calendar.DATE ) ; ;^365^^^^^356^442^[REPLACE] start = trunc ( focus, Calendar.MONTH ) ;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[ADD]^^365^^^^^356^442^[ADD] start = trunc ( focus, Calendar.MONTH ) ;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[REPLACE]^end =   ( Calendar )  null.clone (  ) ;^367^^^^^356^442^[REPLACE] end =  ( Calendar )  start.clone (  ) ;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[REPLACE]^start = trunc ( focus, Calendar.MONTH ) ; ;^381^^^^^356^442^[REPLACE] start = trunc ( focus, Calendar.DATE ) ;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[REPLACE]^start = trunc ( focus, Calendar.DATE ) ; ;^382^^^^^356^442^[REPLACE] end = trunc ( focus, Calendar.DATE ) ;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[REPLACE]^endCutoff = Calendar.SUNDAY; ;^388^^^^^356^442^[REPLACE] startCutoff = Calendar.MONDAY;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[REPLACE]^startCutoff = Calendar.MONDAY; ;^389^^^^^356^442^[REPLACE] endCutoff = Calendar.SUNDAY;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[REPLACE]^startCutoff = focus.get ( Calendar.DAY_OF_WEEK )  - 3; ;^392^^^^^356^442^[REPLACE] startCutoff = focus.get ( Calendar.DAY_OF_WEEK ) ;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[REPLACE]^endCutoff =val - 1 - 4;^393^^^^^356^442^[REPLACE] endCutoff = startCutoff - 1;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[REPLACE]^startCutoff = focus.get ( Calendar.DAY_OF_WEEK )   ==  1;^396^^^^^356^442^[REPLACE] startCutoff = focus.get ( Calendar.DAY_OF_WEEK )  - 3;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[ADD]^^396^^^^^356^442^[ADD] startCutoff = focus.get ( Calendar.DAY_OF_WEEK )  - 3;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[REPLACE]^endCutoff = focus.get ( Calendar.DAY_OF_WEEK )   ||  3;^397^^^^^356^442^[REPLACE] endCutoff = focus.get ( Calendar.DAY_OF_WEEK )  + 3;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[ADD]^^397^^^^^356^442^[ADD] endCutoff = focus.get ( Calendar.DAY_OF_WEEK )  + 3;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[REPLACE]^return ;^402^^^^^356^442^[REPLACE] throw new RuntimeException  (" ")  ;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[ADD]^^402^^^^^356^442^[ADD] throw new RuntimeException  (" ")  ;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[REPLACE]^if  ( startCutoff  ==  Calendar.SUNDAY )  {^404^^^^^356^442^[REPLACE] if  ( startCutoff < Calendar.SUNDAY )  {^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[REPLACE]^startCutoff += 2;^405^^^^^356^442^[REPLACE] startCutoff += 7;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[REPLACE]^startCutoff += 7 - 1;^405^^^^^356^442^[REPLACE] startCutoff += 7;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[REPLACE]^if  ( startCutoff  <=  Calendar.SATURDAY )  {^407^^^^^356^442^[REPLACE] if  ( endCutoff > Calendar.SATURDAY )  {^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[REPLACE]^endCutoff -= 9;^408^^^^^356^442^[REPLACE] endCutoff -= 7;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[REPLACE]^endCutoff -= 6;^408^^^^^356^442^[REPLACE] endCutoff -= 7;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[REPLACE]^while  ( start.get ( Calendar.DAY_OF_WEEK )   ==  val )  {^410^^^^^356^442^[REPLACE] while  ( start.get ( Calendar.DAY_OF_WEEK )  != startCutoff )  {^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[ADD]^^410^411^^^^356^442^[ADD] while  ( start.get ( Calendar.DAY_OF_WEEK )  != startCutoff )  { start.add ( Calendar.DATE, -1 ) ;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[REPLACE]^start.add ( Calendar.DATE, -1 >> 1 ) ;^411^^^^^356^442^[REPLACE] start.add ( Calendar.DATE, -1 ) ;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[REPLACE]^while  ( end.get ( Calendar.DAY_OF_WEEK )   ==  endCutoff )  {^413^^^^^356^442^[REPLACE] while  ( end.get ( Calendar.DAY_OF_WEEK )  != endCutoff )  {^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[REPLACE]^end.add ( Calendar.DATE, 3 ) ;^414^^^^^356^442^[REPLACE] end.add ( Calendar.DATE, 1 ) ;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[ADD]^^414^^^^^356^442^[ADD] end.add ( Calendar.DATE, 1 ) ;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[REPLACE]^final Calendar valFinal = start;^416^^^^^356^442^[REPLACE] final Calendar startFinal = start;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[REPLACE]^final Calendar truncatedFinal = end;^417^^^^^356^442^[REPLACE] final Calendar endFinal = end;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[ADD]^^417^^^^^356^442^[ADD] final Calendar endFinal = end;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[REPLACE]^if  ( spot.before ( endFinal )  )  {^430^^^^^356^442^[REPLACE] if  ( spot.equals ( endFinal )  )  {^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[REPLACE]^throw new UnsupportedOperationException  (" ")  ; ;^431^^^^^356^442^[REPLACE] throw new NoSuchElementException  (" ")  ;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[ADD]^^431^^^^^356^442^[ADD] throw new NoSuchElementException  (" ")  ;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[REPLACE]^spot =  rounded;^421^^^^^356^442^[REPLACE] spot = startFinal;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[ADD]^^421^^^^^356^442^[ADD] spot = startFinal;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[REPLACE]^return spot.equals ( endFinal ) ;^426^^^^^356^442^[REPLACE] return spot.before ( endFinal ) ;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[REPLACE]^return spot .before ( null )  ;^434^^^^^356^442^[REPLACE] return spot.clone (  ) ;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[REPLACE]^DateFormatSymbols symbols = new DateFormatSymbols ( locale ) ;^418^^^^^356^442^[REPLACE] Iterator it = new Iterator (  )  {^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[REPLACE]^throw new ClassCastException  (" ")  ; ;^438^^^^^356^442^[REPLACE] throw new UnsupportedOperationException  (" ")  ;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[ADD]^^438^^^^^356^442^[ADD] throw new UnsupportedOperationException  (" ")  ;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[REPLACE]^return rounded;^441^^^^^356^442^[REPLACE] return it;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[REPLACE]^return spot.equals ( endFinal ) ;^426^^^^^425^427^[REPLACE] return spot.before ( endFinal ) ;^[METHOD] hasNext [TYPE] boolean [PARAMETER] [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[REPLACE]^if  ( spot .equalsIgnoreCase ( false )   )  {^430^^^^^429^435^[REPLACE] if  ( spot.equals ( endFinal )  )  {^[METHOD] next [TYPE] Object [PARAMETER] [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[ADD]^^430^431^432^^^429^435^[ADD] if  ( spot.equals ( endFinal )  )  { throw new NoSuchElementException  (" ")  ; }^[METHOD] next [TYPE] Object [PARAMETER] [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[REPLACE]^throw new UnsupportedOperationException  (" ")  ; ;^431^^^^^429^435^[REPLACE] throw new NoSuchElementException  (" ")  ;^[METHOD] next [TYPE] Object [PARAMETER] [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[REPLACE]^spot.add ( Calendar.DATE, 0 ) ;^433^^^^^429^435^[REPLACE] spot.add ( Calendar.DATE, 1 ) ;^[METHOD] next [TYPE] Object [PARAMETER] [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[REPLACE]^return spot.getTime (  ) ;^434^^^^^429^435^[REPLACE] return spot.clone (  ) ;^[METHOD] next [TYPE] Object [PARAMETER] [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[REPLACE]^return ;^438^^^^^437^439^[REPLACE] throw new UnsupportedOperationException  (" ")  ;^[METHOD] remove [TYPE] void [PARAMETER] [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[REPLACE]^DateFormatSymbols symbols = new DateFormatSymbols ( locale ) ;^448^^^^^447^451^[REPLACE] GregorianCalendar gval = new GregorianCalendar (  ) ;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Date focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val  [TYPE]  GregorianCalendar gval  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Date focus 
[REPLACE]^gval.before ( focus ) ;^449^^^^^447^451^[REPLACE] gval.setTime ( focus ) ;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Date focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val  [TYPE]  GregorianCalendar gval  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Date focus 
[REPLACE]^return getCalendarIterator ( gval, startCutoff ) ;^450^^^^^447^451^[REPLACE] return getCalendarIterator ( gval, rangeStyle ) ;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Date focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val  [TYPE]  GregorianCalendar gval  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Date focus 
[REPLACE]^if  ( ! focus instanceof Date )  {^458^^^^^457^465^[REPLACE] if  ( focus instanceof Date )  {^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Object focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Object focus  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[REPLACE]^}  else {^460^^^^^457^465^[REPLACE] } else if  ( focus instanceof Calendar )  {^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Object focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Object focus  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[REPLACE]^throw new UnsupportedOperationException  (" ")  ; ;^463^^^^^457^465^[REPLACE] throw new ClassCastException  (" ")  ;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Object focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Object focus  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[ADD]^^463^^^^^457^465^[ADD] throw new ClassCastException  (" ")  ;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Object focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Object focus  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[REPLACE]^return getCalendarIterator (  ( Date )  focus, rangeStyle ) ;^461^^^^^457^465^[REPLACE] return getCalendarIterator (  ( Calendar )  focus, rangeStyle ) ;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Object focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Object focus  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[REPLACE]^return getCalendarIterator (  ( Calendar )  focus, offset ) ;^461^^^^^457^465^[REPLACE] return getCalendarIterator (  ( Calendar )  focus, rangeStyle ) ;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Object focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Object focus  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[REPLACE]^return ;^463^^^^^457^465^[REPLACE] throw new ClassCastException  (" ")  ;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Object focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Object focus  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[REPLACE]^return getCalendarIterator (  ( Calendar )  focus, rangeStyle ) ;^459^^^^^457^465^[REPLACE] return getCalendarIterator (  ( Date )  focus, rangeStyle ) ;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Object focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Object focus  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[REPLACE]^}  if  ( ! focus instanceof Calendar )  {^460^^^^^457^465^[REPLACE] } else if  ( focus instanceof Calendar )  {^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Object focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Object focus  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[ADD]^}^460^461^462^463^464^457^465^[ADD] else if  ( focus instanceof Calendar )  { return getCalendarIterator (  ( Calendar )  focus, rangeStyle ) ; } else { throw new ClassCastException  (" ")  ; }^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Object focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Object focus  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[REPLACE]^return getCalendarIterator (  ( Calendar )  focus, min ) ;^461^^^^^457^465^[REPLACE] return getCalendarIterator (  ( Calendar )  focus, rangeStyle ) ;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Object focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Object focus  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[REPLACE]^Calendar spot  = null ;^419^^^^^^^[REPLACE] Calendar spot = null;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Object focus int rangeStyle [CLASS] 1   [TYPE]  Object focus  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[REPLACE]^return spot.equals ( endFinal ) ;^426^^^^^425^427^[REPLACE] return spot.before ( endFinal ) ;^[METHOD] hasNext [TYPE] boolean [PARAMETER] [CLASS] 1   [TYPE]  Calendar spot  [TYPE]  boolean false  true 
[REPLACE]^return ;^431^^^^^429^435^[REPLACE] throw new NoSuchElementException  (" ")  ;^[METHOD] next [TYPE] Object [PARAMETER] [CLASS] 1   [TYPE]  Calendar spot  [TYPE]  boolean false  true 
[REPLACE]^throw new UnsupportedOperationException  (" ")  ; ;^431^^^^^429^435^[REPLACE] throw new NoSuchElementException  (" ")  ;^[METHOD] next [TYPE] Object [PARAMETER] [CLASS] 1   [TYPE]  Calendar spot  [TYPE]  boolean false  true 
[REPLACE]^spot.add ( Calendar.DATE, 4 ) ;^433^^^^^429^435^[REPLACE] spot.add ( Calendar.DATE, 1 ) ;^[METHOD] next [TYPE] Object [PARAMETER] [CLASS] 1   [TYPE]  Calendar spot  [TYPE]  boolean false  true 
[ADD]^^433^434^^^^429^435^[ADD] spot.add ( Calendar.DATE, 1 ) ; return spot.clone (  ) ;^[METHOD] next [TYPE] Object [PARAMETER] [CLASS] 1   [TYPE]  Calendar spot  [TYPE]  boolean false  true 
[REPLACE]^return spot.before ( endFinal ) ;^434^^^^^429^435^[REPLACE] return spot.clone (  ) ;^[METHOD] next [TYPE] Object [PARAMETER] [CLASS] 1   [TYPE]  Calendar spot  [TYPE]  boolean false  true 
[REPLACE]^return ;^438^^^^^437^439^[REPLACE] throw new UnsupportedOperationException  (" ")  ;^[METHOD] remove [TYPE] void [PARAMETER] [CLASS] 1   [TYPE]  Calendar spot  [TYPE]  boolean false  true 
[ADD]^^438^^^^^437^439^[ADD] throw new UnsupportedOperationException  (" ")  ;^[METHOD] remove [TYPE] void [PARAMETER] [CLASS] 1   [TYPE]  Calendar spot  [TYPE]  boolean false  true 
