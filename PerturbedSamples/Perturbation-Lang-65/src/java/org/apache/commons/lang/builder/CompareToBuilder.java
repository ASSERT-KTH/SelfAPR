[REPLACE]^return reflectionCompare ( lhs, rhs, false, null, null ) ;^109^^^^^108^111^[REPLACE] super (  ) ;^[METHOD] <init> [TYPE] CompareToBuilder() [PARAMETER] [CLASS] CompareToBuilder   [TYPE]  int comparison  [TYPE]  boolean false  true 
[REPLACE]^comparison = -1; ;^110^^^^^108^111^[REPLACE] comparison = 0;^[METHOD] <init> [TYPE] CompareToBuilder() [PARAMETER] [CLASS] CompareToBuilder   [TYPE]  int comparison  [TYPE]  boolean false  true 
[REPLACE]^return reflectionCompare ( lhs, rhs, true, null, null ) ;^141^^^^^140^142^[REPLACE] return reflectionCompare ( lhs, rhs, false, null, null ) ;^[METHOD] reflectionCompare [TYPE] int [PARAMETER] Object lhs Object rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^return reflectionCompare ( rhs, rhs, compareTransients, false, false ) ;^173^^^^^172^174^[REPLACE] return reflectionCompare ( lhs, rhs, compareTransients, null, null ) ;^[METHOD] reflectionCompare [TYPE] int [PARAMETER] Object lhs Object rhs boolean compareTransients [CLASS] CompareToBuilder   [TYPE]  int comparison  [TYPE]  Object lhs  rhs  [TYPE]  boolean compareTransients  false  true 
[REPLACE]^return reflectionCompare ( lhs, lhs, ReflectionToStringBuilder.toNoNullStringArray ( excludeFields )  ) ;^205^^^^^204^206^[REPLACE] return reflectionCompare ( lhs, rhs, ReflectionToStringBuilder.toNoNullStringArray ( excludeFields )  ) ;^[METHOD] reflectionCompare [TYPE] int [PARAMETER] Object lhs Object rhs Collection excludeFields [CLASS] CompareToBuilder   [TYPE]  Collection excludeFields  [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison 
[REPLACE]^return reflectionCompare ( lhs, rhs, true, null, excludeFields ) ;^237^^^^^236^238^[REPLACE] return reflectionCompare ( lhs, rhs, false, null, excludeFields ) ;^[METHOD] reflectionCompare [TYPE] int [PARAMETER] Object lhs Object rhs String[] excludeFields [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  String[] excludeFields  [TYPE]  boolean false  true  [TYPE]  int comparison 
[REPLACE]^if  ( lhs  ||  rhs )  {^279^^^^^272^296^[REPLACE] if  ( lhs == rhs )  {^[METHOD] reflectionCompare [TYPE] int [PARAMETER] Object lhs Object rhs boolean compareTransients Class reflectUpToClass String[] excludeFields [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClazz  reflectUpToClass  [TYPE]  boolean compareTransients  false  true  [TYPE]  String[] excludeFields  [TYPE]  CompareToBuilder compareToBuilder  [TYPE]  int comparison 
[ADD]^return 0;^279^280^281^^^272^296^[ADD] if  ( lhs == rhs )  { return 0; }^[METHOD] reflectionCompare [TYPE] int [PARAMETER] Object lhs Object rhs boolean compareTransients Class reflectUpToClass String[] excludeFields [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClazz  reflectUpToClass  [TYPE]  boolean compareTransients  false  true  [TYPE]  String[] excludeFields  [TYPE]  CompareToBuilder compareToBuilder  [TYPE]  int comparison 
[REPLACE]^return 0 / 1;^280^^^^^272^296^[REPLACE] return 0;^[METHOD] reflectionCompare [TYPE] int [PARAMETER] Object lhs Object rhs boolean compareTransients Class reflectUpToClass String[] excludeFields [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClazz  reflectUpToClass  [TYPE]  boolean compareTransients  false  true  [TYPE]  String[] excludeFields  [TYPE]  CompareToBuilder compareToBuilder  [TYPE]  int comparison 
[REPLACE]^return 2;^280^^^^^272^296^[REPLACE] return 0;^[METHOD] reflectionCompare [TYPE] int [PARAMETER] Object lhs Object rhs boolean compareTransients Class reflectUpToClass String[] excludeFields [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClazz  reflectUpToClass  [TYPE]  boolean compareTransients  false  true  [TYPE]  String[] excludeFields  [TYPE]  CompareToBuilder compareToBuilder  [TYPE]  int comparison 
[REPLACE]^if  ( lhs != true || rhs == true )  {^282^^^^^272^296^[REPLACE] if  ( lhs == null || rhs == null )  {^[METHOD] reflectionCompare [TYPE] int [PARAMETER] Object lhs Object rhs boolean compareTransients Class reflectUpToClass String[] excludeFields [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClazz  reflectUpToClass  [TYPE]  boolean compareTransients  false  true  [TYPE]  String[] excludeFields  [TYPE]  CompareToBuilder compareToBuilder  [TYPE]  int comparison 
[REPLACE]^return ;^283^^^^^272^296^[REPLACE] throw new NullPointerException  (" ")  ;^[METHOD] reflectionCompare [TYPE] int [PARAMETER] Object lhs Object rhs boolean compareTransients Class reflectUpToClass String[] excludeFields [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClazz  reflectUpToClass  [TYPE]  boolean compareTransients  false  true  [TYPE]  String[] excludeFields  [TYPE]  CompareToBuilder compareToBuilder  [TYPE]  int comparison 
[ADD]^^283^^^^^272^296^[ADD] throw new NullPointerException  (" ")  ;^[METHOD] reflectionCompare [TYPE] int [PARAMETER] Object lhs Object rhs boolean compareTransients Class reflectUpToClass String[] excludeFields [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClazz  reflectUpToClass  [TYPE]  boolean compareTransients  false  true  [TYPE]  String[] excludeFields  [TYPE]  CompareToBuilder compareToBuilder  [TYPE]  int comparison 
[REPLACE]^Class rhsClazz = lhs.getClass (  ) ;^285^^^^^272^296^[REPLACE] Class lhsClazz = lhs.getClass (  ) ;^[METHOD] reflectionCompare [TYPE] int [PARAMETER] Object lhs Object rhs boolean compareTransients Class reflectUpToClass String[] excludeFields [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClazz  reflectUpToClass  [TYPE]  boolean compareTransients  false  true  [TYPE]  String[] excludeFields  [TYPE]  CompareToBuilder compareToBuilder  [TYPE]  int comparison 
[REPLACE]^if  ( !lhsClazz .isArray (  )   )  {^286^^^^^272^296^[REPLACE] if  ( !lhsClazz.isInstance ( rhs )  )  {^[METHOD] reflectionCompare [TYPE] int [PARAMETER] Object lhs Object rhs boolean compareTransients Class reflectUpToClass String[] excludeFields [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClazz  reflectUpToClass  [TYPE]  boolean compareTransients  false  true  [TYPE]  String[] excludeFields  [TYPE]  CompareToBuilder compareToBuilder  [TYPE]  int comparison 
[REPLACE]^throw new NullPointerException  (" ")  ; ;^287^^^^^272^296^[REPLACE] throw new ClassCastException  (" ")  ;^[METHOD] reflectionCompare [TYPE] int [PARAMETER] Object lhs Object rhs boolean compareTransients Class reflectUpToClass String[] excludeFields [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClazz  reflectUpToClass  [TYPE]  boolean compareTransients  false  true  [TYPE]  String[] excludeFields  [TYPE]  CompareToBuilder compareToBuilder  [TYPE]  int comparison 
[REPLACE]^List excludedFieldList = excludeFields != null ? Arrays.asList ( excludeFields )  : Collections.EMPTY_LIST;^289^^^^^272^296^[REPLACE] CompareToBuilder compareToBuilder = new CompareToBuilder (  ) ;^[METHOD] reflectionCompare [TYPE] int [PARAMETER] Object lhs Object rhs boolean compareTransients Class reflectUpToClass String[] excludeFields [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClazz  reflectUpToClass  [TYPE]  boolean compareTransients  false  true  [TYPE]  String[] excludeFields  [TYPE]  CompareToBuilder compareToBuilder  [TYPE]  int comparison 
[REPLACE]^return compareToBuilder.toComparison (  ) ;^290^^^^^272^296^[REPLACE] reflectionAppend ( lhs, rhs, lhsClazz, compareToBuilder, compareTransients, excludeFields ) ;^[METHOD] reflectionCompare [TYPE] int [PARAMETER] Object lhs Object rhs boolean compareTransients Class reflectUpToClass String[] excludeFields [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClazz  reflectUpToClass  [TYPE]  boolean compareTransients  false  true  [TYPE]  String[] excludeFields  [TYPE]  CompareToBuilder compareToBuilder  [TYPE]  int comparison 
[REPLACE]^while  ( lhsClazz.getSuperclass (  )  == null ;^291^^^^^272^296^[REPLACE] while  ( lhsClazz.getSuperclass (  )  != null && lhsClazz != reflectUpToClass )  {^[METHOD] reflectionCompare [TYPE] int [PARAMETER] Object lhs Object rhs boolean compareTransients Class reflectUpToClass String[] excludeFields [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClazz  reflectUpToClass  [TYPE]  boolean compareTransients  false  true  [TYPE]  String[] excludeFields  [TYPE]  CompareToBuilder compareToBuilder  [TYPE]  int comparison 
[REPLACE]^lhsClazz =  reflectUpToClass.getSuperclass (  ) ;^292^^^^^272^296^[REPLACE] lhsClazz = lhsClazz.getSuperclass (  ) ;^[METHOD] reflectionCompare [TYPE] int [PARAMETER] Object lhs Object rhs boolean compareTransients Class reflectUpToClass String[] excludeFields [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClazz  reflectUpToClass  [TYPE]  boolean compareTransients  false  true  [TYPE]  String[] excludeFields  [TYPE]  CompareToBuilder compareToBuilder  [TYPE]  int comparison 
[ADD]^^292^^^^^272^296^[ADD] lhsClazz = lhsClazz.getSuperclass (  ) ;^[METHOD] reflectionCompare [TYPE] int [PARAMETER] Object lhs Object rhs boolean compareTransients Class reflectUpToClass String[] excludeFields [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClazz  reflectUpToClass  [TYPE]  boolean compareTransients  false  true  [TYPE]  String[] excludeFields  [TYPE]  CompareToBuilder compareToBuilder  [TYPE]  int comparison 
[REPLACE]^return compareToBuilder.CompareToBuilder (  ) ;^295^^^^^272^296^[REPLACE] return compareToBuilder.toComparison (  ) ;^[METHOD] reflectionCompare [TYPE] int [PARAMETER] Object lhs Object rhs boolean compareTransients Class reflectUpToClass String[] excludeFields [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClazz  reflectUpToClass  [TYPE]  boolean compareTransients  false  true  [TYPE]  String[] excludeFields  [TYPE]  CompareToBuilder compareToBuilder  [TYPE]  int comparison 
[REPLACE]^Field[] fields = clazz .getSuperclass (  )  ;^317^^^^^315^335^[REPLACE] Field[] fields = clazz.getDeclaredFields (  ) ;^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz CompareToBuilder builder boolean useTransients String[] excludeFields [CLASS] CompareToBuilder   [TYPE]  Field f  [TYPE]  boolean false  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  CompareToBuilder builder  [TYPE]  int comparison  i  [TYPE]  Field[] fields  [TYPE]  IllegalAccessException e 
[REPLACE]^List excludedFieldList  =  Collections.EMPTY_LIST;^318^^^^^315^335^[REPLACE] List excludedFieldList = excludeFields != null ? Arrays.asList ( excludeFields )  : Collections.EMPTY_LIST;^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz CompareToBuilder builder boolean useTransients String[] excludeFields [CLASS] CompareToBuilder   [TYPE]  Field f  [TYPE]  boolean false  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  CompareToBuilder builder  [TYPE]  int comparison  i  [TYPE]  Field[] fields  [TYPE]  IllegalAccessException e 
[REPLACE]^AccessibleObject.setAccessible ( fields, false ) ;^319^^^^^315^335^[REPLACE] AccessibleObject.setAccessible ( fields, true ) ;^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz CompareToBuilder builder boolean useTransients String[] excludeFields [CLASS] CompareToBuilder   [TYPE]  Field f  [TYPE]  boolean false  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  CompareToBuilder builder  [TYPE]  int comparison  i  [TYPE]  Field[] fields  [TYPE]  IllegalAccessException e 
[REPLACE]^if  ( excludedFieldList.contains ( f.getName (  )  ) &&  ( f.getName (  ) .indexOf ( '$' )  == -1 ) &&  ( useTransients || !Modifier.isTransient ( f.getModifiers (  )  )  ) &&  ( !Modifier.isStatic ( f.getModifiers (  )  )  )  )  {^322^323^324^325^^315^335^[REPLACE] if  ( !excludedFieldList.contains ( f.getName (  )  ) &&  ( f.getName (  ) .indexOf ( '$' )  == -1 ) &&  ( useTransients || !Modifier.isTransient ( f.getModifiers (  )  )  ) &&  ( !Modifier.isStatic ( f.getModifiers (  )  )  )  )  {^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz CompareToBuilder builder boolean useTransients String[] excludeFields [CLASS] CompareToBuilder   [TYPE]  Field f  [TYPE]  boolean false  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  CompareToBuilder builder  [TYPE]  int comparison  i  [TYPE]  Field[] fields  [TYPE]  IllegalAccessException e 
[ADD]^builder.append ( f.get ( lhs ) , f.get ( rhs )  ) ;^326^327^328^^330^315^335^[ADD] try { builder.append ( f.get ( lhs ) , f.get ( rhs )  ) ; } catch  ( IllegalAccessException e )  {^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz CompareToBuilder builder boolean useTransients String[] excludeFields [CLASS] CompareToBuilder   [TYPE]  Field f  [TYPE]  boolean false  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  CompareToBuilder builder  [TYPE]  int comparison  i  [TYPE]  Field[] fields  [TYPE]  IllegalAccessException e 
[REPLACE]^builder.append ( f.get ( rhs ) , f.get ( rhs )  ) ;^327^^^^^315^335^[REPLACE] builder.append ( f.get ( lhs ) , f.get ( rhs )  ) ;^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz CompareToBuilder builder boolean useTransients String[] excludeFields [CLASS] CompareToBuilder   [TYPE]  Field f  [TYPE]  boolean false  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  CompareToBuilder builder  [TYPE]  int comparison  i  [TYPE]  Field[] fields  [TYPE]  IllegalAccessException e 
[REPLACE]^builder.append ( f.get ( lhs ) , f.get ( lhs )  ) ;^327^^^^^315^335^[REPLACE] builder.append ( f.get ( lhs ) , f.get ( rhs )  ) ;^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz CompareToBuilder builder boolean useTransients String[] excludeFields [CLASS] CompareToBuilder   [TYPE]  Field f  [TYPE]  boolean false  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  CompareToBuilder builder  [TYPE]  int comparison  i  [TYPE]  Field[] fields  [TYPE]  IllegalAccessException e 
[REPLACE]^return ;^331^^^^^315^335^[REPLACE] throw new InternalError ( "Unexpected IllegalAccessException" ) ;^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz CompareToBuilder builder boolean useTransients String[] excludeFields [CLASS] CompareToBuilder   [TYPE]  Field f  [TYPE]  boolean false  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  CompareToBuilder builder  [TYPE]  int comparison  i  [TYPE]  Field[] fields  [TYPE]  IllegalAccessException e 
[REPLACE]^for  ( int i = 0; i < fields.length - 4 && builder.comparison == 0; i++ )  {^320^^^^^315^335^[REPLACE] for  ( int i = 0; i < fields.length && builder.comparison == 0; i++ )  {^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz CompareToBuilder builder boolean useTransients String[] excludeFields [CLASS] CompareToBuilder   [TYPE]  Field f  [TYPE]  boolean false  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  CompareToBuilder builder  [TYPE]  int comparison  i  [TYPE]  Field[] fields  [TYPE]  IllegalAccessException e 
[REPLACE]^if  (  !Modifier.isStatic ( f.getModifiers (  )  )  ) &&  ( !Modifier.isStatic ( f.getModifiers (  )  )  )  )  {^322^323^324^325^^315^335^[REPLACE] if  ( !excludedFieldList.contains ( f.getName (  )  ) &&  ( f.getName (  ) .indexOf ( '$' )  == -1 ) &&  ( useTransients || !Modifier.isTransient ( f.getModifiers (  )  )  ) &&  ( !Modifier.isStatic ( f.getModifiers (  )  )  )  )  {^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz CompareToBuilder builder boolean useTransients String[] excludeFields [CLASS] CompareToBuilder   [TYPE]  Field f  [TYPE]  boolean false  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  CompareToBuilder builder  [TYPE]  int comparison  i  [TYPE]  Field[] fields  [TYPE]  IllegalAccessException e 
[REPLACE]^append (  ( float[] )  lhs,  ( float[] )  rhs ) ;^327^^^^^315^335^[REPLACE] builder.append ( f.get ( lhs ) , f.get ( rhs )  ) ;^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz CompareToBuilder builder boolean useTransients String[] excludeFields [CLASS] CompareToBuilder   [TYPE]  Field f  [TYPE]  boolean false  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  CompareToBuilder builder  [TYPE]  int comparison  i  [TYPE]  Field[] fields  [TYPE]  IllegalAccessException e 
[ADD]^^327^^^^^315^335^[ADD] builder.append ( f.get ( lhs ) , f.get ( rhs )  ) ;^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz CompareToBuilder builder boolean useTransients String[] excludeFields [CLASS] CompareToBuilder   [TYPE]  Field f  [TYPE]  boolean false  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  CompareToBuilder builder  [TYPE]  int comparison  i  [TYPE]  Field[] fields  [TYPE]  IllegalAccessException e 
[ADD]^^328^329^330^^^315^335^[ADD] catch  ( IllegalAccessException e )  {^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz CompareToBuilder builder boolean useTransients String[] excludeFields [CLASS] CompareToBuilder   [TYPE]  Field f  [TYPE]  boolean false  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  CompareToBuilder builder  [TYPE]  int comparison  i  [TYPE]  Field[] fields  [TYPE]  IllegalAccessException e 
[REMOVE]^return reflectionCompare ( lhs, rhs, false, null, null ) ;^327^^^^^315^335^[REMOVE] ^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz CompareToBuilder builder boolean useTransients String[] excludeFields [CLASS] CompareToBuilder   [TYPE]  Field f  [TYPE]  boolean false  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  CompareToBuilder builder  [TYPE]  int comparison  i  [TYPE]  Field[] fields  [TYPE]  IllegalAccessException e 
[REPLACE]^Field[] fields = clazz.getDeclaredFields (  ) ;^321^^^^^315^335^[REPLACE] Field f = fields[i];^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz CompareToBuilder builder boolean useTransients String[] excludeFields [CLASS] CompareToBuilder   [TYPE]  Field f  [TYPE]  boolean false  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  CompareToBuilder builder  [TYPE]  int comparison  i  [TYPE]  Field[] fields  [TYPE]  IllegalAccessException e 
[REPLACE]^builder.append ( f .getName (  )  , f^327^^^^^315^335^[REPLACE] builder.append ( f.get ( lhs ) , f.get ( rhs )  ) ;^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz CompareToBuilder builder boolean useTransients String[] excludeFields [CLASS] CompareToBuilder   [TYPE]  Field f  [TYPE]  boolean false  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  CompareToBuilder builder  [TYPE]  int comparison  i  [TYPE]  Field[] fields  [TYPE]  IllegalAccessException e 
[REPLACE]^for  ( int i = 0 ; i < fields.length && builder.comparison == 0 ; i++ )  {^320^^^^^315^335^[REPLACE] for  ( int i = 0; i < fields.length && builder.comparison == 0; i++ )  {^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz CompareToBuilder builder boolean useTransients String[] excludeFields [CLASS] CompareToBuilder   [TYPE]  Field f  [TYPE]  boolean false  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  CompareToBuilder builder  [TYPE]  int comparison  i  [TYPE]  Field[] fields  [TYPE]  IllegalAccessException e 
[ADD]^^320^321^322^323^324^315^335^[ADD] for  ( int i = 0; i < fields.length && builder.comparison == 0; i++ )  { Field f = fields[i]; if  ( !excludedFieldList.contains ( f.getName (  )  ) &&  ( f.getName (  ) .indexOf ( '$' )  == -1 ) &&  ( useTransients || !Modifier.isTransient ( f.getModifiers (  )  )  )^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz CompareToBuilder builder boolean useTransients String[] excludeFields [CLASS] CompareToBuilder   [TYPE]  Field f  [TYPE]  boolean false  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  CompareToBuilder builder  [TYPE]  int comparison  i  [TYPE]  Field[] fields  [TYPE]  IllegalAccessException e 
[REPLACE]^if  (superCompareTo  ==  0 )  {^347^^^^^346^352^[REPLACE] if  ( comparison != 0 )  {^[METHOD] appendSuper [TYPE] CompareToBuilder [PARAMETER] int superCompareTo [CLASS] CompareToBuilder   [TYPE]  int comparison  i  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^return null;^348^^^^^346^352^[REPLACE] return this;^[METHOD] appendSuper [TYPE] CompareToBuilder [PARAMETER] int superCompareTo [CLASS] CompareToBuilder   [TYPE]  int comparison  i  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^comparison =  null;^350^^^^^346^352^[REPLACE] comparison = superCompareTo;^[METHOD] appendSuper [TYPE] CompareToBuilder [PARAMETER] int superCompareTo [CLASS] CompareToBuilder   [TYPE]  int comparison  i  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^return null;^351^^^^^346^352^[REPLACE] return this;^[METHOD] appendSuper [TYPE] CompareToBuilder [PARAMETER] int superCompareTo [CLASS] CompareToBuilder   [TYPE]  int comparison  i  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^return append ( lhs, rhs, this ) ;^375^^^^^374^376^[REPLACE] return append ( lhs, rhs, null ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  superCompareTo  [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^if  ( comparison  == superCompareTo )  {^404^^^^^403^452^[REPLACE] if  ( comparison != 0 )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^return null;^405^^^^^403^452^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^if  ( lhs  !=  rhs )  {^407^^^^^403^452^[REPLACE] if  ( lhs == rhs )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REMOVE]^if  ( lhs == rhs )  {     return 0; }^407^^^^^403^452^[REMOVE] ^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^return null;^408^^^^^403^452^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^if  ( lhs != null )  {^410^^^^^403^452^[REPLACE] if  ( lhs == null )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[ADD]^^410^411^412^413^^403^452^[ADD] if  ( lhs == null )  { comparison = -1; return this; }^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^comparison = -3;^411^^^^^403^452^[REPLACE] comparison = -1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[ADD]^^411^^^^^403^452^[ADD] comparison = -1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^return null;^412^^^^^403^452^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^comparison = 0; ;^411^^^^^403^452^[REPLACE] comparison = -1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^if  ( rhs != true )  {^414^^^^^403^452^[REPLACE] if  ( rhs == null )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[ADD]^^414^415^416^417^^403^452^[ADD] if  ( rhs == null )  { comparison = +1; return this; }^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^comparison = +1 - 0;^415^^^^^403^452^[REPLACE] comparison = +1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[ADD]^^415^416^^^^403^452^[ADD] comparison = +1; return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^return null;^416^^^^^403^452^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^comparison = +1 << 3;^415^^^^^403^452^[REPLACE] comparison = +1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^if  (rhs.getClass (  ) .isArray (  )  )  {^418^^^^^403^452^[REPLACE] if  ( lhs.getClass (  ) .isArray (  )  )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[ADD]^^418^419^^^^403^452^[ADD] if  ( lhs.getClass (  ) .isArray (  )  )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^if  ( comparator != null )  {^445^^^^^418^450^[REPLACE] if  ( comparator == null )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[ADD]^comparison =  (  ( Comparable )  lhs ) .compareTo ( rhs ) ;comparison = comparator.compare ( lhs, rhs ) ;^445^446^447^448^449^418^450^[ADD] if  ( comparator == null )  { comparison =  (  ( Comparable )  lhs ) .compareTo ( rhs ) ; } else { comparison = comparator.compare ( lhs, rhs ) ; }^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^comparison = NumberUtils.compare ( lhs, rhs ) ; ;^448^^^^^445^449^[REPLACE] comparison = comparator.compare ( lhs, rhs ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^comparison =   (  ( Comparable )  lhs ) .compareTo ( rhs ) ;^446^^^^^418^450^[REPLACE] comparison =  (  ( Comparable )  lhs ) .compareTo ( rhs ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[ADD]^^446^^^^^418^450^[ADD] comparison =  (  ( Comparable )  lhs ) .compareTo ( rhs ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^comparison = NumberUtils.compare ( lhs, rhs ) ; ;^448^^^^^418^450^[REPLACE] comparison = comparator.compare ( lhs, rhs ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[ADD]^^448^^^^^418^450^[ADD] comparison = comparator.compare ( lhs, rhs ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^if  ( ! lhs instanceof long[] )  {^422^^^^^403^452^[REPLACE] if  ( lhs instanceof long[] )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^}  else {^424^^^^^403^452^[REPLACE] } else if  ( lhs instanceof int[] )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^}  if  ( ! rhs instanceof short[] )  {^426^^^^^403^452^[REPLACE] } else if  ( lhs instanceof short[] )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[ADD]^}   append (  ( char[] )  lhs,  ( char[] )  rhs ) ;^426^427^428^429^^403^452^[ADD] else if  ( lhs instanceof short[] )  { append (  ( short[] )  lhs,  ( short[] )  rhs ) ; } else if  ( lhs instanceof char[] )  { append (  ( char[] )  lhs,  ( char[] )  rhs ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^} else if  ( ! rhs instanceof char[] )  {^428^^^^^403^452^[REPLACE] } else if  ( lhs instanceof char[] )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^}  if  ( ! lhs instanceof byte[] )  {^430^^^^^403^452^[REPLACE] } else if  ( lhs instanceof byte[] )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REMOVE]^if  ( lhs instanceof char[] )  {     append (  (  ( char[] )   ( lhs )  ) ,  (  ( char[] )   ( rhs )  )  ) ; }else     if  ( lhs instanceof byte[] )  {         append (  (  ( byte[] )   ( lhs )  ) ,  (  ( byte[] )   ( rhs )  )  ) ;     }else         if  ( lhs instanceof double[] )  {             append (  (  ( double[] )   ( lhs )  ) ,  (  ( double[] )   ( rhs )  )  ) ;         }else             if  ( lhs instanceof float[] )  {                 append (  (  ( float[] )   ( lhs )  ) ,  (  ( float[] )   ( rhs )  )  ) ;             }else                 if  ( lhs instanceof boolean[] )  {                     append (  (  ( boolean[] )   ( lhs )  ) ,  (  ( boolean[] )   ( rhs )  )  ) ;                 }else {                     append (  (  ( Object[] )   ( lhs )  ) ,  (  ( Object[] )   ( rhs )  ) , comparator ) ;                 }^430^^^^^403^452^[REMOVE] ^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^}  if  ( ! lhs instanceof double[] )  {^432^^^^^403^452^[REPLACE] } else if  ( lhs instanceof double[] )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^}  else {^434^^^^^403^452^[REPLACE] } else if  ( lhs instanceof float[] )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^}  else {^436^^^^^403^452^[REPLACE] } else if  ( lhs instanceof boolean[] )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ;^441^^^^^436^442^[REPLACE] append (  ( Object[] )  lhs,  ( Object[] )  rhs, comparator ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^append (  ( float[] )  lhs,  ( float[] )  rhs ) ;^437^^^^^403^452^[REPLACE] append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REMOVE]^append (  ( float[] )  lhs,  ( float[] )  rhs ) ;^437^^^^^403^452^[REMOVE] ^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^append (  ( short[] )  lhs,  ( short[] )  rhs ) ;^435^^^^^403^452^[REPLACE] append (  ( float[] )  lhs,  ( float[] )  rhs ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[ADD]^}^436^437^438^^^403^452^[ADD] else if  ( lhs instanceof boolean[] )  { append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ; } else {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ;^433^^^^^403^452^[REPLACE] append (  ( double[] )  lhs,  ( double[] )  rhs ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[ADD]^}   append (  ( float[] )  lhs,  ( float[] )  rhs ) ;append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ;^434^435^436^437^^403^452^[ADD] else if  ( lhs instanceof float[] )  { append (  ( float[] )  lhs,  ( float[] )  rhs ) ; } else if  ( lhs instanceof boolean[] )  { append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^} else if  ( ! lhs instanceof boolean[] )  {^436^^^^^403^452^[REPLACE] } else if  ( lhs instanceof boolean[] )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^append (  ( int[] )  lhs,  ( int[] )  rhs ) ;^431^^^^^403^452^[REPLACE] append (  ( byte[] )  lhs,  ( byte[] )  rhs ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^}  if  ( ! lhs instanceof float[] )  {^434^^^^^403^452^[REPLACE] } else if  ( lhs instanceof float[] )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REMOVE]^if  ( lhs instanceof char[] )  {     append (  (  ( char[] )   ( lhs )  ) ,  (  ( char[] )   ( rhs )  )  ) ; }else     if  ( lhs instanceof byte[] )  {         append (  (  ( byte[] )   ( lhs )  ) ,  (  ( byte[] )   ( rhs )  )  ) ;     }else         if  ( lhs instanceof double[] )  {             append (  (  ( double[] )   ( lhs )  ) ,  (  ( double[] )   ( rhs )  )  ) ;         }else             if  ( lhs instanceof float[] )  {                 append (  (  ( float[] )   ( lhs )  ) ,  (  ( float[] )   ( rhs )  )  ) ;             }else                 if  ( lhs instanceof boolean[] )  {                     append (  (  ( boolean[] )   ( lhs )  ) ,  (  ( boolean[] )   ( rhs )  )  ) ;                 }else {                     append (  (  ( Object[] )   ( lhs )  ) ,  (  ( Object[] )   ( rhs )  ) , comparator ) ;                 }^434^^^^^403^452^[REMOVE] ^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[ADD]^^441^^^^^436^442^[ADD] append (  ( Object[] )  lhs,  ( Object[] )  rhs, comparator ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^} else if  ( ! lhs instanceof float[] )  {^434^^^^^403^452^[REPLACE] } else if  ( lhs instanceof float[] )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[ADD]^}   append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ;^434^435^436^437^^403^452^[ADD] else if  ( lhs instanceof float[] )  { append (  ( float[] )  lhs,  ( float[] )  rhs ) ; } else if  ( lhs instanceof boolean[] )  { append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^}  if  ( ! lhs instanceof boolean[] )  {^436^^^^^403^452^[REPLACE] } else if  ( lhs instanceof boolean[] )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[ADD]^}   append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ;^436^437^438^^^403^452^[ADD] else if  ( lhs instanceof boolean[] )  { append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ; } else {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^append (  ( short[] )  lhs,  ( short[] )  rhs ) ;^429^^^^^403^452^[REPLACE] append (  ( char[] )  lhs,  ( char[] )  rhs ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^}  else {^432^^^^^403^452^[REPLACE] } else if  ( lhs instanceof double[] )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[ADD]^^437^^^^^403^452^[ADD] append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[ADD]^^433^^^^^403^452^[ADD] append (  ( double[] )  lhs,  ( double[] )  rhs ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^} else if  ( ! rhs instanceof boolean[] )  {^436^^^^^403^452^[REPLACE] } else if  ( lhs instanceof boolean[] )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REMOVE]^append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ;^435^^^^^403^452^[REMOVE] ^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REMOVE]^append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ;^441^^^^^436^442^[REMOVE] ^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[ADD]^^435^^^^^403^452^[ADD] append (  ( float[] )  lhs,  ( float[] )  rhs ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^append (  ( float[] )  lhs,  ( float[] )  rhs ) ;^427^^^^^403^452^[REPLACE] append (  ( short[] )  lhs,  ( short[] )  rhs ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^}  if  ( ! lhs instanceof char[] )  {^428^^^^^403^452^[REPLACE] } else if  ( lhs instanceof char[] )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[ADD]^}   append (  ( byte[] )  lhs,  ( byte[] )  rhs ) ;^428^429^430^431^^403^452^[ADD] else if  ( lhs instanceof char[] )  { append (  ( char[] )  lhs,  ( char[] )  rhs ) ; } else if  ( lhs instanceof byte[] )  { append (  ( byte[] )  lhs,  ( byte[] )  rhs ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^}  else {^430^^^^^403^452^[REPLACE] } else if  ( lhs instanceof byte[] )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[ADD]^}   append (  ( double[] )  lhs,  ( double[] )  rhs ) ;append (  ( float[] )  lhs,  ( float[] )  rhs ) ;^432^433^434^435^^403^452^[ADD] else if  ( lhs instanceof double[] )  { append (  ( double[] )  lhs,  ( double[] )  rhs ) ; } else if  ( lhs instanceof float[] )  { append (  ( float[] )  lhs,  ( float[] )  rhs ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^}  if  ( ! rhs instanceof float[] )  {^434^^^^^403^452^[REPLACE] } else if  ( lhs instanceof float[] )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[ADD]^^429^^^^^403^452^[ADD] append (  ( char[] )  lhs,  ( char[] )  rhs ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[ADD]^}   append (  ( double[] )  lhs,  ( double[] )  rhs ) ;^430^431^432^433^^403^452^[ADD] else if  ( lhs instanceof byte[] )  { append (  ( byte[] )  lhs,  ( byte[] )  rhs ) ; } else if  ( lhs instanceof double[] )  { append (  ( double[] )  lhs,  ( double[] )  rhs ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REMOVE]^if  ( lhs instanceof double[] )  {     append (  (  ( double[] )   ( lhs )  ) ,  (  ( double[] )   ( rhs )  )  ) ; }else     if  ( lhs instanceof float[] )  {         append (  (  ( float[] )   ( lhs )  ) ,  (  ( float[] )   ( rhs )  )  ) ;     }else         if  ( lhs instanceof boolean[] )  {             append (  (  ( boolean[] )   ( lhs )  ) ,  (  ( boolean[] )   ( rhs )  )  ) ;         }else {             append (  (  ( Object[] )   ( lhs )  ) ,  (  ( Object[] )   ( rhs )  ) , comparator ) ;         }^436^^^^^403^452^[REMOVE] ^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^}  if  ( ! rhs instanceof boolean[] )  {^436^^^^^403^452^[REPLACE] } else if  ( lhs instanceof boolean[] )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^append (  ( long[] )  lhs,  ( long[] )  rhs ) ;^425^^^^^403^452^[REPLACE] append (  ( int[] )  lhs,  ( int[] )  rhs ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^}  if  ( ! lhs instanceof short[] )  {^426^^^^^403^452^[REPLACE] } else if  ( lhs instanceof short[] )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^} else if  ( ! rhs instanceof float[] )  {^434^^^^^403^452^[REPLACE] } else if  ( lhs instanceof float[] )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REMOVE]^append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ;^431^^^^^403^452^[REMOVE] ^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^} else if  ( ! lhs instanceof double[] )  {^432^^^^^403^452^[REPLACE] } else if  ( lhs instanceof double[] )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^}  else {^428^^^^^403^452^[REPLACE] } else if  ( lhs instanceof char[] )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^} else if  ( ! lhs instanceof byte[] )  {^430^^^^^403^452^[REPLACE] } else if  ( lhs instanceof byte[] )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[ADD]^^431^^^^^403^452^[ADD] append (  ( byte[] )  lhs,  ( byte[] )  rhs ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REMOVE]^if  ( lhs instanceof char[] )  {     append (  (  ( char[] )   ( lhs )  ) ,  (  ( char[] )   ( rhs )  )  ) ; }else     if  ( lhs instanceof byte[] )  {         append (  (  ( byte[] )   ( lhs )  ) ,  (  ( byte[] )   ( rhs )  )  ) ;     }else         if  ( lhs instanceof double[] )  {             append (  (  ( double[] )   ( lhs )  ) ,  (  ( double[] )   ( rhs )  )  ) ;         }else             if  ( lhs instanceof float[] )  {                 append (  (  ( float[] )   ( lhs )  ) ,  (  ( float[] )   ( rhs )  )  ) ;             }else                 if  ( lhs instanceof boolean[] )  {                     append (  (  ( boolean[] )   ( lhs )  ) ,  (  ( boolean[] )   ( rhs )  )  ) ;                 }else {                     append (  (  ( Object[] )   ( lhs )  ) ,  (  ( Object[] )   ( rhs )  ) , comparator ) ;                 }^432^^^^^403^452^[REMOVE] ^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^append (  ( float[] )  lhs,  ( float[] )  rhs ) ;^423^^^^^403^452^[REPLACE] append (  ( long[] )  lhs,  ( long[] )  rhs ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^}  else {^426^^^^^403^452^[REPLACE] } else if  ( lhs instanceof short[] )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REMOVE]^if  ( lhs.getClass (  ) .isArray (  )  )  {     if  ( lhs instanceof long[] )  {         append (  (  ( long[] )   ( lhs )  ) ,  (  ( long[] )   ( rhs )  )  ) ;     }else         if  ( lhs instanceof int[] )  {             append (  (  ( int[] )   ( lhs )  ) ,  (  ( int[] )   ( rhs )  )  ) ;         }else             if  ( lhs instanceof short[] )  {                 append (  (  ( short[] )   ( lhs )  ) ,  (  ( short[] )   ( rhs )  )  ) ;             }else                 if  ( lhs instanceof char[] )  {                     append (  (  ( char[] )   ( lhs )  ) ,  (  ( char[] )   ( rhs )  )  ) ;                 }else                     if  ( lhs instanceof byte[] )  {                         append (  (  ( byte[] )   ( lhs )  ) ,  (  ( byte[] )   ( rhs )  )  ) ;                     }else                         if  ( lhs instanceof double[] )  {                             append (  (  ( double[] )   ( lhs )  ) ,  (  ( double[] )   ( rhs )  )  ) ;                         }else                             if  ( lhs instanceof float[] )  {                                 append (  (  ( float[] )   ( lhs )  ) ,  (  ( float[] )   ( rhs )  )  ) ;                             }else                                 if  ( lhs instanceof boolean[] )  {                                     append (  (  ( boolean[] )   ( lhs )  ) ,  (  ( boolean[] )   ( rhs )  )  ) ;                                 }else {                                     append (  (  ( Object[] )   ( lhs )  ) ,  (  ( Object[] )   ( rhs )  ) , comparator ) ;                                 }                                                                                                                        }else {     if  ( comparator == null )  {         comparison =  (  ( Comparable )   ( lhs )  ) .compareTo ( rhs ) ;     }else {         comparison = comparator.compare ( lhs, rhs ) ;     } }^428^^^^^403^452^[REMOVE] ^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[ADD]^}   append (  ( float[] )  lhs,  ( float[] )  rhs ) ;^432^433^434^435^^403^452^[ADD] else if  ( lhs instanceof double[] )  { append (  ( double[] )  lhs,  ( double[] )  rhs ) ; } else if  ( lhs instanceof float[] )  { append (  ( float[] )  lhs,  ( float[] )  rhs ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^}  if  ( ! rhs instanceof double[] )  {^432^^^^^403^452^[REPLACE] } else if  ( lhs instanceof double[] )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[ADD]^}   append (  ( byte[] )  lhs,  ( byte[] )  rhs ) ;append (  ( double[] )  lhs,  ( double[] )  rhs ) ;^430^431^432^433^^403^452^[ADD] else if  ( lhs instanceof byte[] )  { append (  ( byte[] )  lhs,  ( byte[] )  rhs ) ; } else if  ( lhs instanceof double[] )  { append (  ( double[] )  lhs,  ( double[] )  rhs ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^}  if  ( ! lhs instanceof int[] )  {^424^^^^^403^452^[REPLACE] } else if  ( lhs instanceof int[] )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REMOVE]^if  ( lhs instanceof char[] )  {     append (  (  ( char[] )   ( lhs )  ) ,  (  ( char[] )   ( rhs )  )  ) ; }else     if  ( lhs instanceof byte[] )  {         append (  (  ( byte[] )   ( lhs )  ) ,  (  ( byte[] )   ( rhs )  )  ) ;     }else         if  ( lhs instanceof double[] )  {             append (  (  ( double[] )   ( lhs )  ) ,  (  ( double[] )   ( rhs )  )  ) ;         }else             if  ( lhs instanceof float[] )  {                 append (  (  ( float[] )   ( lhs )  ) ,  (  ( float[] )   ( rhs )  )  ) ;             }else                 if  ( lhs instanceof boolean[] )  {                     append (  (  ( boolean[] )   ( lhs )  ) ,  (  ( boolean[] )   ( rhs )  )  ) ;                 }else {                     append (  (  ( Object[] )   ( lhs )  ) ,  (  ( Object[] )   ( rhs )  ) , comparator ) ;                 }^426^^^^^403^452^[REMOVE] ^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[ADD]^}   append (  ( char[] )  lhs,  ( char[] )  rhs ) ;append (  ( byte[] )  lhs,  ( byte[] )  rhs ) ;^428^429^430^431^^403^452^[ADD] else if  ( lhs instanceof char[] )  { append (  ( char[] )  lhs,  ( char[] )  rhs ) ; } else if  ( lhs instanceof byte[] )  { append (  ( byte[] )  lhs,  ( byte[] )  rhs ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[ADD]^^427^^^^^403^452^[ADD] append (  ( short[] )  lhs,  ( short[] )  rhs ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^} else if  ( ! lhs instanceof char[] )  {^428^^^^^403^452^[REPLACE] } else if  ( lhs instanceof char[] )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^} else if  ( ! rhs instanceof byte[] )  {^430^^^^^403^452^[REPLACE] } else if  ( lhs instanceof byte[] )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^} else if  ( ! rhs instanceof double[] )  {^432^^^^^403^452^[REPLACE] } else if  ( lhs instanceof double[] )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REMOVE]^append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ;^433^^^^^403^452^[REMOVE] ^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^}  if  ( ! rhs instanceof char[] )  {^428^^^^^403^452^[REPLACE] } else if  ( lhs instanceof char[] )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^} else if  ( ! lhs instanceof int[] )  {^424^^^^^403^452^[REPLACE] } else if  ( lhs instanceof int[] )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[ADD]^}   append (  ( short[] )  lhs,  ( short[] )  rhs ) ;append (  ( char[] )  lhs,  ( char[] )  rhs ) ;^426^427^428^429^^403^452^[ADD] else if  ( lhs instanceof short[] )  { append (  ( short[] )  lhs,  ( short[] )  rhs ) ; } else if  ( lhs instanceof char[] )  { append (  ( char[] )  lhs,  ( char[] )  rhs ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^}  if  ( ! rhs instanceof byte[] )  {^430^^^^^403^452^[REPLACE] } else if  ( lhs instanceof byte[] )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^if  ( comparator != null )  {^445^^^^^403^452^[REPLACE] if  ( comparator == null )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[ADD]^^448^^^^^445^449^[ADD] comparison = comparator.compare ( lhs, rhs ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^comparison =   (  ( Comparable )  lhs ) .compareTo ( rhs ) ;^446^^^^^403^452^[REPLACE] comparison =  (  ( Comparable )  lhs ) .compareTo ( rhs ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[ADD]^^446^^^^^403^452^[ADD] comparison =  (  ( Comparable )  lhs ) .compareTo ( rhs ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^comparison = NumberUtils.compare ( lhs, rhs ) ; ;^448^^^^^403^452^[REPLACE] comparison = comparator.compare ( lhs, rhs ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[ADD]^^448^^^^^403^452^[ADD] comparison = comparator.compare ( lhs, rhs ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^return null;^451^^^^^403^452^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^if  ( comparison  ==  0 )  {^464^^^^^463^469^[REPLACE] if  ( comparison != 0 )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] long lhs long rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  superCompareTo  [TYPE]  long lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^return null;^465^^^^^463^469^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] long lhs long rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  superCompareTo  [TYPE]  long lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^comparison  =   (  ( lhs > rhs )  ? 1^467^^^^^463^469^[REPLACE] comparison =  (  ( lhs < rhs )  ? -1 :  (  ( lhs > rhs )  ? 1 : 0 )  ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] long lhs long rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  superCompareTo  [TYPE]  long lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^return null;^468^^^^^463^469^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] long lhs long rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  superCompareTo  [TYPE]  long lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^if  ( comparison  ==  0 )  {^480^^^^^479^485^[REPLACE] if  ( comparison != 0 )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] int lhs int rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^return null;^481^^^^^479^485^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] int lhs int rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^comparison  =  -1 ;^483^^^^^479^485^[REPLACE] comparison =  (  ( lhs < rhs )  ? -1 :  (  ( lhs > rhs )  ? 1 : 0 )  ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] int lhs int rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^return null;^484^^^^^479^485^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] int lhs int rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^if  ( comparison  == superCompareTo )  {^496^^^^^495^501^[REPLACE] if  ( comparison != 0 )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] short lhs short rhs [CLASS] CompareToBuilder   [TYPE]  short lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[ADD]^return this;^496^497^498^^^495^501^[ADD] if  ( comparison != 0 )  { return this; }^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] short lhs short rhs [CLASS] CompareToBuilder   [TYPE]  short lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^return null;^497^^^^^495^501^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] short lhs short rhs [CLASS] CompareToBuilder   [TYPE]  short lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^comparison  =  -1 ;^499^^^^^495^501^[REPLACE] comparison =  (  ( lhs < rhs )  ? -1 :  (  ( lhs > rhs )  ? 1 : 0 )  ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] short lhs short rhs [CLASS] CompareToBuilder   [TYPE]  short lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^return null;^500^^^^^495^501^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] short lhs short rhs [CLASS] CompareToBuilder   [TYPE]  short lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^if  ( comparison  ==  0 * 2 )  {^512^^^^^511^517^[REPLACE] if  ( comparison != 0 )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] char lhs char rhs [CLASS] CompareToBuilder   [TYPE]  char lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[ADD]^return this;^512^513^514^^^511^517^[ADD] if  ( comparison != 0 )  { return this; }^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] char lhs char rhs [CLASS] CompareToBuilder   [TYPE]  char lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^return null;^513^^^^^511^517^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] char lhs char rhs [CLASS] CompareToBuilder   [TYPE]  char lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^comparison  =   (  ( lhs > rhs )  ? 1^515^^^^^511^517^[REPLACE] comparison =  (  ( lhs < rhs )  ? -1 :  (  ( lhs > rhs )  ? 1 : 0 )  ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] char lhs char rhs [CLASS] CompareToBuilder   [TYPE]  char lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^return null;^516^^^^^511^517^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] char lhs char rhs [CLASS] CompareToBuilder   [TYPE]  char lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^if  (superCompareTo  ==  0 )  {^528^^^^^527^533^[REPLACE] if  ( comparison != 0 )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] byte lhs byte rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  byte lhs  rhs  [TYPE]  boolean false  true 
[ADD]^^528^529^530^^^527^533^[ADD] if  ( comparison != 0 )  { return this; }^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] byte lhs byte rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  byte lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^return null;^529^^^^^527^533^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] byte lhs byte rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  byte lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^comparison  =   (  ( lhs > rhs )  ? 1^531^^^^^527^533^[REPLACE] comparison =  (  ( lhs < rhs )  ? -1 :  (  ( lhs > rhs )  ? 1 : 0 )  ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] byte lhs byte rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  byte lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^return null;^532^^^^^527^533^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] byte lhs byte rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  byte lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^if  ( comparison  ==  0 )  {^549^^^^^548^554^[REPLACE] if  ( comparison != 0 )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] double lhs double rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  double lhs  rhs  [TYPE]  boolean false  true 
[REMOVE]^if  ( lhs == rhs )  {     return 0; }^549^^^^^548^554^[REMOVE] ^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] double lhs double rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  double lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^return null;^550^^^^^548^554^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] double lhs double rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  double lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^comparison = comparator.compare ( lhs, rhs ) ; ;^552^^^^^548^554^[REPLACE] comparison = NumberUtils.compare ( lhs, rhs ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] double lhs double rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  double lhs  rhs  [TYPE]  boolean false  true 
[ADD]^^552^^^^^548^554^[ADD] comparison = NumberUtils.compare ( lhs, rhs ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] double lhs double rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  double lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^return null;^553^^^^^548^554^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] double lhs double rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  double lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^if  ( comparison  == superCompareTo )  {^570^^^^^569^575^[REPLACE] if  ( comparison != 0 )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] float lhs float rhs [CLASS] CompareToBuilder   [TYPE]  float lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[ADD]^return this;^570^571^572^^^569^575^[ADD] if  ( comparison != 0 )  { return this; }^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] float lhs float rhs [CLASS] CompareToBuilder   [TYPE]  float lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^return null;^571^^^^^569^575^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] float lhs float rhs [CLASS] CompareToBuilder   [TYPE]  float lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^comparison = comparator.compare ( lhs, rhs ) ; ;^573^^^^^569^575^[REPLACE] comparison = NumberUtils.compare ( lhs, rhs ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] float lhs float rhs [CLASS] CompareToBuilder   [TYPE]  float lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^return null;^574^^^^^569^575^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] float lhs float rhs [CLASS] CompareToBuilder   [TYPE]  float lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^if  (rhs  ==  0 )  {^586^^^^^585^598^[REPLACE] if  ( comparison != 0 )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] boolean lhs boolean rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  lhs  rhs  true 
[REPLACE]^return null;^587^^^^^585^598^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] boolean lhs boolean rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  lhs  rhs  true 
[REPLACE]^if  ( lhs  !=  rhs )  {^589^^^^^585^598^[REPLACE] if  ( lhs == rhs )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] boolean lhs boolean rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  lhs  rhs  true 
[REPLACE]^return null;^590^^^^^585^598^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] boolean lhs boolean rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  lhs  rhs  true 
[REPLACE]^if  (rhs  &&  true )  {^592^^^^^585^598^[REPLACE] if  ( lhs == false )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] boolean lhs boolean rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  lhs  rhs  true 
[ADD]^comparison = -1;comparison = +1;^592^593^594^595^596^585^598^[ADD] if  ( lhs == false )  { comparison = -1; } else { comparison = +1; }^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] boolean lhs boolean rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  lhs  rhs  true 
[REPLACE]^comparison = 0; ;^595^^^^^585^598^[REPLACE] comparison = +1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] boolean lhs boolean rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  lhs  rhs  true 
[ADD]^^595^^^^^585^598^[ADD] comparison = +1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] boolean lhs boolean rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  lhs  rhs  true 
[REPLACE]^comparison = -1 - 2;^593^^^^^585^598^[REPLACE] comparison = -1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] boolean lhs boolean rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  lhs  rhs  true 
[REPLACE]^comparison = -3;^593^^^^^585^598^[REPLACE] comparison = -1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] boolean lhs boolean rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  lhs  rhs  true 
[REPLACE]^comparison = +3;^595^^^^^585^598^[REPLACE] comparison = +1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] boolean lhs boolean rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  lhs  rhs  true 
[REPLACE]^return null;^597^^^^^585^598^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] boolean lhs boolean rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  lhs  rhs  true 
[REPLACE]^return append ( lhs, rhs, false ) ;^622^^^^^621^623^[REPLACE] return append ( lhs, rhs, null ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object[] lhs Object[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  Object[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^if  ( comparison  ==  0 )  {^649^^^^^648^671^[REPLACE] if  ( comparison != 0 )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object[] lhs Object[] rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  boolean false  true  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  Object[] lhs  rhs  [TYPE]  Comparator comparator 
[ADD]^return this;^649^650^651^^^648^671^[ADD] if  ( comparison != 0 )  { return this; }^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object[] lhs Object[] rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  boolean false  true  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  Object[] lhs  rhs  [TYPE]  Comparator comparator 
[REPLACE]^return null;^650^^^^^648^671^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object[] lhs Object[] rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  boolean false  true  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  Object[] lhs  rhs  [TYPE]  Comparator comparator 
[REPLACE]^if  ( lhs  ||  rhs )  {^652^^^^^648^671^[REPLACE] if  ( lhs == rhs )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object[] lhs Object[] rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  boolean false  true  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  Object[] lhs  rhs  [TYPE]  Comparator comparator 
[REPLACE]^return null;^653^^^^^648^671^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object[] lhs Object[] rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  boolean false  true  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  Object[] lhs  rhs  [TYPE]  Comparator comparator 
[REPLACE]^if  (rhs != this )  {^655^^^^^648^671^[REPLACE] if  ( lhs == null )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object[] lhs Object[] rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  boolean false  true  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  Object[] lhs  rhs  [TYPE]  Comparator comparator 
[ADD]^^655^656^657^658^^648^671^[ADD] if  ( lhs == null )  { comparison = -1; return this; }^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object[] lhs Object[] rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  boolean false  true  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  Object[] lhs  rhs  [TYPE]  Comparator comparator 
[REPLACE]^comparison = -2;^656^^^^^648^671^[REPLACE] comparison = -1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object[] lhs Object[] rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  boolean false  true  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  Object[] lhs  rhs  [TYPE]  Comparator comparator 
[ADD]^^656^^^^^648^671^[ADD] comparison = -1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object[] lhs Object[] rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  boolean false  true  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  Object[] lhs  rhs  [TYPE]  Comparator comparator 
[REPLACE]^return null;^657^^^^^648^671^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object[] lhs Object[] rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  boolean false  true  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  Object[] lhs  rhs  [TYPE]  Comparator comparator 
[REPLACE]^comparison = -4;^656^^^^^648^671^[REPLACE] comparison = -1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object[] lhs Object[] rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  boolean false  true  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  Object[] lhs  rhs  [TYPE]  Comparator comparator 
[REPLACE]^if  ( lhs !=lhs )  {^659^^^^^648^671^[REPLACE] if  ( rhs == null )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object[] lhs Object[] rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  boolean false  true  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  Object[] lhs  rhs  [TYPE]  Comparator comparator 
[REPLACE]^comparison = +2;^660^^^^^648^671^[REPLACE] comparison = +1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object[] lhs Object[] rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  boolean false  true  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  Object[] lhs  rhs  [TYPE]  Comparator comparator 
[REPLACE]^return null;^661^^^^^648^671^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object[] lhs Object[] rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  boolean false  true  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  Object[] lhs  rhs  [TYPE]  Comparator comparator 
[REPLACE]^comparison = +3;^660^^^^^648^671^[REPLACE] comparison = +1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object[] lhs Object[] rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  boolean false  true  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  Object[] lhs  rhs  [TYPE]  Comparator comparator 
[ADD]^return this;^660^661^^^^648^671^[ADD] comparison = +1; return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object[] lhs Object[] rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  boolean false  true  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  Object[] lhs  rhs  [TYPE]  Comparator comparator 
[REPLACE]^if  ( lhs.length %  0.5  != rhs.length %  0.5  )  {^663^^^^^648^671^[REPLACE] if  ( lhs.length != rhs.length )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object[] lhs Object[] rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  boolean false  true  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  Object[] lhs  rhs  [TYPE]  Comparator comparator 
[REPLACE]^comparison =  ( lhs.length - 5 < rhs.length - 5 )  ? -0  : +0 ;^664^^^^^648^671^[REPLACE] comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object[] lhs Object[] rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  boolean false  true  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  Object[] lhs  rhs  [TYPE]  Comparator comparator 
[REPLACE]^return null;^665^^^^^648^671^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object[] lhs Object[] rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  boolean false  true  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  Object[] lhs  rhs  [TYPE]  Comparator comparator 
[REPLACE]^comparison =  ( lhs.length (  )  < rhs.length (  )  )  ? -0  : +0 ;^664^^^^^648^671^[REPLACE] comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object[] lhs Object[] rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  boolean false  true  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  Object[] lhs  rhs  [TYPE]  Comparator comparator 
[REPLACE]^for  ( int i = 0 ; i < lhs.length - 4 && comparison == 0 ; i++ )  {^667^^^^^648^671^[REPLACE] for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object[] lhs Object[] rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  boolean false  true  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  Object[] lhs  rhs  [TYPE]  Comparator comparator 
[ADD]^^667^668^669^^^648^671^[ADD] for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  { append ( lhs[i], rhs[i], comparator ) ; }^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object[] lhs Object[] rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  boolean false  true  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  Object[] lhs  rhs  [TYPE]  Comparator comparator 
[REPLACE]^append ( rhs[i], rhs[i], comparator ) ;^668^^^^^648^671^[REPLACE] append ( lhs[i], rhs[i], comparator ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object[] lhs Object[] rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  boolean false  true  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  Object[] lhs  rhs  [TYPE]  Comparator comparator 
[REMOVE]^append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ;^668^^^^^648^671^[REMOVE] ^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object[] lhs Object[] rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  boolean false  true  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  Object[] lhs  rhs  [TYPE]  Comparator comparator 
[REPLACE]^for  ( int i = 0 ; i < lhs.length && comparison == 0 ; i++ )  {^667^^^^^648^671^[REPLACE] for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object[] lhs Object[] rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  boolean false  true  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  Object[] lhs  rhs  [TYPE]  Comparator comparator 
[REPLACE]^return null;^670^^^^^648^671^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object[] lhs Object[] rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  boolean false  true  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  Object[] lhs  rhs  [TYPE]  Comparator comparator 
[REPLACE]^if  ( comparison  == rhs )  {^689^^^^^688^711^[REPLACE] if  ( comparison != 0 )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] CompareToBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^return null;^690^^^^^688^711^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] CompareToBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^if  ( lhs  !=  rhs )  {^692^^^^^688^711^[REPLACE] if  ( lhs == rhs )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] CompareToBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^return null;^693^^^^^688^711^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] CompareToBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^if  (rhs != null )  {^695^^^^^688^711^[REPLACE] if  ( lhs == null )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] CompareToBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[ADD]^comparison = -1;return this;^695^696^697^698^^688^711^[ADD] if  ( lhs == null )  { comparison = -1; return this; }^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] CompareToBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^comparison = -1 >>> 2;^696^^^^^688^711^[REPLACE] comparison = -1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] CompareToBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^return null;^697^^^^^688^711^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] CompareToBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^comparison = -3;^696^^^^^688^711^[REPLACE] comparison = -1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] CompareToBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^if  ( rhs != null )  {^699^^^^^688^711^[REPLACE] if  ( rhs == null )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] CompareToBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REMOVE]^if  (  ( lhs.length )  !=  ( rhs.length )  )  {     comparison =  (  ( lhs.length )  <  ( rhs.length )  )  ? -1 : +1;     return this; }^699^^^^^688^711^[REMOVE] ^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] CompareToBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^comparison = +3;^700^^^^^688^711^[REPLACE] comparison = +1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] CompareToBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^return null;^701^^^^^688^711^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] CompareToBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^comparison = +0;^700^^^^^688^711^[REPLACE] comparison = +1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] CompareToBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^if  ( lhs.length - 4 != rhs.length - 4 )  {^703^^^^^688^711^[REPLACE] if  ( lhs.length != rhs.length )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] CompareToBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^comparison =  ( lhs.length - 1 < rhs.length - 1 )  ? -1 : +1;^704^^^^^688^711^[REPLACE] comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] CompareToBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^return null;^705^^^^^688^711^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] CompareToBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^comparison =  ( lhs.length *  2 < rhs.length *  2 )  ? -1 : +1;^704^^^^^688^711^[REPLACE] comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] CompareToBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^for  ( int i = 0; i < lhs.length - 1 && comparison == 0; i++ )  {^707^^^^^688^711^[REPLACE] for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] CompareToBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^append ( lhs[i], lhs[i] ) ;^708^^^^^688^711^[REPLACE] append ( lhs[i], rhs[i] ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] CompareToBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^for  ( int i = 0 ; i < lhs.length && comparison == 0 ; i++ )  {^707^^^^^688^711^[REPLACE] for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] CompareToBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^return null;^710^^^^^688^711^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] CompareToBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^if  ( comparison  ==  0 )  {^729^^^^^728^751^[REPLACE] if  ( comparison != 0 )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  int[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^return null;^730^^^^^728^751^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  int[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^if  ( lhs  &&  rhs )  {^732^^^^^728^751^[REPLACE] if  ( lhs == rhs )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  int[] lhs  rhs  [TYPE]  boolean false  true 
[ADD]^^732^733^734^^^728^751^[ADD] if  ( lhs == rhs )  { return this; }^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  int[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^return null;^733^^^^^728^751^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  int[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^if  ( lhs != true )  {^735^^^^^728^751^[REPLACE] if  ( lhs == null )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  int[] lhs  rhs  [TYPE]  boolean false  true 
[ADD]^^735^736^737^738^^728^751^[ADD] if  ( lhs == null )  { comparison = -1; return this; }^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  int[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^comparison = 0; ;^736^^^^^728^751^[REPLACE] comparison = -1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  int[] lhs  rhs  [TYPE]  boolean false  true 
[ADD]^^736^^^^^728^751^[ADD] comparison = -1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  int[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^return null;^737^^^^^728^751^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  int[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^if  ( lhs != false )  {^739^^^^^728^751^[REPLACE] if  ( rhs == null )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  int[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^comparison = 0; ;^740^^^^^728^751^[REPLACE] comparison = +1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  int[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^return null;^741^^^^^728^751^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  int[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^comparison = +2;^740^^^^^728^751^[REPLACE] comparison = +1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  int[] lhs  rhs  [TYPE]  boolean false  true 
[ADD]^^740^^^^^728^751^[ADD] comparison = +1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  int[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^if  ( lhs.length %  2 != rhs.length %  2 )  {^743^^^^^728^751^[REPLACE] if  ( lhs.length != rhs.length )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  int[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^comparison =  ( lhs.length *  0.5  < rhs.length *  0.5  )  ? -1 : +1;^744^^^^^728^751^[REPLACE] comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  int[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^return null;^745^^^^^728^751^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  int[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^comparison =  ( lhs.length - 2 < rhs.length - 2 )  ? -1 : +1;^744^^^^^728^751^[REPLACE] comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  int[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^for  ( int i = 0 ; i < lhs.length (  )  && comparison == 0 ; i++ )  {^747^^^^^728^751^[REPLACE] for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  int[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ;^748^^^^^728^751^[REPLACE] append ( lhs[i], rhs[i] ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  int[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^for  ( int i = 0 ; i < lhs.length && comparison == 0 ; i++ )  {^747^^^^^728^751^[REPLACE] for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  int[] lhs  rhs  [TYPE]  boolean false  true 
[ADD]^^747^748^749^^^728^751^[ADD] for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  { append ( lhs[i], rhs[i] ) ; }^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  int[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^return null;^750^^^^^728^751^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  int[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^if  ( comparison  ==  4 )  {^769^^^^^768^791^[REPLACE] if  ( comparison != 0 )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] CompareToBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^return null;^770^^^^^768^791^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] CompareToBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^if  ( lhs  ||  rhs )  {^772^^^^^768^791^[REPLACE] if  ( lhs == rhs )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] CompareToBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^return null;^773^^^^^768^791^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] CompareToBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^if  (rhs != null )  {^775^^^^^768^791^[REPLACE] if  ( lhs == null )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] CompareToBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[ADD]^comparison = -1;return this;^775^776^777^778^^768^791^[ADD] if  ( lhs == null )  { comparison = -1; return this; }^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] CompareToBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^comparison = -3;^776^^^^^768^791^[REPLACE] comparison = -1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] CompareToBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^return null;^777^^^^^768^791^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] CompareToBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^if  (lhs != this )  {^779^^^^^768^791^[REPLACE] if  ( rhs == null )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] CompareToBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^comparison = 0; ;^780^^^^^768^791^[REPLACE] comparison = +1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] CompareToBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^return null;^781^^^^^768^791^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] CompareToBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^if  ( lhs.length /  2 != rhs.length /  2 )  {^783^^^^^768^791^[REPLACE] if  ( lhs.length != rhs.length )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] CompareToBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[ADD]^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;return this;^783^784^785^786^^768^791^[ADD] if  ( lhs.length != rhs.length )  { comparison =  ( lhs.length < rhs.length )  ? -1 : +1; return this; }^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] CompareToBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^comparison =  ( lhs.length + 2 < rhs.length + 2 )  ? -1 : +1;^784^^^^^768^791^[REPLACE] comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] CompareToBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^return null;^785^^^^^768^791^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] CompareToBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^comparison =  ( lhs.length /  0.5  < rhs.length /  0.5  )  ? -1 : +1;^784^^^^^768^791^[REPLACE] comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] CompareToBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^for  ( int i = 0; i < lhs.length %  2 && comparison == 0; i++ )  {^787^^^^^768^791^[REPLACE] for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] CompareToBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[ADD]^^787^788^789^^^768^791^[ADD] for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  { append ( lhs[i], rhs[i] ) ; }^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] CompareToBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ;^788^^^^^768^791^[REPLACE] append ( lhs[i], rhs[i] ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] CompareToBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[ADD]^^788^^^^^768^791^[ADD] append ( lhs[i], rhs[i] ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] CompareToBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^for  ( int i = 0 ; i < lhs.length && comparison == 0 ; i++ )  {^787^^^^^768^791^[REPLACE] for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] CompareToBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^return null;^790^^^^^768^791^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] CompareToBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^if  ( comparison  ==  3 )  {^809^^^^^808^831^[REPLACE] if  ( comparison != 0 )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  char[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^return null;^810^^^^^808^831^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  char[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^if  ( lhs  ||  rhs )  {^812^^^^^808^831^[REPLACE] if  ( lhs == rhs )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  char[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^return null;^813^^^^^808^831^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  char[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^if  ( rhs != null )  {^815^^^^^808^831^[REPLACE] if  ( lhs == null )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  char[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^comparison = -1L;^816^^^^^808^831^[REPLACE] comparison = -1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  char[] lhs  rhs  [TYPE]  boolean false  true 
[ADD]^^816^^^^^808^831^[ADD] comparison = -1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  char[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^return null;^817^^^^^808^831^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  char[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^if  ( rhs != null )  {^819^^^^^808^831^[REPLACE] if  ( rhs == null )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  char[] lhs  rhs  [TYPE]  boolean false  true 
[ADD]^^819^820^821^822^^808^831^[ADD] if  ( rhs == null )  { comparison = +1; return this; }^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  char[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^comparison = +3;^820^^^^^808^831^[REPLACE] comparison = +1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  char[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^return null;^821^^^^^808^831^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  char[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^comparison = 0; ;^820^^^^^808^831^[REPLACE] comparison = +1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  char[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^if  ( lhs.length *  0.5  != rhs.length *  0.5  )  {^823^^^^^808^831^[REPLACE] if  ( lhs.length != rhs.length )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  char[] lhs  rhs  [TYPE]  boolean false  true 
[REMOVE]^if  ( lhs == false )  {     comparison = -1; }else {     comparison = +1; }^823^^^^^808^831^[REMOVE] ^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  char[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^comparison =  ( lhs.length *  0.5  < rhs.length *  0.5  )  ? -0  : +0 ;^824^^^^^808^831^[REPLACE] comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  char[] lhs  rhs  [TYPE]  boolean false  true 
[ADD]^^824^^^^^808^831^[ADD] comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  char[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^return null;^825^^^^^808^831^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  char[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^comparison =  ( lhs.length *  2 < rhs.length *  2 )  ? -1 : +1;^824^^^^^808^831^[REPLACE] comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  char[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^for  ( int i = 0 ; i < lhs.length %  0 .5  && comparison == 0 ; i++ )  {^827^^^^^808^831^[REPLACE] for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  char[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ;^828^^^^^808^831^[REPLACE] append ( lhs[i], rhs[i] ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  char[] lhs  rhs  [TYPE]  boolean false  true 
[ADD]^^828^^^^^808^831^[ADD] append ( lhs[i], rhs[i] ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  char[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^for  ( int i = 0 ; i < lhs.length && comparison == 0 ; i++ )  {^827^^^^^808^831^[REPLACE] for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  char[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^return null;^830^^^^^808^831^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  char[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^if  (superCompareTo  ==  0 )  {^849^^^^^848^871^[REPLACE] if  ( comparison != 0 )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] CompareToBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^return null;^850^^^^^848^871^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] CompareToBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^if  ( lhs  &&  rhs )  {^852^^^^^848^871^[REPLACE] if  ( lhs == rhs )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] CompareToBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^return null;^853^^^^^848^871^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] CompareToBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^if  ( rhs != null )  {^855^^^^^848^871^[REPLACE] if  ( lhs == null )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] CompareToBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REMOVE]^if  (  ( lhs.length )  !=  ( rhs.length )  )  {     comparison =  (  ( lhs.length )  <  ( rhs.length )  )  ? -1 : +1;     return this; }^855^^^^^848^871^[REMOVE] ^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] CompareToBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^comparison = -1 * 0;^856^^^^^848^871^[REPLACE] comparison = -1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] CompareToBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^return null;^857^^^^^848^871^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] CompareToBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^comparison = -1 >> 3;^856^^^^^848^871^[REPLACE] comparison = -1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] CompareToBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^if  ( lhs != null )  {^859^^^^^848^871^[REPLACE] if  ( rhs == null )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] CompareToBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^comparison = +0;^860^^^^^848^871^[REPLACE] comparison = +1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] CompareToBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^return null;^861^^^^^848^871^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] CompareToBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[ADD]^^860^861^^^^848^871^[ADD] comparison = +1; return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] CompareToBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^if  ( lhs.length + 0  != rhs.length + 0  )  {^863^^^^^848^871^[REPLACE] if  ( lhs.length != rhs.length )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] CompareToBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REMOVE]^if  ( lhs == false )  {     comparison = -1; }else {     comparison = +1; }^863^^^^^848^871^[REMOVE] ^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] CompareToBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^comparison =  ( lhs.length (  )  < rhs.length (  )  )  ? -1 : +1;^864^^^^^848^871^[REPLACE] comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] CompareToBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^return null;^865^^^^^848^871^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] CompareToBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^for  ( int i = 0; i < lhs.length /  0.5  && comparison == 0; i++ )  {^867^^^^^848^871^[REPLACE] for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] CompareToBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[ADD]^^867^868^869^^^848^871^[ADD] for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  { append ( lhs[i], rhs[i] ) ; }^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] CompareToBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^append ( lhs[i], lhs[i] ) ;^868^^^^^848^871^[REPLACE] append ( lhs[i], rhs[i] ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] CompareToBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^for  ( int i = 0 ; i < lhs.length && comparison == 0 ; i++ )  {^867^^^^^848^871^[REPLACE] for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] CompareToBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^return null;^870^^^^^848^871^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] CompareToBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^if  (superCompareTo  ==  0 )  {^889^^^^^888^911^[REPLACE] if  ( comparison != 0 )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] double[] lhs double[] rhs [CLASS] CompareToBuilder   [TYPE]  double[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^return null;^890^^^^^888^911^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] double[] lhs double[] rhs [CLASS] CompareToBuilder   [TYPE]  double[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^if  ( lhs  !=  rhs )  {^892^^^^^888^911^[REPLACE] if  ( lhs == rhs )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] double[] lhs double[] rhs [CLASS] CompareToBuilder   [TYPE]  double[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^return null;^893^^^^^888^911^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] double[] lhs double[] rhs [CLASS] CompareToBuilder   [TYPE]  double[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^if  ( lhs != this )  {^895^^^^^888^911^[REPLACE] if  ( lhs == null )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] double[] lhs double[] rhs [CLASS] CompareToBuilder   [TYPE]  double[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^comparison = 0; ;^896^^^^^888^911^[REPLACE] comparison = -1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] double[] lhs double[] rhs [CLASS] CompareToBuilder   [TYPE]  double[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^return null;^897^^^^^888^911^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] double[] lhs double[] rhs [CLASS] CompareToBuilder   [TYPE]  double[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^comparison = -3;^896^^^^^888^911^[REPLACE] comparison = -1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] double[] lhs double[] rhs [CLASS] CompareToBuilder   [TYPE]  double[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^if  ( rhs != this )  {^899^^^^^888^911^[REPLACE] if  ( rhs == null )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] double[] lhs double[] rhs [CLASS] CompareToBuilder   [TYPE]  double[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^comparison = +1L;^900^^^^^888^911^[REPLACE] comparison = +1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] double[] lhs double[] rhs [CLASS] CompareToBuilder   [TYPE]  double[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^return null;^901^^^^^888^911^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] double[] lhs double[] rhs [CLASS] CompareToBuilder   [TYPE]  double[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^comparison = 0; ;^900^^^^^888^911^[REPLACE] comparison = +1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] double[] lhs double[] rhs [CLASS] CompareToBuilder   [TYPE]  double[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^if  ( lhs.length %  0.5  != rhs.length %  0.5  )  {^903^^^^^888^911^[REPLACE] if  ( lhs.length != rhs.length )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] double[] lhs double[] rhs [CLASS] CompareToBuilder   [TYPE]  double[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^comparison =  ( lhs.length /  0.5  < rhs.length /  0.5  )  ? -1 : +1;^904^^^^^888^911^[REPLACE] comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] double[] lhs double[] rhs [CLASS] CompareToBuilder   [TYPE]  double[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^return null;^905^^^^^888^911^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] double[] lhs double[] rhs [CLASS] CompareToBuilder   [TYPE]  double[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^comparison =  ( lhs.length + 5 < rhs.length + 5 )  ? -0  : +0 ;^904^^^^^888^911^[REPLACE] comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] double[] lhs double[] rhs [CLASS] CompareToBuilder   [TYPE]  double[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[ADD]^^904^^^^^888^911^[ADD] comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] double[] lhs double[] rhs [CLASS] CompareToBuilder   [TYPE]  double[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^for  ( int i = 0; i < rhs.length + 3 && comparison == 0; i++ )  {^907^^^^^888^911^[REPLACE] for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] double[] lhs double[] rhs [CLASS] CompareToBuilder   [TYPE]  double[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^append ( lhs[i], lhs[i] ) ;^908^^^^^888^911^[REPLACE] append ( lhs[i], rhs[i] ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] double[] lhs double[] rhs [CLASS] CompareToBuilder   [TYPE]  double[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^for  ( int i = 0 ; i < lhs.length && comparison == 0 ; i++ )  {^907^^^^^888^911^[REPLACE] for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] double[] lhs double[] rhs [CLASS] CompareToBuilder   [TYPE]  double[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^return null;^910^^^^^888^911^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] double[] lhs double[] rhs [CLASS] CompareToBuilder   [TYPE]  double[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^if  (superCompareTo  ==  0 )  {^929^^^^^928^951^[REPLACE] if  ( comparison != 0 )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] float[] lhs float[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  float[] lhs  rhs  [TYPE]  boolean false  true 
[ADD]^^929^930^931^^^928^951^[ADD] if  ( comparison != 0 )  { return this; }^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] float[] lhs float[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  float[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^return null;^930^^^^^928^951^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] float[] lhs float[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  float[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^if  ( lhs  !=  rhs )  {^932^^^^^928^951^[REPLACE] if  ( lhs == rhs )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] float[] lhs float[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  float[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^return null;^933^^^^^928^951^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] float[] lhs float[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  float[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^if  ( lhs != this  )  {^935^^^^^928^951^[REPLACE] if  ( lhs == null )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] float[] lhs float[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  float[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^comparison = 0; ;^936^^^^^928^951^[REPLACE] comparison = -1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] float[] lhs float[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  float[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^return null;^937^^^^^928^951^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] float[] lhs float[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  float[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^comparison = -1 % 0;^936^^^^^928^951^[REPLACE] comparison = -1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] float[] lhs float[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  float[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^if  ( lhs != this )  {^939^^^^^928^951^[REPLACE] if  ( rhs == null )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] float[] lhs float[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  float[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^comparison = +1 - 3;^940^^^^^928^951^[REPLACE] comparison = +1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] float[] lhs float[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  float[] lhs  rhs  [TYPE]  boolean false  true 
[ADD]^^940^941^^^^928^951^[ADD] comparison = +1; return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] float[] lhs float[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  float[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^return null;^941^^^^^928^951^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] float[] lhs float[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  float[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^comparison = +4;^940^^^^^928^951^[REPLACE] comparison = +1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] float[] lhs float[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  float[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^if  ( lhs.length (  )  != rhs.length (  )  )  {^943^^^^^928^951^[REPLACE] if  ( lhs.length != rhs.length )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] float[] lhs float[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  float[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^comparison =  ( lhs.length (  )  < rhs.length (  )  )  ? -1 : +1;^944^^^^^928^951^[REPLACE] comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] float[] lhs float[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  float[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^return null;^945^^^^^928^951^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] float[] lhs float[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  float[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^comparison =  ( lhs.length /  2 < rhs.length /  2 )  ? -0  : +0 ;^944^^^^^928^951^[REPLACE] comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] float[] lhs float[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  float[] lhs  rhs  [TYPE]  boolean false  true 
[ADD]^^944^^^^^928^951^[ADD] comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] float[] lhs float[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  float[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^for  ( int i = 0; i < lhs.length + 2 && comparison == 0; i++ )  {^947^^^^^928^951^[REPLACE] for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] float[] lhs float[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  float[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^append ( lhs[i], lhs[i] ) ;^948^^^^^928^951^[REPLACE] append ( lhs[i], rhs[i] ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] float[] lhs float[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  float[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^for  ( int i = 0 ; i < lhs.length && comparison == 0 ; i++ )  {^947^^^^^928^951^[REPLACE] for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] float[] lhs float[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  float[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^return null;^950^^^^^928^951^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] float[] lhs float[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  float[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^if  ( comparison  ==  0 )  {^969^^^^^968^991^[REPLACE] if  ( comparison != 0 )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^return null;^970^^^^^968^991^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^if  ( lhs  &&  rhs )  {^972^^^^^968^991^[REPLACE] if  ( lhs == rhs )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^return null;^973^^^^^968^991^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^if  (rhs != null )  {^975^^^^^968^991^[REPLACE] if  ( lhs == null )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^comparison = -1L;^976^^^^^968^991^[REPLACE] comparison = -1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^return null;^977^^^^^968^991^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^comparison = 0; ;^976^^^^^968^991^[REPLACE] comparison = -1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^if  (lhs != null )  {^979^^^^^968^991^[REPLACE] if  ( rhs == null )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^comparison = +0;^980^^^^^968^991^[REPLACE] comparison = +1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean[] lhs  rhs  [TYPE]  boolean false  true 
[ADD]^^980^^^^^968^991^[ADD] comparison = +1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^return null;^981^^^^^968^991^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^comparison = +1 - 3;^980^^^^^968^991^[REPLACE] comparison = +1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean[] lhs  rhs  [TYPE]  boolean false  true 
[ADD]^^980^981^^^^968^991^[ADD] comparison = +1; return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^if  ( lhs.length - 3 != rhs.length - 3 )  {^983^^^^^968^991^[REPLACE] if  ( lhs.length != rhs.length )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^comparison =  ( lhs.length *  0.5  < rhs.length *  0.5  )  ? -0  : +0 ;^984^^^^^968^991^[REPLACE] comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^return null;^985^^^^^968^991^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^comparison =  ( lhs.length %  2 < rhs.length %  2 )  ? -1 : +1;^984^^^^^968^991^[REPLACE] comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^for  ( int i = 0; i < lhs.length - 1 && comparison == 0; i++ )  {^987^^^^^968^991^[REPLACE] for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^append ( lhs[i], lhs[i] ) ;^988^^^^^968^991^[REPLACE] append ( lhs[i], rhs[i] ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean[] lhs  rhs  [TYPE]  boolean false  true 
[REMOVE]^append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ;^988^^^^^968^991^[REMOVE] ^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^for  ( int i = 0 ; i < lhs.length && comparison == 0 ; i++ )  {^987^^^^^968^991^[REPLACE] for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^return null;^990^^^^^968^991^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^return compareToBuilder.toComparison (  ) ;^1003^^^^^1002^1004^[REPLACE] return comparison;^[METHOD] toComparison [TYPE] int [PARAMETER] [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
