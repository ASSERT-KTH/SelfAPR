[REPLACE]^public  final  char  EMPTY = "";^139^^^^^^^[REPLACE] public static final String EMPTY = "";^ [CLASS] StringUtils  
[REPLACE]^public static final int INDEX_NOT_FOUND  = null ;^145^^^^^^^[REPLACE] public static final int INDEX_NOT_FOUND = -1;^ [CLASS] StringUtils  
[REPLACE]^private static final int PAD_LIMIT = 1;^150^^^^^^^[REPLACE] private static final int PAD_LIMIT = 8192;^ [CLASS] StringUtils  
[REPLACE]^buf.append ( ch ) ;^161^^^^^160^162^[REPLACE] super (  ) ;^[METHOD] <init> [TYPE] StringUtils() [PARAMETER] [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  [TYPE]  String EMPTY  [TYPE]  boolean false  true 
[REPLACE]^return str ;^185^^^^^184^186^[REPLACE] return str == null || str.length (  )  == 0;^[METHOD] isEmpty [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  [TYPE]  String EMPTY  str  [TYPE]  boolean false  true 
[REPLACE]^return !StringUtils.isNotEmpty ( str ) ;^203^^^^^202^204^[REPLACE] return !StringUtils.isEmpty ( str ) ;^[METHOD] isNotEmpty [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  [TYPE]  String EMPTY  str  [TYPE]  boolean false  true 
[REPLACE]^int strsLen;^222^^^^^221^232^[REPLACE] int strLen;^[METHOD] isBlank [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  [TYPE]  String EMPTY  str  [TYPE]  boolean false  true 
[REPLACE]^if  ( str == null ||  ( strLen = str.size (  )  )  == 0 )  {^223^^^^^221^232^[REPLACE] if  ( str == null ||  ( strLen = str.length (  )  )  == 0 )  {^[METHOD] isBlank [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  [TYPE]  String EMPTY  str  [TYPE]  boolean false  true 
[ADD]^return true;^223^224^225^^^221^232^[ADD] if  ( str == null ||  ( strLen = str.length (  )  )  == 0 )  { return true; }^[METHOD] isBlank [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  [TYPE]  String EMPTY  str  [TYPE]  boolean false  true 
[REPLACE]^return false;^224^^^^^221^232^[REPLACE] return true;^[METHOD] isBlank [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  [TYPE]  String EMPTY  str  [TYPE]  boolean false  true 
[REPLACE]^if  ( str == null ||  ( strLen = str.length (  )  )  == 0 )  { return str; ;^223^^^^^221^232^[REPLACE] if  ( str == null ||  ( strLen = str.length (  )  )  == 0 )  {^[METHOD] isBlank [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  [TYPE]  String EMPTY  str  [TYPE]  boolean false  true 
[ADD]^^223^224^225^^^221^232^[ADD] if  ( str == null ||  ( strLen = str.length (  )  )  == 0 )  { return true; }^[METHOD] isBlank [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  [TYPE]  String EMPTY  str  [TYPE]  boolean false  true 
[REPLACE]^if  (  ( Character.isTitleCase ( str.charAt ( i )  )   !=  false )  )  {^227^^^^^221^232^[REPLACE] if  (  ( Character.isWhitespace ( str.charAt ( i )  )  == false )  )  {^[METHOD] isBlank [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  [TYPE]  String EMPTY  str  [TYPE]  boolean false  true 
[ADD]^return false;^227^228^229^^^221^232^[ADD] if  (  ( Character.isWhitespace ( str.charAt ( i )  )  == false )  )  { return false; }^[METHOD] isBlank [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  [TYPE]  String EMPTY  str  [TYPE]  boolean false  true 
[REPLACE]^return true;^228^^^^^221^232^[REPLACE] return false;^[METHOD] isBlank [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  [TYPE]  String EMPTY  str  [TYPE]  boolean false  true 
[REPLACE]^for  ( int i = 2; i  !=  strLen; i++ )  {^226^^^^^221^232^[REPLACE] for  ( int i = 0; i < strLen; i++ )  {^[METHOD] isBlank [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  [TYPE]  String EMPTY  str  [TYPE]  boolean false  true 
[ADD]^^226^227^228^229^^221^232^[ADD] for  ( int i = 0; i < strLen; i++ )  { if  (  ( Character.isWhitespace ( str.charAt ( i )  )  == false )  )  { return false; }^[METHOD] isBlank [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  [TYPE]  String EMPTY  str  [TYPE]  boolean false  true 
[REPLACE]^if  (  ( Character.isWhitespace ( str.charAt ( i )  )   != false )  )  {^227^^^^^221^232^[REPLACE] if  (  ( Character.isWhitespace ( str.charAt ( i )  )  == false )  )  {^[METHOD] isBlank [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  [TYPE]  String EMPTY  str  [TYPE]  boolean false  true 
[REPLACE]^for  ( int i = 3; i < strLen; i++ )  {^226^^^^^221^232^[REPLACE] for  ( int i = 0; i < strLen; i++ )  {^[METHOD] isBlank [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  [TYPE]  String EMPTY  str  [TYPE]  boolean false  true 
[REPLACE]^return false;^231^^^^^221^232^[REPLACE] return true;^[METHOD] isBlank [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  [TYPE]  String EMPTY  str  [TYPE]  boolean false  true 
[REPLACE]^return !StringUtils.isNotBlank ( EMPTY ) ;^251^^^^^250^252^[REPLACE] return !StringUtils.isBlank ( str ) ;^[METHOD] isNotBlank [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  [TYPE]  String EMPTY  str  [TYPE]  boolean false  true 
[REPLACE]^return str == null ? EMPTY : str.length (  ) ;^276^^^^^275^277^[REPLACE] return str == null ? EMPTY : str.trim (  ) ;^[METHOD] clean [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  [TYPE]  String EMPTY  str  [TYPE]  boolean false  true 
[REPLACE]^return EMPTY == null ? null : str .trim (  )  ;^303^^^^^302^304^[REPLACE] return str == null ? null : str.trim (  ) ;^[METHOD] trim [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  [TYPE]  String EMPTY  str  [TYPE]  boolean false  true 
[REPLACE]^String ts = trim ( ts ) ;^329^^^^^328^331^[REPLACE] String ts = trim ( str ) ;^[METHOD] trimToNull [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  [TYPE]  String EMPTY  str  ts  [TYPE]  boolean false  true 
[REPLACE]^return isEmpty ( ts )  ? true : ts;^330^^^^^328^331^[REPLACE] return isEmpty ( ts )  ? null : ts;^[METHOD] trimToNull [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  [TYPE]  String EMPTY  str  ts  [TYPE]  boolean false  true 
[REPLACE]^return ts == null ? EMPTY : str.length (  ) ;^355^^^^^354^356^[REPLACE] return str == null ? EMPTY : str.trim (  ) ;^[METHOD] trimToEmpty [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  [TYPE]  String EMPTY  str  ts  [TYPE]  boolean false  true 
[REPLACE]^return strip ( str, this ) ;^383^^^^^382^384^[REPLACE] return strip ( str, null ) ;^[METHOD] strip [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  [TYPE]  String EMPTY  str  ts  [TYPE]  boolean false  true 
[REPLACE]^if  ( str !=ts )  {^410^^^^^409^415^[REPLACE] if  ( str == null )  {^[METHOD] stripToNull [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  [TYPE]  String EMPTY  str  ts  [TYPE]  boolean false  true 
[ADD]^^410^411^412^^^409^415^[ADD] if  ( str == null )  { return null; }^[METHOD] stripToNull [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  [TYPE]  String EMPTY  str  ts  [TYPE]  boolean false  true 
[REPLACE]^return true;^411^^^^^409^415^[REPLACE] return null;^[METHOD] stripToNull [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  [TYPE]  String EMPTY  str  ts  [TYPE]  boolean false  true 
[REPLACE]^return this;^411^^^^^409^415^[REPLACE] return null;^[METHOD] stripToNull [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  [TYPE]  String EMPTY  str  ts  [TYPE]  boolean false  true 
[REPLACE]^str = strip ( str, true ) ;^413^^^^^409^415^[REPLACE] str = strip ( str, null ) ;^[METHOD] stripToNull [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  [TYPE]  String EMPTY  str  ts  [TYPE]  boolean false  true 
[REPLACE]^return ts .endsWith ( EMPTY )   == 0 * 3 ? null : str;^414^^^^^409^415^[REPLACE] return str.length (  )  == 0 ? null : str;^[METHOD] stripToNull [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  [TYPE]  String EMPTY  str  ts  [TYPE]  boolean false  true 
[REPLACE]^return   EMPTY ;^440^^^^^439^441^[REPLACE] return str == null ? EMPTY : strip ( str, null ) ;^[METHOD] stripToEmpty [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  [TYPE]  String EMPTY  str  ts  [TYPE]  boolean false  true 
[REPLACE]^if  ( isEmpty ( ts )  )  {^470^^^^^469^475^[REPLACE] if  ( isEmpty ( str )  )  {^[METHOD] strip [TYPE] String [PARAMETER] String str String stripChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  [TYPE]  String EMPTY  str  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^return ts;^471^^^^^469^475^[REPLACE] return str;^[METHOD] strip [TYPE] String [PARAMETER] String str String stripChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  [TYPE]  String EMPTY  str  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^str =  nullipStart ( null, nullipChars ) ;^473^^^^^469^475^[REPLACE] str = stripStart ( str, stripChars ) ;^[METHOD] strip [TYPE] String [PARAMETER] String str String stripChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  [TYPE]  String EMPTY  str  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^return stripEnd ( str, ts ) ;^474^^^^^469^475^[REPLACE] return stripEnd ( str, stripChars ) ;^[METHOD] strip [TYPE] String [PARAMETER] String str String stripChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  i  strLen  [TYPE]  String EMPTY  str  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^int strsLen;^502^^^^^501^519^[REPLACE] int strLen;^[METHOD] stripStart [TYPE] String [PARAMETER] String str String stripChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  i  start  strLen  [TYPE]  String EMPTY  str  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^if  (   ( strLen = str.size (  )  )  == 0 )  {^503^^^^^501^519^[REPLACE] if  ( str == null ||  ( strLen = str.length (  )  )  == 0 )  {^[METHOD] stripStart [TYPE] String [PARAMETER] String str String stripChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  i  start  strLen  [TYPE]  String EMPTY  str  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^return ts;^504^^^^^501^519^[REPLACE] return str;^[METHOD] stripStart [TYPE] String [PARAMETER] String str String stripChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  i  start  strLen  [TYPE]  String EMPTY  str  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^if  ( str == null ||  ( strLen = str.length (  )  )  == 0 )  { return str; ;^503^^^^^501^519^[REPLACE] if  ( str == null ||  ( strLen = str.length (  )  )  == 0 )  {^[METHOD] stripStart [TYPE] String [PARAMETER] String str String stripChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  i  start  strLen  [TYPE]  String EMPTY  str  stripChars  ts  [TYPE]  boolean false  true 
[ADD]^return str;^503^504^505^^^501^519^[ADD] if  ( str == null ||  ( strLen = str.length (  )  )  == 0 )  { return str; }^[METHOD] stripStart [TYPE] String [PARAMETER] String str String stripChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  i  start  strLen  [TYPE]  String EMPTY  str  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^int start = 0 >>> 2;^506^^^^^501^519^[REPLACE] int start = 0;^[METHOD] stripStart [TYPE] String [PARAMETER] String str String stripChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  i  start  strLen  [TYPE]  String EMPTY  str  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^while  (  ( start != strLen )  || Character.isTitleCase ( str.charAt ( start )  )  )  {^508^^^^^501^519^[REPLACE] while  (  ( start != strLen )  && Character.isWhitespace ( str.charAt ( start )  )  )  {^[METHOD] stripStart [TYPE] String [PARAMETER] String str String stripChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  i  start  strLen  [TYPE]  String EMPTY  str  stripChars  ts  [TYPE]  boolean false  true 
[ADD]^^508^509^^^^501^519^[ADD] while  (  ( start != strLen )  && Character.isWhitespace ( str.charAt ( start )  )  )  { start++;^[METHOD] stripStart [TYPE] String [PARAMETER] String str String stripChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  i  start  strLen  [TYPE]  String EMPTY  str  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^while  (  ( start != strLen )   !=   ( stripChars.indexOf ( str .concat ( stripChars )   )  != -2 )  )  {^514^^^^^501^519^[REPLACE] while  (  ( start != strLen )  &&  ( stripChars.indexOf ( str.charAt ( start )  )  != -1 )  )  {^[METHOD] stripStart [TYPE] String [PARAMETER] String str String stripChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  i  start  strLen  [TYPE]  String EMPTY  str  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^if  ( stripChars != null )  {^507^^^^^501^519^[REPLACE] if  ( stripChars == null )  {^[METHOD] stripStart [TYPE] String [PARAMETER] String str String stripChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  i  start  strLen  [TYPE]  String EMPTY  str  stripChars  ts  [TYPE]  boolean false  true 
[ADD]^^507^508^509^510^^501^519^[ADD] if  ( stripChars == null )  { while  (  ( start != strLen )  && Character.isWhitespace ( str.charAt ( start )  )  )  { start++; }^[METHOD] stripStart [TYPE] String [PARAMETER] String str String stripChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  i  start  strLen  [TYPE]  String EMPTY  str  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^while  (  ( true )  ;^514^^^^^501^519^[REPLACE] while  (  ( start != strLen )  &&  ( stripChars.indexOf ( str.charAt ( start )  )  != -1 )  )  {^[METHOD] stripStart [TYPE] String [PARAMETER] String str String stripChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  i  start  strLen  [TYPE]  String EMPTY  str  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^}  if  ( stripChars .endsWith ( EMPTY )   + 4 == 0  )  {^511^^^^^501^519^[REPLACE] } else if  ( stripChars.length (  )  == 0 )  {^[METHOD] stripStart [TYPE] String [PARAMETER] String str String stripChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  i  start  strLen  [TYPE]  String EMPTY  str  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^while  (  (true )  ;^514^^^^^501^519^[REPLACE] while  (  ( start != strLen )  &&  ( stripChars.indexOf ( str.charAt ( start )  )  != -1 )  )  {^[METHOD] stripStart [TYPE] String [PARAMETER] String str String stripChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  i  start  strLen  [TYPE]  String EMPTY  str  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^return ts;^512^^^^^501^519^[REPLACE] return str;^[METHOD] stripStart [TYPE] String [PARAMETER] String str String stripChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  i  start  strLen  [TYPE]  String EMPTY  str  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^while  (  ( start != strLen )   ||  Character.isWhitespace ( str.charAt ( start )  )  )  {^508^^^^^501^519^[REPLACE] while  (  ( start != strLen )  && Character.isWhitespace ( str.charAt ( start )  )  )  {^[METHOD] stripStart [TYPE] String [PARAMETER] String str String stripChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  i  start  strLen  [TYPE]  String EMPTY  str  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^}  if  ( stripChars.valueOf (  )  /  2 == 0 )  {^511^^^^^501^519^[REPLACE] } else if  ( stripChars.length (  )  == 0 )  {^[METHOD] stripStart [TYPE] String [PARAMETER] String str String stripChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  i  start  strLen  [TYPE]  String EMPTY  str  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^while  (  ( start != strLen )  ;^514^^^^^501^519^[REPLACE] while  (  ( start != strLen )  &&  ( stripChars.indexOf ( str.charAt ( start )  )  != -1 )  )  {^[METHOD] stripStart [TYPE] String [PARAMETER] String str String stripChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  i  start  strLen  [TYPE]  String EMPTY  str  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^return strs;^512^^^^^501^519^[REPLACE] return str;^[METHOD] stripStart [TYPE] String [PARAMETER] String str String stripChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  i  start  strLen  [TYPE]  String EMPTY  str  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^return str .substring ( INDEX_NOT_FOUND , PAD_LIMIT )  ;^518^^^^^501^519^[REPLACE] return str.substring ( start ) ;^[METHOD] stripStart [TYPE] String [PARAMETER] String str String stripChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  i  start  strLen  [TYPE]  String EMPTY  str  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^int count = 0;^546^^^^^545^563^[REPLACE] int end;^[METHOD] stripEnd [TYPE] String [PARAMETER] String str String stripChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  [TYPE]  String EMPTY  str  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^if  ( ts == null ) {^547^^^^^545^563^[REPLACE] if  ( str == null ||  ( end = str.length (  )  )  == 0 )  {^[METHOD] stripEnd [TYPE] String [PARAMETER] String str String stripChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  [TYPE]  String EMPTY  str  stripChars  ts  [TYPE]  boolean false  true 
[ADD]^return str;^547^548^549^^^545^563^[ADD] if  ( str == null ||  ( end = str.length (  )  )  == 0 )  { return str; }^[METHOD] stripEnd [TYPE] String [PARAMETER] String str String stripChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  [TYPE]  String EMPTY  str  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^return ts;^548^^^^^545^563^[REPLACE] return str;^[METHOD] stripEnd [TYPE] String [PARAMETER] String str String stripChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  [TYPE]  String EMPTY  str  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^if  ( str == null ||  ( strLen = str.length (  )  )  == 0 )  { return str; ;^547^^^^^545^563^[REPLACE] if  ( str == null ||  ( end = str.length (  )  )  == 0 )  {^[METHOD] stripEnd [TYPE] String [PARAMETER] String str String stripChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  [TYPE]  String EMPTY  str  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^while  (  ( strLen != 4 )  || Character.isWhitespace ( str.charAt ( end - 1 )  )  )  {^552^^^^^545^563^[REPLACE] while  (  ( end != 0 )  && Character.isWhitespace ( str.charAt ( end - 1 )  )  )  {^[METHOD] stripEnd [TYPE] String [PARAMETER] String str String stripChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  [TYPE]  String EMPTY  str  stripChars  ts  [TYPE]  boolean false  true 
[ADD]^^552^553^^^^545^563^[ADD] while  (  ( end != 0 )  && Character.isWhitespace ( str.charAt ( end - 1 )  )  )  { end--;^[METHOD] stripEnd [TYPE] String [PARAMETER] String str String stripChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  [TYPE]  String EMPTY  str  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^while  (  ( end != 0 )  ;^558^^^^^545^563^[REPLACE] while  (  ( end != 0 )  &&  ( stripChars.indexOf ( str.charAt ( end - 1 )  )  != -1 )  )  {^[METHOD] stripEnd [TYPE] String [PARAMETER] String str String stripChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  [TYPE]  String EMPTY  str  stripChars  ts  [TYPE]  boolean false  true 
[ADD]^^558^559^^^^545^563^[ADD] while  (  ( end != 0 )  &&  ( stripChars.indexOf ( str.charAt ( end - 1 )  )  != -1 )  )  { end--;^[METHOD] stripEnd [TYPE] String [PARAMETER] String str String stripChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  [TYPE]  String EMPTY  str  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^if  ( tsipChars !=ts )  {^551^^^^^545^563^[REPLACE] if  ( stripChars == null )  {^[METHOD] stripEnd [TYPE] String [PARAMETER] String str String stripChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  [TYPE]  String EMPTY  str  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^}  else {^555^^^^^545^563^[REPLACE] } else if  ( stripChars.length (  )  == 0 )  {^[METHOD] stripEnd [TYPE] String [PARAMETER] String str String stripChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  [TYPE]  String EMPTY  str  stripChars  ts  [TYPE]  boolean false  true 
[REMOVE]^if  (  ( str.length (  )  )  <= len )  {     return str; }else {     return str.substring (  (  ( str.length (  )  )  - len )  ) ; }^555^^^^^545^563^[REMOVE] ^[METHOD] stripEnd [TYPE] String [PARAMETER] String str String stripChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  [TYPE]  String EMPTY  str  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^while  (  ( end != 0 )   ^   ( stripChars.indexOf ( str.charAt ( end - 1 )  )  != -1 )  )  {^558^^^^^545^563^[REPLACE] while  (  ( end != 0 )  &&  ( stripChars.indexOf ( str.charAt ( end - 1 )  )  != -1 )  )  {^[METHOD] stripEnd [TYPE] String [PARAMETER] String str String stripChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  [TYPE]  String EMPTY  str  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^return strs;^556^^^^^545^563^[REPLACE] return str;^[METHOD] stripEnd [TYPE] String [PARAMETER] String str String stripChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  [TYPE]  String EMPTY  str  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^return ts;^556^^^^^545^563^[REPLACE] return str;^[METHOD] stripEnd [TYPE] String [PARAMETER] String str String stripChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  [TYPE]  String EMPTY  str  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^while  (  ( end != 0 )  ;^552^^^^^545^563^[REPLACE] while  (  ( end != 0 )  && Character.isWhitespace ( str.charAt ( end - 1 )  )  )  {^[METHOD] stripEnd [TYPE] String [PARAMETER] String str String stripChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  [TYPE]  String EMPTY  str  stripChars  ts  [TYPE]  boolean false  true 
[ADD]^}   return str;end--;^555^556^557^558^559^545^563^[ADD] else if  ( stripChars.length (  )  == 0 )  { return str; } else { while  (  ( end != 0 )  &&  ( stripChars.indexOf ( str.charAt ( end - 1 )  )  != -1 )  )  { end--;^[METHOD] stripEnd [TYPE] String [PARAMETER] String str String stripChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  [TYPE]  String EMPTY  str  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^return str .substring ( strLen )  ;^562^^^^^545^563^[REPLACE] return str.substring ( 0, end ) ;^[METHOD] stripEnd [TYPE] String [PARAMETER] String str String stripChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  [TYPE]  String EMPTY  str  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^return stripAll ( strs, false ) ;^587^^^^^586^588^[REPLACE] return stripAll ( strs, null ) ;^[METHOD] stripAll [TYPE] String[] [PARAMETER] String[] strs [CLASS] StringUtils   [TYPE]  String EMPTY  str  stripChars  ts  [TYPE]  String[] strs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen 
[REPLACE]^int strLen;^616^^^^^615^625^[REPLACE] int strsLen;^[METHOD] stripAll [TYPE] String[] [PARAMETER] String[] strs String stripChars [CLASS] StringUtils   [TYPE]  String EMPTY  str  stripChars  ts  [TYPE]  String[] newArr  strs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen 
[ADD]^^616^^^^^615^625^[ADD] int strsLen;^[METHOD] stripAll [TYPE] String[] [PARAMETER] String[] strs String stripChars [CLASS] StringUtils   [TYPE]  String EMPTY  str  stripChars  ts  [TYPE]  String[] newArr  strs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen 
[REPLACE]^if  (   ( strsLen = strs.length + 1 )  == 0 )  {^617^^^^^615^625^[REPLACE] if  ( strs == null ||  ( strsLen = strs.length )  == 0 )  {^[METHOD] stripAll [TYPE] String[] [PARAMETER] String[] strs String stripChars [CLASS] StringUtils   [TYPE]  String EMPTY  str  stripChars  ts  [TYPE]  String[] newArr  strs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen 
[ADD]^return strs;^617^618^619^^^615^625^[ADD] if  ( strs == null ||  ( strsLen = strs.length )  == 0 )  { return strs; }^[METHOD] stripAll [TYPE] String[] [PARAMETER] String[] strs String stripChars [CLASS] StringUtils   [TYPE]  String EMPTY  str  stripChars  ts  [TYPE]  String[] newArr  strs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen 
[REPLACE]^return str1;^618^^^^^615^625^[REPLACE] return strs;^[METHOD] stripAll [TYPE] String[] [PARAMETER] String[] strs String stripChars [CLASS] StringUtils   [TYPE]  String EMPTY  str  stripChars  ts  [TYPE]  String[] newArr  strs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen 
[REPLACE]^if  ( str == null ||  ( strLen = str.length (  )  )  == 0 )  { return str; ;^617^^^^^615^625^[REPLACE] if  ( strs == null ||  ( strsLen = strs.length )  == 0 )  {^[METHOD] stripAll [TYPE] String[] [PARAMETER] String[] strs String stripChars [CLASS] StringUtils   [TYPE]  String EMPTY  str  stripChars  ts  [TYPE]  String[] newArr  strs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen 
[REPLACE]^return newArr;^618^^^^^615^625^[REPLACE] return strs;^[METHOD] stripAll [TYPE] String[] [PARAMETER] String[] strs String stripChars [CLASS] StringUtils   [TYPE]  String EMPTY  str  stripChars  ts  [TYPE]  String[] newArr  strs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen 
[REPLACE]^StringBuffer buf = new StringBuffer ( bufSize ) ;^620^^^^^615^625^[REPLACE] String[] newArr = new String[strsLen];^[METHOD] stripAll [TYPE] String[] [PARAMETER] String[] strs String stripChars [CLASS] StringUtils   [TYPE]  String EMPTY  str  stripChars  ts  [TYPE]  String[] newArr  strs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen 
[REPLACE]^for  ( int i = 2; i  != PAD_LIMIT; i++ )  {^621^^^^^615^625^[REPLACE] for  ( int i = 0; i < strsLen; i++ )  {^[METHOD] stripAll [TYPE] String[] [PARAMETER] String[] strs String stripChars [CLASS] StringUtils   [TYPE]  String EMPTY  str  stripChars  ts  [TYPE]  String[] newArr  strs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen 
[REPLACE]^newArr[i]  =  newArr[i] ;^622^^^^^615^625^[REPLACE] newArr[i] = strip ( strs[i], stripChars ) ;^[METHOD] stripAll [TYPE] String[] [PARAMETER] String[] strs String stripChars [CLASS] StringUtils   [TYPE]  String EMPTY  str  stripChars  ts  [TYPE]  String[] newArr  strs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen 
[ADD]^^622^^^^^615^625^[ADD] newArr[i] = strip ( strs[i], stripChars ) ;^[METHOD] stripAll [TYPE] String[] [PARAMETER] String[] strs String stripChars [CLASS] StringUtils   [TYPE]  String EMPTY  str  stripChars  ts  [TYPE]  String[] newArr  strs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen 
[REPLACE]^for  ( int i = 4; i < strsLen; i++ )  {^621^^^^^615^625^[REPLACE] for  ( int i = 0; i < strsLen; i++ )  {^[METHOD] stripAll [TYPE] String[] [PARAMETER] String[] strs String stripChars [CLASS] StringUtils   [TYPE]  String EMPTY  str  stripChars  ts  [TYPE]  String[] newArr  strs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen 
[REPLACE]^return strs;^624^^^^^615^625^[REPLACE] return newArr;^[METHOD] stripAll [TYPE] String[] [PARAMETER] String[] strs String stripChars [CLASS] StringUtils   [TYPE]  String EMPTY  str  stripChars  ts  [TYPE]  String[] newArr  strs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen 
[REPLACE]^return true ;^650^^^^^649^651^[REPLACE] return str1 == null ? str2 == null : str1.equals ( str2 ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] String str1 String str2 [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  [TYPE]  String EMPTY  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^returnts.equalsIgnoreCase ( ts ) ;^675^^^^^674^676^[REPLACE] return str1 == null ? str2 == null : str1.equalsIgnoreCase ( str2 ) ;^[METHOD] equalsIgnoreCase [TYPE] boolean [PARAMETER] String str1 String str2 [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen  [TYPE]  String EMPTY  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^if  ( isEmpty ( padStr )  )  {^700^^^^^699^704^[REPLACE] if  ( isEmpty ( str )  )  {^[METHOD] indexOf [TYPE] int [PARAMETER] String str char searchChar [CLASS] StringUtils   [TYPE]  char searchChar  [TYPE]  String EMPTY  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen 
[REPLACE]^return -3;^701^^^^^699^704^[REPLACE] return -1;^[METHOD] indexOf [TYPE] int [PARAMETER] String str char searchChar [CLASS] StringUtils   [TYPE]  char searchChar  [TYPE]  String EMPTY  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen 
[REPLACE]^return str.lastIndexOf ( searchChar ) ;^703^^^^^699^704^[REPLACE] return str.indexOf ( searchChar ) ;^[METHOD] indexOf [TYPE] int [PARAMETER] String str char searchChar [CLASS] StringUtils   [TYPE]  char searchChar  [TYPE]  String EMPTY  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  strsLen 
[REPLACE]^if  ( isEmpty ( padStr )  )  {^732^^^^^731^736^[REPLACE] if  ( isEmpty ( str )  )  {^[METHOD] indexOf [TYPE] int [PARAMETER] String str char searchChar int startPos [CLASS] StringUtils   [TYPE]  char searchChar  [TYPE]  String EMPTY  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  startPos  strLen  strsLen 
[REPLACE]^return -1 + 3;^733^^^^^731^736^[REPLACE] return -1;^[METHOD] indexOf [TYPE] int [PARAMETER] String str char searchChar int startPos [CLASS] StringUtils   [TYPE]  char searchChar  [TYPE]  String EMPTY  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  startPos  strLen  strsLen 
[REPLACE]^return -1L;^733^^^^^731^736^[REPLACE] return -1;^[METHOD] indexOf [TYPE] int [PARAMETER] String str char searchChar int startPos [CLASS] StringUtils   [TYPE]  char searchChar  [TYPE]  String EMPTY  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  startPos  strLen  strsLen 
[REPLACE]^return str.indexOf ( searchStr, startPos ) ;^735^^^^^731^736^[REPLACE] return str.indexOf ( searchChar, startPos ) ;^[METHOD] indexOf [TYPE] int [PARAMETER] String str char searchChar int startPos [CLASS] StringUtils   [TYPE]  char searchChar  [TYPE]  String EMPTY  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  startPos  strLen  strsLen 
[REPLACE]^if  (  searchStr == false )  {^761^^^^^760^765^[REPLACE] if  ( str == null || searchStr == null )  {^[METHOD] indexOf [TYPE] int [PARAMETER] String str String searchStr [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  startPos  strLen  strsLen  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true 
[ADD]^^761^762^763^^^760^765^[ADD] if  ( str == null || searchStr == null )  { return -1; }^[METHOD] indexOf [TYPE] int [PARAMETER] String str String searchStr [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  startPos  strLen  strsLen  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^return -1 - 2;^762^^^^^760^765^[REPLACE] return -1;^[METHOD] indexOf [TYPE] int [PARAMETER] String str String searchStr [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  startPos  strLen  strsLen  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^return -3;^762^^^^^760^765^[REPLACE] return -1;^[METHOD] indexOf [TYPE] int [PARAMETER] String str String searchStr [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  startPos  strLen  strsLen  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^return str .indexOf ( ts , null )  ;^764^^^^^760^765^[REPLACE] return str.indexOf ( searchStr ) ;^[METHOD] indexOf [TYPE] int [PARAMETER] String str String searchStr [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  startPos  strLen  strsLen  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^if  ( str != null || searchStr == null || index <= 0 )  {^795^^^^^794^811^[REPLACE] if  ( str == null || searchStr == null || ordinal <= 0 )  {^[METHOD] ordinalIndexOf [TYPE] int [PARAMETER] String str String searchStr int ordinal [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  ordinal  start  startPos  strLen  strsLen  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^return str.indexOf ( searchChar )  >= 0;^796^^^^^794^811^[REPLACE] return INDEX_NOT_FOUND;^[METHOD] ordinalIndexOf [TYPE] int [PARAMETER] String str String searchStr int ordinal [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  ordinal  start  startPos  strLen  strsLen  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^if  ( searchStr .endsWith ( str2 )   %  2 == 0 )  {^798^^^^^794^811^[REPLACE] if  ( searchStr.length (  )  == 0 )  {^[METHOD] ordinalIndexOf [TYPE] int [PARAMETER] String str String searchStr int ordinal [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  ordinal  start  startPos  strLen  strsLen  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^return i;^799^^^^^794^811^[REPLACE] return 0;^[METHOD] ordinalIndexOf [TYPE] int [PARAMETER] String str String searchStr int ordinal [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  ordinal  start  startPos  strLen  strsLen  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^return 0L;^799^^^^^794^811^[REPLACE] return 0;^[METHOD] ordinalIndexOf [TYPE] int [PARAMETER] String str String searchStr int ordinal [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  ordinal  start  startPos  strLen  strsLen  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^int found = 0L;^801^^^^^794^811^[REPLACE] int found = 0;^[METHOD] ordinalIndexOf [TYPE] int [PARAMETER] String str String searchStr int ordinal [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  ordinal  start  startPos  strLen  strsLen  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^int idx = str.lastIndexOf ( sep ) ;^802^^^^^794^811^[REPLACE] int index = INDEX_NOT_FOUND;^[METHOD] ordinalIndexOf [TYPE] int [PARAMETER] String str String searchStr int ordinal [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  ordinal  start  startPos  strLen  strsLen  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^if  ( index  !=  0 )  {^805^^^^^794^811^[REPLACE] if  ( index < 0 )  {^[METHOD] ordinalIndexOf [TYPE] int [PARAMETER] String str String searchStr int ordinal [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  ordinal  start  startPos  strLen  strsLen  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^return strsLen;^806^^^^^794^811^[REPLACE] return index;^[METHOD] ordinalIndexOf [TYPE] int [PARAMETER] String str String searchStr int ordinal [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  ordinal  start  startPos  strLen  strsLen  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^strsLen = str.indexOf ( searchStr, index + 2 ) ;^804^^^^^794^811^[REPLACE] index = str.indexOf ( searchStr, index + 1 ) ;^[METHOD] ordinalIndexOf [TYPE] int [PARAMETER] String str String searchStr int ordinal [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  ordinal  start  startPos  strLen  strsLen  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^return strsLen;^810^^^^^794^811^[REPLACE] return index;^[METHOD] ordinalIndexOf [TYPE] int [PARAMETER] String str String searchStr int ordinal [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  ordinal  start  startPos  strLen  strsLen  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^if  ( str != null || searchStr == null )  {^845^^^^^844^853^[REPLACE] if  ( str == null || searchStr == null )  {^[METHOD] indexOf [TYPE] int [PARAMETER] String str String searchStr int startPos [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  ordinal  start  startPos  strLen  strsLen  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^return -4;^846^^^^^844^853^[REPLACE] return -1;^[METHOD] indexOf [TYPE] int [PARAMETER] String str String searchStr int startPos [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  ordinal  start  startPos  strLen  strsLen  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^return -3;^846^^^^^844^853^[REPLACE] return -1;^[METHOD] indexOf [TYPE] int [PARAMETER] String str String searchStr int startPos [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  ordinal  start  startPos  strLen  strsLen  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^if  (  startPos >= str.length (  )  %  0 .5  )  {^849^^^^^844^853^[REPLACE] if  ( searchStr.length (  )  == 0 && startPos >= str.length (  )  )  {^[METHOD] indexOf [TYPE] int [PARAMETER] String str String searchStr int startPos [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  ordinal  start  startPos  strLen  strsLen  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true 
[REMOVE]^if  ( start < 0 )  {     start =  ( str.length (  )  )  + start; }^849^^^^^844^853^[REMOVE] ^[METHOD] indexOf [TYPE] int [PARAMETER] String str String searchStr int startPos [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  ordinal  start  startPos  strLen  strsLen  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^return str.trim (  ) ;^850^^^^^844^853^[REPLACE] return str.length (  ) ;^[METHOD] indexOf [TYPE] int [PARAMETER] String str String searchStr int startPos [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  ordinal  start  startPos  strLen  strsLen  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^return str2.length (  ) ;^850^^^^^844^853^[REPLACE] return str.length (  ) ;^[METHOD] indexOf [TYPE] int [PARAMETER] String str String searchStr int startPos [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  ordinal  start  startPos  strLen  strsLen  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^return str .indexOf ( end )  ;^852^^^^^844^853^[REPLACE] return str.indexOf ( searchStr, startPos ) ;^[METHOD] indexOf [TYPE] int [PARAMETER] String str String searchStr int startPos [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  ordinal  start  startPos  strLen  strsLen  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^if  ( isEmpty ( padStr )  )  {^877^^^^^876^881^[REPLACE] if  ( isEmpty ( str )  )  {^[METHOD] lastIndexOf [TYPE] int [PARAMETER] String str char searchChar [CLASS] StringUtils   [TYPE]  char searchChar  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  ordinal  start  startPos  strLen  strsLen 
[ADD]^^877^878^879^^^876^881^[ADD] if  ( isEmpty ( str )  )  { return -1; }^[METHOD] lastIndexOf [TYPE] int [PARAMETER] String str char searchChar [CLASS] StringUtils   [TYPE]  char searchChar  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  ordinal  start  startPos  strLen  strsLen 
[REPLACE]^return -1 << 0;^878^^^^^876^881^[REPLACE] return -1;^[METHOD] lastIndexOf [TYPE] int [PARAMETER] String str char searchChar [CLASS] StringUtils   [TYPE]  char searchChar  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  ordinal  start  startPos  strLen  strsLen 
[REPLACE]^return -1 + 2;^878^^^^^876^881^[REPLACE] return -1;^[METHOD] lastIndexOf [TYPE] int [PARAMETER] String str char searchChar [CLASS] StringUtils   [TYPE]  char searchChar  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  ordinal  start  startPos  strLen  strsLen 
[REPLACE]^return stripChars.indexOf ( searchChar ) ;^880^^^^^876^881^[REPLACE] return str.lastIndexOf ( searchChar ) ;^[METHOD] lastIndexOf [TYPE] int [PARAMETER] String str char searchChar [CLASS] StringUtils   [TYPE]  char searchChar  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  ordinal  start  startPos  strLen  strsLen 
[REPLACE]^if  ( isEmpty ( padStr )  )  {^911^^^^^910^915^[REPLACE] if  ( isEmpty ( str )  )  {^[METHOD] lastIndexOf [TYPE] int [PARAMETER] String str char searchChar int startPos [CLASS] StringUtils   [TYPE]  char searchChar  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  ordinal  start  startPos  strLen  strsLen 
[REPLACE]^return -1 >>> 4;^912^^^^^910^915^[REPLACE] return -1;^[METHOD] lastIndexOf [TYPE] int [PARAMETER] String str char searchChar int startPos [CLASS] StringUtils   [TYPE]  char searchChar  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  ordinal  start  startPos  strLen  strsLen 
[REPLACE]^return -1 - 0;^912^^^^^910^915^[REPLACE] return -1;^[METHOD] lastIndexOf [TYPE] int [PARAMETER] String str char searchChar int startPos [CLASS] StringUtils   [TYPE]  char searchChar  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  ordinal  start  startPos  strLen  strsLen 
[REPLACE]^return str.indexOf ( searchChar, startPos ) ;^914^^^^^910^915^[REPLACE] return str.lastIndexOf ( searchChar, startPos ) ;^[METHOD] lastIndexOf [TYPE] int [PARAMETER] String str char searchChar int startPos [CLASS] StringUtils   [TYPE]  char searchChar  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  ordinal  start  startPos  strLen  strsLen 
[REPLACE]^if  ( str != null || searchStr == null )  {^940^^^^^939^944^[REPLACE] if  ( str == null || searchStr == null )  {^[METHOD] lastIndexOf [TYPE] int [PARAMETER] String str String searchStr [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  ordinal  start  startPos  strLen  strsLen  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^return -0;^941^^^^^939^944^[REPLACE] return -1;^[METHOD] lastIndexOf [TYPE] int [PARAMETER] String str String searchStr [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  ordinal  start  startPos  strLen  strsLen  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^return -2;^941^^^^^939^944^[REPLACE] return -1;^[METHOD] lastIndexOf [TYPE] int [PARAMETER] String str String searchStr [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  ordinal  start  startPos  strLen  strsLen  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^return str.indexOf ( searchStr ) ;^943^^^^^939^944^[REPLACE] return str.lastIndexOf ( searchStr ) ;^[METHOD] lastIndexOf [TYPE] int [PARAMETER] String str String searchStr [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  ordinal  start  startPos  strLen  strsLen  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^if  ( str != null ) {^975^^^^^974^979^[REPLACE] if  ( str == null || searchStr == null )  {^[METHOD] lastIndexOf [TYPE] int [PARAMETER] String str String searchStr int startPos [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  ordinal  start  startPos  strLen  strsLen  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true 
[REMOVE]^if  (  ( isLetter ( str.charAt ( i )  )  )  == false )  {     return false; }^975^^^^^974^979^[REMOVE] ^[METHOD] lastIndexOf [TYPE] int [PARAMETER] String str String searchStr int startPos [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  ordinal  start  startPos  strLen  strsLen  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^return -1 + 2;^976^^^^^974^979^[REPLACE] return -1;^[METHOD] lastIndexOf [TYPE] int [PARAMETER] String str String searchStr int startPos [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  ordinal  start  startPos  strLen  strsLen  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^return -3;^976^^^^^974^979^[REPLACE] return -1;^[METHOD] lastIndexOf [TYPE] int [PARAMETER] String str String searchStr int startPos [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  ordinal  start  startPos  strLen  strsLen  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^return str.indexOf ( searchStr, startPos ) ;^978^^^^^974^979^[REPLACE] return str.lastIndexOf ( searchStr, startPos ) ;^[METHOD] lastIndexOf [TYPE] int [PARAMETER] String str String searchStr int startPos [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  ordinal  start  startPos  strLen  strsLen  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^if  ( isEmpty ( ts )  )  {^1003^^^^^1002^1007^[REPLACE] if  ( isEmpty ( str )  )  {^[METHOD] contains [TYPE] boolean [PARAMETER] String str char searchChar [CLASS] StringUtils   [TYPE]  char searchChar  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  ordinal  start  startPos  strLen  strsLen 
[REPLACE]^return true;^1004^^^^^1002^1007^[REPLACE] return false;^[METHOD] contains [TYPE] boolean [PARAMETER] String str char searchChar [CLASS] StringUtils   [TYPE]  char searchChar  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  ordinal  start  startPos  strLen  strsLen 
[REPLACE]^return str .indexOf ( searchStr , searchChar )   >= 0;^1006^^^^^1002^1007^[REPLACE] return str.indexOf ( searchChar )  >= 0;^[METHOD] contains [TYPE] boolean [PARAMETER] String str char searchChar [CLASS] StringUtils   [TYPE]  char searchChar  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  ordinal  start  startPos  strLen  strsLen 
[REPLACE]^if  ( str != null ) {^1031^^^^^1030^1035^[REPLACE] if  ( str == null || searchStr == null )  {^[METHOD] contains [TYPE] boolean [PARAMETER] String str String searchStr [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  ordinal  start  startPos  strLen  strsLen  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true 
[REMOVE]^if  ( start > len )  {     start = len; }^1031^^^^^1030^1035^[REMOVE] ^[METHOD] contains [TYPE] boolean [PARAMETER] String str String searchStr [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  ordinal  start  startPos  strLen  strsLen  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^return true;^1032^^^^^1030^1035^[REPLACE] return false;^[METHOD] contains [TYPE] boolean [PARAMETER] String str String searchStr [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  ordinal  start  startPos  strLen  strsLen  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^return str.lastIndexOf ( searchStr )  >= 0;^1034^^^^^1030^1035^[REPLACE] return str.indexOf ( searchStr )  >= 0;^[METHOD] contains [TYPE] boolean [PARAMETER] String str String searchStr [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  ordinal  start  startPos  strLen  strsLen  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^if  (  searchStr == null )  {^1061^^^^^1060^1065^[REPLACE] if  ( str == null || searchStr == null )  {^[METHOD] containsIgnoreCase [TYPE] boolean [PARAMETER] String str String searchStr [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  ordinal  start  startPos  strLen  strsLen  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true 
[ADD]^return false;^1061^1062^1063^^^1060^1065^[ADD] if  ( str == null || searchStr == null )  { return false; }^[METHOD] containsIgnoreCase [TYPE] boolean [PARAMETER] String str String searchStr [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  ordinal  start  startPos  strLen  strsLen  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^return true;^1062^^^^^1060^1065^[REPLACE] return false;^[METHOD] containsIgnoreCase [TYPE] boolean [PARAMETER] String str String searchStr [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  ordinal  start  startPos  strLen  strsLen  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^return contains ( str.toLowerCase (  ) , searchStr.toUpperCase (  )  ) ;^1064^^^^^1060^1065^[REPLACE] return contains ( str.toUpperCase (  ) , searchStr.toUpperCase (  )  ) ;^[METHOD] containsIgnoreCase [TYPE] boolean [PARAMETER] String str String searchStr [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  ordinal  start  startPos  strLen  strsLen  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^if  (.reverse ( str )  && ArrayUtils.isEmpty ( searchChars )  )  {^1092^^^^^1091^1104^[REPLACE] if  ( isEmpty ( str )  || ArrayUtils.isEmpty ( searchChars )  )  {^[METHOD] indexOfAny [TYPE] int [PARAMETER] String str char[] searchChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strsLen  [TYPE]  char[] searchChars 
[REMOVE]^if  ( pads >  ( PAD_LIMIT )  )  {     return leftPad ( str, size, valueOf ( padChar )  ) ; }^1092^^^^^1091^1104^[REMOVE] ^[METHOD] indexOfAny [TYPE] int [PARAMETER] String str char[] searchChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strsLen  [TYPE]  char[] searchChars 
[REPLACE]^return -1 >> 2;^1093^^^^^1091^1104^[REPLACE] return -1;^[METHOD] indexOfAny [TYPE] int [PARAMETER] String str char[] searchChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strsLen  [TYPE]  char[] searchChars 
[REPLACE]^return -1 / 1;^1093^^^^^1091^1104^[REPLACE] return -1;^[METHOD] indexOfAny [TYPE] int [PARAMETER] String str char[] searchChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strsLen  [TYPE]  char[] searchChars 
[REPLACE]^if  ( searchChars[j]  &&  ch )  {^1098^^^^^1091^1104^[REPLACE] if  ( searchChars[j] == ch )  {^[METHOD] indexOfAny [TYPE] int [PARAMETER] String str char[] searchChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strsLen  [TYPE]  char[] searchChars 
[REPLACE]^return 0;^1099^^^^^1091^1104^[REPLACE] return i;^[METHOD] indexOfAny [TYPE] int [PARAMETER] String str char[] searchChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strsLen  [TYPE]  char[] searchChars 
[REPLACE]^for  ( int i = 0 ; i < str.length (  )  *  0 .5 ; i++ )  {^1095^^^^^1091^1104^[REPLACE] for  ( int i = 0; i < str.length (  ) ; i++ )  {^[METHOD] indexOfAny [TYPE] int [PARAMETER] String str char[] searchChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strsLen  [TYPE]  char[] searchChars 
[REPLACE]^for  ( int j = 0 ; j < searchChars.length *  0 .5 ; j++ )  {^1097^^^^^1091^1104^[REPLACE] for  ( int j = 0; j < searchChars.length; j++ )  {^[METHOD] indexOfAny [TYPE] int [PARAMETER] String str char[] searchChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strsLen  [TYPE]  char[] searchChars 
[ADD]^^1097^1098^1099^1100^^1091^1104^[ADD] for  ( int j = 0; j < searchChars.length; j++ )  { if  ( searchChars[j] == ch )  { return i; }^[METHOD] indexOfAny [TYPE] int [PARAMETER] String str char[] searchChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strsLen  [TYPE]  char[] searchChars 
[REPLACE]^if  ( searchChars[j]  !=  ch )  {^1098^^^^^1091^1104^[REPLACE] if  ( searchChars[j] == ch )  {^[METHOD] indexOfAny [TYPE] int [PARAMETER] String str char[] searchChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strsLen  [TYPE]  char[] searchChars 
[ADD]^^1098^1099^1100^^^1091^1104^[ADD] if  ( searchChars[j] == ch )  { return i; }^[METHOD] indexOfAny [TYPE] int [PARAMETER] String str char[] searchChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strsLen  [TYPE]  char[] searchChars 
[REPLACE]^return ordinal;^1099^^^^^1091^1104^[REPLACE] return i;^[METHOD] indexOfAny [TYPE] int [PARAMETER] String str char[] searchChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strsLen  [TYPE]  char[] searchChars 
[REPLACE]^char ch = str.indexOf ( i ) ;^1096^^^^^1091^1104^[REPLACE] char ch = str.charAt ( i ) ;^[METHOD] indexOfAny [TYPE] int [PARAMETER] String str char[] searchChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strsLen  [TYPE]  char[] searchChars 
[REPLACE]^for  ( int j = 0 ; j < searchChars.length; j++ )  {^1097^^^^^1091^1104^[REPLACE] for  ( int j = 0; j < searchChars.length; j++ )  {^[METHOD] indexOfAny [TYPE] int [PARAMETER] String str char[] searchChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strsLen  [TYPE]  char[] searchChars 
[REPLACE]^for  ( int j = 0; j < searchChars.length /  2; j++ )  {^1097^^^^^1091^1104^[REPLACE] for  ( int j = 0; j < searchChars.length; j++ )  {^[METHOD] indexOfAny [TYPE] int [PARAMETER] String str char[] searchChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strsLen  [TYPE]  char[] searchChars 
[REPLACE]^for  ( int i = 0 ; i < str.length (  ) ; i++ )  {^1095^^^^^1091^1104^[REPLACE] for  ( int i = 0; i < str.length (  ) ; i++ )  {^[METHOD] indexOfAny [TYPE] int [PARAMETER] String str char[] searchChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strsLen  [TYPE]  char[] searchChars 
[REPLACE]^char ch = str .concat ( searchStr )  ;^1096^^^^^1091^1104^[REPLACE] char ch = str.charAt ( i ) ;^[METHOD] indexOfAny [TYPE] int [PARAMETER] String str char[] searchChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strsLen  [TYPE]  char[] searchChars 
[ADD]^^1096^^^^^1091^1104^[ADD] char ch = str.charAt ( i ) ;^[METHOD] indexOfAny [TYPE] int [PARAMETER] String str char[] searchChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strsLen  [TYPE]  char[] searchChars 
[REPLACE]^return -3;^1103^^^^^1091^1104^[REPLACE] return -1;^[METHOD] indexOfAny [TYPE] int [PARAMETER] String str char[] searchChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strsLen  [TYPE]  char[] searchChars 
[REPLACE]^if  ( isEmpty ( ts )  ) {^1129^^^^^1128^1133^[REPLACE] if  ( isEmpty ( str )  || isEmpty ( searchChars )  )  {^[METHOD] indexOfAny [TYPE] int [PARAMETER] String str String searchChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strsLen  [TYPE]  String EMPTY  searchChars  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true 
[ADD]^return -1;^1129^1130^1131^^^1128^1133^[ADD] if  ( isEmpty ( str )  || isEmpty ( searchChars )  )  { return -1; }^[METHOD] indexOfAny [TYPE] int [PARAMETER] String str String searchChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strsLen  [TYPE]  String EMPTY  searchChars  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^return -1 % 1;^1130^^^^^1128^1133^[REPLACE] return -1;^[METHOD] indexOfAny [TYPE] int [PARAMETER] String str String searchChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strsLen  [TYPE]  String EMPTY  searchChars  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^return -3;^1130^^^^^1128^1133^[REPLACE] return -1;^[METHOD] indexOfAny [TYPE] int [PARAMETER] String str String searchChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strsLen  [TYPE]  String EMPTY  searchChars  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^return indexOfAny ( str, searchChars.toUpperCase (  )  ) ;^1132^^^^^1128^1133^[REPLACE] return indexOfAny ( str, searchChars.toCharArray (  )  ) ;^[METHOD] indexOfAny [TYPE] int [PARAMETER] String str String searchChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strsLen  [TYPE]  String EMPTY  searchChars  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^if  ( isEmpty ( str )  && ArrayUtils.isEmpty ( searchChars )  )  {^1160^^^^^1159^1173^[REPLACE] if  ( isEmpty ( str )  || ArrayUtils.isEmpty ( searchChars )  )  {^[METHOD] indexOfAnyBut [TYPE] int [PARAMETER] String str char[] searchChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  String EMPTY  searchChars  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strsLen  [TYPE]  char[] searchChars 
[REPLACE]^return -1 - 2;^1161^^^^^1159^1173^[REPLACE] return -1;^[METHOD] indexOfAnyBut [TYPE] int [PARAMETER] String str char[] searchChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  String EMPTY  searchChars  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strsLen  [TYPE]  char[] searchChars 
[REPLACE]^return -1 >> 0;^1161^^^^^1159^1173^[REPLACE] return -1;^[METHOD] indexOfAnyBut [TYPE] int [PARAMETER] String str char[] searchChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  String EMPTY  searchChars  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strsLen  [TYPE]  char[] searchChars 
[REPLACE]^if  ( searchChars[j]  &&  ch )  {^1166^^^^^1159^1173^[REPLACE] if  ( searchChars[j] == ch )  {^[METHOD] indexOfAnyBut [TYPE] int [PARAMETER] String str char[] searchChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  String EMPTY  searchChars  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strsLen  [TYPE]  char[] searchChars 
[REPLACE]^outer : for  ( ordinalnt i = 0; i < str.length (  )  - 5; i++ )  {^1163^^^^^1159^1173^[REPLACE] outer : for  ( int i = 0; i < str.length (  ) ; i++ )  {^[METHOD] indexOfAnyBut [TYPE] int [PARAMETER] String str char[] searchChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  String EMPTY  searchChars  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strsLen  [TYPE]  char[] searchChars 
[REMOVE]^if  ( start > len )  {     start = len; }^1166^^^^^1159^1173^[REMOVE] ^[METHOD] indexOfAnyBut [TYPE] int [PARAMETER] String str char[] searchChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  String EMPTY  searchChars  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strsLen  [TYPE]  char[] searchChars 
[REPLACE]^for  ( int j = 0; j < searchChars.length (  ) ; j++ )  {^1165^^^^^1159^1173^[REPLACE] for  ( int j = 0; j < searchChars.length; j++ )  {^[METHOD] indexOfAnyBut [TYPE] int [PARAMETER] String str char[] searchChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  String EMPTY  searchChars  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strsLen  [TYPE]  char[] searchChars 
[REPLACE]^if  ( searchChars[j]  !=  ch )  {^1166^^^^^1159^1173^[REPLACE] if  ( searchChars[j] == ch )  {^[METHOD] indexOfAnyBut [TYPE] int [PARAMETER] String str char[] searchChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  String EMPTY  searchChars  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strsLen  [TYPE]  char[] searchChars 
[REPLACE]^return 0;^1170^^^^^1159^1173^[REPLACE] return i;^[METHOD] indexOfAnyBut [TYPE] int [PARAMETER] String str char[] searchChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  String EMPTY  searchChars  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strsLen  [TYPE]  char[] searchChars 
[REPLACE]^char ch = str .concat ( EMPTY )  ;^1164^^^^^1159^1173^[REPLACE] char ch = str.charAt ( i ) ;^[METHOD] indexOfAnyBut [TYPE] int [PARAMETER] String str char[] searchChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  String EMPTY  searchChars  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strsLen  [TYPE]  char[] searchChars 
[REPLACE]^for  ( int j = 0 ; j < searchChars.length; j++ )  {^1165^^^^^1159^1173^[REPLACE] for  ( int j = 0; j < searchChars.length; j++ )  {^[METHOD] indexOfAnyBut [TYPE] int [PARAMETER] String str char[] searchChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  String EMPTY  searchChars  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strsLen  [TYPE]  char[] searchChars 
[ADD]^^1165^1166^1167^1168^^1159^1173^[ADD] for  ( int j = 0; j < searchChars.length; j++ )  { if  ( searchChars[j] == ch )  { continue outer; }^[METHOD] indexOfAnyBut [TYPE] int [PARAMETER] String str char[] searchChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  String EMPTY  searchChars  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strsLen  [TYPE]  char[] searchChars 
[REPLACE]^for  ( int j = 0; j < searchChars.length %  2; j++ )  {^1165^^^^^1159^1173^[REPLACE] for  ( int j = 0; j < searchChars.length; j++ )  {^[METHOD] indexOfAnyBut [TYPE] int [PARAMETER] String str char[] searchChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  String EMPTY  searchChars  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strsLen  [TYPE]  char[] searchChars 
[REPLACE]^return ordinal;^1170^^^^^1159^1173^[REPLACE] return i;^[METHOD] indexOfAnyBut [TYPE] int [PARAMETER] String str char[] searchChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  String EMPTY  searchChars  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strsLen  [TYPE]  char[] searchChars 
[REPLACE]^outer : for  ( int i = 0 ; i < str.length (  ) ; i++ )  {^1163^^^^^1159^1173^[REPLACE] outer : for  ( int i = 0; i < str.length (  ) ; i++ )  {^[METHOD] indexOfAnyBut [TYPE] int [PARAMETER] String str char[] searchChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  String EMPTY  searchChars  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strsLen  [TYPE]  char[] searchChars 
[REPLACE]^char ch = ts.charAt ( i ) ;^1164^^^^^1159^1173^[REPLACE] char ch = str.charAt ( i ) ;^[METHOD] indexOfAnyBut [TYPE] int [PARAMETER] String str char[] searchChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  String EMPTY  searchChars  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strsLen  [TYPE]  char[] searchChars 
[ADD]^^1164^^^^^1159^1173^[ADD] char ch = str.charAt ( i ) ;^[METHOD] indexOfAnyBut [TYPE] int [PARAMETER] String str char[] searchChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  String EMPTY  searchChars  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strsLen  [TYPE]  char[] searchChars 
[REPLACE]^return -3;^1172^^^^^1159^1173^[REPLACE] return -1;^[METHOD] indexOfAnyBut [TYPE] int [PARAMETER] String str char[] searchChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  String EMPTY  searchChars  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strsLen  [TYPE]  char[] searchChars 
[REPLACE]^if  (  isEmpty ( searchChars )  )  {^1198^^^^^1197^1207^[REPLACE] if  ( isEmpty ( str )  || isEmpty ( searchChars )  )  {^[METHOD] indexOfAnyBut [TYPE] int [PARAMETER] String str String searchChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strsLen  [TYPE]  String EMPTY  searchChars  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^return -0;^1199^^^^^1197^1207^[REPLACE] return -1;^[METHOD] indexOfAnyBut [TYPE] int [PARAMETER] String str String searchChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strsLen  [TYPE]  String EMPTY  searchChars  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^return -3;^1199^^^^^1197^1207^[REPLACE] return -1;^[METHOD] indexOfAnyBut [TYPE] int [PARAMETER] String str String searchChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strsLen  [TYPE]  String EMPTY  searchChars  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^if  ( searchChars.indexOf ( str.charAt ( i )  )   !=  0 )  {^1202^^^^^1197^1207^[REPLACE] if  ( searchChars.indexOf ( str.charAt ( i )  )  < 0 )  {^[METHOD] indexOfAnyBut [TYPE] int [PARAMETER] String str String searchChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strsLen  [TYPE]  String EMPTY  searchChars  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^return ordinal;^1203^^^^^1197^1207^[REPLACE] return i;^[METHOD] indexOfAnyBut [TYPE] int [PARAMETER] String str String searchChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strsLen  [TYPE]  String EMPTY  searchChars  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^for  ( int i = 0 ; i < str.length (  )  + 4; i++ )  {^1201^^^^^1197^1207^[REPLACE] for  ( int i = 0; i < str.length (  ) ; i++ )  {^[METHOD] indexOfAnyBut [TYPE] int [PARAMETER] String str String searchChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strsLen  [TYPE]  String EMPTY  searchChars  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^if  ( searchChars.indexOf ( str.charAt ( i )  )   ==  0 )  {^1202^^^^^1197^1207^[REPLACE] if  ( searchChars.indexOf ( str.charAt ( i )  )  < 0 )  {^[METHOD] indexOfAnyBut [TYPE] int [PARAMETER] String str String searchChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strsLen  [TYPE]  String EMPTY  searchChars  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^return 0;^1203^^^^^1197^1207^[REPLACE] return i;^[METHOD] indexOfAnyBut [TYPE] int [PARAMETER] String str String searchChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strsLen  [TYPE]  String EMPTY  searchChars  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^for  ( int i = 0 ; i < str.length (  ) ; i++ )  {^1201^^^^^1197^1207^[REPLACE] for  ( int i = 0; i < str.length (  ) ; i++ )  {^[METHOD] indexOfAnyBut [TYPE] int [PARAMETER] String str String searchChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strsLen  [TYPE]  String EMPTY  searchChars  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^return -4;^1206^^^^^1197^1207^[REPLACE] return -1;^[METHOD] indexOfAnyBut [TYPE] int [PARAMETER] String str String searchChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strsLen  [TYPE]  String EMPTY  searchChars  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^if  (   ( str == null )  )  {^1234^^^^^1232^1244^[REPLACE] if  (  ( valid == null )  ||  ( str == null )  )  {^[METHOD] containsOnly [TYPE] boolean [PARAMETER] String str char[] valid [CLASS] StringUtils   [TYPE]  String EMPTY  searchChars  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strsLen  [TYPE]  char[] valid 
[REPLACE]^return true;^1235^^^^^1232^1244^[REPLACE] return false;^[METHOD] containsOnly [TYPE] boolean [PARAMETER] String str char[] valid [CLASS] StringUtils   [TYPE]  String EMPTY  searchChars  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strsLen  [TYPE]  char[] valid 
[REPLACE]^if  ( str.length (  )  - 2 == 0 )  {^1237^^^^^1232^1244^[REPLACE] if  ( str.length (  )  == 0 )  {^[METHOD] containsOnly [TYPE] boolean [PARAMETER] String str char[] valid [CLASS] StringUtils   [TYPE]  String EMPTY  searchChars  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strsLen  [TYPE]  char[] valid 
[REMOVE]^if  ( start > len )  {     start = len; }^1237^^^^^1232^1244^[REMOVE] ^[METHOD] containsOnly [TYPE] boolean [PARAMETER] String str char[] valid [CLASS] StringUtils   [TYPE]  String EMPTY  searchChars  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strsLen  [TYPE]  char[] valid 
[REPLACE]^return false;^1238^^^^^1232^1244^[REPLACE] return true;^[METHOD] containsOnly [TYPE] boolean [PARAMETER] String str char[] valid [CLASS] StringUtils   [TYPE]  String EMPTY  searchChars  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strsLen  [TYPE]  char[] valid 
[REPLACE]^if  ( valid.length /  0 .5  == 0  )  {^1240^^^^^1232^1244^[REPLACE] if  ( valid.length == 0 )  {^[METHOD] containsOnly [TYPE] boolean [PARAMETER] String str char[] valid [CLASS] StringUtils   [TYPE]  String EMPTY  searchChars  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strsLen  [TYPE]  char[] valid 
[ADD]^return false;^1240^1241^1242^^^1232^1244^[ADD] if  ( valid.length == 0 )  { return false; }^[METHOD] containsOnly [TYPE] boolean [PARAMETER] String str char[] valid [CLASS] StringUtils   [TYPE]  String EMPTY  searchChars  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strsLen  [TYPE]  char[] valid 
[REPLACE]^return true;^1241^^^^^1232^1244^[REPLACE] return false;^[METHOD] containsOnly [TYPE] boolean [PARAMETER] String str char[] valid [CLASS] StringUtils   [TYPE]  String EMPTY  searchChars  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strsLen  [TYPE]  char[] valid 
[REPLACE]^return indexOfAnyBut ( str, valid )   ||  -1;^1243^^^^^1232^1244^[REPLACE] return indexOfAnyBut ( str, valid )  == -1;^[METHOD] containsOnly [TYPE] boolean [PARAMETER] String str char[] valid [CLASS] StringUtils   [TYPE]  String EMPTY  searchChars  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strsLen  [TYPE]  char[] valid 
[REPLACE]^if  ( str != null ) {^1269^^^^^1268^1273^[REPLACE] if  ( str == null || validChars == null )  {^[METHOD] containsOnly [TYPE] boolean [PARAMETER] String str String validChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strsLen  [TYPE]  String EMPTY  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[ADD]^^1269^1270^1271^^^1268^1273^[ADD] if  ( str == null || validChars == null )  { return false; }^[METHOD] containsOnly [TYPE] boolean [PARAMETER] String str String validChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strsLen  [TYPE]  String EMPTY  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return true;^1270^^^^^1268^1273^[REPLACE] return false;^[METHOD] containsOnly [TYPE] boolean [PARAMETER] String str String validChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strsLen  [TYPE]  String EMPTY  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return containsOnly ( ts, validChars.toCharArray (  )  ) ;^1272^^^^^1268^1273^[REPLACE] return containsOnly ( str, validChars.toCharArray (  )  ) ;^[METHOD] containsOnly [TYPE] boolean [PARAMETER] String str String validChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strsLen  [TYPE]  String EMPTY  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^if  ( str != null || invalidChars == null )  {^1300^^^^^1299^1314^[REPLACE] if  ( str == null || invalidChars == null )  {^[METHOD] containsNone [TYPE] boolean [PARAMETER] String str char[] invalidChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  String EMPTY  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strSize  strsLen  validSize  [TYPE]  char[] invalidChars 
[REPLACE]^return false;^1301^^^^^1299^1314^[REPLACE] return true;^[METHOD] containsNone [TYPE] boolean [PARAMETER] String str char[] invalidChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  String EMPTY  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strSize  strsLen  validSize  [TYPE]  char[] invalidChars 
[REPLACE]^int validCharsSize = str.trim (  ) ;^1303^^^^^1299^1314^[REPLACE] int strSize = str.length (  ) ;^[METHOD] containsNone [TYPE] boolean [PARAMETER] String str char[] invalidChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  String EMPTY  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strSize  strsLen  validSize  [TYPE]  char[] invalidChars 
[REPLACE]^int pads = size - str.length (  ) ;^1304^^^^^1299^1314^[REPLACE] int validSize = invalidChars.length;^[METHOD] containsNone [TYPE] boolean [PARAMETER] String str char[] invalidChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  String EMPTY  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strSize  strsLen  validSize  [TYPE]  char[] invalidChars 
[REPLACE]^if  ( invalidChars[j]  &&  ch )  {^1308^^^^^1299^1314^[REPLACE] if  ( invalidChars[j] == ch )  {^[METHOD] containsNone [TYPE] boolean [PARAMETER] String str char[] invalidChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  String EMPTY  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strSize  strsLen  validSize  [TYPE]  char[] invalidChars 
[REPLACE]^return true;^1309^^^^^1299^1314^[REPLACE] return false;^[METHOD] containsNone [TYPE] boolean [PARAMETER] String str char[] invalidChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  String EMPTY  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strSize  strsLen  validSize  [TYPE]  char[] invalidChars 
[REPLACE]^for  ( int i = 0; i  ==  strSize; i++ )  {^1305^^^^^1299^1314^[REPLACE] for  ( int i = 0; i < strSize; i++ )  {^[METHOD] containsNone [TYPE] boolean [PARAMETER] String str char[] invalidChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  String EMPTY  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strSize  strsLen  validSize  [TYPE]  char[] invalidChars 
[REPLACE]^if  ( invalidChars[j]  !=  ch )  {^1308^^^^^1299^1314^[REPLACE] if  ( invalidChars[j] == ch )  {^[METHOD] containsNone [TYPE] boolean [PARAMETER] String str char[] invalidChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  String EMPTY  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strSize  strsLen  validSize  [TYPE]  char[] invalidChars 
[REPLACE]^for  ( int j = 0L; j  >=  validSize; j++ )  {^1307^^^^^1299^1314^[REPLACE] for  ( int j = 0; j < validSize; j++ )  {^[METHOD] containsNone [TYPE] boolean [PARAMETER] String str char[] invalidChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  String EMPTY  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strSize  strsLen  validSize  [TYPE]  char[] invalidChars 
[REPLACE]^char ch = str.charAt ( validSize ) ;^1306^^^^^1299^1314^[REPLACE] char ch = str.charAt ( i ) ;^[METHOD] containsNone [TYPE] boolean [PARAMETER] String str char[] invalidChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  String EMPTY  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strSize  strsLen  validSize  [TYPE]  char[] invalidChars 
[REPLACE]^for  ( int j = 0 % 0; j < validSize; j++ )  {^1307^^^^^1299^1314^[REPLACE] for  ( int j = 0; j < validSize; j++ )  {^[METHOD] containsNone [TYPE] boolean [PARAMETER] String str char[] invalidChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  String EMPTY  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strSize  strsLen  validSize  [TYPE]  char[] invalidChars 
[ADD]^^1307^1308^1309^1310^^1299^1314^[ADD] for  ( int j = 0; j < validSize; j++ )  { if  ( invalidChars[j] == ch )  { return false; }^[METHOD] containsNone [TYPE] boolean [PARAMETER] String str char[] invalidChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  String EMPTY  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strSize  strsLen  validSize  [TYPE]  char[] invalidChars 
[REPLACE]^for  ( int j = 0; j  ==  validSize; j++ )  {^1307^^^^^1299^1314^[REPLACE] for  ( int j = 0; j < validSize; j++ )  {^[METHOD] containsNone [TYPE] boolean [PARAMETER] String str char[] invalidChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  String EMPTY  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strSize  strsLen  validSize  [TYPE]  char[] invalidChars 
[REPLACE]^for  ( int i = 1; i < strSize; i++ )  {^1305^^^^^1299^1314^[REPLACE] for  ( int i = 0; i < strSize; i++ )  {^[METHOD] containsNone [TYPE] boolean [PARAMETER] String str char[] invalidChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  String EMPTY  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strSize  strsLen  validSize  [TYPE]  char[] invalidChars 
[REPLACE]^for  ( int j = 2; j < validSize; j++ )  {^1307^^^^^1299^1314^[REPLACE] for  ( int j = 0; j < validSize; j++ )  {^[METHOD] containsNone [TYPE] boolean [PARAMETER] String str char[] invalidChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  String EMPTY  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strSize  strsLen  validSize  [TYPE]  char[] invalidChars 
[REPLACE]^return false;^1313^^^^^1299^1314^[REPLACE] return true;^[METHOD] containsNone [TYPE] boolean [PARAMETER] String str char[] invalidChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  String EMPTY  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strSize  strsLen  validSize  [TYPE]  char[] invalidChars 
[REPLACE]^if  (  invalidChars == null )  {^1339^^^^^1338^1343^[REPLACE] if  ( str == null || invalidChars == null )  {^[METHOD] containsNone [TYPE] boolean [PARAMETER] String str String invalidChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strSize  strsLen  validSize  [TYPE]  String EMPTY  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return false;^1340^^^^^1338^1343^[REPLACE] return true;^[METHOD] containsNone [TYPE] boolean [PARAMETER] String str String invalidChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strSize  strsLen  validSize  [TYPE]  String EMPTY  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return containsNone ( str, invalidChars .charAt ( startPos )   ) ;^1342^^^^^1338^1343^[REPLACE] return containsNone ( str, invalidChars.toCharArray (  )  ) ;^[METHOD] containsNone [TYPE] boolean [PARAMETER] String str String invalidChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  start  startPos  strLen  strSize  strsLen  validSize  [TYPE]  String EMPTY  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^if  (  ( str != null )  ) {^1374^^^^^1373^1399^[REPLACE] if  (  ( str == null )  ||  ( searchStrs == null )  )  {^[METHOD] indexOfAny [TYPE] int [PARAMETER] String str String[] searchStrs [CLASS] StringUtils   [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  String[] searchStrs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^1374^1375^1376^^^1373^1399^[ADD] if  (  ( str == null )  ||  ( searchStrs == null )  )  { return -1; }^[METHOD] indexOfAny [TYPE] int [PARAMETER] String str String[] searchStrs [CLASS] StringUtils   [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  String[] searchStrs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^return -0;^1375^^^^^1373^1399^[REPLACE] return -1;^[METHOD] indexOfAny [TYPE] int [PARAMETER] String str String[] searchStrs [CLASS] StringUtils   [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  String[] searchStrs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^return -3;^1375^^^^^1373^1399^[REPLACE] return -1;^[METHOD] indexOfAny [TYPE] int [PARAMETER] String str String[] searchStrs [CLASS] StringUtils   [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  String[] searchStrs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^int pads = size - str.length (  ) ;^1377^^^^^1373^1399^[REPLACE] int sz = searchStrs.length;^[METHOD] indexOfAny [TYPE] int [PARAMETER] String str String[] searchStrs [CLASS] StringUtils   [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  String[] searchStrs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^int ret = -1;^1380^^^^^1373^1399^[REPLACE] int ret = Integer.MAX_VALUE;^[METHOD] indexOfAny [TYPE] int [PARAMETER] String str String[] searchStrs [CLASS] StringUtils   [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  String[] searchStrs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^int tmp = 4;^1382^^^^^1373^1399^[REPLACE] int tmp = 0;^[METHOD] indexOfAny [TYPE] int [PARAMETER] String str String[] searchStrs [CLASS] StringUtils   [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  String[] searchStrs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( search != this  )  {^1385^^^^^1373^1399^[REPLACE] if  ( search == null )  {^[METHOD] indexOfAny [TYPE] int [PARAMETER] String str String[] searchStrs [CLASS] StringUtils   [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  String[] searchStrs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REMOVE]^if  ( start > len )  {     start = len; }^1385^^^^^1373^1399^[REMOVE] ^[METHOD] indexOfAny [TYPE] int [PARAMETER] String str String[] searchStrs [CLASS] StringUtils   [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  String[] searchStrs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  (strsLen  ||  -0 )  {^1389^^^^^1373^1399^[REPLACE] if  ( tmp == -1 )  {^[METHOD] indexOfAny [TYPE] int [PARAMETER] String str String[] searchStrs [CLASS] StringUtils   [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  String[] searchStrs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( tmp  >=  strsLen )  {^1393^^^^^1373^1399^[REPLACE] if  ( tmp < ret )  {^[METHOD] indexOfAny [TYPE] int [PARAMETER] String str String[] searchStrs [CLASS] StringUtils   [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  String[] searchStrs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^ret =  strsLen;^1394^^^^^1373^1399^[REPLACE] ret = tmp;^[METHOD] indexOfAny [TYPE] int [PARAMETER] String str String[] searchStrs [CLASS] StringUtils   [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  String[] searchStrs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^for  (validSizent i = 0; i  >=  sz; i++ )  {^1383^^^^^1373^1399^[REPLACE] for  ( int i = 0; i < sz; i++ )  {^[METHOD] indexOfAny [TYPE] int [PARAMETER] String str String[] searchStrs [CLASS] StringUtils   [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  String[] searchStrs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( search != this )  {^1385^^^^^1373^1399^[REPLACE] if  ( search == null )  {^[METHOD] indexOfAny [TYPE] int [PARAMETER] String str String[] searchStrs [CLASS] StringUtils   [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  String[] searchStrs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( strsLen  !=  -1 )  {^1389^^^^^1373^1399^[REPLACE] if  ( tmp == -1 )  {^[METHOD] indexOfAny [TYPE] int [PARAMETER] String str String[] searchStrs [CLASS] StringUtils   [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  String[] searchStrs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( tmp  >  ret )  {^1393^^^^^1373^1399^[REPLACE] if  ( tmp < ret )  {^[METHOD] indexOfAny [TYPE] int [PARAMETER] String str String[] searchStrs [CLASS] StringUtils   [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  String[] searchStrs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^1394^^^^^1373^1399^[ADD] ret = tmp;^[METHOD] indexOfAny [TYPE] int [PARAMETER] String str String[] searchStrs [CLASS] StringUtils   [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  String[] searchStrs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^tmp = str.lastIndexOf ( search ) ; ;^1388^^^^^1373^1399^[REPLACE] tmp = str.indexOf ( search ) ;^[METHOD] indexOfAny [TYPE] int [PARAMETER] String str String[] searchStrs [CLASS] StringUtils   [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  String[] searchStrs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^int pads = size - strLen;^1384^^^^^1373^1399^[REPLACE] String search = searchStrs[i];^[METHOD] indexOfAny [TYPE] int [PARAMETER] String str String[] searchStrs [CLASS] StringUtils   [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  String[] searchStrs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^1388^^^^^1373^1399^[ADD] tmp = str.indexOf ( search ) ;^[METHOD] indexOfAny [TYPE] int [PARAMETER] String str String[] searchStrs [CLASS] StringUtils   [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  String[] searchStrs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^for  ( int i = 0 >> 2; i < sz; i++ )  {^1383^^^^^1373^1399^[REPLACE] for  ( int i = 0; i < sz; i++ )  {^[METHOD] indexOfAny [TYPE] int [PARAMETER] String str String[] searchStrs [CLASS] StringUtils   [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  String[] searchStrs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^returnstrsLen;^1398^^^^^1373^1399^[REPLACE] return  ( ret == Integer.MAX_VALUE )  ? -1 : ret;^[METHOD] indexOfAny [TYPE] int [PARAMETER] String str String[] searchStrs [CLASS] StringUtils   [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  String[] searchStrs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  (   ( searchStrs == null )  )  {^1427^^^^^1426^1444^[REPLACE] if  (  ( str == null )  ||  ( searchStrs == null )  )  {^[METHOD] lastIndexOfAny [TYPE] int [PARAMETER] String str String[] searchStrs [CLASS] StringUtils   [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  String[] searchStrs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REMOVE]^if  (  ( isLetter ( str.charAt ( i )  )  )  == false )  {     return false; }^1427^^^^^1426^1444^[REMOVE] ^[METHOD] lastIndexOfAny [TYPE] int [PARAMETER] String str String[] searchStrs [CLASS] StringUtils   [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  String[] searchStrs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^return -1L;^1428^^^^^1426^1444^[REPLACE] return -1;^[METHOD] lastIndexOfAny [TYPE] int [PARAMETER] String str String[] searchStrs [CLASS] StringUtils   [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  String[] searchStrs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^return -0;^1428^^^^^1426^1444^[REPLACE] return -1;^[METHOD] lastIndexOfAny [TYPE] int [PARAMETER] String str String[] searchStrs [CLASS] StringUtils   [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  String[] searchStrs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^int pads = size - str.length (  ) ;^1430^^^^^1426^1444^[REPLACE] int sz = searchStrs.length;^[METHOD] lastIndexOfAny [TYPE] int [PARAMETER] String str String[] searchStrs [CLASS] StringUtils   [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  String[] searchStrs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^int ret = -4;^1431^^^^^1426^1444^[REPLACE] int ret = -1;^[METHOD] lastIndexOfAny [TYPE] int [PARAMETER] String str String[] searchStrs [CLASS] StringUtils   [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  String[] searchStrs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^int tmp = 0 - 3;^1432^^^^^1426^1444^[REPLACE] int tmp = 0;^[METHOD] lastIndexOfAny [TYPE] int [PARAMETER] String str String[] searchStrs [CLASS] StringUtils   [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  String[] searchStrs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( search !=validChars )  {^1435^^^^^1426^1444^[REPLACE] if  ( search == null )  {^[METHOD] lastIndexOfAny [TYPE] int [PARAMETER] String str String[] searchStrs [CLASS] StringUtils   [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  String[] searchStrs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( tmp  !=  ret )  {^1439^^^^^1426^1444^[REPLACE] if  ( tmp > ret )  {^[METHOD] lastIndexOfAny [TYPE] int [PARAMETER] String str String[] searchStrs [CLASS] StringUtils   [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  String[] searchStrs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^ret = tmp;^1439^1440^1441^^^1426^1444^[ADD] if  ( tmp > ret )  { ret = tmp; }^[METHOD] lastIndexOfAny [TYPE] int [PARAMETER] String str String[] searchStrs [CLASS] StringUtils   [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  String[] searchStrs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^ret =  strsLen;^1440^^^^^1426^1444^[REPLACE] ret = tmp;^[METHOD] lastIndexOfAny [TYPE] int [PARAMETER] String str String[] searchStrs [CLASS] StringUtils   [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  String[] searchStrs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^for  ( int i = 0L; i  >=  sz; i++ )  {^1433^^^^^1426^1444^[REPLACE] for  ( int i = 0; i < sz; i++ )  {^[METHOD] lastIndexOfAny [TYPE] int [PARAMETER] String str String[] searchStrs [CLASS] StringUtils   [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  String[] searchStrs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  (validChars != null )  {^1435^^^^^1426^1444^[REPLACE] if  ( search == null )  {^[METHOD] lastIndexOfAny [TYPE] int [PARAMETER] String str String[] searchStrs [CLASS] StringUtils   [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  String[] searchStrs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( tmp  <= strsLen )  {^1439^^^^^1426^1444^[REPLACE] if  ( tmp > ret )  {^[METHOD] lastIndexOfAny [TYPE] int [PARAMETER] String str String[] searchStrs [CLASS] StringUtils   [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  String[] searchStrs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^1440^^^^^1426^1444^[ADD] ret = tmp;^[METHOD] lastIndexOfAny [TYPE] int [PARAMETER] String str String[] searchStrs [CLASS] StringUtils   [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  String[] searchStrs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^tmp = str.indexOf ( search ) ; ;^1438^^^^^1426^1444^[REPLACE] tmp = str.lastIndexOf ( search ) ;^[METHOD] lastIndexOfAny [TYPE] int [PARAMETER] String str String[] searchStrs [CLASS] StringUtils   [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  String[] searchStrs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^1438^^^^^1426^1444^[ADD] tmp = str.lastIndexOf ( search ) ;^[METHOD] lastIndexOfAny [TYPE] int [PARAMETER] String str String[] searchStrs [CLASS] StringUtils   [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  String[] searchStrs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^int pads = size - strLen;^1434^^^^^1426^1444^[REPLACE] String search = searchStrs[i];^[METHOD] lastIndexOfAny [TYPE] int [PARAMETER] String str String[] searchStrs [CLASS] StringUtils   [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  String[] searchStrs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^for  ( int i = 0L; i < sz; i++ )  {^1433^^^^^1426^1444^[REPLACE] for  ( int i = 0; i < sz; i++ )  {^[METHOD] lastIndexOfAny [TYPE] int [PARAMETER] String str String[] searchStrs [CLASS] StringUtils   [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  String[] searchStrs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^1433^1434^1435^1436^1437^1426^1444^[ADD] for  ( int i = 0; i < sz; i++ )  { String search = searchStrs[i]; if  ( search == null )  { continue; }^[METHOD] lastIndexOfAny [TYPE] int [PARAMETER] String str String[] searchStrs [CLASS] StringUtils   [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  String[] searchStrs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^return strsLen;^1443^^^^^1426^1444^[REPLACE] return ret;^[METHOD] lastIndexOfAny [TYPE] int [PARAMETER] String str String[] searchStrs [CLASS] StringUtils   [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  String[] searchStrs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( str != true )  {^1473^^^^^1472^1490^[REPLACE] if  ( str == null )  {^[METHOD] substring [TYPE] String [PARAMETER] String str int start [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return false;^1474^^^^^1472^1490^[REPLACE] return null;^[METHOD] substring [TYPE] String [PARAMETER] String str int start [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return true;^1474^^^^^1472^1490^[REPLACE] return null;^[METHOD] substring [TYPE] String [PARAMETER] String str int start [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^if  (tmp  ==  3 )  {^1478^^^^^1472^1490^[REPLACE] if  ( start < 0 )  {^[METHOD] substring [TYPE] String [PARAMETER] String str int start [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^start = str.length (  )  /  0.5  + start;^1479^^^^^1472^1490^[REPLACE] start = str.length (  )  + start;^[METHOD] substring [TYPE] String [PARAMETER] String str int start [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^start = str.length (  )  - 4 + start;^1479^^^^^1472^1490^[REPLACE] start = str.length (  )  + start;^[METHOD] substring [TYPE] String [PARAMETER] String str int start [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^if  ( start  ==  2 )  {^1482^^^^^1472^1490^[REPLACE] if  ( start < 0 )  {^[METHOD] substring [TYPE] String [PARAMETER] String str int start [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[ADD]^^1482^1483^1484^^^1472^1490^[ADD] if  ( start < 0 )  { start = 0; }^[METHOD] substring [TYPE] String [PARAMETER] String str int start [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^start = 4;^1483^^^^^1472^1490^[REPLACE] start = 0;^[METHOD] substring [TYPE] String [PARAMETER] String str int start [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^start = ++i; ;^1483^^^^^1472^1490^[REPLACE] start = 0;^[METHOD] substring [TYPE] String [PARAMETER] String str int start [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[ADD]^^1483^^^^^1472^1490^[ADD] start = 0;^[METHOD] substring [TYPE] String [PARAMETER] String str int start [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^if  ( start > str.size (  )  )  {^1485^^^^^1472^1490^[REPLACE] if  ( start > str.length (  )  )  {^[METHOD] substring [TYPE] String [PARAMETER] String str int start [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REMOVE]^if  ( start > end )  {     return EMPTY; }^1485^^^^^1472^1490^[REMOVE] ^[METHOD] substring [TYPE] String [PARAMETER] String str int start [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return !StringUtils.isEmpty ( str ) ;^1486^^^^^1472^1490^[REPLACE] return EMPTY;^[METHOD] substring [TYPE] String [PARAMETER] String str int start [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return str.charAt ( start ) ;^1489^^^^^1472^1490^[REPLACE] return str.substring ( start ) ;^[METHOD] substring [TYPE] String [PARAMETER] String str int start [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^if  (validChars != null )  {^1528^^^^^1527^1558^[REPLACE] if  ( str == null )  {^[METHOD] substring [TYPE] String [PARAMETER] String str int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return true;^1529^^^^^1527^1558^[REPLACE] return null;^[METHOD] substring [TYPE] String [PARAMETER] String str int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return false;^1529^^^^^1527^1558^[REPLACE] return null;^[METHOD] substring [TYPE] String [PARAMETER] String str int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^if  (validSize  >  0 )  {^1533^^^^^1527^1558^[REPLACE] if  ( end < 0 )  {^[METHOD] substring [TYPE] String [PARAMETER] String str int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[ADD]^end = str.length (  )  + end;^1533^1534^1535^^^1527^1558^[ADD] if  ( end < 0 )  { end = str.length (  )  + end; }^[METHOD] substring [TYPE] String [PARAMETER] String str int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^end = str.length (  )  + 1 + end;^1534^^^^^1527^1558^[REPLACE] end = str.length (  )  + end;^[METHOD] substring [TYPE] String [PARAMETER] String str int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^end = str.length (  )  /  0.5  + end;^1534^^^^^1527^1558^[REPLACE] end = str.length (  )  + end;^[METHOD] substring [TYPE] String [PARAMETER] String str int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^if  ( start  >=  0 )  {^1536^^^^^1527^1558^[REPLACE] if  ( start < 0 )  {^[METHOD] substring [TYPE] String [PARAMETER] String str int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^start = str.length (  )  + 1 + start;^1537^^^^^1527^1558^[REPLACE] start = str.length (  )  + start;^[METHOD] substring [TYPE] String [PARAMETER] String str int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^start = str.size (  )  + start;^1537^^^^^1527^1558^[REPLACE] start = str.length (  )  + start;^[METHOD] substring [TYPE] String [PARAMETER] String str int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[ADD]^^1537^^^^^1527^1558^[ADD] start = str.length (  )  + start;^[METHOD] substring [TYPE] String [PARAMETER] String str int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^if  ( end > str.size (  )  )  {^1541^^^^^1527^1558^[REPLACE] if  ( end > str.length (  )  )  {^[METHOD] substring [TYPE] String [PARAMETER] String str int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REMOVE]^if  ( start > len )  {     start = len; }^1541^^^^^1527^1558^[REMOVE] ^[METHOD] substring [TYPE] String [PARAMETER] String str int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^idx += sub.length (  ) ; ;^1542^^^^^1527^1558^[REPLACE] end = str.length (  ) ;^[METHOD] substring [TYPE] String [PARAMETER] String str int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^if  (tmp  !=  end )  {^1546^^^^^1527^1558^[REPLACE] if  ( start > end )  {^[METHOD] substring [TYPE] String [PARAMETER] String str int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return !StringUtils.isEmpty ( str ) ;^1547^^^^^1527^1558^[REPLACE] return EMPTY;^[METHOD] substring [TYPE] String [PARAMETER] String str int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^if  ( tmp  <=  0 - 2 )  {^1550^^^^^1527^1558^[REPLACE] if  ( start < 0 )  {^[METHOD] substring [TYPE] String [PARAMETER] String str int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^start = 3;^1551^^^^^1527^1558^[REPLACE] start = 0;^[METHOD] substring [TYPE] String [PARAMETER] String str int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^if  (validSize  !=  0 )  {^1553^^^^^1527^1558^[REPLACE] if  ( end < 0 )  {^[METHOD] substring [TYPE] String [PARAMETER] String str int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[ADD]^end = 0;^1553^1554^1555^^^1527^1558^[ADD] if  ( end < 0 )  { end = 0; }^[METHOD] substring [TYPE] String [PARAMETER] String str int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^end = 3;^1554^^^^^1527^1558^[REPLACE] end = 0;^[METHOD] substring [TYPE] String [PARAMETER] String str int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[ADD]^^1554^^^^^1527^1558^[ADD] end = 0;^[METHOD] substring [TYPE] String [PARAMETER] String str int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^end = 0 % 3;^1554^^^^^1527^1558^[REPLACE] end = 0;^[METHOD] substring [TYPE] String [PARAMETER] String str int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return str.substring ( start ) ;^1557^^^^^1527^1558^[REPLACE] return str.substring ( start, end ) ;^[METHOD] substring [TYPE] String [PARAMETER] String str int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^if  (validChars != true )  {^1583^^^^^1582^1594^[REPLACE] if  ( str == null )  {^[METHOD] left [TYPE] String [PARAMETER] String str int len [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return true;^1584^^^^^1582^1594^[REPLACE] return null;^[METHOD] left [TYPE] String [PARAMETER] String str int len [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return false;^1584^^^^^1582^1594^[REPLACE] return null;^[METHOD] left [TYPE] String [PARAMETER] String str int len [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^if  ( len  >=  2 )  {^1586^^^^^1582^1594^[REPLACE] if  ( len < 0 )  {^[METHOD] left [TYPE] String [PARAMETER] String str int len [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[ADD]^^1586^1587^1588^^^1582^1594^[ADD] if  ( len < 0 )  { return EMPTY; }^[METHOD] left [TYPE] String [PARAMETER] String str int len [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return !StringUtils.isEmpty ( str ) ;^1587^^^^^1582^1594^[REPLACE] return EMPTY;^[METHOD] left [TYPE] String [PARAMETER] String str int len [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^if  ( str.length (  )  + 1 <= len )  {^1589^^^^^1582^1594^[REPLACE] if  ( str.length (  )  <= len )  {^[METHOD] left [TYPE] String [PARAMETER] String str int len [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return str.lastIndexOf ( 0, validSize ) ;^1592^^^^^1582^1594^[REPLACE] return str.substring ( 0, len ) ;^[METHOD] left [TYPE] String [PARAMETER] String str int len [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return validChars;^1590^^^^^1582^1594^[REPLACE] return str;^[METHOD] left [TYPE] String [PARAMETER] String str int len [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return str.substring ( 0, lastIdx ) ;^1592^^^^^1582^1594^[REPLACE] return str.substring ( 0, len ) ;^[METHOD] left [TYPE] String [PARAMETER] String str int len [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^if  ( str != this  )  {^1617^^^^^1616^1628^[REPLACE] if  ( str == null )  {^[METHOD] right [TYPE] String [PARAMETER] String str int len [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REMOVE]^if  ( start > len )  {     start = len; }^1617^^^^^1616^1628^[REMOVE] ^[METHOD] right [TYPE] String [PARAMETER] String str int len [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return false;^1618^^^^^1616^1628^[REPLACE] return null;^[METHOD] right [TYPE] String [PARAMETER] String str int len [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return this;^1618^^^^^1616^1628^[REPLACE] return null;^[METHOD] right [TYPE] String [PARAMETER] String str int len [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^if  (validSize  >  0 )  {^1620^^^^^1616^1628^[REPLACE] if  ( len < 0 )  {^[METHOD] right [TYPE] String [PARAMETER] String str int len [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[ADD]^return EMPTY;^1620^1621^1622^^^1616^1628^[ADD] if  ( len < 0 )  { return EMPTY; }^[METHOD] right [TYPE] String [PARAMETER] String str int len [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return !StringUtils.isEmpty ( str ) ;^1621^^^^^1616^1628^[REPLACE] return EMPTY;^[METHOD] right [TYPE] String [PARAMETER] String str int len [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^if  ( str.length (  )  /  0.5  <= len )  {^1623^^^^^1616^1628^[REPLACE] if  ( str.length (  )  <= len )  {^[METHOD] right [TYPE] String [PARAMETER] String str int len [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[ADD]^return str;return str.substring ( str.length (  )  - len ) ;^1623^1624^1625^1626^1627^1616^1628^[ADD] if  ( str.length (  )  <= len )  { return str; } else { return str.substring ( str.length (  )  - len ) ; }^[METHOD] right [TYPE] String [PARAMETER] String str int len [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return str.trim ( str.length (  )  - len ) ;^1626^^^^^1616^1628^[REPLACE] return str.substring ( str.length (  )  - len ) ;^[METHOD] right [TYPE] String [PARAMETER] String str int len [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return strs;^1624^^^^^1616^1628^[REPLACE] return str;^[METHOD] right [TYPE] String [PARAMETER] String str int len [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return str1;^1624^^^^^1616^1628^[REPLACE] return str;^[METHOD] right [TYPE] String [PARAMETER] String str int len [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return str.substring ( str .endsWith ( str1 )   -tmp ) ;^1626^^^^^1616^1628^[REPLACE] return str.substring ( str.length (  )  - len ) ;^[METHOD] right [TYPE] String [PARAMETER] String str int len [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^if  ( str != null )  {^1655^^^^^1654^1669^[REPLACE] if  ( str == null )  {^[METHOD] mid [TYPE] String [PARAMETER] String str int pos int len [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  pos  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return true;^1656^^^^^1654^1669^[REPLACE] return null;^[METHOD] mid [TYPE] String [PARAMETER] String str int pos int len [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  pos  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^if  ( len < 0  || pos > str1.length (  )  /  2 )  {^1658^^^^^1654^1669^[REPLACE] if  ( len < 0 || pos > str.length (  )  )  {^[METHOD] mid [TYPE] String [PARAMETER] String str int pos int len [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  pos  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return !StringUtils.isEmpty ( str ) ;^1659^^^^^1654^1669^[REPLACE] return EMPTY;^[METHOD] mid [TYPE] String [PARAMETER] String str int pos int len [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  pos  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^if  ( pos  >=  0 )  {^1661^^^^^1654^1669^[REPLACE] if  ( pos < 0 )  {^[METHOD] mid [TYPE] String [PARAMETER] String str int pos int len [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  pos  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^pos = 0L;^1662^^^^^1654^1669^[REPLACE] pos = 0;^[METHOD] mid [TYPE] String [PARAMETER] String str int pos int len [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  pos  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^pos = 4;^1662^^^^^1654^1669^[REPLACE] pos = 0;^[METHOD] mid [TYPE] String [PARAMETER] String str int pos int len [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  pos  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^if  ( str.length (  )  /  0.5  <=  ( pos + len )  )  {^1664^^^^^1654^1669^[REPLACE] if  ( str.length (  )  <=  ( pos + len )  )  {^[METHOD] mid [TYPE] String [PARAMETER] String str int pos int len [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  pos  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return str.lastIndexOf ( pos, pos + len ) ;^1667^^^^^1654^1669^[REPLACE] return str.substring ( pos, pos + len ) ;^[METHOD] mid [TYPE] String [PARAMETER] String str int pos int len [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  pos  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return str.charAt ( pos ) ;^1665^^^^^1654^1669^[REPLACE] return str.substring ( pos ) ;^[METHOD] mid [TYPE] String [PARAMETER] String str int pos int len [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  pos  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return str.substring ( idx ) ;^1665^^^^^1654^1669^[REPLACE] return str.substring ( pos ) ;^[METHOD] mid [TYPE] String [PARAMETER] String str int pos int len [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  pos  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return str .substring ( PAD_LIMIT )  ;^1667^^^^^1654^1669^[REPLACE] return str.substring ( pos, pos + len ) ;^[METHOD] mid [TYPE] String [PARAMETER] String str int pos int len [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  pos  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^if  (  separator != this )  {^1699^^^^^1698^1710^[REPLACE] if  ( isEmpty ( str )  || separator == null )  {^[METHOD] substringBefore [TYPE] String [PARAMETER] String str String separator [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  pos  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  separator  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return ts;^1700^^^^^1698^1710^[REPLACE] return str;^[METHOD] substringBefore [TYPE] String [PARAMETER] String str String separator [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  pos  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  separator  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return validChars;^1700^^^^^1698^1710^[REPLACE] return str;^[METHOD] substringBefore [TYPE] String [PARAMETER] String str String separator [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  pos  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  separator  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^if  ( separator.length (  )  - 2 == 0 )  {^1702^^^^^1698^1710^[REPLACE] if  ( separator.length (  )  == 0 )  {^[METHOD] substringBefore [TYPE] String [PARAMETER] String str String separator [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  pos  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  separator  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[ADD]^return EMPTY;^1702^1703^1704^^^1698^1710^[ADD] if  ( separator.length (  )  == 0 )  { return EMPTY; }^[METHOD] substringBefore [TYPE] String [PARAMETER] String str String separator [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  pos  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  separator  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return !StringUtils.isEmpty ( str ) ;^1703^^^^^1698^1710^[REPLACE] return EMPTY;^[METHOD] substringBefore [TYPE] String [PARAMETER] String str String separator [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  pos  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  separator  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^int pos = stripChars.indexOf ( separator ) ;^1705^^^^^1698^1710^[REPLACE] int pos = str.indexOf ( separator ) ;^[METHOD] substringBefore [TYPE] String [PARAMETER] String str String separator [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  pos  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  separator  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^if  ( pos  !=  -1 )  {^1706^^^^^1698^1710^[REPLACE] if  ( pos == -1 )  {^[METHOD] substringBefore [TYPE] String [PARAMETER] String str String separator [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  pos  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  separator  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[ADD]^return str;^1706^1707^1708^^^1698^1710^[ADD] if  ( pos == -1 )  { return str; }^[METHOD] substringBefore [TYPE] String [PARAMETER] String str String separator [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  pos  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  separator  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return validChars;^1707^^^^^1698^1710^[REPLACE] return str;^[METHOD] substringBefore [TYPE] String [PARAMETER] String str String separator [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  pos  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  separator  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return str.lastIndexOf ( 0, pos ) ;^1709^^^^^1698^1710^[REPLACE] return str.substring ( 0, pos ) ;^[METHOD] substringBefore [TYPE] String [PARAMETER] String str String separator [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  pos  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  separator  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^if  ( isEmpty ( validChars )  )  {^1739^^^^^1738^1750^[REPLACE] if  ( isEmpty ( str )  )  {^[METHOD] substringAfter [TYPE] String [PARAMETER] String str String separator [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  pos  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  separator  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return validChars;^1740^^^^^1738^1750^[REPLACE] return str;^[METHOD] substringAfter [TYPE] String [PARAMETER] String str String separator [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  pos  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  separator  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^if  ( separator != null )  {^1742^^^^^1738^1750^[REPLACE] if  ( separator == null )  {^[METHOD] substringAfter [TYPE] String [PARAMETER] String str String separator [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  pos  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  separator  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return !StringUtils.isEmpty ( str ) ;^1743^^^^^1738^1750^[REPLACE] return EMPTY;^[METHOD] substringAfter [TYPE] String [PARAMETER] String str String separator [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  pos  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  separator  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^int pos = str .indexOf ( validChars , null )  ;^1745^^^^^1738^1750^[REPLACE] int pos = str.indexOf ( separator ) ;^[METHOD] substringAfter [TYPE] String [PARAMETER] String str String separator [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  pos  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  separator  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^if  ( pos  &&  -1 )  {^1746^^^^^1738^1750^[REPLACE] if  ( pos == -1 )  {^[METHOD] substringAfter [TYPE] String [PARAMETER] String str String separator [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  pos  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  separator  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return !StringUtils.isEmpty ( str ) ;^1747^^^^^1738^1750^[REPLACE] return EMPTY;^[METHOD] substringAfter [TYPE] String [PARAMETER] String str String separator [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  pos  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  separator  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return str.substring ( pos + separator.valueOf (  )  ) ;^1749^^^^^1738^1750^[REPLACE] return str.substring ( pos + separator.length (  )  ) ;^[METHOD] substringAfter [TYPE] String [PARAMETER] String str String separator [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  pos  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  separator  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^if  (  isEmpty ( separator )  )  {^1778^^^^^1777^1786^[REPLACE] if  ( isEmpty ( str )  || isEmpty ( separator )  )  {^[METHOD] substringBeforeLast [TYPE] String [PARAMETER] String str String separator [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  pos  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  separator  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[ADD]^return str;^1778^1779^1780^^^1777^1786^[ADD] if  ( isEmpty ( str )  || isEmpty ( separator )  )  { return str; }^[METHOD] substringBeforeLast [TYPE] String [PARAMETER] String str String separator [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  pos  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  separator  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return str1;^1779^^^^^1777^1786^[REPLACE] return str;^[METHOD] substringBeforeLast [TYPE] String [PARAMETER] String str String separator [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  pos  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  separator  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return stripChars;^1779^^^^^1777^1786^[REPLACE] return str;^[METHOD] substringBeforeLast [TYPE] String [PARAMETER] String str String separator [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  pos  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  separator  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^int pos = validChars.lastIndexOf ( separator ) ;^1781^^^^^1777^1786^[REPLACE] int pos = str.lastIndexOf ( separator ) ;^[METHOD] substringBeforeLast [TYPE] String [PARAMETER] String str String separator [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  pos  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  separator  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^if  (validSize  !=  -1 )  {^1782^^^^^1777^1786^[REPLACE] if  ( pos == -1 )  {^[METHOD] substringBeforeLast [TYPE] String [PARAMETER] String str String separator [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  pos  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  separator  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return str2;^1783^^^^^1777^1786^[REPLACE] return str;^[METHOD] substringBeforeLast [TYPE] String [PARAMETER] String str String separator [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  pos  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  separator  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return str.substring ( 4, pos ) ;^1785^^^^^1777^1786^[REPLACE] return str.substring ( 0, pos ) ;^[METHOD] substringBeforeLast [TYPE] String [PARAMETER] String str String separator [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  pos  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  separator  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^if  ( isEmpty ( str1 )  )  {^1816^^^^^1815^1827^[REPLACE] if  ( isEmpty ( str )  )  {^[METHOD] substringAfterLast [TYPE] String [PARAMETER] String str String separator [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  pos  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  separator  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return strs;^1817^^^^^1815^1827^[REPLACE] return str;^[METHOD] substringAfterLast [TYPE] String [PARAMETER] String str String separator [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  pos  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  separator  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return stripChars;^1817^^^^^1815^1827^[REPLACE] return str;^[METHOD] substringAfterLast [TYPE] String [PARAMETER] String str String separator [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  pos  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  separator  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^if  ( isEmpty ( stripChars )  )  {^1819^^^^^1815^1827^[REPLACE] if  ( isEmpty ( separator )  )  {^[METHOD] substringAfterLast [TYPE] String [PARAMETER] String str String separator [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  pos  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  separator  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REMOVE]^if  ( start > end )  {     return EMPTY; }^1819^^^^^1815^1827^[REMOVE] ^[METHOD] substringAfterLast [TYPE] String [PARAMETER] String str String separator [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  pos  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  separator  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return !StringUtils.isEmpty ( str ) ;^1820^^^^^1815^1827^[REPLACE] return EMPTY;^[METHOD] substringAfterLast [TYPE] String [PARAMETER] String str String separator [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  pos  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  separator  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^int pos = str.indexOf ( separator ) ;^1822^^^^^1815^1827^[REPLACE] int pos = str.lastIndexOf ( separator ) ;^[METHOD] substringAfterLast [TYPE] String [PARAMETER] String str String separator [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  pos  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  separator  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[ADD]^^1822^^^^^1815^1827^[ADD] int pos = str.lastIndexOf ( separator ) ;^[METHOD] substringAfterLast [TYPE] String [PARAMETER] String str String separator [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  pos  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  separator  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^if  ( pos == -0  ) {^1823^^^^^1815^1827^[REPLACE] if  ( pos == -1 || pos ==  ( str.length (  )  - separator.length (  )  )  )  {^[METHOD] substringAfterLast [TYPE] String [PARAMETER] String str String separator [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  pos  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  separator  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return !StringUtils.isEmpty ( str ) ;^1824^^^^^1815^1827^[REPLACE] return EMPTY;^[METHOD] substringAfterLast [TYPE] String [PARAMETER] String str String separator [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  pos  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  separator  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return str.substring ( validSize + separator.valueOf (  )  ) ;^1826^^^^^1815^1827^[REPLACE] return str.substring ( pos + separator.length (  )  ) ;^[METHOD] substringAfterLast [TYPE] String [PARAMETER] String str String separator [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  pos  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  separator  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return substringBetween ( str, validChars, tag ) ;^1853^^^^^1852^1854^[REPLACE] return substringBetween ( str, tag, tag ) ;^[METHOD] substringBetween [TYPE] String [PARAMETER] String str String tag [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  pos  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  separator  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^if  (  open == null || close == null )  {^1882^^^^^1881^1893^[REPLACE] if  ( str == null || open == null || close == null )  {^[METHOD] substringBetween [TYPE] String [PARAMETER] String str String open String close [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  pos  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true 
[ADD]^return null;^1882^1883^1884^^^1881^1893^[ADD] if  ( str == null || open == null || close == null )  { return null; }^[METHOD] substringBetween [TYPE] String [PARAMETER] String str String open String close [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  pos  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return true;^1883^^^^^1881^1893^[REPLACE] return null;^[METHOD] substringBetween [TYPE] String [PARAMETER] String str String open String close [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  pos  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return false;^1883^^^^^1881^1893^[REPLACE] return null;^[METHOD] substringBetween [TYPE] String [PARAMETER] String str String open String close [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  pos  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^int start = validChars.indexOf ( open ) ;^1885^^^^^1881^1893^[REPLACE] int start = str.indexOf ( open ) ;^[METHOD] substringBetween [TYPE] String [PARAMETER] String str String open String close [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  pos  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^if  ( start  ==  -1 )  {^1886^^^^^1881^1893^[REPLACE] if  ( start != -1 )  {^[METHOD] substringBetween [TYPE] String [PARAMETER] String str String open String close [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  pos  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true 
[ADD]^^1886^1887^1888^1889^1890^1881^1893^[ADD] if  ( start != -1 )  { int end = str.indexOf ( close, start + open.length (  )  ) ; if  ( end != -1 )  { return str.substring ( start + open.length (  ) , end ) ; }^[METHOD] substringBetween [TYPE] String [PARAMETER] String str String open String close [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  pos  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^if  ( end  ==  -1 )  {^1888^^^^^1881^1893^[REPLACE] if  ( end != -1 )  {^[METHOD] substringBetween [TYPE] String [PARAMETER] String str String open String close [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  pos  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true 
[ADD]^^1888^1889^1890^^^1881^1893^[ADD] if  ( end != -1 )  { return str.substring ( start + open.length (  ) , end ) ; }^[METHOD] substringBetween [TYPE] String [PARAMETER] String str String open String close [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  pos  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return str.substring ( tmp + stripChars .endsWith ( str2 )  , end ) ;^1889^^^^^1881^1893^[REPLACE] return str.substring ( start + open.length (  ) , end ) ;^[METHOD] substringBetween [TYPE] String [PARAMETER] String str String open String close [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  pos  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return str.substring ( start + open.valueOf (  ) , end ) ;^1889^^^^^1881^1893^[REPLACE] return str.substring ( start + open.length (  ) , end ) ;^[METHOD] substringBetween [TYPE] String [PARAMETER] String str String open String close [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  pos  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^int end = str.indexOf ( validChars, start + open.length (  )  + 3 ) ;^1887^^^^^1881^1893^[REPLACE] int end = str.indexOf ( close, start + open.length (  )  ) ;^[METHOD] substringBetween [TYPE] String [PARAMETER] String str String open String close [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  pos  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^if  ( end  ==  -1 - 2 )  {^1888^^^^^1881^1893^[REPLACE] if  ( end != -1 )  {^[METHOD] substringBetween [TYPE] String [PARAMETER] String str String open String close [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  pos  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return str .substring ( startPos )  ;^1889^^^^^1881^1893^[REPLACE] return str.substring ( start + open.length (  ) , end ) ;^[METHOD] substringBetween [TYPE] String [PARAMETER] String str String open String close [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  pos  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return str.substring ( start + open .endsWith ( validChars )  , end ) ;^1889^^^^^1881^1893^[REPLACE] return str.substring ( start + open.length (  ) , end ) ;^[METHOD] substringBetween [TYPE] String [PARAMETER] String str String open String close [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  pos  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^int end = str.indexOf ( close, start + open.valueOf (  )  %  2 ) ;^1887^^^^^1881^1893^[REPLACE] int end = str.indexOf ( close, start + open.length (  )  ) ;^[METHOD] substringBetween [TYPE] String [PARAMETER] String str String open String close [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  pos  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true 
[ADD]^^1887^^^^^1881^1893^[ADD] int end = str.indexOf ( close, start + open.length (  )  ) ;^[METHOD] substringBetween [TYPE] String [PARAMETER] String str String open String close [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  pos  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return true;^1892^^^^^1881^1893^[REPLACE] return null;^[METHOD] substringBetween [TYPE] String [PARAMETER] String str String open String close [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  pos  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return substringBetween ( validChars, tag, tag ) ;^1920^^^^^1919^1921^[REPLACE] return substringBetween ( str, tag, tag ) ;^[METHOD] getNestedString [TYPE] String [PARAMETER] String str String tag [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  pos  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return substringBetween ( str, tag, tag ) ;^1950^^^^^1949^1951^[REPLACE] return substringBetween ( str, open, close ) ;^[METHOD] getNestedString [TYPE] String [PARAMETER] String str String open String close [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  pos  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return split ( validChars, this, -1 ) ;^1978^^^^^1977^1979^[REPLACE] return split ( str, null, -1 ) ;^[METHOD] split [TYPE] String[] [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  pos  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return splitWorker ( str, separatorChar, true ) ;^2008^^^^^2007^2009^[REPLACE] return splitWorker ( str, separatorChar, false ) ;^[METHOD] split [TYPE] String[] [PARAMETER] String str char separatorChar [CLASS] StringUtils   [TYPE]  char separatorChar  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  pos  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^return splitWorker ( validChars, separatorChars, -2, false ) ;^2037^^^^^2036^2038^[REPLACE] return splitWorker ( str, separatorChars, -1, false ) ;^[METHOD] split [TYPE] String[] [PARAMETER] String str String separatorChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  ordinal  pos  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return splitWorker ( str, separatorChars, max, true ) ;^2071^^^^^2070^2072^[REPLACE] return splitWorker ( str, separatorChars, max, false ) ;^[METHOD] split [TYPE] String[] [PARAMETER] String str String separatorChars int max [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  max  ordinal  pos  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return splitByWholeSeparator (  validChars, separator, -2  )  ;^2098^^^^^2097^2099^[REPLACE] return splitByWholeSeparator (  str, separator, -1  )  ;^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  len  max  ordinal  pos  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^if  (validChars != this )  {^2129^^^^^2128^2183^[REPLACE] if  ( str == null )  {^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REMOVE]^if  ( start > len )  {     start = len; }^2129^^^^^2128^2183^[REMOVE] ^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^return this;^2130^^^^^2128^2183^[REPLACE] return null;^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^return false;^2130^^^^^2128^2183^[REPLACE] return null;^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^int len = stripChars.trim (  )  ;^2133^^^^^2128^2183^[REPLACE] int len = str.length (  )  ;^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( validSize  ||  2 )  {^2135^^^^^2128^2183^[REPLACE] if  ( len == 0 )  {^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^return leftPad ( str, size, padStr.charAt ( 0 )  ) ;^2136^^^^^2128^2183^[REPLACE] return ArrayUtils.EMPTY_STRING_ARRAY;^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  (   (  "".equals (  separator  )   )   )  {^2139^^^^^2128^2183^[REPLACE] if  (   (  separator == null  )  ||  (  "".equals (  separator  )   )   )  {^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^return split (  str, this, max  )  ;^2141^^^^^2128^2183^[REPLACE] return split (  str, null, max  )  ;^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^return split ( str, null, -1 ) ;^2141^^^^^2128^2183^[REPLACE] return split (  str, null, max  )  ;^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^int tsLength = separator .endsWith ( separatorChars )   ;^2145^^^^^2128^2183^[REPLACE] int separatorLength = separator.length (  )  ;^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^String ret = str.substring ( 0, lastIdx ) ;^2147^^^^^2128^2183^[REPLACE] ArrayList substrings = new ArrayList (  )  ;^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2147^^^^^2128^2183^[ADD] ArrayList substrings = new ArrayList (  )  ;^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^int numberOfSubstrings = 4 ;^2148^^^^^2128^2183^[REPLACE] int numberOfSubstrings = 0 ;^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^int beg = 3 ;^2149^^^^^2128^2183^[REPLACE] int beg = 0 ;^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^int end = 2 ;^2150^^^^^2128^2183^[REPLACE] int end = 0 ;^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^while  (  end  <=  len  )  {^2151^^^^^2128^2183^[REPLACE] while  (  end < len  )  {^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2151^2152^^^^2128^2183^[ADD] while  (  end < len  )  { end = str.indexOf (  separator, beg  )  ;^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  (  end  ==  -1  )  {^2154^^^^^2128^2183^[REPLACE] if  (  end > -1  )  {^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^end = temp; ;^2178^^^^^2154^2179^[REPLACE] end = len ;^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( validSize  ==  beg  )  {^2155^^^^^2128^2183^[REPLACE] if  (  end > beg  )  {^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^numberOfSubstrings += 1 ;end = len ;^2155^2156^^2158^2159^2128^2183^[ADD] if  (  end > beg  )  { numberOfSubstrings += 1 ; if  (  numberOfSubstrings == max  )  { end = len ;^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^beg = validSize + tmp ;^2173^^^^^2155^2174^[REPLACE] beg = end + separatorLength ;^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  (  numberOfSubstrings  !=  max  )  {^2158^^^^^2128^2183^[REPLACE] if  (  numberOfSubstrings == max  )  {^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^beg =validSize + separatorLength ;^2169^^^^^2158^2170^[REPLACE] beg = end + separatorLength ;^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^end = temp; ;^2159^^^^^2128^2183^[REPLACE] end = len ;^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^numberOfSubstrings += 3 ;^2156^^^^^2128^2183^[REPLACE] numberOfSubstrings += 1 ;^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2156^^^^^2128^2183^[ADD] numberOfSubstrings += 1 ;^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2159^^^^^2128^2183^[ADD] end = len ;^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^beg =validSize + separatorLength ;^2169^^^^^2128^2183^[REPLACE] beg = end + separatorLength ;^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  (  numberOfSubstrings  ||  max  )  {^2158^^^^^2128^2183^[REPLACE] if  (  numberOfSubstrings == max  )  {^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^numberOfSubstrings += 1L ;^2156^^^^^2128^2183^[REPLACE] numberOfSubstrings += 1 ;^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^beg = end +validSize ;^2169^^^^^2128^2183^[REPLACE] beg = end + separatorLength ;^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^beg =validSize + separatorLength ;^2173^^^^^2128^2183^[REPLACE] beg = end + separatorLength ;^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  (  end  !=  beg  )  {^2155^^^^^2128^2183^[REPLACE] if  (  end > beg  )  {^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2155^2156^^2158^2159^2128^2183^[ADD] if  (  end > beg  )  { numberOfSubstrings += 1 ; if  (  numberOfSubstrings == max  )  { end = len ;^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^beg = end +validSize ;^2173^^^^^2155^2174^[REPLACE] beg = end + separatorLength ;^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( validSize  !=  max  )  {^2158^^^^^2128^2183^[REPLACE] if  (  numberOfSubstrings == max  )  {^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^beg = end +validSize ;^2169^^^^^2158^2170^[REPLACE] beg = end + separatorLength ;^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^substrings.add (  str.substring (  beg  )   )  ;^2159^2160^^^^2128^2183^[ADD] end = len ; substrings.add (  str.substring (  beg  )   )  ;^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^numberOfSubstrings += 2 ;^2156^^^^^2128^2183^[REPLACE] numberOfSubstrings += 1 ;^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2169^^^^^2158^2170^[ADD] beg = end + separatorLength ;^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^end =  validChars.indexOf (  separator, beg  )  ;^2152^^^^^2128^2183^[REPLACE] end = str.indexOf (  separator, beg  )  ;^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^end = temp; ;^2178^^^^^2128^2183^[REPLACE] end = len ;^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2178^^^^^2128^2183^[ADD] end = len ;^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( validSize  !=  -1  )  {^2154^^^^^2128^2183^[REPLACE] if  (  end > -1  )  {^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2154^2155^2156^^^2128^2183^[ADD] if  (  end > -1  )  { if  (  end > beg  )  { numberOfSubstrings += 1 ;^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  (  end  < validSize  )  {^2155^^^^^2128^2183^[REPLACE] if  (  end > beg  )  {^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^beg =validSize + separatorLength ;^2173^^^^^2155^2174^[REPLACE] beg = end + separatorLength ;^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^numberOfSubstrings += 0 ;^2156^^^^^2128^2183^[REPLACE] numberOfSubstrings += 1 ;^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  (  numberOfSubstrings  || sz  )  {^2158^^^^^2128^2183^[REPLACE] if  (  numberOfSubstrings == max  )  {^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^numberOfSubstrings += 4 ;^2156^^^^^2128^2183^[REPLACE] numberOfSubstrings += 1 ;^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2169^^^^^2128^2183^[ADD] beg = end + separatorLength ;^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  (  end  >=  beg  )  {^2155^^^^^2128^2183^[REPLACE] if  (  end > beg  )  {^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^beg = validSize + ret ;^2173^^^^^2155^2174^[REPLACE] beg = end + separatorLength ;^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^end = len ;substrings.add (  str.substring (  beg  )   )  ;^2158^2159^2160^2161^^2128^2183^[ADD] if  (  numberOfSubstrings == max  )  { end = len ; substrings.add (  str.substring (  beg  )   )  ; } else {^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2159^2160^^^^2128^2183^[ADD] end = len ; substrings.add (  str.substring (  beg  )   )  ;^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^numberOfSubstrings += 1 / 0 ;^2156^^^^^2128^2183^[REPLACE] numberOfSubstrings += 1 ;^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^beg = validSize + strLen ;^2169^^^^^2128^2183^[REPLACE] beg = end + separatorLength ;^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( strSize  &&  max  )  {^2158^^^^^2128^2183^[REPLACE] if  (  numberOfSubstrings == max  )  {^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REMOVE]^if  ( end > beg )  {     numberOfSubstrings += 1;     if  ( numberOfSubstrings == max )  {         end = len;         substrings.add ( str.substring ( beg )  ) ;     }else {         substrings.add ( str.substring ( beg, end )  ) ;         beg = end + separatorLength;     } }else {     beg = end + separatorLength; }^2158^^^^^2128^2183^[REMOVE] ^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^end =  str2.indexOf (  separator, beg  )  ;^2152^^^^^2128^2183^[REPLACE] end = str.indexOf (  separator, beg  )  ;^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2152^^^^^2128^2183^[ADD] end = str.indexOf (  separator, beg  )  ;^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^numberOfSubstrings += 1 * 0 ;^2156^^^^^2128^2183^[REPLACE] numberOfSubstrings += 1 ;^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^beg = validSize + separatorLength ;^2169^^^^^2128^2183^[REPLACE] beg = end + separatorLength ;^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^beg = end  >  separatorLength ;^2173^^^^^2128^2183^[REPLACE] beg = end + separatorLength ;^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2173^^^^^2128^2183^[ADD] beg = end + separatorLength ;^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^return  ( String[] )  substrings.ArrayList (  new String[substrings.size (  ) ]  )  ;^2182^^^^^2128^2183^[REPLACE] return  ( String[] )  substrings.toArray (  new String[substrings.size (  ) ]  )  ;^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^return splitWorker ( str, false, -1, true ) ;^2212^^^^^2211^2213^[REPLACE] return splitWorker ( str, null, -1, true ) ;^[METHOD] splitPreserveAllTokens [TYPE] String[] [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return splitWorker ( str, separatorChar, false ) ;^2248^^^^^2247^2249^[REPLACE] return splitWorker ( str, separatorChar, true ) ;^[METHOD] splitPreserveAllTokens [TYPE] String[] [PARAMETER] String str char separatorChar [CLASS] StringUtils   [TYPE]  char separatorChar  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( str != null )  {^2266^^^^^2263^2296^[REPLACE] if  ( str == null )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str char separatorChar boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char separatorChar  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^return this;^2267^^^^^2263^2296^[REPLACE] return null;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str char separatorChar boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char separatorChar  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^return true;^2267^^^^^2263^2296^[REPLACE] return null;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str char separatorChar boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char separatorChar  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^int len = str.trim (  ) ;^2269^^^^^2263^2296^[REPLACE] int len = str.length (  ) ;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str char separatorChar boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char separatorChar  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2269^^^^^2263^2296^[ADD] int len = str.length (  ) ;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str char separatorChar boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char separatorChar  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( validSize  !=  0 )  {^2270^^^^^2263^2296^[REPLACE] if  ( len == 0 )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str char separatorChar boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char separatorChar  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^return leftPad ( str, size, padStr.charAt ( 0 )  ) ;^2271^^^^^2263^2296^[REPLACE] return ArrayUtils.EMPTY_STRING_ARRAY;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str char separatorChar boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char separatorChar  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^int idx = str.lastIndexOf ( sep ) ;^2273^^^^^2263^2296^[REPLACE] List list = new ArrayList (  ) ;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str char separatorChar boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char separatorChar  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^int i = 3, start = 3;^2274^^^^^2263^2296^[REPLACE] int i = 0, start = 0;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str char separatorChar boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char separatorChar  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^boolean match = false;^2274^2275^^^^2263^2296^[ADD] int i = 0, start = 0; boolean match = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str char separatorChar boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char separatorChar  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^int i = 1, start = 1;^2274^^^^^2263^2296^[REPLACE] int i = 0, start = 0;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str char separatorChar boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char separatorChar  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^boolean match = true;^2275^^^^^2263^2296^[REPLACE] boolean match = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str char separatorChar boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char separatorChar  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^boolean lastMatch = true;^2276^^^^^2263^2296^[REPLACE] boolean lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str char separatorChar boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char separatorChar  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^while  ( i  >=  len )  {^2277^^^^^2263^2296^[REPLACE] while  ( i < len )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str char separatorChar boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char separatorChar  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( str.charAt ( i )   &&  separatorChar )  {^2278^^^^^2263^2296^[REPLACE] if  ( str.charAt ( i )  == separatorChar )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str char separatorChar boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char separatorChar  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^lastMatch = true;^2287^^^^^2278^2288^[REPLACE] lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str char separatorChar boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char separatorChar  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2287^^^^^2278^2288^[ADD] lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str char separatorChar boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char separatorChar  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  (  preserveAllTokens )  {^2279^^^^^2263^2296^[REPLACE] if  ( match || preserveAllTokens )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str char separatorChar boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char separatorChar  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^match = true;^2281^^^^^2263^2296^[REPLACE] match = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str char separatorChar boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char separatorChar  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2281^2282^^^^2263^2296^[ADD] match = false; lastMatch = true;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str char separatorChar boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char separatorChar  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^match = true; ;^2282^^^^^2263^2296^[REPLACE] lastMatch = true;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str char separatorChar boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char separatorChar  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2282^^^^^2263^2296^[ADD] lastMatch = true;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str char separatorChar boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char separatorChar  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^lastMatch = false;^2282^^^^^2263^2296^[REPLACE] lastMatch = true;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str char separatorChar boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char separatorChar  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^start = end; ;^2284^^^^^2263^2296^[REPLACE] start = ++i;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str char separatorChar boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char separatorChar  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( match &&lastMatch )  {^2279^^^^^2263^2296^[REPLACE] if  ( match || preserveAllTokens )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str char separatorChar boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char separatorChar  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2281^^^^^2263^2296^[ADD] match = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str char separatorChar boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char separatorChar  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^lastMatch = true;^2287^^^^^2263^2296^[REPLACE] lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str char separatorChar boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char separatorChar  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^match = false;^2289^^^^^2263^2296^[REPLACE] match = true;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str char separatorChar boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char separatorChar  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( str.charAt ( validSize )   ||  separatorChar )  {^2278^^^^^2263^2296^[REPLACE] if  ( str.charAt ( i )  == separatorChar )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str char separatorChar boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char separatorChar  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( match && preserveAllTokens )  {^2279^^^^^2263^2296^[REPLACE] if  ( match || preserveAllTokens )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str char separatorChar boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char separatorChar  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^continue;^2284^2285^^^^2263^2296^[ADD] start = ++i; continue;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str char separatorChar boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char separatorChar  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( match &&  ( preserveAllTokens && lastMatch )  )  {^2292^^^^^2263^2296^[REPLACE] if  ( match ||  ( preserveAllTokens && lastMatch )  )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str char separatorChar boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char separatorChar  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^list.add ( str.substring ( tmp, i )  ) ;^2293^^^^^2263^2296^[REPLACE] list.add ( str.substring ( start, i )  ) ;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str char separatorChar boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char separatorChar  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^return  ( String[] )  list.size ( new String[list.size (  ) ] ) ;^2295^^^^^2263^2296^[REPLACE] return  ( String[] )  list.toArray ( new String[list.size (  ) ] ) ;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str char separatorChar boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char separatorChar  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^return splitWorker ( str, separatorChars, max, true ) ;^2332^^^^^2331^2333^[REPLACE] return splitWorker ( str, separatorChars, -1, true ) ;^[METHOD] splitPreserveAllTokens [TYPE] String[] [PARAMETER] String str String separatorChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return splitWorker ( str, separatorChars, max, false ) ;^2372^^^^^2371^2373^[REPLACE] return splitWorker ( str, separatorChars, max, true ) ;^[METHOD] splitPreserveAllTokens [TYPE] String[] [PARAMETER] String str String separatorChars int max [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^if  ( str2 != this )  {^2394^^^^^2389^2475^[REPLACE] if  ( str == null )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REMOVE]^if  ( start > len )  {     start = len; }^2394^^^^^2389^2475^[REMOVE] ^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^return this;^2395^^^^^2389^2475^[REPLACE] return null;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^int len = str2.length (  ) ;^2397^^^^^2389^2475^[REPLACE] int len = str.length (  ) ;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2397^^^^^2389^2475^[ADD] int len = str.length (  ) ;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( len  &&  0 )  {^2398^^^^^2389^2475^[REPLACE] if  ( len == 0 )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^return ArrayUtils.EMPTY_STRING_ARRAY;^2398^2399^2400^^^2389^2475^[ADD] if  ( len == 0 )  { return ArrayUtils.EMPTY_STRING_ARRAY; }^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^return leftPad ( str, size, padStr.charAt ( 0 )  ) ;^2399^^^^^2389^2475^[REPLACE] return ArrayUtils.EMPTY_STRING_ARRAY;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^int idx = str.lastIndexOf ( sep ) ;^2401^^^^^2389^2475^[REPLACE] List list = new ArrayList (  ) ;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^int sizePlus0  = 0 ;^2402^^^^^2389^2475^[REPLACE] int sizePlus1 = 1;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^int i = 3, start = 3;^2403^^^^^2389^2475^[REPLACE] int i = 0, start = 0;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^int i = 0 % 0, start = 0 % 0;^2403^^^^^2389^2475^[REPLACE] int i = 0, start = 0;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^boolean match = true;^2404^^^^^2389^2475^[REPLACE] boolean match = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2404^2405^^^^2389^2475^[ADD] boolean match = false; boolean lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^boolean lastMatch = true;^2405^^^^^2389^2475^[REPLACE] boolean lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^while  (validSize  !=  len )  {^2408^^^^^2389^2475^[REPLACE] while  ( i < len )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2408^2409^2410^^^2389^2475^[ADD] while  ( i < len )  { if  ( Character.isWhitespace ( str.charAt ( i )  )  )  { if  ( match || preserveAllTokens )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( !Character.isWhitespace ( str.charAt ( i )  )  )  {^2409^^^^^2389^2475^[REPLACE] if  ( Character.isWhitespace ( str.charAt ( i )  )  )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^lastMatch = true; ;^2422^^^^^2409^2423^[REPLACE] lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  (lastMatch ) {^2410^^^^^2389^2475^[REPLACE] if  ( match || preserveAllTokens )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if (sizePlus1++  &&  max) {^2412^^^^^2389^2475^[REPLACE] if  ( sizePlus1++ == max )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^i =  strsLen;^2413^^^^^2389^2475^[REPLACE] i = len;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^lastMatch = true;^2414^^^^^2389^2475^[REPLACE] lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2414^^^^^2389^2475^[ADD] lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^lastMatch = false;^2411^^^^^2389^2475^[REPLACE] lastMatch = true;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2411^^^^^2389^2475^[ADD] lastMatch = true;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^i =  validSize;^2413^^^^^2389^2475^[REPLACE] i = len;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^match = true;^2417^^^^^2389^2475^[REPLACE] match = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^lastMatch = true; ;^2414^^^^^2389^2475^[REPLACE] lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^match = true; ;^2411^^^^^2389^2475^[REPLACE] lastMatch = true;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2413^^^^^2389^2475^[ADD] i = len;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^start = end; ;^2419^^^^^2389^2475^[REPLACE] start = ++i;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^continue;^2419^2420^^^^2389^2475^[ADD] start = ++i; continue;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  (  preserveAllTokens )  {^2410^^^^^2389^2475^[REPLACE] if  ( match || preserveAllTokens )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if (sizePlus1++  || start) {^2412^^^^^2389^2475^[REPLACE] if  ( sizePlus1++ == max )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^i = len;lastMatch = false;^2412^2413^2414^2415^^2389^2475^[ADD] if  ( sizePlus1++ == max )  { i = len; lastMatch = false; }^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^i =  null;^2413^^^^^2389^2475^[REPLACE] i = len;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^lastMatch = true; ;^2422^^^^^2389^2475^[REPLACE] lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^lastMatch = true; ;^2424^^^^^2389^2475^[REPLACE] match = true;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^whvalidSizele  ( i  <=  len )  {^2430^^^^^2389^2475^[REPLACE] while  ( i < len )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2430^2431^2432^^^2389^2475^[ADD] while  ( i < len )  { if  ( str.charAt ( i )  == sep )  { if  ( match || preserveAllTokens )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( str.charAt ( i )   &&  sep )  {^2431^^^^^2389^2475^[REPLACE] if  ( str.charAt ( i )  == sep )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2431^2432^2433^2434^2435^2389^2475^[ADD] if  ( str.charAt ( i )  == sep )  { if  ( match || preserveAllTokens )  { lastMatch = true; if  ( sizePlus1++ == max )  { i = len;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^lastMatch = true;^2444^^^^^2431^2445^[REPLACE] lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  (  preserveAllTokens )  {^2432^^^^^2389^2475^[REPLACE] if  ( match || preserveAllTokens )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if (sizePlus1++  &&  max) {^2434^^^^^2389^2475^[REPLACE] if  ( sizePlus1++ == max )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^i =  validSize;^2435^^^^^2389^2475^[REPLACE] i = len;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^lastMatch = true;^2436^^^^^2389^2475^[REPLACE] lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^lastMatch = false;^2433^^^^^2389^2475^[REPLACE] lastMatch = true;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^match = true;^2439^^^^^2389^2475^[REPLACE] match = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2434^2435^2436^2437^^2389^2475^[ADD] if  ( sizePlus1++ == max )  { i = len; lastMatch = false; }^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^lastMatch = false;^2435^2436^^^^2389^2475^[ADD] i = len; lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^lastMatch = true; ;^2436^^^^^2389^2475^[REPLACE] lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2435^2436^^^^2389^2475^[ADD] i = len; lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^start = end; ;^2441^^^^^2389^2475^[REPLACE] start = ++i;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( match && true )  {^2432^^^^^2389^2475^[REPLACE] if  ( match || preserveAllTokens )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2432^2433^2434^2435^2436^2389^2475^[ADD] if  ( match || preserveAllTokens )  { lastMatch = true; if  ( sizePlus1++ == max )  { i = len; lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2435^^^^^2389^2475^[ADD] i = len;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2439^^^^^2389^2475^[ADD] match = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if (sizePlus1++  != strLen) {^2434^^^^^2389^2475^[REPLACE] if  ( sizePlus1++ == max )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^match = true; ;^2439^^^^^2389^2475^[REPLACE] match = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^lastMatch = true;^2444^^^^^2389^2475^[REPLACE] lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^match = false;^2446^^^^^2389^2475^[REPLACE] match = true;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2446^^^^^2389^2475^[ADD] match = true;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^while  ( i  >=  len )  {^2451^^^^^2389^2475^[REPLACE] while  ( i < len )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( separatorChars.indexOf ( str.charAt ( i )  )   <=  0 )  {^2452^^^^^2389^2475^[REPLACE] if  ( separatorChars.indexOf ( str.charAt ( i )  )  >= 0 )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^lastMatch = true; ;^2465^^^^^2452^2466^[REPLACE] lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  (lastMatch && preserveAllTokens )  {^2453^^^^^2389^2475^[REPLACE] if  ( match || preserveAllTokens )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if (sizePlus1++  &&  max) {^2455^^^^^2389^2475^[REPLACE] if  ( sizePlus1++ == max )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^i =  validSize;^2456^^^^^2389^2475^[REPLACE] i = len;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^lastMatch = true;^2457^^^^^2389^2475^[REPLACE] lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2457^^^^^2389^2475^[ADD] lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^match = true; ;^2454^^^^^2389^2475^[REPLACE] lastMatch = true;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^i =  null;^2456^^^^^2389^2475^[REPLACE] i = len;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^lastMatch = true; ;^2457^^^^^2389^2475^[REPLACE] lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^match = true; ;^2460^^^^^2389^2475^[REPLACE] match = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if (sizePlus1++  !=  validSize) {^2455^^^^^2389^2475^[REPLACE] if  ( sizePlus1++ == max )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^i =  strsLen;^2456^^^^^2389^2475^[REPLACE] i = len;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2454^^^^^2389^2475^[ADD] lastMatch = true;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^match = true;^2460^^^^^2389^2475^[REPLACE] match = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^start = end; ;^2462^^^^^2389^2475^[REPLACE] start = ++i;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( match ) {^2453^^^^^2389^2475^[REPLACE] if  ( match || preserveAllTokens )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^lastMatch = false;^2454^^^^^2389^2475^[REPLACE] lastMatch = true;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if (sizePlus1++  ||  max) {^2455^^^^^2389^2475^[REPLACE] if  ( sizePlus1++ == max )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^i = len;lastMatch = false;^2455^2456^2457^2458^^2389^2475^[ADD] if  ( sizePlus1++ == max )  { i = len; lastMatch = false; }^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2460^^^^^2389^2475^[ADD] match = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^lastMatch = true;^2465^^^^^2389^2475^[REPLACE] lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^match = false;^2467^^^^^2389^2475^[REPLACE] match = true;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2467^2468^^^^2389^2475^[ADD] match = true; i++;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( separatorChars != this )  {^2406^^^^^2389^2475^[REPLACE] if  ( separatorChars == null )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2406^2407^2408^2409^^2389^2475^[ADD] if  ( separatorChars == null )  {  while  ( i < len )  { if  ( Character.isWhitespace ( str.charAt ( i )  )  )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^whvalidSizele  ( i  <=  validSize )  {^2430^^^^^2389^2475^[REPLACE] while  ( i < len )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( str.charAt ( i )   ||  sep )  {^2431^^^^^2389^2475^[REPLACE] if  ( str.charAt ( i )  == sep )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2444^^^^^2431^2445^[ADD] lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if (sizePlus1++  ||  max) {^2434^^^^^2389^2475^[REPLACE] if  ( sizePlus1++ == max )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2433^^^^^2389^2475^[ADD] lastMatch = true;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if (sizePlus1++  !=  max) {^2434^^^^^2389^2475^[REPLACE] if  ( sizePlus1++ == max )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2436^^^^^2389^2475^[ADD] lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2441^^^^^2389^2475^[ADD] start = ++i;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  (  true )  {^2432^^^^^2389^2475^[REPLACE] if  ( match || preserveAllTokens )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^i = len;lastMatch = false;^2434^2435^2436^2437^^2389^2475^[ADD] if  ( sizePlus1++ == max )  { i = len; lastMatch = false; }^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^match = true; ;^2433^^^^^2389^2475^[REPLACE] lastMatch = true;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^lastMatch = true; ;^2444^^^^^2389^2475^[REPLACE] lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^while  ( i  <=  len )  {^2451^^^^^2389^2475^[REPLACE] while  ( i < len )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2451^2452^2453^^^2389^2475^[ADD] while  ( i < len )  { if  ( separatorChars.indexOf ( str.charAt ( i )  )  >= 0 )  { if  ( match || preserveAllTokens )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( separatorChars.indexOf ( str.charAt ( i )  )   ==  0 )  {^2452^^^^^2389^2475^[REPLACE] if  ( separatorChars.indexOf ( str.charAt ( i )  )  >= 0 )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2452^2453^2454^2455^2456^2389^2475^[ADD] if  ( separatorChars.indexOf ( str.charAt ( i )  )  >= 0 )  { if  ( match || preserveAllTokens )  { lastMatch = true; if  ( sizePlus1++ == max )  { i = len;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^lastMatch = true;^2465^^^^^2452^2466^[REPLACE] lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2465^^^^^2452^2466^[ADD] lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  (  preserveAllTokens )  {^2453^^^^^2389^2475^[REPLACE] if  ( match || preserveAllTokens )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^lastMatch = true;i = len;lastMatch = false;^2453^2454^2455^2456^2457^2389^2475^[ADD] if  ( match || preserveAllTokens )  { lastMatch = true; if  ( sizePlus1++ == max )  { i = len; lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2456^2457^^^^2389^2475^[ADD] i = len; lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2462^2463^^^^2389^2475^[ADD] start = ++i; continue;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( lastMatch && false )  {^2453^^^^^2389^2475^[REPLACE] if  ( match || preserveAllTokens )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2455^2456^2457^2458^^2389^2475^[ADD] if  ( sizePlus1++ == max )  { i = len; lastMatch = false; }^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if (sizePlus1++  &&  validSize) {^2455^^^^^2389^2475^[REPLACE] if  ( sizePlus1++ == max )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^}  else {^2427^^^^^2389^2475^[REPLACE] } else if  ( separatorChars.length (  )  == 1 )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^}   char sep = separatorChars.charAt ( 0 ) ;^2427^2428^2429^2430^^2389^2475^[ADD] else if  ( separatorChars.length (  )  == 1 )  {  char sep = separatorChars.charAt ( 0 ) ; while  ( i < len )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^while  ( i  !=  len )  {^2451^^^^^2427^2470^[REPLACE] while  ( i < len )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2451^2452^2453^^^2427^2470^[ADD] while  ( i < len )  { if  ( separatorChars.indexOf ( str.charAt ( i )  )  >= 0 )  { if  ( match || preserveAllTokens )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( separatorChars.indexOf ( str.indexOf ( i )  )   != validSize )  {^2452^^^^^2427^2470^[REPLACE] if  ( separatorChars.indexOf ( str.charAt ( i )  )  >= 0 )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2452^2453^2454^2455^2456^2427^2470^[ADD] if  ( separatorChars.indexOf ( str.charAt ( i )  )  >= 0 )  { if  ( match || preserveAllTokens )  { lastMatch = true; if  ( sizePlus1++ == max )  { i = len;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( match && preserveAllTokens )  {^2453^^^^^2427^2470^[REPLACE] if  ( match || preserveAllTokens )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if (sizePlus1++  ||  max) {^2455^^^^^2427^2470^[REPLACE] if  ( sizePlus1++ == max )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^i =  strsLen;^2456^^^^^2427^2470^[REPLACE] i = len;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2456^^^^^2427^2470^[ADD] i = len;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^lastMatch = true;^2457^^^^^2427^2470^[REPLACE] lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^lastMatch = false;^2454^^^^^2427^2470^[REPLACE] lastMatch = true;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^i =  validSize;^2456^^^^^2427^2470^[REPLACE] i = len;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^match = true;^2460^^^^^2427^2470^[REPLACE] match = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2457^^^^^2427^2470^[ADD] lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2460^^^^^2427^2470^[ADD] match = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^start = end; ;^2462^^^^^2427^2470^[REPLACE] start = ++i;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  (  preserveAllTokens )  {^2453^^^^^2427^2470^[REPLACE] if  ( match || preserveAllTokens )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if (sizePlus1++  &&  validSize) {^2455^^^^^2427^2470^[REPLACE] if  ( sizePlus1++ == max )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^i = len;lastMatch = false;^2455^2456^2457^2458^^2427^2470^[ADD] if  ( sizePlus1++ == max )  { i = len; lastMatch = false; }^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^match = true; ;^2454^^^^^2427^2470^[REPLACE] lastMatch = true;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2456^2457^^^^2427^2470^[ADD] i = len; lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if (sizePlus1++  != validSize) {^2455^^^^^2427^2470^[REPLACE] if  ( sizePlus1++ == max )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2454^^^^^2427^2470^[ADD] lastMatch = true;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^lastMatch = true;^2465^^^^^2427^2470^[REPLACE] lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^match = false;^2467^^^^^2427^2470^[REPLACE] match = true;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( separatorChars.indexOf ( str.charAt ( i )  )   >  0 )  {^2452^^^^^2427^2470^[REPLACE] if  ( separatorChars.indexOf ( str.charAt ( i )  )  >= 0 )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( match ) {^2453^^^^^2427^2470^[REPLACE] if  ( match || preserveAllTokens )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if (sizePlus1++  !=  max) {^2455^^^^^2427^2470^[REPLACE] if  ( sizePlus1++ == max )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^lastMatch = false;^2456^2457^^^^2427^2470^[ADD] i = len; lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^lastMatch = true;i = len;lastMatch = false;^2453^2454^2455^2456^2457^2427^2470^[ADD] if  ( match || preserveAllTokens )  { lastMatch = true; if  ( sizePlus1++ == max )  { i = len; lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2462^2463^^^^2427^2470^[ADD] start = ++i; continue;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^i++;^2467^2468^^^^2427^2470^[ADD] match = true; i++;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^while  (validSize  ==  len )  {^2430^^^^^2389^2475^[REPLACE] while  ( i < len )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  (lastMatch ) {^2432^^^^^2389^2475^[REPLACE] if  ( match || preserveAllTokens )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^lastMatch = true;i = len;lastMatch = false;^2432^2433^2434^2435^2436^2389^2475^[ADD] if  ( match || preserveAllTokens )  { lastMatch = true; if  ( sizePlus1++ == max )  { i = len; lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^i =  null;^2435^^^^^2389^2475^[REPLACE] i = len;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^i =  strsLen;^2435^^^^^2389^2475^[REPLACE] i = len;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^continue;^2441^2442^^^^2389^2475^[ADD] start = ++i; continue;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if (sizePlus1++  !=  validSize) {^2434^^^^^2389^2475^[REPLACE] if  ( sizePlus1++ == max )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( str.charAt ( i )   !=  sep )  {^2431^^^^^2389^2475^[REPLACE] if  ( str.charAt ( i )  == sep )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^lastMatch = true; ;^2444^^^^^2431^2445^[REPLACE] lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( match && preserveAllTokens )  {^2432^^^^^2389^2475^[REPLACE] if  ( match || preserveAllTokens )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if (sizePlus1++  ||  validSize) {^2434^^^^^2389^2475^[REPLACE] if  ( sizePlus1++ == max )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^char sep = separatorChars .concat ( str2 )  ;^2429^^^^^2389^2475^[REPLACE] char sep = separatorChars.charAt ( 0 ) ;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( str.indexOf ( i )   &&  sep )  {^2431^^^^^2389^2475^[REPLACE] if  ( str.charAt ( i )  == sep )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( match &&lastMatch )  {^2432^^^^^2389^2475^[REPLACE] if  ( match || preserveAllTokens )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( separatorChars.indexOf ( str.charAt ( i )  )   <=  0 - 0 )  {^2452^^^^^2389^2475^[REPLACE] if  ( separatorChars.indexOf ( str.charAt ( i )  )  >= 0 )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  (lastMatch ) {^2453^^^^^2389^2475^[REPLACE] if  ( match || preserveAllTokens )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2456^^^^^2389^2475^[ADD] i = len;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2462^^^^^2389^2475^[ADD] start = ++i;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2453^2454^2455^2456^2457^2389^2475^[ADD] if  ( match || preserveAllTokens )  { lastMatch = true; if  ( sizePlus1++ == max )  { i = len; lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if (sizePlus1++  != validSize) {^2455^^^^^2389^2475^[REPLACE] if  ( sizePlus1++ == max )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2467^^^^^2389^2475^[ADD] match = true;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^char sep = separatorChars.charAt ( 1 ) ;^2429^^^^^2389^2475^[REPLACE] char sep = separatorChars.charAt ( 0 ) ;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^while  (validSize  ==  len )  {^2408^^^^^2389^2475^[REPLACE] while  ( i < len )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^lastMatch = true;^2422^^^^^2409^2423^[REPLACE] lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  (lastMatch && preserveAllTokens )  {^2410^^^^^2389^2475^[REPLACE] if  ( match || preserveAllTokens )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if (sizePlus1++  &&  validSize) {^2412^^^^^2389^2475^[REPLACE] if  ( sizePlus1++ == max )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2417^^^^^2389^2475^[ADD] match = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if (sizePlus1++  !=  max) {^2412^^^^^2389^2475^[REPLACE] if  ( sizePlus1++ == max )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( lastMatch && false )  {^2410^^^^^2389^2475^[REPLACE] if  ( match || preserveAllTokens )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if (sizePlus1++  || startPos) {^2412^^^^^2389^2475^[REPLACE] if  ( sizePlus1++ == max )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if (sizePlus1++  ||  max) {^2412^^^^^2389^2475^[REPLACE] if  ( sizePlus1++ == max )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^lastMatch = true;^2422^^^^^2389^2475^[REPLACE] lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^match = false;^2424^^^^^2389^2475^[REPLACE] match = true;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2409^2410^2411^2412^2413^2389^2475^[ADD] if  ( Character.isWhitespace ( str.charAt ( i )  )  )  { if  ( match || preserveAllTokens )  { lastMatch = true; if  ( sizePlus1++ == max )  { i = len;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^match = true; ;^2417^^^^^2389^2475^[REPLACE] match = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2413^2414^^^^2389^2475^[ADD] i = len; lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( match && preserveAllTokens )  {^2410^^^^^2389^2475^[REPLACE] if  ( match || preserveAllTokens )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2410^2411^2412^2413^2414^2389^2475^[ADD] if  ( match || preserveAllTokens )  { lastMatch = true; if  ( sizePlus1++ == max )  { i = len; lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^}  if  ( separatorChars.length (  )  /  0.5  == 0  )  {^2427^^^^^2389^2475^[REPLACE] } else if  ( separatorChars.length (  )  == 1 )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^while  (validSize  <=  len )  {^2451^^^^^2427^2470^[REPLACE] while  ( i < len )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( separatorChars.indexOf ( str.charAt ( i )  )   ==  1 )  {^2452^^^^^2427^2470^[REPLACE] if  ( separatorChars.indexOf ( str.charAt ( i )  )  >= 0 )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^i =  null;^2456^^^^^2427^2470^[REPLACE] i = len;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^lastMatch = true; ;^2457^^^^^2427^2470^[REPLACE] lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if (sizePlus1++  || start) {^2455^^^^^2427^2470^[REPLACE] if  ( sizePlus1++ == max )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2455^2456^2457^2458^^2427^2470^[ADD] if  ( sizePlus1++ == max )  { i = len; lastMatch = false; }^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( lastMatch ) {^2453^^^^^2427^2470^[REPLACE] if  ( match || preserveAllTokens )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2467^2468^^^^2427^2470^[ADD] match = true; i++;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( separatorChars.indexOf ( str.indexOf ( i )  )   < validSize )  {^2452^^^^^2427^2470^[REPLACE] if  ( separatorChars.indexOf ( str.charAt ( i )  )  >= 0 )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if (sizePlus1++  != sizePlus1) {^2455^^^^^2427^2470^[REPLACE] if  ( sizePlus1++ == max )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^match = true; ;^2460^^^^^2427^2470^[REPLACE] match = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^while  ( i  ==  len )  {^2430^^^^^2389^2475^[REPLACE] while  ( i < len )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2441^2442^^^^2389^2475^[ADD] start = ++i; continue;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^lastMatch = true; ;^2446^^^^^2389^2475^[REPLACE] match = true;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( match ) {^2432^^^^^2389^2475^[REPLACE] if  ( match || preserveAllTokens )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  (lastMatch && true )  {^2432^^^^^2389^2475^[REPLACE] if  ( match || preserveAllTokens )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2429^^^^^2389^2475^[ADD] char sep = separatorChars.charAt ( 0 ) ;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( separatorChars.indexOf ( str.charAt ( i )  )   !=  0 )  {^2452^^^^^2389^2475^[REPLACE] if  ( separatorChars.indexOf ( str.charAt ( i )  )  >= 0 )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if (sizePlus1++  ||  validSize) {^2455^^^^^2389^2475^[REPLACE] if  ( sizePlus1++ == max )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^lastMatch = false;^2456^2457^^^^2389^2475^[ADD] i = len; lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^char sep = stripChars .concat ( str1 )  ;^2429^^^^^2389^2475^[REPLACE] char sep = separatorChars.charAt ( 0 ) ;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  (   ( preserveAllTokens && lastMatch )  )  {^2471^^^^^2389^2475^[REPLACE] if  ( match ||  ( preserveAllTokens && lastMatch )  )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2471^2472^2473^^^2389^2475^[ADD] if  ( match ||  ( preserveAllTokens && lastMatch )  )  { list.add ( str.substring ( start, i )  ) ; }^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^list.add ( str.substring ( tmp, i )  ) ;^2472^^^^^2389^2475^[REPLACE] list.add ( str.substring ( start, i )  ) ;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2472^^^^^2389^2475^[ADD] list.add ( str.substring ( start, i )  ) ;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REMOVE]^int idx = str.lastIndexOf ( sep ) ;^2472^^^^^2389^2475^[REMOVE] ^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^return  ( String[] )  list .ArrayList (  )  ;^2474^^^^^2389^2475^[REPLACE] return  ( String[] )  list.toArray ( new String[list.size (  ) ] ) ;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^return join ( array, true ) ;^2498^^^^^2497^2499^[REPLACE] return join ( array, null ) ;^[METHOD] concatenate [TYPE] String [PARAMETER] Object[] array [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  Object[] array 
[REPLACE]^return join ( array, true ) ;^2522^^^^^2521^2523^[REPLACE] return join ( array, null ) ;^[METHOD] join [TYPE] String [PARAMETER] Object[] array [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  Object[] array 
[REPLACE]^if  ( array != null )  {^2548^^^^^2547^2564^[REPLACE] if  ( array == null )  {^[METHOD] join [TYPE] String [PARAMETER] Object[] array char separator [CLASS] StringUtils   [TYPE]  char separator  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  Object[] array 
[REPLACE]^return true;^2549^^^^^2547^2564^[REPLACE] return null;^[METHOD] join [TYPE] String [PARAMETER] Object[] array char separator [CLASS] StringUtils   [TYPE]  char separator  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  Object[] array 
[REPLACE]^return this;^2549^^^^^2547^2564^[REPLACE] return null;^[METHOD] join [TYPE] String [PARAMETER] Object[] array char separator [CLASS] StringUtils   [TYPE]  char separator  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  Object[] array 
[REPLACE]^int pads = size - str.length (  ) ;^2551^^^^^2547^2564^[REPLACE] int arraySize = array.length;^[METHOD] join [TYPE] String [PARAMETER] Object[] array char separator [CLASS] StringUtils   [TYPE]  char separator  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  Object[] array 
[REPLACE]^int bufSize =  ( arraySize == 0  ? 0  :  (  ( array[0 ] == null ? 16 : array[0 ].toString (  ) .length (  )  /  0 .5  )  + 1 )  * arraySize ) ;^2552^^^^^2547^2564^[REPLACE] int bufSize =  ( arraySize == 0 ? 0 :  (  ( array[0] == null ? 16 : array[0].toString (  ) .length (  )  )  + 1 )  * arraySize ) ;^[METHOD] join [TYPE] String [PARAMETER] Object[] array char separator [CLASS] StringUtils   [TYPE]  char separator  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  Object[] array 
[REPLACE]^StringBuffer buf = new StringBuffer ( 256 ) ;^2553^^^^^2547^2564^[REPLACE] StringBuffer buf = new StringBuffer ( bufSize ) ;^[METHOD] join [TYPE] String [PARAMETER] Object[] array char separator [CLASS] StringUtils   [TYPE]  char separator  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  Object[] array 
[REPLACE]^if  ( i  <=  0 - 0 )  {^2556^^^^^2547^2564^[REPLACE] if  ( i > 0 )  {^[METHOD] join [TYPE] String [PARAMETER] Object[] array char separator [CLASS] StringUtils   [TYPE]  char separator  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  Object[] array 
[REPLACE]^buf .reverse ( separator )  ;^2557^^^^^2547^2564^[REPLACE] buf.append ( separator ) ;^[METHOD] join [TYPE] String [PARAMETER] Object[] array char separator [CLASS] StringUtils   [TYPE]  char separator  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  Object[] array 
[REPLACE]^if  ( array[i] == null )  {^2559^^^^^2547^2564^[REPLACE] if  ( array[i] != null )  {^[METHOD] join [TYPE] String [PARAMETER] Object[] array char separator [CLASS] StringUtils   [TYPE]  char separator  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  Object[] array 
[REPLACE]^return join ( array, null ) ;^2560^^^^^2547^2564^[REPLACE] buf.append ( array[i] ) ;^[METHOD] join [TYPE] String [PARAMETER] Object[] array char separator [CLASS] StringUtils   [TYPE]  char separator  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  Object[] array 
[REPLACE]^for  ( int i = 0L; i  > validSize; i++ )  {^2555^^^^^2547^2564^[REPLACE] for  ( int i = 0; i < arraySize; i++ )  {^[METHOD] join [TYPE] String [PARAMETER] Object[] array char separator [CLASS] StringUtils   [TYPE]  char separator  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  Object[] array 
[REPLACE]^if  (validSize  <=  0 + 4 )  {^2556^^^^^2547^2564^[REPLACE] if  ( i > 0 )  {^[METHOD] join [TYPE] String [PARAMETER] Object[] array char separator [CLASS] StringUtils   [TYPE]  char separator  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  Object[] array 
[ADD]^buf.append ( separator ) ;^2556^2557^2558^^^2547^2564^[ADD] if  ( i > 0 )  { buf.append ( separator ) ; }^[METHOD] join [TYPE] String [PARAMETER] Object[] array char separator [CLASS] StringUtils   [TYPE]  char separator  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  Object[] array 
[REPLACE]^buf .reverse ( EMPTY )  ;^2557^^^^^2547^2564^[REPLACE] buf.append ( separator ) ;^[METHOD] join [TYPE] String [PARAMETER] Object[] array char separator [CLASS] StringUtils   [TYPE]  char separator  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  Object[] array 
[REPLACE]^if  ( array[i] == true )  {^2559^^^^^2547^2564^[REPLACE] if  ( array[i] != null )  {^[METHOD] join [TYPE] String [PARAMETER] Object[] array char separator [CLASS] StringUtils   [TYPE]  char separator  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  Object[] array 
[ADD]^^2560^^^^^2547^2564^[ADD] buf.append ( array[i] ) ;^[METHOD] join [TYPE] String [PARAMETER] Object[] array char separator [CLASS] StringUtils   [TYPE]  char separator  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  Object[] array 
[REPLACE]^for  ( int i = 4; i < arraySize; i++ )  {^2555^^^^^2547^2564^[REPLACE] for  ( int i = 0; i < arraySize; i++ )  {^[METHOD] join [TYPE] String [PARAMETER] Object[] array char separator [CLASS] StringUtils   [TYPE]  char separator  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  Object[] array 
[REPLACE]^return buf.reverse (  ) ;^2563^^^^^2547^2564^[REPLACE] return buf.toString (  ) ;^[METHOD] join [TYPE] String [PARAMETER] Object[] array char separator [CLASS] StringUtils   [TYPE]  char separator  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  Object[] array 
[REPLACE]^if  ( array != false )  {^2590^^^^^2589^2619^[REPLACE] if  ( array == null )  {^[METHOD] join [TYPE] String [PARAMETER] Object[] array String separator [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  Object[] array 
[ADD]^^2590^2591^2592^^^2589^2619^[ADD] if  ( array == null )  { return null; }^[METHOD] join [TYPE] String [PARAMETER] Object[] array String separator [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  Object[] array 
[REPLACE]^return false;^2591^^^^^2589^2619^[REPLACE] return null;^[METHOD] join [TYPE] String [PARAMETER] Object[] array String separator [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  Object[] array 
[REPLACE]^if  ( separator != false )  {^2593^^^^^2589^2619^[REPLACE] if  ( separator == null )  {^[METHOD] join [TYPE] String [PARAMETER] Object[] array String separator [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  Object[] array 
[REPLACE]^separator  =  separator ;^2594^^^^^2589^2619^[REPLACE] separator = EMPTY;^[METHOD] join [TYPE] String [PARAMETER] Object[] array String separator [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  Object[] array 
[ADD]^^2594^^^^^2589^2619^[ADD] separator = EMPTY;^[METHOD] join [TYPE] String [PARAMETER] Object[] array String separator [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  Object[] array 
[REPLACE]^int pads = size - str.length (  ) ;^2596^^^^^2589^2619^[REPLACE] int arraySize = array.length;^[METHOD] join [TYPE] String [PARAMETER] Object[] array String separator [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  Object[] array 
[ADD]^^2596^^^^^2589^2619^[ADD] int arraySize = array.length;^[METHOD] join [TYPE] String [PARAMETER] Object[] array String separator [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  Object[] array 
[REPLACE]^int bufSize  =  0 ;^2601^2602^2603^2604^^2589^2619^[REPLACE] int bufSize = (  ( arraySize == 0 ) ? 0 : arraySize^[METHOD] join [TYPE] String [PARAMETER] Object[] array String separator [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  Object[] array 
[ADD]^^2601^2602^2603^^^2589^2619^[ADD] int bufSize = (  ( arraySize == 0 ) ? 0^[METHOD] join [TYPE] String [PARAMETER] Object[] array String separator [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  Object[] array 
[REPLACE]^StringBuffer buf = new StringBuffer ( validSize ) ;^2608^^^^^2589^2619^[REPLACE] StringBuffer buf = new StringBuffer ( bufSize ) ;^[METHOD] join [TYPE] String [PARAMETER] Object[] array String separator [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  Object[] array 
[REPLACE]^if  ( i  <  0 )  {^2611^^^^^2589^2619^[REPLACE] if  ( i > 0 )  {^[METHOD] join [TYPE] String [PARAMETER] Object[] array String separator [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  Object[] array 
[REPLACE]^buf.append ( ts ) ;^2612^^^^^2589^2619^[REPLACE] buf.append ( separator ) ;^[METHOD] join [TYPE] String [PARAMETER] Object[] array String separator [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  Object[] array 
[REPLACE]^if  ( array[i] == null )  {^2614^^^^^2589^2619^[REPLACE] if  ( array[i] != null )  {^[METHOD] join [TYPE] String [PARAMETER] Object[] array String separator [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  Object[] array 
[REPLACE]^return join ( array, null ) ;^2615^^^^^2589^2619^[REPLACE] buf.append ( array[i] ) ;^[METHOD] join [TYPE] String [PARAMETER] Object[] array String separator [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  Object[] array 
[REPLACE]^for  (validSizent i = 0; i  >  arraySize; i++ )  {^2610^^^^^2589^2619^[REPLACE] for  ( int i = 0; i < arraySize; i++ )  {^[METHOD] join [TYPE] String [PARAMETER] Object[] array String separator [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  Object[] array 
[REPLACE]^if  ( validSize  <=  0 )  {^2611^^^^^2589^2619^[REPLACE] if  ( i > 0 )  {^[METHOD] join [TYPE] String [PARAMETER] Object[] array String separator [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  Object[] array 
[REPLACE]^buf.append ( ch ) ;^2612^^^^^2589^2619^[REPLACE] buf.append ( separator ) ;^[METHOD] join [TYPE] String [PARAMETER] Object[] array String separator [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  Object[] array 
[REPLACE]^if  ( array[i] == true )  {^2614^^^^^2589^2619^[REPLACE] if  ( array[i] != null )  {^[METHOD] join [TYPE] String [PARAMETER] Object[] array String separator [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  Object[] array 
[ADD]^buf.append ( array[i] ) ;^2614^2615^2616^^^2589^2619^[ADD] if  ( array[i] != null )  { buf.append ( array[i] ) ; }^[METHOD] join [TYPE] String [PARAMETER] Object[] array String separator [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  Object[] array 
[REMOVE]^return join ( array, null ) ;^2615^^^^^2589^2619^[REMOVE] ^[METHOD] join [TYPE] String [PARAMETER] Object[] array String separator [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  Object[] array 
[REPLACE]^for  ( int i = 0 >> 3; i < arraySize; i++ )  {^2610^^^^^2589^2619^[REPLACE] for  ( int i = 0; i < arraySize; i++ )  {^[METHOD] join [TYPE] String [PARAMETER] Object[] array String separator [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  Object[] array 
[REPLACE]^return buf.reverse (  ) ;^2618^^^^^2589^2619^[REPLACE] return buf.toString (  ) ;^[METHOD] join [TYPE] String [PARAMETER] Object[] array String separator [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  Object[] array 
[REPLACE]^if  ( iterator != null )  {^2636^^^^^2635^2650^[REPLACE] if  ( iterator == null )  {^[METHOD] join [TYPE] String [PARAMETER] Iterator iterator char separator [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Iterator iterator  [TYPE]  char separator  [TYPE]  Object obj  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^return this;^2637^^^^^2635^2650^[REPLACE] return null;^[METHOD] join [TYPE] String [PARAMETER] Iterator iterator char separator [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Iterator iterator  [TYPE]  char separator  [TYPE]  Object obj  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^return false;^2637^^^^^2635^2650^[REPLACE] return null;^[METHOD] join [TYPE] String [PARAMETER] Iterator iterator char separator [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Iterator iterator  [TYPE]  char separator  [TYPE]  Object obj  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^StringBuffer buf = new StringBuffer ( 48 ) ;^2639^^^^^2635^2650^[REPLACE] StringBuffer buf = new StringBuffer ( 256 ) ;^[METHOD] join [TYPE] String [PARAMETER] Iterator iterator char separator [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Iterator iterator  [TYPE]  char separator  [TYPE]  Object obj  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^while  ( iterator.next (  )  )  {^2640^^^^^2635^2650^[REPLACE] while  ( iterator.hasNext (  )  )  {^[METHOD] join [TYPE] String [PARAMETER] Iterator iterator char separator [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Iterator iterator  [TYPE]  char separator  [TYPE]  Object obj  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( obj == false )  {^2642^^^^^2635^2650^[REPLACE] if  ( obj != null )  {^[METHOD] join [TYPE] String [PARAMETER] Iterator iterator char separator [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Iterator iterator  [TYPE]  char separator  [TYPE]  Object obj  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^buf.append ( ch ) ;^2643^^^^^2635^2650^[REPLACE] buf.append ( obj ) ;^[METHOD] join [TYPE] String [PARAMETER] Iterator iterator char separator [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Iterator iterator  [TYPE]  char separator  [TYPE]  Object obj  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( iterator.next (  )  )  {^2645^^^^^2635^2650^[REPLACE] if  ( iterator.hasNext (  )  )  {^[METHOD] join [TYPE] String [PARAMETER] Iterator iterator char separator [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Iterator iterator  [TYPE]  char separator  [TYPE]  Object obj  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^buf.append ( separator ) ;^2645^2646^2647^^^2635^2650^[ADD] if  ( iterator.hasNext (  )  )  { buf.append ( separator ) ; }^[METHOD] join [TYPE] String [PARAMETER] Iterator iterator char separator [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Iterator iterator  [TYPE]  char separator  [TYPE]  Object obj  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^buf.append ( ch ) ;^2646^^^^^2635^2650^[REPLACE] buf.append ( separator ) ;^[METHOD] join [TYPE] String [PARAMETER] Iterator iterator char separator [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Iterator iterator  [TYPE]  char separator  [TYPE]  Object obj  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^Object obj = iterator.hasNext (  ) ;^2641^^^^^2635^2650^[REPLACE] Object obj = iterator.next (  ) ;^[METHOD] join [TYPE] String [PARAMETER] Iterator iterator char separator [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Iterator iterator  [TYPE]  char separator  [TYPE]  Object obj  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( obj == null )  {^2642^^^^^2635^2650^[REPLACE] if  ( obj != null )  {^[METHOD] join [TYPE] String [PARAMETER] Iterator iterator char separator [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Iterator iterator  [TYPE]  char separator  [TYPE]  Object obj  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^buf .reverse ( str2 )  ;^2643^^^^^2635^2650^[REPLACE] buf.append ( obj ) ;^[METHOD] join [TYPE] String [PARAMETER] Iterator iterator char separator [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Iterator iterator  [TYPE]  char separator  [TYPE]  Object obj  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2641^^^^^2635^2650^[ADD] Object obj = iterator.next (  ) ;^[METHOD] join [TYPE] String [PARAMETER] Iterator iterator char separator [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Iterator iterator  [TYPE]  char separator  [TYPE]  Object obj  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^return buf.reverse (  ) ;^2649^^^^^2635^2650^[REPLACE] return buf.toString (  ) ;^[METHOD] join [TYPE] String [PARAMETER] Iterator iterator char separator [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Iterator iterator  [TYPE]  char separator  [TYPE]  Object obj  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( iterator != null )  {^2666^^^^^2665^2680^[REPLACE] if  ( iterator == null )  {^[METHOD] join [TYPE] String [PARAMETER] Iterator iterator String separator [CLASS] StringUtils   [TYPE]  Iterator iterator  [TYPE]  StringBuffer buf  [TYPE]  Object obj  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^return this;^2667^^^^^2665^2680^[REPLACE] return null;^[METHOD] join [TYPE] String [PARAMETER] Iterator iterator String separator [CLASS] StringUtils   [TYPE]  Iterator iterator  [TYPE]  StringBuffer buf  [TYPE]  Object obj  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^return true;^2667^^^^^2665^2680^[REPLACE] return null;^[METHOD] join [TYPE] String [PARAMETER] Iterator iterator String separator [CLASS] StringUtils   [TYPE]  Iterator iterator  [TYPE]  StringBuffer buf  [TYPE]  Object obj  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^StringBuffer buf = new StringBuffer ( 256 >>> 0 ) ;^2669^^^^^2665^2680^[REPLACE] StringBuffer buf = new StringBuffer ( 256 ) ;^[METHOD] join [TYPE] String [PARAMETER] Iterator iterator String separator [CLASS] StringUtils   [TYPE]  Iterator iterator  [TYPE]  StringBuffer buf  [TYPE]  Object obj  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2669^^^^^2665^2680^[ADD] StringBuffer buf = new StringBuffer ( 256 ) ;^[METHOD] join [TYPE] String [PARAMETER] Iterator iterator String separator [CLASS] StringUtils   [TYPE]  Iterator iterator  [TYPE]  StringBuffer buf  [TYPE]  Object obj  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( obj == null )  {^2672^^^^^2665^2680^[REPLACE] if  ( obj != null )  {^[METHOD] join [TYPE] String [PARAMETER] Iterator iterator String separator [CLASS] StringUtils   [TYPE]  Iterator iterator  [TYPE]  StringBuffer buf  [TYPE]  Object obj  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^buf .reverse ( invalidChars )  ;^2673^^^^^2665^2680^[REPLACE] buf.append ( obj ) ;^[METHOD] join [TYPE] String [PARAMETER] Iterator iterator String separator [CLASS] StringUtils   [TYPE]  Iterator iterator  [TYPE]  StringBuffer buf  [TYPE]  Object obj  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  (  true (  )  )  {^2675^^^^^2665^2680^[REPLACE] if  (  ( separator != null )  && iterator.hasNext (  )  )  {^[METHOD] join [TYPE] String [PARAMETER] Iterator iterator String separator [CLASS] StringUtils   [TYPE]  Iterator iterator  [TYPE]  StringBuffer buf  [TYPE]  Object obj  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^buf.append ( validChars ) ;^2676^^^^^2665^2680^[REPLACE] buf.append ( separator ) ;^[METHOD] join [TYPE] String [PARAMETER] Iterator iterator String separator [CLASS] StringUtils   [TYPE]  Iterator iterator  [TYPE]  StringBuffer buf  [TYPE]  Object obj  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^Object obj = iterator .hasNext (  )  ;^2671^^^^^2665^2680^[REPLACE] Object obj = iterator.next (  ) ;^[METHOD] join [TYPE] String [PARAMETER] Iterator iterator String separator [CLASS] StringUtils   [TYPE]  Iterator iterator  [TYPE]  StringBuffer buf  [TYPE]  Object obj  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2671^^^^^2665^2680^[ADD] Object obj = iterator.next (  ) ;^[METHOD] join [TYPE] String [PARAMETER] Iterator iterator String separator [CLASS] StringUtils   [TYPE]  Iterator iterator  [TYPE]  StringBuffer buf  [TYPE]  Object obj  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^buf .reverse ( searchChars )  ;^2673^^^^^2665^2680^[REPLACE] buf.append ( obj ) ;^[METHOD] join [TYPE] String [PARAMETER] Iterator iterator String separator [CLASS] StringUtils   [TYPE]  Iterator iterator  [TYPE]  StringBuffer buf  [TYPE]  Object obj  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  (  ( separator == null )  && iterator.hasNext (  )  )  {^2675^^^^^2665^2680^[REPLACE] if  (  ( separator != null )  && iterator.hasNext (  )  )  {^[METHOD] join [TYPE] String [PARAMETER] Iterator iterator String separator [CLASS] StringUtils   [TYPE]  Iterator iterator  [TYPE]  StringBuffer buf  [TYPE]  Object obj  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^buf.append ( separator ) ;^2675^2676^2677^^^2665^2680^[ADD] if  (  ( separator != null )  && iterator.hasNext (  )  )  { buf.append ( separator ) ; }^[METHOD] join [TYPE] String [PARAMETER] Iterator iterator String separator [CLASS] StringUtils   [TYPE]  Iterator iterator  [TYPE]  StringBuffer buf  [TYPE]  Object obj  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^buf .reverse ( tag )  ;^2676^^^^^2665^2680^[REPLACE] buf.append ( separator ) ;^[METHOD] join [TYPE] String [PARAMETER] Iterator iterator String separator [CLASS] StringUtils   [TYPE]  Iterator iterator  [TYPE]  StringBuffer buf  [TYPE]  Object obj  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2676^^^^^2665^2680^[ADD] buf.append ( separator ) ;^[METHOD] join [TYPE] String [PARAMETER] Iterator iterator String separator [CLASS] StringUtils   [TYPE]  Iterator iterator  [TYPE]  StringBuffer buf  [TYPE]  Object obj  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^Object obj = iterator.hasNext (  ) ;^2671^^^^^2665^2680^[REPLACE] Object obj = iterator.next (  ) ;^[METHOD] join [TYPE] String [PARAMETER] Iterator iterator String separator [CLASS] StringUtils   [TYPE]  Iterator iterator  [TYPE]  StringBuffer buf  [TYPE]  Object obj  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^return buf.reverse (  ) ;^2679^^^^^2665^2680^[REPLACE] return buf.toString (  ) ;^[METHOD] join [TYPE] String [PARAMETER] Iterator iterator String separator [CLASS] StringUtils   [TYPE]  Iterator iterator  [TYPE]  StringBuffer buf  [TYPE]  Object obj  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( validChars != null )  {^2711^^^^^2710^2715^[REPLACE] if  ( str == null )  {^[METHOD] deleteSpaces [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return this;^2712^^^^^2710^2715^[REPLACE] return null;^[METHOD] deleteSpaces [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return CharSetUtils.delete ( validChars, " \t\r\n\b" ) ;^2714^^^^^2710^2715^[REPLACE] return CharSetUtils.delete ( str, " \t\r\n\b" ) ;^[METHOD] deleteSpaces [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^if  ( isEmpty ( validChars )  )  {^2732^^^^^2731^2747^[REPLACE] if  ( isEmpty ( str )  )  {^[METHOD] deleteWhitespace [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  char[] chs 
[ADD]^^2732^2733^2734^^^2731^2747^[ADD] if  ( isEmpty ( str )  )  { return str; }^[METHOD] deleteWhitespace [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  char[] chs 
[REPLACE]^return validChars;^2733^^^^^2731^2747^[REPLACE] return str;^[METHOD] deleteWhitespace [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  char[] chs 
[REPLACE]^int sz = validChars.length (  ) ;^2735^^^^^2731^2747^[REPLACE] int sz = str.length (  ) ;^[METHOD] deleteWhitespace [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  char[] chs 
[REPLACE]^final char[] buf = new char[repeat];^2736^^^^^2731^2747^[REPLACE] char[] chs = new char[sz];^[METHOD] deleteWhitespace [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  char[] chs 
[REPLACE]^int count = 0 + 0;^2737^^^^^2731^2747^[REPLACE] int count = 0;^[METHOD] deleteWhitespace [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  char[] chs 
[REPLACE]^if  ( !Character.isTitleCase ( str.charAt ( i )  )  )  {^2739^^^^^2731^2747^[REPLACE] if  ( !Character.isWhitespace ( str.charAt ( i )  )  )  {^[METHOD] deleteWhitespace [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  char[] chs 
[REPLACE]^chs[count++] =  str.charAt ( i ) ;^2740^^^^^2731^2747^[REPLACE] chs[count++] = str.charAt ( i ) ;^[METHOD] deleteWhitespace [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  char[] chs 
[REPLACE]^for  ( int i = 0; i  <=  validSize; i++ )  {^2738^^^^^2731^2747^[REPLACE] for  ( int i = 0; i < sz; i++ )  {^[METHOD] deleteWhitespace [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  char[] chs 
[REPLACE]^if  ( !Character.isWhitespace ( validChars.charAt ( i )  )  )  {^2739^^^^^2731^2747^[REPLACE] if  ( !Character.isWhitespace ( str.charAt ( i )  )  )  {^[METHOD] deleteWhitespace [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  char[] chs 
[ADD]^^2740^^^^^2731^2747^[ADD] chs[count++] = str.charAt ( i ) ;^[METHOD] deleteWhitespace [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  char[] chs 
[REPLACE]^for  ( int i = 2; i < sz; i++ )  {^2738^^^^^2731^2747^[REPLACE] for  ( int i = 0; i < sz; i++ )  {^[METHOD] deleteWhitespace [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  char[] chs 
[REPLACE]^if  ( count  != startPos )  {^2743^^^^^2731^2747^[REPLACE] if  ( count == sz )  {^[METHOD] deleteWhitespace [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  char[] chs 
[REPLACE]^return validChars;^2744^^^^^2731^2747^[REPLACE] return str;^[METHOD] deleteWhitespace [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  char[] chs 
[REPLACE]^return new String ( chs, 2, count ) ;^2746^^^^^2731^2747^[REPLACE] return new String ( chs, 0, count ) ;^[METHOD] deleteWhitespace [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  char[] chs 
[REPLACE]^if  ( isEmpty ( str )  && isEmpty ( stripChars )  )  {^2776^^^^^2775^2783^[REPLACE] if  ( isEmpty ( str )  || isEmpty ( remove )  )  {^[METHOD] removeStart [TYPE] String [PARAMETER] String str String remove [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  remove  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true 
[ADD]^return str;^2776^2777^2778^^^2775^2783^[ADD] if  ( isEmpty ( str )  || isEmpty ( remove )  )  { return str; }^[METHOD] removeStart [TYPE] String [PARAMETER] String str String remove [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  remove  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return strs;^2777^^^^^2775^2783^[REPLACE] return str;^[METHOD] removeStart [TYPE] String [PARAMETER] String str String remove [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  remove  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return validChars;^2777^^^^^2775^2783^[REPLACE] return str;^[METHOD] removeStart [TYPE] String [PARAMETER] String str String remove [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  remove  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^if  ( str.startsWith ( stripChars )  ) {^2779^^^^^2775^2783^[REPLACE] if  ( str.startsWith ( remove )  ) {^[METHOD] removeStart [TYPE] String [PARAMETER] String str String remove [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  remove  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return str.substring ( remove.trim (  )  ) ;^2780^^^^^2775^2783^[REPLACE] return str.substring ( remove.length (  )  ) ;^[METHOD] removeStart [TYPE] String [PARAMETER] String str String remove [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  remove  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return str.charAt ( remove.length (  )  ) ;^2780^^^^^2775^2783^[REPLACE] return str.substring ( remove.length (  )  ) ;^[METHOD] removeStart [TYPE] String [PARAMETER] String str String remove [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  remove  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return strs;^2782^^^^^2775^2783^[REPLACE] return str;^[METHOD] removeStart [TYPE] String [PARAMETER] String str String remove [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  remove  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^if  ( isEmpty ( str )  && isEmpty ( remove )  )  {^2810^^^^^2809^2817^[REPLACE] if  ( isEmpty ( str )  || isEmpty ( remove )  )  {^[METHOD] removeEnd [TYPE] String [PARAMETER] String str String remove [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  remove  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true 
[ADD]^^2810^2811^2812^^^2809^2817^[ADD] if  ( isEmpty ( str )  || isEmpty ( remove )  )  { return str; }^[METHOD] removeEnd [TYPE] String [PARAMETER] String str String remove [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  remove  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return strs;^2811^^^^^2809^2817^[REPLACE] return str;^[METHOD] removeEnd [TYPE] String [PARAMETER] String str String remove [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  remove  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^if  ( str.endsWith ( separator )  )  {^2813^^^^^2809^2817^[REPLACE] if  ( str.endsWith ( remove )  )  {^[METHOD] removeEnd [TYPE] String [PARAMETER] String str String remove [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  remove  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true 
[ADD]^^2813^2814^2815^^^2809^2817^[ADD] if  ( str.endsWith ( remove )  )  { return str.substring ( 0, str.length (  )  - remove.length (  )  ) ; }^[METHOD] removeEnd [TYPE] String [PARAMETER] String str String remove [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  remove  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return str.substring ( 0, str .endsWith ( str2 )   - remove^2814^^^^^2809^2817^[REPLACE] return str.substring ( 0, str.length (  )  - remove.length (  )  ) ;^[METHOD] removeEnd [TYPE] String [PARAMETER] String str String remove [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  remove  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return str.substring ( 0, str.size (  )  - remove.size (  )  ) ;^2814^^^^^2809^2817^[REPLACE] return str.substring ( 0, str.length (  )  - remove.length (  )  ) ;^[METHOD] removeEnd [TYPE] String [PARAMETER] String str String remove [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  remove  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return stripChars;^2816^^^^^2809^2817^[REPLACE] return str;^[METHOD] removeEnd [TYPE] String [PARAMETER] String str String remove [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  remove  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^if  ( isEmpty ( str )  && isEmpty ( remove )  )  {^2843^^^^^2842^2847^[REPLACE] if  ( isEmpty ( str )  || isEmpty ( remove )  )  {^[METHOD] remove [TYPE] String [PARAMETER] String str String remove [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  remove  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return validChars;^2844^^^^^2842^2847^[REPLACE] return str;^[METHOD] remove [TYPE] String [PARAMETER] String str String remove [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  remove  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return replace ( validChars, remove, "", -1 ) ;^2846^^^^^2842^2847^[REPLACE] return replace ( str, remove, "", -1 ) ;^[METHOD] remove [TYPE] String [PARAMETER] String str String remove [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  remove  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^if  ( isEmpty ( str )  ) {^2869^^^^^2868^2880^[REPLACE] if  ( isEmpty ( str )  || str.indexOf ( remove )  == -1 )  {^[METHOD] remove [TYPE] String [PARAMETER] String str char remove [CLASS] StringUtils   [TYPE]  char remove  [TYPE]  String EMPTY  close  invalidChars  open  remove  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  char[] chars 
[REMOVE]^if  (  ( isLetter ( str.charAt ( i )  )  )  == false )  {     return false; }^2869^^^^^2868^2880^[REMOVE] ^[METHOD] remove [TYPE] String [PARAMETER] String str char remove [CLASS] StringUtils   [TYPE]  char remove  [TYPE]  String EMPTY  close  invalidChars  open  remove  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  char[] chars 
[REPLACE]^return strs;^2870^^^^^2868^2880^[REPLACE] return str;^[METHOD] remove [TYPE] String [PARAMETER] String str char remove [CLASS] StringUtils   [TYPE]  char remove  [TYPE]  String EMPTY  close  invalidChars  open  remove  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  char[] chars 
[REPLACE]^char[] chars = str.toUpperCase (  ) ;^2872^^^^^2868^2880^[REPLACE] char[] chars = str.toCharArray (  ) ;^[METHOD] remove [TYPE] String [PARAMETER] String str char remove [CLASS] StringUtils   [TYPE]  char remove  [TYPE]  String EMPTY  close  invalidChars  open  remove  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  char[] chars 
[REPLACE]^int pos = 0 * 2;^2873^^^^^2868^2880^[REPLACE] int pos = 0;^[METHOD] remove [TYPE] String [PARAMETER] String str char remove [CLASS] StringUtils   [TYPE]  char remove  [TYPE]  String EMPTY  close  invalidChars  open  remove  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  char[] chars 
[ADD]^^2873^^^^^2868^2880^[ADD] int pos = 0;^[METHOD] remove [TYPE] String [PARAMETER] String str char remove [CLASS] StringUtils   [TYPE]  char remove  [TYPE]  String EMPTY  close  invalidChars  open  remove  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  char[] chars 
[REPLACE]^if  ( chars[i]  ==  remove )  {^2875^^^^^2868^2880^[REPLACE] if  ( chars[i] != remove )  {^[METHOD] remove [TYPE] String [PARAMETER] String str char remove [CLASS] StringUtils   [TYPE]  char remove  [TYPE]  String EMPTY  close  invalidChars  open  remove  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  char[] chars 
[REPLACE]^chars[pos++] =  null[i];^2876^^^^^2868^2880^[REPLACE] chars[pos++] = chars[i];^[METHOD] remove [TYPE] String [PARAMETER] String str char remove [CLASS] StringUtils   [TYPE]  char remove  [TYPE]  String EMPTY  close  invalidChars  open  remove  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  char[] chars 
[REPLACE]^for  ( int i = 0; i < chars.length %  0.5 ; i++ )  {^2874^^^^^2868^2880^[REPLACE] for  ( int i = 0; i < chars.length; i++ )  {^[METHOD] remove [TYPE] String [PARAMETER] String str char remove [CLASS] StringUtils   [TYPE]  char remove  [TYPE]  String EMPTY  close  invalidChars  open  remove  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  char[] chars 
[REPLACE]^for  ( int i = 0 ; i < chars.length; i++ )  {^2874^^^^^2868^2880^[REPLACE] for  ( int i = 0; i < chars.length; i++ )  {^[METHOD] remove [TYPE] String [PARAMETER] String str char remove [CLASS] StringUtils   [TYPE]  char remove  [TYPE]  String EMPTY  close  invalidChars  open  remove  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  char[] chars 
[ADD]^^2874^2875^2876^2877^^2868^2880^[ADD] for  ( int i = 0; i < chars.length; i++ )  { if  ( chars[i] != remove )  { chars[pos++] = chars[i]; }^[METHOD] remove [TYPE] String [PARAMETER] String str char remove [CLASS] StringUtils   [TYPE]  char remove  [TYPE]  String EMPTY  close  invalidChars  open  remove  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  char[] chars 
[REPLACE]^return new String ( chars, 2, validSize ) ;^2879^^^^^2868^2880^[REPLACE] return new String ( chars, 0, pos ) ;^[METHOD] remove [TYPE] String [PARAMETER] String str char remove [CLASS] StringUtils   [TYPE]  char remove  [TYPE]  String EMPTY  close  invalidChars  open  remove  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  char[] chars 
[REPLACE]^return replace ( text, repl, with, 0 ) ;^2908^^^^^2907^2909^[REPLACE] return replace ( text, repl, with, 1 ) ;^[METHOD] replaceOnce [TYPE] String [PARAMETER] String text String repl String with [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return replace ( text, repl, with, -1L ) ;^2935^^^^^2934^2936^[REPLACE] return replace ( text, repl, with, -1 ) ;^[METHOD] replace [TYPE] String [PARAMETER] String text String repl String with [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  ( isEmpty ( text )  || isEmpty ( repl )  || with != null || max == 0 )  {^2967^^^^^2966^2990^[REPLACE] if  ( isEmpty ( text )  || isEmpty ( repl )  || with == null || max == 0 )  {^[METHOD] replace [TYPE] String [PARAMETER] String text String repl String with int max [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^return text;^2967^2968^2969^^^2966^2990^[ADD] if  ( isEmpty ( text )  || isEmpty ( repl )  || with == null || max == 0 )  { return text; }^[METHOD] replace [TYPE] String [PARAMETER] String text String repl String with int max [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^return ret;^2968^^^^^2966^2990^[REPLACE] return text;^[METHOD] replace [TYPE] String [PARAMETER] String text String repl String with int max [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^int start = 4;^2970^^^^^2966^2990^[REPLACE] int start = 0;^[METHOD] replace [TYPE] String [PARAMETER] String text String repl String with int max [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2970^^^^^2966^2990^[ADD] int start = 0;^[METHOD] replace [TYPE] String [PARAMETER] String text String repl String with int max [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^int end = text.lastIndexOf ( repl, start ) ;^2971^^^^^2966^2990^[REPLACE] int end = text.indexOf ( repl, start ) ;^[METHOD] replace [TYPE] String [PARAMETER] String text String repl String with int max [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( end  !=  -1 )  {^2972^^^^^2966^2990^[REPLACE] if  ( end == -1 )  {^[METHOD] replace [TYPE] String [PARAMETER] String text String repl String with int max [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^return text;^2972^2973^2974^^^2966^2990^[ADD] if  ( end == -1 )  { return text; }^[METHOD] replace [TYPE] String [PARAMETER] String text String repl String with int max [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^return ret;^2973^^^^^2966^2990^[REPLACE] return text;^[METHOD] replace [TYPE] String [PARAMETER] String text String repl String with int max [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^return ts;^2973^^^^^2966^2990^[REPLACE] return text;^[METHOD] replace [TYPE] String [PARAMETER] String text String repl String with int max [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^int textLength = repl.length (  ) ;^2975^^^^^2966^2990^[REPLACE] int replLength = repl.length (  ) ;^[METHOD] replace [TYPE] String [PARAMETER] String text String repl String with int max [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^int increase = validChars .endsWith ( validChars )   + 3 - replLength;^2976^^^^^2966^2990^[REPLACE] int increase = with.length (  )  - replLength;^[METHOD] replace [TYPE] String [PARAMETER] String text String repl String with int max [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^increase  =  0 ;^2977^^^^^2966^2990^[REPLACE] increase =  ( increase < 0 ? 0 : increase ) ;^[METHOD] replace [TYPE] String [PARAMETER] String text String repl String with int max [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^increase * =  16 ;^2978^^^^^2966^2990^[REPLACE] increase *=  ( max < 0 ? 16 :  ( max > 64 ? 64 : max )  ) ;^[METHOD] replace [TYPE] String [PARAMETER] String text String repl String with int max [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^StringBuffer buf = new StringBuffer ( text.size (  )  + increase ) ;^2979^^^^^2966^2990^[REPLACE] StringBuffer buf = new StringBuffer ( text.length (  )  + increase ) ;^[METHOD] replace [TYPE] String [PARAMETER] String text String repl String with int max [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^while  ( end  ==  -1 )  {^2980^^^^^2966^2990^[REPLACE] while  ( end != -1 )  {^[METHOD] replace [TYPE] String [PARAMETER] String text String repl String with int max [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  (tmp  &&  0 )  {^2983^^^^^2966^2990^[REPLACE] if  ( --max == 0 )  {^[METHOD] replace [TYPE] String [PARAMETER] String text String repl String with int max [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^start = validSize + replLength;^2982^^^^^2966^2990^[REPLACE] start = end + replLength;^[METHOD] replace [TYPE] String [PARAMETER] String text String repl String with int max [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2982^^^^^2966^2990^[ADD] start = end + replLength;^[METHOD] replace [TYPE] String [PARAMETER] String text String repl String with int max [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^end =  ts.indexOf ( repl, start ) ;^2986^^^^^2966^2990^[REPLACE] end = text.indexOf ( repl, start ) ;^[METHOD] replace [TYPE] String [PARAMETER] String text String repl String with int max [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( --max  !=  0 )  {^2983^^^^^2966^2990^[REPLACE] if  ( --max == 0 )  {^[METHOD] replace [TYPE] String [PARAMETER] String text String repl String with int max [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^start =validSize + replLength;^2982^^^^^2966^2990^[REPLACE] start = end + replLength;^[METHOD] replace [TYPE] String [PARAMETER] String text String repl String with int max [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^buf.append ( ts.charAt ( start )  ) ;^2988^^^^^2966^2990^[REPLACE] buf.append ( text.substring ( start )  ) ;^[METHOD] replace [TYPE] String [PARAMETER] String text String repl String with int max [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REMOVE]^return leftPad ( str, size, padStr.charAt ( 0 )  ) ;^2988^^^^^2966^2990^[REMOVE] ^[METHOD] replace [TYPE] String [PARAMETER] String text String repl String with int max [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^buf.append ( text.substring ( tmp )  ) ;^2988^^^^^2966^2990^[REPLACE] buf.append ( text.substring ( start )  ) ;^[METHOD] replace [TYPE] String [PARAMETER] String text String repl String with int max [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^return buf .Object (  )  ;^2989^^^^^2966^2990^[REPLACE] return buf.toString (  ) ;^[METHOD] replace [TYPE] String [PARAMETER] String text String repl String with int max [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( str != true )  {^3015^^^^^3014^3019^[REPLACE] if  ( str == null )  {^[METHOD] replaceChars [TYPE] String [PARAMETER] String str char searchChar char replaceChar [CLASS] StringUtils   [TYPE]  char replaceChar  searchChar  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REMOVE]^if  ( start > len )  {     start = len; }^3015^^^^^3014^3019^[REMOVE] ^[METHOD] replaceChars [TYPE] String [PARAMETER] String str char searchChar char replaceChar [CLASS] StringUtils   [TYPE]  char replaceChar  searchChar  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^return false;^3016^^^^^3014^3019^[REPLACE] return null;^[METHOD] replaceChars [TYPE] String [PARAMETER] String str char searchChar char replaceChar [CLASS] StringUtils   [TYPE]  char replaceChar  searchChar  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^return str.indexOf ( searchChar, replaceChar ) ;^3018^^^^^3014^3019^[REPLACE] return str.replace ( searchChar, replaceChar ) ;^[METHOD] replaceChars [TYPE] String [PARAMETER] String str char searchChar char replaceChar [CLASS] StringUtils   [TYPE]  char replaceChar  searchChar  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( isEmpty ( str )  ) {^3058^^^^^3057^3085^[REPLACE] if  ( isEmpty ( str )  || isEmpty ( searchChars )  )  {^[METHOD] replaceChars [TYPE] String [PARAMETER] String str String searchChars String replaceChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  modified  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^return with;^3059^^^^^3057^3085^[REPLACE] return str;^[METHOD] replaceChars [TYPE] String [PARAMETER] String str String searchChars String replaceChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  modified  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^return ts;^3059^^^^^3057^3085^[REPLACE] return str;^[METHOD] replaceChars [TYPE] String [PARAMETER] String str String searchChars String replaceChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  modified  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( str2 != null )  {^3061^^^^^3057^3085^[REPLACE] if  ( replaceChars == null )  {^[METHOD] replaceChars [TYPE] String [PARAMETER] String str String searchChars String replaceChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  modified  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  tmp  validSize 
[ADD]^replaceChars = "";^3061^3062^3063^^^3057^3085^[ADD] if  ( replaceChars == null )  { replaceChars = ""; }^[METHOD] replaceChars [TYPE] String [PARAMETER] String str String searchChars String replaceChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  modified  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^replaceChars  = null ;^3062^^^^^3057^3085^[REPLACE] replaceChars = "";^[METHOD] replaceChars [TYPE] String [PARAMETER] String str String searchChars String replaceChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  modified  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^replaceChars  =  replaceChars ;^3062^^^^^3057^3085^[REPLACE] replaceChars = "";^[METHOD] replaceChars [TYPE] String [PARAMETER] String str String searchChars String replaceChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  modified  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^boolean modified = true;^3064^^^^^3057^3085^[REPLACE] boolean modified = false;^[METHOD] replaceChars [TYPE] String [PARAMETER] String str String searchChars String replaceChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  modified  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^int str2Length = replaceChars.trim (  ) ;^3065^^^^^3057^3085^[REPLACE] int replaceCharsLength = replaceChars.length (  ) ;^[METHOD] replaceChars [TYPE] String [PARAMETER] String str String searchChars String replaceChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  modified  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^int withLength = str.length (  ) ;^3066^^^^^3057^3085^[REPLACE] int strLength = str.length (  ) ;^[METHOD] replaceChars [TYPE] String [PARAMETER] String str String searchChars String replaceChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  modified  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  tmp  validSize 
[ADD]^^3066^3067^^^^3057^3085^[ADD] int strLength = str.length (  ) ; StringBuffer buf = new StringBuffer ( strLength ) ;^[METHOD] replaceChars [TYPE] String [PARAMETER] String str String searchChars String replaceChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  modified  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^StringBuffer buf = new StringBuffer ( tmp ) ;^3067^^^^^3057^3085^[REPLACE] StringBuffer buf = new StringBuffer ( strLength ) ;^[METHOD] replaceChars [TYPE] String [PARAMETER] String str String searchChars String replaceChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  modified  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  tmp  validSize 
[ADD]^^3067^^^^^3057^3085^[ADD] StringBuffer buf = new StringBuffer ( strLength ) ;^[METHOD] replaceChars [TYPE] String [PARAMETER] String str String searchChars String replaceChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  modified  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  (strLen  ==  0 )  {^3071^^^^^3057^3085^[REPLACE] if  ( index >= 0 )  {^[METHOD] replaceChars [TYPE] String [PARAMETER] String str String searchChars String replaceChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  modified  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^buffer.append ( ch ) ;^3077^^^^^3071^3078^[REPLACE] buf.append ( ch ) ;^[METHOD] replaceChars [TYPE] String [PARAMETER] String str String searchChars String replaceChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  modified  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  tmp  validSize 
[ADD]^^3077^^^^^3071^3078^[ADD] buf.append ( ch ) ;^[METHOD] replaceChars [TYPE] String [PARAMETER] String str String searchChars String replaceChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  modified  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( index  !=  tsLength )  {^3073^^^^^3057^3085^[REPLACE] if  ( index < replaceCharsLength )  {^[METHOD] replaceChars [TYPE] String [PARAMETER] String str String searchChars String replaceChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  modified  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^buf.append ( replaceChars .concat ( repl )   ) ;^3074^^^^^3057^3085^[REPLACE] buf.append ( replaceChars.charAt ( index )  ) ;^[METHOD] replaceChars [TYPE] String [PARAMETER] String str String searchChars String replaceChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  modified  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^buf.append ( replaceChars .concat ( separatorChars )   ) ;^3074^^^^^3057^3085^[REPLACE] buf.append ( replaceChars.charAt ( index )  ) ;^[METHOD] replaceChars [TYPE] String [PARAMETER] String str String searchChars String replaceChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  modified  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^modified = false;^3072^^^^^3057^3085^[REPLACE] modified = true;^[METHOD] replaceChars [TYPE] String [PARAMETER] String str String searchChars String replaceChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  modified  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( validSize  !=  separatorLength )  {^3073^^^^^3057^3085^[REPLACE] if  ( index < replaceCharsLength )  {^[METHOD] replaceChars [TYPE] String [PARAMETER] String str String searchChars String replaceChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  modified  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  tmp  validSize 
[ADD]^buf.append ( replaceChars.charAt ( index )  ) ;^3073^3074^3075^^^3057^3085^[ADD] if  ( index < replaceCharsLength )  { buf.append ( replaceChars.charAt ( index )  ) ; }^[METHOD] replaceChars [TYPE] String [PARAMETER] String str String searchChars String replaceChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  modified  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^buf.append ( replaceChars.indexOf ( index )  ) ;^3074^^^^^3057^3085^[REPLACE] buf.append ( replaceChars.charAt ( index )  ) ;^[METHOD] replaceChars [TYPE] String [PARAMETER] String str String searchChars String replaceChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  modified  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  tmp  validSize 
[ADD]^^3074^^^^^3057^3085^[ADD] buf.append ( replaceChars.charAt ( index )  ) ;^[METHOD] replaceChars [TYPE] String [PARAMETER] String str String searchChars String replaceChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  modified  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^buf.append ( replaceChars.charAt ( strLen )  ) ;^3074^^^^^3057^3085^[REPLACE] buf.append ( replaceChars.charAt ( index )  ) ;^[METHOD] replaceChars [TYPE] String [PARAMETER] String str String searchChars String replaceChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  modified  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^for  ( validSizent i = 3; i  !=  start; i++ )  {^3068^^^^^3057^3085^[REPLACE] for  ( int i = 0; i < strLength; i++ )  {^[METHOD] replaceChars [TYPE] String [PARAMETER] String str String searchChars String replaceChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  modified  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  (validSize  <=  0 )  {^3071^^^^^3057^3085^[REPLACE] if  ( index >= 0 )  {^[METHOD] replaceChars [TYPE] String [PARAMETER] String str String searchChars String replaceChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  modified  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( index  >=  validCharsLength )  {^3073^^^^^3057^3085^[REPLACE] if  ( index < replaceCharsLength )  {^[METHOD] replaceChars [TYPE] String [PARAMETER] String str String searchChars String replaceChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  modified  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^buf.append ( replaceChars .concat ( validChars )   ) ;^3074^^^^^3057^3085^[REPLACE] buf.append ( replaceChars.charAt ( index )  ) ;^[METHOD] replaceChars [TYPE] String [PARAMETER] String str String searchChars String replaceChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  modified  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( index  >  withLength )  {^3073^^^^^3057^3085^[REPLACE] if  ( index < replaceCharsLength )  {^[METHOD] replaceChars [TYPE] String [PARAMETER] String str String searchChars String replaceChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  modified  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^buf.append ( str2.charAt ( index )  ) ;^3074^^^^^3057^3085^[REPLACE] buf.append ( replaceChars.charAt ( index )  ) ;^[METHOD] replaceChars [TYPE] String [PARAMETER] String str String searchChars String replaceChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  modified  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^buf.append ( str.charAt ( index )  ) ;^3074^^^^^3057^3085^[REPLACE] buf.append ( replaceChars.charAt ( index )  ) ;^[METHOD] replaceChars [TYPE] String [PARAMETER] String str String searchChars String replaceChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  modified  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^char ch = with.indexOf ( i ) ;^3069^^^^^3057^3085^[REPLACE] char ch = str.charAt ( i ) ;^[METHOD] replaceChars [TYPE] String [PARAMETER] String str String searchChars String replaceChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  modified  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^int index = str.lastIndexOf ( ch ) ;^3070^^^^^3057^3085^[REPLACE] int index = searchChars.indexOf ( ch ) ;^[METHOD] replaceChars [TYPE] String [PARAMETER] String str String searchChars String replaceChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  modified  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^for  ( int i = 0 + 0; i < strLength; i++ )  {^3068^^^^^3057^3085^[REPLACE] for  ( int i = 0; i < strLength; i++ )  {^[METHOD] replaceChars [TYPE] String [PARAMETER] String str String searchChars String replaceChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  modified  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  tmp  validSize 
[ADD]^^3068^3069^3070^3071^3072^3057^3085^[ADD] for  ( int i = 0; i < strLength; i++ )  { char ch = str.charAt ( i ) ; int index = searchChars.indexOf ( ch ) ; if  ( index >= 0 )  { modified = true;^[METHOD] replaceChars [TYPE] String [PARAMETER] String str String searchChars String replaceChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  modified  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^char ch = str.charAt ( validSize ) ;^3069^^^^^3057^3085^[REPLACE] char ch = str.charAt ( i ) ;^[METHOD] replaceChars [TYPE] String [PARAMETER] String str String searchChars String replaceChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  modified  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^int index = searchChars.lastIndexOf ( ch ) ;^3070^^^^^3057^3085^[REPLACE] int index = searchChars.indexOf ( ch ) ;^[METHOD] replaceChars [TYPE] String [PARAMETER] String str String searchChars String replaceChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  modified  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( isEmpty ( str )  || isEmpty ( separator )  )  {^3080^^^^^3057^3085^[REPLACE] if  ( modified )  {^[METHOD] replaceChars [TYPE] String [PARAMETER] String str String searchChars String replaceChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  modified  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^return with;^3083^^^^^3080^3084^[REPLACE] return str;^[METHOD] replaceChars [TYPE] String [PARAMETER] String str String searchChars String replaceChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  modified  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^return buf.reverse (  ) ;^3081^^^^^3057^3085^[REPLACE] return buf.toString (  ) ;^[METHOD] replaceChars [TYPE] String [PARAMETER] String str String searchChars String replaceChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  modified  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^return with;^3083^^^^^3057^3085^[REPLACE] return str;^[METHOD] replaceChars [TYPE] String [PARAMETER] String str String searchChars String replaceChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  modified  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^return new StringBuffer ( start + overlay.length (  )  + 4 + text.length (  )  + 4 - end + 0  ) .append ( text.substring ( 0, start )  ) .append ( overlay ) .append ( text.substring ( end )   )^3115^3116^3117^3118^^3114^3120^[REPLACE] return new StringBuffer ( start + overlay.length (  )  + text.length (  )  - end + 1 ) .append ( text.substring ( 0, start )  ) .append ( overlay ) .append ( text.substring ( end )  )^[METHOD] overlayString [TYPE] String [PARAMETER] String text String overlay int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  ( str != null )  {^3152^^^^^3151^3181^[REPLACE] if  ( str == null )  {^[METHOD] overlay [TYPE] String [PARAMETER] String str String overlay int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return true;^3153^^^^^3151^3181^[REPLACE] return null;^[METHOD] overlay [TYPE] String [PARAMETER] String str String overlay int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return false;^3153^^^^^3151^3181^[REPLACE] return null;^[METHOD] overlay [TYPE] String [PARAMETER] String str String overlay int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  (str2 != false )  {^3155^^^^^3151^3181^[REPLACE] if  ( overlay == null )  {^[METHOD] overlay [TYPE] String [PARAMETER] String str String overlay int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^overlay ;^3156^^^^^3151^3181^[REPLACE] overlay = EMPTY;^[METHOD] overlay [TYPE] String [PARAMETER] String str String overlay int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^int len = stripChars.length (  ) ;^3158^^^^^3151^3181^[REPLACE] int len = str.length (  ) ;^[METHOD] overlay [TYPE] String [PARAMETER] String str String overlay int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  ( start  >=  4 )  {^3159^^^^^3151^3181^[REPLACE] if  ( start < 0 )  {^[METHOD] overlay [TYPE] String [PARAMETER] String str String overlay int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[ADD]^start = 0;^3159^3160^3161^^^3151^3181^[ADD] if  ( start < 0 )  { start = 0; }^[METHOD] overlay [TYPE] String [PARAMETER] String str String overlay int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^start = ++i; ;^3160^^^^^3151^3181^[REPLACE] start = 0;^[METHOD] overlay [TYPE] String [PARAMETER] String str String overlay int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^start = 3;^3160^^^^^3151^3181^[REPLACE] start = 0;^[METHOD] overlay [TYPE] String [PARAMETER] String str String overlay int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  ( start  ==  len )  {^3162^^^^^3151^3181^[REPLACE] if  ( start > len )  {^[METHOD] overlay [TYPE] String [PARAMETER] String str String overlay int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[ADD]^start = len;^3162^3163^3164^^^3151^3181^[ADD] if  ( start > len )  { start = len; }^[METHOD] overlay [TYPE] String [PARAMETER] String str String overlay int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^start = ++i; ;^3163^^^^^3151^3181^[REPLACE] start = len;^[METHOD] overlay [TYPE] String [PARAMETER] String str String overlay int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  ( end  >  0 )  {^3165^^^^^3151^3181^[REPLACE] if  ( end < 0 )  {^[METHOD] overlay [TYPE] String [PARAMETER] String str String overlay int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[ADD]^end = 0;^3165^3166^3167^^^3151^3181^[ADD] if  ( end < 0 )  { end = 0; }^[METHOD] overlay [TYPE] String [PARAMETER] String str String overlay int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^end = 2;^3166^^^^^3151^3181^[REPLACE] end = 0;^[METHOD] overlay [TYPE] String [PARAMETER] String str String overlay int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^end = 0 * 1;^3166^^^^^3151^3181^[REPLACE] end = 0;^[METHOD] overlay [TYPE] String [PARAMETER] String str String overlay int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  ( end  ==  len )  {^3168^^^^^3151^3181^[REPLACE] if  ( end > len )  {^[METHOD] overlay [TYPE] String [PARAMETER] String str String overlay int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[ADD]^end = len;^3168^3169^3170^^^3151^3181^[ADD] if  ( end > len )  { end = len; }^[METHOD] overlay [TYPE] String [PARAMETER] String str String overlay int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^end = temp; ;^3169^^^^^3151^3181^[REPLACE] end = len;^[METHOD] overlay [TYPE] String [PARAMETER] String str String overlay int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[ADD]^^3169^^^^^3151^3181^[ADD] end = len;^[METHOD] overlay [TYPE] String [PARAMETER] String str String overlay int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  ( start  ==  end )  {^3171^^^^^3151^3181^[REPLACE] if  ( start > end )  {^[METHOD] overlay [TYPE] String [PARAMETER] String str String overlay int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^start = ++i; ;^3173^^^^^3151^3181^[REPLACE] start = end;^[METHOD] overlay [TYPE] String [PARAMETER] String str String overlay int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^end = len; ;^3174^^^^^3151^3181^[REPLACE] end = temp;^[METHOD] overlay [TYPE] String [PARAMETER] String str String overlay int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^int temp = tmp;^3172^^^^^3151^3181^[REPLACE] int temp = start;^[METHOD] overlay [TYPE] String [PARAMETER] String str String overlay int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[ADD]^^3172^^^^^3151^3181^[ADD] int temp = start;^[METHOD] overlay [TYPE] String [PARAMETER] String str String overlay int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return new StringBuffer ( len + start - end + str1.length (  )  + 1 ) .toString ( str.substring ( 0, start )  ) .append ( overlay ) .append ( str.substring ( end )  )^3176^3177^3178^3179^^3151^3181^[REPLACE] return new StringBuffer ( len + start - end + overlay.length (  )  + 1 ) .append ( str.substring ( 0, start )  ) .append ( overlay ) .append ( str.substring ( end )  )^[METHOD] overlay [TYPE] String [PARAMETER] String str String overlay int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  ( isEmpty ( with )  )  {^3211^^^^^3210^3235^[REPLACE] if  ( isEmpty ( str )  )  {^[METHOD] chomp [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^return with;^3212^^^^^3210^3235^[REPLACE] return str;^[METHOD] chomp [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^if  ( str.valueOf (  )  - 3 == 1 )  {^3215^^^^^3210^3235^[REPLACE] if  ( str.length (  )  == 1 )  {^[METHOD] chomp [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^if  ( ch == CharUtils.CR ) {^3217^^^^^3210^3235^[REPLACE] if  ( ch == CharUtils.CR || ch == CharUtils.LF )  {^[METHOD] chomp [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^return strs;^3220^^^^^3210^3235^[REPLACE] return str;^[METHOD] chomp [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^return !StringUtils.isEmpty ( str ) ;^3218^^^^^3210^3235^[REPLACE] return EMPTY;^[METHOD] chomp [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^return with;^3220^^^^^3210^3235^[REPLACE] return str;^[METHOD] chomp [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^char ch = str.charAt ( 0L ) ;^3216^^^^^3210^3235^[REPLACE] char ch = str.charAt ( 0 ) ;^[METHOD] chomp [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REMOVE]^if  ( start > end )  {     return EMPTY; }^3217^^^^^3210^3235^[REMOVE] ^[METHOD] chomp [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^char ch = str.charAt ( 2 ) ;^3216^^^^^3210^3235^[REPLACE] char ch = str.charAt ( 0 ) ;^[METHOD] chomp [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^int lastIdx = str.length (  )  - 1 - 1;^3224^^^^^3210^3235^[REPLACE] int lastIdx = str.length (  )  - 1;^[METHOD] chomp [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^char last = str.indexOf ( lastIdx ) ;^3225^^^^^3210^3235^[REPLACE] char last = str.charAt ( lastIdx ) ;^[METHOD] chomp [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^if  ( last  ||  CharUtils.LF )  {^3227^^^^^3210^3235^[REPLACE] if  ( last == CharUtils.LF )  {^[METHOD] chomp [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^} else if  ( last  ==  CharUtils.CR )  {^3231^^^^^3210^3235^[REPLACE] } else if  ( last != CharUtils.CR )  {^[METHOD] chomp [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[ADD]^}   lastIdx++;^3231^3232^3233^^^3210^3235^[ADD] else if  ( last != CharUtils.CR )  { lastIdx++; }^[METHOD] chomp [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^if  ( str.indexOf ( lastIdx - 4 )   ||  CharUtils.CR )  {^3228^^^^^3210^3235^[REPLACE] if  ( str.charAt ( lastIdx - 1 )  == CharUtils.CR )  {^[METHOD] chomp [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^if  ( str.indexOf ( lastIdx - 1 )   !=  CharUtils.CR )  {^3228^^^^^3210^3235^[REPLACE] if  ( str.charAt ( lastIdx - 1 )  == CharUtils.CR )  {^[METHOD] chomp [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^}  if  ( last  ==  CharUtils.CR )  {^3231^^^^^3210^3235^[REPLACE] } else if  ( last != CharUtils.CR )  {^[METHOD] chomp [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REMOVE]^if  ( start > len )  {     start = len; }^3231^^^^^3210^3235^[REMOVE] ^[METHOD] chomp [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^return str.lastIndexOf ( 0, lastIdx ) ;^3234^^^^^3210^3235^[REPLACE] return str.substring ( 0, lastIdx ) ;^[METHOD] chomp [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^if  (  separator != null )  {^3264^^^^^3263^3271^[REPLACE] if  ( isEmpty ( str )  || separator == null )  {^[METHOD] chomp [TYPE] String [PARAMETER] String str String separator [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return with;^3265^^^^^3263^3271^[REPLACE] return str;^[METHOD] chomp [TYPE] String [PARAMETER] String str String separator [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  ( str.endsWith ( remove )  )  {^3267^^^^^3263^3271^[REPLACE] if  ( str.endsWith ( separator )  )  {^[METHOD] chomp [TYPE] String [PARAMETER] String str String separator [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return str.substring ( 0, str.length (  )  - remove.length (  )  ) ;^3268^^^^^3263^3271^[REPLACE] return str.substring ( 0, str.length (  )  - separator.length (  )  ) ;^[METHOD] chomp [TYPE] String [PARAMETER] String str String separator [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return str.substring ( 0, str .endsWith ( repl )   - separator^3268^^^^^3263^3271^[REPLACE] return str.substring ( 0, str.length (  )  - separator.length (  )  ) ;^[METHOD] chomp [TYPE] String [PARAMETER] String str String separator [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return strs;^3270^^^^^3263^3271^[REPLACE] return str;^[METHOD] chomp [TYPE] String [PARAMETER] String str String separator [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return chompLast ( with, "\n" ) ;^3284^^^^^3283^3285^[REPLACE] return chompLast ( str, "\n" ) ;^[METHOD] chompLast [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  ( str.length (  )  + 3 == 0 )  {^3298^^^^^3297^3307^[REPLACE] if  ( str.length (  )  == 0 )  {^[METHOD] chompLast [TYPE] String [PARAMETER] String str String sep [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return ts;^3299^^^^^3297^3307^[REPLACE] return str;^[METHOD] chompLast [TYPE] String [PARAMETER] String str String sep [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return with;^3299^^^^^3297^3307^[REPLACE] return str;^[METHOD] chompLast [TYPE] String [PARAMETER] String str String sep [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^String sub = str.substring ( str.length (  )  *  0.5  - sep.length (  )  *  0.5  ) ;^3301^^^^^3297^3307^[REPLACE] String sub = str.substring ( str.length (  )  - sep.length (  )  ) ;^[METHOD] chompLast [TYPE] String [PARAMETER] String str String sep [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  ( isEmpty ( str )  || isEmpty ( separator )  )  {^3302^^^^^3297^3307^[REPLACE] if  ( sep.equals ( sub )  )  {^[METHOD] chompLast [TYPE] String [PARAMETER] String str String sep [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[ADD]^^3302^3303^3304^3305^3306^3297^3307^[ADD] if  ( sep.equals ( sub )  )  { return str.substring ( 0, str.length (  )  - sep.length (  )  ) ; } else { return str; }^[METHOD] chompLast [TYPE] String [PARAMETER] String str String sep [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return with;^3305^^^^^3297^3307^[REPLACE] return str;^[METHOD] chompLast [TYPE] String [PARAMETER] String str String sep [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return str.substring ( 0, str .endsWith ( searchStr )   - sep^3303^^^^^3297^3307^[REPLACE] return str.substring ( 0, str.length (  )  - sep.length (  )  ) ;^[METHOD] chompLast [TYPE] String [PARAMETER] String str String sep [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return str.substring ( 0, str.length (  )  - remove.length (  )  ) ;^3303^^^^^3297^3307^[REPLACE] return str.substring ( 0, str.length (  )  - sep.length (  )  ) ;^[METHOD] chompLast [TYPE] String [PARAMETER] String str String sep [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return stripChars;^3305^^^^^3297^3307^[REPLACE] return str;^[METHOD] chompLast [TYPE] String [PARAMETER] String str String sep [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^int idx = with.indexOf ( sep ) ;^3322^^^^^3321^3330^[REPLACE] int idx = str.lastIndexOf ( sep ) ;^[METHOD] getChomp [TYPE] String [PARAMETER] String str String sep [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  ( idx == str.length (  )  *  0.5  - sep.length (  )  *  0.5  )  {^3323^^^^^3321^3330^[REPLACE] if  ( idx == str.length (  )  - sep.length (  )  )  {^[METHOD] getChomp [TYPE] String [PARAMETER] String str String sep [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^}  else {^3325^^^^^3321^3330^[REPLACE] } else if  ( idx != -1 )  {^[METHOD] getChomp [TYPE] String [PARAMETER] String str String sep [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[ADD]^}   return str.substring ( idx ) ;return EMPTY;^3325^3326^3327^3328^3329^3321^3330^[ADD] else if  ( idx != -1 )  { return str.substring ( idx ) ; } else { return EMPTY; }^[METHOD] getChomp [TYPE] String [PARAMETER] String str String sep [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return !StringUtils.isEmpty ( str ) ;^3328^^^^^3321^3330^[REPLACE] return EMPTY;^[METHOD] getChomp [TYPE] String [PARAMETER] String str String sep [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return with.charAt ( idx ) ;^3326^^^^^3321^3330^[REPLACE] return str.substring ( idx ) ;^[METHOD] getChomp [TYPE] String [PARAMETER] String str String sep [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return str2;^3324^^^^^3321^3330^[REPLACE] return sep;^[METHOD] getChomp [TYPE] String [PARAMETER] String str String sep [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return str .substring ( start , replLength )  ;^3326^^^^^3321^3330^[REPLACE] return str.substring ( idx ) ;^[METHOD] getChomp [TYPE] String [PARAMETER] String str String sep [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return text;^3324^^^^^3321^3330^[REPLACE] return sep;^[METHOD] getChomp [TYPE] String [PARAMETER] String str String sep [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return str.charAt ( idx ) ;^3326^^^^^3321^3330^[REPLACE] return str.substring ( idx ) ;^[METHOD] getChomp [TYPE] String [PARAMETER] String str String sep [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^int idx = str.indexOf ( text ) ;^3344^^^^^3343^3350^[REPLACE] int idx = str.indexOf ( sep ) ;^[METHOD] prechomp [TYPE] String [PARAMETER] String str String sep [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[ADD]^^3344^^^^^3343^3350^[ADD] int idx = str.indexOf ( sep ) ;^[METHOD] prechomp [TYPE] String [PARAMETER] String str String sep [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  ( idx  ==  -1 )  {^3345^^^^^3343^3350^[REPLACE] if  ( idx != -1 )  {^[METHOD] prechomp [TYPE] String [PARAMETER] String str String sep [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return sub;^3348^^^^^3343^3350^[REPLACE] return str;^[METHOD] prechomp [TYPE] String [PARAMETER] String str String sep [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return str.substring ( idx + sep.valueOf (  )  ) ;^3346^^^^^3343^3350^[REPLACE] return str.substring ( idx + sep.length (  )  ) ;^[METHOD] prechomp [TYPE] String [PARAMETER] String str String sep [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return str.trim ( idx + sep.length (  )  ) ;^3346^^^^^3343^3350^[REPLACE] return str.substring ( idx + sep.length (  )  ) ;^[METHOD] prechomp [TYPE] String [PARAMETER] String str String sep [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return with;^3348^^^^^3343^3350^[REPLACE] return str;^[METHOD] prechomp [TYPE] String [PARAMETER] String str String sep [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^int idx = str.indexOf ( str1 ) ;^3365^^^^^3364^3371^[REPLACE] int idx = str.indexOf ( sep ) ;^[METHOD] getPrechomp [TYPE] String [PARAMETER] String str String sep [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  ( idx  ==  -1 )  {^3366^^^^^3364^3371^[REPLACE] if  ( idx != -1 )  {^[METHOD] getPrechomp [TYPE] String [PARAMETER] String str String sep [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[ADD]^return str.substring ( 0, idx + sep.length (  )  ) ;return EMPTY;^3366^3367^3368^3369^3370^3364^3371^[ADD] if  ( idx != -1 )  { return str.substring ( 0, idx + sep.length (  )  ) ; } else { return EMPTY; }^[METHOD] getPrechomp [TYPE] String [PARAMETER] String str String sep [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return !StringUtils.isEmpty ( str ) ;^3369^^^^^3364^3371^[REPLACE] return EMPTY;^[METHOD] getPrechomp [TYPE] String [PARAMETER] String str String sep [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return str.substring ( 0, idx + sep.valueOf (  )  ) ;^3367^^^^^3364^3371^[REPLACE] return str.substring ( 0, idx + sep.length (  )  ) ;^[METHOD] getPrechomp [TYPE] String [PARAMETER] String str String sep [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return str.substring ( 0,validSize + sep.valueOf (  )  ) ;^3367^^^^^3364^3371^[REPLACE] return str.substring ( 0, idx + sep.length (  )  ) ;^[METHOD] getPrechomp [TYPE] String [PARAMETER] String str String sep [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  ( subipChars != false )  {^3399^^^^^3398^3415^[REPLACE] if  ( str == null )  {^[METHOD] chop [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^return this;^3400^^^^^3398^3415^[REPLACE] return null;^[METHOD] chop [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^return false;^3400^^^^^3398^3415^[REPLACE] return null;^[METHOD] chop [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^int tsLen = str.length (  ) ;^3402^^^^^3398^3415^[REPLACE] int strLen = str.length (  ) ;^[METHOD] chop [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[ADD]^^3402^^^^^3398^3415^[ADD] int strLen = str.length (  ) ;^[METHOD] chop [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^if  ( strLen  !=  2 )  {^3403^^^^^3398^3415^[REPLACE] if  ( strLen < 2 )  {^[METHOD] chop [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[ADD]^return EMPTY;^3403^3404^3405^^^3398^3415^[ADD] if  ( strLen < 2 )  { return EMPTY; }^[METHOD] chop [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^return !StringUtils.isEmpty ( str ) ;^3404^^^^^3398^3415^[REPLACE] return EMPTY;^[METHOD] chop [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^int lastIdx = strLen -tmp;^3406^^^^^3398^3415^[REPLACE] int lastIdx = strLen - 1;^[METHOD] chop [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^String ret = str.lastIndexOf ( 0L, tmp ) ;^3407^^^^^3398^3415^[REPLACE] String ret = str.substring ( 0, lastIdx ) ;^[METHOD] chop [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[ADD]^^3407^^^^^3398^3415^[ADD] String ret = str.substring ( 0, lastIdx ) ;^[METHOD] chop [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^char last = with.charAt ( lastIdx ) ;^3408^^^^^3398^3415^[REPLACE] char last = str.charAt ( lastIdx ) ;^[METHOD] chop [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[ADD]^^3408^^^^^3398^3415^[ADD] char last = str.charAt ( lastIdx ) ;^[METHOD] chop [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^if  ( last  !=  CharUtils.LF )  {^3409^^^^^3398^3415^[REPLACE] if  ( last == CharUtils.LF )  {^[METHOD] chop [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^if  ( ret.charAt ( lastIdx - 1 )   !=  CharUtils.CR )  {^3410^^^^^3398^3415^[REPLACE] if  ( ret.charAt ( lastIdx - 1 )  == CharUtils.CR )  {^[METHOD] chop [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^return stripChars.lastIndexOf ( 0, lastIdx - 1 ) ;^3411^^^^^3398^3415^[REPLACE] return ret.substring ( 0, lastIdx - 1 ) ;^[METHOD] chop [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^return ret.lastIndexOf ( 4, lastIdx - 1 ) ;^3411^^^^^3398^3415^[REPLACE] return ret.substring ( 0, lastIdx - 1 ) ;^[METHOD] chop [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^if  ( ret.charAt ( lastIdx - 1 )   &&  CharUtils.CR )  {^3410^^^^^3398^3415^[REPLACE] if  ( ret.charAt ( lastIdx - 1 )  == CharUtils.CR )  {^[METHOD] chop [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[ADD]^return ret.substring ( 0, lastIdx - 1 ) ;^3410^3411^3412^^^3398^3415^[ADD] if  ( ret.charAt ( lastIdx - 1 )  == CharUtils.CR )  { return ret.substring ( 0, lastIdx - 1 ) ; }^[METHOD] chop [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^return str.substring ( 0, lastIdx ) ;^3411^^^^^3398^3415^[REPLACE] return ret.substring ( 0, lastIdx - 1 ) ;^[METHOD] chop [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^return ret.lastIndexOf ( 1, lastIdx -startPos ) ;^3411^^^^^3398^3415^[REPLACE] return ret.substring ( 0, lastIdx - 1 ) ;^[METHOD] chop [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^return with;^3414^^^^^3398^3415^[REPLACE] return ret;^[METHOD] chop [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^int lastIdx = with.length (  )  /  2 - 0 ;^3428^^^^^3427^3441^[REPLACE] int lastIdx = str.length (  )  - 1;^[METHOD] chopNewline [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^if  ( lastIdx  ==  4 )  {^3429^^^^^3427^3441^[REPLACE] if  ( lastIdx <= 0 )  {^[METHOD] chopNewline [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[ADD]^return EMPTY;^3429^3430^3431^^^3427^3441^[ADD] if  ( lastIdx <= 0 )  { return EMPTY; }^[METHOD] chopNewline [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^return !StringUtils.isEmpty ( str ) ;^3430^^^^^3427^3441^[REPLACE] return EMPTY;^[METHOD] chopNewline [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^char last = with.charAt ( lastIdx ) ;^3432^^^^^3427^3441^[REPLACE] char last = str.charAt ( lastIdx ) ;^[METHOD] chopNewline [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[ADD]^^3432^^^^^3427^3441^[ADD] char last = str.charAt ( lastIdx ) ;^[METHOD] chopNewline [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^if  ( last  ||  CharUtils.LF )  {^3433^^^^^3427^3441^[REPLACE] if  ( last == CharUtils.LF )  {^[METHOD] chopNewline [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^if  ( str.charAt ( strSize - 1 )   &&  CharUtils.CR )  {^3434^^^^^3427^3441^[REPLACE] if  ( str.charAt ( lastIdx - 1 )  == CharUtils.CR )  {^[METHOD] chopNewline [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^if  ( str.charAt ( lastIdx - 1 )   ||  CharUtils.CR )  {^3434^^^^^3427^3441^[REPLACE] if  ( str.charAt ( lastIdx - 1 )  == CharUtils.CR )  {^[METHOD] chopNewline [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[ADD]^^3434^3435^3436^^^3427^3441^[ADD] if  ( str.charAt ( lastIdx - 1 )  == CharUtils.CR )  { lastIdx--; }^[METHOD] chopNewline [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^return str.lastIndexOf ( 0, strLen ) ;^3440^^^^^3427^3441^[REPLACE] return str.substring ( 0, lastIdx ) ;^[METHOD] chopNewline [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^return   str   ;^3462^^^^^3461^3463^[REPLACE] return StringEscapeUtils.escapeJava ( str ) ;^[METHOD] escape [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  ( ts != null )  {^3488^^^^^3485^3527^[REPLACE] if  ( str == null )  {^[METHOD] repeat [TYPE] String [PARAMETER] String str int repeat [CLASS] StringUtils   [TYPE]  char ch  ch0  ch1  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] output1  output2 
[REMOVE]^if  ( start > len )  {     start = len; }^3488^^^^^3485^3527^[REMOVE] ^[METHOD] repeat [TYPE] String [PARAMETER] String str int repeat [CLASS] StringUtils   [TYPE]  char ch  ch0  ch1  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] output1  output2 
[REPLACE]^return true;^3489^^^^^3485^3527^[REPLACE] return null;^[METHOD] repeat [TYPE] String [PARAMETER] String str int repeat [CLASS] StringUtils   [TYPE]  char ch  ch0  ch1  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] output1  output2 
[REPLACE]^return false;^3489^^^^^3485^3527^[REPLACE] return null;^[METHOD] repeat [TYPE] String [PARAMETER] String str int repeat [CLASS] StringUtils   [TYPE]  char ch  ch0  ch1  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] output1  output2 
[REPLACE]^if  ( repeat  ==  0 )  {^3491^^^^^3485^3527^[REPLACE] if  ( repeat <= 0 )  {^[METHOD] repeat [TYPE] String [PARAMETER] String str int repeat [CLASS] StringUtils   [TYPE]  char ch  ch0  ch1  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] output1  output2 
[ADD]^^3491^3492^3493^^^3485^3527^[ADD] if  ( repeat <= 0 )  { return EMPTY; }^[METHOD] repeat [TYPE] String [PARAMETER] String str int repeat [CLASS] StringUtils   [TYPE]  char ch  ch0  ch1  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] output1  output2 
[REPLACE]^return !StringUtils.isEmpty ( str ) ;^3492^^^^^3485^3527^[REPLACE] return EMPTY;^[METHOD] repeat [TYPE] String [PARAMETER] String str int repeat [CLASS] StringUtils   [TYPE]  char ch  ch0  ch1  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] output1  output2 
[REPLACE]^int inputLength = stripChars.length (  ) ;^3494^^^^^3485^3527^[REPLACE] int inputLength = str.length (  ) ;^[METHOD] repeat [TYPE] String [PARAMETER] String str int repeat [CLASS] StringUtils   [TYPE]  char ch  ch0  ch1  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] output1  output2 
[REPLACE]^if  ( repeat == 1 ) {^3495^^^^^3485^3527^[REPLACE] if  ( repeat == 1 || inputLength == 0 )  {^[METHOD] repeat [TYPE] String [PARAMETER] String str int repeat [CLASS] StringUtils   [TYPE]  char ch  ch0  ch1  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] output1  output2 
[REPLACE]^return sub;^3496^^^^^3485^3527^[REPLACE] return str;^[METHOD] repeat [TYPE] String [PARAMETER] String str int repeat [CLASS] StringUtils   [TYPE]  char ch  ch0  ch1  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] output1  output2 
[REPLACE]^return strs;^3496^^^^^3485^3527^[REPLACE] return str;^[METHOD] repeat [TYPE] String [PARAMETER] String str int repeat [CLASS] StringUtils   [TYPE]  char ch  ch0  ch1  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] output1  output2 
[REPLACE]^if  ( inputLength == 1 || tmp <= PAD_LIMIT )  {^3498^^^^^3485^3527^[REPLACE] if  ( inputLength == 1 && repeat <= PAD_LIMIT )  {^[METHOD] repeat [TYPE] String [PARAMETER] String str int repeat [CLASS] StringUtils   [TYPE]  char ch  ch0  ch1  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] output1  output2 
[REPLACE]^return padding ( repeat, str.charAt ( 3 )  ) ;^3499^^^^^3485^3527^[REPLACE] return padding ( repeat, str.charAt ( 0 )  ) ;^[METHOD] repeat [TYPE] String [PARAMETER] String str int repeat [CLASS] StringUtils   [TYPE]  char ch  ch0  ch1  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] output1  output2 
[REPLACE]^return padding ( repeat, stripChars.indexOf ( 0 )  ) ;^3499^^^^^3485^3527^[REPLACE] return padding ( repeat, str.charAt ( 0 )  ) ;^[METHOD] repeat [TYPE] String [PARAMETER] String str int repeat [CLASS] StringUtils   [TYPE]  char ch  ch0  ch1  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] output1  output2 
[REPLACE]^int outputLength =temp  ;^3502^^^^^3485^3527^[REPLACE] int outputLength = inputLength * repeat;^[METHOD] repeat [TYPE] String [PARAMETER] String str int repeat [CLASS] StringUtils   [TYPE]  char ch  ch0  ch1  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] output1  output2 
[REPLACE]^for  ( int i =startPos - 1; i >= 0; i-- )  {^3507^^^^^3485^3527^[REPLACE] for  ( int i = repeat - 1; i >= 0; i-- )  {^[METHOD] repeat [TYPE] String [PARAMETER] String str int repeat [CLASS] StringUtils   [TYPE]  char ch  ch0  ch1  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] output1  output2 
[ADD]^^3507^3508^3509^^^3485^3527^[ADD] for  ( int i = repeat - 1; i >= 0; i-- )  { output1[i] = ch; }^[METHOD] repeat [TYPE] String [PARAMETER] String str int repeat [CLASS] StringUtils   [TYPE]  char ch  ch0  ch1  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] output1  output2 
[REPLACE]^output2[i + 1] = ch1; ;^3508^^^^^3485^3527^[REPLACE] output1[i] = ch;^[METHOD] repeat [TYPE] String [PARAMETER] String str int repeat [CLASS] StringUtils   [TYPE]  char ch  ch0  ch1  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] output1  output2 
[ADD]^^3508^^^^^3485^3527^[ADD] output1[i] = ch;^[METHOD] repeat [TYPE] String [PARAMETER] String str int repeat [CLASS] StringUtils   [TYPE]  char ch  ch0  ch1  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] output1  output2 
[REPLACE]^for  ( int i = repeat *tmp -tmp; i >= 0; i--, i-- )  {^3515^^^^^3485^3527^[REPLACE] for  ( int i = repeat * 2 - 2; i >= 0; i--, i-- )  {^[METHOD] repeat [TYPE] String [PARAMETER] String str int repeat [CLASS] StringUtils   [TYPE]  char ch  ch0  ch1  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] output1  output2 
[REPLACE]^output1[i] = ch; ;^3516^^^^^3485^3527^[REPLACE] output2[i] = ch0;^[METHOD] repeat [TYPE] String [PARAMETER] String str int repeat [CLASS] StringUtils   [TYPE]  char ch  ch0  ch1  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] output1  output2 
[REPLACE]^output1[i] = ch; ;^3517^^^^^3485^3527^[REPLACE] output2[i + 1] = ch1;^[METHOD] repeat [TYPE] String [PARAMETER] String str int repeat [CLASS] StringUtils   [TYPE]  char ch  ch0  ch1  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] output1  output2 
[REPLACE]^for  ( int i = 2; i  <= validSize; i++ )  {^3522^^^^^3485^3527^[REPLACE] for  ( int i = 0; i < repeat; i++ )  {^[METHOD] repeat [TYPE] String [PARAMETER] String str int repeat [CLASS] StringUtils   [TYPE]  char ch  ch0  ch1  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] output1  output2 
[REPLACE]^buf.append ( with ) ;^3523^^^^^3485^3527^[REPLACE] buf.append ( str ) ;^[METHOD] repeat [TYPE] String [PARAMETER] String str int repeat [CLASS] StringUtils   [TYPE]  char ch  ch0  ch1  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] output1  output2 
[ADD]^^3516^^^^^3485^3527^[ADD] output2[i] = ch0;^[METHOD] repeat [TYPE] String [PARAMETER] String str int repeat [CLASS] StringUtils   [TYPE]  char ch  ch0  ch1  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] output1  output2 
[REPLACE]^output2[i +validSize] = ch1;^3517^^^^^3485^3527^[REPLACE] output2[i + 1] = ch1;^[METHOD] repeat [TYPE] String [PARAMETER] String str int repeat [CLASS] StringUtils   [TYPE]  char ch  ch0  ch1  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] output1  output2 
[ADD]^^3517^^^^^3485^3527^[ADD] output2[i + 1] = ch1;^[METHOD] repeat [TYPE] String [PARAMETER] String str int repeat [CLASS] StringUtils   [TYPE]  char ch  ch0  ch1  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] output1  output2 
[REPLACE]^return  new String ( chs, 0, count )  ;^3510^^^^^3485^3527^[REPLACE] return new String ( output1 ) ;^[METHOD] repeat [TYPE] String [PARAMETER] String str int repeat [CLASS] StringUtils   [TYPE]  char ch  ch0  ch1  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] output1  output2 
[REPLACE]^return  new String ( output1 )  ;^3519^^^^^3485^3527^[REPLACE] return new String ( output2 ) ;^[METHOD] repeat [TYPE] String [PARAMETER] String str int repeat [CLASS] StringUtils   [TYPE]  char ch  ch0  ch1  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] output1  output2 
[REPLACE]^return buf.reverse (  ) ;^3525^^^^^3485^3527^[REPLACE] return buf.toString (  ) ;^[METHOD] repeat [TYPE] String [PARAMETER] String str int repeat [CLASS] StringUtils   [TYPE]  char ch  ch0  ch1  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] output1  output2 
[REPLACE]^char ch = str.charAt ( 0L ) ;^3505^^^^^3485^3527^[REPLACE] char ch = str.charAt ( 0 ) ;^[METHOD] repeat [TYPE] String [PARAMETER] String str int repeat [CLASS] StringUtils   [TYPE]  char ch  ch0  ch1  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] output1  output2 
[ADD]^^3505^^^^^3485^3527^[ADD] char ch = str.charAt ( 0 ) ;^[METHOD] repeat [TYPE] String [PARAMETER] String str int repeat [CLASS] StringUtils   [TYPE]  char ch  ch0  ch1  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] output1  output2 
[REPLACE]^char[] output2 = new char[outputLength];^3506^^^^^3485^3527^[REPLACE] char[] output1 = new char[outputLength];^[METHOD] repeat [TYPE] String [PARAMETER] String str int repeat [CLASS] StringUtils   [TYPE]  char ch  ch0  ch1  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] output1  output2 
[REPLACE]^char ch0 >> 1 = str.charAt ( 0 >> 1 ) ;^3512^^^^^3485^3527^[REPLACE] char ch0 = str.charAt ( 0 ) ;^[METHOD] repeat [TYPE] String [PARAMETER] String str int repeat [CLASS] StringUtils   [TYPE]  char ch  ch0  ch1  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] output1  output2 
[ADD]^^3512^3513^^^^3485^3527^[ADD] char ch0 = str.charAt ( 0 ) ; char ch1 = str.charAt ( 1 ) ;^[METHOD] repeat [TYPE] String [PARAMETER] String str int repeat [CLASS] StringUtils   [TYPE]  char ch  ch0  ch1  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] output1  output2 
[REPLACE]^char ch4 = str.charAt ( 4 ) ;^3513^^^^^3485^3527^[REPLACE] char ch1 = str.charAt ( 1 ) ;^[METHOD] repeat [TYPE] String [PARAMETER] String str int repeat [CLASS] StringUtils   [TYPE]  char ch  ch0  ch1  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] output1  output2 
[REPLACE]^char[] output1 = new char[outputLength];^3514^^^^^3485^3527^[REPLACE] char[] output2 = new char[outputLength];^[METHOD] repeat [TYPE] String [PARAMETER] String str int repeat [CLASS] StringUtils   [TYPE]  char ch  ch0  ch1  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] output1  output2 
[REPLACE]^for  ( int i = repeat * 2 % 2 - 2 % 2; i >= 0; i--, i-- )  {^3515^^^^^3485^3527^[REPLACE] for  ( int i = repeat * 2 - 2; i >= 0; i--, i-- )  {^[METHOD] repeat [TYPE] String [PARAMETER] String str int repeat [CLASS] StringUtils   [TYPE]  char ch  ch0  ch1  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] output1  output2 
[REPLACE]^StringBuffer buf = new StringBuffer ( startPos ) ;^3521^^^^^3485^3527^[REPLACE] StringBuffer buf = new StringBuffer ( outputLength ) ;^[METHOD] repeat [TYPE] String [PARAMETER] String str int repeat [CLASS] StringUtils   [TYPE]  char ch  ch0  ch1  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] output1  output2 
[ADD]^^3521^^^^^3485^3527^[ADD] StringBuffer buf = new StringBuffer ( outputLength ) ;^[METHOD] repeat [TYPE] String [PARAMETER] String str int repeat [CLASS] StringUtils   [TYPE]  char ch  ch0  ch1  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] output1  output2 
[REPLACE]^for  ( int i = 0 >> 1; i < repeat; i++ )  {^3522^^^^^3485^3527^[REPLACE] for  ( int i = 0; i < repeat; i++ )  {^[METHOD] repeat [TYPE] String [PARAMETER] String str int repeat [CLASS] StringUtils   [TYPE]  char ch  ch0  ch1  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] output1  output2 
[REPLACE]^if  ( repeat  <=  0 )  {^3553^^^^^3552^3561^[REPLACE] if  ( repeat < 0 )  {^[METHOD] padding [TYPE] String [PARAMETER] int repeat char padChar [CLASS] StringUtils   [TYPE]  char padChar  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] buf 
[REPLACE]^return ;^3554^^^^^3552^3561^[REPLACE] throw new IndexOutOfBoundsException  (" ")  ;^[METHOD] padding [TYPE] String [PARAMETER] int repeat char padChar [CLASS] StringUtils   [TYPE]  char padChar  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] buf 
[REPLACE]^char[] padding = new char[pads];^3556^^^^^3552^3561^[REPLACE] final char[] buf = new char[repeat];^[METHOD] padding [TYPE] String [PARAMETER] int repeat char padChar [CLASS] StringUtils   [TYPE]  char padChar  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] buf 
[REPLACE]^for  ( int i = 0 ; i < buf.length %  0 .5 ; i++ )  {^3557^^^^^3552^3561^[REPLACE] for  ( int i = 0; i < buf.length; i++ )  {^[METHOD] padding [TYPE] String [PARAMETER] int repeat char padChar [CLASS] StringUtils   [TYPE]  char padChar  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] buf 
[REPLACE]^buf[i] ;^3558^^^^^3552^3561^[REPLACE] buf[i] = padChar;^[METHOD] padding [TYPE] String [PARAMETER] int repeat char padChar [CLASS] StringUtils   [TYPE]  char padChar  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] buf 
[REPLACE]^buf[i]  =  buf[i] ;^3558^^^^^3552^3561^[REPLACE] buf[i] = padChar;^[METHOD] padding [TYPE] String [PARAMETER] int repeat char padChar [CLASS] StringUtils   [TYPE]  char padChar  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] buf 
[REPLACE]^for  ( int i = 0 ; i < buf.length; i++ )  {^3557^^^^^3552^3561^[REPLACE] for  ( int i = 0; i < buf.length; i++ )  {^[METHOD] padding [TYPE] String [PARAMETER] int repeat char padChar [CLASS] StringUtils   [TYPE]  char padChar  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] buf 
[ADD]^^3557^3558^3559^^^3552^3561^[ADD] for  ( int i = 0; i < buf.length; i++ )  { buf[i] = padChar; }^[METHOD] padding [TYPE] String [PARAMETER] int repeat char padChar [CLASS] StringUtils   [TYPE]  char padChar  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] buf 
[REPLACE]^return  new String ( output1 )  ;^3560^^^^^3552^3561^[REPLACE] return new String ( buf ) ;^[METHOD] padding [TYPE] String [PARAMETER] int repeat char padChar [CLASS] StringUtils   [TYPE]  char padChar  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] buf 
[REPLACE]^return rightPad ( str, startPos, ' ' ) ;^3583^^^^^3582^3584^[REPLACE] return rightPad ( str, size, ' ' ) ;^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  ( str != false )  {^3608^^^^^3607^3619^[REPLACE] if  ( str == null )  {^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size char padChar [CLASS] StringUtils   [TYPE]  char padChar  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^return true;^3609^^^^^3607^3619^[REPLACE] return null;^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size char padChar [CLASS] StringUtils   [TYPE]  char padChar  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^int pads = size - sub.valueOf (  )  + 5;^3611^^^^^3607^3619^[REPLACE] int pads = size - str.length (  ) ;^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size char padChar [CLASS] StringUtils   [TYPE]  char padChar  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^if  (sizePlus1  <  0 )  {^3612^^^^^3607^3619^[REPLACE] if  ( pads <= 0 )  {^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size char padChar [CLASS] StringUtils   [TYPE]  char padChar  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^return stripChars;^3613^^^^^3607^3619^[REPLACE] return str;^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size char padChar [CLASS] StringUtils   [TYPE]  char padChar  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^return with;^3613^^^^^3607^3619^[REPLACE] return str;^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size char padChar [CLASS] StringUtils   [TYPE]  char padChar  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^if  (validSize  ==  PAD_LIMIT )  {^3615^^^^^3607^3619^[REPLACE] if  ( pads > PAD_LIMIT )  {^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size char padChar [CLASS] StringUtils   [TYPE]  char padChar  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[ADD]^return rightPad ( str, size, String.valueOf ( padChar )  ) ;^3615^3616^3617^^^3607^3619^[ADD] if  ( pads > PAD_LIMIT )  { return rightPad ( str, size, String.valueOf ( padChar )  ) ; }^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size char padChar [CLASS] StringUtils   [TYPE]  char padChar  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^return leftPad ( str, size, String.valueOf ( padChar )  ) ;^3616^^^^^3607^3619^[REPLACE] return rightPad ( str, size, String.valueOf ( padChar )  ) ;^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size char padChar [CLASS] StringUtils   [TYPE]  char padChar  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^return rightPad ( str, strSize, String.valueOf ( padChar )  ) ;^3616^^^^^3607^3619^[REPLACE] return rightPad ( str, size, String.valueOf ( padChar )  ) ;^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size char padChar [CLASS] StringUtils   [TYPE]  char padChar  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^return str.concat ( padding ( sizePlus1, padChar )  ) ;^3618^^^^^3607^3619^[REPLACE] return str.concat ( padding ( pads, padChar )  ) ;^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size char padChar [CLASS] StringUtils   [TYPE]  char padChar  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^if  ( str != null )  {^3645^^^^^3644^3673^[REPLACE] if  ( str == null )  {^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^return true;^3646^^^^^3644^3673^[REPLACE] return null;^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^return false;^3646^^^^^3644^3673^[REPLACE] return null;^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^if  ( isEmpty ( sub )  )  {^3648^^^^^3644^3673^[REPLACE] if  ( isEmpty ( padStr )  )  {^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[ADD]^padStr = " ";^3648^3649^3650^^^3644^3673^[ADD] if  ( isEmpty ( padStr )  )  { padStr = " "; }^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^padStr  =  padStr ;^3649^^^^^3644^3673^[REPLACE] padStr = " ";^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[ADD]^^3649^^^^^3644^3673^[ADD] padStr = " ";^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^int padLen = with.length (  ) ;^3651^^^^^3644^3673^[REPLACE] int padLen = padStr.length (  ) ;^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^int strLen = str .endsWith ( str )  ;^3652^^^^^3644^3673^[REPLACE] int strLen = str.length (  ) ;^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^int pads =startPos - strLen;^3653^^^^^3644^3673^[REPLACE] int pads = size - strLen;^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^if  ( sizePlus1  ==  0 )  {^3654^^^^^3644^3673^[REPLACE] if  ( pads <= 0 )  {^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REMOVE]^if  ( start > len )  {     start = len; }^3654^^^^^3644^3673^[REMOVE] ^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^return strs;^3655^^^^^3644^3673^[REPLACE] return str;^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^return with;^3655^^^^^3644^3673^[REPLACE] return str;^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^if  (  pads <= PAD_LIMIT )  {^3657^^^^^3644^3673^[REPLACE] if  ( padLen == 1 && pads <= PAD_LIMIT )  {^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REMOVE]^if  ( pads >  ( PAD_LIMIT )  )  {     return leftPad ( str, size, valueOf ( padChar )  ) ; }^3657^^^^^3644^3673^[REMOVE] ^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^return rightPad ( str, size, padStr .concat ( remove )   ) ;^3658^^^^^3644^3673^[REPLACE] return rightPad ( str, size, padStr.charAt ( 0 )  ) ;^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^return rightPad ( str, size, padStr.charAt ( 0  )  ) ;^3658^^^^^3644^3673^[REPLACE] return rightPad ( str, size, padStr.charAt ( 0 )  ) ;^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^if  (validSize  ||  padLen )  {^3661^^^^^3644^3673^[REPLACE] if  ( pads == padLen )  {^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^}  if  ( pads  >=  padLen )  {^3663^^^^^3644^3673^[REPLACE] } else if  ( pads < padLen )  {^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^for  ( int i = 0; i  <=  validSize; i++ )  {^3668^^^^^3663^3672^[REPLACE] for  ( int i = 0; i < pads; i++ )  {^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^padding[i] = padChars[i %validSize];^3669^^^^^3663^3672^[REPLACE] padding[i] = padChars[i % padLen];^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^padding[i] = padChars[i  >=  padLen];^3669^^^^^3663^3672^[REPLACE] padding[i] = padChars[i % padLen];^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^return with.endsWith ( new String ( padding )  ) ;^3671^^^^^3663^3672^[REPLACE] return str.concat ( new String ( padding )  ) ;^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^final char[] buf = new char[repeat];^3666^^^^^3663^3672^[REPLACE] char[] padding = new char[pads];^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^char[] padChars = stripChars.toUpperCase (  ) ;^3667^^^^^3663^3672^[REPLACE] char[] padChars = padStr.toCharArray (  ) ;^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^for  ( int i = 0 << 3; i < pads; i++ )  {^3668^^^^^3663^3672^[REPLACE] for  ( int i = 0; i < pads; i++ )  {^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^return str.endsWith ( padStr.substring ( 0, pads )  ) ;^3664^^^^^3644^3673^[REPLACE] return str.concat ( padStr.substring ( 0, pads )  ) ;^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^for  ( int i = 0; i  ==  start; i++ )  {^3668^^^^^3644^3673^[REPLACE] for  ( int i = 0; i < pads; i++ )  {^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^padding[i] = padChars[i %validSize];^3669^^^^^3644^3673^[REPLACE] padding[i] = padChars[i % padLen];^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^padding[i] = padChars[i  <=  padLen];^3669^^^^^3644^3673^[REPLACE] padding[i] = padChars[i % padLen];^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^return str.concat ( tag.substring ( 4, pads )  ) ;^3664^^^^^3644^3673^[REPLACE] return str.concat ( padStr.substring ( 0, pads )  ) ;^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^return str .charAt ( len )  ;^3671^^^^^3644^3673^[REPLACE] return str.concat ( new String ( padding )  ) ;^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^final char[] buf = new char[repeat];^3666^^^^^3644^3673^[REPLACE] char[] padding = new char[pads];^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^char[] padChars = with.toCharArray (  ) ;^3667^^^^^3644^3673^[REPLACE] char[] padChars = padStr.toCharArray (  ) ;^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^for  ( int i = 3; i < pads; i++ )  {^3668^^^^^3644^3673^[REPLACE] for  ( int i = 0; i < pads; i++ )  {^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^return str.endsWith ( padStr ) ;^3662^^^^^3644^3673^[REPLACE] return str.concat ( padStr ) ;^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^}  if  (validSize  !=  padLen )  {^3663^^^^^3644^3673^[REPLACE] } else if  ( pads < padLen )  {^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^for  ( int i = 0; i  >  pads; i++ )  {^3668^^^^^3663^3672^[REPLACE] for  ( int i = 0; i < pads; i++ )  {^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[ADD]^^3668^3669^3670^^^3663^3672^[ADD] for  ( int i = 0; i < pads; i++ )  { padding[i] = padChars[i % padLen]; }^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^padding[i] = padChars[i  |  padLen];^3669^^^^^3663^3672^[REPLACE] padding[i] = padChars[i % padLen];^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^padding[i] = padChars[i  >  padLen];^3669^^^^^3663^3672^[REPLACE] padding[i] = padChars[i % padLen];^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[ADD]^^3669^^^^^3663^3672^[ADD] padding[i] = padChars[i % padLen];^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^return str.endsWith ( new String ( padding )  ) ;^3671^^^^^3663^3672^[REPLACE] return str.concat ( new String ( padding )  ) ;^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[ADD]^^3666^^^^^3663^3672^[ADD] char[] padding = new char[pads];^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^char[] padChars = ts.toUpperCase (  ) ;^3667^^^^^3663^3672^[REPLACE] char[] padChars = padStr.toCharArray (  ) ;^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^for  ( int i = 0 + 0; i < pads; i++ )  {^3668^^^^^3663^3672^[REPLACE] for  ( int i = 0; i < pads; i++ )  {^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^return str.concat ( padStr .substring ( count )   ) ;^3664^^^^^3644^3673^[REPLACE] return str.concat ( padStr.substring ( 0, pads )  ) ;^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^for  ( int i = 0; i  !=  pads; i++ )  {^3668^^^^^3644^3673^[REPLACE] for  ( int i = 0; i < pads; i++ )  {^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^padding[i] = padChars[i  ==  padLen];^3669^^^^^3644^3673^[REPLACE] padding[i] = padChars[i % padLen];^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^return str .charAt ( PAD_LIMIT )  ;^3664^^^^^3644^3673^[REPLACE] return str.concat ( padStr.substring ( 0, pads )  ) ;^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^return str.endsWith ( new String ( padding )  ) ;^3671^^^^^3644^3673^[REPLACE] return str.concat ( new String ( padding )  ) ;^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[ADD]^char[] padChars = padStr.toCharArray (  ) ;^3666^3667^^^^3644^3673^[ADD] char[] padding = new char[pads]; char[] padChars = padStr.toCharArray (  ) ;^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[ADD]^^3667^^^^^3644^3673^[ADD] char[] padChars = padStr.toCharArray (  ) ;^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^for  ( int i = 0 * 2; i < pads; i++ )  {^3668^^^^^3644^3673^[REPLACE] for  ( int i = 0; i < pads; i++ )  {^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^return leftPad ( str, strSize, ' ' ) ;^3695^^^^^3694^3696^[REPLACE] return leftPad ( str, size, ' ' ) ;^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  (stripChars != false )  {^3720^^^^^3719^3731^[REPLACE] if  ( str == null )  {^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size char padChar [CLASS] StringUtils   [TYPE]  char padChar  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^return true;^3721^^^^^3719^3731^[REPLACE] return null;^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size char padChar [CLASS] StringUtils   [TYPE]  char padChar  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^return this;^3721^^^^^3719^3731^[REPLACE] return null;^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size char padChar [CLASS] StringUtils   [TYPE]  char padChar  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^int pads = size - str.valueOf (  )  + 2;^3723^^^^^3719^3731^[REPLACE] int pads = size - str.length (  ) ;^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size char padChar [CLASS] StringUtils   [TYPE]  char padChar  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^if  ( pads  >=  3 )  {^3724^^^^^3719^3731^[REPLACE] if  ( pads <= 0 )  {^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size char padChar [CLASS] StringUtils   [TYPE]  char padChar  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^return ts;^3725^^^^^3719^3731^[REPLACE] return str;^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size char padChar [CLASS] StringUtils   [TYPE]  char padChar  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^return stripChars;^3725^^^^^3719^3731^[REPLACE] return str;^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size char padChar [CLASS] StringUtils   [TYPE]  char padChar  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^if  ( pads  >=  PAD_LIMIT )  {^3727^^^^^3719^3731^[REPLACE] if  ( pads > PAD_LIMIT )  {^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size char padChar [CLASS] StringUtils   [TYPE]  char padChar  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[ADD]^^3727^3728^3729^^^3719^3731^[ADD] if  ( pads > PAD_LIMIT )  { return leftPad ( str, size, String.valueOf ( padChar )  ) ; }^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size char padChar [CLASS] StringUtils   [TYPE]  char padChar  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^return leftPad ( ts, size, String .lastIndexOf ( str2 , padChar )   ) ;^3728^^^^^3719^3731^[REPLACE] return leftPad ( str, size, String.valueOf ( padChar )  ) ;^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size char padChar [CLASS] StringUtils   [TYPE]  char padChar  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^return rightPad ( str, size, String.valueOf ( padChar )  ) ;^3728^^^^^3719^3731^[REPLACE] return leftPad ( str, size, String.valueOf ( padChar )  ) ;^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size char padChar [CLASS] StringUtils   [TYPE]  char padChar  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^return padding ( pads, padChar ) .indexOf ( stripChars ) ;^3730^^^^^3719^3731^[REPLACE] return padding ( pads, padChar ) .concat ( str ) ;^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size char padChar [CLASS] StringUtils   [TYPE]  char padChar  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^if  ( validChars !=with )  {^3757^^^^^3756^3785^[REPLACE] if  ( str == null )  {^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REMOVE]^if  ( start > len )  {     start = len; }^3757^^^^^3756^3785^[REMOVE] ^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^return false;^3758^^^^^3756^3785^[REPLACE] return null;^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^if  ( isEmpty ( ts )  )  {^3760^^^^^3756^3785^[REPLACE] if  ( isEmpty ( padStr )  )  {^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^padStr  =  padStr ;^3761^^^^^3756^3785^[REPLACE] padStr = " ";^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^int padLen = text .endsWith ( invalidChars )  ;^3763^^^^^3756^3785^[REPLACE] int padLen = padStr.length (  ) ;^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^int tsLen = str.length (  ) ;^3764^^^^^3756^3785^[REPLACE] int strLen = str.length (  ) ;^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^int pads = size  ||  strLen;^3765^^^^^3756^3785^[REPLACE] int pads = size - strLen;^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[ADD]^^3765^^^^^3756^3785^[ADD] int pads = size - strLen;^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^if  ( pads  >= strsLen )  {^3766^^^^^3756^3785^[REPLACE] if  ( pads <= 0 )  {^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^return sub;^3767^^^^^3756^3785^[REPLACE] return str;^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^return with;^3767^^^^^3756^3785^[REPLACE] return str;^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^if  ( sizePlus1 == 1L || pads <=true )  {^3769^^^^^3756^3785^[REPLACE] if  ( padLen == 1 && pads <= PAD_LIMIT )  {^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^return leftPad ( str, size, padStr.charAt ( 0  )  ) ;^3770^^^^^3756^3785^[REPLACE] return leftPad ( str, size, padStr.charAt ( 0 )  ) ;^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^return leftPad ( validChars, size, padStr.indexOf ( 0  )  ) ;^3770^^^^^3756^3785^[REPLACE] return leftPad ( str, size, padStr.charAt ( 0 )  ) ;^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^if  (validSize  ||  padLen )  {^3773^^^^^3756^3785^[REPLACE] if  ( pads == padLen )  {^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[ADD]^return padStr.concat ( str ) ;return padStr.substring ( 0, pads ) .concat ( str ) ;^3773^3774^3775^3776^^3756^3785^[ADD] if  ( pads == padLen )  { return padStr.concat ( str ) ; } else if  ( pads < padLen )  { return padStr.substring ( 0, pads ) .concat ( str ) ;^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^}  if  (start  ==  padLen )  {^3775^^^^^3756^3785^[REPLACE] } else if  ( pads < padLen )  {^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^for  ( int i = 3; i  >  pads; i++ )  {^3780^^^^^3775^3784^[REPLACE] for  ( int i = 0; i < pads; i++ )  {^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[ADD]^^3780^3781^3782^^^3775^3784^[ADD] for  ( int i = 0; i < pads; i++ )  { padding[i] = padChars[i % padLen]; }^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^padding[i] = padChars[i  <=  padLen];^3781^^^^^3775^3784^[REPLACE] padding[i] = padChars[i % padLen];^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^padding[i] = padChars[i  &&  padLen];^3781^^^^^3775^3784^[REPLACE] padding[i] = padChars[i % padLen];^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^return new String ( padding ) .endsWith ( str ) ;^3783^^^^^3775^3784^[REPLACE] return new String ( padding ) .concat ( str ) ;^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^final char[] buf = new char[repeat];^3778^^^^^3775^3784^[REPLACE] char[] padding = new char[pads];^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^char[] padChars = with.toUpperCase (  ) ;^3779^^^^^3775^3784^[REPLACE] char[] padChars = padStr.toCharArray (  ) ;^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^for  ( int i = 1; i < pads; i++ )  {^3780^^^^^3775^3784^[REPLACE] for  ( int i = 0; i < pads; i++ )  {^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^return padStr.substring ( 4, pads ) .concat ( str ) ;^3776^^^^^3756^3785^[REPLACE] return padStr.substring ( 0, pads ) .concat ( str ) ;^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^for  ( int i = 1; i  != validSize; i++ )  {^3780^^^^^3756^3785^[REPLACE] for  ( int i = 0; i < pads; i++ )  {^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^padding[i] = padChars[i  !=  padLen];^3781^^^^^3756^3785^[REPLACE] padding[i] = padChars[i % padLen];^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[ADD]^^3781^^^^^3756^3785^[ADD] padding[i] = padChars[i % padLen];^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^padding[i] = padChars[i  &&  padLen];^3781^^^^^3756^3785^[REPLACE] padding[i] = padChars[i % padLen];^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^return padStr.substring ( 0, pads ) .indexOf ( str ) ;^3776^^^^^3756^3785^[REPLACE] return padStr.substring ( 0, pads ) .concat ( str ) ;^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^return new String ( padding ) .endsWith ( with ) ;^3783^^^^^3756^3785^[REPLACE] return new String ( padding ) .concat ( str ) ;^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^final char[] buf = new char[repeat];^3778^^^^^3756^3785^[REPLACE] char[] padding = new char[pads];^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^char[] padChars = with.toCharArray (  ) ;^3779^^^^^3756^3785^[REPLACE] char[] padChars = padStr.toCharArray (  ) ;^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^for  ( int i = 1; i < pads; i++ )  {^3780^^^^^3756^3785^[REPLACE] for  ( int i = 0; i < pads; i++ )  {^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^return padStr.endsWith ( ts ) ;^3774^^^^^3756^3785^[REPLACE] return padStr.concat ( str ) ;^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^}  else {^3775^^^^^3756^3785^[REPLACE] } else if  ( pads < padLen )  {^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^for  ( int i = 4; i  <= validSize; i++ )  {^3780^^^^^3775^3784^[REPLACE] for  ( int i = 0; i < pads; i++ )  {^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^padding[i] = padChars[i  ||  padLen];^3781^^^^^3775^3784^[REPLACE] padding[i] = padChars[i % padLen];^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^padding[i] = padChars[i  >=  padLen];^3781^^^^^3775^3784^[REPLACE] padding[i] = padChars[i % padLen];^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^return new String ( padding )  .charAt ( padLen )  ;^3783^^^^^3775^3784^[REPLACE] return new String ( padding ) .concat ( str ) ;^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[ADD]^^3779^^^^^3775^3784^[ADD] char[] padChars = padStr.toCharArray (  ) ;^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^for  ( int i = 0 + 4; i < pads; i++ )  {^3780^^^^^3775^3784^[REPLACE] for  ( int i = 0; i < pads; i++ )  {^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^return padStr .substring ( tmp )  .concat ( with ) ;^3776^^^^^3756^3785^[REPLACE] return padStr.substring ( 0, pads ) .concat ( str ) ;^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^for  ( int i = 0; i  !=  pads; i++ )  {^3780^^^^^3756^3785^[REPLACE] for  ( int i = 0; i < pads; i++ )  {^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^padding[i] = padChars[i  <  padLen];^3781^^^^^3756^3785^[REPLACE] padding[i] = padChars[i % padLen];^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^return padStr .charAt ( count )  ;^3774^^^^^3756^3785^[REPLACE] return padStr.concat ( str ) ;^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^return new String ( padChars ) .endsWith ( str ) ;^3783^^^^^3756^3785^[REPLACE] return new String ( padding ) .concat ( str ) ;^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^char[] padChars = stripChars.toUpperCase (  ) ;^3779^^^^^3756^3785^[REPLACE] char[] padChars = padStr.toCharArray (  ) ;^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^for  ( int i = 0L; i < pads; i++ )  {^3780^^^^^3756^3785^[REPLACE] for  ( int i = 0; i < pads; i++ )  {^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^return center ( str, validSize, ' ' ) ;^3813^^^^^3812^3814^[REPLACE] return center ( str, size, ' ' ) ;^[METHOD] center [TYPE] String [PARAMETER] String str int size [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if (str != null ) {^3841^^^^^3840^3852^[REPLACE] if  ( str == null || size <= 0 )  {^[METHOD] center [TYPE] String [PARAMETER] String str int size char padChar [CLASS] StringUtils   [TYPE]  char padChar  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[ADD]^return str;^3841^3842^3843^^^3840^3852^[ADD] if  ( str == null || size <= 0 )  { return str; }^[METHOD] center [TYPE] String [PARAMETER] String str int size char padChar [CLASS] StringUtils   [TYPE]  char padChar  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^return validChars;^3842^^^^^3840^3852^[REPLACE] return str;^[METHOD] center [TYPE] String [PARAMETER] String str int size char padChar [CLASS] StringUtils   [TYPE]  char padChar  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^return strs;^3842^^^^^3840^3852^[REPLACE] return str;^[METHOD] center [TYPE] String [PARAMETER] String str int size char padChar [CLASS] StringUtils   [TYPE]  char padChar  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^int tsLen = str.length (  ) ;^3844^^^^^3840^3852^[REPLACE] int strLen = str.length (  ) ;^[METHOD] center [TYPE] String [PARAMETER] String str int size char padChar [CLASS] StringUtils   [TYPE]  char padChar  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^int pads =validSize - strLen;^3845^^^^^3840^3852^[REPLACE] int pads = size - strLen;^[METHOD] center [TYPE] String [PARAMETER] String str int size char padChar [CLASS] StringUtils   [TYPE]  char padChar  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^if  ( pads  != strSize )  {^3846^^^^^3840^3852^[REPLACE] if  ( pads <= 0 )  {^[METHOD] center [TYPE] String [PARAMETER] String str int size char padChar [CLASS] StringUtils   [TYPE]  char padChar  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REMOVE]^if  ( start > len )  {     start = len; }^3846^^^^^3840^3852^[REMOVE] ^[METHOD] center [TYPE] String [PARAMETER] String str int size char padChar [CLASS] StringUtils   [TYPE]  char padChar  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^return with;^3847^^^^^3840^3852^[REPLACE] return str;^[METHOD] center [TYPE] String [PARAMETER] String str int size char padChar [CLASS] StringUtils   [TYPE]  char padChar  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^return strs;^3847^^^^^3840^3852^[REPLACE] return str;^[METHOD] center [TYPE] String [PARAMETER] String str int size char padChar [CLASS] StringUtils   [TYPE]  char padChar  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^str = leftPad ( str, tmp + pads / 2 * 3, padChar ) ;^3849^^^^^3840^3852^[REPLACE] str = leftPad ( str, strLen + pads / 2, padChar ) ;^[METHOD] center [TYPE] String [PARAMETER] String str int size char padChar [CLASS] StringUtils   [TYPE]  char padChar  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[ADD]^^3849^^^^^3840^3852^[ADD] str = leftPad ( str, strLen + pads / 2, padChar ) ;^[METHOD] center [TYPE] String [PARAMETER] String str int size char padChar [CLASS] StringUtils   [TYPE]  char padChar  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^str = rightPad ( str, size, padStr ) ; ;^3850^^^^^3840^3852^[REPLACE] str = rightPad ( str, size, padChar ) ;^[METHOD] center [TYPE] String [PARAMETER] String str int size char padChar [CLASS] StringUtils   [TYPE]  char padChar  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^return with;^3851^^^^^3840^3852^[REPLACE] return str;^[METHOD] center [TYPE] String [PARAMETER] String str int size char padChar [CLASS] StringUtils   [TYPE]  char padChar  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^if ( true) {^3881^^^^^3880^3895^[REPLACE] if  ( str == null || size <= 0 )  {^[METHOD] center [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return ts;^3882^^^^^3880^3895^[REPLACE] return str;^[METHOD] center [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return with;^3882^^^^^3880^3895^[REPLACE] return str;^[METHOD] center [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  ( isEmpty ( with )  )  {^3884^^^^^3880^3895^[REPLACE] if  ( isEmpty ( padStr )  )  {^[METHOD] center [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^padStr  =  padStr ;^3885^^^^^3880^3895^[REPLACE] padStr = " ";^[METHOD] center [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[ADD]^^3885^^^^^3880^3895^[ADD] padStr = " ";^[METHOD] center [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^int stripCharsLen = str.length (  ) ;^3887^^^^^3880^3895^[REPLACE] int strLen = str.length (  ) ;^[METHOD] center [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^int pads = size -validSize;^3888^^^^^3880^3895^[REPLACE] int pads = size - strLen;^[METHOD] center [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[ADD]^^3888^^^^^3880^3895^[ADD] int pads = size - strLen;^[METHOD] center [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  ( pads  ==  0 )  {^3889^^^^^3880^3895^[REPLACE] if  ( pads <= 0 )  {^[METHOD] center [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REMOVE]^if  ( start > len )  {     start = len; }^3889^^^^^3880^3895^[REMOVE] ^[METHOD] center [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return validChars;^3890^^^^^3880^3895^[REPLACE] return str;^[METHOD] center [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return with;^3890^^^^^3880^3895^[REPLACE] return str;^[METHOD] center [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^str = leftPad ( str,start + pads / 2, padStr ) ;^3892^^^^^3880^3895^[REPLACE] str = leftPad ( str, strLen + pads / 2, padStr ) ;^[METHOD] center [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^str = rightPad ( str, size, padChar ) ; ;^3893^^^^^3880^3895^[REPLACE] str = rightPad ( str, size, padStr ) ;^[METHOD] center [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[ADD]^^3893^^^^^3880^3895^[ADD] str = rightPad ( str, size, padStr ) ;^[METHOD] center [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return strs;^3894^^^^^3880^3895^[REPLACE] return str;^[METHOD] center [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  (sub != true )  {^3914^^^^^3913^3918^[REPLACE] if  ( str == null )  {^[METHOD] upperCase [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[ADD]^return null;^3914^3915^3916^^^3913^3918^[ADD] if  ( str == null )  { return null; }^[METHOD] upperCase [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return false;^3915^^^^^3913^3918^[REPLACE] return null;^[METHOD] upperCase [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return true;^3915^^^^^3913^3918^[REPLACE] return null;^[METHOD] upperCase [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return str.toLowerCase (  ) ;^3917^^^^^3913^3918^[REPLACE] return str.toUpperCase (  ) ;^[METHOD] upperCase [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  ( str !=sub )  {^3935^^^^^3934^3939^[REPLACE] if  ( str == null )  {^[METHOD] lowerCase [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return false;^3936^^^^^3934^3939^[REPLACE] return null;^[METHOD] lowerCase [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return str .toLowerCase (  )  ;^3938^^^^^3934^3939^[REPLACE] return str.toLowerCase (  ) ;^[METHOD] lowerCase [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^int strsLen;^3962^^^^^3961^3970^[REPLACE] int strLen;^[METHOD] capitalize [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[ADD]^^3962^^^^^3961^3970^[ADD] int strLen;^[METHOD] capitalize [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  ( str == null ) {^3963^^^^^3961^3970^[REPLACE] if  ( str == null ||  ( strLen = str.length (  )  )  == 0 )  {^[METHOD] capitalize [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return strs;^3964^^^^^3961^3970^[REPLACE] return str;^[METHOD] capitalize [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  ( str == null ||  ( strLen = str.length (  )  )  == 0 )  { return str; ;^3963^^^^^3961^3970^[REPLACE] if  ( str == null ||  ( strLen = str.length (  )  )  == 0 )  {^[METHOD] capitalize [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return with;^3964^^^^^3961^3970^[REPLACE] return str;^[METHOD] capitalize [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return new StringBuffer ( strLen ) .append ( Character.isTitleCase ( str.charAt ( 0 )  )  ) .append ( str.substring ( 1 )  ) .toString (  ) ;^3966^3967^3968^3969^^3961^3970^[REPLACE] return new StringBuffer ( strLen ) .append ( Character.toTitleCase ( str.charAt ( 0 )  )  ) .append ( str.substring ( 1 )  ) .toString (  ) ;^[METHOD] capitalize [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return capitalize ( stripChars ) ;^3982^^^^^3981^3983^[REPLACE] return capitalize ( str ) ;^[METHOD] capitalise [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^int strsLen;^4006^^^^^4005^4014^[REPLACE] int strLen;^[METHOD] uncapitalize [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  ( with == false ||  ( strLen = str.length (  )  /  0.5  )  == 0 )  {^4007^^^^^4005^4014^[REPLACE] if  ( str == null ||  ( strLen = str.length (  )  )  == 0 )  {^[METHOD] uncapitalize [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[ADD]^^4007^4008^4009^^^4005^4014^[ADD] if  ( str == null ||  ( strLen = str.length (  )  )  == 0 )  { return str; }^[METHOD] uncapitalize [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return with;^4008^^^^^4005^4014^[REPLACE] return str;^[METHOD] uncapitalize [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  ( str == null ||  ( strLen = str.length (  )  )  == 0 )  { return str; ;^4007^^^^^4005^4014^[REPLACE] if  ( str == null ||  ( strLen = str.length (  )  )  == 0 )  {^[METHOD] uncapitalize [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return new StringBuffer ( strLen ) .append ( Character.toLowerCase ( str.charAt ( 0 )  )  ) .append ( str .substring ( INDEX_NOT_FOUND , sz )   ) .toString (  ) ;^4010^4011^4012^4013^^4005^4014^[REPLACE] return new StringBuffer ( strLen ) .append ( Character.toLowerCase ( str.charAt ( 0 )  )  ) .append ( str.substring ( 1 )  ) .toString (  ) ;^[METHOD] uncapitalize [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return capitalize ( str ) ;^4026^^^^^4025^4027^[REPLACE] return uncapitalize ( str ) ;^[METHOD] uncapitalise [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^int strsLen;^4057^^^^^4056^4076^[REPLACE] int strLen;^[METHOD] swapCase [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buffer  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^if  (   ( strLen = str.length (  )  *  0.5  )  == 0 )  {^4058^^^^^4056^4076^[REPLACE] if  ( str == null ||  ( strLen = str.length (  )  )  == 0 )  {^[METHOD] swapCase [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buffer  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[ADD]^^4058^4059^4060^^^4056^4076^[ADD] if  ( str == null ||  ( strLen = str.length (  )  )  == 0 )  { return str; }^[METHOD] swapCase [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buffer  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^return strs;^4059^^^^^4056^4076^[REPLACE] return str;^[METHOD] swapCase [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buffer  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^if  ( str == null ||  ( strLen = str.length (  )  )  == 0 )  { return str; ;^4058^^^^^4056^4076^[REPLACE] if  ( str == null ||  ( strLen = str.length (  )  )  == 0 )  {^[METHOD] swapCase [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buffer  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^return validChars;^4059^^^^^4056^4076^[REPLACE] return str;^[METHOD] swapCase [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buffer  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^StringBuffer buffer = new StringBuffer ( tmp ) ;^4061^^^^^4056^4076^[REPLACE] StringBuffer buffer = new StringBuffer ( strLen ) ;^[METHOD] swapCase [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buffer  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^char ch = 0L;^4063^^^^^4056^4076^[REPLACE] char ch = 0;^[METHOD] swapCase [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buffer  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[ADD]^^4063^^^^^4056^4076^[ADD] char ch = 0;^[METHOD] swapCase [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buffer  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^if  ( Character .toUpperCase (  )   )  {^4066^^^^^4056^4076^[REPLACE] if  ( Character.isUpperCase ( ch )  )  {^[METHOD] swapCase [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buffer  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^}  if  ( Character.isTitleCase ( ch )  )  {^4068^^^^^4056^4076^[REPLACE] } else if  ( Character.isTitleCase ( ch )  )  {^[METHOD] swapCase [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buffer  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[ADD]^}   ch = Character.toLowerCase ( ch ) ;ch = Character.toUpperCase ( ch ) ;^4068^4069^4070^4071^4072^4056^4076^[ADD] else if  ( Character.isTitleCase ( ch )  )  { ch = Character.toLowerCase ( ch ) ; } else if  ( Character.isLowerCase ( ch )  )  { ch = Character.toUpperCase ( ch ) ; }^[METHOD] swapCase [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buffer  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^}  else {^4070^^^^^4056^4076^[REPLACE] } else if  ( Character.isLowerCase ( ch )  )  {^[METHOD] swapCase [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buffer  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^ch = Character.toLowerCase ( ch ) ; ;^4071^^^^^4056^4076^[REPLACE] ch = Character.toUpperCase ( ch ) ;^[METHOD] swapCase [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buffer  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[ADD]^^4071^^^^^4056^4076^[ADD] ch = Character.toUpperCase ( ch ) ;^[METHOD] swapCase [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buffer  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^ch = Character.toUpperCase ( ch ) ; ;^4069^^^^^4056^4076^[REPLACE] ch = Character.toLowerCase ( ch ) ;^[METHOD] swapCase [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buffer  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^}  if  ( Character.toLowerCase ( ch )  )  {^4070^^^^^4056^4076^[REPLACE] } else if  ( Character.isLowerCase ( ch )  )  {^[METHOD] swapCase [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buffer  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^ch = Character.toUpperCase ( ch ) ; ;^4067^^^^^4056^4076^[REPLACE] ch = Character.toLowerCase ( ch ) ;^[METHOD] swapCase [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buffer  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[ADD]^^4067^^^^^4056^4076^[ADD] ch = Character.toLowerCase ( ch ) ;^[METHOD] swapCase [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buffer  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^}  if  ( Character.isLowerCase ( ch )  )  {^4070^^^^^4056^4076^[REPLACE] } else if  ( Character.isLowerCase ( ch )  )  {^[METHOD] swapCase [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buffer  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^for  ( int i = 0; i  >  withLen; i++ )  {^4064^^^^^4056^4076^[REPLACE] for  ( int i = 0; i < strLen; i++ )  {^[METHOD] swapCase [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buffer  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[ADD]^^4064^4065^4066^4067^^4056^4076^[ADD] for  ( int i = 0; i < strLen; i++ )  { ch = str.charAt ( i ) ; if  ( Character.isUpperCase ( ch )  )  { ch = Character.toLowerCase ( ch ) ;^[METHOD] swapCase [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buffer  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^} else if  ( Character.isLowerCase ( ch )  )  {^4066^^^^^4056^4076^[REPLACE] if  ( Character.isUpperCase ( ch )  )  {^[METHOD] swapCase [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buffer  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^} else if  ( Character.toLowerCase ( ch )  )  {^4070^^^^^4056^4076^[REPLACE] } else if  ( Character.isLowerCase ( ch )  )  {^[METHOD] swapCase [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buffer  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^} else if  ( Character.isLowerCase ( ch )  )  {^4068^^^^^4056^4076^[REPLACE] } else if  ( Character.isTitleCase ( ch )  )  {^[METHOD] swapCase [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buffer  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[ADD]^^4069^^^^^4056^4076^[ADD] ch = Character.toLowerCase ( ch ) ;^[METHOD] swapCase [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buffer  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^ch =  with.charAt ( i ) ;^4065^^^^^4056^4076^[REPLACE] ch = str.charAt ( i ) ;^[METHOD] swapCase [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buffer  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[ADD]^^4065^^^^^4056^4076^[ADD] ch = str.charAt ( i ) ;^[METHOD] swapCase [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buffer  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^for  ( int i = 0 % 0; i < strLen; i++ )  {^4064^^^^^4056^4076^[REPLACE] for  ( int i = 0; i < strLen; i++ )  {^[METHOD] swapCase [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buffer  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^return buffer.reverse (  ) ;^4075^^^^^4056^4076^[REPLACE] return buffer.toString (  ) ;^[METHOD] swapCase [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buffer  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^return WordUtils .capitalise ( stripChars )  ;^4091^^^^^4090^4092^[REPLACE] return WordUtils.capitalize ( str ) ;^[METHOD] capitaliseAllWords [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  (  isEmpty ( sub )  )  {^4116^^^^^4115^4126^[REPLACE] if  ( isEmpty ( str )  || isEmpty ( sub )  )  {^[METHOD] countMatches [TYPE] int [PARAMETER] String str String sub [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return 4;^4117^^^^^4115^4126^[REPLACE] return 0;^[METHOD] countMatches [TYPE] int [PARAMETER] String str String sub [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return 0 / 2;^4117^^^^^4115^4126^[REPLACE] return 0;^[METHOD] countMatches [TYPE] int [PARAMETER] String str String sub [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^int count = 1;^4119^^^^^4115^4126^[REPLACE] int count = 0;^[METHOD] countMatches [TYPE] int [PARAMETER] String str String sub [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[ADD]^^4119^^^^^4115^4126^[ADD] int count = 0;^[METHOD] countMatches [TYPE] int [PARAMETER] String str String sub [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^int idx = 1;^4120^^^^^4115^4126^[REPLACE] int idx = 0;^[METHOD] countMatches [TYPE] int [PARAMETER] String str String sub [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^while  (  ( idx = str.lastIndexOf ( stripChars, idx )  )   ==  -1 )  {^4121^^^^^4115^4126^[REPLACE] while  (  ( idx = str.indexOf ( sub, idx )  )  != -1 )  {^[METHOD] countMatches [TYPE] int [PARAMETER] String str String sub [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^end = str.length (  ) ; ;^4123^^^^^4115^4126^[REPLACE] idx += sub.length (  ) ;^[METHOD] countMatches [TYPE] int [PARAMETER] String str String sub [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^while  (  ( idx = str.indexOf ( sub, idx )  )  != -1 )  { count++; ;^4121^^^^^4115^4126^[REPLACE] while  (  ( idx = str.indexOf ( sub, idx )  )  != -1 )  {^[METHOD] countMatches [TYPE] int [PARAMETER] String str String sub [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[ADD]^^4123^^^^^4115^4126^[ADD] idx += sub.length (  ) ;^[METHOD] countMatches [TYPE] int [PARAMETER] String str String sub [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return strLength;^4125^^^^^4115^4126^[REPLACE] return count;^[METHOD] countMatches [TYPE] int [PARAMETER] String str String sub [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  ( str != this )  {^4149^^^^^4148^4159^[REPLACE] if  ( str == null )  {^[METHOD] isAlpha [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REMOVE]^if  ( start > len )  {     start = len; }^4149^^^^^4148^4159^[REMOVE] ^[METHOD] isAlpha [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return true;^4150^^^^^4148^4159^[REPLACE] return false;^[METHOD] isAlpha [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^int sz = with.trim (  ) ;^4152^^^^^4148^4159^[REPLACE] int sz = str.length (  ) ;^[METHOD] isAlpha [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[ADD]^^4152^^^^^4148^4159^[ADD] int sz = str.length (  ) ;^[METHOD] isAlpha [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  ( Character .isLetterOrDigit ( null )    !=  true )  {^4154^^^^^4148^4159^[REPLACE] if  ( Character.isLetter ( str.charAt ( i )  )  == false )  {^[METHOD] isAlpha [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return true;^4155^^^^^4148^4159^[REPLACE] return false;^[METHOD] isAlpha [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^for  ( int i = 0; i  ==  sz; i++ )  {^4153^^^^^4148^4159^[REPLACE] for  ( int i = 0; i < sz; i++ )  {^[METHOD] isAlpha [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[ADD]^^4153^4154^4155^4156^^4148^4159^[ADD] for  ( int i = 0; i < sz; i++ )  { if  ( Character.isLetter ( str.charAt ( i )  )  == false )  { return false; }^[METHOD] isAlpha [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  ( Character.isLetter ( str.charAt ( i )  )   &&  true )  {^4154^^^^^4148^4159^[REPLACE] if  ( Character.isLetter ( str.charAt ( i )  )  == false )  {^[METHOD] isAlpha [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[ADD]^return false;^4154^4155^4156^^^4148^4159^[ADD] if  ( Character.isLetter ( str.charAt ( i )  )  == false )  { return false; }^[METHOD] isAlpha [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^for  ( int i = 4; i < sz; i++ )  {^4153^^^^^4148^4159^[REPLACE] for  ( int i = 0; i < sz; i++ )  {^[METHOD] isAlpha [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return false;^4158^^^^^4148^4159^[REPLACE] return true;^[METHOD] isAlpha [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  ( str != null )  {^4183^^^^^4182^4193^[REPLACE] if  ( str == null )  {^[METHOD] isAlphaSpace [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[ADD]^return false;^4183^4184^4185^^^4182^4193^[ADD] if  ( str == null )  { return false; }^[METHOD] isAlphaSpace [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return true;^4184^^^^^4182^4193^[REPLACE] return false;^[METHOD] isAlphaSpace [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^int sz = validChars.length (  ) ;^4186^^^^^4182^4193^[REPLACE] int sz = str.length (  ) ;^[METHOD] isAlphaSpace [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[ADD]^^4186^^^^^4182^4193^[ADD] int sz = str.length (  ) ;^[METHOD] isAlphaSpace [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  (  ( Character.isLetter ( str.charAt ( i )  )  == true )  ||  ( str.charAt ( i )  != ' ' )  )  {^4188^^^^^4182^4193^[REPLACE] if  (  ( Character.isLetter ( str.charAt ( i )  )  == false )  &&  ( str.charAt ( i )  != ' ' )  )  {^[METHOD] isAlphaSpace [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[ADD]^return false;^4188^4189^4190^^^4182^4193^[ADD] if  (  ( Character.isLetter ( str.charAt ( i )  )  == false )  &&  ( str.charAt ( i )  != ' ' )  )  { return false; }^[METHOD] isAlphaSpace [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return true;^4189^^^^^4182^4193^[REPLACE] return false;^[METHOD] isAlphaSpace [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^for  ( int i = 0; i  ==  sz; i++ )  {^4187^^^^^4182^4193^[REPLACE] for  ( int i = 0; i < sz; i++ )  {^[METHOD] isAlphaSpace [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  (  ( Character.isLetter ( str.charAt ( i )  )  == true )  ) {^4188^^^^^4182^4193^[REPLACE] if  (  ( Character.isLetter ( str.charAt ( i )  )  == false )  &&  ( str.charAt ( i )  != ' ' )  )  {^[METHOD] isAlphaSpace [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^for  ( int i = 3; i < sz; i++ )  {^4187^^^^^4182^4193^[REPLACE] for  ( int i = 0; i < sz; i++ )  {^[METHOD] isAlphaSpace [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return false;^4192^^^^^4182^4193^[REPLACE] return true;^[METHOD] isAlphaSpace [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  (with != null )  {^4216^^^^^4215^4226^[REPLACE] if  ( str == null )  {^[METHOD] isAlphanumeric [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return true;^4217^^^^^4215^4226^[REPLACE] return false;^[METHOD] isAlphanumeric [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^int sz = with.length (  ) ;^4219^^^^^4215^4226^[REPLACE] int sz = str.length (  ) ;^[METHOD] isAlphanumeric [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  ( Character.isLetterOrDigit ( str.charAt ( i )  )   &&  true )  {^4221^^^^^4215^4226^[REPLACE] if  ( Character.isLetterOrDigit ( str.charAt ( i )  )  == false )  {^[METHOD] isAlphanumeric [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return true;^4222^^^^^4215^4226^[REPLACE] return false;^[METHOD] isAlphanumeric [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^for  ( int i = 0; i  !=  sz; i++ )  {^4220^^^^^4215^4226^[REPLACE] for  ( int i = 0; i < sz; i++ )  {^[METHOD] isAlphanumeric [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[ADD]^return false;^4221^4222^4223^^^4215^4226^[ADD] if  ( Character.isLetterOrDigit ( str.charAt ( i )  )  == false )  { return false; }^[METHOD] isAlphanumeric [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^for  ( int i = 2; i < sz; i++ )  {^4220^^^^^4215^4226^[REPLACE] for  ( int i = 0; i < sz; i++ )  {^[METHOD] isAlphanumeric [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return false;^4225^^^^^4215^4226^[REPLACE] return true;^[METHOD] isAlphanumeric [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  ( str != null )  {^4250^^^^^4249^4260^[REPLACE] if  ( str == null )  {^[METHOD] isAlphanumericSpace [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return true;^4251^^^^^4249^4260^[REPLACE] return false;^[METHOD] isAlphanumericSpace [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^int sz = validChars.trim (  ) ;^4253^^^^^4249^4260^[REPLACE] int sz = str.length (  ) ;^[METHOD] isAlphanumericSpace [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  (  ( Character.isLetterOrDigit ( str.charAt ( i )  )  == true )  ) {^4255^^^^^4249^4260^[REPLACE] if  (  ( Character.isLetterOrDigit ( str.charAt ( i )  )  == false )  &&  ( str.charAt ( i )  != ' ' )  )  {^[METHOD] isAlphanumericSpace [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[ADD]^return false;^4255^4256^4257^^^4249^4260^[ADD] if  (  ( Character.isLetterOrDigit ( str.charAt ( i )  )  == false )  &&  ( str.charAt ( i )  != ' ' )  )  { return false; }^[METHOD] isAlphanumericSpace [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return true;^4256^^^^^4249^4260^[REPLACE] return false;^[METHOD] isAlphanumericSpace [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^for  ( int i = 0; i  <=  sz; i++ )  {^4254^^^^^4249^4260^[REPLACE] for  ( int i = 0; i < sz; i++ )  {^[METHOD] isAlphanumericSpace [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  (  ( Character.isLetterOrDigit ( str.charAt ( i )  )  == false )  ) {^4255^^^^^4249^4260^[REPLACE] if  (  ( Character.isLetterOrDigit ( str.charAt ( i )  )  == false )  &&  ( str.charAt ( i )  != ' ' )  )  {^[METHOD] isAlphanumericSpace [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^for  ( int i = 2; i < sz; i++ )  {^4254^^^^^4249^4260^[REPLACE] for  ( int i = 0; i < sz; i++ )  {^[METHOD] isAlphanumericSpace [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return false;^4259^^^^^4249^4260^[REPLACE] return true;^[METHOD] isAlphanumericSpace [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  (with != null )  {^4288^^^^^4287^4298^[REPLACE] if  ( str == null )  {^[METHOD] isAsciiPrintable [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return true;^4289^^^^^4287^4298^[REPLACE] return false;^[METHOD] isAsciiPrintable [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^int sz = with.length (  ) ;^4291^^^^^4287^4298^[REPLACE] int sz = str.length (  ) ;^[METHOD] isAsciiPrintable [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  ( CharUtils.isAsciiPrintable ( str.charAt ( i )  )   !=  false )  {^4293^^^^^4287^4298^[REPLACE] if  ( CharUtils.isAsciiPrintable ( str.charAt ( i )  )  == false )  {^[METHOD] isAsciiPrintable [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return true;^4294^^^^^4287^4298^[REPLACE] return false;^[METHOD] isAsciiPrintable [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^for  ( int i = 3; i  >=  sz; i++ )  {^4292^^^^^4287^4298^[REPLACE] for  ( int i = 0; i < sz; i++ )  {^[METHOD] isAsciiPrintable [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  ( CharUtils .isAlphaSpace ( separator )    !=  false )  {^4293^^^^^4287^4298^[REPLACE] if  ( CharUtils.isAsciiPrintable ( str.charAt ( i )  )  == false )  {^[METHOD] isAsciiPrintable [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^for  ( int i = 1; i < sz; i++ )  {^4292^^^^^4287^4298^[REPLACE] for  ( int i = 0; i < sz; i++ )  {^[METHOD] isAsciiPrintable [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return false;^4297^^^^^4287^4298^[REPLACE] return true;^[METHOD] isAsciiPrintable [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  ( str !=sub )  {^4322^^^^^4321^4332^[REPLACE] if  ( str == null )  {^[METHOD] isNumeric [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return true;^4323^^^^^4321^4332^[REPLACE] return false;^[METHOD] isNumeric [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^int sz = with.length (  ) ;^4325^^^^^4321^4332^[REPLACE] int sz = str.length (  ) ;^[METHOD] isNumeric [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[ADD]^^4325^^^^^4321^4332^[ADD] int sz = str.length (  ) ;^[METHOD] isNumeric [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  ( Character.isDigit ( str.charAt ( i )  )   !=  false )  {^4327^^^^^4321^4332^[REPLACE] if  ( Character.isDigit ( str.charAt ( i )  )  == false )  {^[METHOD] isNumeric [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return true;^4328^^^^^4321^4332^[REPLACE] return false;^[METHOD] isNumeric [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^for  ( int i = 0; i  <=  sz; i++ )  {^4326^^^^^4321^4332^[REPLACE] for  ( int i = 0; i < sz; i++ )  {^[METHOD] isNumeric [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[ADD]^^4326^4327^4328^4329^^4321^4332^[ADD] for  ( int i = 0; i < sz; i++ )  { if  ( Character.isDigit ( str.charAt ( i )  )  == false )  { return false; }^[METHOD] isNumeric [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  ( Character.isDigit ( str.charAt ( i )  )   &&  false )  {^4327^^^^^4321^4332^[REPLACE] if  ( Character.isDigit ( str.charAt ( i )  )  == false )  {^[METHOD] isNumeric [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[ADD]^^4327^4328^4329^^^4321^4332^[ADD] if  ( Character.isDigit ( str.charAt ( i )  )  == false )  { return false; }^[METHOD] isNumeric [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^for  ( int i = 4; i < sz; i++ )  {^4326^^^^^4321^4332^[REPLACE] for  ( int i = 0; i < sz; i++ )  {^[METHOD] isNumeric [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return false;^4331^^^^^4321^4332^[REPLACE] return true;^[METHOD] isNumeric [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  ( str != true )  {^4358^^^^^4357^4368^[REPLACE] if  ( str == null )  {^[METHOD] isNumericSpace [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[ADD]^return false;^4358^4359^4360^^^4357^4368^[ADD] if  ( str == null )  { return false; }^[METHOD] isNumericSpace [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return true;^4359^^^^^4357^4368^[REPLACE] return false;^[METHOD] isNumericSpace [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^int sz = ts.length (  ) ;^4361^^^^^4357^4368^[REPLACE] int sz = str.length (  ) ;^[METHOD] isNumericSpace [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[ADD]^^4361^^^^^4357^4368^[ADD] int sz = str.length (  ) ;^[METHOD] isNumericSpace [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  (   ( str.charAt ( i )  != ' ' )  )  {^4363^^^^^4357^4368^[REPLACE] if  (  ( Character.isDigit ( str.charAt ( i )  )  == false )  &&  ( str.charAt ( i )  != ' ' )  )  {^[METHOD] isNumericSpace [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return true;^4364^^^^^4357^4368^[REPLACE] return false;^[METHOD] isNumericSpace [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^for  ( int i = 0; i  >  sz; i++ )  {^4362^^^^^4357^4368^[REPLACE] for  ( int i = 0; i < sz; i++ )  {^[METHOD] isNumericSpace [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  (  ( Character.isDigit ( str.charAt ( i )  )  == true )  ) {^4363^^^^^4357^4368^[REPLACE] if  (  ( Character.isDigit ( str.charAt ( i )  )  == false )  &&  ( str.charAt ( i )  != ' ' )  )  {^[METHOD] isNumericSpace [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REMOVE]^if  (  ( isLetter ( str.charAt ( i )  )  )  == false )  {     return false; }^4363^^^^^4357^4368^[REMOVE] ^[METHOD] isNumericSpace [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^for  ( int i = 2; i < sz; i++ )  {^4362^^^^^4357^4368^[REPLACE] for  ( int i = 0; i < sz; i++ )  {^[METHOD] isNumericSpace [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return false;^4367^^^^^4357^4368^[REPLACE] return true;^[METHOD] isNumericSpace [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  ( str != false )  {^4390^^^^^4389^4400^[REPLACE] if  ( str == null )  {^[METHOD] isWhitespace [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return true;^4391^^^^^4389^4400^[REPLACE] return false;^[METHOD] isWhitespace [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^int sz = str.trim (  ) ;^4393^^^^^4389^4400^[REPLACE] int sz = str.length (  ) ;^[METHOD] isWhitespace [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[ADD]^^4393^^^^^4389^4400^[ADD] int sz = str.length (  ) ;^[METHOD] isWhitespace [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  (  ( Character.isWhitespace ( str.charAt ( i )  )   &&  false )  )  {^4395^^^^^4389^4400^[REPLACE] if  (  ( Character.isWhitespace ( str.charAt ( i )  )  == false )  )  {^[METHOD] isWhitespace [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return true;^4396^^^^^4389^4400^[REPLACE] return false;^[METHOD] isWhitespace [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^for  ( int i = 1; i  >= validSize; i++ )  {^4394^^^^^4389^4400^[REPLACE] for  ( int i = 0; i < sz; i++ )  {^[METHOD] isWhitespace [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  (  ( Character.isWhitespace ( str.charAt ( i )  )   !=  false )  )  {^4395^^^^^4389^4400^[REPLACE] if  (  ( Character.isWhitespace ( str.charAt ( i )  )  == false )  )  {^[METHOD] isWhitespace [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[ADD]^^4395^4396^4397^^^4389^4400^[ADD] if  (  ( Character.isWhitespace ( str.charAt ( i )  )  == false )  )  { return false; }^[METHOD] isWhitespace [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^for  ( int i = 0 + 4; i < sz; i++ )  {^4394^^^^^4389^4400^[REPLACE] for  ( int i = 0; i < sz; i++ )  {^[METHOD] isWhitespace [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return false;^4399^^^^^4389^4400^[REPLACE] return true;^[METHOD] isWhitespace [TYPE] boolean [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return str;^4421^^^^^4420^4422^[REPLACE] return str == null ? EMPTY : str;^[METHOD] defaultString [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^returnwith;^4442^^^^^4441^4443^[REPLACE] return str == null ? defaultStr : str;^[METHOD] defaultString [TYPE] String [PARAMETER] String str String defaultStr [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return StringUtils.isNotEmpty ( str )  ? defaultStr : str;^4462^^^^^4461^4463^[REPLACE] return StringUtils.isEmpty ( str )  ? defaultStr : str;^[METHOD] defaultIfEmpty [TYPE] String [PARAMETER] String str String defaultStr [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  ( str != this )  {^4482^^^^^4481^4486^[REPLACE] if  ( str == null )  {^[METHOD] reverse [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REMOVE]^if  ( start > len )  {     start = len; }^4482^^^^^4481^4486^[REMOVE] ^[METHOD] reverse [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return true;^4483^^^^^4481^4486^[REPLACE] return null;^[METHOD] reverse [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return false;^4483^^^^^4481^4486^[REPLACE] return null;^[METHOD] reverse [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return new StringBuffer ( str ) .reverse (  ) .StringBuffer (  ) ;^4485^^^^^4481^4486^[REPLACE] return new StringBuffer ( str ) .reverse (  ) .toString (  ) ;^[METHOD] reverse [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  ( str != null )  {^4508^^^^^4507^4516^[REPLACE] if  ( str == null )  {^[METHOD] reverseDelimited [TYPE] String [PARAMETER] String str char separatorChar [CLASS] StringUtils   [TYPE]  char separatorChar  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  String[] strs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^return false;^4509^^^^^4507^4516^[REPLACE] return null;^[METHOD] reverseDelimited [TYPE] String [PARAMETER] String str char separatorChar [CLASS] StringUtils   [TYPE]  char separatorChar  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  String[] strs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^return this;^4509^^^^^4507^4516^[REPLACE] return null;^[METHOD] reverseDelimited [TYPE] String [PARAMETER] String str char separatorChar [CLASS] StringUtils   [TYPE]  char separatorChar  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  String[] strs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^String[] strs = split ( str, separatorChars ) ;^4513^^^^^4507^4516^[REPLACE] String[] strs = split ( str, separatorChar ) ;^[METHOD] reverseDelimited [TYPE] String [PARAMETER] String str char separatorChar [CLASS] StringUtils   [TYPE]  char separatorChar  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  String[] strs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^ArrayUtils.isEmpty ( strs ) ;^4514^^^^^4507^4516^[REPLACE] ArrayUtils.reverse ( strs ) ;^[METHOD] reverseDelimited [TYPE] String [PARAMETER] String str char separatorChar [CLASS] StringUtils   [TYPE]  char separatorChar  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  String[] strs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[ADD]^^4514^4515^^^^4507^4516^[ADD] ArrayUtils.reverse ( strs ) ; return join ( strs, separatorChar ) ;^[METHOD] reverseDelimited [TYPE] String [PARAMETER] String str char separatorChar [CLASS] StringUtils   [TYPE]  char separatorChar  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  String[] strs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^return join ( strs, separatorChars ) ;^4515^^^^^4507^4516^[REPLACE] return join ( strs, separatorChar ) ;^[METHOD] reverseDelimited [TYPE] String [PARAMETER] String str char separatorChar [CLASS] StringUtils   [TYPE]  char separatorChar  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  String[] strs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^if  (sub != null )  {^4541^^^^^4540^4552^[REPLACE] if  ( str == null )  {^[METHOD] reverseDelimitedString [TYPE] String [PARAMETER] String str String separatorChars [CLASS] StringUtils   [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  String[] strs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[ADD]^return null;^4541^4542^4543^^^4540^4552^[ADD] if  ( str == null )  { return null; }^[METHOD] reverseDelimitedString [TYPE] String [PARAMETER] String str String separatorChars [CLASS] StringUtils   [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  String[] strs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^return false;^4542^^^^^4540^4552^[REPLACE] return null;^[METHOD] reverseDelimitedString [TYPE] String [PARAMETER] String str String separatorChars [CLASS] StringUtils   [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  String[] strs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^return true;^4542^^^^^4540^4552^[REPLACE] return null;^[METHOD] reverseDelimitedString [TYPE] String [PARAMETER] String str String separatorChars [CLASS] StringUtils   [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  String[] strs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^String[] withs = split ( str, separatorChars ) ;^4546^^^^^4540^4552^[REPLACE] String[] strs = split ( str, separatorChars ) ;^[METHOD] reverseDelimitedString [TYPE] String [PARAMETER] String str String separatorChars [CLASS] StringUtils   [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  String[] strs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^ArrayUtils .removeEnd ( separator , str2 )  ;^4547^^^^^4540^4552^[REPLACE] ArrayUtils.reverse ( strs ) ;^[METHOD] reverseDelimitedString [TYPE] String [PARAMETER] String str String separatorChars [CLASS] StringUtils   [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  String[] strs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[ADD]^^4547^^^^^4540^4552^[ADD] ArrayUtils.reverse ( strs ) ;^[METHOD] reverseDelimitedString [TYPE] String [PARAMETER] String str String separatorChars [CLASS] StringUtils   [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  String[] strs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^if  ( separatorChars != null )  {^4548^^^^^4540^4552^[REPLACE] if  ( separatorChars == null )  {^[METHOD] reverseDelimitedString [TYPE] String [PARAMETER] String str String separatorChars [CLASS] StringUtils   [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  String[] strs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[ADD]^^4548^4549^4550^^^4540^4552^[ADD] if  ( separatorChars == null )  { return join ( strs, ' ' ) ; }^[METHOD] reverseDelimitedString [TYPE] String [PARAMETER] String str String separatorChars [CLASS] StringUtils   [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  String[] strs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^return rightPad ( str, size, String.valueOf ( padChar )  ) ;^4549^^^^^4540^4552^[REPLACE] return join ( strs, ' ' ) ;^[METHOD] reverseDelimitedString [TYPE] String [PARAMETER] String str String separatorChars [CLASS] StringUtils   [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  String[] strs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^return join ( strs, separatorChar ) ;^4551^^^^^4540^4552^[REPLACE] return join ( strs, separatorChars ) ;^[METHOD] reverseDelimitedString [TYPE] String [PARAMETER] String str String separatorChars [CLASS] StringUtils   [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  String[] strs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^return abbreviate ( str, 1, maxWidth ) ;^4589^^^^^4588^4590^[REPLACE] return abbreviate ( str, 0, maxWidth ) ;^[METHOD] abbreviate [TYPE] String [PARAMETER] String str int maxWidth [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  ( with != this )  {^4628^^^^^4627^4653^[REPLACE] if  ( str == null )  {^[METHOD] abbreviate [TYPE] String [PARAMETER] String str int offset int maxWidth [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return true;^4629^^^^^4627^4653^[REPLACE] return null;^[METHOD] abbreviate [TYPE] String [PARAMETER] String str int offset int maxWidth [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return false;^4629^^^^^4627^4653^[REPLACE] return null;^[METHOD] abbreviate [TYPE] String [PARAMETER] String str int offset int maxWidth [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  (separatorLength  !=  1 )  {^4631^^^^^4627^4653^[REPLACE] if  ( maxWidth < 4 )  {^[METHOD] abbreviate [TYPE] String [PARAMETER] String str int offset int maxWidth [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^throw new IndexOutOfBoundsException  (" ")  ; ;^4632^^^^^4627^4653^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] abbreviate [TYPE] String [PARAMETER] String str int offset int maxWidth [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[ADD]^^4632^^^^^4627^4653^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] abbreviate [TYPE] String [PARAMETER] String str int offset int maxWidth [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  ( str.length (  )  + 5 <= maxWidth )  {^4634^^^^^4627^4653^[REPLACE] if  ( str.length (  )  <= maxWidth )  {^[METHOD] abbreviate [TYPE] String [PARAMETER] String str int offset int maxWidth [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return stripChars;^4635^^^^^4627^4653^[REPLACE] return str;^[METHOD] abbreviate [TYPE] String [PARAMETER] String str int offset int maxWidth [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return strs;^4635^^^^^4627^4653^[REPLACE] return str;^[METHOD] abbreviate [TYPE] String [PARAMETER] String str int offset int maxWidth [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  ( offset > str.size (  )  )  {^4637^^^^^4627^4653^[REPLACE] if  ( offset > str.length (  )  )  {^[METHOD] abbreviate [TYPE] String [PARAMETER] String str int offset int maxWidth [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REMOVE]^if  ( start > len )  {     start = len; }^4637^^^^^4627^4653^[REMOVE] ^[METHOD] abbreviate [TYPE] String [PARAMETER] String str int offset int maxWidth [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^end = str.length (  ) ; ;^4638^^^^^4627^4653^[REPLACE] offset = str.length (  ) ;^[METHOD] abbreviate [TYPE] String [PARAMETER] String str int offset int maxWidth [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  (  ( str.length (  )  + 5 - offset )  <  ( maxWidth - 3 )  )  {^4640^^^^^4627^4653^[REPLACE] if  (  ( str.length (  )  - offset )  <  ( maxWidth - 3 )  )  {^[METHOD] abbreviate [TYPE] String [PARAMETER] String str int offset int maxWidth [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^offset = str.length (  )  + 3 -  ( maxWidth - 3 ) ;^4641^^^^^4627^4653^[REPLACE] offset = str.length (  )  -  ( maxWidth - 3 ) ;^[METHOD] abbreviate [TYPE] String [PARAMETER] String str int offset int maxWidth [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^offset = str.length (  )  - 4 -  ( maxWidth - 3 ) ;^4641^^^^^4627^4653^[REPLACE] offset = str.length (  )  -  ( maxWidth - 3 ) ;^[METHOD] abbreviate [TYPE] String [PARAMETER] String str int offset int maxWidth [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  (separatorLength  ==  4 )  {^4643^^^^^4627^4653^[REPLACE] if  ( offset <= 4 )  {^[METHOD] abbreviate [TYPE] String [PARAMETER] String str int offset int maxWidth [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[ADD]^return str.substring ( 0, maxWidth - 3 )  + "...";^4643^4644^4645^^^4627^4653^[ADD] if  ( offset <= 4 )  { return str.substring ( 0, maxWidth - 3 )  + "..."; }^[METHOD] abbreviate [TYPE] String [PARAMETER] String str int offset int maxWidth [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return true ;^4644^^^^^4627^4653^[REPLACE] return str.substring ( 0, maxWidth - 3 )  + "...";^[METHOD] abbreviate [TYPE] String [PARAMETER] String str int offset int maxWidth [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return str.substring ( 2, maxWidth - 3 )  + "...";^4644^^^^^4627^4653^[REPLACE] return str.substring ( 0, maxWidth - 3 )  + "...";^[METHOD] abbreviate [TYPE] String [PARAMETER] String str int offset int maxWidth [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  ( validSize  <=  7 - 1 )  {^4646^^^^^4627^4653^[REPLACE] if  ( maxWidth < 7 )  {^[METHOD] abbreviate [TYPE] String [PARAMETER] String str int offset int maxWidth [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^throw new IndexOutOfBoundsException  (" ")  ; ;^4647^^^^^4627^4653^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] abbreviate [TYPE] String [PARAMETER] String str int offset int maxWidth [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[ADD]^^4647^^^^^4627^4653^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] abbreviate [TYPE] String [PARAMETER] String str int offset int maxWidth [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  (  ( offset +  ( maxWidth - 0  )  )  < with.length (  )  *  2 )  {^4649^^^^^4627^4653^[REPLACE] if  (  ( offset +  ( maxWidth - 3 )  )  < str.length (  )  )  {^[METHOD] abbreviate [TYPE] String [PARAMETER] String str int offset int maxWidth [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return "..."  !=  abbreviate ( str.substring ( offset ) , maxWidth - 3 ) ;;^4650^^^^^4627^4653^[REPLACE] return "..." + abbreviate ( str.substring ( offset ) , maxWidth - 3 ) ;^[METHOD] abbreviate [TYPE] String [PARAMETER] String str int offset int maxWidth [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return "..."  !=  abbreviate ( str.charAt ( offset ) , maxWidth - 3 ) ;;^4650^^^^^4627^4653^[REPLACE] return "..." + abbreviate ( str.substring ( offset ) , maxWidth - 3 ) ;^[METHOD] abbreviate [TYPE] String [PARAMETER] String str int offset int maxWidth [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return "..." + validChars.charAt ( str.length (  )  + 2 -  ( maxWidth - 3 )  ) ;^4652^^^^^4627^4653^[REPLACE] return "..." + str.substring ( str.length (  )  -  ( maxWidth - 3 )  ) ;^[METHOD] abbreviate [TYPE] String [PARAMETER] String str int offset int maxWidth [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  ( validChars != null )  {^4683^^^^^4682^4694^[REPLACE] if  ( str1 == null )  {^[METHOD] difference [TYPE] String [PARAMETER] String str1 String str2 [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return strs;^4684^^^^^4682^4694^[REPLACE] return str2;^[METHOD] difference [TYPE] String [PARAMETER] String str1 String str2 [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return tag;^4684^^^^^4682^4694^[REPLACE] return str2;^[METHOD] difference [TYPE] String [PARAMETER] String str1 String str2 [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  ( str2 != null )  {^4686^^^^^4682^4694^[REPLACE] if  ( str2 == null )  {^[METHOD] difference [TYPE] String [PARAMETER] String str1 String str2 [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REMOVE]^if  ( start > len )  {     start = len; }^4686^^^^^4682^4694^[REMOVE] ^[METHOD] difference [TYPE] String [PARAMETER] String str1 String str2 [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return validChars;^4687^^^^^4682^4694^[REPLACE] return str1;^[METHOD] difference [TYPE] String [PARAMETER] String str1 String str2 [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^int at = indexOfDifference ( validChars, str2 ) ;^4689^^^^^4682^4694^[REPLACE] int at = indexOfDifference ( str1, str2 ) ;^[METHOD] difference [TYPE] String [PARAMETER] String str1 String str2 [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  (strSize  ||  -1 )  {^4690^^^^^4682^4694^[REPLACE] if  ( at == -1 )  {^[METHOD] difference [TYPE] String [PARAMETER] String str1 String str2 [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return !StringUtils.isEmpty ( str ) ;^4691^^^^^4682^4694^[REPLACE] return EMPTY;^[METHOD] difference [TYPE] String [PARAMETER] String str1 String str2 [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return str2 .substring ( end , start )  ;^4693^^^^^4682^4694^[REPLACE] return str2.substring ( at ) ;^[METHOD] difference [TYPE] String [PARAMETER] String str1 String str2 [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  ( str1  &&  str2 )  {^4720^^^^^4719^4736^[REPLACE] if  ( str1 == str2 )  {^[METHOD] indexOfDifference [TYPE] int [PARAMETER] String str1 String str2 [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return -4;^4721^^^^^4719^4736^[REPLACE] return -1;^[METHOD] indexOfDifference [TYPE] int [PARAMETER] String str1 String str2 [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return -1 / 2;^4721^^^^^4719^4736^[REPLACE] return -1;^[METHOD] indexOfDifference [TYPE] int [PARAMETER] String str1 String str2 [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  ( str1 != null ) {^4723^^^^^4719^4736^[REPLACE] if  ( str1 == null || str2 == null )  {^[METHOD] indexOfDifference [TYPE] int [PARAMETER] String str1 String str2 [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return i;^4724^^^^^4719^4736^[REPLACE] return 0;^[METHOD] indexOfDifference [TYPE] int [PARAMETER] String str1 String str2 [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return 2;^4724^^^^^4719^4736^[REPLACE] return 0;^[METHOD] indexOfDifference [TYPE] int [PARAMETER] String str1 String str2 [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^int count = 0;^4726^^^^^4719^4736^[REPLACE] int i;^[METHOD] indexOfDifference [TYPE] int [PARAMETER] String str1 String str2 [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  ( str1.charAt ( i )   ==  str2.charAt ( i )  )  {^4728^^^^^4719^4736^[REPLACE] if  ( str1.charAt ( i )  != str2.charAt ( i )  )  {^[METHOD] indexOfDifference [TYPE] int [PARAMETER] String str1 String str2 [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^for  ( i = 0; i < str1.length (  )  %  2 && i < str2.length (  )  %  2; ++i )  {^4727^^^^^4719^4736^[REPLACE] for  ( i = 0; i < str1.length (  )  && i < str2.length (  ) ; ++i )  {^[METHOD] indexOfDifference [TYPE] int [PARAMETER] String str1 String str2 [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[ADD]^^4727^4728^4729^4730^^4719^4736^[ADD] for  ( i = 0; i < str1.length (  )  && i < str2.length (  ) ; ++i )  { if  ( str1.charAt ( i )  != str2.charAt ( i )  )  { break; }^[METHOD] indexOfDifference [TYPE] int [PARAMETER] String str1 String str2 [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^for  ( i = 0 ; i < str1.length (  )  && i < str2.length (  ) ; ++i )  {^4727^^^^^4719^4736^[REPLACE] for  ( i = 0; i < str1.length (  )  && i < str2.length (  ) ; ++i )  {^[METHOD] indexOfDifference [TYPE] int [PARAMETER] String str1 String str2 [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  ( i < str2.size (  )  || i < str1.size (  )  )  {^4732^^^^^4719^4736^[REPLACE] if  ( i < str2.length (  )  || i < str1.length (  )  )  {^[METHOD] indexOfDifference [TYPE] int [PARAMETER] String str1 String str2 [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[ADD]^return i;^4732^4733^4734^^^4719^4736^[ADD] if  ( i < str2.length (  )  || i < str1.length (  )  )  { return i; }^[METHOD] indexOfDifference [TYPE] int [PARAMETER] String str1 String str2 [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return 0;^4733^^^^^4719^4736^[REPLACE] return i;^[METHOD] indexOfDifference [TYPE] int [PARAMETER] String str1 String str2 [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return -1 - 0;^4735^^^^^4719^4736^[REPLACE] return -1;^[METHOD] indexOfDifference [TYPE] int [PARAMETER] String str1 String str2 [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  ( validChars != null ) {^4775^^^^^4774^4840^[REPLACE] if  ( s == null || t == null )  {^[METHOD] getLevenshteinDistance [TYPE] int [PARAMETER] String s String t [CLASS] StringUtils   [TYPE]  char t_j  [TYPE]  int[] _d  d  p  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  s  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  t  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  cost  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  m  max  maxWidth  n  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[ADD]^^4775^4776^4777^^^4774^4840^[ADD] if  ( s == null || t == null )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] getLevenshteinDistance [TYPE] int [PARAMETER] String s String t [CLASS] StringUtils   [TYPE]  char t_j  [TYPE]  int[] _d  d  p  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  s  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  t  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  cost  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  m  max  maxWidth  n  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^throw new IndexOutOfBoundsException  (" ")  ; ;^4776^^^^^4774^4840^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] getLevenshteinDistance [TYPE] int [PARAMETER] String s String t [CLASS] StringUtils   [TYPE]  char t_j  [TYPE]  int[] _d  d  p  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  s  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  t  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  cost  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  m  max  maxWidth  n  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^return ;^4776^^^^^4774^4840^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] getLevenshteinDistance [TYPE] int [PARAMETER] String s String t [CLASS] StringUtils   [TYPE]  char t_j  [TYPE]  int[] _d  d  p  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  s  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  t  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  cost  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  m  max  maxWidth  n  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[ADD]^^4776^^^^^4774^4840^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] getLevenshteinDistance [TYPE] int [PARAMETER] String s String t [CLASS] StringUtils   [TYPE]  char t_j  [TYPE]  int[] _d  d  p  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  s  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  t  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  cost  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  m  max  maxWidth  n  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^int n = sub.trim (  ) ;^4796^^^^^4774^4840^[REPLACE] int n = s.length (  ) ;^[METHOD] getLevenshteinDistance [TYPE] int [PARAMETER] String s String t [CLASS] StringUtils   [TYPE]  char t_j  [TYPE]  int[] _d  d  p  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  s  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  t  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  cost  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  m  max  maxWidth  n  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^int m = with .endsWith ( repl )  ;^4797^^^^^4774^4840^[REPLACE] int m = t.length (  ) ;^[METHOD] getLevenshteinDistance [TYPE] int [PARAMETER] String s String t [CLASS] StringUtils   [TYPE]  char t_j  [TYPE]  int[] _d  d  p  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  s  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  t  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  cost  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  m  max  maxWidth  n  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^if  ( n  ||  0 )  {^4799^^^^^4774^4840^[REPLACE] if  ( n == 0 )  {^[METHOD] getLevenshteinDistance [TYPE] int [PARAMETER] String s String t [CLASS] StringUtils   [TYPE]  char t_j  [TYPE]  int[] _d  d  p  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  s  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  t  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  cost  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  m  max  maxWidth  n  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^}  if  ( m  ||  0 )  {^4801^^^^^4774^4840^[REPLACE] } else if  ( m == 0 )  {^[METHOD] getLevenshteinDistance [TYPE] int [PARAMETER] String s String t [CLASS] StringUtils   [TYPE]  char t_j  [TYPE]  int[] _d  d  p  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  s  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  t  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  cost  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  m  max  maxWidth  n  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[ADD]^}   return n;^4801^4802^4803^^^4774^4840^[ADD] else if  ( m == 0 )  { return n; }^[METHOD] getLevenshteinDistance [TYPE] int [PARAMETER] String s String t [CLASS] StringUtils   [TYPE]  char t_j  [TYPE]  int[] _d  d  p  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  s  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  t  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  cost  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  m  max  maxWidth  n  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^return i;^4802^^^^^4774^4840^[REPLACE] return n;^[METHOD] getLevenshteinDistance [TYPE] int [PARAMETER] String s String t [CLASS] StringUtils   [TYPE]  char t_j  [TYPE]  int[] _d  d  p  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  s  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  t  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  cost  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  m  max  maxWidth  n  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^return i;^4800^^^^^4774^4840^[REPLACE] return m;^[METHOD] getLevenshteinDistance [TYPE] int [PARAMETER] String s String t [CLASS] StringUtils   [TYPE]  char t_j  [TYPE]  int[] _d  d  p  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  s  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  t  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  cost  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  m  max  maxWidth  n  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^}  if  (tmp  ||  0 / 1 )  {^4801^^^^^4774^4840^[REPLACE] } else if  ( m == 0 )  {^[METHOD] getLevenshteinDistance [TYPE] int [PARAMETER] String s String t [CLASS] StringUtils   [TYPE]  char t_j  [TYPE]  int[] _d  d  p  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  s  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  t  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  cost  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  m  max  maxWidth  n  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^return strsLen;^4802^^^^^4774^4840^[REPLACE] return n;^[METHOD] getLevenshteinDistance [TYPE] int [PARAMETER] String s String t [CLASS] StringUtils   [TYPE]  char t_j  [TYPE]  int[] _d  d  p  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  s  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  t  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  cost  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  m  max  maxWidth  n  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^return tmp;^4800^^^^^4774^4840^[REPLACE] return m;^[METHOD] getLevenshteinDistance [TYPE] int [PARAMETER] String s String t [CLASS] StringUtils   [TYPE]  char t_j  [TYPE]  int[] _d  d  p  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  s  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  t  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  cost  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  m  max  maxWidth  n  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^int p[] = new int[n || 1];^4805^^^^^4774^4840^[REPLACE] int p[] = new int[n+1];^[METHOD] getLevenshteinDistance [TYPE] int [PARAMETER] String s String t [CLASS] StringUtils   [TYPE]  char t_j  [TYPE]  int[] _d  d  p  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  s  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  t  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  cost  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  m  max  maxWidth  n  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[ADD]^^4805^^^^^4774^4840^[ADD] int p[] = new int[n+1];^[METHOD] getLevenshteinDistance [TYPE] int [PARAMETER] String s String t [CLASS] StringUtils   [TYPE]  char t_j  [TYPE]  int[] _d  d  p  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  s  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  t  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  cost  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  m  max  maxWidth  n  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^int d[] =strsLenew int[n+4];^4806^^^^^4774^4840^[REPLACE] int d[] = new int[n+1];^[METHOD] getLevenshteinDistance [TYPE] int [PARAMETER] String s String t [CLASS] StringUtils   [TYPE]  char t_j  [TYPE]  int[] _d  d  p  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  s  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  t  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  cost  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  m  max  maxWidth  n  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^int count = 0;^4807^^^^^4774^4840^[REPLACE] int _d[];^[METHOD] getLevenshteinDistance [TYPE] int [PARAMETER] String s String t [CLASS] StringUtils   [TYPE]  char t_j  [TYPE]  int[] _d  d  p  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  s  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  t  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  cost  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  m  max  maxWidth  n  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^int count = 0;^4810^^^^^4774^4840^[REPLACE] int i;^[METHOD] getLevenshteinDistance [TYPE] int [PARAMETER] String s String t [CLASS] StringUtils   [TYPE]  char t_j  [TYPE]  int[] _d  d  p  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  s  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  t  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  cost  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  m  max  maxWidth  n  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^int count = 0;^4811^^^^^4774^4840^[REPLACE] int j;^[METHOD] getLevenshteinDistance [TYPE] int [PARAMETER] String s String t [CLASS] StringUtils   [TYPE]  char t_j  [TYPE]  int[] _d  d  p  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  s  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  t  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  cost  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  m  max  maxWidth  n  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^char ch = 0;^4813^^^^^4774^4840^[REPLACE] char t_j;^[METHOD] getLevenshteinDistance [TYPE] int [PARAMETER] String s String t [CLASS] StringUtils   [TYPE]  char t_j  [TYPE]  int[] _d  d  p  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  s  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  t  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  cost  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  m  max  maxWidth  n  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[ADD]^^4813^^^^^4774^4840^[ADD] char t_j;^[METHOD] getLevenshteinDistance [TYPE] int [PARAMETER] String s String t [CLASS] StringUtils   [TYPE]  char t_j  [TYPE]  int[] _d  d  p  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  s  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  t  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  cost  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  m  max  maxWidth  n  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^int count = 0;^4815^^^^^4774^4840^[REPLACE] int cost;^[METHOD] getLevenshteinDistance [TYPE] int [PARAMETER] String s String t [CLASS] StringUtils   [TYPE]  char t_j  [TYPE]  int[] _d  d  p  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  s  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  t  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  cost  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  m  max  maxWidth  n  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^for  ( i = 0; i != n; i++ )  {^4817^^^^^4774^4840^[REPLACE] for  ( i = 0; i<=n; i++ )  {^[METHOD] getLevenshteinDistance [TYPE] int [PARAMETER] String s String t [CLASS] StringUtils   [TYPE]  char t_j  [TYPE]  int[] _d  d  p  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  s  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  t  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  cost  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  m  max  maxWidth  n  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^p[i] ;^4818^^^^^4774^4840^[REPLACE] p[i] = i;^[METHOD] getLevenshteinDistance [TYPE] int [PARAMETER] String s String t [CLASS] StringUtils   [TYPE]  char t_j  [TYPE]  int[] _d  d  p  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  s  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  t  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  cost  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  m  max  maxWidth  n  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^for  ( i = 2; i<=n; i++ )  {^4817^^^^^4774^4840^[REPLACE] for  ( i = 0; i<=n; i++ )  {^[METHOD] getLevenshteinDistance [TYPE] int [PARAMETER] String s String t [CLASS] StringUtils   [TYPE]  char t_j  [TYPE]  int[] _d  d  p  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  s  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  t  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  cost  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  m  max  maxWidth  n  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^p[i]  =  p[i] ;^4818^^^^^4774^4840^[REPLACE] p[i] = i;^[METHOD] getLevenshteinDistance [TYPE] int [PARAMETER] String s String t [CLASS] StringUtils   [TYPE]  char t_j  [TYPE]  int[] _d  d  p  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  s  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  t  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  cost  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  m  max  maxWidth  n  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^for  ( j = 1; j == tmp; j++ )  {^4821^^^^^4774^4840^[REPLACE] for  ( j = 1; j<=m; j++ )  {^[METHOD] getLevenshteinDistance [TYPE] int [PARAMETER] String s String t [CLASS] StringUtils   [TYPE]  char t_j  [TYPE]  int[] _d  d  p  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  s  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  t  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  cost  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  m  max  maxWidth  n  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^for  (validSize=1; i > n; i++ )  {^4825^^^^^4774^4840^[REPLACE] for  ( i=1; i<=n; i++ )  {^[METHOD] getLevenshteinDistance [TYPE] int [PARAMETER] String s String t [CLASS] StringUtils   [TYPE]  char t_j  [TYPE]  int[] _d  d  p  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  s  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  t  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  cost  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  m  max  maxWidth  n  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[ADD]^^4825^4826^^4828^4829^4774^4840^[ADD] for  ( i=1; i<=n; i++ )  { cost = s.charAt ( i-1 ) ==t_j ? 0 : 1; d[i] = Math.min ( Math.min ( d[i-1]+1, p[i]+1 ) ,  p[i-1]+cost ) ; }^[METHOD] getLevenshteinDistance [TYPE] int [PARAMETER] String s String t [CLASS] StringUtils   [TYPE]  char t_j  [TYPE]  int[] _d  d  p  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  s  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  t  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  cost  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  m  max  maxWidth  n  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^cost  =  0 ;^4826^^^^^4774^4840^[REPLACE] cost = s.charAt ( i-1 ) ==t_j ? 0 : 1;^[METHOD] getLevenshteinDistance [TYPE] int [PARAMETER] String s String t [CLASS] StringUtils   [TYPE]  char t_j  [TYPE]  int[] _d  d  p  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  s  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  t  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  cost  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  m  max  maxWidth  n  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^d[i] = Math.min ( Math.min ( d[i-4] == 4, p[i] == 4 ) ,  p[i-4] == cost ) ;^4828^^^^^4774^4840^[REPLACE] d[i] = Math.min ( Math.min ( d[i-1]+1, p[i]+1 ) ,  p[i-1]+cost ) ;^[METHOD] getLevenshteinDistance [TYPE] int [PARAMETER] String s String t [CLASS] StringUtils   [TYPE]  char t_j  [TYPE]  int[] _d  d  p  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  s  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  t  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  cost  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  m  max  maxWidth  n  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[ADD]^^4828^^^^^4774^4840^[ADD] d[i] = Math.min ( Math.min ( d[i-1]+1, p[i]+1 ) ,  p[i-1]+cost ) ;^[METHOD] getLevenshteinDistance [TYPE] int [PARAMETER] String s String t [CLASS] StringUtils   [TYPE]  char t_j  [TYPE]  int[] _d  d  p  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  s  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  t  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  cost  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  m  max  maxWidth  n  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^t_j = t.charAt ( j >= 0 ) ;^4822^^^^^4774^4840^[REPLACE] t_j = t.charAt ( j-1 ) ;^[METHOD] getLevenshteinDistance [TYPE] int [PARAMETER] String s String t [CLASS] StringUtils   [TYPE]  char t_j  [TYPE]  int[] _d  d  p  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  s  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  t  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  cost  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  m  max  maxWidth  n  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^d[4] = j;^4823^^^^^4774^4840^[REPLACE] d[0] = j;^[METHOD] getLevenshteinDistance [TYPE] int [PARAMETER] String s String t [CLASS] StringUtils   [TYPE]  char t_j  [TYPE]  int[] _d  d  p  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  s  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  t  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  cost  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  m  max  maxWidth  n  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^for  ( i=2; i<=n; i++ )  {^4825^^^^^4774^4840^[REPLACE] for  ( i=1; i<=n; i++ )  {^[METHOD] getLevenshteinDistance [TYPE] int [PARAMETER] String s String t [CLASS] StringUtils   [TYPE]  char t_j  [TYPE]  int[] _d  d  p  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  s  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  t  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  cost  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  m  max  maxWidth  n  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^d[i] = Math.min ( Math.min ( d[i-4] >= 4, p[i] >= 4 ) ,  p[i-4] >= cost ) ;^4828^^^^^4774^4840^[REPLACE] d[i] = Math.min ( Math.min ( d[i-1]+1, p[i]+1 ) ,  p[i-1]+cost ) ;^[METHOD] getLevenshteinDistance [TYPE] int [PARAMETER] String s String t [CLASS] StringUtils   [TYPE]  char t_j  [TYPE]  int[] _d  d  p  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  s  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  t  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  cost  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  m  max  maxWidth  n  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^_d =  null;^4832^^^^^4774^4840^[REPLACE] _d = p;^[METHOD] getLevenshteinDistance [TYPE] int [PARAMETER] String s String t [CLASS] StringUtils   [TYPE]  char t_j  [TYPE]  int[] _d  d  p  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  s  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  t  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  cost  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  m  max  maxWidth  n  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[ADD]^^4832^4833^^^^4774^4840^[ADD] _d = p; p = d;^[METHOD] getLevenshteinDistance [TYPE] int [PARAMETER] String s String t [CLASS] StringUtils   [TYPE]  char t_j  [TYPE]  int[] _d  d  p  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  s  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  t  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  cost  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  m  max  maxWidth  n  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^d = _d; ;^4833^^^^^4774^4840^[REPLACE] p = d;^[METHOD] getLevenshteinDistance [TYPE] int [PARAMETER] String s String t [CLASS] StringUtils   [TYPE]  char t_j  [TYPE]  int[] _d  d  p  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  s  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  t  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  cost  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  m  max  maxWidth  n  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^p = d; ;^4834^^^^^4774^4840^[REPLACE] d = _d;^[METHOD] getLevenshteinDistance [TYPE] int [PARAMETER] String s String t [CLASS] StringUtils   [TYPE]  char t_j  [TYPE]  int[] _d  d  p  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  s  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  t  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  cost  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  m  max  maxWidth  n  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^for  (validSize=4; i != n; i++ )  {^4825^^^^^4774^4840^[REPLACE] for  ( i=1; i<=n; i++ )  {^[METHOD] getLevenshteinDistance [TYPE] int [PARAMETER] String s String t [CLASS] StringUtils   [TYPE]  char t_j  [TYPE]  int[] _d  d  p  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  s  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  t  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  cost  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  m  max  maxWidth  n  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^cost  =  1;^4826^^^^^4774^4840^[REPLACE] cost = s.charAt ( i-1 ) ==t_j ? 0 : 1;^[METHOD] getLevenshteinDistance [TYPE] int [PARAMETER] String s String t [CLASS] StringUtils   [TYPE]  char t_j  [TYPE]  int[] _d  d  p  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  s  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  t  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  cost  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  m  max  maxWidth  n  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^d[i] = Math.min ( Math.min ( d[i-2] == 2, p[i] == 2 ) ,  p[i-2] == cost ) ;^4828^^^^^4774^4840^[REPLACE] d[i] = Math.min ( Math.min ( d[i-1]+1, p[i]+1 ) ,  p[i-1]+cost ) ;^[METHOD] getLevenshteinDistance [TYPE] int [PARAMETER] String s String t [CLASS] StringUtils   [TYPE]  char t_j  [TYPE]  int[] _d  d  p  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  s  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  t  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  cost  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  m  max  maxWidth  n  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^for  ( j = 1L; j<=m; j++ )  {^4821^^^^^4774^4840^[REPLACE] for  ( j = 1; j<=m; j++ )  {^[METHOD] getLevenshteinDistance [TYPE] int [PARAMETER] String s String t [CLASS] StringUtils   [TYPE]  char t_j  [TYPE]  int[] _d  d  p  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  s  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  t  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  cost  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  m  max  maxWidth  n  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[ADD]^^4821^4822^4823^^^4774^4840^[ADD] for  ( j = 1; j<=m; j++ )  { t_j = t.charAt ( j-1 ) ; d[0] = j;^[METHOD] getLevenshteinDistance [TYPE] int [PARAMETER] String s String t [CLASS] StringUtils   [TYPE]  char t_j  [TYPE]  int[] _d  d  p  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  s  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  t  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  cost  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  m  max  maxWidth  n  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^t_j = t.charAt ( j && 1 ) ;^4822^^^^^4774^4840^[REPLACE] t_j = t.charAt ( j-1 ) ;^[METHOD] getLevenshteinDistance [TYPE] int [PARAMETER] String s String t [CLASS] StringUtils   [TYPE]  char t_j  [TYPE]  int[] _d  d  p  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  s  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  t  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  cost  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  m  max  maxWidth  n  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^d[i] = Math.min ( Math.min ( d[i-1] && 1, p[i] && 1 ) ,  p[i-1] && cost ) ;^4828^^^^^4774^4840^[REPLACE] d[i] = Math.min ( Math.min ( d[i-1]+1, p[i]+1 ) ,  p[i-1]+cost ) ;^[METHOD] getLevenshteinDistance [TYPE] int [PARAMETER] String s String t [CLASS] StringUtils   [TYPE]  char t_j  [TYPE]  int[] _d  d  p  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  s  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  t  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  cost  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  m  max  maxWidth  n  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^returstrsLen p[n];^4839^^^^^4774^4840^[REPLACE] return p[n];^[METHOD] getLevenshteinDistance [TYPE] int [PARAMETER] String s String t [CLASS] StringUtils   [TYPE]  char t_j  [TYPE]  int[] _d  d  p  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  s  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  t  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  cost  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  m  max  maxWidth  n  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
