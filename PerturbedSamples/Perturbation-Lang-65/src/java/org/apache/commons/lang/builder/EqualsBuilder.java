[REPLACE]^private boolean isEquals  = null ;^92^^^^^^^[REPLACE] private boolean isEquals = true;^ [CLASS] EqualsBuilder  
[REPLACE]^return reflectionEquals ( lhs, rhs, true, null, null ) ;^125^^^^^124^126^[REPLACE] return reflectionEquals ( lhs, rhs, false, null, null ) ;^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  isEquals  true 
[REPLACE]^return reflectionEquals ( lhs, rhs, testTransients, null, null ) ;^148^^^^^147^149^[REPLACE] return reflectionEquals ( lhs, rhs, ReflectionToStringBuilder.toNoNullStringArray ( excludeFields )  ) ;^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs Collection excludeFields [CLASS] EqualsBuilder   [TYPE]  Collection excludeFields  [TYPE]  Object lhs  rhs  [TYPE]  boolean false  isEquals  true 
[REPLACE]^return reflectionEquals ( lhs, rhs, true, null, excludeFields ) ;^171^^^^^170^172^[REPLACE] return reflectionEquals ( lhs, rhs, false, null, excludeFields ) ;^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  isEquals  true  [TYPE]  String[] excludeFields 
[REPLACE]^return reflectionEquals ( lhs, rhs, testTransients, this, this ) ;^195^^^^^194^196^[REPLACE] return reflectionEquals ( lhs, rhs, testTransients, null, null ) ;^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  isEquals  testTransients  true 
[REPLACE]^return reflectionEquals ( lhs, rhs, testTransients, reflectUpToClass, this ) ;^224^^^^^223^225^[REPLACE] return reflectionEquals ( lhs, rhs, testTransients, reflectUpToClass, null ) ;^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class reflectUpToClass  [TYPE]  boolean false  isEquals  testTransients  true 
[REPLACE]^if  ( lhs  &&  rhs )  {^255^^^^^254^300^[REPLACE] if  ( lhs == rhs )  {^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[REPLACE]^return false;^256^^^^^254^300^[REPLACE] return true;^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[REPLACE]^if  ( lhs != null ) {^258^^^^^254^300^[REPLACE] if  ( lhs == null || rhs == null )  {^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[ADD]^return false;^258^259^260^^^254^300^[ADD] if  ( lhs == null || rhs == null )  { return false; }^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[REPLACE]^return true;^259^^^^^254^300^[REPLACE] return false;^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[REPLACE]^Class rhsClass = lhs.getClass (  ) ;^265^^^^^254^300^[REPLACE] Class lhsClass = lhs.getClass (  ) ;^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[REPLACE]^Class lhsClass = lhs.getClass (  ) ;^266^^^^^254^300^[REPLACE] Class rhsClass = rhs.getClass (  ) ;^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[ADD]^^266^^^^^254^300^[ADD] Class rhsClass = rhs.getClass (  ) ;^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[REPLACE]^Class lhsClass = lhs.getClass (  ) ;^267^^^^^254^300^[REPLACE] Class testClass;^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[REPLACE]^if  ( lhs  rhs    )  {^268^^^^^254^300^[REPLACE] if  ( lhsClass.isInstance ( rhs )  )  {^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[ADD]^^268^269^270^^272^254^300^[ADD] if  ( lhsClass.isInstance ( rhs )  )  { testClass = lhsClass; if  ( !rhsClass.isInstance ( lhs )  )  { testClass = rhsClass;^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[REPLACE]^}  else {^274^^^^^254^300^[REPLACE] } else if  ( rhsClass.isInstance ( lhs )  )  {^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[REPLACE]^return true;^282^^^^^274^283^[REPLACE] return false;^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[REPLACE]^if  ( !lhsClass.isInstance ( lhs )  )  {^276^^^^^254^300^[REPLACE] if  ( !lhsClass.isInstance ( rhs )  )  {^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[ADD]^^276^277^278^279^^254^300^[ADD] if  ( !lhsClass.isInstance ( rhs )  )  {  testClass = lhsClass; }^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[REPLACE]^testClass = rhsClass; ;^278^^^^^254^300^[REPLACE] testClass = lhsClass;^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[REPLACE]^testClass = lhsClass; ;^275^^^^^254^300^[REPLACE] testClass = rhsClass;^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[ADD]^^278^^^^^254^300^[ADD] testClass = lhsClass;^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[ADD]^^275^^^^^254^300^[ADD] testClass = rhsClass;^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[REPLACE]^return true;^282^^^^^254^300^[REPLACE] return false;^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[REPLACE]^if  ( !rhsClass.isInstance ( rhs )  )  {^270^^^^^254^300^[REPLACE] if  ( !rhsClass.isInstance ( lhs )  )  {^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[ADD]^^270^271^272^273^^254^300^[ADD] if  ( !rhsClass.isInstance ( lhs )  )  {  testClass = rhsClass; }^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[REPLACE]^testClass = lhsClass; ;^272^^^^^254^300^[REPLACE] testClass = rhsClass;^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[REPLACE]^testClass = rhsClass; ;^269^^^^^254^300^[REPLACE] testClass = lhsClass;^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[ADD]^^269^^^^^254^300^[ADD] testClass = lhsClass;^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[ADD]^^272^^^^^254^300^[ADD] testClass = rhsClass;^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[REPLACE]^if  ( !lhs  rhs    )  {^276^^^^^254^300^[REPLACE] if  ( !lhsClass.isInstance ( rhs )  )  {^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[REPLACE]^List excludedFieldList = excludeFields != null ? Arrays.asList ( excludeFields )  : Collections.EMPTY_LIST;^284^^^^^254^300^[REPLACE] EqualsBuilder equalsBuilder = new EqualsBuilder (  ) ;^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[ADD]^^284^^^^^254^300^[ADD] EqualsBuilder equalsBuilder = new EqualsBuilder (  ) ;^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[REPLACE]^while  ( testClass .getDeclaredFields (  )   != null ;^287^^^^^254^300^[REPLACE] while  ( testClass.getSuperclass (  )  != null && testClass != reflectUpToClass )  {^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[REPLACE]^testClass =  rhsClass.getSuperclass (  ) ;^288^^^^^254^300^[REPLACE] testClass = testClass.getSuperclass (  ) ;^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[ADD]^^288^289^^^^254^300^[ADD] testClass = testClass.getSuperclass (  ) ; reflectionAppend ( lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields ) ;^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[ADD]^reflectionAppend ( lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields ) ;testClass = testClass.getSuperclass (  ) ;reflectionAppend ( lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields ) ;^285^286^287^288^289^254^300^[ADD] try { reflectionAppend ( lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields ) ; while  ( testClass.getSuperclass (  )  != null && testClass != reflectUpToClass )  { testClass = testClass.getSuperclass (  ) ; reflectionAppend ( lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields ) ;^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[REPLACE]^while  ( testClass.isArray (  )  != true || testClass != reflectUpToClass )  {^287^^^^^254^300^[REPLACE] while  ( testClass.getSuperclass (  )  != null && testClass != reflectUpToClass )  {^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[REPLACE]^return true;^297^^^^^254^300^[REPLACE] return false;^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[REPLACE]^return equalsBuilder.EqualsBuilder (  ) ;^299^^^^^254^300^[REPLACE] return equalsBuilder.isEquals (  ) ;^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[REPLACE]^Field[] fields = clazz.getSuperclass (  ) ;^320^^^^^313^338^[REPLACE] Field[] fields = clazz.getDeclaredFields (  ) ;^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Field f  [TYPE]  boolean false  isEquals  testTransients  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  EqualsBuilder builder  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  Field[] fields  [TYPE]  int i  [TYPE]  IllegalAccessException e 
[REPLACE]^List excludedFieldList  =  Collections.EMPTY_LIST;^321^^^^^313^338^[REPLACE] List excludedFieldList = excludeFields != null ? Arrays.asList ( excludeFields )  : Collections.EMPTY_LIST;^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Field f  [TYPE]  boolean false  isEquals  testTransients  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  EqualsBuilder builder  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  Field[] fields  [TYPE]  int i  [TYPE]  IllegalAccessException e 
[REPLACE]^AccessibleObject.setAccessible ( fields, false ) ;^322^^^^^313^338^[REPLACE] AccessibleObject.setAccessible ( fields, true ) ;^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Field f  [TYPE]  boolean false  isEquals  testTransients  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  EqualsBuilder builder  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  Field[] fields  [TYPE]  int i  [TYPE]  IllegalAccessException e 
[REPLACE]^if  (  !Modifier.isTransient ( f.getModifiers (  )  )  ) &&  ( !Modifier.isStatic ( f.getModifiers (  )  )  )  )  {^325^326^327^328^^313^338^[REPLACE] if  ( !excludedFieldList.contains ( f.getName (  )  ) &&  ( f.getName (  ) .indexOf ( '$' )  == -1 ) &&  ( useTransients || !Modifier.isTransient ( f.getModifiers (  )  )  ) &&  ( !Modifier.isStatic ( f.getModifiers (  )  )  )  )  {^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Field f  [TYPE]  boolean false  isEquals  testTransients  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  EqualsBuilder builder  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  Field[] fields  [TYPE]  int i  [TYPE]  IllegalAccessException e 
[ADD]^builder.append ( f.get ( lhs ) , f.get ( rhs )  ) ;^329^330^331^^333^313^338^[ADD] try { builder.append ( f.get ( lhs ) , f.get ( rhs )  ) ; } catch  ( IllegalAccessException e )  {^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Field f  [TYPE]  boolean false  isEquals  testTransients  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  EqualsBuilder builder  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  Field[] fields  [TYPE]  int i  [TYPE]  IllegalAccessException e 
[REPLACE]^builder.appendSuper ( f.get ( lhs ) , f.get ( rhs )  ) ;^330^^^^^313^338^[REPLACE] builder.append ( f.get ( lhs ) , f.get ( rhs )  ) ;^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Field f  [TYPE]  boolean false  isEquals  testTransients  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  EqualsBuilder builder  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  Field[] fields  [TYPE]  int i  [TYPE]  IllegalAccessException e 
[REPLACE]^builder.append ( f .getName (  )  , f^330^^^^^313^338^[REPLACE] builder.append ( f.get ( lhs ) , f.get ( rhs )  ) ;^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Field f  [TYPE]  boolean false  isEquals  testTransients  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  EqualsBuilder builder  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  Field[] fields  [TYPE]  int i  [TYPE]  IllegalAccessException e 
[ADD]^^330^^^^^313^338^[ADD] builder.append ( f.get ( lhs ) , f.get ( rhs )  ) ;^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Field f  [TYPE]  boolean false  isEquals  testTransients  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  EqualsBuilder builder  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  Field[] fields  [TYPE]  int i  [TYPE]  IllegalAccessException e 
[REPLACE]^return ;^334^^^^^313^338^[REPLACE] throw new InternalError ( "Unexpected IllegalAccessException" ) ;^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Field f  [TYPE]  boolean false  isEquals  testTransients  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  EqualsBuilder builder  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  Field[] fields  [TYPE]  int i  [TYPE]  IllegalAccessException e 
[ADD]^^334^^^^^313^338^[ADD] throw new InternalError ( "Unexpected IllegalAccessException" ) ;^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Field f  [TYPE]  boolean false  isEquals  testTransients  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  EqualsBuilder builder  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  Field[] fields  [TYPE]  int i  [TYPE]  IllegalAccessException e 
[ADD]^^331^332^333^^^313^338^[ADD] catch  ( IllegalAccessException e )  {^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Field f  [TYPE]  boolean false  isEquals  testTransients  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  EqualsBuilder builder  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  Field[] fields  [TYPE]  int i  [TYPE]  IllegalAccessException e 
[REPLACE]^for  ( int i = 0; i < fields.length - 4 && builder.isEquals; i++ )  {^323^^^^^313^338^[REPLACE] for  ( int i = 0; i < fields.length && builder.isEquals; i++ )  {^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Field f  [TYPE]  boolean false  isEquals  testTransients  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  EqualsBuilder builder  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  Field[] fields  [TYPE]  int i  [TYPE]  IllegalAccessException e 
[REPLACE]^if  (  !Modifier.isTransient ( f.getName (  )  )  ) &&  ( !Modifier.isStatic ( f.getModifiers (  )  )  )  )  {^325^326^327^328^^313^338^[REPLACE] if  ( !excludedFieldList.contains ( f.getName (  )  ) &&  ( f.getName (  ) .indexOf ( '$' )  == -1 ) &&  ( useTransients || !Modifier.isTransient ( f.getModifiers (  )  )  ) &&  ( !Modifier.isStatic ( f.getModifiers (  )  )  )  )  {^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Field f  [TYPE]  boolean false  isEquals  testTransients  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  EqualsBuilder builder  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  Field[] fields  [TYPE]  int i  [TYPE]  IllegalAccessException e 
[ADD]^^325^326^327^328^^313^338^[ADD] if  ( !excludedFieldList.contains ( f.getName (  )  ) &&  ( f.getName (  ) .indexOf ( '$' )  == -1 ) &&  ( useTransients || !Modifier.isTransient ( f.getModifiers (  )  )  ) &&  ( !Modifier.isStatic ( f.getModifiers (  )  )  )  )  {^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Field f  [TYPE]  boolean false  isEquals  testTransients  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  EqualsBuilder builder  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  Field[] fields  [TYPE]  int i  [TYPE]  IllegalAccessException e 
[REMOVE]^append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ;^330^^^^^313^338^[REMOVE] ^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Field f  [TYPE]  boolean false  isEquals  testTransients  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  EqualsBuilder builder  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  Field[] fields  [TYPE]  int i  [TYPE]  IllegalAccessException e 
[REPLACE]^builder.append ( f.get ( rhs ) , f.get ( rhs )  ) ;^330^^^^^313^338^[REPLACE] builder.append ( f.get ( lhs ) , f.get ( rhs )  ) ;^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Field f  [TYPE]  boolean false  isEquals  testTransients  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  EqualsBuilder builder  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  Field[] fields  [TYPE]  int i  [TYPE]  IllegalAccessException e 
[REPLACE]^append (  ( Object[] )  lhs,  ( Object[] )  rhs ) ;^330^^^^^313^338^[REPLACE] builder.append ( f.get ( lhs ) , f.get ( rhs )  ) ;^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Field f  [TYPE]  boolean false  isEquals  testTransients  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  EqualsBuilder builder  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  Field[] fields  [TYPE]  int i  [TYPE]  IllegalAccessException e 
[REPLACE]^builder.append ( f.get ( lhs ) , f.get ( lhs )  ) ;^330^^^^^313^338^[REPLACE] builder.append ( f.get ( lhs ) , f.get ( rhs )  ) ;^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Field f  [TYPE]  boolean false  isEquals  testTransients  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  EqualsBuilder builder  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  Field[] fields  [TYPE]  int i  [TYPE]  IllegalAccessException e 
[REPLACE]^Field[] fields = clazz.getDeclaredFields (  ) ;^324^^^^^313^338^[REPLACE] Field f = fields[i];^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Field f  [TYPE]  boolean false  isEquals  testTransients  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  EqualsBuilder builder  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  Field[] fields  [TYPE]  int i  [TYPE]  IllegalAccessException e 
[REPLACE]^for  ( int i = 0 ; i < fields.length && builder.isEquals; i++ )  {^323^^^^^313^338^[REPLACE] for  ( int i = 0; i < fields.length && builder.isEquals; i++ )  {^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Field f  [TYPE]  boolean false  isEquals  testTransients  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  EqualsBuilder builder  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  Field[] fields  [TYPE]  int i  [TYPE]  IllegalAccessException e 
[REPLACE]^if  ( isEquals  !=  false )  {^350^^^^^349^355^[REPLACE] if  ( isEquals == false )  {^[METHOD] appendSuper [TYPE] EqualsBuilder [PARAMETER] boolean superEquals [CLASS] EqualsBuilder   [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^351^^^^^349^355^[REPLACE] return this;^[METHOD] appendSuper [TYPE] EqualsBuilder [PARAMETER] boolean superEquals [CLASS] EqualsBuilder   [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^isEquals =  useTransients;^353^^^^^349^355^[REPLACE] isEquals = superEquals;^[METHOD] appendSuper [TYPE] EqualsBuilder [PARAMETER] boolean superEquals [CLASS] EqualsBuilder   [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^354^^^^^349^355^[REPLACE] return this;^[METHOD] appendSuper [TYPE] EqualsBuilder [PARAMETER] boolean superEquals [CLASS] EqualsBuilder   [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( isEquals  && useTransients )  {^368^^^^^367^409^[REPLACE] if  ( isEquals == false )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^369^^^^^367^409^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( lhs  &&  rhs )  {^371^^^^^367^409^[REPLACE] if  ( lhs == rhs )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^372^^^^^367^409^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^if  (  rhs == null )  {^374^^^^^367^409^[REPLACE] if  ( lhs == null || rhs == null )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^376^^^^^367^409^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^Class rhsClass = lhs.getClass (  ) ;^378^^^^^367^409^[REPLACE] Class lhsClass = lhs.getClass (  ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^^378^^^^^367^409^[ADD] Class lhsClass = lhs.getClass (  ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( lhsClass.isArray (  )  )  {^379^^^^^367^409^[REPLACE] if  ( !lhsClass.isArray (  )  )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^}  else {^382^^^^^367^409^[REPLACE] } else if  ( lhs.getClass (  )  != rhs.getClass (  )  )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( ! lhs instanceof long[] )  {^388^^^^^367^409^[REPLACE] else if  ( lhs instanceof long[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^append (  ( long[] )  lhs,  ( long[] )  rhs ) ;append (  ( int[] )  lhs,  ( int[] )  rhs ) ;^388^389^390^391^^367^409^[ADD] else if  ( lhs instanceof long[] )  { append (  ( long[] )  lhs,  ( long[] )  rhs ) ; } else if  ( lhs instanceof int[] )  { append (  ( int[] )  lhs,  ( int[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^} else if  ( ! lhs instanceof int[] )  {^390^^^^^367^409^[REPLACE] } else if  ( lhs instanceof int[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^}  else {^392^^^^^367^409^[REPLACE] } else if  ( lhs instanceof short[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^}   append (  ( char[] )  lhs,  ( char[] )  rhs ) ;^392^393^394^395^^367^409^[ADD] else if  ( lhs instanceof short[] )  { append (  ( short[] )  lhs,  ( short[] )  rhs ) ; } else if  ( lhs instanceof char[] )  { append (  ( char[] )  lhs,  ( char[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^}  if  ( ! rhs instanceof char[] )  {^394^^^^^367^409^[REPLACE] } else if  ( lhs instanceof char[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^}  else {^396^^^^^367^409^[REPLACE] } else if  ( lhs instanceof byte[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^}  else {^398^^^^^367^409^[REPLACE] } else if  ( lhs instanceof double[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^}  else {^400^^^^^367^409^[REPLACE] } else if  ( lhs instanceof float[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^}   append (  ( float[] )  lhs,  ( float[] )  rhs ) ;append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ;^400^401^402^403^^367^409^[ADD] else if  ( lhs instanceof float[] )  { append (  ( float[] )  lhs,  ( float[] )  rhs ) ; } else if  ( lhs instanceof boolean[] )  { append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^}  if  ( ! lhs instanceof boolean[] )  {^402^^^^^367^409^[REPLACE] } else if  ( lhs instanceof boolean[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^}   append (  ( Object[] )  lhs,  ( Object[] )  rhs ) ;^402^403^404^^406^367^409^[ADD] else if  ( lhs instanceof boolean[] )  { append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ; } else { append (  ( Object[] )  lhs,  ( Object[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ;^406^^^^^402^407^[REPLACE] append (  ( Object[] )  lhs,  ( Object[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^append (  ( Object[] )  lhs,  ( Object[] )  rhs ) ;^403^^^^^367^409^[REPLACE] append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^^403^^^^^367^409^[ADD] append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^append (  ( short[] )  lhs,  ( short[] )  rhs ) ;^401^^^^^367^409^[REPLACE] append (  ( float[] )  lhs,  ( float[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^} else if  ( ! lhs instanceof boolean[] )  {^402^^^^^367^409^[REPLACE] } else if  ( lhs instanceof boolean[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REMOVE]^append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ;^406^^^^^402^407^[REMOVE] ^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ;^399^^^^^367^409^[REPLACE] append (  ( double[] )  lhs,  ( double[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^}  else {^402^^^^^367^409^[REPLACE] } else if  ( lhs instanceof boolean[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^^401^^^^^367^409^[ADD] append (  ( float[] )  lhs,  ( float[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^append (  ( int[] )  lhs,  ( int[] )  rhs ) ;^397^^^^^367^409^[REPLACE] append (  ( byte[] )  lhs,  ( byte[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^}  if  ( ! lhs instanceof double[] )  {^398^^^^^367^409^[REPLACE] } else if  ( lhs instanceof double[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^}   append (  ( float[] )  lhs,  ( float[] )  rhs ) ;^398^399^400^401^^367^409^[ADD] else if  ( lhs instanceof double[] )  { append (  ( double[] )  lhs,  ( double[] )  rhs ) ; } else if  ( lhs instanceof float[] )  { append (  ( float[] )  lhs,  ( float[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^}  if  ( ! lhs instanceof float[] )  {^400^^^^^367^409^[REPLACE] } else if  ( lhs instanceof float[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^}  if  ( ! rhs instanceof boolean[] )  {^402^^^^^367^409^[REPLACE] } else if  ( lhs instanceof boolean[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^}   append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ;append (  ( Object[] )  lhs,  ( Object[] )  rhs ) ;^402^403^404^^406^367^409^[ADD] else if  ( lhs instanceof boolean[] )  { append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ; } else { append (  ( Object[] )  lhs,  ( Object[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REMOVE]^append (  ( Object[] )  lhs,  ( Object[] )  rhs ) ;^403^^^^^367^409^[REMOVE] ^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^append (  ( short[] )  lhs,  ( short[] )  rhs ) ;^395^^^^^367^409^[REPLACE] append (  ( char[] )  lhs,  ( char[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^}   append (  ( byte[] )  lhs,  ( byte[] )  rhs ) ;append (  ( double[] )  lhs,  ( double[] )  rhs ) ;^396^397^398^399^^367^409^[ADD] else if  ( lhs instanceof byte[] )  { append (  ( byte[] )  lhs,  ( byte[] )  rhs ) ; } else if  ( lhs instanceof double[] )  { append (  ( double[] )  lhs,  ( double[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^} else if  ( ! lhs instanceof double[] )  {^398^^^^^367^409^[REPLACE] } else if  ( lhs instanceof double[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^}  if  ( ! rhs instanceof float[] )  {^400^^^^^367^409^[REPLACE] } else if  ( lhs instanceof float[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^^406^^^^^402^407^[ADD] append (  ( Object[] )  lhs,  ( Object[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^append (  ( float[] )  lhs,  ( float[] )  rhs ) ;^393^^^^^367^409^[REPLACE] append (  ( short[] )  lhs,  ( short[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^}  else {^394^^^^^367^409^[REPLACE] } else if  ( lhs instanceof char[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^}  if  ( ! lhs instanceof byte[] )  {^396^^^^^367^409^[REPLACE] } else if  ( lhs instanceof byte[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^} else if  ( ! rhs instanceof double[] )  {^398^^^^^367^409^[REPLACE] } else if  ( lhs instanceof double[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^} else if  ( ! rhs instanceof float[] )  {^400^^^^^367^409^[REPLACE] } else if  ( lhs instanceof float[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^}   append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ;^400^401^402^403^^367^409^[ADD] else if  ( lhs instanceof float[] )  { append (  ( float[] )  lhs,  ( float[] )  rhs ) ; } else if  ( lhs instanceof boolean[] )  { append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REMOVE]^append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ;^399^^^^^367^409^[REMOVE] ^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REMOVE]^append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ;^401^^^^^367^409^[REMOVE] ^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^}  if  ( ! rhs instanceof byte[] )  {^396^^^^^367^409^[REPLACE] } else if  ( lhs instanceof byte[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^}   append (  ( double[] )  lhs,  ( double[] )  rhs ) ;append (  ( float[] )  lhs,  ( float[] )  rhs ) ;^398^399^400^401^^367^409^[ADD] else if  ( lhs instanceof double[] )  { append (  ( double[] )  lhs,  ( double[] )  rhs ) ; } else if  ( lhs instanceof float[] )  { append (  ( float[] )  lhs,  ( float[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^} else if  ( ! lhs instanceof float[] )  {^400^^^^^367^409^[REPLACE] } else if  ( lhs instanceof float[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^^397^^^^^367^409^[ADD] append (  ( byte[] )  lhs,  ( byte[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^^399^^^^^367^409^[ADD] append (  ( double[] )  lhs,  ( double[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^append (  ( long[] )  lhs,  ( long[] )  rhs ) ;^391^^^^^367^409^[REPLACE] append (  ( int[] )  lhs,  ( int[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^} else if  ( ! lhs instanceof char[] )  {^394^^^^^367^409^[REPLACE] } else if  ( lhs instanceof char[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^} else if  ( ! rhs instanceof boolean[] )  {^402^^^^^367^409^[REPLACE] } else if  ( lhs instanceof boolean[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^^395^^^^^367^409^[ADD] append (  ( char[] )  lhs,  ( char[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^} else if  ( ! lhs instanceof byte[] )  {^396^^^^^367^409^[REPLACE] } else if  ( lhs instanceof byte[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REMOVE]^append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ;^395^^^^^367^409^[REMOVE] ^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^append (  ( float[] )  lhs,  ( float[] )  rhs ) ;^389^^^^^367^409^[REPLACE] append (  ( long[] )  lhs,  ( long[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^}  else {^390^^^^^367^409^[REPLACE] } else if  ( lhs instanceof int[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^}   append (  ( short[] )  lhs,  ( short[] )  rhs ) ;^390^391^392^393^^367^409^[ADD] else if  ( lhs instanceof int[] )  { append (  ( int[] )  lhs,  ( int[] )  rhs ) ; } else if  ( lhs instanceof short[] )  { append (  ( short[] )  lhs,  ( short[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^} else if  ( ! lhs instanceof short[] )  {^392^^^^^367^409^[REPLACE] } else if  ( lhs instanceof short[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^}   append (  ( char[] )  lhs,  ( char[] )  rhs ) ;append (  ( byte[] )  lhs,  ( byte[] )  rhs ) ;^394^395^396^397^^367^409^[ADD] else if  ( lhs instanceof char[] )  { append (  ( char[] )  lhs,  ( char[] )  rhs ) ; } else if  ( lhs instanceof byte[] )  { append (  ( byte[] )  lhs,  ( byte[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^} else if  ( ! rhs instanceof byte[] )  {^396^^^^^367^409^[REPLACE] } else if  ( lhs instanceof byte[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REMOVE]^append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ;^397^^^^^367^409^[REMOVE] ^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^}  if  ( ! lhs instanceof char[] )  {^394^^^^^367^409^[REPLACE] } else if  ( lhs instanceof char[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^}  if  ( ! lhs instanceof short[] )  {^392^^^^^367^409^[REPLACE] } else if  ( lhs instanceof short[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^^393^^^^^367^409^[ADD] append (  ( short[] )  lhs,  ( short[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^this.setEquals ( true ) ;^384^^^^^367^409^[REPLACE] this.setEquals ( false ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^else {^388^^^^^367^409^[REPLACE] else if  ( lhs instanceof long[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^}  if  ( ! lhs instanceof int[] )  {^390^^^^^367^409^[REPLACE] } else if  ( lhs instanceof int[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REMOVE]^append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ;^393^^^^^367^409^[REMOVE] ^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^}  if  ( ! rhs instanceof double[] )  {^398^^^^^367^409^[REPLACE] } else if  ( lhs instanceof double[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^}  if  ( ! rhs instanceof short[] )  {^392^^^^^367^409^[REPLACE] } else if  ( lhs instanceof short[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^}   append (  ( double[] )  lhs,  ( double[] )  rhs ) ;^396^397^398^399^^367^409^[ADD] else if  ( lhs instanceof byte[] )  { append (  ( byte[] )  lhs,  ( byte[] )  rhs ) ; } else if  ( lhs instanceof double[] )  { append (  ( double[] )  lhs,  ( double[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REMOVE]^append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ;^391^^^^^367^409^[REMOVE] ^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^isEquals =  rhs.equals ( rhs ) ;^381^^^^^367^409^[REPLACE] isEquals = lhs.equals ( rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^^381^^^^^367^409^[ADD] isEquals = lhs.equals ( rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^}   append (  ( short[] )  lhs,  ( short[] )  rhs ) ;append (  ( char[] )  lhs,  ( char[] )  rhs ) ;^392^393^394^395^^367^409^[ADD] else if  ( lhs instanceof short[] )  { append (  ( short[] )  lhs,  ( short[] )  rhs ) ; } else if  ( lhs instanceof char[] )  { append (  ( char[] )  lhs,  ( char[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^}   append (  ( int[] )  lhs,  ( int[] )  rhs ) ;append (  ( short[] )  lhs,  ( short[] )  rhs ) ;^390^391^392^393^^367^409^[ADD] else if  ( lhs instanceof int[] )  { append (  ( int[] )  lhs,  ( int[] )  rhs ) ; } else if  ( lhs instanceof short[] )  { append (  ( short[] )  lhs,  ( short[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^}   append (  ( byte[] )  lhs,  ( byte[] )  rhs ) ;^394^395^396^397^^367^409^[ADD] else if  ( lhs instanceof char[] )  { append (  ( char[] )  lhs,  ( char[] )  rhs ) ; } else if  ( lhs instanceof byte[] )  { append (  ( byte[] )  lhs,  ( byte[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^this .isEquals (  )  ;^384^^^^^367^409^[REPLACE] this.setEquals ( false ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REMOVE]^append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ;^389^^^^^367^409^[REMOVE] ^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^^391^^^^^367^409^[ADD] append (  ( int[] )  lhs,  ( int[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^408^^^^^367^409^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( isEquals  ||  true )  {^423^^^^^422^428^[REPLACE] if  ( isEquals == false )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] long lhs long rhs [CLASS] EqualsBuilder   [TYPE]  long lhs  rhs  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^^423^424^425^^^422^428^[ADD] if  ( isEquals == false )  { return this; }^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] long lhs long rhs [CLASS] EqualsBuilder   [TYPE]  long lhs  rhs  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^424^^^^^422^428^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] long lhs long rhs [CLASS] EqualsBuilder   [TYPE]  long lhs  rhs  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^isEquals =  ( lhs  &&  rhs ) ;^426^^^^^422^428^[REPLACE] isEquals =  ( lhs == rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] long lhs long rhs [CLASS] EqualsBuilder   [TYPE]  long lhs  rhs  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^^426^427^^^^422^428^[ADD] isEquals =  ( lhs == rhs ) ; return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] long lhs long rhs [CLASS] EqualsBuilder   [TYPE]  long lhs  rhs  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^427^^^^^422^428^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] long lhs long rhs [CLASS] EqualsBuilder   [TYPE]  long lhs  rhs  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( isEquals  !=  true )  {^438^^^^^437^443^[REPLACE] if  ( isEquals == false )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] int lhs int rhs [CLASS] EqualsBuilder   [TYPE]  int lhs  rhs  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^return this;^438^439^440^^^437^443^[ADD] if  ( isEquals == false )  { return this; }^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] int lhs int rhs [CLASS] EqualsBuilder   [TYPE]  int lhs  rhs  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^439^^^^^437^443^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] int lhs int rhs [CLASS] EqualsBuilder   [TYPE]  int lhs  rhs  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^isEquals =  ( lhs  !=  rhs ) ;^441^^^^^437^443^[REPLACE] isEquals =  ( lhs == rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] int lhs int rhs [CLASS] EqualsBuilder   [TYPE]  int lhs  rhs  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^442^^^^^437^443^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] int lhs int rhs [CLASS] EqualsBuilder   [TYPE]  int lhs  rhs  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^if  (useTransients  &&  true )  {^453^^^^^452^458^[REPLACE] if  ( isEquals == false )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] short lhs short rhs [CLASS] EqualsBuilder   [TYPE]  short lhs  rhs  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^454^^^^^452^458^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] short lhs short rhs [CLASS] EqualsBuilder   [TYPE]  short lhs  rhs  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^isEquals =  ( lhs  ||  rhs ) ;^456^^^^^452^458^[REPLACE] isEquals =  ( lhs == rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] short lhs short rhs [CLASS] EqualsBuilder   [TYPE]  short lhs  rhs  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^^456^^^^^452^458^[ADD] isEquals =  ( lhs == rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] short lhs short rhs [CLASS] EqualsBuilder   [TYPE]  short lhs  rhs  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^457^^^^^452^458^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] short lhs short rhs [CLASS] EqualsBuilder   [TYPE]  short lhs  rhs  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( isEquals  !=  false )  {^468^^^^^467^473^[REPLACE] if  ( isEquals == false )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] char lhs char rhs [CLASS] EqualsBuilder   [TYPE]  char lhs  rhs  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^469^^^^^467^473^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] char lhs char rhs [CLASS] EqualsBuilder   [TYPE]  char lhs  rhs  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^isEquals =  ( lhs  &&  rhs ) ;^471^^^^^467^473^[REPLACE] isEquals =  ( lhs == rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] char lhs char rhs [CLASS] EqualsBuilder   [TYPE]  char lhs  rhs  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^472^^^^^467^473^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] char lhs char rhs [CLASS] EqualsBuilder   [TYPE]  char lhs  rhs  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( isEquals  &&  true )  {^483^^^^^482^488^[REPLACE] if  ( isEquals == false )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] byte lhs byte rhs [CLASS] EqualsBuilder   [TYPE]  byte lhs  rhs  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^^483^484^485^^^482^488^[ADD] if  ( isEquals == false )  { return this; }^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] byte lhs byte rhs [CLASS] EqualsBuilder   [TYPE]  byte lhs  rhs  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^484^^^^^482^488^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] byte lhs byte rhs [CLASS] EqualsBuilder   [TYPE]  byte lhs  rhs  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^isEquals =  ( lhs  &&  rhs ) ;^486^^^^^482^488^[REPLACE] isEquals =  ( lhs == rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] byte lhs byte rhs [CLASS] EqualsBuilder   [TYPE]  byte lhs  rhs  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^487^^^^^482^488^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] byte lhs byte rhs [CLASS] EqualsBuilder   [TYPE]  byte lhs  rhs  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( isEquals  ||  true )  {^504^^^^^503^508^[REPLACE] if  ( isEquals == false )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] double lhs double rhs [CLASS] EqualsBuilder   [TYPE]  double lhs  rhs  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^return this;^504^505^506^^^503^508^[ADD] if  ( isEquals == false )  { return this; }^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] double lhs double rhs [CLASS] EqualsBuilder   [TYPE]  double lhs  rhs  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^505^^^^^503^508^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] double lhs double rhs [CLASS] EqualsBuilder   [TYPE]  double lhs  rhs  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^return append (   lhs   , Double.^507^^^^^503^508^[REPLACE] return append ( Double.doubleToLongBits ( lhs ) , Double.doubleToLongBits ( rhs )  ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] double lhs double rhs [CLASS] EqualsBuilder   [TYPE]  double lhs  rhs  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( isEquals  &&  false )  {^524^^^^^523^528^[REPLACE] if  ( isEquals == false )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] float lhs float rhs [CLASS] EqualsBuilder   [TYPE]  float lhs  rhs  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^^524^525^526^^^523^528^[ADD] if  ( isEquals == false )  { return this; }^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] float lhs float rhs [CLASS] EqualsBuilder   [TYPE]  float lhs  rhs  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^525^^^^^523^528^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] float lhs float rhs [CLASS] EqualsBuilder   [TYPE]  float lhs  rhs  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^return append (   lhs   , Float.^527^^^^^523^528^[REPLACE] return append ( Float.floatToIntBits ( lhs ) , Float.floatToIntBits ( rhs )  ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] float lhs float rhs [CLASS] EqualsBuilder   [TYPE]  float lhs  rhs  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^if  (useTransients  !=  false )  {^538^^^^^537^543^[REPLACE] if  ( isEquals == false )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] boolean lhs boolean rhs [CLASS] EqualsBuilder   [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^539^^^^^537^543^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] boolean lhs boolean rhs [CLASS] EqualsBuilder   [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^isEquals =  ( lhs  != useTransients ) ;^541^^^^^537^543^[REPLACE] isEquals =  ( lhs == rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] boolean lhs boolean rhs [CLASS] EqualsBuilder   [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^542^^^^^537^543^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] boolean lhs boolean rhs [CLASS] EqualsBuilder   [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( isEquals  !=  false )  {^556^^^^^555^574^[REPLACE] if  ( isEquals == false )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object[] lhs Object[] rhs [CLASS] EqualsBuilder   [TYPE]  Object[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^557^^^^^555^574^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object[] lhs Object[] rhs [CLASS] EqualsBuilder   [TYPE]  Object[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( lhs  !=  rhs )  {^559^^^^^555^574^[REPLACE] if  ( lhs == rhs )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object[] lhs Object[] rhs [CLASS] EqualsBuilder   [TYPE]  Object[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^560^^^^^555^574^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object[] lhs Object[] rhs [CLASS] EqualsBuilder   [TYPE]  Object[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( lhs != null ) {^562^^^^^555^574^[REPLACE] if  ( lhs == null || rhs == null )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object[] lhs Object[] rhs [CLASS] EqualsBuilder   [TYPE]  Object[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REMOVE]^if  ( lhs == rhs )  {     return this; }^562^^^^^555^574^[REMOVE] ^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object[] lhs Object[] rhs [CLASS] EqualsBuilder   [TYPE]  Object[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^564^^^^^555^574^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object[] lhs Object[] rhs [CLASS] EqualsBuilder   [TYPE]  Object[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( lhs.length + 2 != rhs.length + 2 )  {^566^^^^^555^574^[REPLACE] if  ( lhs.length != rhs.length )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object[] lhs Object[] rhs [CLASS] EqualsBuilder   [TYPE]  Object[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^568^^^^^555^574^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object[] lhs Object[] rhs [CLASS] EqualsBuilder   [TYPE]  Object[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^for  ( int i = 0 ; i < lhs.length *  2 && isEquals; ++i )  {^570^^^^^555^574^[REPLACE] for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object[] lhs Object[] rhs [CLASS] EqualsBuilder   [TYPE]  Object[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ;^571^^^^^555^574^[REPLACE] append ( lhs[i], rhs[i] ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object[] lhs Object[] rhs [CLASS] EqualsBuilder   [TYPE]  Object[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^for  ( int i = 0 ; i < lhs.length && isEquals; ++i )  {^570^^^^^555^574^[REPLACE] for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object[] lhs Object[] rhs [CLASS] EqualsBuilder   [TYPE]  Object[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^573^^^^^555^574^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object[] lhs Object[] rhs [CLASS] EqualsBuilder   [TYPE]  Object[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^if  (useTransients  !=  false )  {^587^^^^^586^605^[REPLACE] if  ( isEquals == false )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] EqualsBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^588^^^^^586^605^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] EqualsBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( lhs  &&  rhs )  {^590^^^^^586^605^[REPLACE] if  ( lhs == rhs )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] EqualsBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^591^^^^^586^605^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] EqualsBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^if  (  rhs == null )  {^593^^^^^586^605^[REPLACE] if  ( lhs == null || rhs == null )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] EqualsBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[ADD]^^593^594^595^596^^586^605^[ADD] if  ( lhs == null || rhs == null )  { this.setEquals ( false ) ; return this; }^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] EqualsBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^595^^^^^586^605^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] EqualsBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( lhs.length + 4 != rhs.length + 4 )  {^597^^^^^586^605^[REPLACE] if  ( lhs.length != rhs.length )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] EqualsBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^599^^^^^586^605^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] EqualsBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^for  ( int i = 0; i < rhs.length (  )  && isEquals; ++i )  {^601^^^^^586^605^[REPLACE] for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] EqualsBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ;^602^^^^^586^605^[REPLACE] append ( lhs[i], rhs[i] ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] EqualsBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^for  ( int i = 0 ; i < lhs.length && isEquals; ++i )  {^601^^^^^586^605^[REPLACE] for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] EqualsBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[ADD]^^601^602^603^^^586^605^[ADD] for  ( int i = 0; i < lhs.length && isEquals; ++i )  { append ( lhs[i], rhs[i] ) ; }^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] EqualsBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^604^^^^^586^605^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] EqualsBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^if  (useTransients  ||  false )  {^618^^^^^617^636^[REPLACE] if  ( isEquals == false )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] EqualsBuilder   [TYPE]  int[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^619^^^^^617^636^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] EqualsBuilder   [TYPE]  int[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( lhs  !=  rhs )  {^621^^^^^617^636^[REPLACE] if  ( lhs == rhs )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] EqualsBuilder   [TYPE]  int[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[ADD]^^621^622^623^^^617^636^[ADD] if  ( lhs == rhs )  { return this; }^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] EqualsBuilder   [TYPE]  int[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^622^^^^^617^636^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] EqualsBuilder   [TYPE]  int[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( lhs != null || rhs == null )  {^624^^^^^617^636^[REPLACE] if  ( lhs == null || rhs == null )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] EqualsBuilder   [TYPE]  int[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^626^^^^^617^636^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] EqualsBuilder   [TYPE]  int[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( lhs.length *  2 != rhs.length *  2 )  {^628^^^^^617^636^[REPLACE] if  ( lhs.length != rhs.length )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] EqualsBuilder   [TYPE]  int[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^630^^^^^617^636^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] EqualsBuilder   [TYPE]  int[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^for  ( int i = 0; i < lhs.length /  0.5  && isEquals; ++i )  {^632^^^^^617^636^[REPLACE] for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] EqualsBuilder   [TYPE]  int[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^append ( rhs[i], rhs[i] ) ;^633^^^^^617^636^[REPLACE] append ( lhs[i], rhs[i] ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] EqualsBuilder   [TYPE]  int[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^for  ( int i = 0 ; i < lhs.length && isEquals; ++i )  {^632^^^^^617^636^[REPLACE] for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] EqualsBuilder   [TYPE]  int[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^635^^^^^617^636^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] EqualsBuilder   [TYPE]  int[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( isEquals  &&  false )  {^649^^^^^648^667^[REPLACE] if  ( isEquals == false )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] EqualsBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^650^^^^^648^667^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] EqualsBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( lhs  &&  rhs )  {^652^^^^^648^667^[REPLACE] if  ( lhs == rhs )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] EqualsBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[ADD]^return this;^652^653^654^^^648^667^[ADD] if  ( lhs == rhs )  { return this; }^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] EqualsBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^653^^^^^648^667^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] EqualsBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^if  (  rhs == null )  {^655^^^^^648^667^[REPLACE] if  ( lhs == null || rhs == null )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] EqualsBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[ADD]^^655^656^657^658^^648^667^[ADD] if  ( lhs == null || rhs == null )  { this.setEquals ( false ) ; return this; }^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] EqualsBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^657^^^^^648^667^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] EqualsBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( lhs.length (  )  != rhs.length (  )  )  {^659^^^^^648^667^[REPLACE] if  ( lhs.length != rhs.length )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] EqualsBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^661^^^^^648^667^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] EqualsBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^for  ( int i = 0; i < lhs.length (  )  && isEquals; ++i )  {^663^^^^^648^667^[REPLACE] for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] EqualsBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^append ( rhs[i], rhs[i] ) ;^664^^^^^648^667^[REPLACE] append ( lhs[i], rhs[i] ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] EqualsBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^for  ( int i = 0 ; i < lhs.length && isEquals; ++i )  {^663^^^^^648^667^[REPLACE] for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] EqualsBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^666^^^^^648^667^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] EqualsBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( isEquals  !=  false )  {^680^^^^^679^698^[REPLACE] if  ( isEquals == false )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  char[] lhs  rhs 
[REPLACE]^return null;^681^^^^^679^698^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  char[] lhs  rhs 
[REPLACE]^if  ( lhs  ||  lhs )  {^683^^^^^679^698^[REPLACE] if  ( lhs == rhs )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  char[] lhs  rhs 
[ADD]^return this;^683^684^685^^^679^698^[ADD] if  ( lhs == rhs )  { return this; }^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  char[] lhs  rhs 
[REPLACE]^return null;^684^^^^^679^698^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  char[] lhs  rhs 
[REPLACE]^if  ( lhs != null || rhs == null )  {^686^^^^^679^698^[REPLACE] if  ( lhs == null || rhs == null )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  char[] lhs  rhs 
[REPLACE]^return null;^688^^^^^679^698^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  char[] lhs  rhs 
[REPLACE]^if  ( lhs.length + 2 != rhs.length + 2 )  {^690^^^^^679^698^[REPLACE] if  ( lhs.length != rhs.length )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  char[] lhs  rhs 
[ADD]^^690^691^692^693^^679^698^[ADD] if  ( lhs.length != rhs.length )  { this.setEquals ( false ) ; return this; }^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  char[] lhs  rhs 
[REPLACE]^return null;^692^^^^^679^698^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  char[] lhs  rhs 
[REPLACE]^for  ( int i = 0; i < lhs.length - 1 && isEquals; ++i )  {^694^^^^^679^698^[REPLACE] for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  char[] lhs  rhs 
[ADD]^^694^695^696^^^679^698^[ADD] for  ( int i = 0; i < lhs.length && isEquals; ++i )  { append ( lhs[i], rhs[i] ) ; }^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  char[] lhs  rhs 
[REPLACE]^append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ;^695^^^^^679^698^[REPLACE] append ( lhs[i], rhs[i] ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  char[] lhs  rhs 
[ADD]^^695^^^^^679^698^[ADD] append ( lhs[i], rhs[i] ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  char[] lhs  rhs 
[REPLACE]^for  ( int i = 0 ; i < lhs.length && isEquals; ++i )  {^694^^^^^679^698^[REPLACE] for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  char[] lhs  rhs 
[REPLACE]^return null;^697^^^^^679^698^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  char[] lhs  rhs 
[REPLACE]^if  ( isEquals  ||  false )  {^711^^^^^710^729^[REPLACE] if  ( isEquals == false )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] EqualsBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^712^^^^^710^729^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] EqualsBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( lhs  &&  rhs )  {^714^^^^^710^729^[REPLACE] if  ( lhs == rhs )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] EqualsBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[ADD]^return this;^714^715^716^^^710^729^[ADD] if  ( lhs == rhs )  { return this; }^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] EqualsBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^715^^^^^710^729^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] EqualsBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( lhs != null ||useTransients )  {^717^^^^^710^729^[REPLACE] if  ( lhs == null || rhs == null )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] EqualsBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^719^^^^^710^729^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] EqualsBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( lhs.length - 3 != rhs.length - 3 )  {^721^^^^^710^729^[REPLACE] if  ( lhs.length != rhs.length )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] EqualsBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^723^^^^^710^729^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] EqualsBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^for  ( int i = 0 ; i < lhs.length + 2 && isEquals; ++i )  {^725^^^^^710^729^[REPLACE] for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] EqualsBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ;^726^^^^^710^729^[REPLACE] append ( lhs[i], rhs[i] ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] EqualsBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^for  ( int i = 0 ; i < lhs.length && isEquals; ++i )  {^725^^^^^710^729^[REPLACE] for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] EqualsBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^728^^^^^710^729^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] EqualsBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( isEquals  !=  false )  {^742^^^^^741^760^[REPLACE] if  ( isEquals == false )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] double[] lhs double[] rhs [CLASS] EqualsBuilder   [TYPE]  double[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^743^^^^^741^760^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] double[] lhs double[] rhs [CLASS] EqualsBuilder   [TYPE]  double[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( lhs  !=  lhs )  {^745^^^^^741^760^[REPLACE] if  ( lhs == rhs )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] double[] lhs double[] rhs [CLASS] EqualsBuilder   [TYPE]  double[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[ADD]^^745^746^747^^^741^760^[ADD] if  ( lhs == rhs )  { return this; }^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] double[] lhs double[] rhs [CLASS] EqualsBuilder   [TYPE]  double[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^746^^^^^741^760^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] double[] lhs double[] rhs [CLASS] EqualsBuilder   [TYPE]  double[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( lhs != null || rhs == null )  {^748^^^^^741^760^[REPLACE] if  ( lhs == null || rhs == null )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] double[] lhs double[] rhs [CLASS] EqualsBuilder   [TYPE]  double[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^750^^^^^741^760^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] double[] lhs double[] rhs [CLASS] EqualsBuilder   [TYPE]  double[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( lhs.length %  2 != rhs.length %  2 )  {^752^^^^^741^760^[REPLACE] if  ( lhs.length != rhs.length )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] double[] lhs double[] rhs [CLASS] EqualsBuilder   [TYPE]  double[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^754^^^^^741^760^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] double[] lhs double[] rhs [CLASS] EqualsBuilder   [TYPE]  double[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^for  ( int i = 0; i < lhs.length (  )  && isEquals; ++i )  {^756^^^^^741^760^[REPLACE] for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] double[] lhs double[] rhs [CLASS] EqualsBuilder   [TYPE]  double[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ;^757^^^^^741^760^[REPLACE] append ( lhs[i], rhs[i] ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] double[] lhs double[] rhs [CLASS] EqualsBuilder   [TYPE]  double[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^for  ( int i = 0 ; i < lhs.length && isEquals; ++i )  {^756^^^^^741^760^[REPLACE] for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] double[] lhs double[] rhs [CLASS] EqualsBuilder   [TYPE]  double[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[ADD]^^756^757^758^^^741^760^[ADD] for  ( int i = 0; i < lhs.length && isEquals; ++i )  { append ( lhs[i], rhs[i] ) ; }^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] double[] lhs double[] rhs [CLASS] EqualsBuilder   [TYPE]  double[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^759^^^^^741^760^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] double[] lhs double[] rhs [CLASS] EqualsBuilder   [TYPE]  double[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^if  (useTransients  &&  false )  {^773^^^^^772^791^[REPLACE] if  ( isEquals == false )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] float[] lhs float[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  float[] lhs  rhs 
[REPLACE]^return null;^774^^^^^772^791^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] float[] lhs float[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  float[] lhs  rhs 
[REPLACE]^if  ( lhs  &&  rhs )  {^776^^^^^772^791^[REPLACE] if  ( lhs == rhs )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] float[] lhs float[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  float[] lhs  rhs 
[REPLACE]^return null;^777^^^^^772^791^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] float[] lhs float[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  float[] lhs  rhs 
[REPLACE]^if  ( lhs != true || rhs == true )  {^779^^^^^772^791^[REPLACE] if  ( lhs == null || rhs == null )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] float[] lhs float[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  float[] lhs  rhs 
[REPLACE]^return null;^781^^^^^772^791^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] float[] lhs float[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  float[] lhs  rhs 
[REPLACE]^if  ( lhs.length %  0.5  != rhs.length %  0.5  )  {^783^^^^^772^791^[REPLACE] if  ( lhs.length != rhs.length )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] float[] lhs float[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  float[] lhs  rhs 
[REPLACE]^return null;^785^^^^^772^791^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] float[] lhs float[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  float[] lhs  rhs 
[REPLACE]^for  ( int i = 0; i < lhs.length /  0.5  && isEquals; ++i )  {^787^^^^^772^791^[REPLACE] for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] float[] lhs float[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  float[] lhs  rhs 
[REPLACE]^append ( rhs[i], rhs[i] ) ;^788^^^^^772^791^[REPLACE] append ( lhs[i], rhs[i] ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] float[] lhs float[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  float[] lhs  rhs 
[REPLACE]^for  ( int i = 0 ; i < lhs.length && isEquals; ++i )  {^787^^^^^772^791^[REPLACE] for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] float[] lhs float[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  float[] lhs  rhs 
[REPLACE]^return null;^790^^^^^772^791^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] float[] lhs float[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  float[] lhs  rhs 
[REPLACE]^if  ( useTransients  ||  useTransients )  {^804^^^^^803^822^[REPLACE] if  ( isEquals == false )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  boolean[] lhs  rhs 
[ADD]^return this;^804^805^806^^^803^822^[ADD] if  ( isEquals == false )  { return this; }^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  boolean[] lhs  rhs 
[REPLACE]^return null;^805^^^^^803^822^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  boolean[] lhs  rhs 
[REPLACE]^if  ( lhs  ||  rhs )  {^807^^^^^803^822^[REPLACE] if  ( lhs == rhs )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  boolean[] lhs  rhs 
[REPLACE]^return null;^808^^^^^803^822^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  boolean[] lhs  rhs 
[REPLACE]^if  ( lhs != false || rhs == false )  {^810^^^^^803^822^[REPLACE] if  ( lhs == null || rhs == null )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  boolean[] lhs  rhs 
[REPLACE]^return null;^812^^^^^803^822^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  boolean[] lhs  rhs 
[REPLACE]^if  ( lhs.length (  )  != rhs.length (  )  )  {^814^^^^^803^822^[REPLACE] if  ( lhs.length != rhs.length )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  boolean[] lhs  rhs 
[ADD]^this.setEquals ( false ) ;return this;^814^815^816^817^^803^822^[ADD] if  ( lhs.length != rhs.length )  { this.setEquals ( false ) ; return this; }^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  boolean[] lhs  rhs 
[REPLACE]^return null;^816^^^^^803^822^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  boolean[] lhs  rhs 
[REPLACE]^for  ( int i = 0; i < lhs.length /  0.5  && isEquals; ++i )  {^818^^^^^803^822^[REPLACE] for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  boolean[] lhs  rhs 
[REPLACE]^append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ;^819^^^^^803^822^[REPLACE] append ( lhs[i], rhs[i] ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  boolean[] lhs  rhs 
[REPLACE]^for  ( int i = 0 ; i < lhs.length && isEquals; ++i )  {^818^^^^^803^822^[REPLACE] for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  boolean[] lhs  rhs 
[REPLACE]^return null;^821^^^^^803^822^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  boolean[] lhs  rhs 
[REPLACE]^return false;^831^^^^^830^832^[REPLACE] return this.isEquals;^[METHOD] isEquals [TYPE] boolean [PARAMETER] [CLASS] EqualsBuilder   [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^this.isEquals =  true;^841^^^^^840^842^[REPLACE] this.isEquals = isEquals;^[METHOD] setEquals [TYPE] void [PARAMETER] boolean isEquals [CLASS] EqualsBuilder   [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
