[REPLACE]^public static final char PACKAGE_SEPARATOR_CHAR ;^45^^^^^^^[REPLACE] public static final char PACKAGE_SEPARATOR_CHAR = '.';^ [CLASS] ClassUtils  
[REPLACE]^public static final  int  PACKAGE_SEPARATOR =  int .valueOf ( PACKAGE_SEPARATOR_CHAR ) ;^50^^^^^^^[REPLACE] public static final String PACKAGE_SEPARATOR = String.valueOf ( PACKAGE_SEPARATOR_CHAR ) ;^ [CLASS] ClassUtils  
[REPLACE]^public static final char INNER_CLASS_SEPARATOR_CHAR  = null ;^55^^^^^^^[REPLACE] public static final char INNER_CLASS_SEPARATOR_CHAR = '$';^ [CLASS] ClassUtils  
[REPLACE]^public static final  byte  INNER_CLASS_SEPARATOR =  byte .valueOf ( INNER_CLASS_SEPARATOR_CHAR ) ;^60^^^^^^^[REPLACE] public static final String INNER_CLASS_SEPARATOR = String.valueOf ( INNER_CLASS_SEPARATOR_CHAR ) ;^ [CLASS] ClassUtils  
[REPLACE]^private  Map  primitiveWrapperMap = new HashMap (  ) ;^65^^^^^^^[REPLACE] private static Map  primitiveWrapperMap = new HashMap (  ) ;^ [CLASS] ClassUtils  
[REPLACE]^private static Map abbreviationMap  = null ;^81^^^^^^^[REPLACE] private static Map abbreviationMap = new HashMap (  ) ;^ [CLASS] ClassUtils  
[REPLACE]^classes.add ( null ) ;^102^^^^^101^103^[REPLACE] super (  ) ;^[METHOD] <init> [TYPE] ClassUtils() [PARAMETER] [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^if  ( object != true )  {^115^^^^^114^119^[REPLACE] if  ( object == null )  {^[METHOD] getShortClassName [TYPE] String [PARAMETER] Object object String valueIfNull [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Object object  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^return PACKAGE_SEPARATOR;^116^^^^^114^119^[REPLACE] return valueIfNull;^[METHOD] getShortClassName [TYPE] String [PARAMETER] Object object String valueIfNull [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Object object  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^return getShortClassName ( object .getClass (  )  .getName (  )  ) ;^118^^^^^114^119^[REPLACE] return getShortClassName ( object.getClass (  ) .getName (  )  ) ;^[METHOD] getShortClassName [TYPE] String [PARAMETER] Object object String valueIfNull [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Object object  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^if  ( cls != this )  {^128^^^^^127^132^[REPLACE] if  ( cls == null )  {^[METHOD] getShortClassName [TYPE] String [PARAMETER] Class cls [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Class cls  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[ADD]^return StringUtils.EMPTY;^128^129^130^^^127^132^[ADD] if  ( cls == null )  { return StringUtils.EMPTY; }^[METHOD] getShortClassName [TYPE] String [PARAMETER] Class cls [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Class cls  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^return new String ( chars, lastDot, chars.length - lastDot ) ;^129^^^^^127^132^[REPLACE] return StringUtils.EMPTY;^[METHOD] getShortClassName [TYPE] String [PARAMETER] Class cls [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Class cls  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^return getPackageName ( cls.getName (  )  ) ;^131^^^^^127^132^[REPLACE] return getShortClassName ( cls.getName (  )  ) ;^[METHOD] getShortClassName [TYPE] String [PARAMETER] Class cls [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Class cls  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^if  ( className != null )  {^143^^^^^142^159^[REPLACE] if  ( className == null )  {^[METHOD] getShortClassName [TYPE] String [PARAMETER] String className [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i  lastDot  [TYPE]  char[] chars 
[REPLACE]^return new String ( chars, lastDot, chars.length - lastDot ) ;^144^^^^^142^159^[REPLACE] return StringUtils.EMPTY;^[METHOD] getShortClassName [TYPE] String [PARAMETER] String className [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i  lastDot  [TYPE]  char[] chars 
[REPLACE]^if  ( valueIfNull.valueOf (  )  /  0.5  == 0 )  {^146^^^^^142^159^[REPLACE] if  ( className.length (  )  == 0 )  {^[METHOD] getShortClassName [TYPE] String [PARAMETER] String className [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i  lastDot  [TYPE]  char[] chars 
[ADD]^return StringUtils.EMPTY;^146^147^148^^^142^159^[ADD] if  ( className.length (  )  == 0 )  { return StringUtils.EMPTY; }^[METHOD] getShortClassName [TYPE] String [PARAMETER] String className [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i  lastDot  [TYPE]  char[] chars 
[REPLACE]^return new String ( chars, lastDot, chars.length - lastDot ) ;^147^^^^^142^159^[REPLACE] return StringUtils.EMPTY;^[METHOD] getShortClassName [TYPE] String [PARAMETER] String className [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i  lastDot  [TYPE]  char[] chars 
[REPLACE]^char[] chars = valueIfNull.toCharArray (  ) ;^149^^^^^142^159^[REPLACE] char[] chars = className.toCharArray (  ) ;^[METHOD] getShortClassName [TYPE] String [PARAMETER] String className [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i  lastDot  [TYPE]  char[] chars 
[ADD]^^149^^^^^142^159^[ADD] char[] chars = className.toCharArray (  ) ;^[METHOD] getShortClassName [TYPE] String [PARAMETER] String className [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i  lastDot  [TYPE]  char[] chars 
[REPLACE]^int lastDot = 0 * 1;^150^^^^^142^159^[REPLACE] int lastDot = 0;^[METHOD] getShortClassName [TYPE] String [PARAMETER] String className [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i  lastDot  [TYPE]  char[] chars 
[ADD]^^150^^^^^142^159^[ADD] int lastDot = 0;^[METHOD] getShortClassName [TYPE] String [PARAMETER] String className [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i  lastDot  [TYPE]  char[] chars 
[REPLACE]^if  ( chars[i]  ||  PACKAGE_SEPARATOR_CHAR )  {^152^^^^^142^159^[REPLACE] if  ( chars[i] == PACKAGE_SEPARATOR_CHAR )  {^[METHOD] getShortClassName [TYPE] String [PARAMETER] String className [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i  lastDot  [TYPE]  char[] chars 
[ADD]^^152^153^154^155^156^142^159^[ADD] if  ( chars[i] == PACKAGE_SEPARATOR_CHAR )  { lastDot = i + 1; } else if  ( chars[i] == INNER_CLASS_SEPARATOR_CHAR )  { chars[i] = PACKAGE_SEPARATOR_CHAR; }^[METHOD] getShortClassName [TYPE] String [PARAMETER] String className [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i  lastDot  [TYPE]  char[] chars 
[REPLACE]^}  if  ( chars[i]  != PACKAGE_SEPARATOR_CHAR )  {^154^^^^^142^159^[REPLACE] } else if  ( chars[i] == INNER_CLASS_SEPARATOR_CHAR )  {^[METHOD] getShortClassName [TYPE] String [PARAMETER] String className [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i  lastDot  [TYPE]  char[] chars 
[ADD]^}^154^155^156^^^142^159^[ADD] else if  ( chars[i] == INNER_CLASS_SEPARATOR_CHAR )  { chars[i] = PACKAGE_SEPARATOR_CHAR; }^[METHOD] getShortClassName [TYPE] String [PARAMETER] String className [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i  lastDot  [TYPE]  char[] chars 
[REPLACE]^Strings[i] = PACKAGE_SEPARATOR_CHAR;^155^^^^^142^159^[REPLACE] chars[i] = PACKAGE_SEPARATOR_CHAR;^[METHOD] getShortClassName [TYPE] String [PARAMETER] String className [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i  lastDot  [TYPE]  char[] chars 
[REPLACE]^chars[i]  = null ;^155^^^^^142^159^[REPLACE] chars[i] = PACKAGE_SEPARATOR_CHAR;^[METHOD] getShortClassName [TYPE] String [PARAMETER] String className [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i  lastDot  [TYPE]  char[] chars 
[ADD]^^155^^^^^142^159^[ADD] chars[i] = PACKAGE_SEPARATOR_CHAR;^[METHOD] getShortClassName [TYPE] String [PARAMETER] String className [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i  lastDot  [TYPE]  char[] chars 
[REPLACE]^lastDot = i  <  1;^153^^^^^142^159^[REPLACE] lastDot = i + 1;^[METHOD] getShortClassName [TYPE] String [PARAMETER] String className [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i  lastDot  [TYPE]  char[] chars 
[REPLACE]^} else if  ( chars[i]  !=  INNER_CLASS_SEPARATOR_CHAR )  {^154^^^^^142^159^[REPLACE] } else if  ( chars[i] == INNER_CLASS_SEPARATOR_CHAR )  {^[METHOD] getShortClassName [TYPE] String [PARAMETER] String className [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i  lastDot  [TYPE]  char[] chars 
[REPLACE]^for  ( int i = 0 ; i < chars.length - 4; i++ )  {^151^^^^^142^159^[REPLACE] for  ( int i = 0; i < chars.length; i++ )  {^[METHOD] getShortClassName [TYPE] String [PARAMETER] String className [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i  lastDot  [TYPE]  char[] chars 
[ADD]^^151^152^153^154^155^142^159^[ADD] for  ( int i = 0; i < chars.length; i++ )  { if  ( chars[i] == PACKAGE_SEPARATOR_CHAR )  { lastDot = i + 1; } else if  ( chars[i] == INNER_CLASS_SEPARATOR_CHAR )  { chars[i] = PACKAGE_SEPARATOR_CHAR;^[METHOD] getShortClassName [TYPE] String [PARAMETER] String className [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i  lastDot  [TYPE]  char[] chars 
[REPLACE]^if  ( chars[i]  !=  PACKAGE_SEPARATOR_CHAR )  {^152^^^^^142^159^[REPLACE] if  ( chars[i] == PACKAGE_SEPARATOR_CHAR )  {^[METHOD] getShortClassName [TYPE] String [PARAMETER] String className [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i  lastDot  [TYPE]  char[] chars 
[REPLACE]^}  if  ( chars[i]  &&  INNER_CLASS_SEPARATOR_CHAR )  {^154^^^^^142^159^[REPLACE] } else if  ( chars[i] == INNER_CLASS_SEPARATOR_CHAR )  {^[METHOD] getShortClassName [TYPE] String [PARAMETER] String className [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i  lastDot  [TYPE]  char[] chars 
[ADD]^}   chars[i] = PACKAGE_SEPARATOR_CHAR;^154^155^156^^^142^159^[ADD] else if  ( chars[i] == INNER_CLASS_SEPARATOR_CHAR )  { chars[i] = PACKAGE_SEPARATOR_CHAR; }^[METHOD] getShortClassName [TYPE] String [PARAMETER] String className [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i  lastDot  [TYPE]  char[] chars 
[REPLACE]^chars[i]  =  chars[i] ;^155^^^^^142^159^[REPLACE] chars[i] = PACKAGE_SEPARATOR_CHAR;^[METHOD] getShortClassName [TYPE] String [PARAMETER] String className [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i  lastDot  [TYPE]  char[] chars 
[REPLACE]^chars[i] ;^155^^^^^142^159^[REPLACE] chars[i] = PACKAGE_SEPARATOR_CHAR;^[METHOD] getShortClassName [TYPE] String [PARAMETER] String className [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i  lastDot  [TYPE]  char[] chars 
[REPLACE]^lastDot = i  >=  4;^153^^^^^142^159^[REPLACE] lastDot = i + 1;^[METHOD] getShortClassName [TYPE] String [PARAMETER] String className [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i  lastDot  [TYPE]  char[] chars 
[REPLACE]^}  if  ( chars[i]  ||  INNER_CLASS_SEPARATOR_CHAR )  {^154^^^^^142^159^[REPLACE] } else if  ( chars[i] == INNER_CLASS_SEPARATOR_CHAR )  {^[METHOD] getShortClassName [TYPE] String [PARAMETER] String className [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i  lastDot  [TYPE]  char[] chars 
[REPLACE]^lastDot = i  >=  1;^153^^^^^142^159^[REPLACE] lastDot = i + 1;^[METHOD] getShortClassName [TYPE] String [PARAMETER] String className [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i  lastDot  [TYPE]  char[] chars 
[ADD]^^153^^^^^142^159^[ADD] lastDot = i + 1;^[METHOD] getShortClassName [TYPE] String [PARAMETER] String className [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i  lastDot  [TYPE]  char[] chars 
[REPLACE]^lastDot = i  !=  1;^153^^^^^142^159^[REPLACE] lastDot = i + 1;^[METHOD] getShortClassName [TYPE] String [PARAMETER] String className [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i  lastDot  [TYPE]  char[] chars 
[REPLACE]^for  ( int i = 0 ; i < chars.length; i++ )  {^151^^^^^142^159^[REPLACE] for  ( int i = 0; i < chars.length; i++ )  {^[METHOD] getShortClassName [TYPE] String [PARAMETER] String className [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i  lastDot  [TYPE]  char[] chars 
[REPLACE]^return new String ( chars, lastDot, chars.length + 2 - lastDot ) ;^158^^^^^142^159^[REPLACE] return new String ( chars, lastDot, chars.length - lastDot ) ;^[METHOD] getShortClassName [TYPE] String [PARAMETER] String className [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i  lastDot  [TYPE]  char[] chars 
[REPLACE]^if  ( object != null )  {^171^^^^^170^175^[REPLACE] if  ( object == null )  {^[METHOD] getPackageName [TYPE] String [PARAMETER] Object object String valueIfNull [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Object object  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^return className;^172^^^^^170^175^[REPLACE] return valueIfNull;^[METHOD] getPackageName [TYPE] String [PARAMETER] Object object String valueIfNull [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Object object  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^return getPackageName ( object.getClass (  ) .forName (  )  ) ;^174^^^^^170^175^[REPLACE] return getPackageName ( object.getClass (  ) .getName (  )  ) ;^[METHOD] getPackageName [TYPE] String [PARAMETER] Object object String valueIfNull [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Object object  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^if  ( cls != true )  {^184^^^^^183^188^[REPLACE] if  ( cls == null )  {^[METHOD] getPackageName [TYPE] String [PARAMETER] Class cls [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Class cls  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^return new String ( chars, lastDot, chars.length - lastDot ) ;^185^^^^^183^188^[REPLACE] return StringUtils.EMPTY;^[METHOD] getPackageName [TYPE] String [PARAMETER] Class cls [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Class cls  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^return getShortClassName ( cls.getName (  )  ) ;^187^^^^^183^188^[REPLACE] return getPackageName ( cls.getName (  )  ) ;^[METHOD] getPackageName [TYPE] String [PARAMETER] Class cls [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Class cls  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^if  ( className != null )  {^200^^^^^199^208^[REPLACE] if  ( className == null )  {^[METHOD] getPackageName [TYPE] String [PARAMETER] String className [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i 
[ADD]^return StringUtils.EMPTY;^200^201^202^^^199^208^[ADD] if  ( className == null )  { return StringUtils.EMPTY; }^[METHOD] getPackageName [TYPE] String [PARAMETER] String className [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i 
[REPLACE]^return new String ( chars, lastDot, chars.length - lastDot ) ;^201^^^^^199^208^[REPLACE] return StringUtils.EMPTY;^[METHOD] getPackageName [TYPE] String [PARAMETER] String className [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i 
[REPLACE]^int i = valueIfNull.lastIndexOf ( PACKAGE_SEPARATOR_CHAR ) ;^203^^^^^199^208^[REPLACE] int i = className.lastIndexOf ( PACKAGE_SEPARATOR_CHAR ) ;^[METHOD] getPackageName [TYPE] String [PARAMETER] String className [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i 
[ADD]^^203^^^^^199^208^[ADD] int i = className.lastIndexOf ( PACKAGE_SEPARATOR_CHAR ) ;^[METHOD] getPackageName [TYPE] String [PARAMETER] String className [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i 
[REPLACE]^if  ( i  &&  -1L )  {^204^^^^^199^208^[REPLACE] if  ( i == -1 )  {^[METHOD] getPackageName [TYPE] String [PARAMETER] String className [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i 
[REPLACE]^return new String ( chars, lastDot, chars.length - lastDot ) ;^205^^^^^199^208^[REPLACE] return StringUtils.EMPTY;^[METHOD] getPackageName [TYPE] String [PARAMETER] String className [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i 
[REPLACE]^return className.substring ( 0 >>> 0, i ) ;^207^^^^^199^208^[REPLACE] return className.substring ( 0, i ) ;^[METHOD] getPackageName [TYPE] String [PARAMETER] String className [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i 
[REPLACE]^if  ( cls != true )  {^220^^^^^219^230^[REPLACE] if  ( cls == null )  {^[METHOD] getAllSuperclasses [TYPE] List [PARAMETER] Class cls [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Class cls  superclass  [TYPE]  List classes  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[ADD]^return null;^220^221^222^^^219^230^[ADD] if  ( cls == null )  { return null; }^[METHOD] getAllSuperclasses [TYPE] List [PARAMETER] Class cls [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Class cls  superclass  [TYPE]  List classes  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^return true;^221^^^^^219^230^[REPLACE] return null;^[METHOD] getAllSuperclasses [TYPE] List [PARAMETER] Class cls [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Class cls  superclass  [TYPE]  List classes  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^return this;^221^^^^^219^230^[REPLACE] return null;^[METHOD] getAllSuperclasses [TYPE] List [PARAMETER] Class cls [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Class cls  superclass  [TYPE]  List classes  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^List list = new ArrayList (  ) ;^223^^^^^219^230^[REPLACE] List classes = new ArrayList (  ) ;^[METHOD] getAllSuperclasses [TYPE] List [PARAMETER] Class cls [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Class cls  superclass  [TYPE]  List classes  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[ADD]^^223^^^^^219^230^[ADD] List classes = new ArrayList (  ) ;^[METHOD] getAllSuperclasses [TYPE] List [PARAMETER] Class cls [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Class cls  superclass  [TYPE]  List classes  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^Class superclass = superclass.getSuperclass (  ) ;^224^^^^^219^230^[REPLACE] Class superclass = cls.getSuperclass (  ) ;^[METHOD] getAllSuperclasses [TYPE] List [PARAMETER] Class cls [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Class cls  superclass  [TYPE]  List classes  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^while  ( superclass == null )  {^225^^^^^219^230^[REPLACE] while  ( superclass != null )  {^[METHOD] getAllSuperclasses [TYPE] List [PARAMETER] Class cls [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Class cls  superclass  [TYPE]  List classes  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^superclass =  cls.getSuperclass (  ) ;^227^^^^^219^230^[REPLACE] superclass = superclass.getSuperclass (  ) ;^[METHOD] getAllSuperclasses [TYPE] List [PARAMETER] Class cls [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Class cls  superclass  [TYPE]  List classes  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[ADD]^^227^^^^^219^230^[ADD] superclass = superclass.getSuperclass (  ) ;^[METHOD] getAllSuperclasses [TYPE] List [PARAMETER] Class cls [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Class cls  superclass  [TYPE]  List classes  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^return classNames;^229^^^^^219^230^[REPLACE] return classes;^[METHOD] getAllSuperclasses [TYPE] List [PARAMETER] Class cls [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Class cls  superclass  [TYPE]  List classes  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^if  ( cls != null )  {^246^^^^^245^267^[REPLACE] if  ( cls == null )  {^[METHOD] getAllInterfaces [TYPE] List [PARAMETER] Class cls [CLASS] ClassUtils   [TYPE]  Class[] interfaces  [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  Class cls  intface  [TYPE]  List list  superInterfaces  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i 
[REPLACE]^return true;^247^^^^^245^267^[REPLACE] return null;^[METHOD] getAllInterfaces [TYPE] List [PARAMETER] Class cls [CLASS] ClassUtils   [TYPE]  Class[] interfaces  [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  Class cls  intface  [TYPE]  List list  superInterfaces  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i 
[REPLACE]^return this;^247^^^^^245^267^[REPLACE] return null;^[METHOD] getAllInterfaces [TYPE] List [PARAMETER] Class cls [CLASS] ClassUtils   [TYPE]  Class[] interfaces  [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  Class cls  intface  [TYPE]  List list  superInterfaces  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i 
[REPLACE]^List classes = new ArrayList (  ) ;^249^^^^^245^267^[REPLACE] List list = new ArrayList (  ) ;^[METHOD] getAllInterfaces [TYPE] List [PARAMETER] Class cls [CLASS] ClassUtils   [TYPE]  Class[] interfaces  [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  Class cls  intface  [TYPE]  List list  superInterfaces  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i 
[ADD]^^249^^^^^245^267^[ADD] List list = new ArrayList (  ) ;^[METHOD] getAllInterfaces [TYPE] List [PARAMETER] Class cls [CLASS] ClassUtils   [TYPE]  Class[] interfaces  [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  Class cls  intface  [TYPE]  List list  superInterfaces  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i 
[REPLACE]^while  ( cls == null )  {^250^^^^^245^267^[REPLACE] while  ( cls != null )  {^[METHOD] getAllInterfaces [TYPE] List [PARAMETER] Class cls [CLASS] ClassUtils   [TYPE]  Class[] interfaces  [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  Class cls  intface  [TYPE]  List list  superInterfaces  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i 
[REPLACE]^if  ( list.contains ( interfaces[i] )   ||  false )  {^253^^^^^245^267^[REPLACE] if  ( list.contains ( interfaces[i] )  == false )  {^[METHOD] getAllInterfaces [TYPE] List [PARAMETER] Class cls [CLASS] ClassUtils   [TYPE]  Class[] interfaces  [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  Class cls  intface  [TYPE]  List list  superInterfaces  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i 
[REPLACE]^list .addAll ( this )  ;^254^^^^^245^267^[REPLACE] list.add ( interfaces[i] ) ;^[METHOD] getAllInterfaces [TYPE] List [PARAMETER] Class cls [CLASS] ClassUtils   [TYPE]  Class[] interfaces  [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  Class cls  intface  [TYPE]  List list  superInterfaces  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i 
[REPLACE]^if  ( list.contains ( intface )   != true )  {^259^^^^^245^267^[REPLACE] if  ( list.contains ( intface )  == false )  {^[METHOD] getAllInterfaces [TYPE] List [PARAMETER] Class cls [CLASS] ClassUtils   [TYPE]  Class[] interfaces  [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  Class cls  intface  [TYPE]  List list  superInterfaces  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i 
[REPLACE]^list.addAll ( intface ) ;^260^^^^^245^267^[REPLACE] list.add ( intface ) ;^[METHOD] getAllInterfaces [TYPE] List [PARAMETER] Class cls [CLASS] ClassUtils   [TYPE]  Class[] interfaces  [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  Class cls  intface  [TYPE]  List list  superInterfaces  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i 
[REPLACE]^for  ( int i = 0; i < interfaces.length + 2; i++ )  {^252^^^^^245^267^[REPLACE] for  ( int i = 0; i < interfaces.length; i++ )  {^[METHOD] getAllInterfaces [TYPE] List [PARAMETER] Class cls [CLASS] ClassUtils   [TYPE]  Class[] interfaces  [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  Class cls  intface  [TYPE]  List list  superInterfaces  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i 
[ADD]^^252^253^254^255^^245^267^[ADD] for  ( int i = 0; i < interfaces.length; i++ )  { if  ( list.contains ( interfaces[i] )  == false )  { list.add ( interfaces[i] ) ; }^[METHOD] getAllInterfaces [TYPE] List [PARAMETER] Class cls [CLASS] ClassUtils   [TYPE]  Class[] interfaces  [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  Class cls  intface  [TYPE]  List list  superInterfaces  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i 
[REPLACE]^list.addAll ( interfaces[i] ) ;^254^^^^^245^267^[REPLACE] list.add ( interfaces[i] ) ;^[METHOD] getAllInterfaces [TYPE] List [PARAMETER] Class cls [CLASS] ClassUtils   [TYPE]  Class[] interfaces  [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  Class cls  intface  [TYPE]  List list  superInterfaces  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i 
[REMOVE]^convertedClasses[i] = primitiveToWrapper (  classes[i]  ) ;^254^^^^^245^267^[REMOVE] ^[METHOD] getAllInterfaces [TYPE] List [PARAMETER] Class cls [CLASS] ClassUtils   [TYPE]  Class[] interfaces  [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  Class cls  intface  [TYPE]  List list  superInterfaces  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i 
[REPLACE]^if  ( list.contains ( intface )   &&  true )  {^259^^^^^245^267^[REPLACE] if  ( list.contains ( intface )  == false )  {^[METHOD] getAllInterfaces [TYPE] List [PARAMETER] Class cls [CLASS] ClassUtils   [TYPE]  Class[] interfaces  [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  Class cls  intface  [TYPE]  List list  superInterfaces  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i 
[REPLACE]^for  ( Iterator it = classNames.iterator (  ) ; it.hasNext (  ) ; )  {^257^^^^^245^267^[REPLACE] for  ( Iterator it = superInterfaces.iterator (  ) ; it.hasNext (  ) ; )  {^[METHOD] getAllInterfaces [TYPE] List [PARAMETER] Class cls [CLASS] ClassUtils   [TYPE]  Class[] interfaces  [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  Class cls  intface  [TYPE]  List list  superInterfaces  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i 
[REPLACE]^if  ( list.contains ( intface )   ||  false )  {^259^^^^^245^267^[REPLACE] if  ( list.contains ( intface )  == false )  {^[METHOD] getAllInterfaces [TYPE] List [PARAMETER] Class cls [CLASS] ClassUtils   [TYPE]  Class[] interfaces  [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  Class cls  intface  [TYPE]  List list  superInterfaces  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i 
[ADD]^list.add ( intface ) ;^259^260^261^^^245^267^[ADD] if  ( list.contains ( intface )  == false )  { list.add ( intface ) ; }^[METHOD] getAllInterfaces [TYPE] List [PARAMETER] Class cls [CLASS] ClassUtils   [TYPE]  Class[] interfaces  [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  Class cls  intface  [TYPE]  List list  superInterfaces  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i 
[REPLACE]^Class intface =  ( Class )  it.hasNext (  ) ;^258^^^^^245^267^[REPLACE] Class intface =  ( Class )  it.next (  ) ;^[METHOD] getAllInterfaces [TYPE] List [PARAMETER] Class cls [CLASS] ClassUtils   [TYPE]  Class[] interfaces  [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  Class cls  intface  [TYPE]  List list  superInterfaces  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i 
[ADD]^^258^^^^^245^267^[ADD] Class intface =  ( Class )  it.next (  ) ;^[METHOD] getAllInterfaces [TYPE] List [PARAMETER] Class cls [CLASS] ClassUtils   [TYPE]  Class[] interfaces  [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  Class cls  intface  [TYPE]  List list  superInterfaces  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i 
[REPLACE]^Class intface =  ( Class )  it.next (  ) ;^256^^^^^245^267^[REPLACE] List superInterfaces = getAllInterfaces ( interfaces[i] ) ;^[METHOD] getAllInterfaces [TYPE] List [PARAMETER] Class cls [CLASS] ClassUtils   [TYPE]  Class[] interfaces  [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  Class cls  intface  [TYPE]  List list  superInterfaces  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i 
[REPLACE]^for  ( Iterator it = list.iterator (  ) ; it.hasNext (  ) ; )  {^257^^^^^245^267^[REPLACE] for  ( Iterator it = superInterfaces.iterator (  ) ; it.hasNext (  ) ; )  {^[METHOD] getAllInterfaces [TYPE] List [PARAMETER] Class cls [CLASS] ClassUtils   [TYPE]  Class[] interfaces  [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  Class cls  intface  [TYPE]  List list  superInterfaces  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i 
[REPLACE]^if  ( list.contains ( intface )   !=  false )  {^259^^^^^245^267^[REPLACE] if  ( list.contains ( intface )  == false )  {^[METHOD] getAllInterfaces [TYPE] List [PARAMETER] Class cls [CLASS] ClassUtils   [TYPE]  Class[] interfaces  [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  Class cls  intface  [TYPE]  List list  superInterfaces  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i 
[REPLACE]^Class intface =  ( Class )  it .hasNext (  )  ;^258^^^^^245^267^[REPLACE] Class intface =  ( Class )  it.next (  ) ;^[METHOD] getAllInterfaces [TYPE] List [PARAMETER] Class cls [CLASS] ClassUtils   [TYPE]  Class[] interfaces  [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  Class cls  intface  [TYPE]  List list  superInterfaces  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i 
[REPLACE]^cls =  null.getSuperclass (  ) ;^264^^^^^245^267^[REPLACE] cls = cls.getSuperclass (  ) ;^[METHOD] getAllInterfaces [TYPE] List [PARAMETER] Class cls [CLASS] ClassUtils   [TYPE]  Class[] interfaces  [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  Class cls  intface  [TYPE]  List list  superInterfaces  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i 
[REPLACE]^Class[] interfaces = cls .getName (  )  ;^251^^^^^245^267^[REPLACE] Class[] interfaces = cls.getInterfaces (  ) ;^[METHOD] getAllInterfaces [TYPE] List [PARAMETER] Class cls [CLASS] ClassUtils   [TYPE]  Class[] interfaces  [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  Class cls  intface  [TYPE]  List list  superInterfaces  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < interfaces.length; i++ )  {^252^^^^^245^267^[REPLACE] for  ( int i = 0; i < interfaces.length; i++ )  {^[METHOD] getAllInterfaces [TYPE] List [PARAMETER] Class cls [CLASS] ClassUtils   [TYPE]  Class[] interfaces  [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  Class cls  intface  [TYPE]  List list  superInterfaces  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i 
[REPLACE]^if  ( superInterfaces.addAll ( interfaces[i] )   !=  false )  {^253^^^^^245^267^[REPLACE] if  ( list.contains ( interfaces[i] )  == false )  {^[METHOD] getAllInterfaces [TYPE] List [PARAMETER] Class cls [CLASS] ClassUtils   [TYPE]  Class[] interfaces  [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  Class cls  intface  [TYPE]  List list  superInterfaces  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i 
[REPLACE]^if  ( list.contains ( intface )   !=  true )  {^259^^^^^245^267^[REPLACE] if  ( list.contains ( intface )  == false )  {^[METHOD] getAllInterfaces [TYPE] List [PARAMETER] Class cls [CLASS] ClassUtils   [TYPE]  Class[] interfaces  [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  Class cls  intface  [TYPE]  List list  superInterfaces  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i 
[ADD]^^259^260^261^^^245^267^[ADD] if  ( list.contains ( intface )  == false )  { list.add ( intface ) ; }^[METHOD] getAllInterfaces [TYPE] List [PARAMETER] Class cls [CLASS] ClassUtils   [TYPE]  Class[] interfaces  [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  Class cls  intface  [TYPE]  List list  superInterfaces  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i 
[REPLACE]^for  ( int i = 0; i < interfaces.length /  0.5 ; i++ )  {^252^^^^^245^267^[REPLACE] for  ( int i = 0; i < interfaces.length; i++ )  {^[METHOD] getAllInterfaces [TYPE] List [PARAMETER] Class cls [CLASS] ClassUtils   [TYPE]  Class[] interfaces  [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  Class cls  intface  [TYPE]  List list  superInterfaces  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i 
[REPLACE]^for  ( Iterator it = list .add ( null )  ; it.hasNext (  ) ; )  {^257^^^^^245^267^[REPLACE] for  ( Iterator it = superInterfaces.iterator (  ) ; it.hasNext (  ) ; )  {^[METHOD] getAllInterfaces [TYPE] List [PARAMETER] Class cls [CLASS] ClassUtils   [TYPE]  Class[] interfaces  [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  Class cls  intface  [TYPE]  List list  superInterfaces  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i 
[REPLACE]^for  ( Iterator it = superInterfaces.iterator (  ) ; it.next (  ) ; )  {^257^^^^^245^267^[REPLACE] for  ( Iterator it = superInterfaces.iterator (  ) ; it.hasNext (  ) ; )  {^[METHOD] getAllInterfaces [TYPE] List [PARAMETER] Class cls [CLASS] ClassUtils   [TYPE]  Class[] interfaces  [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  Class cls  intface  [TYPE]  List list  superInterfaces  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i 
[REPLACE]^if  ( list.contains ( intface )   && true )  {^259^^^^^245^267^[REPLACE] if  ( list.contains ( intface )  == false )  {^[METHOD] getAllInterfaces [TYPE] List [PARAMETER] Class cls [CLASS] ClassUtils   [TYPE]  Class[] interfaces  [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  Class cls  intface  [TYPE]  List list  superInterfaces  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i 
[REPLACE]^for  ( Iterator it = list.size (  ) ; it.hasNext (  ) ; )  {^257^^^^^245^267^[REPLACE] for  ( Iterator it = superInterfaces.iterator (  ) ; it.hasNext (  ) ; )  {^[METHOD] getAllInterfaces [TYPE] List [PARAMETER] Class cls [CLASS] ClassUtils   [TYPE]  Class[] interfaces  [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  Class cls  intface  [TYPE]  List list  superInterfaces  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i 
[REPLACE]^return superInterfaces;^266^^^^^245^267^[REPLACE] return list;^[METHOD] getAllInterfaces [TYPE] List [PARAMETER] Class cls [CLASS] ClassUtils   [TYPE]  Class[] interfaces  [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  Class cls  intface  [TYPE]  List list  superInterfaces  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i 
[REPLACE]^if  ( classNames != null )  {^284^^^^^283^297^[REPLACE] if  ( classNames == null )  {^[METHOD] convertClassNamesToClasses [TYPE] List [PARAMETER] List classNames [CLASS] ClassUtils   [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  List classNames  classes  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  Exception ex 
[REPLACE]^return true;^285^^^^^283^297^[REPLACE] return null;^[METHOD] convertClassNamesToClasses [TYPE] List [PARAMETER] List classNames [CLASS] ClassUtils   [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  List classNames  classes  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  Exception ex 
[REPLACE]^List classes = new ArrayList ( classes.size (  )  ) ;^287^^^^^283^297^[REPLACE] List classes = new ArrayList ( classNames.size (  )  ) ;^[METHOD] convertClassNamesToClasses [TYPE] List [PARAMETER] List classNames [CLASS] ClassUtils   [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  List classNames  classes  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  Exception ex 
[REPLACE]^for  ( Iterator it = superInterfaces.iterator (  ) ; it.hasNext (  ) ; )  {^288^^^^^283^297^[REPLACE] for  ( Iterator it = classNames.iterator (  ) ; it.hasNext (  ) ; )  {^[METHOD] convertClassNamesToClasses [TYPE] List [PARAMETER] List classNames [CLASS] ClassUtils   [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  List classNames  classes  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  Exception ex 
[ADD]^^288^289^290^291^^283^297^[ADD] for  ( Iterator it = classNames.iterator (  ) ; it.hasNext (  ) ; )  { String className =  ( String )  it.next (  ) ; try { classes.add ( Class.forName ( className )  ) ;^[METHOD] convertClassNamesToClasses [TYPE] List [PARAMETER] List classNames [CLASS] ClassUtils   [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  List classNames  classes  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  Exception ex 
[ADD]^classes.add ( Class.forName ( className )  ) ;classes.add ( null ) ;^290^291^292^293^294^283^297^[ADD] try { classes.add ( Class.forName ( className )  ) ; } catch  ( Exception ex )  { classes.add ( null ) ; }^[METHOD] convertClassNamesToClasses [TYPE] List [PARAMETER] List classNames [CLASS] ClassUtils   [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  List classNames  classes  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  Exception ex 
[REPLACE]^classes.add (   valueIfNull    ) ;^291^^^^^283^297^[REPLACE] classes.add ( Class.forName ( className )  ) ;^[METHOD] convertClassNamesToClasses [TYPE] List [PARAMETER] List classNames [CLASS] ClassUtils   [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  List classNames  classes  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  Exception ex 
[REPLACE]^classes.add ( Class.forName ( valueIfNull )  ) ;^291^^^^^283^297^[REPLACE] classes.add ( Class.forName ( className )  ) ;^[METHOD] convertClassNamesToClasses [TYPE] List [PARAMETER] List classNames [CLASS] ClassUtils   [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  List classNames  classes  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  Exception ex 
[ADD]^^291^292^293^294^^283^297^[ADD] classes.add ( Class.forName ( className )  ) ; } catch  ( Exception ex )  { classes.add ( null ) ; }^[METHOD] convertClassNamesToClasses [TYPE] List [PARAMETER] List classNames [CLASS] ClassUtils   [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  List classNames  classes  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  Exception ex 
[REPLACE]^String className =  ( String )  it.hasNext (  ) ;^289^^^^^283^297^[REPLACE] String className =  ( String )  it.next (  ) ;^[METHOD] convertClassNamesToClasses [TYPE] List [PARAMETER] List classNames [CLASS] ClassUtils   [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  List classNames  classes  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  Exception ex 
[ADD]^^289^^^^^283^297^[ADD] String className =  ( String )  it.next (  ) ;^[METHOD] convertClassNamesToClasses [TYPE] List [PARAMETER] List classNames [CLASS] ClassUtils   [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  List classNames  classes  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  Exception ex 
[ADD]^^292^293^^^^283^297^[ADD] catch  ( Exception ex )  { classes.add ( null ) ;^[METHOD] convertClassNamesToClasses [TYPE] List [PARAMETER] List classNames [CLASS] ClassUtils   [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  List classNames  classes  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  Exception ex 
[REPLACE]^classes.addAll ( Class.forName ( valueIfNull )  ) ;^291^^^^^283^297^[REPLACE] classes.add ( Class.forName ( className )  ) ;^[METHOD] convertClassNamesToClasses [TYPE] List [PARAMETER] List classNames [CLASS] ClassUtils   [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  List classNames  classes  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  Exception ex 
[REPLACE]^classes.add ( Class .forName ( INNER_CLASS_SEPARATOR , false , null )   ) ;^291^^^^^283^297^[REPLACE] classes.add ( Class.forName ( className )  ) ;^[METHOD] convertClassNamesToClasses [TYPE] List [PARAMETER] List classNames [CLASS] ClassUtils   [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  List classNames  classes  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  Exception ex 
[REPLACE]^for  ( Iterator it = classes.iterator (  ) ; it.hasNext (  ) ; )  {^288^^^^^283^297^[REPLACE] for  ( Iterator it = classNames.iterator (  ) ; it.hasNext (  ) ; )  {^[METHOD] convertClassNamesToClasses [TYPE] List [PARAMETER] List classNames [CLASS] ClassUtils   [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  List classNames  classes  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  Exception ex 
[REPLACE]^return classNames;^296^^^^^283^297^[REPLACE] return classes;^[METHOD] convertClassNamesToClasses [TYPE] List [PARAMETER] List classNames [CLASS] ClassUtils   [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  List classNames  classes  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  Exception ex 
[REPLACE]^if  ( classNames !=classNames )  {^312^^^^^311^325^[REPLACE] if  ( classes == null )  {^[METHOD] convertClassesToClassNames [TYPE] List [PARAMETER] List classes [CLASS] ClassUtils   [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  List classNames  classes  [TYPE]  Class cls  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^return true;^313^^^^^311^325^[REPLACE] return null;^[METHOD] convertClassesToClassNames [TYPE] List [PARAMETER] List classes [CLASS] ClassUtils   [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  List classNames  classes  [TYPE]  Class cls  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^return false;^313^^^^^311^325^[REPLACE] return null;^[METHOD] convertClassesToClassNames [TYPE] List [PARAMETER] List classes [CLASS] ClassUtils   [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  List classNames  classes  [TYPE]  Class cls  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^List classNames = new ArrayList ( classNames.size (  )  ) ;^315^^^^^311^325^[REPLACE] List classNames = new ArrayList ( classes.size (  )  ) ;^[METHOD] convertClassesToClassNames [TYPE] List [PARAMETER] List classes [CLASS] ClassUtils   [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  List classNames  classes  [TYPE]  Class cls  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[ADD]^^315^^^^^311^325^[ADD] List classNames = new ArrayList ( classes.size (  )  ) ;^[METHOD] convertClassesToClassNames [TYPE] List [PARAMETER] List classes [CLASS] ClassUtils   [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  List classNames  classes  [TYPE]  Class cls  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^if  ( cls != null )  {^318^^^^^311^325^[REPLACE] if  ( cls == null )  {^[METHOD] convertClassesToClassNames [TYPE] List [PARAMETER] List classes [CLASS] ClassUtils   [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  List classNames  classes  [TYPE]  Class cls  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^classNames.addAll ( cls.getName (  )  ) ;^321^^^^^311^325^[REPLACE] classNames.add ( cls.getName (  )  ) ;^[METHOD] convertClassesToClassNames [TYPE] List [PARAMETER] List classes [CLASS] ClassUtils   [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  List classNames  classes  [TYPE]  Class cls  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REMOVE]^convertedClasses[i] = primitiveToWrapper (  classes[i]  ) ;^321^^^^^311^325^[REMOVE] ^[METHOD] convertClassesToClassNames [TYPE] List [PARAMETER] List classes [CLASS] ClassUtils   [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  List classNames  classes  [TYPE]  Class cls  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^classNames.add ( cls.getInterfaces (  )  ) ;^321^^^^^311^325^[REPLACE] classNames.add ( cls.getName (  )  ) ;^[METHOD] convertClassesToClassNames [TYPE] List [PARAMETER] List classes [CLASS] ClassUtils   [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  List classNames  classes  [TYPE]  Class cls  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^classNames.add ( this ) ;^319^^^^^311^325^[REPLACE] classNames.add ( null ) ;^[METHOD] convertClassesToClassNames [TYPE] List [PARAMETER] List classes [CLASS] ClassUtils   [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  List classNames  classes  [TYPE]  Class cls  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^for  ( Iterator it = classes.iterator (  ) ; it.next (  ) ; )  {^316^^^^^311^325^[REPLACE] for  ( Iterator it = classes.iterator (  ) ; it.hasNext (  ) ; )  {^[METHOD] convertClassesToClassNames [TYPE] List [PARAMETER] List classes [CLASS] ClassUtils   [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  List classNames  classes  [TYPE]  Class cls  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^if  ( cls != false )  {^318^^^^^311^325^[REPLACE] if  ( cls == null )  {^[METHOD] convertClassesToClassNames [TYPE] List [PARAMETER] List classes [CLASS] ClassUtils   [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  List classNames  classes  [TYPE]  Class cls  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^classNames .addAll ( this )  ;^321^^^^^311^325^[REPLACE] classNames.add ( cls.getName (  )  ) ;^[METHOD] convertClassesToClassNames [TYPE] List [PARAMETER] List classes [CLASS] ClassUtils   [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  List classNames  classes  [TYPE]  Class cls  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^classNames.add ( cls .forName ( INNER_CLASS_SEPARATOR )   ) ;^321^^^^^311^325^[REPLACE] classNames.add ( cls.getName (  )  ) ;^[METHOD] convertClassesToClassNames [TYPE] List [PARAMETER] List classes [CLASS] ClassUtils   [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  List classNames  classes  [TYPE]  Class cls  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^classNames.add ( false ) ;^319^^^^^311^325^[REPLACE] classNames.add ( null ) ;^[METHOD] convertClassesToClassNames [TYPE] List [PARAMETER] List classes [CLASS] ClassUtils   [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  List classNames  classes  [TYPE]  Class cls  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^Class cls =  ( Class )  it .hasNext (  )  ;^317^^^^^311^325^[REPLACE] Class cls =  ( Class )  it.next (  ) ;^[METHOD] convertClassesToClassNames [TYPE] List [PARAMETER] List classes [CLASS] ClassUtils   [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  List classNames  classes  [TYPE]  Class cls  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^for  ( Iterator it = classNames.iterator (  ) ; it.hasNext (  ) ; )  {^316^^^^^311^325^[REPLACE] for  ( Iterator it = classes.iterator (  ) ; it.hasNext (  ) ; )  {^[METHOD] convertClassesToClassNames [TYPE] List [PARAMETER] List classes [CLASS] ClassUtils   [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  List classNames  classes  [TYPE]  Class cls  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^Class cls =  ( Class )  it.hasNext (  ) ;^317^^^^^311^325^[REPLACE] Class cls =  ( Class )  it.next (  ) ;^[METHOD] convertClassesToClassNames [TYPE] List [PARAMETER] List classes [CLASS] ClassUtils   [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  List classNames  classes  [TYPE]  Class cls  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^return classes;^324^^^^^311^325^[REPLACE] return classNames;^[METHOD] convertClassesToClassNames [TYPE] List [PARAMETER] List classes [CLASS] ClassUtils   [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  List classNames  classes  [TYPE]  Class cls  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^if  ( ArrayUtils.isSameLength ( classArray, toClassArray )   ||  true )  {^361^^^^^360^376^[REPLACE] if  ( ArrayUtils.isSameLength ( classArray, toClassArray )  == false )  {^[METHOD] isAssignable [TYPE] boolean [PARAMETER] Class[] classArray Class[] toClassArray [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Class[] classArray  toClassArray  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i 
[REPLACE]^return true;^362^^^^^360^376^[REPLACE] return false;^[METHOD] isAssignable [TYPE] boolean [PARAMETER] Class[] classArray Class[] toClassArray [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Class[] classArray  toClassArray  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i 
[REPLACE]^if  ( toClassArray != null )  {^364^^^^^360^376^[REPLACE] if  ( classArray == null )  {^[METHOD] isAssignable [TYPE] boolean [PARAMETER] Class[] classArray Class[] toClassArray [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Class[] classArray  toClassArray  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i 
[REPLACE]^toClassArray = ArrayUtils.EMPTY_CLASS_ARRAY; ;^365^^^^^360^376^[REPLACE] classArray = ArrayUtils.EMPTY_CLASS_ARRAY;^[METHOD] isAssignable [TYPE] boolean [PARAMETER] Class[] classArray Class[] toClassArray [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Class[] classArray  toClassArray  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i 
[REPLACE]^if  ( toClassArray != null )  {^367^^^^^360^376^[REPLACE] if  ( toClassArray == null )  {^[METHOD] isAssignable [TYPE] boolean [PARAMETER] Class[] classArray Class[] toClassArray [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Class[] classArray  toClassArray  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i 
[ADD]^^367^368^369^^^360^376^[ADD] if  ( toClassArray == null )  { toClassArray = ArrayUtils.EMPTY_CLASS_ARRAY; }^[METHOD] isAssignable [TYPE] boolean [PARAMETER] Class[] classArray Class[] toClassArray [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Class[] classArray  toClassArray  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i 
[REPLACE]^classArray = ArrayUtils.EMPTY_CLASS_ARRAY; ;^368^^^^^360^376^[REPLACE] toClassArray = ArrayUtils.EMPTY_CLASS_ARRAY;^[METHOD] isAssignable [TYPE] boolean [PARAMETER] Class[] classArray Class[] toClassArray [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Class[] classArray  toClassArray  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i 
[REPLACE]^if  ( isAssignable ( classArray[i], toClassArray[i] )   &&  true )  {^371^^^^^360^376^[REPLACE] if  ( isAssignable ( classArray[i], toClassArray[i] )  == false )  {^[METHOD] isAssignable [TYPE] boolean [PARAMETER] Class[] classArray Class[] toClassArray [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Class[] classArray  toClassArray  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i 
[REPLACE]^return true;^372^^^^^360^376^[REPLACE] return false;^[METHOD] isAssignable [TYPE] boolean [PARAMETER] Class[] classArray Class[] toClassArray [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Class[] classArray  toClassArray  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i 
[REPLACE]^for  ( int i = 0; i < classArray.length - 1; i++ )  {^370^^^^^360^376^[REPLACE] for  ( int i = 0; i < classArray.length; i++ )  {^[METHOD] isAssignable [TYPE] boolean [PARAMETER] Class[] classArray Class[] toClassArray [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Class[] classArray  toClassArray  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i 
[REPLACE]^if  ( isAssignable ( classArray[i], toClassArray[i] )   && true )  {^371^^^^^360^376^[REPLACE] if  ( isAssignable ( classArray[i], toClassArray[i] )  == false )  {^[METHOD] isAssignable [TYPE] boolean [PARAMETER] Class[] classArray Class[] toClassArray [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Class[] classArray  toClassArray  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i 
[ADD]^^371^372^373^^^360^376^[ADD] if  ( isAssignable ( classArray[i], toClassArray[i] )  == false )  { return false; }^[METHOD] isAssignable [TYPE] boolean [PARAMETER] Class[] classArray Class[] toClassArray [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Class[] classArray  toClassArray  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < classArray.length; i++ )  {^370^^^^^360^376^[REPLACE] for  ( int i = 0; i < classArray.length; i++ )  {^[METHOD] isAssignable [TYPE] boolean [PARAMETER] Class[] classArray Class[] toClassArray [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Class[] classArray  toClassArray  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i 
[ADD]^^370^371^372^373^^360^376^[ADD] for  ( int i = 0; i < classArray.length; i++ )  { if  ( isAssignable ( classArray[i], toClassArray[i] )  == false )  { return false; }^[METHOD] isAssignable [TYPE] boolean [PARAMETER] Class[] classArray Class[] toClassArray [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Class[] classArray  toClassArray  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i 
[REPLACE]^return false;^375^^^^^360^376^[REPLACE] return true;^[METHOD] isAssignable [TYPE] boolean [PARAMETER] Class[] classArray Class[] toClassArray [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Class[] classArray  toClassArray  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i 
[REPLACE]^if  ( cls != null )  {^405^^^^^404^460^[REPLACE] if  ( toClass == null )  {^[METHOD] isAssignable [TYPE] boolean [PARAMETER] Class cls Class toClass [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Class cls  toClass  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^return true;^406^^^^^404^460^[REPLACE] return false;^[METHOD] isAssignable [TYPE] boolean [PARAMETER] Class cls Class toClass [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Class cls  toClass  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^if  ( cls !=toClass )  {^409^^^^^404^460^[REPLACE] if  ( cls == null )  {^[METHOD] isAssignable [TYPE] boolean [PARAMETER] Class cls Class toClass [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Class cls  toClass  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^return ! ( toClass.forName (  )  ) ;^410^^^^^404^460^[REPLACE] return ! ( toClass.isPrimitive (  )  ) ;^[METHOD] isAssignable [TYPE] boolean [PARAMETER] Class cls Class toClass [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Class cls  toClass  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^return ! ( toClass .isAssignableFrom ( 0 )   ) ;^410^^^^^404^460^[REPLACE] return ! ( toClass.isPrimitive (  )  ) ;^[METHOD] isAssignable [TYPE] boolean [PARAMETER] Class cls Class toClass [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Class cls  toClass  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^if  ( Float.TYPE.equals ( cls )  )  {^412^^^^^404^460^[REPLACE] if  ( cls.equals ( toClass )  )  {^[METHOD] isAssignable [TYPE] boolean [PARAMETER] Class cls Class toClass [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Class cls  toClass  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^return false;^413^^^^^404^460^[REPLACE] return true;^[METHOD] isAssignable [TYPE] boolean [PARAMETER] Class cls Class toClass [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Class cls  toClass  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^if  ( Float.TYPE.equals ( cls )  )  {^415^^^^^404^460^[REPLACE] if  ( cls.isPrimitive (  )  )  {^[METHOD] isAssignable [TYPE] boolean [PARAMETER] Class cls Class toClass [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Class cls  toClass  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[ADD]^^415^416^417^418^^404^460^[ADD] if  ( cls.isPrimitive (  )  )  { if  ( toClass.isPrimitive (  )  == false )  { return false; }^[METHOD] isAssignable [TYPE] boolean [PARAMETER] Class cls Class toClass [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Class cls  toClass  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^if  ( toClass.isPrimitive (  )   !=  false )  {^416^^^^^404^460^[REPLACE] if  ( toClass.isPrimitive (  )  == false )  {^[METHOD] isAssignable [TYPE] boolean [PARAMETER] Class cls Class toClass [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Class cls  toClass  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^return true;^417^^^^^404^460^[REPLACE] return false;^[METHOD] isAssignable [TYPE] boolean [PARAMETER] Class cls Class toClass [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Class cls  toClass  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^if  ( Float.TYPE.equals ( cls )  )  {^419^^^^^404^460^[REPLACE] if  ( Integer.TYPE.equals ( cls )  )  {^[METHOD] isAssignable [TYPE] boolean [PARAMETER] Class cls Class toClass [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Class cls  toClass  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^return   Float.TYPE^420^421^422^^^404^460^[REPLACE] return Long.TYPE.equals ( toClass ) || Float.TYPE.equals ( toClass ) || Double.TYPE.equals ( toClass ) ;^[METHOD] isAssignable [TYPE] boolean [PARAMETER] Class cls Class toClass [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Class cls  toClass  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^if  ( Float.TYPE.equals ( cls )  )  {^424^^^^^404^460^[REPLACE] if  ( Long.TYPE.equals ( cls )  )  {^[METHOD] isAssignable [TYPE] boolean [PARAMETER] Class cls Class toClass [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Class cls  toClass  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^return Float.TYPE.equals ( toClass ) ;^425^426^^^^404^460^[REPLACE] return Float.TYPE.equals ( toClass ) || Double.TYPE.equals ( toClass ) ;^[METHOD] isAssignable [TYPE] boolean [PARAMETER] Class cls Class toClass [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Class cls  toClass  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^if  ( Boolean.TYPE.equals ( toClass )  )  {^428^^^^^404^460^[REPLACE] if  ( Boolean.TYPE.equals ( cls )  )  {^[METHOD] isAssignable [TYPE] boolean [PARAMETER] Class cls Class toClass [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Class cls  toClass  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^return true;^429^^^^^404^460^[REPLACE] return false;^[METHOD] isAssignable [TYPE] boolean [PARAMETER] Class cls Class toClass [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Class cls  toClass  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^if  ( Double.TYPE.equals ( toClass )  )  {^431^^^^^404^460^[REPLACE] if  ( Double.TYPE.equals ( cls )  )  {^[METHOD] isAssignable [TYPE] boolean [PARAMETER] Class cls Class toClass [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Class cls  toClass  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[ADD]^return false;^431^432^433^^^404^460^[ADD] if  ( Double.TYPE.equals ( cls )  )  { return false; }^[METHOD] isAssignable [TYPE] boolean [PARAMETER] Class cls Class toClass [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Class cls  toClass  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^return true;^432^^^^^404^460^[REPLACE] return false;^[METHOD] isAssignable [TYPE] boolean [PARAMETER] Class cls Class toClass [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Class cls  toClass  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^if  ( Byte.TYPE.equals ( cls )  )  {^434^^^^^404^460^[REPLACE] if  ( Float.TYPE.equals ( cls )  )  {^[METHOD] isAssignable [TYPE] boolean [PARAMETER] Class cls Class toClass [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Class cls  toClass  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[ADD]^^434^435^436^^^404^460^[ADD] if  ( Float.TYPE.equals ( cls )  )  { return Double.TYPE.equals ( toClass ) ; }^[METHOD] isAssignable [TYPE] boolean [PARAMETER] Class cls Class toClass [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Class cls  toClass  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^return Double.TYPE .getClass (  )  ;^435^^^^^404^460^[REPLACE] return Double.TYPE.equals ( toClass ) ;^[METHOD] isAssignable [TYPE] boolean [PARAMETER] Class cls Class toClass [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Class cls  toClass  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^if  ( Float.TYPE.equals ( cls )  )  {^437^^^^^404^460^[REPLACE] if  ( Character.TYPE.equals ( cls )  )  {^[METHOD] isAssignable [TYPE] boolean [PARAMETER] Class cls Class toClass [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Class cls  toClass  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^return Integer.TYPE.equals ( toClass ) && Long.TYPE.equals ( toClass ) && Float.TYPE.equals ( toClass ) && Double.TYPE.equals ( toClass ) ;^438^439^440^441^^404^460^[REPLACE] return Integer.TYPE.equals ( toClass ) || Long.TYPE.equals ( toClass ) || Float.TYPE.equals ( toClass ) || Double.TYPE.equals ( toClass ) ;^[METHOD] isAssignable [TYPE] boolean [PARAMETER] Class cls Class toClass [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Class cls  toClass  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^if  ( Float.TYPE.equals ( cls )  )  {^443^^^^^404^460^[REPLACE] if  ( Short.TYPE.equals ( cls )  )  {^[METHOD] isAssignable [TYPE] boolean [PARAMETER] Class cls Class toClass [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Class cls  toClass  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[ADD]^^443^444^445^446^447^404^460^[ADD] if  ( Short.TYPE.equals ( cls )  )  { return Integer.TYPE.equals ( toClass ) || Long.TYPE.equals ( toClass ) || Float.TYPE.equals ( toClass ) || Double.TYPE.equals ( toClass ) ;^[METHOD] isAssignable [TYPE] boolean [PARAMETER] Class cls Class toClass [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Class cls  toClass  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^return Integer.TYPE.equals ( toClass ) && Long.TYPE.equals ( toClass ) && Float.TYPE.equals ( toClass ) && Double.TYPE.equals ( toClass ) ;^444^445^446^447^^404^460^[REPLACE] return Integer.TYPE.equals ( toClass ) || Long.TYPE.equals ( toClass ) || Float.TYPE.equals ( toClass ) || Double.TYPE.equals ( toClass ) ;^[METHOD] isAssignable [TYPE] boolean [PARAMETER] Class cls Class toClass [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Class cls  toClass  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^if  ( Float.TYPE.equals ( cls )  )  {^449^^^^^404^460^[REPLACE] if  ( Byte.TYPE.equals ( cls )  )  {^[METHOD] isAssignable [TYPE] boolean [PARAMETER] Class cls Class toClass [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Class cls  toClass  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^return Short.TYPE .getClass (  )  || Integer.TYPE^450^451^452^453^^404^460^[REPLACE] return Short.TYPE.equals ( toClass ) || Integer.TYPE.equals ( toClass ) || Long.TYPE.equals ( toClass ) || Float.TYPE.equals ( toClass )^[METHOD] isAssignable [TYPE] boolean [PARAMETER] Class cls Class toClass [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Class cls  toClass  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^return Long.TYPE.equals ( toClass ) ;^420^421^422^^^404^460^[REPLACE] return Long.TYPE.equals ( toClass ) || Float.TYPE.equals ( toClass ) || Double.TYPE.equals ( toClass ) ;^[METHOD] isAssignable [TYPE] boolean [PARAMETER] Class cls Class toClass [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Class cls  toClass  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^return Short.TYPE.equals ( toClass ) || Integer.TYPE.equals ( toClass )^425^426^^^^404^460^[REPLACE] return Float.TYPE.equals ( toClass ) || Double.TYPE.equals ( toClass ) ;^[METHOD] isAssignable [TYPE] boolean [PARAMETER] Class cls Class toClass [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Class cls  toClass  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^return Double.TYPE.equals ( cls ) ;^435^^^^^404^460^[REPLACE] return Double.TYPE.equals ( toClass ) ;^[METHOD] isAssignable [TYPE] boolean [PARAMETER] Class cls Class toClass [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Class cls  toClass  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^return Integer.TYPE.equals ( toClass ) ;^438^439^440^441^^404^460^[REPLACE] return Integer.TYPE.equals ( toClass ) || Long.TYPE.equals ( toClass ) || Float.TYPE.equals ( toClass ) || Double.TYPE.equals ( toClass ) ;^[METHOD] isAssignable [TYPE] boolean [PARAMETER] Class cls Class toClass [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Class cls  toClass  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^return Integer.TYPE .getClass (  )  || Long.TYPE^444^445^446^447^^404^460^[REPLACE] return Integer.TYPE.equals ( toClass ) || Long.TYPE.equals ( toClass ) || Float.TYPE.equals ( toClass ) || Double.TYPE.equals ( toClass ) ;^[METHOD] isAssignable [TYPE] boolean [PARAMETER] Class cls Class toClass [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Class cls  toClass  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^return true;^457^^^^^404^460^[REPLACE] return false;^[METHOD] isAssignable [TYPE] boolean [PARAMETER] Class cls Class toClass [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Class cls  toClass  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^if  ( cls.forName (  )   || true )  {^416^^^^^404^460^[REPLACE] if  ( toClass.isPrimitive (  )  == false )  {^[METHOD] isAssignable [TYPE] boolean [PARAMETER] Class cls Class toClass [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Class cls  toClass  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^return Long.TYPE .getClass (  )  || Float.TYPE^420^421^422^^^404^460^[REPLACE] return Long.TYPE.equals ( toClass ) || Float.TYPE.equals ( toClass ) || Double.TYPE.equals ( toClass ) ;^[METHOD] isAssignable [TYPE] boolean [PARAMETER] Class cls Class toClass [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Class cls  toClass  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^return Float.TYPE.equals ( toClass ) && Double.TYPE.equals ( toClass ) ;^425^426^^^^404^460^[REPLACE] return Float.TYPE.equals ( toClass ) || Double.TYPE.equals ( toClass ) ;^[METHOD] isAssignable [TYPE] boolean [PARAMETER] Class cls Class toClass [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Class cls  toClass  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^if  ( Boolean.TYPE .getClass (  )   )  {^428^^^^^404^460^[REPLACE] if  ( Boolean.TYPE.equals ( cls )  )  {^[METHOD] isAssignable [TYPE] boolean [PARAMETER] Class cls Class toClass [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Class cls  toClass  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^return Short.TYPE .getClass (  )  && Integer.TYPE^450^451^452^453^^404^460^[REPLACE] return Short.TYPE.equals ( toClass ) || Integer.TYPE.equals ( toClass ) || Long.TYPE.equals ( toClass ) || Float.TYPE.equals ( toClass )^[METHOD] isAssignable [TYPE] boolean [PARAMETER] Class cls Class toClass [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Class cls  toClass  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^return   Long.TYPE.equals ( toClass ) || Float.TYPE.equals ( toClass ) || Double.TYPE.equals ( toClass ) ;^438^439^440^441^^404^460^[REPLACE] return Integer.TYPE.equals ( toClass ) || Long.TYPE.equals ( toClass ) || Float.TYPE.equals ( toClass ) || Double.TYPE.equals ( toClass ) ;^[METHOD] isAssignable [TYPE] boolean [PARAMETER] Class cls Class toClass [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Class cls  toClass  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^return Integer.TYPE.equals ( toClass ) ;^444^445^446^447^^404^460^[REPLACE] return Integer.TYPE.equals ( toClass ) || Long.TYPE.equals ( toClass ) || Float.TYPE.equals ( toClass ) || Double.TYPE.equals ( toClass ) ;^[METHOD] isAssignable [TYPE] boolean [PARAMETER] Class cls Class toClass [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Class cls  toClass  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^return toClass.forName ( cls ) ;^459^^^^^404^460^[REPLACE] return toClass.isAssignableFrom ( cls ) ;^[METHOD] isAssignable [TYPE] boolean [PARAMETER] Class cls Class toClass [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Class cls  toClass  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^Class convertedClass = convertedClass;^475^^^^^474^480^[REPLACE] Class convertedClass = cls;^[METHOD] primitiveToWrapper [TYPE] Class [PARAMETER] Class cls [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Class cls  convertedClass  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[ADD]^^475^^^^^474^480^[ADD] Class convertedClass = cls;^[METHOD] primitiveToWrapper [TYPE] Class [PARAMETER] Class cls [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Class cls  convertedClass  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^if  ( cls == true && cls.isPrimitive (  )  )  {^476^^^^^474^480^[REPLACE] if  ( cls != null && cls.isPrimitive (  )  )  {^[METHOD] primitiveToWrapper [TYPE] Class [PARAMETER] Class cls [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Class cls  convertedClass  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^convertedClass =   ( Class )  primitiveWrapperMap.get ( null ) ;^477^^^^^474^480^[REPLACE] convertedClass =  ( Class )  primitiveWrapperMap.get ( cls ) ;^[METHOD] primitiveToWrapper [TYPE] Class [PARAMETER] Class cls [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Class cls  convertedClass  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[ADD]^^477^^^^^474^480^[ADD] convertedClass =  ( Class )  primitiveWrapperMap.get ( cls ) ;^[METHOD] primitiveToWrapper [TYPE] Class [PARAMETER] Class cls [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Class cls  convertedClass  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^return convertedClasses;^479^^^^^474^480^[REPLACE] return convertedClass;^[METHOD] primitiveToWrapper [TYPE] Class [PARAMETER] Class cls [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Class cls  convertedClass  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^if  ( classes != null )  {^493^^^^^492^506^[REPLACE] if  ( classes == null )  {^[METHOD] primitivesToWrappers [TYPE] Class[] [PARAMETER] Class[] classes [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Class[] classes  convertedClasses  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i 
[REPLACE]^return this;^494^^^^^492^506^[REPLACE] return null;^[METHOD] primitivesToWrappers [TYPE] Class[] [PARAMETER] Class[] classes [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Class[] classes  convertedClasses  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i 
[REPLACE]^return true;^494^^^^^492^506^[REPLACE] return null;^[METHOD] primitivesToWrappers [TYPE] Class[] [PARAMETER] Class[] classes [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Class[] classes  convertedClasses  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i 
[REPLACE]^if  ( convertedClasses.length (  )  == 0  )  {^497^^^^^492^506^[REPLACE] if  ( classes.length == 0 )  {^[METHOD] primitivesToWrappers [TYPE] Class[] [PARAMETER] Class[] classes [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Class[] classes  convertedClasses  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i 
[REPLACE]^return classNames;^498^^^^^492^506^[REPLACE] return classes;^[METHOD] primitivesToWrappers [TYPE] Class[] [PARAMETER] Class[] classes [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Class[] classes  convertedClasses  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i 
[REPLACE]^return convertedClasses;^498^^^^^492^506^[REPLACE] return classes;^[METHOD] primitivesToWrappers [TYPE] Class[] [PARAMETER] Class[] classes [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Class[] classes  convertedClasses  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i 
[REPLACE]^Class intface =  ( Class )  it.next (  ) ;^501^^^^^492^506^[REPLACE] Class[] convertedClasses = new Class[classes.length];^[METHOD] primitivesToWrappers [TYPE] Class[] [PARAMETER] Class[] classes [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Class[] classes  convertedClasses  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i 
[REPLACE]^for  ( int i=0; i < classes.length + 4; i++ )  {^502^^^^^492^506^[REPLACE] for  ( int i=0; i < classes.length; i++ )  {^[METHOD] primitivesToWrappers [TYPE] Class[] [PARAMETER] Class[] classes [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Class[] classes  convertedClasses  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i 
[REPLACE]^convertedClasses[i]  = null ;^503^^^^^492^506^[REPLACE] convertedClasses[i] = primitiveToWrapper (  classes[i]  ) ;^[METHOD] primitivesToWrappers [TYPE] Class[] [PARAMETER] Class[] classes [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Class[] classes  convertedClasses  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i 
[REPLACE]^convertedClasses[i] ;^503^^^^^492^506^[REPLACE] convertedClasses[i] = primitiveToWrapper (  classes[i]  ) ;^[METHOD] primitivesToWrappers [TYPE] Class[] [PARAMETER] Class[] classes [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Class[] classes  convertedClasses  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i 
[ADD]^^503^^^^^492^506^[ADD] convertedClasses[i] = primitiveToWrapper (  classes[i]  ) ;^[METHOD] primitivesToWrappers [TYPE] Class[] [PARAMETER] Class[] classes [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Class[] classes  convertedClasses  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i 
[REPLACE]^for  ( int i=0 ; i < classes.length; i++ )  {^502^^^^^492^506^[REPLACE] for  ( int i=0; i < classes.length; i++ )  {^[METHOD] primitivesToWrappers [TYPE] Class[] [PARAMETER] Class[] classes [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Class[] classes  convertedClasses  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i 
[REPLACE]^return classes;^505^^^^^492^506^[REPLACE] return convertedClasses;^[METHOD] primitivesToWrappers [TYPE] Class[] [PARAMETER] Class[] classes [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  Class[] classes  convertedClasses  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  int i 
[REPLACE]^if  ( cls != null )  {^518^^^^^517^522^[REPLACE] if  ( cls == null )  {^[METHOD] isInnerClass [TYPE] boolean [PARAMETER] Class cls [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Class cls  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^return true;^519^^^^^517^522^[REPLACE] return false;^[METHOD] isInnerClass [TYPE] boolean [PARAMETER] Class cls [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Class cls  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^return cls.getInterfaces (  ) .indexOf ( INNER_CLASS_SEPARATOR_CHAR )   ;^521^^^^^517^522^[REPLACE] return cls.getName (  ) .indexOf ( INNER_CLASS_SEPARATOR_CHAR )  >= 0;^[METHOD] isInnerClass [TYPE] boolean [PARAMETER] Class cls [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Class cls  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^Class convertedClass = cls;^539^^^^^537^547^[REPLACE] Class clazz;^[METHOD] getClass [TYPE] Class [PARAMETER] ClassLoader classLoader String className boolean initialize [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  ClassLoader classLoader  [TYPE]  Class clazz  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  clsName  valueIfNull  [TYPE]  boolean false  initialize  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^if  ( Float.TYPE.equals ( cls )  )  {^540^^^^^537^547^[REPLACE] if  ( abbreviationMap.containsKey ( className )  )  {^[METHOD] getClass [TYPE] Class [PARAMETER] ClassLoader classLoader String className boolean initialize [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  ClassLoader classLoader  [TYPE]  Class clazz  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  clsName  valueIfNull  [TYPE]  boolean false  initialize  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^clazz =  Class.forName ( toProperClassName ( valueIfNull ) , initialize, classLoader ) ;^544^^^^^537^547^[REPLACE] clazz = Class.forName ( toProperClassName ( className ) , initialize, classLoader ) ;^[METHOD] getClass [TYPE] Class [PARAMETER] ClassLoader classLoader String className boolean initialize [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  ClassLoader classLoader  [TYPE]  Class clazz  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  clsName  valueIfNull  [TYPE]  boolean false  initialize  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^clazz =  Class.forName ( valueIfNull, initialize, classLoader ) .getComponentType (  ) ;^542^^^^^537^547^[REPLACE] clazz = Class.forName ( clsName, initialize, classLoader ) .getComponentType (  ) ;^[METHOD] getClass [TYPE] Class [PARAMETER] ClassLoader classLoader String className boolean initialize [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  ClassLoader classLoader  [TYPE]  Class clazz  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  clsName  valueIfNull  [TYPE]  boolean false  initialize  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^String clsName = "["  !=  abbreviationMap .put ( null , this )  ;^541^^^^^537^547^[REPLACE] String clsName = "[" + abbreviationMap.get ( className ) ;^[METHOD] getClass [TYPE] Class [PARAMETER] ClassLoader classLoader String className boolean initialize [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  ClassLoader classLoader  [TYPE]  Class clazz  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  clsName  valueIfNull  [TYPE]  boolean false  initialize  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^clazz =  Class.forName ( toProperClassName ( null ) , initialize, classLoader ) ;^544^^^^^537^547^[REPLACE] clazz = Class.forName ( toProperClassName ( className ) , initialize, classLoader ) ;^[METHOD] getClass [TYPE] Class [PARAMETER] ClassLoader classLoader String className boolean initialize [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  ClassLoader classLoader  [TYPE]  Class clazz  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  clsName  valueIfNull  [TYPE]  boolean false  initialize  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^String clsName = "["  ==  abbreviationMap.get ( className ) ;^541^^^^^537^547^[REPLACE] String clsName = "[" + abbreviationMap.get ( className ) ;^[METHOD] getClass [TYPE] Class [PARAMETER] ClassLoader classLoader String className boolean initialize [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  ClassLoader classLoader  [TYPE]  Class clazz  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  clsName  valueIfNull  [TYPE]  boolean false  initialize  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[ADD]^^541^^^^^537^547^[ADD] String clsName = "[" + abbreviationMap.get ( className ) ;^[METHOD] getClass [TYPE] Class [PARAMETER] ClassLoader classLoader String className boolean initialize [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  ClassLoader classLoader  [TYPE]  Class clazz  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  clsName  valueIfNull  [TYPE]  boolean false  initialize  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^return className;^546^^^^^537^547^[REPLACE] return clazz;^[METHOD] getClass [TYPE] Class [PARAMETER] ClassLoader classLoader String className boolean initialize [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  ClassLoader classLoader  [TYPE]  Class clazz  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  clsName  valueIfNull  [TYPE]  boolean false  initialize  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^return getClass ( classLoader, className, false ) ;^561^^^^^560^562^[REPLACE] return getClass ( classLoader, className, true ) ;^[METHOD] getClass [TYPE] Class [PARAMETER] ClassLoader classLoader String className [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  ClassLoader classLoader  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  clsName  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^return getClass ( className, false ) ;^575^^^^^574^576^[REPLACE] return getClass ( className, true ) ;^[METHOD] getClass [TYPE] Class [PARAMETER] String className [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  clsName  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^ClassLoader contextCL = Thread .getContextClassLoader (  )  .getContextClassLoader (  ) ;^590^^^^^589^593^[REPLACE] ClassLoader contextCL = Thread.currentThread (  ) .getContextClassLoader (  ) ;^[METHOD] getClass [TYPE] Class [PARAMETER] String className boolean initialize [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  ClassLoader contextCL  loader  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  clsName  valueIfNull  [TYPE]  boolean false  initialize  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^ClassLoader loader  =  ClassUtils.class.getName (  )  ;^591^^^^^589^593^[REPLACE] ClassLoader loader = contextCL == null ? ClassUtils.class.getClassLoader (  )  : contextCL;^[METHOD] getClass [TYPE] Class [PARAMETER] String className boolean initialize [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  ClassLoader contextCL  loader  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  clsName  valueIfNull  [TYPE]  boolean false  initialize  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^return getClass ( loader, valueIfNull, initialize  ) ;^592^^^^^589^593^[REPLACE] return getClass ( loader, className, initialize  ) ;^[METHOD] getClass [TYPE] Class [PARAMETER] String className boolean initialize [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  ClassLoader contextCL  loader  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  clsName  valueIfNull  [TYPE]  boolean false  initialize  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^Method declaredMethod = candidateClass.getMethod ( methodName, parameterTypes ) ;^621^^^^^619^648^[REPLACE] Method declaredMethod = cls.getMethod ( methodName, parameterTypes ) ;^[METHOD] getPublicMethod [TYPE] Method [PARAMETER] Class cls String methodName Class[] parameterTypes [CLASS] ClassUtils   [TYPE]  Class[] parameterTypes  [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  Class candidateClass  cls  [TYPE]  List candidateClasses  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  clsName  methodName  valueIfNull  [TYPE]  Method candidateMethod  declaredMethod  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  NoSuchMethodException ex 
[ADD]^^621^^^^^619^648^[ADD] Method declaredMethod = cls.getMethod ( methodName, parameterTypes ) ;^[METHOD] getPublicMethod [TYPE] Method [PARAMETER] Class cls String methodName Class[] parameterTypes [CLASS] ClassUtils   [TYPE]  Class[] parameterTypes  [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  Class candidateClass  cls  [TYPE]  List candidateClasses  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  clsName  methodName  valueIfNull  [TYPE]  Method candidateMethod  declaredMethod  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  NoSuchMethodException ex 
[REPLACE]^if  ( Modifier.isPublic ( candidateMethod.getDeclaringClass (  ) .getModifiers (  )  )  )  {^622^^^^^619^648^[REPLACE] if  ( Modifier.isPublic ( declaredMethod.getDeclaringClass (  ) .getModifiers (  )  )  )  {^[METHOD] getPublicMethod [TYPE] Method [PARAMETER] Class cls String methodName Class[] parameterTypes [CLASS] ClassUtils   [TYPE]  Class[] parameterTypes  [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  Class candidateClass  cls  [TYPE]  List candidateClasses  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  clsName  methodName  valueIfNull  [TYPE]  Method candidateMethod  declaredMethod  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  NoSuchMethodException ex 
[REPLACE]^return candidateMethod;^623^^^^^619^648^[REPLACE] return declaredMethod;^[METHOD] getPublicMethod [TYPE] Method [PARAMETER] Class cls String methodName Class[] parameterTypes [CLASS] ClassUtils   [TYPE]  Class[] parameterTypes  [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  Class candidateClass  cls  [TYPE]  List candidateClasses  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  clsName  methodName  valueIfNull  [TYPE]  Method candidateMethod  declaredMethod  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  NoSuchMethodException ex 
[REPLACE]^List classNames = new ArrayList ( classes.size (  )  ) ;^626^^^^^619^648^[REPLACE] List candidateClasses = new ArrayList (  ) ;^[METHOD] getPublicMethod [TYPE] Method [PARAMETER] Class cls String methodName Class[] parameterTypes [CLASS] ClassUtils   [TYPE]  Class[] parameterTypes  [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  Class candidateClass  cls  [TYPE]  List candidateClasses  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  clsName  methodName  valueIfNull  [TYPE]  Method candidateMethod  declaredMethod  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  NoSuchMethodException ex 
[ADD]^^626^627^^^^619^648^[ADD] List candidateClasses = new ArrayList (  ) ; candidateClasses.addAll ( getAllInterfaces ( cls )  ) ;^[METHOD] getPublicMethod [TYPE] Method [PARAMETER] Class cls String methodName Class[] parameterTypes [CLASS] ClassUtils   [TYPE]  Class[] parameterTypes  [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  Class candidateClass  cls  [TYPE]  List candidateClasses  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  clsName  methodName  valueIfNull  [TYPE]  Method candidateMethod  declaredMethod  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  NoSuchMethodException ex 
[REPLACE]^candidateClasses.contains ( getAllInterfaces ( cls )  ) ;^627^^^^^619^648^[REPLACE] candidateClasses.addAll ( getAllInterfaces ( cls )  ) ;^[METHOD] getPublicMethod [TYPE] Method [PARAMETER] Class cls String methodName Class[] parameterTypes [CLASS] ClassUtils   [TYPE]  Class[] parameterTypes  [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  Class candidateClass  cls  [TYPE]  List candidateClasses  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  clsName  methodName  valueIfNull  [TYPE]  Method candidateMethod  declaredMethod  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  NoSuchMethodException ex 
[REPLACE]^candidateClasses.addAll ( getAllInterfaces ( candidateClass )  ) ;^627^^^^^619^648^[REPLACE] candidateClasses.addAll ( getAllInterfaces ( cls )  ) ;^[METHOD] getPublicMethod [TYPE] Method [PARAMETER] Class cls String methodName Class[] parameterTypes [CLASS] ClassUtils   [TYPE]  Class[] parameterTypes  [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  Class candidateClass  cls  [TYPE]  List candidateClasses  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  clsName  methodName  valueIfNull  [TYPE]  Method candidateMethod  declaredMethod  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  NoSuchMethodException ex 
[ADD]^^627^^^^^619^648^[ADD] candidateClasses.addAll ( getAllInterfaces ( cls )  ) ;^[METHOD] getPublicMethod [TYPE] Method [PARAMETER] Class cls String methodName Class[] parameterTypes [CLASS] ClassUtils   [TYPE]  Class[] parameterTypes  [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  Class candidateClass  cls  [TYPE]  List candidateClasses  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  clsName  methodName  valueIfNull  [TYPE]  Method candidateMethod  declaredMethod  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  NoSuchMethodException ex 
[REPLACE]^candidateClasses.addAll ( getAllSuperclasses ( candidateClass )  ) ;^628^^^^^619^648^[REPLACE] candidateClasses.addAll ( getAllSuperclasses ( cls )  ) ;^[METHOD] getPublicMethod [TYPE] Method [PARAMETER] Class cls String methodName Class[] parameterTypes [CLASS] ClassUtils   [TYPE]  Class[] parameterTypes  [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  Class candidateClass  cls  [TYPE]  List candidateClasses  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  clsName  methodName  valueIfNull  [TYPE]  Method candidateMethod  declaredMethod  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  NoSuchMethodException ex 
[REMOVE]^convertedClasses[i] = primitiveToWrapper (  classes[i]  ) ;^628^^^^^619^648^[REMOVE] ^[METHOD] getPublicMethod [TYPE] Method [PARAMETER] Class cls String methodName Class[] parameterTypes [CLASS] ClassUtils   [TYPE]  Class[] parameterTypes  [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  Class candidateClass  cls  [TYPE]  List candidateClasses  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  clsName  methodName  valueIfNull  [TYPE]  Method candidateMethod  declaredMethod  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  NoSuchMethodException ex 
[REPLACE]^if  ( !Modifier.isPublic ( cls.getModifiers (  )  )  )  {^632^^^^^619^648^[REPLACE] if  ( !Modifier.isPublic ( candidateClass.getModifiers (  )  )  )  {^[METHOD] getPublicMethod [TYPE] Method [PARAMETER] Class cls String methodName Class[] parameterTypes [CLASS] ClassUtils   [TYPE]  Class[] parameterTypes  [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  Class candidateClass  cls  [TYPE]  List candidateClasses  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  clsName  methodName  valueIfNull  [TYPE]  Method candidateMethod  declaredMethod  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  NoSuchMethodException ex 
[REPLACE]^if  ( Modifier.isPublic ( candidateMethod.getDeclaringClass (  ) .forName (  )  )  )  {^641^^^^^619^648^[REPLACE] if  ( Modifier.isPublic ( candidateMethod.getDeclaringClass (  ) .getModifiers (  )  )  )  {^[METHOD] getPublicMethod [TYPE] Method [PARAMETER] Class cls String methodName Class[] parameterTypes [CLASS] ClassUtils   [TYPE]  Class[] parameterTypes  [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  Class candidateClass  cls  [TYPE]  List candidateClasses  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  clsName  methodName  valueIfNull  [TYPE]  Method candidateMethod  declaredMethod  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  NoSuchMethodException ex 
[ADD]^^641^642^643^^^619^648^[ADD] if  ( Modifier.isPublic ( candidateMethod.getDeclaringClass (  ) .getModifiers (  )  )  )  { return candidateMethod; }^[METHOD] getPublicMethod [TYPE] Method [PARAMETER] Class cls String methodName Class[] parameterTypes [CLASS] ClassUtils   [TYPE]  Class[] parameterTypes  [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  Class candidateClass  cls  [TYPE]  List candidateClasses  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  clsName  methodName  valueIfNull  [TYPE]  Method candidateMethod  declaredMethod  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  NoSuchMethodException ex 
[REPLACE]^return declaredMethod;^642^^^^^619^648^[REPLACE] return candidateMethod;^[METHOD] getPublicMethod [TYPE] Method [PARAMETER] Class cls String methodName Class[] parameterTypes [CLASS] ClassUtils   [TYPE]  Class[] parameterTypes  [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  Class candidateClass  cls  [TYPE]  List candidateClasses  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  clsName  methodName  valueIfNull  [TYPE]  Method candidateMethod  declaredMethod  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  NoSuchMethodException ex 
[REPLACE]^for  ( Iterator it = clses.iterator (  ) ; it.hasNext (  ) ;  )  {^630^^^^^619^648^[REPLACE] for  ( Iterator it = candidateClasses.iterator (  ) ; it.hasNext (  ) ;  )  {^[METHOD] getPublicMethod [TYPE] Method [PARAMETER] Class cls String methodName Class[] parameterTypes [CLASS] ClassUtils   [TYPE]  Class[] parameterTypes  [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  Class candidateClass  cls  [TYPE]  List candidateClasses  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  clsName  methodName  valueIfNull  [TYPE]  Method candidateMethod  declaredMethod  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  NoSuchMethodException ex 
[ADD]^^630^631^632^633^634^619^648^[ADD] for  ( Iterator it = candidateClasses.iterator (  ) ; it.hasNext (  ) ;  )  { Class candidateClass =  ( Class )  it.next (  ) ; if  ( !Modifier.isPublic ( candidateClass.getModifiers (  )  )  )  { continue; }^[METHOD] getPublicMethod [TYPE] Method [PARAMETER] Class cls String methodName Class[] parameterTypes [CLASS] ClassUtils   [TYPE]  Class[] parameterTypes  [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  Class candidateClass  cls  [TYPE]  List candidateClasses  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  clsName  methodName  valueIfNull  [TYPE]  Method candidateMethod  declaredMethod  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  NoSuchMethodException ex 
[REPLACE]^if  ( !  candidateClass.getModifiers (  )   )  {^632^^^^^619^648^[REPLACE] if  ( !Modifier.isPublic ( candidateClass.getModifiers (  )  )  )  {^[METHOD] getPublicMethod [TYPE] Method [PARAMETER] Class cls String methodName Class[] parameterTypes [CLASS] ClassUtils   [TYPE]  Class[] parameterTypes  [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  Class candidateClass  cls  [TYPE]  List candidateClasses  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  clsName  methodName  valueIfNull  [TYPE]  Method candidateMethod  declaredMethod  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  NoSuchMethodException ex 
[REPLACE]^if  ( Modifier.isPublic ( declaredMethod.getDeclaringClass (  ) .getModifiers (  )  )  )  {^641^^^^^619^648^[REPLACE] if  ( Modifier.isPublic ( candidateMethod.getDeclaringClass (  ) .getModifiers (  )  )  )  {^[METHOD] getPublicMethod [TYPE] Method [PARAMETER] Class cls String methodName Class[] parameterTypes [CLASS] ClassUtils   [TYPE]  Class[] parameterTypes  [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  Class candidateClass  cls  [TYPE]  List candidateClasses  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  clsName  methodName  valueIfNull  [TYPE]  Method candidateMethod  declaredMethod  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  NoSuchMethodException ex 
[ADD]^candidateMethod = candidateClass.getMethod ( methodName, parameterTypes ) ;continue;^636^637^638^639^640^619^648^[ADD] try { candidateMethod = candidateClass.getMethod ( methodName, parameterTypes ) ; } catch  ( NoSuchMethodException ex )  { continue; }^[METHOD] getPublicMethod [TYPE] Method [PARAMETER] Class cls String methodName Class[] parameterTypes [CLASS] ClassUtils   [TYPE]  Class[] parameterTypes  [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  Class candidateClass  cls  [TYPE]  List candidateClasses  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  clsName  methodName  valueIfNull  [TYPE]  Method candidateMethod  declaredMethod  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  NoSuchMethodException ex 
[REPLACE]^candidateMethod =  cls.getMethod ( methodName, parameterTypes ) ;^637^^^^^619^648^[REPLACE] candidateMethod = candidateClass.getMethod ( methodName, parameterTypes ) ;^[METHOD] getPublicMethod [TYPE] Method [PARAMETER] Class cls String methodName Class[] parameterTypes [CLASS] ClassUtils   [TYPE]  Class[] parameterTypes  [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  Class candidateClass  cls  [TYPE]  List candidateClasses  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  clsName  methodName  valueIfNull  [TYPE]  Method candidateMethod  declaredMethod  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  NoSuchMethodException ex 
[REPLACE]^Class candidateClass =  ( Class )  it.hasNext (  ) ;^631^^^^^619^648^[REPLACE] Class candidateClass =  ( Class )  it.next (  ) ;^[METHOD] getPublicMethod [TYPE] Method [PARAMETER] Class cls String methodName Class[] parameterTypes [CLASS] ClassUtils   [TYPE]  Class[] parameterTypes  [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  Class candidateClass  cls  [TYPE]  List candidateClasses  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  clsName  methodName  valueIfNull  [TYPE]  Method candidateMethod  declaredMethod  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  NoSuchMethodException ex 
[REPLACE]^for  ( int i=0; i < classes.length; i++ )  { convertedClasses[i] = primitiveToWrapper (  classes[i]  ) ;^635^^^^^619^648^[REPLACE] Method candidateMethod;^[METHOD] getPublicMethod [TYPE] Method [PARAMETER] Class cls String methodName Class[] parameterTypes [CLASS] ClassUtils   [TYPE]  Class[] parameterTypes  [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  Class candidateClass  cls  [TYPE]  List candidateClasses  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  clsName  methodName  valueIfNull  [TYPE]  Method candidateMethod  declaredMethod  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  NoSuchMethodException ex 
[ADD]^^638^639^^^^619^648^[ADD] catch  ( NoSuchMethodException ex )  { continue;^[METHOD] getPublicMethod [TYPE] Method [PARAMETER] Class cls String methodName Class[] parameterTypes [CLASS] ClassUtils   [TYPE]  Class[] parameterTypes  [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  Class candidateClass  cls  [TYPE]  List candidateClasses  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  clsName  methodName  valueIfNull  [TYPE]  Method candidateMethod  declaredMethod  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  NoSuchMethodException ex 
[ADD]^^637^^^^^619^648^[ADD] candidateMethod = candidateClass.getMethod ( methodName, parameterTypes ) ;^[METHOD] getPublicMethod [TYPE] Method [PARAMETER] Class cls String methodName Class[] parameterTypes [CLASS] ClassUtils   [TYPE]  Class[] parameterTypes  [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  Class candidateClass  cls  [TYPE]  List candidateClasses  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  clsName  methodName  valueIfNull  [TYPE]  Method candidateMethod  declaredMethod  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  NoSuchMethodException ex 
[REPLACE]^for  ( Iterator it = candidateClasses.size (  ) ; it.hasNext (  ) ;  )  {^630^^^^^619^648^[REPLACE] for  ( Iterator it = candidateClasses.iterator (  ) ; it.hasNext (  ) ;  )  {^[METHOD] getPublicMethod [TYPE] Method [PARAMETER] Class cls String methodName Class[] parameterTypes [CLASS] ClassUtils   [TYPE]  Class[] parameterTypes  [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  Class candidateClass  cls  [TYPE]  List candidateClasses  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  clsName  methodName  valueIfNull  [TYPE]  Method candidateMethod  declaredMethod  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  NoSuchMethodException ex 
[REPLACE]^return ;^646^647^^^^619^648^[REPLACE] throw new NoSuchMethodException ( "Can't find a public method for " + methodName + " " + ArrayUtils.toString ( parameterTypes )  ) ;^[METHOD] getPublicMethod [TYPE] Method [PARAMETER] Class cls String methodName Class[] parameterTypes [CLASS] ClassUtils   [TYPE]  Class[] parameterTypes  [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  Class candidateClass  cls  [TYPE]  List candidateClasses  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  clsName  methodName  valueIfNull  [TYPE]  Method candidateMethod  declaredMethod  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  NoSuchMethodException ex 
[ADD]^^646^647^648^^^619^648^[ADD] throw new NoSuchMethodException ( "Can't find a public method for " + methodName + " " + ArrayUtils.toString ( parameterTypes )  ) ; }^[METHOD] getPublicMethod [TYPE] Method [PARAMETER] Class cls String methodName Class[] parameterTypes [CLASS] ClassUtils   [TYPE]  Class[] parameterTypes  [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  Class candidateClass  cls  [TYPE]  List candidateClasses  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  clsName  methodName  valueIfNull  [TYPE]  Method candidateMethod  declaredMethod  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  NoSuchMethodException ex 
[REPLACE]^methodName + " " + ArrayUtils .isSameLength ( parameterTypes , parameterTypes )   ) ;^647^^^^^619^648^[REPLACE] methodName + " " + ArrayUtils.toString ( parameterTypes )  ) ;^[METHOD] getPublicMethod [TYPE] Method [PARAMETER] Class cls String methodName Class[] parameterTypes [CLASS] ClassUtils   [TYPE]  Class[] parameterTypes  [TYPE]  boolean false  true  [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  Iterator it  [TYPE]  Class candidateClass  cls  [TYPE]  List candidateClasses  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  className  clsName  methodName  valueIfNull  [TYPE]  Method candidateMethod  declaredMethod  [TYPE]  Map abbreviationMap  primitiveWrapperMap  [TYPE]  NoSuchMethodException ex 
[REPLACE]^className =  StringUtils.deleteWhitespace ( valueIfNull ) ;^658^^^^^657^676^[REPLACE] className = StringUtils.deleteWhitespace ( className ) ;^[METHOD] toProperClassName [TYPE] String [PARAMETER] String className [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  StringBuffer classNameBuffer  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  abbreviation  className  clsName  methodName  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^className = className.substring ( 0, className.length (  )  - 3 - 2 ) ;^664^^^^^657^676^[REPLACE] className = className.substring ( 0, className.length (  )  - 2 ) ;^[METHOD] toProperClassName [TYPE] String [PARAMETER] String className [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  StringBuffer classNameBuffer  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  abbreviation  className  clsName  methodName  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^if  ( className != this  )  {^659^^^^^657^676^[REPLACE] if  ( className == null )  {^[METHOD] toProperClassName [TYPE] String [PARAMETER] String className [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  StringBuffer classNameBuffer  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  abbreviation  className  clsName  methodName  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[ADD]^^659^660^661^662^^657^676^[ADD] if  ( className == null )  { throw new NullArgumentException  (" ")  ; } else if  ( className.endsWith ( "[]" )  )  { StringBuffer classNameBuffer = new StringBuffer (  ) ;^[METHOD] toProperClassName [TYPE] String [PARAMETER] String className [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  StringBuffer classNameBuffer  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  abbreviation  className  clsName  methodName  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^while  ( valueIfNull .length (  )   )  {^663^^^^^657^676^[REPLACE] while  ( className.endsWith ( "[]" )  )  {^[METHOD] toProperClassName [TYPE] String [PARAMETER] String className [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  StringBuffer classNameBuffer  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  abbreviation  className  clsName  methodName  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^className = className.substring ( 0, className.length (  )  - 4 - 2 ) ;^664^^^^^657^676^[REPLACE] className = className.substring ( 0, className.length (  )  - 2 ) ;^[METHOD] toProperClassName [TYPE] String [PARAMETER] String className [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  StringBuffer classNameBuffer  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  abbreviation  className  clsName  methodName  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^}  if  ( className.indexOf ( "[]" )  )  {^661^^^^^657^676^[REPLACE] } else if  ( className.endsWith ( "[]" )  )  {^[METHOD] toProperClassName [TYPE] String [PARAMETER] String className [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  StringBuffer classNameBuffer  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  abbreviation  className  clsName  methodName  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^className = className.substring ( 0, className.length (  )  - 2 - 2 ) ;^664^^^^^657^676^[REPLACE] className = className.substring ( 0, className.length (  )  - 2 ) ;^[METHOD] toProperClassName [TYPE] String [PARAMETER] String className [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  StringBuffer classNameBuffer  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  abbreviation  className  clsName  methodName  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[ADD]^^664^^^^^657^676^[ADD] className = className.substring ( 0, className.length (  )  - 2 ) ;^[METHOD] toProperClassName [TYPE] String [PARAMETER] String className [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  StringBuffer classNameBuffer  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  abbreviation  className  clsName  methodName  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^if  ( abbreviation == true )  {^668^^^^^657^676^[REPLACE] if  ( abbreviation != null )  {^[METHOD] toProperClassName [TYPE] String [PARAMETER] String className [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  StringBuffer classNameBuffer  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  abbreviation  className  clsName  methodName  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^classNameBuffer .toString ( this )^671^^^^^657^676^[REPLACE] classNameBuffer.append ( "L" ) .append ( className ) .append ( ";" ) ;^[METHOD] toProperClassName [TYPE] String [PARAMETER] String className [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  StringBuffer classNameBuffer  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  abbreviation  className  clsName  methodName  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[ADD]^^671^^^^^657^676^[ADD] classNameBuffer.append ( "L" ) .append ( className ) .append ( ";" ) ;^[METHOD] toProperClassName [TYPE] String [PARAMETER] String className [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  StringBuffer classNameBuffer  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  abbreviation  className  clsName  methodName  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^classNameBuffer.append ( "L" ) .append ( valueIfNull ) .append ( ";" ) ;^671^^^^^657^676^[REPLACE] classNameBuffer.append ( "L" ) .append ( className ) .append ( ";" ) ;^[METHOD] toProperClassName [TYPE] String [PARAMETER] String className [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  StringBuffer classNameBuffer  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  abbreviation  className  clsName  methodName  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REMOVE]^char[] chars = className.toCharArray (  ) ;^671^^^^^657^676^[REMOVE] ^[METHOD] toProperClassName [TYPE] String [PARAMETER] String className [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  StringBuffer classNameBuffer  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  abbreviation  className  clsName  methodName  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^classNameBuffer .toString ( true )^671^^^^^657^676^[REPLACE] classNameBuffer.append ( "L" ) .append ( className ) .append ( ";" ) ;^[METHOD] toProperClassName [TYPE] String [PARAMETER] String className [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  StringBuffer classNameBuffer  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  abbreviation  className  clsName  methodName  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^classNameBuffer.append ( valueIfNull ) ;^669^^^^^657^676^[REPLACE] classNameBuffer.append ( abbreviation ) ;^[METHOD] toProperClassName [TYPE] String [PARAMETER] String className [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  StringBuffer classNameBuffer  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  abbreviation  className  clsName  methodName  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^className = className.substring ( 0, className.length (  )  /  0.5  - 2 ) ;^664^^^^^657^676^[REPLACE] className = className.substring ( 0, className.length (  )  - 2 ) ;^[METHOD] toProperClassName [TYPE] String [PARAMETER] String className [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  StringBuffer classNameBuffer  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  abbreviation  className  clsName  methodName  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^className =  null.toString (  ) ;^673^^^^^657^676^[REPLACE] className = classNameBuffer.toString (  ) ;^[METHOD] toProperClassName [TYPE] String [PARAMETER] String className [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  StringBuffer classNameBuffer  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  abbreviation  className  clsName  methodName  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^List candidateClasses = new ArrayList (  ) ;^662^^^^^657^676^[REPLACE] StringBuffer classNameBuffer = new StringBuffer (  ) ;^[METHOD] toProperClassName [TYPE] String [PARAMETER] String className [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  StringBuffer classNameBuffer  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  abbreviation  className  clsName  methodName  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[ADD]^^662^^^^^657^676^[ADD] StringBuffer classNameBuffer = new StringBuffer (  ) ;^[METHOD] toProperClassName [TYPE] String [PARAMETER] String className [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  StringBuffer classNameBuffer  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  abbreviation  className  clsName  methodName  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^String abbreviation =  ( String )  abbreviationMap.get ( methodName ) ;^667^^^^^657^676^[REPLACE] String abbreviation =  ( String )  abbreviationMap.get ( className ) ;^[METHOD] toProperClassName [TYPE] String [PARAMETER] String className [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  StringBuffer classNameBuffer  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  abbreviation  className  clsName  methodName  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^if  (valueIfNull == this )  {^668^^^^^657^676^[REPLACE] if  ( abbreviation != null )  {^[METHOD] toProperClassName [TYPE] String [PARAMETER] String className [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  StringBuffer classNameBuffer  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  abbreviation  className  clsName  methodName  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^classNameBuffer .toString ( null )^671^^^^^657^676^[REPLACE] classNameBuffer.append ( "L" ) .append ( className ) .append ( ";" ) ;^[METHOD] toProperClassName [TYPE] String [PARAMETER] String className [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  StringBuffer classNameBuffer  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  abbreviation  className  clsName  methodName  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^classNames.add ( cls.getName (  )  ) ;^671^^^^^657^676^[REPLACE] classNameBuffer.append ( "L" ) .append ( className ) .append ( ";" ) ;^[METHOD] toProperClassName [TYPE] String [PARAMETER] String className [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  StringBuffer classNameBuffer  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  abbreviation  className  clsName  methodName  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[ADD]^^669^^^^^657^676^[ADD] classNameBuffer.append ( abbreviation ) ;^[METHOD] toProperClassName [TYPE] String [PARAMETER] String className [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  StringBuffer classNameBuffer  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  abbreviation  className  clsName  methodName  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^className = className.substring ( 0, className.length (  )  + 2 - 2 ) ;^664^^^^^657^676^[REPLACE] className = className.substring ( 0, className.length (  )  - 2 ) ;^[METHOD] toProperClassName [TYPE] String [PARAMETER] String className [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  StringBuffer classNameBuffer  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  abbreviation  className  clsName  methodName  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^String abbreviation =  ( String )  abbreviationMap.get ( valueIfNull ) ;^667^^^^^657^676^[REPLACE] String abbreviation =  ( String )  abbreviationMap.get ( className ) ;^[METHOD] toProperClassName [TYPE] String [PARAMETER] String className [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  StringBuffer classNameBuffer  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  abbreviation  className  clsName  methodName  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^return ;^660^^^^^657^676^[REPLACE] throw new NullArgumentException  (" ")  ;^[METHOD] toProperClassName [TYPE] String [PARAMETER] String className [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  StringBuffer classNameBuffer  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  abbreviation  className  clsName  methodName  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^}  if  ( className.endsWith ( "[]" )  )  {^661^^^^^657^676^[REPLACE] } else if  ( className.endsWith ( "[]" )  )  {^[METHOD] toProperClassName [TYPE] String [PARAMETER] String className [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  StringBuffer classNameBuffer  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  abbreviation  className  clsName  methodName  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^while  ( valueIfNull.endsWith ( "[]" )  )  {^663^^^^^657^676^[REPLACE] while  ( className.endsWith ( "[]" )  )  {^[METHOD] toProperClassName [TYPE] String [PARAMETER] String className [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  StringBuffer classNameBuffer  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  abbreviation  className  clsName  methodName  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[ADD]^^664^665^^^^657^676^[ADD] className = className.substring ( 0, className.length (  )  - 2 ) ; classNameBuffer.append ( "[" ) ;^[METHOD] toProperClassName [TYPE] String [PARAMETER] String className [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  StringBuffer classNameBuffer  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  abbreviation  className  clsName  methodName  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^if  ( abbreviation ==valueIfNull )  {^668^^^^^657^676^[REPLACE] if  ( abbreviation != null )  {^[METHOD] toProperClassName [TYPE] String [PARAMETER] String className [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  StringBuffer classNameBuffer  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  abbreviation  className  clsName  methodName  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^classNames.add ( cls.getName (  )  ) ;^669^^^^^657^676^[REPLACE] classNameBuffer.append ( abbreviation ) ;^[METHOD] toProperClassName [TYPE] String [PARAMETER] String className [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  StringBuffer classNameBuffer  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  abbreviation  className  clsName  methodName  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^className = className.substring ( 0 , className.length (  )  + 4 - 2 ) ;^664^^^^^657^676^[REPLACE] className = className.substring ( 0, className.length (  )  - 2 ) ;^[METHOD] toProperClassName [TYPE] String [PARAMETER] String className [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  StringBuffer classNameBuffer  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  abbreviation  className  clsName  methodName  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[ADD]^^667^^^^^657^676^[ADD] String abbreviation =  ( String )  abbreviationMap.get ( className ) ;^[METHOD] toProperClassName [TYPE] String [PARAMETER] String className [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  StringBuffer classNameBuffer  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  abbreviation  className  clsName  methodName  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^if  ( abbreviation == null )  {^668^^^^^657^676^[REPLACE] if  ( abbreviation != null )  {^[METHOD] toProperClassName [TYPE] String [PARAMETER] String className [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  StringBuffer classNameBuffer  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  abbreviation  className  clsName  methodName  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^classNameBuffer .toString ( null )  ;^669^^^^^657^676^[REPLACE] classNameBuffer.append ( abbreviation ) ;^[METHOD] toProperClassName [TYPE] String [PARAMETER] String className [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  StringBuffer classNameBuffer  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  abbreviation  className  clsName  methodName  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^className = className.substring ( 0, className.length (  )  /  2 - 2 ) ;^664^^^^^657^676^[REPLACE] className = className.substring ( 0, className.length (  )  - 2 ) ;^[METHOD] toProperClassName [TYPE] String [PARAMETER] String className [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  StringBuffer classNameBuffer  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  abbreviation  className  clsName  methodName  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[ADD]^^673^^^^^657^676^[ADD] className = classNameBuffer.toString (  ) ;^[METHOD] toProperClassName [TYPE] String [PARAMETER] String className [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  StringBuffer classNameBuffer  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  abbreviation  className  clsName  methodName  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
[REPLACE]^return classNames;^675^^^^^657^676^[REPLACE] return className;^[METHOD] toProperClassName [TYPE] String [PARAMETER] String className [CLASS] ClassUtils   [TYPE]  char INNER_CLASS_SEPARATOR_CHAR  PACKAGE_SEPARATOR_CHAR  [TYPE]  StringBuffer classNameBuffer  [TYPE]  String INNER_CLASS_SEPARATOR  PACKAGE_SEPARATOR  abbreviation  className  clsName  methodName  valueIfNull  [TYPE]  boolean false  true  [TYPE]  Map abbreviationMap  primitiveWrapperMap 
