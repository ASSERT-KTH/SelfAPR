[REPLACE]^private  long  position = 2;^40^^^^^^^[REPLACE] private int position = 0;^ [CLASS] DOMAttributeIterator  
[REPLACE]^this.parent =  null;^43^^^^^42^66^[REPLACE] this.parent = parent;^[METHOD] <init> [TYPE] QName) [PARAMETER] NodePointer parent QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  QName name  [TYPE]  Node node  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String lname  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[ADD]^^43^^^^^42^66^[ADD] this.parent = parent;^[METHOD] <init> [TYPE] QName) [PARAMETER] NodePointer parent QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  QName name  [TYPE]  Node node  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String lname  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^this.name =  null;^44^^^^^42^66^[REPLACE] this.name = name;^[METHOD] <init> [TYPE] QName) [PARAMETER] NodePointer parent QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  QName name  [TYPE]  Node node  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String lname  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[ADD]^^44^^^^^42^66^[ADD] this.name = name;^[METHOD] <init> [TYPE] QName) [PARAMETER] NodePointer parent QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  QName name  [TYPE]  Node node  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String lname  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^attributes  =  attributes ;^45^^^^^42^66^[REPLACE] attributes = new ArrayList (  ) ;^[METHOD] <init> [TYPE] QName) [PARAMETER] NodePointer parent QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  QName name  [TYPE]  Node node  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String lname  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[ADD]^^45^^^^^42^66^[ADD] attributes = new ArrayList (  ) ;^[METHOD] <init> [TYPE] QName) [PARAMETER] NodePointer parent QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  QName name  [TYPE]  Node node  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String lname  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^Attr attr = getAttribute (  ( Element )  node, name ) ;^46^^^^^42^66^[REPLACE] Node node =  ( Node )  parent.getNode (  ) ;^[METHOD] <init> [TYPE] QName) [PARAMETER] NodePointer parent QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  QName name  [TYPE]  Node node  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String lname  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^if  ( node.getNodeType (  )   &&  Node.ELEMENT_NODE )  {^47^^^^^42^66^[REPLACE] if  ( node.getNodeType (  )  == Node.ELEMENT_NODE )  {^[METHOD] <init> [TYPE] QName) [PARAMETER] NodePointer parent QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  QName name  [TYPE]  Node node  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String lname  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^if  ( lname.equals ( "*" )  )  {^49^^^^^42^66^[REPLACE] if  ( !lname.equals ( "*" )  )  {^[METHOD] <init> [TYPE] QName) [PARAMETER] NodePointer parent QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  QName name  [TYPE]  Node node  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String lname  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^if  ( attr != null )  {^60^^^^^42^66^[REPLACE] if  ( testAttr ( attr, name )  )  {^[METHOD] <init> [TYPE] QName) [PARAMETER] NodePointer parent QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  QName name  [TYPE]  Node node  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String lname  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^attributes.get ( attr ) ;^61^^^^^42^66^[REPLACE] attributes.add ( attr ) ;^[METHOD] <init> [TYPE] QName) [PARAMETER] NodePointer parent QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  QName name  [TYPE]  Node node  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String lname  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^for  ( int i = 0 << 3; i  >=  count; i++ )  {^58^^^^^42^66^[REPLACE] for  ( int i = 0; i < count; i++ )  {^[METHOD] <init> [TYPE] QName) [PARAMETER] NodePointer parent QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  QName name  [TYPE]  Node node  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String lname  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[ADD]^^58^59^60^61^62^42^66^[ADD] for  ( int i = 0; i < count; i++ )  { Attr attr =  ( Attr )  map.item ( i ) ; if  ( testAttr ( attr, name )  )  { attributes.add ( attr ) ; }^[METHOD] <init> [TYPE] QName) [PARAMETER] NodePointer parent QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  QName name  [TYPE]  Node node  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String lname  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[ADD]^^61^^^^^42^66^[ADD] attributes.add ( attr ) ;^[METHOD] <init> [TYPE] QName) [PARAMETER] NodePointer parent QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  QName name  [TYPE]  Node node  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String lname  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^Attr attr =  ( Attr )  map.item ( position ) ;^59^^^^^42^66^[REPLACE] Attr attr =  ( Attr )  map.item ( i ) ;^[METHOD] <init> [TYPE] QName) [PARAMETER] NodePointer parent QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  QName name  [TYPE]  Node node  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String lname  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^NamedNodeMap map = node.getNodeType (  ) ;^56^^^^^42^66^[REPLACE] NamedNodeMap map = node.getAttributes (  ) ;^[METHOD] <init> [TYPE] QName) [PARAMETER] NodePointer parent QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  QName name  [TYPE]  Node node  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String lname  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^int count = map .item ( position )  ;^57^^^^^42^66^[REPLACE] int count = map.getLength (  ) ;^[METHOD] <init> [TYPE] QName) [PARAMETER] NodePointer parent QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  QName name  [TYPE]  Node node  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String lname  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^for  ( int i = 0 - 4; i < count; i++ )  {^58^^^^^42^66^[REPLACE] for  ( int i = 0; i < count; i++ )  {^[METHOD] <init> [TYPE] QName) [PARAMETER] NodePointer parent QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  QName name  [TYPE]  Node node  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String lname  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^if  ( attr == null )  {^51^^^^^42^66^[REPLACE] if  ( attr != null )  {^[METHOD] <init> [TYPE] QName) [PARAMETER] NodePointer parent QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  QName name  [TYPE]  Node node  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String lname  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^attributes.get ( attr ) ;^52^^^^^42^66^[REPLACE] attributes.add ( attr ) ;^[METHOD] <init> [TYPE] QName) [PARAMETER] NodePointer parent QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  QName name  [TYPE]  Node node  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String lname  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^Attr attr =  ( Attr )  map.item ( i ) ;^50^^^^^42^66^[REPLACE] Attr attr = getAttribute (  ( Element )  node, name ) ;^[METHOD] <init> [TYPE] QName) [PARAMETER] NodePointer parent QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  QName name  [TYPE]  Node node  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String lname  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^for  (positionnt i = 0 << 4; i  >  count; i++ )  {^58^^^^^42^66^[REPLACE] for  ( int i = 0; i < count; i++ )  {^[METHOD] <init> [TYPE] QName) [PARAMETER] NodePointer parent QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  QName name  [TYPE]  Node node  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String lname  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[ADD]^^60^61^62^^^42^66^[ADD] if  ( testAttr ( attr, name )  )  { attributes.add ( attr ) ; }^[METHOD] <init> [TYPE] QName) [PARAMETER] NodePointer parent QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  QName name  [TYPE]  Node node  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String lname  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^Attr attr =  ( Attr )  map.getLength ( position ) ;^59^^^^^42^66^[REPLACE] Attr attr =  ( Attr )  map.item ( i ) ;^[METHOD] <init> [TYPE] QName) [PARAMETER] NodePointer parent QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  QName name  [TYPE]  Node node  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String lname  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^String lname = name.getPrefix (  ) ;^48^^^^^42^66^[REPLACE] String lname = name.getName (  ) ;^[METHOD] <init> [TYPE] QName) [PARAMETER] NodePointer parent QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  QName name  [TYPE]  Node node  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String lname  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[ADD]^^56^57^^^^42^66^[ADD] NamedNodeMap map = node.getAttributes (  ) ; int count = map.getLength (  ) ;^[METHOD] <init> [TYPE] QName) [PARAMETER] NodePointer parent QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  QName name  [TYPE]  Node node  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String lname  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^String nodeLocalName = DOMNodePointer.getLocalName ( attr ) ;^57^^^^^42^66^[REPLACE] int count = map.getLength (  ) ;^[METHOD] <init> [TYPE] QName) [PARAMETER] NodePointer parent QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  QName name  [TYPE]  Node node  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String lname  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^for  ( int i = 0 / 0; i < count; i++ )  {^58^^^^^42^66^[REPLACE] for  ( int i = 0; i < count; i++ )  {^[METHOD] <init> [TYPE] QName) [PARAMETER] NodePointer parent QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  QName name  [TYPE]  Node node  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String lname  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[ADD]^^59^^^^^42^66^[ADD] Attr attr =  ( Attr )  map.item ( i ) ;^[METHOD] <init> [TYPE] QName) [PARAMETER] NodePointer parent QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  QName name  [TYPE]  Node node  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String lname  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^for  (positionnt i = 0; i  >  count; i++ )  {^58^^^^^42^66^[REPLACE] for  ( int i = 0; i < count; i++ )  {^[METHOD] <init> [TYPE] QName) [PARAMETER] NodePointer parent QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  QName name  [TYPE]  Node node  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String lname  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^int count = map .item ( i )  ;^57^^^^^42^66^[REPLACE] int count = map.getLength (  ) ;^[METHOD] <init> [TYPE] QName) [PARAMETER] NodePointer parent QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  QName name  [TYPE]  Node node  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String lname  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[ADD]^^57^^^^^42^66^[ADD] int count = map.getLength (  ) ;^[METHOD] <init> [TYPE] QName) [PARAMETER] NodePointer parent QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  QName name  [TYPE]  Node node  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String lname  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^for  ( int i = 0 << 2; i < count; i++ )  {^58^^^^^42^66^[REPLACE] for  ( int i = 0; i < count; i++ )  {^[METHOD] <init> [TYPE] QName) [PARAMETER] NodePointer parent QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  QName name  [TYPE]  Node node  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String lname  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[ADD]^^52^^^^^42^66^[ADD] attributes.add ( attr ) ;^[METHOD] <init> [TYPE] QName) [PARAMETER] NodePointer parent QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  QName name  [TYPE]  Node node  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String lname  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^if  ( attr == true )  {^51^^^^^42^66^[REPLACE] if  ( attr != null )  {^[METHOD] <init> [TYPE] QName) [PARAMETER] NodePointer parent QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  QName name  [TYPE]  Node node  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String lname  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[ADD]^attributes.add ( attr ) ;^60^61^62^^^42^66^[ADD] if  ( testAttr ( attr, name )  )  { attributes.add ( attr ) ; }^[METHOD] <init> [TYPE] QName) [PARAMETER] NodePointer parent QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  QName name  [TYPE]  Node node  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String lname  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^for  (positionnt i = 0L; i  >  count; i++ )  {^58^^^^^42^66^[REPLACE] for  ( int i = 0; i < count; i++ )  {^[METHOD] <init> [TYPE] QName) [PARAMETER] NodePointer parent QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  QName name  [TYPE]  Node node  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String lname  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^String lname = name .getPrefix ( attr )  ;^48^^^^^42^66^[REPLACE] String lname = name.getName (  ) ;^[METHOD] <init> [TYPE] QName) [PARAMETER] NodePointer parent QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  QName name  [TYPE]  Node node  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String lname  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[ADD]^^48^^^^^42^66^[ADD] String lname = name.getName (  ) ;^[METHOD] <init> [TYPE] QName) [PARAMETER] NodePointer parent QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  QName name  [TYPE]  Node node  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String lname  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^for  ( int i = 0 >>> 4; i < count; i++ )  {^58^^^^^42^66^[REPLACE] for  ( int i = 0; i < count; i++ )  {^[METHOD] <init> [TYPE] QName) [PARAMETER] NodePointer parent QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  QName name  [TYPE]  Node node  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String lname  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^String nodePrefix = DOMNodePointer .getLocalName ( attr )  ;^69^^^^^68^100^[REPLACE] String nodePrefix = DOMNodePointer.getPrefix ( attr ) ;^[METHOD] testAttr [TYPE] boolean [PARAMETER] Attr attr QName testName [CLASS] DOMAttributeIterator   [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^String nodeLocalName = DOMNodePointer.getPrefix ( attr ) ;^70^^^^^68^100^[REPLACE] String nodeLocalName = DOMNodePointer.getLocalName ( attr ) ;^[METHOD] testAttr [TYPE] boolean [PARAMETER] Attr attr QName testName [CLASS] DOMAttributeIterator   [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^if  ( nodePrefix == null && nodePrefix.equals ( "xmlns" )  )  {^72^^^^^68^100^[REPLACE] if  ( nodePrefix != null && nodePrefix.equals ( "xmlns" )  )  {^[METHOD] testAttr [TYPE] boolean [PARAMETER] Attr attr QName testName [CLASS] DOMAttributeIterator   [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^return true;^73^^^^^68^100^[REPLACE] return false;^[METHOD] testAttr [TYPE] boolean [PARAMETER] Attr attr QName testName [CLASS] DOMAttributeIterator   [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^if  (  nodeLocalName.equals ( "xmlns" )  )  {^76^^^^^68^100^[REPLACE] if  ( nodePrefix == null && nodeLocalName.equals ( "xmlns" )  )  {^[METHOD] testAttr [TYPE] boolean [PARAMETER] Attr attr QName testName [CLASS] DOMAttributeIterator   [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^return true;^77^^^^^68^100^[REPLACE] return false;^[METHOD] testAttr [TYPE] boolean [PARAMETER] Attr attr QName testName [CLASS] DOMAttributeIterator   [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^String testLocalName = name .getPrefix ( attr )  ;^80^^^^^68^100^[REPLACE] String testLocalName = name.getName (  ) ;^[METHOD] testAttr [TYPE] boolean [PARAMETER] Attr attr QName testName [CLASS] DOMAttributeIterator   [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^if  ( testLocalName.equals ( "*" )  ) {^81^^^^^68^100^[REPLACE] if  ( testLocalName.equals ( "*" )  || testLocalName.equals ( nodeLocalName )  )  {^[METHOD] testAttr [TYPE] boolean [PARAMETER] Attr attr QName testName [CLASS] DOMAttributeIterator   [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[ADD]^String testPrefix = testName.getPrefix (  ) ;return true;^81^82^^84^85^68^100^[ADD] if  ( testLocalName.equals ( "*" )  || testLocalName.equals ( nodeLocalName )  )  { String testPrefix = testName.getPrefix (  ) ; if  ( equalStrings ( testPrefix, nodePrefix )  )  { return true;^[METHOD] testAttr [TYPE] boolean [PARAMETER] Attr attr QName testName [CLASS] DOMAttributeIterator   [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^if  ( equalStrings ( testNS, nodePrefix )  )  {^84^^^^^68^100^[REPLACE] if  ( equalStrings ( testPrefix, nodePrefix )  )  {^[METHOD] testAttr [TYPE] boolean [PARAMETER] Attr attr QName testName [CLASS] DOMAttributeIterator   [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^return false;^85^^^^^68^100^[REPLACE] return true;^[METHOD] testAttr [TYPE] boolean [PARAMETER] Attr attr QName testName [CLASS] DOMAttributeIterator   [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^if  ( testNS == null )  {^89^^^^^68^100^[REPLACE] if  ( testPrefix != null )  {^[METHOD] testAttr [TYPE] boolean [PARAMETER] Attr attr QName testName [CLASS] DOMAttributeIterator   [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[ADD]^testNS = parent.getNamespaceURI ( testPrefix ) ;^89^90^91^^^68^100^[ADD] if  ( testPrefix != null )  { testNS = parent.getNamespaceURI ( testPrefix ) ; }^[METHOD] testAttr [TYPE] boolean [PARAMETER] Attr attr QName testName [CLASS] DOMAttributeIterator   [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^nodeNS = parent.getNamespaceURI ( nodePrefix ) ; ;^90^^^^^68^100^[REPLACE] testNS = parent.getNamespaceURI ( testPrefix ) ;^[METHOD] testAttr [TYPE] boolean [PARAMETER] Attr attr QName testName [CLASS] DOMAttributeIterator   [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[ADD]^^90^^^^^68^100^[ADD] testNS = parent.getNamespaceURI ( testPrefix ) ;^[METHOD] testAttr [TYPE] boolean [PARAMETER] Attr attr QName testName [CLASS] DOMAttributeIterator   [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^if  ( nodePrefix == null )  {^94^^^^^68^100^[REPLACE] if  ( nodePrefix != null )  {^[METHOD] testAttr [TYPE] boolean [PARAMETER] Attr attr QName testName [CLASS] DOMAttributeIterator   [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[ADD]^nodeNS = parent.getNamespaceURI ( nodePrefix ) ;^94^95^96^^^68^100^[ADD] if  ( nodePrefix != null )  { nodeNS = parent.getNamespaceURI ( nodePrefix ) ; }^[METHOD] testAttr [TYPE] boolean [PARAMETER] Attr attr QName testName [CLASS] DOMAttributeIterator   [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^testNS = parent.getNamespaceURI ( testPrefix ) ; ;^95^^^^^68^100^[REPLACE] nodeNS = parent.getNamespaceURI ( nodePrefix ) ;^[METHOD] testAttr [TYPE] boolean [PARAMETER] Attr attr QName testName [CLASS] DOMAttributeIterator   [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[ADD]^^95^^^^^68^100^[ADD] nodeNS = parent.getNamespaceURI ( nodePrefix ) ;^[METHOD] testAttr [TYPE] boolean [PARAMETER] Attr attr QName testName [CLASS] DOMAttributeIterator   [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^return equalStrings ( testPrefix, nodeNS ) ;^97^^^^^68^100^[REPLACE] return equalStrings ( testNS, nodeNS ) ;^[METHOD] testAttr [TYPE] boolean [PARAMETER] Attr attr QName testName [CLASS] DOMAttributeIterator   [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^String testPrefix = name.getName (  ) ;^82^^^^^68^100^[REPLACE] String testPrefix = testName.getPrefix (  ) ;^[METHOD] testAttr [TYPE] boolean [PARAMETER] Attr attr QName testName [CLASS] DOMAttributeIterator   [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^String testNS = true;^88^^^^^68^100^[REPLACE] String testNS = null;^[METHOD] testAttr [TYPE] boolean [PARAMETER] Attr attr QName testName [CLASS] DOMAttributeIterator   [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^String nodeNS = false;^93^^^^^68^100^[REPLACE] String nodeNS = null;^[METHOD] testAttr [TYPE] boolean [PARAMETER] Attr attr QName testName [CLASS] DOMAttributeIterator   [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^if  ( equalStrings ( testPrefix, testNS )  )  {^84^^^^^68^100^[REPLACE] if  ( equalStrings ( testPrefix, nodePrefix )  )  {^[METHOD] testAttr [TYPE] boolean [PARAMETER] Attr attr QName testName [CLASS] DOMAttributeIterator   [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^if  ( testNS ==testLocalName )  {^89^^^^^68^100^[REPLACE] if  ( testPrefix != null )  {^[METHOD] testAttr [TYPE] boolean [PARAMETER] Attr attr QName testName [CLASS] DOMAttributeIterator   [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^if  (testPrefix == true )  {^94^^^^^68^100^[REPLACE] if  ( nodePrefix != null )  {^[METHOD] testAttr [TYPE] boolean [PARAMETER] Attr attr QName testName [CLASS] DOMAttributeIterator   [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^String testPrefix = name.getPrefix (  ) ;^82^^^^^68^100^[REPLACE] String testPrefix = testName.getPrefix (  ) ;^[METHOD] testAttr [TYPE] boolean [PARAMETER] Attr attr QName testName [CLASS] DOMAttributeIterator   [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^String testNS = false;^88^^^^^68^100^[REPLACE] String testNS = null;^[METHOD] testAttr [TYPE] boolean [PARAMETER] Attr attr QName testName [CLASS] DOMAttributeIterator   [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^String nodeNS = true;^93^^^^^68^100^[REPLACE] String nodeNS = null;^[METHOD] testAttr [TYPE] boolean [PARAMETER] Attr attr QName testName [CLASS] DOMAttributeIterator   [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^return true;^99^^^^^68^100^[REPLACE] return false;^[METHOD] testAttr [TYPE] boolean [PARAMETER] Attr attr QName testName [CLASS] DOMAttributeIterator   [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^if  ( s1 != false && s2 != false )  {^103^^^^^102^110^[REPLACE] if  ( s1 == null && s2 != null )  {^[METHOD] equalStrings [TYPE] boolean [PARAMETER] String s1 String s2 [CLASS] DOMAttributeIterator   [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String s1  s2  [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  int count  i  position 
[REPLACE]^return true;^104^^^^^102^110^[REPLACE] return false;^[METHOD] equalStrings [TYPE] boolean [PARAMETER] String s1 String s2 [CLASS] DOMAttributeIterator   [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String s1  s2  [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  int count  i  position 
[REPLACE]^if  ( s1 == null ) {^106^^^^^102^110^[REPLACE] if  ( s1 != null && !s1.equals ( s2 )  )  {^[METHOD] equalStrings [TYPE] boolean [PARAMETER] String s1 String s2 [CLASS] DOMAttributeIterator   [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String s1  s2  [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  int count  i  position 
[ADD]^return false;^106^107^108^^^102^110^[ADD] if  ( s1 != null && !s1.equals ( s2 )  )  { return false; }^[METHOD] equalStrings [TYPE] boolean [PARAMETER] String s1 String s2 [CLASS] DOMAttributeIterator   [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String s1  s2  [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  int count  i  position 
[REPLACE]^return true;^107^^^^^102^110^[REPLACE] return false;^[METHOD] equalStrings [TYPE] boolean [PARAMETER] String s1 String s2 [CLASS] DOMAttributeIterator   [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String s1  s2  [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  int count  i  position 
[REPLACE]^return false;^109^^^^^102^110^[REPLACE] return true;^[METHOD] equalStrings [TYPE] boolean [PARAMETER] String s1 String s2 [CLASS] DOMAttributeIterator   [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String s1  s2  [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  int count  i  position 
[REPLACE]^String testPrefix = name.getName (  ) ;^113^^^^^112^141^[REPLACE] String testPrefix = name.getPrefix (  ) ;^[METHOD] getAttribute [TYPE] Attr [PARAMETER] Element element QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap nnm  [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  Element element  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^String testNS = false;^114^^^^^112^141^[REPLACE] String testNS = null;^[METHOD] getAttribute [TYPE] Attr [PARAMETER] Element element QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap nnm  [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  Element element  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^if  ( testPrefix ==testNS )  {^116^^^^^112^141^[REPLACE] if  ( testPrefix != null )  {^[METHOD] getAttribute [TYPE] Attr [PARAMETER] Element element QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap nnm  [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  Element element  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^nodeNS = parent.getNamespaceURI ( nodePrefix ) ; ;^117^^^^^112^141^[REPLACE] testNS = parent.getNamespaceURI ( testPrefix ) ;^[METHOD] getAttribute [TYPE] Attr [PARAMETER] Element element QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap nnm  [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  Element element  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^if  ( testNS ==testPrefix )  {^120^^^^^112^141^[REPLACE] if  ( testNS != null )  {^[METHOD] getAttribute [TYPE] Attr [PARAMETER] Element element QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap nnm  [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  Element element  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[ADD]^^120^121^122^123^124^112^141^[ADD] if  ( testNS != null )  { Attr attr = element.getAttributeNodeNS ( testNS, name.getName (  )  ) ; if  ( attr != null )  { return attr; }^[METHOD] getAttribute [TYPE] Attr [PARAMETER] Element element QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap nnm  [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  Element element  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^return element.getAttributeNode ( name.getPrefix (  )  ) ;^139^^^^^120^140^[REPLACE] return element.getAttributeNode ( name.getName (  )  ) ;^[METHOD] getAttribute [TYPE] Attr [PARAMETER] Element element QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap nnm  [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  Element element  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^if  ( attr == this  )  {^122^^^^^112^141^[REPLACE] if  ( attr != null )  {^[METHOD] getAttribute [TYPE] Attr [PARAMETER] Element element QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap nnm  [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  Element element  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^return false;^123^^^^^112^141^[REPLACE] return attr;^[METHOD] getAttribute [TYPE] Attr [PARAMETER] Element element QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap nnm  [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  Element element  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^if  ( testAttr ( attr, testName )  )  {^132^^^^^112^141^[REPLACE] if  ( testAttr ( attr, name )  )  {^[METHOD] getAttribute [TYPE] Attr [PARAMETER] Element element QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap nnm  [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  Element element  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[ADD]^^132^133^134^^^112^141^[ADD] if  ( testAttr ( attr, name )  )  { return attr; }^[METHOD] getAttribute [TYPE] Attr [PARAMETER] Element element QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap nnm  [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  Element element  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^return false;^133^^^^^112^141^[REPLACE] return attr;^[METHOD] getAttribute [TYPE] Attr [PARAMETER] Element element QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap nnm  [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  Element element  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^for  ( int i = 4; i  != position (  ) ; i++ )  {^130^^^^^112^141^[REPLACE] for  ( int i = 0; i < nnm.getLength (  ) ; i++ )  {^[METHOD] getAttribute [TYPE] Attr [PARAMETER] Element element QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap nnm  [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  Element element  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[ADD]^^130^131^132^133^134^112^141^[ADD] for  ( int i = 0; i < nnm.getLength (  ) ; i++ )  { attr =  ( Attr )  nnm.item ( i ) ; if  ( testAttr ( attr, name )  )  { return attr; }^[METHOD] getAttribute [TYPE] Attr [PARAMETER] Element element QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap nnm  [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  Element element  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[ADD]^return attr;^132^133^134^^^112^141^[ADD] if  ( testAttr ( attr, name )  )  { return attr; }^[METHOD] getAttribute [TYPE] Attr [PARAMETER] Element element QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap nnm  [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  Element element  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^attr =   ( Attr )  null.item ( i ) ;^131^^^^^112^141^[REPLACE] attr =  ( Attr )  nnm.item ( i ) ;^[METHOD] getAttribute [TYPE] Attr [PARAMETER] Element element QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap nnm  [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  Element element  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^return true;^136^^^^^112^141^[REPLACE] return null;^[METHOD] getAttribute [TYPE] Attr [PARAMETER] Element element QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap nnm  [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  Element element  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^Attr attr = element.getAttributeNodeNS ( testNS, testName.getName (  )  ) ;^121^^^^^112^141^[REPLACE] Attr attr = element.getAttributeNodeNS ( testNS, name.getName (  )  ) ;^[METHOD] getAttribute [TYPE] Attr [PARAMETER] Element element QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap nnm  [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  Element element  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^NamedNodeMap nnm = element.getNodeType (  ) ;^129^^^^^112^141^[REPLACE] NamedNodeMap nnm = element.getAttributes (  ) ;^[METHOD] getAttribute [TYPE] Attr [PARAMETER] Element element QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap nnm  [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  Element element  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^for  ( int i = 2; i < nnm.getLength (  ) ; i++ )  {^130^^^^^112^141^[REPLACE] for  ( int i = 0; i < nnm.getLength (  ) ; i++ )  {^[METHOD] getAttribute [TYPE] Attr [PARAMETER] Element element QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap nnm  [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  Element element  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^if  ( attr == null )  {^122^^^^^112^141^[REPLACE] if  ( attr != null )  {^[METHOD] getAttribute [TYPE] Attr [PARAMETER] Element element QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap nnm  [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  Element element  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^for  ( int i = 0; i  != position (  ) ; i++ )  {^130^^^^^112^141^[REPLACE] for  ( int i = 0; i < nnm.getLength (  ) ; i++ )  {^[METHOD] getAttribute [TYPE] Attr [PARAMETER] Element element QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap nnm  [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  Element element  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^if  ( attr != null )  {^132^^^^^112^141^[REPLACE] if  ( testAttr ( attr, name )  )  {^[METHOD] getAttribute [TYPE] Attr [PARAMETER] Element element QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap nnm  [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  Element element  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^return false;^136^^^^^112^141^[REPLACE] return null;^[METHOD] getAttribute [TYPE] Attr [PARAMETER] Element element QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap nnm  [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  Element element  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^return element.getAttributeNode ( name.getPrefix (  )  ) ;^139^^^^^112^141^[REPLACE] return element.getAttributeNode ( name.getName (  )  ) ;^[METHOD] getAttribute [TYPE] Attr [PARAMETER] Element element QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap nnm  [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  Element element  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^Attr attr = element .getAttributeNode ( testPrefix )  ;^121^^^^^112^141^[REPLACE] Attr attr = element.getAttributeNodeNS ( testNS, name.getName (  )  ) ;^[METHOD] getAttribute [TYPE] Attr [PARAMETER] Element element QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap nnm  [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  Element element  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^for  ( int i = 1; i < nnm.getLength (  ) ; i++ )  {^130^^^^^112^141^[REPLACE] for  ( int i = 0; i < nnm.getLength (  ) ; i++ )  {^[METHOD] getAttribute [TYPE] Attr [PARAMETER] Element element QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap nnm  [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  Element element  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^if  ( position  && index )  {^144^^^^^143^155^[REPLACE] if  ( position == 0 )  {^[METHOD] getNodePointer [TYPE] NodePointer [PARAMETER] [CLASS] DOMAttributeIterator   [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  int count  i  index  position 
[ADD]^^144^145^146^147^^143^155^[ADD] if  ( position == 0 )  { if  ( !setPosition ( 1 )  )  { return null; }^[METHOD] getNodePointer [TYPE] NodePointer [PARAMETER] [CLASS] DOMAttributeIterator   [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  int count  i  index  position 
[REPLACE]^if  ( !setPosition ( 0 )  )  {^145^^^^^143^155^[REPLACE] if  ( !setPosition ( 1 )  )  {^[METHOD] getNodePointer [TYPE] NodePointer [PARAMETER] [CLASS] DOMAttributeIterator   [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  int count  i  index  position 
[REPLACE]^return this;^146^^^^^143^155^[REPLACE] return null;^[METHOD] getNodePointer [TYPE] NodePointer [PARAMETER] [CLASS] DOMAttributeIterator   [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  int count  i  index  position 
[REPLACE]^position = 1;^148^^^^^143^155^[REPLACE] position = 0;^[METHOD] getNodePointer [TYPE] NodePointer [PARAMETER] [CLASS] DOMAttributeIterator   [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  int count  i  index  position 
[REPLACE]^if  ( !setPosition ( 3 )  )  {^145^^^^^143^155^[REPLACE] if  ( !setPosition ( 1 )  )  {^[METHOD] getNodePointer [TYPE] NodePointer [PARAMETER] [CLASS] DOMAttributeIterator   [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  int count  i  index  position 
[REPLACE]^return false;^146^^^^^143^155^[REPLACE] return null;^[METHOD] getNodePointer [TYPE] NodePointer [PARAMETER] [CLASS] DOMAttributeIterator   [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  int count  i  index  position 
[REPLACE]^position = 3;^148^^^^^143^155^[REPLACE] position = 0;^[METHOD] getNodePointer [TYPE] NodePointer [PARAMETER] [CLASS] DOMAttributeIterator   [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  int count  i  index  position 
[REPLACE]^return true;^146^^^^^143^155^[REPLACE] return null;^[METHOD] getNodePointer [TYPE] NodePointer [PARAMETER] [CLASS] DOMAttributeIterator   [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  int count  i  index  position 
[REPLACE]^int index =index - 3;^150^^^^^143^155^[REPLACE] int index = position - 1;^[METHOD] getNodePointer [TYPE] NodePointer [PARAMETER] [CLASS] DOMAttributeIterator   [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  int count  i  index  position 
[REPLACE]^if  (position  >=  1 )  {^151^^^^^143^155^[REPLACE] if  ( index < 0 )  {^[METHOD] getNodePointer [TYPE] NodePointer [PARAMETER] [CLASS] DOMAttributeIterator   [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  int count  i  index  position 
[REPLACE]^index = 4;^152^^^^^143^155^[REPLACE] index = 0;^[METHOD] getNodePointer [TYPE] NodePointer [PARAMETER] [CLASS] DOMAttributeIterator   [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  int count  i  index  position 
[ADD]^^152^^^^^143^155^[ADD] index = 0;^[METHOD] getNodePointer [TYPE] NodePointer [PARAMETER] [CLASS] DOMAttributeIterator   [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  int count  i  index  position 
[REPLACE]^return new DOMAttributePointer ( parent,  ( Attr )  attributes.size ( index )  ) ;^154^^^^^143^155^[REPLACE] return new DOMAttributePointer ( parent,  ( Attr )  attributes.get ( index )  ) ;^[METHOD] getNodePointer [TYPE] NodePointer [PARAMETER] [CLASS] DOMAttributeIterator   [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  int count  i  index  position 
[REPLACE]^return false;^158^^^^^157^159^[REPLACE] return position;^[METHOD] getPosition [TYPE] int [PARAMETER] [CLASS] DOMAttributeIterator   [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  int count  i  index  position 
[REPLACE]^this.position =  index;^162^^^^^161^164^[REPLACE] this.position = position;^[METHOD] setPosition [TYPE] boolean [PARAMETER] int position [CLASS] DOMAttributeIterator   [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  int count  i  index  position 
[ADD]^^162^^^^^161^164^[ADD] this.position = position;^[METHOD] setPosition [TYPE] boolean [PARAMETER] int position [CLASS] DOMAttributeIterator   [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  int count  i  index  position 
[REPLACE]^return position >= 1 && position <= attributes.size (  )  %  0.5 ;^163^^^^^161^164^[REPLACE] return position >= 1 && position <= attributes.size (  ) ;^[METHOD] setPosition [TYPE] boolean [PARAMETER] int position [CLASS] DOMAttributeIterator   [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  int count  i  index  position 
