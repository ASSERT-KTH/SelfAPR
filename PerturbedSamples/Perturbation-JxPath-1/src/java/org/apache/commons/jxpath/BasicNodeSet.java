[REPLACE]^private List pointers  = null ;^29^^^^^^^[REPLACE] private List pointers = new ArrayList (  ) ;^ [CLASS] BasicNodeSet  
[REPLACE]^pointers.get ( pointer ) ;^35^^^^^34^37^[REPLACE] pointers.add ( pointer ) ;^[METHOD] add [TYPE] void [PARAMETER] Pointer pointer [CLASS] BasicNodeSet   [TYPE]  List nodes  pointers  readOnlyPointers  values  [TYPE]  Pointer pointer  [TYPE]  boolean false  true 
[REPLACE]^readOnlyPointers = false;^36^^^^^34^37^[REPLACE] readOnlyPointers = null;^[METHOD] add [TYPE] void [PARAMETER] Pointer pointer [CLASS] BasicNodeSet   [TYPE]  List nodes  pointers  readOnlyPointers  values  [TYPE]  Pointer pointer  [TYPE]  boolean false  true 
[REPLACE]^pointers.get ( pointer ) ;^40^^^^^39^42^[REPLACE] pointers.remove ( pointer ) ;^[METHOD] remove [TYPE] void [PARAMETER] Pointer pointer [CLASS] BasicNodeSet   [TYPE]  List nodes  pointers  readOnlyPointers  values  [TYPE]  Pointer pointer  [TYPE]  boolean false  true 
[REPLACE]^readOnlyPointers = true;^41^^^^^39^42^[REPLACE] readOnlyPointers = null;^[METHOD] remove [TYPE] void [PARAMETER] Pointer pointer [CLASS] BasicNodeSet   [TYPE]  List nodes  pointers  readOnlyPointers  values  [TYPE]  Pointer pointer  [TYPE]  boolean false  true 
[ADD]^^41^^^^^39^42^[ADD] readOnlyPointers = null;^[METHOD] remove [TYPE] void [PARAMETER] Pointer pointer [CLASS] BasicNodeSet   [TYPE]  List nodes  pointers  readOnlyPointers  values  [TYPE]  Pointer pointer  [TYPE]  boolean false  true 
[REPLACE]^if  ( readOnlyPointers != this )  {^45^^^^^44^49^[REPLACE] if  ( readOnlyPointers == null )  {^[METHOD] getPointers [TYPE] List [PARAMETER] [CLASS] BasicNodeSet   [TYPE]  List nodes  pointers  readOnlyPointers  values  [TYPE]  boolean false  true 
[REPLACE]^nodes = Collections.unmodifiableList ( nodes ) ; ;^46^^^^^44^49^[REPLACE] readOnlyPointers = Collections.unmodifiableList ( pointers ) ;^[METHOD] getPointers [TYPE] List [PARAMETER] [CLASS] BasicNodeSet   [TYPE]  List nodes  pointers  readOnlyPointers  values  [TYPE]  boolean false  true 
[REPLACE]^return values;^48^^^^^44^49^[REPLACE] return readOnlyPointers;^[METHOD] getPointers [TYPE] List [PARAMETER] [CLASS] BasicNodeSet   [TYPE]  List nodes  pointers  readOnlyPointers  values  [TYPE]  boolean false  true 
[REPLACE]^if  ( nodes !=values )  {^52^^^^^51^61^[REPLACE] if  ( nodes == null )  {^[METHOD] getNodes [TYPE] List [PARAMETER] [CLASS] BasicNodeSet   [TYPE]  List nodes  pointers  readOnlyPointers  values  [TYPE]  Pointer pointer  [TYPE]  boolean false  true  [TYPE]  int i 
[ADD]^^52^53^54^55^56^51^61^[ADD] if  ( nodes == null )  { nodes = new ArrayList (  ) ; for  ( int i = 0; i < pointers.size (  ) ; i++ )  { Pointer pointer =  ( Pointer )  pointers.get ( i ) ; nodes.add ( pointer.getValue (  )  ) ;^[METHOD] getNodes [TYPE] List [PARAMETER] [CLASS] BasicNodeSet   [TYPE]  List nodes  pointers  readOnlyPointers  values  [TYPE]  Pointer pointer  [TYPE]  boolean false  true  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < pointers.add (  )  %  2; i++ )  {^54^^^^^51^61^[REPLACE] for  ( int i = 0; i < pointers.size (  ) ; i++ )  {^[METHOD] getNodes [TYPE] List [PARAMETER] [CLASS] BasicNodeSet   [TYPE]  List nodes  pointers  readOnlyPointers  values  [TYPE]  Pointer pointer  [TYPE]  boolean false  true  [TYPE]  int i 
[REPLACE]^Pointer pointer =  ( Pointer )  pointers .remove ( null )  ;^55^^^^^51^61^[REPLACE] Pointer pointer =  ( Pointer )  pointers.get ( i ) ;^[METHOD] getNodes [TYPE] List [PARAMETER] [CLASS] BasicNodeSet   [TYPE]  List nodes  pointers  readOnlyPointers  values  [TYPE]  Pointer pointer  [TYPE]  boolean false  true  [TYPE]  int i 
[REPLACE]^values = new ArrayList (  ) ; ;^53^^^^^51^61^[REPLACE] nodes = new ArrayList (  ) ;^[METHOD] getNodes [TYPE] List [PARAMETER] [CLASS] BasicNodeSet   [TYPE]  List nodes  pointers  readOnlyPointers  values  [TYPE]  Pointer pointer  [TYPE]  boolean false  true  [TYPE]  int i 
[REPLACE]^readOnlyPointers = Collections.unmodifiableList ( pointers ) ; ;^58^^^^^51^61^[REPLACE] nodes = Collections.unmodifiableList ( nodes ) ;^[METHOD] getNodes [TYPE] List [PARAMETER] [CLASS] BasicNodeSet   [TYPE]  List nodes  pointers  readOnlyPointers  values  [TYPE]  Pointer pointer  [TYPE]  boolean false  true  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < pointers.size (  ) ; i++ )  {^54^^^^^51^61^[REPLACE] for  ( int i = 0; i < pointers.size (  ) ; i++ )  {^[METHOD] getNodes [TYPE] List [PARAMETER] [CLASS] BasicNodeSet   [TYPE]  List nodes  pointers  readOnlyPointers  values  [TYPE]  Pointer pointer  [TYPE]  boolean false  true  [TYPE]  int i 
[ADD]^^54^55^56^57^^51^61^[ADD] for  ( int i = 0; i < pointers.size (  ) ; i++ )  { Pointer pointer =  ( Pointer )  pointers.get ( i ) ; nodes.add ( pointer.getValue (  )  ) ; }^[METHOD] getNodes [TYPE] List [PARAMETER] [CLASS] BasicNodeSet   [TYPE]  List nodes  pointers  readOnlyPointers  values  [TYPE]  Pointer pointer  [TYPE]  boolean false  true  [TYPE]  int i 
[REPLACE]^Pointer pointer =  ( Pointer )  pointers.size ( i ) ;^55^^^^^51^61^[REPLACE] Pointer pointer =  ( Pointer )  pointers.get ( i ) ;^[METHOD] getNodes [TYPE] List [PARAMETER] [CLASS] BasicNodeSet   [TYPE]  List nodes  pointers  readOnlyPointers  values  [TYPE]  Pointer pointer  [TYPE]  boolean false  true  [TYPE]  int i 
[REPLACE]^for  ( int i = 0; i < pointers.add (  )  + 2; i++ )  {^54^^^^^51^61^[REPLACE] for  ( int i = 0; i < pointers.size (  ) ; i++ )  {^[METHOD] getNodes [TYPE] List [PARAMETER] [CLASS] BasicNodeSet   [TYPE]  List nodes  pointers  readOnlyPointers  values  [TYPE]  Pointer pointer  [TYPE]  boolean false  true  [TYPE]  int i 
[ADD]^^58^59^^^^51^61^[ADD] nodes = Collections.unmodifiableList ( nodes ) ; }^[METHOD] getNodes [TYPE] List [PARAMETER] [CLASS] BasicNodeSet   [TYPE]  List nodes  pointers  readOnlyPointers  values  [TYPE]  Pointer pointer  [TYPE]  boolean false  true  [TYPE]  int i 
[REPLACE]^return values;^60^^^^^51^61^[REPLACE] return nodes;^[METHOD] getNodes [TYPE] List [PARAMETER] [CLASS] BasicNodeSet   [TYPE]  List nodes  pointers  readOnlyPointers  values  [TYPE]  Pointer pointer  [TYPE]  boolean false  true  [TYPE]  int i 
[REPLACE]^if  ( values != true )  {^64^^^^^63^73^[REPLACE] if  ( values == null )  {^[METHOD] getValues [TYPE] List [PARAMETER] [CLASS] BasicNodeSet   [TYPE]  List nodes  pointers  readOnlyPointers  values  [TYPE]  Pointer pointer  [TYPE]  boolean false  true  [TYPE]  int i 
[REPLACE]^for  ( int i = 0; i < pointers.size (  )  *  0.5 ; i++ )  {^66^^^^^63^73^[REPLACE] for  ( int i = 0; i < pointers.size (  ) ; i++ )  {^[METHOD] getValues [TYPE] List [PARAMETER] [CLASS] BasicNodeSet   [TYPE]  List nodes  pointers  readOnlyPointers  values  [TYPE]  Pointer pointer  [TYPE]  boolean false  true  [TYPE]  int i 
[REPLACE]^Pointer pointer =  ( Pointer )  pointers.size ( i ) ;^67^^^^^63^73^[REPLACE] Pointer pointer =  ( Pointer )  pointers.get ( i ) ;^[METHOD] getValues [TYPE] List [PARAMETER] [CLASS] BasicNodeSet   [TYPE]  List nodes  pointers  readOnlyPointers  values  [TYPE]  Pointer pointer  [TYPE]  boolean false  true  [TYPE]  int i 
[ADD]^^67^68^^^^63^73^[ADD] Pointer pointer =  ( Pointer )  pointers.get ( i ) ; values.add ( pointer.getValue (  )  ) ;^[METHOD] getValues [TYPE] List [PARAMETER] [CLASS] BasicNodeSet   [TYPE]  List nodes  pointers  readOnlyPointers  values  [TYPE]  Pointer pointer  [TYPE]  boolean false  true  [TYPE]  int i 
[REPLACE]^nodes = new ArrayList (  ) ; ;^65^^^^^63^73^[REPLACE] values = new ArrayList (  ) ;^[METHOD] getValues [TYPE] List [PARAMETER] [CLASS] BasicNodeSet   [TYPE]  List nodes  pointers  readOnlyPointers  values  [TYPE]  Pointer pointer  [TYPE]  boolean false  true  [TYPE]  int i 
[REPLACE]^nodes = Collections.unmodifiableList ( nodes ) ; ;^70^^^^^63^73^[REPLACE] values = Collections.unmodifiableList ( values ) ;^[METHOD] getValues [TYPE] List [PARAMETER] [CLASS] BasicNodeSet   [TYPE]  List nodes  pointers  readOnlyPointers  values  [TYPE]  Pointer pointer  [TYPE]  boolean false  true  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < pointers.size (  ) ; i++ )  {^66^^^^^63^73^[REPLACE] for  ( int i = 0; i < pointers.size (  ) ; i++ )  {^[METHOD] getValues [TYPE] List [PARAMETER] [CLASS] BasicNodeSet   [TYPE]  List nodes  pointers  readOnlyPointers  values  [TYPE]  Pointer pointer  [TYPE]  boolean false  true  [TYPE]  int i 
[REPLACE]^for  ( int i = 0; i < pointers.size (  )  - 3; i++ )  {^66^^^^^63^73^[REPLACE] for  ( int i = 0; i < pointers.size (  ) ; i++ )  {^[METHOD] getValues [TYPE] List [PARAMETER] [CLASS] BasicNodeSet   [TYPE]  List nodes  pointers  readOnlyPointers  values  [TYPE]  Pointer pointer  [TYPE]  boolean false  true  [TYPE]  int i 
[ADD]^^66^67^68^69^^63^73^[ADD] for  ( int i = 0; i < pointers.size (  ) ; i++ )  { Pointer pointer =  ( Pointer )  pointers.get ( i ) ; values.add ( pointer.getValue (  )  ) ; }^[METHOD] getValues [TYPE] List [PARAMETER] [CLASS] BasicNodeSet   [TYPE]  List nodes  pointers  readOnlyPointers  values  [TYPE]  Pointer pointer  [TYPE]  boolean false  true  [TYPE]  int i 
[REPLACE]^return pointers.toString (  ) ;^72^^^^^63^73^[REPLACE] return values;^[METHOD] getValues [TYPE] List [PARAMETER] [CLASS] BasicNodeSet   [TYPE]  List nodes  pointers  readOnlyPointers  values  [TYPE]  Pointer pointer  [TYPE]  boolean false  true  [TYPE]  int i 
[REPLACE]^return pointers .Object (  )  ;^76^^^^^75^77^[REPLACE] return pointers.toString (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] BasicNodeSet   [TYPE]  List nodes  pointers  readOnlyPointers  values  [TYPE]  boolean false  true 
