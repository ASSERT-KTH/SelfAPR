[REPLACE]^private List allFunctions  = null ;^35^^^^^^^[REPLACE] private List allFunctions = new ArrayList (  ) ;^ [CLASS] FunctionLibrary  
[REPLACE]^private HashMap byNamespace  = null ;^36^^^^^^^[REPLACE] private HashMap byNamespace = null;^ [CLASS] FunctionLibrary  
[REPLACE]^allFunctions.get ( functions ) ;^42^^^^^41^44^[REPLACE] allFunctions.add ( functions ) ;^[METHOD] addFunctions [TYPE] void [PARAMETER] Functions functions [CLASS] FunctionLibrary   [TYPE]  List allFunctions  [TYPE]  Functions functions  [TYPE]  boolean false  true  [TYPE]  HashMap byNamespace 
[REPLACE]^byNamespace = true;^43^^^^^41^44^[REPLACE] byNamespace = null;^[METHOD] addFunctions [TYPE] void [PARAMETER] Functions functions [CLASS] FunctionLibrary   [TYPE]  List allFunctions  [TYPE]  Functions functions  [TYPE]  boolean false  true  [TYPE]  HashMap byNamespace 
[REPLACE]^allFunctions .size (  )  ;^50^^^^^49^52^[REPLACE] allFunctions.remove ( functions ) ;^[METHOD] removeFunctions [TYPE] void [PARAMETER] Functions functions [CLASS] FunctionLibrary   [TYPE]  List allFunctions  [TYPE]  Functions functions  [TYPE]  boolean false  true  [TYPE]  HashMap byNamespace 
[REPLACE]^byNamespace = this;^51^^^^^49^52^[REPLACE] byNamespace = null;^[METHOD] removeFunctions [TYPE] void [PARAMETER] Functions functions [CLASS] FunctionLibrary   [TYPE]  List allFunctions  [TYPE]  Functions functions  [TYPE]  boolean false  true  [TYPE]  HashMap byNamespace 
[REPLACE]^if  ( byNamespace != null )  {^59^^^^^58^63^[REPLACE] if  ( byNamespace == null )  {^[METHOD] getUsedNamespaces [TYPE] Set [PARAMETER] [CLASS] FunctionLibrary   [TYPE]  HashMap byNamespace  [TYPE]  List allFunctions  [TYPE]  boolean false  true 
[ADD]^prepareCache (  ) ;^59^60^61^^^58^63^[ADD] if  ( byNamespace == null )  { prepareCache (  ) ; }^[METHOD] getUsedNamespaces [TYPE] Set [PARAMETER] [CLASS] FunctionLibrary   [TYPE]  HashMap byNamespace  [TYPE]  List allFunctions  [TYPE]  boolean false  true 
[REPLACE]^return byNamespace.keySet (  ) ;^60^^^^^58^63^[REPLACE] prepareCache (  ) ;^[METHOD] getUsedNamespaces [TYPE] Set [PARAMETER] [CLASS] FunctionLibrary   [TYPE]  HashMap byNamespace  [TYPE]  List allFunctions  [TYPE]  boolean false  true 
[REPLACE]^return byNamespace.HashMap (  ) ;^62^^^^^58^63^[REPLACE] return byNamespace.keySet (  ) ;^[METHOD] getUsedNamespaces [TYPE] Set [PARAMETER] [CLASS] FunctionLibrary   [TYPE]  HashMap byNamespace  [TYPE]  List allFunctions  [TYPE]  boolean false  true 
[REPLACE]^if  ( byNamespace != null )  {^74^^^^^73^99^[REPLACE] if  ( byNamespace == null )  {^[METHOD] getFunction [TYPE] Function [PARAMETER] String namespace String name Object[] parameters [CLASS] FunctionLibrary   [TYPE]  Function function  [TYPE]  boolean false  true  [TYPE]  HashMap byNamespace  [TYPE]  List allFunctions  list  [TYPE]  Object candidates  [TYPE]  String name  namespace  [TYPE]  Object[] parameters  [TYPE]  int count  i 
[ADD]^prepareCache (  ) ;^74^75^76^^^73^99^[ADD] if  ( byNamespace == null )  { prepareCache (  ) ; }^[METHOD] getFunction [TYPE] Function [PARAMETER] String namespace String name Object[] parameters [CLASS] FunctionLibrary   [TYPE]  Function function  [TYPE]  boolean false  true  [TYPE]  HashMap byNamespace  [TYPE]  List allFunctions  list  [TYPE]  Object candidates  [TYPE]  String name  namespace  [TYPE]  Object[] parameters  [TYPE]  int count  i 
[REPLACE]^return byNamespace.keySet (  ) ;^75^^^^^73^99^[REPLACE] prepareCache (  ) ;^[METHOD] getFunction [TYPE] Function [PARAMETER] String namespace String name Object[] parameters [CLASS] FunctionLibrary   [TYPE]  Function function  [TYPE]  boolean false  true  [TYPE]  HashMap byNamespace  [TYPE]  List allFunctions  list  [TYPE]  Object candidates  [TYPE]  String name  namespace  [TYPE]  Object[] parameters  [TYPE]  int count  i 
[REPLACE]^Object candidates = byNamespace.get ( name ) ;^77^^^^^73^99^[REPLACE] Object candidates = byNamespace.get ( namespace ) ;^[METHOD] getFunction [TYPE] Function [PARAMETER] String namespace String name Object[] parameters [CLASS] FunctionLibrary   [TYPE]  Function function  [TYPE]  boolean false  true  [TYPE]  HashMap byNamespace  [TYPE]  List allFunctions  list  [TYPE]  Object candidates  [TYPE]  String name  namespace  [TYPE]  Object[] parameters  [TYPE]  int count  i 
[REPLACE]^if  ( ! candidates instanceof Functions )  {^78^^^^^73^99^[REPLACE] if  ( candidates instanceof Functions )  {^[METHOD] getFunction [TYPE] Function [PARAMETER] String namespace String name Object[] parameters [CLASS] FunctionLibrary   [TYPE]  Function function  [TYPE]  boolean false  true  [TYPE]  HashMap byNamespace  [TYPE]  List allFunctions  list  [TYPE]  Object candidates  [TYPE]  String name  namespace  [TYPE]  Object[] parameters  [TYPE]  int count  i 
[ADD]^^78^79^80^81^82^73^99^[ADD] if  ( candidates instanceof Functions )  { return  (  ( Functions )  candidates ) .getFunction ( namespace, name, parameters ) ;^[METHOD] getFunction [TYPE] Function [PARAMETER] String namespace String name Object[] parameters [CLASS] FunctionLibrary   [TYPE]  Function function  [TYPE]  boolean false  true  [TYPE]  HashMap byNamespace  [TYPE]  List allFunctions  list  [TYPE]  Object candidates  [TYPE]  String name  namespace  [TYPE]  Object[] parameters  [TYPE]  int count  i 
[REPLACE]^else {^84^^^^^73^99^[REPLACE] else if  ( candidates instanceof List )  {^[METHOD] getFunction [TYPE] Function [PARAMETER] String namespace String name Object[] parameters [CLASS] FunctionLibrary   [TYPE]  Function function  [TYPE]  boolean false  true  [TYPE]  HashMap byNamespace  [TYPE]  List allFunctions  list  [TYPE]  Object candidates  [TYPE]  String name  namespace  [TYPE]  Object[] parameters  [TYPE]  int count  i 
[REPLACE]^if  ( function == true )  {^93^^^^^73^99^[REPLACE] if  ( function != null )  {^[METHOD] getFunction [TYPE] Function [PARAMETER] String namespace String name Object[] parameters [CLASS] FunctionLibrary   [TYPE]  Function function  [TYPE]  boolean false  true  [TYPE]  HashMap byNamespace  [TYPE]  List allFunctions  list  [TYPE]  Object candidates  [TYPE]  String name  namespace  [TYPE]  Object[] parameters  [TYPE]  int count  i 
[ADD]^return function;^93^94^95^^^73^99^[ADD] if  ( function != null )  { return function; }^[METHOD] getFunction [TYPE] Function [PARAMETER] String namespace String name Object[] parameters [CLASS] FunctionLibrary   [TYPE]  Function function  [TYPE]  boolean false  true  [TYPE]  HashMap byNamespace  [TYPE]  List allFunctions  list  [TYPE]  Object candidates  [TYPE]  String name  namespace  [TYPE]  Object[] parameters  [TYPE]  int count  i 
[REPLACE]^return null;^94^^^^^73^99^[REPLACE] return function;^[METHOD] getFunction [TYPE] Function [PARAMETER] String namespace String name Object[] parameters [CLASS] FunctionLibrary   [TYPE]  Function function  [TYPE]  boolean false  true  [TYPE]  HashMap byNamespace  [TYPE]  List allFunctions  list  [TYPE]  Object candidates  [TYPE]  String name  namespace  [TYPE]  Object[] parameters  [TYPE]  int count  i 
[REPLACE]^for  ( int i = 4; i  >=  count; i++ )  {^87^^^^^73^99^[REPLACE] for  ( int i = 0; i < count; i++ )  {^[METHOD] getFunction [TYPE] Function [PARAMETER] String namespace String name Object[] parameters [CLASS] FunctionLibrary   [TYPE]  Function function  [TYPE]  boolean false  true  [TYPE]  HashMap byNamespace  [TYPE]  List allFunctions  list  [TYPE]  Object candidates  [TYPE]  String name  namespace  [TYPE]  Object[] parameters  [TYPE]  int count  i 
[ADD]^^87^88^89^90^91^73^99^[ADD] for  ( int i = 0; i < count; i++ )  { Function function = (  ( Functions )  list.get ( i )  ) .getFunction ( namespace, name,^[METHOD] getFunction [TYPE] Function [PARAMETER] String namespace String name Object[] parameters [CLASS] FunctionLibrary   [TYPE]  Function function  [TYPE]  boolean false  true  [TYPE]  HashMap byNamespace  [TYPE]  List allFunctions  list  [TYPE]  Object candidates  [TYPE]  String name  namespace  [TYPE]  Object[] parameters  [TYPE]  int count  i 
[REPLACE]^if  ( function == false )  {^93^^^^^73^99^[REPLACE] if  ( function != null )  {^[METHOD] getFunction [TYPE] Function [PARAMETER] String namespace String name Object[] parameters [CLASS] FunctionLibrary   [TYPE]  Function function  [TYPE]  boolean false  true  [TYPE]  HashMap byNamespace  [TYPE]  List allFunctions  list  [TYPE]  Object candidates  [TYPE]  String name  namespace  [TYPE]  Object[] parameters  [TYPE]  int count  i 
[REPLACE]^Function function = (  ( Functions )  list.get ( i )  ) .getFunction ( namespacespace, name,^88^89^90^91^^73^99^[REPLACE] Function function = (  ( Functions )  list.get ( i )  ) .getFunction ( namespace, name,^[METHOD] getFunction [TYPE] Function [PARAMETER] String namespace String name Object[] parameters [CLASS] FunctionLibrary   [TYPE]  Function function  [TYPE]  boolean false  true  [TYPE]  HashMap byNamespace  [TYPE]  List allFunctions  list  [TYPE]  Object candidates  [TYPE]  String name  namespace  [TYPE]  Object[] parameters  [TYPE]  int count  i 
[ADD]^^88^89^90^^^73^99^[ADD] Function function = (  ( Functions )  list.get ( i )  ) .getFunction ( namespace,^[METHOD] getFunction [TYPE] Function [PARAMETER] String namespace String name Object[] parameters [CLASS] FunctionLibrary   [TYPE]  Function function  [TYPE]  boolean false  true  [TYPE]  HashMap byNamespace  [TYPE]  List allFunctions  list  [TYPE]  Object candidates  [TYPE]  String name  namespace  [TYPE]  Object[] parameters  [TYPE]  int count  i 
[REPLACE]^String ns =  ( String )  it.next (  ) ;^85^^^^^73^99^[REPLACE] List list =  ( List )  candidates;^[METHOD] getFunction [TYPE] Function [PARAMETER] String namespace String name Object[] parameters [CLASS] FunctionLibrary   [TYPE]  Function function  [TYPE]  boolean false  true  [TYPE]  HashMap byNamespace  [TYPE]  List allFunctions  list  [TYPE]  Object candidates  [TYPE]  String name  namespace  [TYPE]  Object[] parameters  [TYPE]  int count  i 
[REPLACE]^int count = allFunctions.size (  ) ;^86^^^^^73^99^[REPLACE] int count = list.size (  ) ;^[METHOD] getFunction [TYPE] Function [PARAMETER] String namespace String name Object[] parameters [CLASS] FunctionLibrary   [TYPE]  Function function  [TYPE]  boolean false  true  [TYPE]  HashMap byNamespace  [TYPE]  List allFunctions  list  [TYPE]  Object candidates  [TYPE]  String name  namespace  [TYPE]  Object[] parameters  [TYPE]  int count  i 
[REPLACE]^for  ( int i = 4; i < count; i++ )  {^87^^^^^73^99^[REPLACE] for  ( int i = 0; i < count; i++ )  {^[METHOD] getFunction [TYPE] Function [PARAMETER] String namespace String name Object[] parameters [CLASS] FunctionLibrary   [TYPE]  Function function  [TYPE]  boolean false  true  [TYPE]  HashMap byNamespace  [TYPE]  List allFunctions  list  [TYPE]  Object candidates  [TYPE]  String name  namespace  [TYPE]  Object[] parameters  [TYPE]  int count  i 
[REPLACE]^Function function = (  ( Functions )  allFunctions.get ( i )  ) .getFunction ( namespace, name,^88^89^90^91^^73^99^[REPLACE] Function function = (  ( Functions )  list.get ( i )  ) .getFunction ( namespace, name,^[METHOD] getFunction [TYPE] Function [PARAMETER] String namespace String name Object[] parameters [CLASS] FunctionLibrary   [TYPE]  Function function  [TYPE]  boolean false  true  [TYPE]  HashMap byNamespace  [TYPE]  List allFunctions  list  [TYPE]  Object candidates  [TYPE]  String name  namespace  [TYPE]  Object[] parameters  [TYPE]  int count  i 
[REPLACE]^if  ( function == null )  {^93^^^^^73^99^[REPLACE] if  ( function != null )  {^[METHOD] getFunction [TYPE] Function [PARAMETER] String namespace String name Object[] parameters [CLASS] FunctionLibrary   [TYPE]  Function function  [TYPE]  boolean false  true  [TYPE]  HashMap byNamespace  [TYPE]  List allFunctions  list  [TYPE]  Object candidates  [TYPE]  String name  namespace  [TYPE]  Object[] parameters  [TYPE]  int count  i 
[REPLACE]^for  ( int i = 0; i  ==  count; i++ )  {^87^^^^^73^99^[REPLACE] for  ( int i = 0; i < count; i++ )  {^[METHOD] getFunction [TYPE] Function [PARAMETER] String namespace String name Object[] parameters [CLASS] FunctionLibrary   [TYPE]  Function function  [TYPE]  boolean false  true  [TYPE]  HashMap byNamespace  [TYPE]  List allFunctions  list  [TYPE]  Object candidates  [TYPE]  String name  namespace  [TYPE]  Object[] parameters  [TYPE]  int count  i 
[REPLACE]^if  ( function == this )  {^93^^^^^73^99^[REPLACE] if  ( function != null )  {^[METHOD] getFunction [TYPE] Function [PARAMETER] String namespace String name Object[] parameters [CLASS] FunctionLibrary   [TYPE]  Function function  [TYPE]  boolean false  true  [TYPE]  HashMap byNamespace  [TYPE]  List allFunctions  list  [TYPE]  Object candidates  [TYPE]  String name  namespace  [TYPE]  Object[] parameters  [TYPE]  int count  i 
[ADD]^^93^94^95^^^73^99^[ADD] if  ( function != null )  { return function; }^[METHOD] getFunction [TYPE] Function [PARAMETER] String namespace String name Object[] parameters [CLASS] FunctionLibrary   [TYPE]  Function function  [TYPE]  boolean false  true  [TYPE]  HashMap byNamespace  [TYPE]  List allFunctions  list  [TYPE]  Object candidates  [TYPE]  String name  namespace  [TYPE]  Object[] parameters  [TYPE]  int count  i 
[REPLACE]^Function function = (  ( Functions )  list.get ( i )  ) .getFunction ( name, name,^88^89^90^91^^73^99^[REPLACE] Function function = (  ( Functions )  list.get ( i )  ) .getFunction ( namespace, name,^[METHOD] getFunction [TYPE] Function [PARAMETER] String namespace String name Object[] parameters [CLASS] FunctionLibrary   [TYPE]  Function function  [TYPE]  boolean false  true  [TYPE]  HashMap byNamespace  [TYPE]  List allFunctions  list  [TYPE]  Object candidates  [TYPE]  String name  namespace  [TYPE]  Object[] parameters  [TYPE]  int count  i 
[REPLACE]^int count = allFunctions .remove ( candidates )  ;^86^^^^^73^99^[REPLACE] int count = list.size (  ) ;^[METHOD] getFunction [TYPE] Function [PARAMETER] String namespace String name Object[] parameters [CLASS] FunctionLibrary   [TYPE]  Function function  [TYPE]  boolean false  true  [TYPE]  HashMap byNamespace  [TYPE]  List allFunctions  list  [TYPE]  Object candidates  [TYPE]  String name  namespace  [TYPE]  Object[] parameters  [TYPE]  int count  i 
[REPLACE]^for  ( int i = 1; i < count; i++ )  {^87^^^^^73^99^[REPLACE] for  ( int i = 0; i < count; i++ )  {^[METHOD] getFunction [TYPE] Function [PARAMETER] String namespace String name Object[] parameters [CLASS] FunctionLibrary   [TYPE]  Function function  [TYPE]  boolean false  true  [TYPE]  HashMap byNamespace  [TYPE]  List allFunctions  list  [TYPE]  Object candidates  [TYPE]  String name  namespace  [TYPE]  Object[] parameters  [TYPE]  int count  i 
[REPLACE]^return  (  ( Functions )  candidates )  .addFunctions ( null )  ;^79^80^81^82^^73^99^[REPLACE] return  (  ( Functions )  candidates ) .getFunction ( namespace, name, parameters ) ;^[METHOD] getFunction [TYPE] Function [PARAMETER] String namespace String name Object[] parameters [CLASS] FunctionLibrary   [TYPE]  Function function  [TYPE]  boolean false  true  [TYPE]  HashMap byNamespace  [TYPE]  List allFunctions  list  [TYPE]  Object candidates  [TYPE]  String name  namespace  [TYPE]  Object[] parameters  [TYPE]  int count  i 
[REPLACE]^else if  ( ! candidates instanceof List )  {^84^^^^^73^99^[REPLACE] else if  ( candidates instanceof List )  {^[METHOD] getFunction [TYPE] Function [PARAMETER] String namespace String name Object[] parameters [CLASS] FunctionLibrary   [TYPE]  Function function  [TYPE]  boolean false  true  [TYPE]  HashMap byNamespace  [TYPE]  List allFunctions  list  [TYPE]  Object candidates  [TYPE]  String name  namespace  [TYPE]  Object[] parameters  [TYPE]  int count  i 
[REPLACE]^for  ( int i = 0; i  <=  count; i++ )  {^87^^^^^73^99^[REPLACE] for  ( int i = 0; i < count; i++ )  {^[METHOD] getFunction [TYPE] Function [PARAMETER] String namespace String name Object[] parameters [CLASS] FunctionLibrary   [TYPE]  Function function  [TYPE]  boolean false  true  [TYPE]  HashMap byNamespace  [TYPE]  List allFunctions  list  [TYPE]  Object candidates  [TYPE]  String name  namespace  [TYPE]  Object[] parameters  [TYPE]  int count  i 
[REPLACE]^Function function = (  ( Functions )  list.size ( i )  ) .getFunction ( namespace, name,^88^89^90^91^^73^99^[REPLACE] Function function = (  ( Functions )  list.get ( i )  ) .getFunction ( namespace, name,^[METHOD] getFunction [TYPE] Function [PARAMETER] String namespace String name Object[] parameters [CLASS] FunctionLibrary   [TYPE]  Function function  [TYPE]  boolean false  true  [TYPE]  HashMap byNamespace  [TYPE]  List allFunctions  list  [TYPE]  Object candidates  [TYPE]  String name  namespace  [TYPE]  Object[] parameters  [TYPE]  int count  i 
[ADD]^^86^^^^^73^99^[ADD] int count = list.size (  ) ;^[METHOD] getFunction [TYPE] Function [PARAMETER] String namespace String name Object[] parameters [CLASS] FunctionLibrary   [TYPE]  Function function  [TYPE]  boolean false  true  [TYPE]  HashMap byNamespace  [TYPE]  List allFunctions  list  [TYPE]  Object candidates  [TYPE]  String name  namespace  [TYPE]  Object[] parameters  [TYPE]  int count  i 
[REPLACE]^for  ( int i = 0 % 3; i < count; i++ )  {^87^^^^^73^99^[REPLACE] for  ( int i = 0; i < count; i++ )  {^[METHOD] getFunction [TYPE] Function [PARAMETER] String namespace String name Object[] parameters [CLASS] FunctionLibrary   [TYPE]  Function function  [TYPE]  boolean false  true  [TYPE]  HashMap byNamespace  [TYPE]  List allFunctions  list  [TYPE]  Object candidates  [TYPE]  String name  namespace  [TYPE]  Object[] parameters  [TYPE]  int count  i 
[REPLACE]^return  (  ( Functions )  candidates ) .getFunction ( name, name, parameters ) ;^79^80^81^82^^73^99^[REPLACE] return  (  ( Functions )  candidates ) .getFunction ( namespace, name, parameters ) ;^[METHOD] getFunction [TYPE] Function [PARAMETER] String namespace String name Object[] parameters [CLASS] FunctionLibrary   [TYPE]  Function function  [TYPE]  boolean false  true  [TYPE]  HashMap byNamespace  [TYPE]  List allFunctions  list  [TYPE]  Object candidates  [TYPE]  String name  namespace  [TYPE]  Object[] parameters  [TYPE]  int count  i 
[REPLACE]^for  ( int i = 0 - 0; i < count; i++ )  {^87^^^^^73^99^[REPLACE] for  ( int i = 0; i < count; i++ )  {^[METHOD] getFunction [TYPE] Function [PARAMETER] String namespace String name Object[] parameters [CLASS] FunctionLibrary   [TYPE]  Function function  [TYPE]  boolean false  true  [TYPE]  HashMap byNamespace  [TYPE]  List allFunctions  list  [TYPE]  Object candidates  [TYPE]  String name  namespace  [TYPE]  Object[] parameters  [TYPE]  int count  i 
[REPLACE]^Function function = (  ( Functions )  list.get ( i )  )  .addFunctions ( this )  ( namespace, name,^88^89^90^91^^73^99^[REPLACE] Function function = (  ( Functions )  list.get ( i )  ) .getFunction ( namespace, name,^[METHOD] getFunction [TYPE] Function [PARAMETER] String namespace String name Object[] parameters [CLASS] FunctionLibrary   [TYPE]  Function function  [TYPE]  boolean false  true  [TYPE]  HashMap byNamespace  [TYPE]  List allFunctions  list  [TYPE]  Object candidates  [TYPE]  String name  namespace  [TYPE]  Object[] parameters  [TYPE]  int count  i 
[REPLACE]^return true;^98^^^^^73^99^[REPLACE] return null;^[METHOD] getFunction [TYPE] Function [PARAMETER] String namespace String name Object[] parameters [CLASS] FunctionLibrary   [TYPE]  Function function  [TYPE]  boolean false  true  [TYPE]  HashMap byNamespace  [TYPE]  List allFunctions  list  [TYPE]  Object candidates  [TYPE]  String name  namespace  [TYPE]  Object[] parameters  [TYPE]  int count  i 
[REPLACE]^byNamespace =  new ArrayList (  )  ;^102^^^^^101^124^[REPLACE] byNamespace = new HashMap (  ) ;^[METHOD] prepareCache [TYPE] void [PARAMETER] [CLASS] FunctionLibrary   [TYPE]  Set namespaces  [TYPE]  boolean false  true  [TYPE]  HashMap byNamespace  [TYPE]  Iterator it  [TYPE]  List allFunctions  list  lst  [TYPE]  Functions funcs  [TYPE]  Object candidates  [TYPE]  String ns  [TYPE]  int count  i 
[REPLACE]^int count = allFunctions .remove ( candidates )  ;^103^^^^^101^124^[REPLACE] int count = allFunctions.size (  ) ;^[METHOD] prepareCache [TYPE] void [PARAMETER] [CLASS] FunctionLibrary   [TYPE]  Set namespaces  [TYPE]  boolean false  true  [TYPE]  HashMap byNamespace  [TYPE]  Iterator it  [TYPE]  List allFunctions  list  lst  [TYPE]  Functions funcs  [TYPE]  Object candidates  [TYPE]  String ns  [TYPE]  int count  i 
[REPLACE]^if  ( candidates != null )  {^110^^^^^101^124^[REPLACE] if  ( candidates == null )  {^[METHOD] prepareCache [TYPE] void [PARAMETER] [CLASS] FunctionLibrary   [TYPE]  Set namespaces  [TYPE]  boolean false  true  [TYPE]  HashMap byNamespace  [TYPE]  Iterator it  [TYPE]  List allFunctions  list  lst  [TYPE]  Functions funcs  [TYPE]  Object candidates  [TYPE]  String ns  [TYPE]  int count  i 
[REPLACE]^if  ( ! candidates instanceof Functions )  {^113^^^^^101^124^[REPLACE] else if  ( candidates instanceof Functions )  {^[METHOD] prepareCache [TYPE] void [PARAMETER] [CLASS] FunctionLibrary   [TYPE]  Set namespaces  [TYPE]  boolean false  true  [TYPE]  HashMap byNamespace  [TYPE]  Iterator it  [TYPE]  List allFunctions  list  lst  [TYPE]  Functions funcs  [TYPE]  Object candidates  [TYPE]  String ns  [TYPE]  int count  i 
[ADD]^List lst = new ArrayList (  ) ;lst.add ( candidates ) ;lst.add ( funcs ) ;byNamespace.put ( ns, lst ) ;^113^114^115^116^117^101^124^[ADD] else if  ( candidates instanceof Functions )  { List lst = new ArrayList (  ) ; lst.add ( candidates ) ; lst.add ( funcs ) ; byNamespace.put ( ns, lst ) ;^[METHOD] prepareCache [TYPE] void [PARAMETER] [CLASS] FunctionLibrary   [TYPE]  Set namespaces  [TYPE]  boolean false  true  [TYPE]  HashMap byNamespace  [TYPE]  Iterator it  [TYPE]  List allFunctions  list  lst  [TYPE]  Functions funcs  [TYPE]  Object candidates  [TYPE]  String ns  [TYPE]  int count  i 
[REPLACE]^(  ( List )  candidates ) .size ( funcs ) ;^120^^^^^101^124^[REPLACE] (  ( List )  candidates ) .add ( funcs ) ;^[METHOD] prepareCache [TYPE] void [PARAMETER] [CLASS] FunctionLibrary   [TYPE]  Set namespaces  [TYPE]  boolean false  true  [TYPE]  HashMap byNamespace  [TYPE]  Iterator it  [TYPE]  List allFunctions  list  lst  [TYPE]  Functions funcs  [TYPE]  Object candidates  [TYPE]  String ns  [TYPE]  int count  i 
[ADD]^^120^^^^^101^124^[ADD] (  ( List )  candidates ) .add ( funcs ) ;^[METHOD] prepareCache [TYPE] void [PARAMETER] [CLASS] FunctionLibrary   [TYPE]  Set namespaces  [TYPE]  boolean false  true  [TYPE]  HashMap byNamespace  [TYPE]  Iterator it  [TYPE]  List allFunctions  list  lst  [TYPE]  Functions funcs  [TYPE]  Object candidates  [TYPE]  String ns  [TYPE]  int count  i 
[REPLACE]^List list =  ( List )  candidates;^114^^^^^101^124^[REPLACE] List lst = new ArrayList (  ) ;^[METHOD] prepareCache [TYPE] void [PARAMETER] [CLASS] FunctionLibrary   [TYPE]  Set namespaces  [TYPE]  boolean false  true  [TYPE]  HashMap byNamespace  [TYPE]  Iterator it  [TYPE]  List allFunctions  list  lst  [TYPE]  Functions funcs  [TYPE]  Object candidates  [TYPE]  String ns  [TYPE]  int count  i 
[ADD]^^114^^^^^101^124^[ADD] List lst = new ArrayList (  ) ;^[METHOD] prepareCache [TYPE] void [PARAMETER] [CLASS] FunctionLibrary   [TYPE]  Set namespaces  [TYPE]  boolean false  true  [TYPE]  HashMap byNamespace  [TYPE]  Iterator it  [TYPE]  List allFunctions  list  lst  [TYPE]  Functions funcs  [TYPE]  Object candidates  [TYPE]  String ns  [TYPE]  int count  i 
[REPLACE]^byNamespace .get ( candidates )  ;^111^^^^^101^124^[REPLACE] byNamespace.put ( ns, funcs ) ;^[METHOD] prepareCache [TYPE] void [PARAMETER] [CLASS] FunctionLibrary   [TYPE]  Set namespaces  [TYPE]  boolean false  true  [TYPE]  HashMap byNamespace  [TYPE]  Iterator it  [TYPE]  List allFunctions  list  lst  [TYPE]  Functions funcs  [TYPE]  Object candidates  [TYPE]  String ns  [TYPE]  int count  i 
[REPLACE]^else {^113^^^^^101^124^[REPLACE] else if  ( candidates instanceof Functions )  {^[METHOD] prepareCache [TYPE] void [PARAMETER] [CLASS] FunctionLibrary   [TYPE]  Set namespaces  [TYPE]  boolean false  true  [TYPE]  HashMap byNamespace  [TYPE]  Iterator it  [TYPE]  List allFunctions  list  lst  [TYPE]  Functions funcs  [TYPE]  Object candidates  [TYPE]  String ns  [TYPE]  int count  i 
[REPLACE]^for  ( int i = 0; i  ==  count; i++ )  {^104^^^^^101^124^[REPLACE] for  ( int i = 0; i < count; i++ )  {^[METHOD] prepareCache [TYPE] void [PARAMETER] [CLASS] FunctionLibrary   [TYPE]  Set namespaces  [TYPE]  boolean false  true  [TYPE]  HashMap byNamespace  [TYPE]  Iterator it  [TYPE]  List allFunctions  list  lst  [TYPE]  Functions funcs  [TYPE]  Object candidates  [TYPE]  String ns  [TYPE]  int count  i 
[REPLACE]^if  ( candidates != true )  {^110^^^^^101^124^[REPLACE] if  ( candidates == null )  {^[METHOD] prepareCache [TYPE] void [PARAMETER] [CLASS] FunctionLibrary   [TYPE]  Set namespaces  [TYPE]  boolean false  true  [TYPE]  HashMap byNamespace  [TYPE]  Iterator it  [TYPE]  List allFunctions  list  lst  [TYPE]  Functions funcs  [TYPE]  Object candidates  [TYPE]  String ns  [TYPE]  int count  i 
[REPLACE]^else if  ( ! candidates instanceof Functions )  {^113^^^^^101^124^[REPLACE] else if  ( candidates instanceof Functions )  {^[METHOD] prepareCache [TYPE] void [PARAMETER] [CLASS] FunctionLibrary   [TYPE]  Set namespaces  [TYPE]  boolean false  true  [TYPE]  HashMap byNamespace  [TYPE]  Iterator it  [TYPE]  List allFunctions  list  lst  [TYPE]  Functions funcs  [TYPE]  Object candidates  [TYPE]  String ns  [TYPE]  int count  i 
[ADD]^^114^115^^^^101^124^[ADD] List lst = new ArrayList (  ) ; lst.add ( candidates ) ;^[METHOD] prepareCache [TYPE] void [PARAMETER] [CLASS] FunctionLibrary   [TYPE]  Set namespaces  [TYPE]  boolean false  true  [TYPE]  HashMap byNamespace  [TYPE]  Iterator it  [TYPE]  List allFunctions  list  lst  [TYPE]  Functions funcs  [TYPE]  Object candidates  [TYPE]  String ns  [TYPE]  int count  i 
[REPLACE]^lst.add ( funcs ) ;^111^^^^^101^124^[REPLACE] byNamespace.put ( ns, funcs ) ;^[METHOD] prepareCache [TYPE] void [PARAMETER] [CLASS] FunctionLibrary   [TYPE]  Set namespaces  [TYPE]  boolean false  true  [TYPE]  HashMap byNamespace  [TYPE]  Iterator it  [TYPE]  List allFunctions  list  lst  [TYPE]  Functions funcs  [TYPE]  Object candidates  [TYPE]  String ns  [TYPE]  int count  i 
[ADD]^^113^114^115^116^117^101^124^[ADD] else if  ( candidates instanceof Functions )  { List lst = new ArrayList (  ) ; lst.add ( candidates ) ; lst.add ( funcs ) ; byNamespace.put ( ns, lst ) ;^[METHOD] prepareCache [TYPE] void [PARAMETER] [CLASS] FunctionLibrary   [TYPE]  Set namespaces  [TYPE]  boolean false  true  [TYPE]  HashMap byNamespace  [TYPE]  Iterator it  [TYPE]  List allFunctions  list  lst  [TYPE]  Functions funcs  [TYPE]  Object candidates  [TYPE]  String ns  [TYPE]  int count  i 
[REPLACE]^for  ( int i = 0; i < count; i++ )  {^107^^^^^101^124^[REPLACE] for  ( Iterator it = namespaces.iterator (  ) ; it.hasNext (  ) ; )  {^[METHOD] prepareCache [TYPE] void [PARAMETER] [CLASS] FunctionLibrary   [TYPE]  Set namespaces  [TYPE]  boolean false  true  [TYPE]  HashMap byNamespace  [TYPE]  Iterator it  [TYPE]  List allFunctions  list  lst  [TYPE]  Functions funcs  [TYPE]  Object candidates  [TYPE]  String ns  [TYPE]  int count  i 
[REMOVE]^if  ( candidates instanceof Functions )  {     List lst = new ArrayList (  ) ;     lst.add ( candidates ) ;     lst.add ( funcs ) ;     byNamespace.put ( ns, lst ) ; }else {      (  ( List )   ( candidates )  ) .add ( funcs ) ; }^110^^^^^101^124^[REMOVE] ^[METHOD] prepareCache [TYPE] void [PARAMETER] [CLASS] FunctionLibrary   [TYPE]  Set namespaces  [TYPE]  boolean false  true  [TYPE]  HashMap byNamespace  [TYPE]  Iterator it  [TYPE]  List allFunctions  list  lst  [TYPE]  Functions funcs  [TYPE]  Object candidates  [TYPE]  String ns  [TYPE]  int count  i 
[REPLACE]^String ns =  ( String )  it .hasNext (  )  ;^108^^^^^101^124^[REPLACE] String ns =  ( String )  it.next (  ) ;^[METHOD] prepareCache [TYPE] void [PARAMETER] [CLASS] FunctionLibrary   [TYPE]  Set namespaces  [TYPE]  boolean false  true  [TYPE]  HashMap byNamespace  [TYPE]  Iterator it  [TYPE]  List allFunctions  list  lst  [TYPE]  Functions funcs  [TYPE]  Object candidates  [TYPE]  String ns  [TYPE]  int count  i 
[ADD]^Object candidates = byNamespace.get ( ns ) ;^108^109^^^^101^124^[ADD] String ns =  ( String )  it.next (  ) ; Object candidates = byNamespace.get ( ns ) ;^[METHOD] prepareCache [TYPE] void [PARAMETER] [CLASS] FunctionLibrary   [TYPE]  Set namespaces  [TYPE]  boolean false  true  [TYPE]  HashMap byNamespace  [TYPE]  Iterator it  [TYPE]  List allFunctions  list  lst  [TYPE]  Functions funcs  [TYPE]  Object candidates  [TYPE]  String ns  [TYPE]  int count  i 
[REPLACE]^Object candidates = byNamespace.get ( namespace ) ;^109^^^^^101^124^[REPLACE] Object candidates = byNamespace.get ( ns ) ;^[METHOD] prepareCache [TYPE] void [PARAMETER] [CLASS] FunctionLibrary   [TYPE]  Set namespaces  [TYPE]  boolean false  true  [TYPE]  HashMap byNamespace  [TYPE]  Iterator it  [TYPE]  List allFunctions  list  lst  [TYPE]  Functions funcs  [TYPE]  Object candidates  [TYPE]  String ns  [TYPE]  int count  i 
[ADD]^^109^^^^^101^124^[ADD] Object candidates = byNamespace.get ( ns ) ;^[METHOD] prepareCache [TYPE] void [PARAMETER] [CLASS] FunctionLibrary   [TYPE]  Set namespaces  [TYPE]  boolean false  true  [TYPE]  HashMap byNamespace  [TYPE]  Iterator it  [TYPE]  List allFunctions  list  lst  [TYPE]  Functions funcs  [TYPE]  Object candidates  [TYPE]  String ns  [TYPE]  int count  i 
[REPLACE]^Functions funcs =  ( Functions )  allFunctions.size ( i ) ;^105^^^^^101^124^[REPLACE] Functions funcs =  ( Functions )  allFunctions.get ( i ) ;^[METHOD] prepareCache [TYPE] void [PARAMETER] [CLASS] FunctionLibrary   [TYPE]  Set namespaces  [TYPE]  boolean false  true  [TYPE]  HashMap byNamespace  [TYPE]  Iterator it  [TYPE]  List allFunctions  list  lst  [TYPE]  Functions funcs  [TYPE]  Object candidates  [TYPE]  String ns  [TYPE]  int count  i 
[REPLACE]^Object candidates = byNamespace.get ( namespace ) ;^106^^^^^101^124^[REPLACE] Set namespaces = funcs.getUsedNamespaces (  ) ;^[METHOD] prepareCache [TYPE] void [PARAMETER] [CLASS] FunctionLibrary   [TYPE]  Set namespaces  [TYPE]  boolean false  true  [TYPE]  HashMap byNamespace  [TYPE]  Iterator it  [TYPE]  List allFunctions  list  lst  [TYPE]  Functions funcs  [TYPE]  Object candidates  [TYPE]  String ns  [TYPE]  int count  i 
[ADD]^^106^^^^^101^124^[ADD] Set namespaces = funcs.getUsedNamespaces (  ) ;^[METHOD] prepareCache [TYPE] void [PARAMETER] [CLASS] FunctionLibrary   [TYPE]  Set namespaces  [TYPE]  boolean false  true  [TYPE]  HashMap byNamespace  [TYPE]  Iterator it  [TYPE]  List allFunctions  list  lst  [TYPE]  Functions funcs  [TYPE]  Object candidates  [TYPE]  String ns  [TYPE]  int count  i 
[REPLACE]^for  ( Iterator it = namespaces.iterator (  ) ; it.hasNext (  ) ; )  { String ns =  ( String )  it.next (  ) ;^107^^^^^101^124^[REPLACE] for  ( Iterator it = namespaces.iterator (  ) ; it.hasNext (  ) ; )  {^[METHOD] prepareCache [TYPE] void [PARAMETER] [CLASS] FunctionLibrary   [TYPE]  Set namespaces  [TYPE]  boolean false  true  [TYPE]  HashMap byNamespace  [TYPE]  Iterator it  [TYPE]  List allFunctions  list  lst  [TYPE]  Functions funcs  [TYPE]  Object candidates  [TYPE]  String ns  [TYPE]  int count  i 
[REPLACE]^String ns =  ( String )  it.hasNext (  ) ;^108^^^^^101^124^[REPLACE] String ns =  ( String )  it.next (  ) ;^[METHOD] prepareCache [TYPE] void [PARAMETER] [CLASS] FunctionLibrary   [TYPE]  Set namespaces  [TYPE]  boolean false  true  [TYPE]  HashMap byNamespace  [TYPE]  Iterator it  [TYPE]  List allFunctions  list  lst  [TYPE]  Functions funcs  [TYPE]  Object candidates  [TYPE]  String ns  [TYPE]  int count  i 
[ADD]^^108^^^^^101^124^[ADD] String ns =  ( String )  it.next (  ) ;^[METHOD] prepareCache [TYPE] void [PARAMETER] [CLASS] FunctionLibrary   [TYPE]  Set namespaces  [TYPE]  boolean false  true  [TYPE]  HashMap byNamespace  [TYPE]  Iterator it  [TYPE]  List allFunctions  list  lst  [TYPE]  Functions funcs  [TYPE]  Object candidates  [TYPE]  String ns  [TYPE]  int count  i 
[ADD]^^111^^^^^101^124^[ADD] byNamespace.put ( ns, funcs ) ;^[METHOD] prepareCache [TYPE] void [PARAMETER] [CLASS] FunctionLibrary   [TYPE]  Set namespaces  [TYPE]  boolean false  true  [TYPE]  HashMap byNamespace  [TYPE]  Iterator it  [TYPE]  List allFunctions  list  lst  [TYPE]  Functions funcs  [TYPE]  Object candidates  [TYPE]  String ns  [TYPE]  int count  i 
[REPLACE]^for  ( int i = 0L; i < count; i++ )  {^104^^^^^101^124^[REPLACE] for  ( int i = 0; i < count; i++ )  {^[METHOD] prepareCache [TYPE] void [PARAMETER] [CLASS] FunctionLibrary   [TYPE]  Set namespaces  [TYPE]  boolean false  true  [TYPE]  HashMap byNamespace  [TYPE]  Iterator it  [TYPE]  List allFunctions  list  lst  [TYPE]  Functions funcs  [TYPE]  Object candidates  [TYPE]  String ns  [TYPE]  int count  i 
