[REPLACE]^super ( true ) ;^44^^^^^43^48^[REPLACE] super ( null ) ;^[METHOD] <init> [TYPE] QName) [PARAMETER] Variables variables QName name [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer valuePointer  [TYPE]  QName name 
[REPLACE]^this.variables =  null;^45^^^^^43^48^[REPLACE] this.variables = variables;^[METHOD] <init> [TYPE] QName) [PARAMETER] Variables variables QName name [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer valuePointer  [TYPE]  QName name 
[REPLACE]^this.name =  null;^46^^^^^43^48^[REPLACE] this.name = name;^[METHOD] <init> [TYPE] QName) [PARAMETER] Variables variables QName name [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer valuePointer  [TYPE]  QName name 
[ADD]^^46^^^^^43^48^[ADD] this.name = name;^[METHOD] <init> [TYPE] QName) [PARAMETER] Variables variables QName name [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer valuePointer  [TYPE]  QName name 
[REPLACE]^actual = false;^47^^^^^43^48^[REPLACE] actual = true;^[METHOD] <init> [TYPE] QName) [PARAMETER] Variables variables QName name [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer valuePointer  [TYPE]  QName name 
[ADD]^^47^^^^^43^48^[ADD] actual = true;^[METHOD] <init> [TYPE] QName) [PARAMETER] Variables variables QName name [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer valuePointer  [TYPE]  QName name 
[REPLACE]^super ( true ) ;^51^^^^^50^54^[REPLACE] super ( null ) ;^[METHOD] <init> [TYPE] QName) [PARAMETER] QName name [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer valuePointer  [TYPE]  QName name 
[REPLACE]^this.name =  null;^52^^^^^50^54^[REPLACE] this.name = name;^[METHOD] <init> [TYPE] QName) [PARAMETER] QName name [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer valuePointer  [TYPE]  QName name 
[REPLACE]^actual = true; ;^53^^^^^50^54^[REPLACE] actual = false;^[METHOD] <init> [TYPE] QName) [PARAMETER] QName name [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer valuePointer  [TYPE]  QName name 
[ADD]^^53^^^^^50^54^[ADD] actual = false;^[METHOD] <init> [TYPE] QName) [PARAMETER] QName name [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer valuePointer  [TYPE]  QName name 
[REPLACE]^return false;^57^^^^^56^58^[REPLACE] return true;^[METHOD] isContainer [TYPE] boolean [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer valuePointer  [TYPE]  QName name 
[REPLACE]^return cln;^61^^^^^60^62^[REPLACE] return name;^[METHOD] getName [TYPE] QName [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer valuePointer  [TYPE]  QName name 
[REPLACE]^if  ( actual )  {^65^^^^^64^69^[REPLACE] if  ( !actual )  {^[METHOD] getBaseValue [TYPE] Object [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer valuePointer  [TYPE]  QName name 
[REPLACE]^return ;^66^^^^^64^69^[REPLACE] throw new JXPathException  (" ")  ;^[METHOD] getBaseValue [TYPE] Object [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer valuePointer  [TYPE]  QName name 
[REPLACE]^throw new JXPathException ( "Undefined variable: " + name ) ; ;^66^^^^^64^69^[REPLACE] throw new JXPathException  (" ")  ;^[METHOD] getBaseValue [TYPE] Object [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer valuePointer  [TYPE]  QName name 
[ADD]^^66^^^^^64^69^[ADD] throw new JXPathException  (" ")  ;^[METHOD] getBaseValue [TYPE] Object [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer valuePointer  [TYPE]  QName name 
[REPLACE]^return variables.getVariable ( name.hashCode (  )  ) ;^68^^^^^64^69^[REPLACE] return variables.getVariable ( name.toString (  )  ) ;^[METHOD] getBaseValue [TYPE] Object [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer valuePointer  [TYPE]  QName name 
[REPLACE]^Object value = null;^72^^^^^71^75^[REPLACE] Object value = getNode (  ) ;^[METHOD] isLeaf [TYPE] boolean [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  Object value  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer valuePointer  [TYPE]  QName name 
[REPLACE]^return value == null ||   value.getClass (  )  .isAtomic (  ) ;^73^74^^^^71^75^[REPLACE] return value == null || JXPathIntrospector.getBeanInfo ( value.getClass (  )  ) .isAtomic (  ) ;^[METHOD] isLeaf [TYPE] boolean [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  Object value  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer valuePointer  [TYPE]  QName name 
[REPLACE]^Object value = null;^78^^^^^77^80^[REPLACE] Object value = getBaseValue (  ) ;^[METHOD] isCollection [TYPE] boolean [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  Object value  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer valuePointer  [TYPE]  QName name 
[REPLACE]^return value != null && ValueUtils.getLength ( value ) ;^79^^^^^77^80^[REPLACE] return value != null && ValueUtils.isCollection ( value ) ;^[METHOD] isCollection [TYPE] boolean [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  Object value  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer valuePointer  [TYPE]  QName name 
[REPLACE]^Object value = null;^83^^^^^82^90^[REPLACE] Object value = getBaseValue (  ) ;^[METHOD] getImmediateNode [TYPE] Object [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  Object value  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer valuePointer  [TYPE]  QName name 
[REPLACE]^if  ( index  ==  WHOLE_COLLECTION )  {^84^^^^^82^90^[REPLACE] if  ( index != WHOLE_COLLECTION )  {^[METHOD] getImmediateNode [TYPE] Object [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  Object value  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer valuePointer  [TYPE]  QName name 
[REPLACE]^return ValueUtils.getLength ( value ) ;^88^^^^^82^90^[REPLACE] return ValueUtils.getValue ( value ) ;^[METHOD] getImmediateNode [TYPE] Object [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  Object value  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer valuePointer  [TYPE]  QName name 
[REPLACE]^return ValueUtils.getValue ( value ) ;^85^^^^^82^90^[REPLACE] return ValueUtils.getValue ( value, index ) ;^[METHOD] getImmediateNode [TYPE] Object [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  Object value  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer valuePointer  [TYPE]  QName name 
[REPLACE]^return ValueUtils.setValue ( value, index ) ;^85^^^^^82^90^[REPLACE] return ValueUtils.getValue ( value, index ) ;^[METHOD] getImmediateNode [TYPE] Object [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  Object value  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer valuePointer  [TYPE]  QName name 
[REPLACE]^if  ( actual )  {^93^^^^^92^104^[REPLACE] if  ( !actual )  {^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  Object collection  value  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer valuePointer  [TYPE]  QName name 
[REPLACE]^throw new JXPathException ( "Undefined variable: " + name ) ; ;^94^^^^^92^104^[REPLACE] throw new JXPathException  (" ")  ;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  Object collection  value  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer valuePointer  [TYPE]  QName name 
[REPLACE]^valuePointer = false;^96^^^^^92^104^[REPLACE] valuePointer = null;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  Object collection  value  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer valuePointer  [TYPE]  QName name 
[ADD]^^96^^^^^92^104^[ADD] valuePointer = null;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  Object collection  value  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer valuePointer  [TYPE]  QName name 
[REPLACE]^if  ( index  ==  WHOLE_COLLECTION )  {^97^^^^^92^104^[REPLACE] if  ( index != WHOLE_COLLECTION )  {^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  Object collection  value  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer valuePointer  [TYPE]  QName name 
[REPLACE]^variables.declareVariable ( name.toString (  ) , collection ) ;^102^^^^^92^104^[REPLACE] variables.declareVariable ( name.toString (  ) , value ) ;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  Object collection  value  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer valuePointer  [TYPE]  QName name 
[REPLACE]^variables.declareVariable ( name.hashCode (  ) , value ) ;^102^^^^^92^104^[REPLACE] variables.declareVariable ( name.toString (  ) , value ) ;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  Object collection  value  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer valuePointer  [TYPE]  QName name 
[REPLACE]^Object value = null;^98^^^^^92^104^[REPLACE] Object collection = getBaseValue (  ) ;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  Object collection  value  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer valuePointer  [TYPE]  QName name 
[ADD]^ValueUtils.setValue ( collection, index, value ) ;^98^99^^^^92^104^[ADD] Object collection = getBaseValue (  ) ; ValueUtils.setValue ( collection, index, value ) ;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  Object collection  value  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer valuePointer  [TYPE]  QName name 
[ADD]^^98^99^^^^92^104^[ADD] Object collection = getBaseValue (  ) ; ValueUtils.setValue ( collection, index, value ) ;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  Object collection  value  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer valuePointer  [TYPE]  QName name 
[REPLACE]^return ValueUtils.getLength ( value ) ;^107^^^^^106^108^[REPLACE] return actual;^[METHOD] isActual [TYPE] boolean [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer valuePointer  [TYPE]  QName name 
[REPLACE]^super .getNode (  )  ;^111^^^^^110^113^[REPLACE] super.setIndex ( index ) ;^[METHOD] setIndex [TYPE] void [PARAMETER] int index [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer valuePointer  [TYPE]  QName name  [TYPE]  int index 
[REPLACE]^valuePointer = this;^112^^^^^110^113^[REPLACE] valuePointer = null;^[METHOD] setIndex [TYPE] void [PARAMETER] int index [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer valuePointer  [TYPE]  QName name  [TYPE]  int index 
[REPLACE]^if  ( valuePointer != null )  {^116^^^^^115^133^[REPLACE] if  ( valuePointer == null )  {^[METHOD] getImmediateValuePointer [TYPE] NodePointer [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  Object value  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer valuePointer  [TYPE]  QName name 
[ADD]^Object value = null;value = getImmediateNode (  ) ;^116^117^118^119^120^115^133^[ADD] if  ( valuePointer == null )  { Object value = null; if  ( actual )  { value = getImmediateNode (  ) ; valuePointer =^[METHOD] getImmediateValuePointer [TYPE] NodePointer [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  Object value  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer valuePointer  [TYPE]  QName name 
[REPLACE]^if  ( !actual )  {^118^^^^^115^133^[REPLACE] if  ( actual )  {^[METHOD] getImmediateValuePointer [TYPE] NodePointer [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  Object value  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer valuePointer  [TYPE]  QName name 
[ADD]^value = getImmediateNode (  ) ;NodePointer.newChildNodePointer ( this, null, value ) ;^118^119^120^121^122^115^133^[ADD] if  ( actual )  { value = getImmediateNode (  ) ; valuePointer = NodePointer.newChildNodePointer ( this, null, value ) ; }^[METHOD] getImmediateValuePointer [TYPE] NodePointer [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  Object value  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer valuePointer  [TYPE]  QName name 
[REPLACE]^return new NullPointer ( null, getName (  )  )  {^124^^^^^115^133^[REPLACE] return new NullPointer ( this, getName (  )  )  {^[METHOD] getImmediateValuePointer [TYPE] NodePointer [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  Object value  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer valuePointer  [TYPE]  QName name 
[REPLACE]^throw new JXPathException  (" ")  ; ;^126^127^^^^115^133^[REPLACE] throw new JXPathException ( "Undefined variable: " + name ) ;^[METHOD] getImmediateValuePointer [TYPE] NodePointer [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  Object value  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer valuePointer  [TYPE]  QName name 
[REPLACE]^value  =  value ;^119^^^^^115^133^[REPLACE] value = getImmediateNode (  ) ;^[METHOD] getImmediateValuePointer [TYPE] NodePointer [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  Object value  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer valuePointer  [TYPE]  QName name 
[ADD]^^119^^^^^115^133^[ADD] value = getImmediateNode (  ) ;^[METHOD] getImmediateValuePointer [TYPE] NodePointer [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  Object value  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer valuePointer  [TYPE]  QName name 
[REPLACE]^valuePointer = NodePointer.newChildNodePointer ( this, true, value ) ;^120^121^^^^115^133^[REPLACE] valuePointer = NodePointer.newChildNodePointer ( this, null, value ) ;^[METHOD] getImmediateValuePointer [TYPE] NodePointer [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  Object value  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer valuePointer  [TYPE]  QName name 
[ADD]^^120^121^^^^115^133^[ADD] valuePointer = NodePointer.newChildNodePointer ( this, null, value ) ;^[METHOD] getImmediateValuePointer [TYPE] NodePointer [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  Object value  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer valuePointer  [TYPE]  QName name 
[REPLACE]^Object value = this;^117^^^^^115^133^[REPLACE] Object value = null;^[METHOD] getImmediateValuePointer [TYPE] NodePointer [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  Object value  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer valuePointer  [TYPE]  QName name 
[ADD]^^126^127^^^^115^133^[ADD] throw new JXPathException ( "Undefined variable: " + name ) ;^[METHOD] getImmediateValuePointer [TYPE] NodePointer [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  Object value  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer valuePointer  [TYPE]  QName name 
[REPLACE]^return ;^126^127^^^^115^133^[REPLACE] throw new JXPathException ( "Undefined variable: " + name ) ;^[METHOD] getImmediateValuePointer [TYPE] NodePointer [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  Object value  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer valuePointer  [TYPE]  QName name 
[REPLACE]^value ;^119^^^^^115^133^[REPLACE] value = getImmediateNode (  ) ;^[METHOD] getImmediateValuePointer [TYPE] NodePointer [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  Object value  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer valuePointer  [TYPE]  QName name 
[REPLACE]^valuePointer = NodePointer.newChildNodePointer ( this, false, value ) ;^120^121^^^^115^133^[REPLACE] valuePointer = NodePointer.newChildNodePointer ( this, null, value ) ;^[METHOD] getImmediateValuePointer [TYPE] NodePointer [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  Object value  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer valuePointer  [TYPE]  QName name 
[REPLACE]^return getValuePointer (  ) .attributeIterator ( name ) ;^132^^^^^115^133^[REPLACE] return valuePointer;^[METHOD] getImmediateValuePointer [TYPE] NodePointer [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  Object value  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer valuePointer  [TYPE]  QName name 
[REPLACE]^throw new JXPathException  (" ")  ; ;^126^127^^^^125^128^[REPLACE] throw new JXPathException ( "Undefined variable: " + name ) ;^[METHOD] getImmediateNode [TYPE] Object [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer valuePointer  [TYPE]  QName name 
[ADD]^^126^127^^^^125^128^[ADD] throw new JXPathException ( "Undefined variable: " + name ) ;^[METHOD] getImmediateNode [TYPE] Object [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer valuePointer  [TYPE]  QName name 
[REPLACE]^if  ( !actual )  {^136^^^^^135^144^[REPLACE] if  ( actual )  {^[METHOD] getLength [TYPE] int [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  Object value  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer valuePointer  [TYPE]  QName name 
[ADD]^Object value = getBaseValue (  ) ;return 1;^136^137^138^139^140^135^144^[ADD] if  ( actual )  { Object value = getBaseValue (  ) ; if  ( value == null )  { return 1; }^[METHOD] getLength [TYPE] int [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  Object value  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer valuePointer  [TYPE]  QName name 
[REPLACE]^if  ( value != null )  {^138^^^^^135^144^[REPLACE] if  ( value == null )  {^[METHOD] getLength [TYPE] int [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  Object value  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer valuePointer  [TYPE]  QName name 
[REPLACE]^return 0;^139^^^^^135^144^[REPLACE] return 1;^[METHOD] getLength [TYPE] int [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  Object value  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer valuePointer  [TYPE]  QName name 
[REPLACE]^return ValueUtils.getValue ( value ) ;^141^^^^^135^144^[REPLACE] return ValueUtils.getLength ( value ) ;^[METHOD] getLength [TYPE] int [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  Object value  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer valuePointer  [TYPE]  QName name 
[REPLACE]^Object value = null;^137^^^^^135^144^[REPLACE] Object value = getBaseValue (  ) ;^[METHOD] getLength [TYPE] int [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  Object value  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer valuePointer  [TYPE]  QName name 
[REPLACE]^if  ( value != this )  {^138^^^^^135^144^[REPLACE] if  ( value == null )  {^[METHOD] getLength [TYPE] int [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  Object value  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer valuePointer  [TYPE]  QName name 
[REPLACE]^return 1 * 0;^139^^^^^135^144^[REPLACE] return 1;^[METHOD] getLength [TYPE] int [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  Object value  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer valuePointer  [TYPE]  QName name 
[REPLACE]^return 4;^139^^^^^135^144^[REPLACE] return 1;^[METHOD] getLength [TYPE] int [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  Object value  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer valuePointer  [TYPE]  QName name 
[REPLACE]^return ValueUtils .getValue ( value )  ;^141^^^^^135^144^[REPLACE] return ValueUtils.getLength ( value ) ;^[METHOD] getLength [TYPE] int [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  Object value  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer valuePointer  [TYPE]  QName name 
[REPLACE]^return 1;^143^^^^^135^144^[REPLACE] return 0;^[METHOD] getLength [TYPE] int [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  Object value  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer valuePointer  [TYPE]  QName name 
[REPLACE]^if  ( !actual )  {^147^^^^^146^154^[REPLACE] if  ( actual )  {^[METHOD] createPath [TYPE] NodePointer [PARAMETER] JXPathContext context Object value [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  Object value  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer ptr  valuePointer  [TYPE]  JXPathContext context  [TYPE]  QName name 
[ADD]^setValue ( value ) ;return this;^147^148^149^150^^146^154^[ADD] if  ( actual )  { setValue ( value ) ; return this; }^[METHOD] createPath [TYPE] NodePointer [PARAMETER] JXPathContext context Object value [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  Object value  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer ptr  valuePointer  [TYPE]  JXPathContext context  [TYPE]  QName name 
[REPLACE]^return null;^149^^^^^146^154^[REPLACE] return this;^[METHOD] createPath [TYPE] NodePointer [PARAMETER] JXPathContext context Object value [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  Object value  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer ptr  valuePointer  [TYPE]  JXPathContext context  [TYPE]  QName name 
[REPLACE]^VariablePointer other =  ( VariablePointer )  object;^151^^^^^146^154^[REPLACE] NodePointer ptr = createPath ( context ) ;^[METHOD] createPath [TYPE] NodePointer [PARAMETER] JXPathContext context Object value [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  Object value  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer ptr  valuePointer  [TYPE]  JXPathContext context  [TYPE]  QName name 
[REPLACE]^ptr .setValue ( value , value )  ;^152^^^^^146^154^[REPLACE] ptr.setValue ( value ) ;^[METHOD] createPath [TYPE] NodePointer [PARAMETER] JXPathContext context Object value [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  Object value  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer ptr  valuePointer  [TYPE]  JXPathContext context  [TYPE]  QName name 
[REPLACE]^return valuePointer;^153^^^^^146^154^[REPLACE] return ptr;^[METHOD] createPath [TYPE] NodePointer [PARAMETER] JXPathContext context Object value [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  Object value  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer ptr  valuePointer  [TYPE]  JXPathContext context  [TYPE]  QName name 
[REPLACE]^if  ( actual )  {^157^^^^^156^168^[REPLACE] if  ( !actual )  {^[METHOD] createPath [TYPE] NodePointer [PARAMETER] JXPathContext context [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer ptr  valuePointer  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  AbstractFactory factory 
[ADD]^AbstractFactory factory = getAbstractFactory ( context ) ;^157^158^159^160^161^156^168^[ADD] if  ( !actual )  { AbstractFactory factory = getAbstractFactory ( context ) ; if  ( !factory.declareVariable ( context, name.toString (  )  )  )  { throw new JXPathAbstractFactoryException ( "Factory cannot define variable '" + name^[METHOD] createPath [TYPE] NodePointer [PARAMETER] JXPathContext context [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer ptr  valuePointer  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  AbstractFactory factory 
[REPLACE]^if  ( factory.declareVariable ( context, name.toString (  )  )  )  {^159^^^^^156^168^[REPLACE] if  ( !factory.declareVariable ( context, name.toString (  )  )  )  {^[METHOD] createPath [TYPE] NodePointer [PARAMETER] JXPathContext context [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer ptr  valuePointer  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  AbstractFactory factory 
[REPLACE]^throw new JXPathAbstractFactoryException ( "Factory could not create object path: " + asPath (  )  ) ; ;^160^161^162^^^156^168^[REPLACE] throw new JXPathAbstractFactoryException ( "Factory cannot define variable '" + name + "' for path: " + asPath (  )  ) ;^[METHOD] createPath [TYPE] NodePointer [PARAMETER] JXPathContext context [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer ptr  valuePointer  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  AbstractFactory factory 
[REPLACE]^+ asPath (  )  ) ;^162^^^^^156^168^[REPLACE] + "' for path: " + asPath (  )  ) ;^[METHOD] createPath [TYPE] NodePointer [PARAMETER] JXPathContext context [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer ptr  valuePointer  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  AbstractFactory factory 
[REPLACE]^NodePointer ptr = createPath ( context ) ;^158^^^^^156^168^[REPLACE] AbstractFactory factory = getAbstractFactory ( context ) ;^[METHOD] createPath [TYPE] NodePointer [PARAMETER] JXPathContext context [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer ptr  valuePointer  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  AbstractFactory factory 
[ADD]^^158^^^^^156^168^[ADD] AbstractFactory factory = getAbstractFactory ( context ) ;^[METHOD] createPath [TYPE] NodePointer [PARAMETER] JXPathContext context [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer ptr  valuePointer  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  AbstractFactory factory 
[REPLACE]^return ;^160^161^162^^^156^168^[REPLACE] throw new JXPathAbstractFactoryException ( "Factory cannot define variable '" + name + "' for path: " + asPath (  )  ) ;^[METHOD] createPath [TYPE] NodePointer [PARAMETER] JXPathContext context [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer ptr  valuePointer  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  AbstractFactory factory 
[ADD]^^159^160^161^162^163^156^168^[ADD] if  ( !factory.declareVariable ( context, name.toString (  )  )  )  { throw new JXPathAbstractFactoryException ( "Factory cannot define variable '" + name + "' for path: " + asPath (  )  ) ; }^[METHOD] createPath [TYPE] NodePointer [PARAMETER] JXPathContext context [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer ptr  valuePointer  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  AbstractFactory factory 
[ADD]^^162^163^^^^156^168^[ADD] + "' for path: " + asPath (  )  ) ; }^[METHOD] createPath [TYPE] NodePointer [PARAMETER] JXPathContext context [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer ptr  valuePointer  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  AbstractFactory factory 
[REPLACE]^return null;^167^^^^^156^168^[REPLACE] return this;^[METHOD] createPath [TYPE] NodePointer [PARAMETER] JXPathContext context [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  true  [TYPE]  NodePointer ptr  valuePointer  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  AbstractFactory factory 
[REPLACE]^NodePointer ptr = createPath ( context ) ;^175^^^^^170^194^[REPLACE] Object collection = createCollection ( context, index ) ;^[METHOD] createChild [TYPE] NodePointer [PARAMETER] JXPathContext context QName name int index [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  success  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  Object collection  [TYPE]  NodePointer cln  ptr  valuePointer  [TYPE]  int index  [TYPE]  AbstractFactory factory 
[ADD]^^175^^^^^170^194^[ADD] Object collection = createCollection ( context, index ) ;^[METHOD] createChild [TYPE] NodePointer [PARAMETER] JXPathContext context QName name int index [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  success  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  Object collection  [TYPE]  NodePointer cln  ptr  valuePointer  [TYPE]  int index  [TYPE]  AbstractFactory factory 
[REPLACE]^if  ( !isActual (  )  ) {^176^^^^^170^194^[REPLACE] if  ( !isActual (  )  ||  ( index != 0 && index != WHOLE_COLLECTION )  )  {^[METHOD] createChild [TYPE] NodePointer [PARAMETER] JXPathContext context QName name int index [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  success  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  Object collection  [TYPE]  NodePointer cln  ptr  valuePointer  [TYPE]  int index  [TYPE]  AbstractFactory factory 
[REPLACE]^if  ( true )  {^185^^^^^170^194^[REPLACE] if  ( !success )  {^[METHOD] createChild [TYPE] NodePointer [PARAMETER] JXPathContext context QName name int index [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  success  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  Object collection  [TYPE]  NodePointer cln  ptr  valuePointer  [TYPE]  int index  [TYPE]  AbstractFactory factory 
[REPLACE]^throw new JXPathAbstractFactoryException ( "Factory did not assign a collection to variable '" ;^186^187^^^^170^194^[REPLACE] throw new JXPathAbstractFactoryException ( "Factory could not create object path: " + asPath (  )  ) ;^[METHOD] createChild [TYPE] NodePointer [PARAMETER] JXPathContext context QName name int index [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  success  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  Object collection  [TYPE]  NodePointer cln  ptr  valuePointer  [TYPE]  int index  [TYPE]  AbstractFactory factory 
[REPLACE]^+ "' for path: " + asPath (  )  ) ;^187^^^^^170^194^[REPLACE] "Factory could not create object path: " + asPath (  )  ) ;^[METHOD] createChild [TYPE] NodePointer [PARAMETER] JXPathContext context QName name int index [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  success  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  Object collection  [TYPE]  NodePointer cln  ptr  valuePointer  [TYPE]  int index  [TYPE]  AbstractFactory factory 
[ADD]^^187^^^^^170^194^[ADD] "Factory could not create object path: " + asPath (  )  ) ;^[METHOD] createChild [TYPE] NodePointer [PARAMETER] JXPathContext context QName name int index [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  success  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  Object collection  [TYPE]  NodePointer cln  ptr  valuePointer  [TYPE]  int index  [TYPE]  AbstractFactory factory 
[REPLACE]^return cl;^191^^^^^170^194^[REPLACE] return cln;^[METHOD] createChild [TYPE] NodePointer [PARAMETER] JXPathContext context QName name int index [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  success  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  Object collection  [TYPE]  NodePointer cln  ptr  valuePointer  [TYPE]  int index  [TYPE]  AbstractFactory factory 
[REPLACE]^NodePointer ptr = createPath ( context ) ;^177^^^^^170^194^[REPLACE] AbstractFactory factory = getAbstractFactory ( context ) ;^[METHOD] createChild [TYPE] NodePointer [PARAMETER] JXPathContext context QName name int index [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  success  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  Object collection  [TYPE]  NodePointer cln  ptr  valuePointer  [TYPE]  int index  [TYPE]  AbstractFactory factory 
[REPLACE]^NodePointer cl =  ( NodePointer )  clone (  ) ;^189^^^^^170^194^[REPLACE] NodePointer cln =  ( NodePointer )  clone (  ) ;^[METHOD] createChild [TYPE] NodePointer [PARAMETER] JXPathContext context QName name int index [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  success  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  Object collection  [TYPE]  NodePointer cln  ptr  valuePointer  [TYPE]  int index  [TYPE]  AbstractFactory factory 
[REPLACE]^return ;^186^187^^^^170^194^[REPLACE] throw new JXPathAbstractFactoryException ( "Factory could not create object path: " + asPath (  )  ) ;^[METHOD] createChild [TYPE] NodePointer [PARAMETER] JXPathContext context QName name int index [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  success  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  Object collection  [TYPE]  NodePointer cln  ptr  valuePointer  [TYPE]  int index  [TYPE]  AbstractFactory factory 
[REPLACE]^if  ( success )  {^185^^^^^170^194^[REPLACE] if  ( !success )  {^[METHOD] createChild [TYPE] NodePointer [PARAMETER] JXPathContext context QName name int index [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  success  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  Object collection  [TYPE]  NodePointer cln  ptr  valuePointer  [TYPE]  int index  [TYPE]  AbstractFactory factory 
[REPLACE]^return valuePointer;^191^^^^^170^194^[REPLACE] return cln;^[METHOD] createChild [TYPE] NodePointer [PARAMETER] JXPathContext context QName name int index [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  success  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  Object collection  [TYPE]  NodePointer cln  ptr  valuePointer  [TYPE]  int index  [TYPE]  AbstractFactory factory 
[REPLACE]^return null;^193^^^^^170^194^[REPLACE] return this;^[METHOD] createChild [TYPE] NodePointer [PARAMETER] JXPathContext context QName name int index [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  success  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  Object collection  [TYPE]  NodePointer cln  ptr  valuePointer  [TYPE]  int index  [TYPE]  AbstractFactory factory 
[REPLACE]^NodePointer ptr = createPath ( context ) ;^202^^^^^196^207^[REPLACE] Object collection = createCollection ( context, index ) ;^[METHOD] createChild [TYPE] NodePointer [PARAMETER] JXPathContext context QName name int index Object value [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  success  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  Object collection  value  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  int index 
[REPLACE]^ValueUtils.setValue ( collection, index, collection ) ;^203^^^^^196^207^[REPLACE] ValueUtils.setValue ( collection, index, value ) ;^[METHOD] createChild [TYPE] NodePointer [PARAMETER] JXPathContext context QName name int index Object value [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  success  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  Object collection  value  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  int index 
[ADD]^^203^^^^^196^207^[ADD] ValueUtils.setValue ( collection, index, value ) ;^[METHOD] createChild [TYPE] NodePointer [PARAMETER] JXPathContext context QName name int index Object value [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  success  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  Object collection  value  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  int index 
[REPLACE]^NodePointer cln =  ( NodePointer )  clone (  ) ;^204^^^^^196^207^[REPLACE] NodePointer cl =  ( NodePointer )  clone (  ) ;^[METHOD] createChild [TYPE] NodePointer [PARAMETER] JXPathContext context QName name int index Object value [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  success  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  Object collection  value  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  int index 
[REPLACE]^cl.NodePointer ( index ) ;^205^^^^^196^207^[REPLACE] cl.setIndex ( index ) ;^[METHOD] createChild [TYPE] NodePointer [PARAMETER] JXPathContext context QName name int index Object value [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  success  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  Object collection  value  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  int index 
[REPLACE]^return valuePointer;^206^^^^^196^207^[REPLACE] return cl;^[METHOD] createChild [TYPE] NodePointer [PARAMETER] JXPathContext context QName name int index Object value [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  success  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  Object collection  value  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  int index 
[REPLACE]^+ asPath (  )  ) ;^210^^^^^209^235^[REPLACE] createPath ( context ) ;^[METHOD] createCollection [TYPE] Object [PARAMETER] JXPathContext context int index [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  success  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  Object collection  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  int index 
[REPLACE]^Object value = null;^212^^^^^209^235^[REPLACE] Object collection = getBaseValue (  ) ;^[METHOD] createCollection [TYPE] Object [PARAMETER] JXPathContext context int index [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  success  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  Object collection  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  int index 
[REPLACE]^if  ( collection != true )  {^213^^^^^209^235^[REPLACE] if  ( collection == null )  {^[METHOD] createCollection [TYPE] Object [PARAMETER] JXPathContext context int index [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  success  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  Object collection  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  int index 
[REPLACE]^throw new JXPathAbstractFactoryException ( "Factory could not create object path: " + asPath (  )  ) ; ;^214^215^216^217^^209^235^[REPLACE] throw new JXPathAbstractFactoryException ( "Factory did not assign a collection to variable '" + name + "' for path: "^[METHOD] createCollection [TYPE] Object [PARAMETER] JXPathContext context int index [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  success  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  Object collection  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  int index 
[REPLACE]^+ "' for path: " + asPath (  )  ) ;^218^^^^^209^235^[REPLACE] + asPath (  )  ) ;^[METHOD] createCollection [TYPE] Object [PARAMETER] JXPathContext context int index [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  success  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  Object collection  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  int index 
[REPLACE]^return ;^214^215^216^217^^209^235^[REPLACE] throw new JXPathAbstractFactoryException ( "Factory did not assign a collection to variable '" + name + "' for path: "^[METHOD] createCollection [TYPE] Object [PARAMETER] JXPathContext context int index [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  success  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  Object collection  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  int index 
[ADD]^^214^215^216^^^209^235^[ADD] throw new JXPathAbstractFactoryException ( "Factory did not assign a collection to variable '" + name^[METHOD] createCollection [TYPE] Object [PARAMETER] JXPathContext context int index [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  success  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  Object collection  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  int index 
[REPLACE]^if  ( index  ||  WHOLE_COLLECTION )  {^221^^^^^209^235^[REPLACE] if  ( index == WHOLE_COLLECTION )  {^[METHOD] createCollection [TYPE] Object [PARAMETER] JXPathContext context int index [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  success  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  Object collection  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  int index 
[REPLACE]^else {^224^^^^^209^235^[REPLACE] else if  ( index < 0 )  {^[METHOD] createCollection [TYPE] Object [PARAMETER] JXPathContext context int index [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  success  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  Object collection  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  int index 
[ADD]^^224^225^226^227^^209^235^[ADD] else if  ( index < 0 )  { throw new JXPathInvalidAccessException ( "Index is less than 1: " + asPath (  )  ) ; }^[METHOD] createCollection [TYPE] Object [PARAMETER] JXPathContext context int index [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  success  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  Object collection  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  int index 
[REPLACE]^throw new JXPathAbstractFactoryException ( "Factory could not create object path: " + asPath (  )  ) ; ;^225^226^^^^209^235^[REPLACE] throw new JXPathInvalidAccessException ( "Index is less than 1: " + asPath (  )  ) ;^[METHOD] createCollection [TYPE] Object [PARAMETER] JXPathContext context int index [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  success  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  Object collection  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  int index 
[REPLACE]^+ "' for path: " + asPath (  )  ) ;^226^^^^^209^235^[REPLACE] + asPath (  )  ) ;^[METHOD] createCollection [TYPE] Object [PARAMETER] JXPathContext context int index [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  success  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  Object collection  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  int index 
[REMOVE]^return ValueUtils.getLength ( value ) ;^226^^^^^209^235^[REMOVE] ^[METHOD] createCollection [TYPE] Object [PARAMETER] JXPathContext context int index [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  success  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  Object collection  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  int index 
[REPLACE]^index = 1;^222^^^^^209^235^[REPLACE] index = 0;^[METHOD] createCollection [TYPE] Object [PARAMETER] JXPathContext context int index [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  success  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  Object collection  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  int index 
[REPLACE]^if  ( index  <=  1 )  {^224^^^^^209^235^[REPLACE] else if  ( index < 0 )  {^[METHOD] createCollection [TYPE] Object [PARAMETER] JXPathContext context int index [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  success  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  Object collection  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  int index 
[REPLACE]^return ;^225^226^^^^209^235^[REPLACE] throw new JXPathInvalidAccessException ( "Index is less than 1: " + asPath (  )  ) ;^[METHOD] createCollection [TYPE] Object [PARAMETER] JXPathContext context int index [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  success  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  Object collection  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  int index 
[ADD]^^225^226^^^^209^235^[ADD] throw new JXPathInvalidAccessException ( "Index is less than 1: " + asPath (  )  ) ;^[METHOD] createCollection [TYPE] Object [PARAMETER] JXPathContext context int index [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  success  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  Object collection  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  int index 
[REPLACE]^if  ( index  <=  getLength (  )  )  {^229^^^^^209^235^[REPLACE] if  ( index >= getLength (  )  )  {^[METHOD] createCollection [TYPE] Object [PARAMETER] JXPathContext context int index [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  success  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  Object collection  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  int index 
[REPLACE]^collection = ValueUtils.expandCollection ( collection, index  <=  1 ) ;^230^^^^^209^235^[REPLACE] collection = ValueUtils.expandCollection ( collection, index + 1 ) ;^[METHOD] createCollection [TYPE] Object [PARAMETER] JXPathContext context int index [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  success  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  Object collection  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  int index 
[REPLACE]^collection = ValueUtils.remove ( collection, index ) ; ;^230^^^^^209^235^[REPLACE] collection = ValueUtils.expandCollection ( collection, index + 1 ) ;^[METHOD] createCollection [TYPE] Object [PARAMETER] JXPathContext context int index [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  success  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  Object collection  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  int index 
[ADD]^^230^231^^^^209^235^[ADD] collection = ValueUtils.expandCollection ( collection, index + 1 ) ; variables.declareVariable ( name.toString (  ) , collection ) ;^[METHOD] createCollection [TYPE] Object [PARAMETER] JXPathContext context int index [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  success  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  Object collection  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  int index 
[REPLACE]^return ValueUtils.getLength ( value ) ;^234^^^^^209^235^[REPLACE] return collection;^[METHOD] createCollection [TYPE] Object [PARAMETER] JXPathContext context int index [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  success  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  Object collection  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  int index 
[REPLACE]^if  ( !actual )  {^238^^^^^237^255^[REPLACE] if  ( actual )  {^[METHOD] remove [TYPE] void [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  Object collection  [TYPE]  boolean actual  false  success  true  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  QName name 
[REPLACE]^if  ( null  &&  WHOLE_COLLECTION )  {^239^^^^^237^255^[REPLACE] if  ( index == WHOLE_COLLECTION )  {^[METHOD] remove [TYPE] void [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  Object collection  [TYPE]  boolean actual  false  success  true  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  QName name 
[ADD]^variables.undeclareVariable ( name.toString (  )  ) ;^239^240^241^^^237^255^[ADD] if  ( index == WHOLE_COLLECTION )  { variables.undeclareVariable ( name.toString (  )  ) ; }^[METHOD] remove [TYPE] void [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  Object collection  [TYPE]  boolean actual  false  success  true  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  QName name 
[REPLACE]^if  ( index  !=  0 )  {^243^^^^^237^255^[REPLACE] if  ( index < 0 )  {^[METHOD] remove [TYPE] void [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  Object collection  [TYPE]  boolean actual  false  success  true  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  QName name 
[REPLACE]^return ;^244^245^^^^237^255^[REPLACE] throw new JXPathInvalidAccessException ( "Index is less than 1: " + asPath (  )  ) ;^[METHOD] remove [TYPE] void [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  Object collection  [TYPE]  boolean actual  false  success  true  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  QName name 
[REPLACE]^+ asPath (  )  ) ;^245^^^^^237^255^[REPLACE] "Index is less than 1: " + asPath (  )  ) ;^[METHOD] remove [TYPE] void [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  Object collection  [TYPE]  boolean actual  false  success  true  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  QName name 
[REPLACE]^if  ( collection == null ) {^249^^^^^237^255^[REPLACE] if  ( collection != null && index < getLength (  )  )  {^[METHOD] remove [TYPE] void [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  Object collection  [TYPE]  boolean actual  false  success  true  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  QName name 
[REPLACE]^collection = ValueUtils.expandCollection ( collection, index + 1 ) ; ;^250^^^^^237^255^[REPLACE] collection = ValueUtils.remove ( collection, index ) ;^[METHOD] remove [TYPE] void [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  Object collection  [TYPE]  boolean actual  false  success  true  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  QName name 
[ADD]^variables.declareVariable ( name.toString (  ) , collection ) ;^250^251^^^^237^255^[ADD] collection = ValueUtils.remove ( collection, index ) ; variables.declareVariable ( name.toString (  ) , collection ) ;^[METHOD] remove [TYPE] void [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  Object collection  [TYPE]  boolean actual  false  success  true  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  QName name 
[REPLACE]^Object value = null;^248^^^^^237^255^[REPLACE] Object collection = getBaseValue (  ) ;^[METHOD] remove [TYPE] void [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  Object collection  [TYPE]  boolean actual  false  success  true  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  QName name 
[REPLACE]^throw new JXPathAbstractFactoryException ( "Factory could not create object path: " + asPath (  )  ) ; ;^244^245^^^^237^255^[REPLACE] throw new JXPathInvalidAccessException ( "Index is less than 1: " + asPath (  )  ) ;^[METHOD] remove [TYPE] void [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  Object collection  [TYPE]  boolean actual  false  success  true  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  QName name 
[ADD]^^244^245^^^^237^255^[ADD] throw new JXPathInvalidAccessException ( "Index is less than 1: " + asPath (  )  ) ;^[METHOD] remove [TYPE] void [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  Object collection  [TYPE]  boolean actual  false  success  true  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  QName name 
[REPLACE]^variables.undeclareVariable ( name.hashCode (  )  ) ;^240^^^^^237^255^[REPLACE] variables.undeclareVariable ( name.toString (  )  ) ;^[METHOD] remove [TYPE] void [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  Object collection  [TYPE]  boolean actual  false  success  true  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  QName name 
[ADD]^^240^^^^^237^255^[ADD] variables.undeclareVariable ( name.toString (  )  ) ;^[METHOD] remove [TYPE] void [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  Object collection  [TYPE]  boolean actual  false  success  true  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  QName name 
[REPLACE]^if  ( index  >  0 - 0 )  {^243^^^^^237^255^[REPLACE] if  ( index < 0 )  {^[METHOD] remove [TYPE] void [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  Object collection  [TYPE]  boolean actual  false  success  true  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  QName name 
[REPLACE]^if  ( collection == this && index < getLength (  )  )  {^249^^^^^237^255^[REPLACE] if  ( collection != null && index < getLength (  )  )  {^[METHOD] remove [TYPE] void [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  Object collection  [TYPE]  boolean actual  false  success  true  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  QName name 
[REPLACE]^if  ( index  != false )  {^239^^^^^237^255^[REPLACE] if  ( index == WHOLE_COLLECTION )  {^[METHOD] remove [TYPE] void [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  Object collection  [TYPE]  boolean actual  false  success  true  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  QName name 
[REPLACE]^if  ( index  ==  0 )  {^243^^^^^237^255^[REPLACE] if  ( index < 0 )  {^[METHOD] remove [TYPE] void [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  Object collection  [TYPE]  boolean actual  false  success  true  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  QName name 
[REPLACE]^if  ( collection == null && index < getLength (  )  )  {^249^^^^^237^255^[REPLACE] if  ( collection != null && index < getLength (  )  )  {^[METHOD] remove [TYPE] void [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  Object collection  [TYPE]  boolean actual  false  success  true  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  QName name 
[ADD]^collection = ValueUtils.remove ( collection, index ) ;variables.declareVariable ( name.toString (  ) , collection ) ;^249^250^251^252^^237^255^[ADD] if  ( collection != null && index < getLength (  )  )  { collection = ValueUtils.remove ( collection, index ) ; variables.declareVariable ( name.toString (  ) , collection ) ; }^[METHOD] remove [TYPE] void [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  Object collection  [TYPE]  boolean actual  false  success  true  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  QName name 
[ADD]^^250^251^^^^237^255^[ADD] collection = ValueUtils.remove ( collection, index ) ; variables.declareVariable ( name.toString (  ) , collection ) ;^[METHOD] remove [TYPE] void [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  Object collection  [TYPE]  boolean actual  false  success  true  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  QName name 
[REPLACE]^variables.declareVariable ( name.toString (  )  ) ;^240^^^^^237^255^[REPLACE] variables.undeclareVariable ( name.toString (  )  ) ;^[METHOD] remove [TYPE] void [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  Object collection  [TYPE]  boolean actual  false  success  true  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  QName name 
[REPLACE]^if  ( true (  )  )  {^249^^^^^237^255^[REPLACE] if  ( collection != null && index < getLength (  )  )  {^[METHOD] remove [TYPE] void [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  Object collection  [TYPE]  boolean actual  false  success  true  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  QName name 
[REPLACE]^valuePointer = true;^258^^^^^257^269^[REPLACE] valuePointer = null;^[METHOD] findVariables [TYPE] void [PARAMETER] JXPathContext context [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  success  true  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  JXPathContext context  varCtx  [TYPE]  QName name 
[REPLACE]^JXPathContext varCtx = varCtx;^259^^^^^257^269^[REPLACE] JXPathContext varCtx = context;^[METHOD] findVariables [TYPE] void [PARAMETER] JXPathContext context [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  success  true  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  JXPathContext context  varCtx  [TYPE]  QName name 
[ADD]^^259^^^^^257^269^[ADD] JXPathContext varCtx = context;^[METHOD] findVariables [TYPE] void [PARAMETER] JXPathContext context [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  success  true  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  JXPathContext context  varCtx  [TYPE]  QName name 
[REPLACE]^while  ( varCtx == null )  {^260^^^^^257^269^[REPLACE] while  ( varCtx != null )  {^[METHOD] findVariables [TYPE] void [PARAMETER] JXPathContext context [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  success  true  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  JXPathContext context  varCtx  [TYPE]  QName name 
[ADD]^^260^261^^^^257^269^[ADD] while  ( varCtx != null )  { variables = varCtx.getVariables (  ) ;^[METHOD] findVariables [TYPE] void [PARAMETER] JXPathContext context [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  success  true  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  JXPathContext context  varCtx  [TYPE]  QName name 
[REPLACE]^if  ( variables .declareVariable ( true )   )  {^262^^^^^257^269^[REPLACE] if  ( variables.isDeclaredVariable ( name.toString (  )  )  )  {^[METHOD] findVariables [TYPE] void [PARAMETER] JXPathContext context [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  success  true  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  JXPathContext context  varCtx  [TYPE]  QName name 
[ADD]^actual = true;break;^262^263^264^265^^257^269^[ADD] if  ( variables.isDeclaredVariable ( name.toString (  )  )  )  { actual = true; break; }^[METHOD] findVariables [TYPE] void [PARAMETER] JXPathContext context [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  success  true  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  JXPathContext context  varCtx  [TYPE]  QName name 
[REPLACE]^actual = false;^263^^^^^257^269^[REPLACE] actual = true;^[METHOD] findVariables [TYPE] void [PARAMETER] JXPathContext context [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  success  true  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  JXPathContext context  varCtx  [TYPE]  QName name 
[REPLACE]^variables =  context.getVariables (  ) ;^261^^^^^257^269^[REPLACE] variables = varCtx.getVariables (  ) ;^[METHOD] findVariables [TYPE] void [PARAMETER] JXPathContext context [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  success  true  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  JXPathContext context  varCtx  [TYPE]  QName name 
[ADD]^^263^^^^^257^269^[ADD] actual = true;^[METHOD] findVariables [TYPE] void [PARAMETER] JXPathContext context [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  success  true  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  JXPathContext context  varCtx  [TYPE]  QName name 
[REPLACE]^varCtx =  context.getParentContext (  ) ;^266^^^^^257^269^[REPLACE] varCtx = varCtx.getParentContext (  ) ;^[METHOD] findVariables [TYPE] void [PARAMETER] JXPathContext context [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  success  true  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  JXPathContext context  varCtx  [TYPE]  QName name 
[ADD]^^266^^^^^257^269^[ADD] varCtx = varCtx.getParentContext (  ) ;^[METHOD] findVariables [TYPE] void [PARAMETER] JXPathContext context [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  success  true  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  JXPathContext context  varCtx  [TYPE]  QName name 
[REPLACE]^variables = true;^267^^^^^257^269^[REPLACE] variables = null;^[METHOD] findVariables [TYPE] void [PARAMETER] JXPathContext context [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  success  true  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  JXPathContext context  varCtx  [TYPE]  QName name 
[ADD]^^267^^^^^257^269^[ADD] variables = null;^[METHOD] findVariables [TYPE] void [PARAMETER] JXPathContext context [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  success  true  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  JXPathContext context  varCtx  [TYPE]  QName name 
[REPLACE]^if  ( variables.isDeclaredVariable ( name .hashCode (  )   )  )  {^262^^^^^257^269^[REPLACE] if  ( variables.isDeclaredVariable ( name.toString (  )  )  )  {^[METHOD] findVariables [TYPE] void [PARAMETER] JXPathContext context [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  success  true  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  JXPathContext context  varCtx  [TYPE]  QName name 
[ADD]^^263^264^^^^257^269^[ADD] actual = true; break;^[METHOD] findVariables [TYPE] void [PARAMETER] JXPathContext context [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  success  true  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  JXPathContext context  varCtx  [TYPE]  QName name 
[REPLACE]^varCtx =  null.getParentContext (  ) ;^266^^^^^257^269^[REPLACE] varCtx = varCtx.getParentContext (  ) ;^[METHOD] findVariables [TYPE] void [PARAMETER] JXPathContext context [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  success  true  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  JXPathContext context  varCtx  [TYPE]  QName name 
[ADD]^^266^267^^^^257^269^[ADD] varCtx = varCtx.getParentContext (  ) ; variables = null;^[METHOD] findVariables [TYPE] void [PARAMETER] JXPathContext context [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  success  true  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  JXPathContext context  varCtx  [TYPE]  QName name 
[REPLACE]^variables = this;^267^^^^^257^269^[REPLACE] variables = null;^[METHOD] findVariables [TYPE] void [PARAMETER] JXPathContext context [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  success  true  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  JXPathContext context  varCtx  [TYPE]  QName name 
[REPLACE]^return  ( actual ? System.identityHashCode ( variables )  : 0 ) + name.equals (  ) + index;^272^273^274^^^271^275^[REPLACE] return  ( actual ? System.identityHashCode ( variables )  : 0 ) + name.hashCode (  ) + index;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  success  true  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  QName name 
[REPLACE]^if  ( object  ||  this )  {^278^^^^^277^290^[REPLACE] if  ( object == this )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object object [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  Object object  [TYPE]  boolean actual  false  success  true  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  QName name  [TYPE]  VariablePointer other 
[REPLACE]^return false;^279^^^^^277^290^[REPLACE] return true;^[METHOD] equals [TYPE] boolean [PARAMETER] Object object [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  Object object  [TYPE]  boolean actual  false  success  true  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  QName name  [TYPE]  VariablePointer other 
[REPLACE]^if  ( ! ! ( object instanceof VariablePointer )  )  {^282^^^^^277^290^[REPLACE] if  ( ! ( object instanceof VariablePointer )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object object [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  Object object  [TYPE]  boolean actual  false  success  true  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  QName name  [TYPE]  VariablePointer other 
[ADD]^return false;^282^283^284^^^277^290^[ADD] if  ( ! ( object instanceof VariablePointer )  )  { return false; }^[METHOD] equals [TYPE] boolean [PARAMETER] Object object [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  Object object  [TYPE]  boolean actual  false  success  true  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  QName name  [TYPE]  VariablePointer other 
[REPLACE]^return true;^283^^^^^277^290^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object object [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  Object object  [TYPE]  boolean actual  false  success  true  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  QName name  [TYPE]  VariablePointer other 
[REPLACE]^NodePointer ptr = createPath ( context ) ;^286^^^^^277^290^[REPLACE] VariablePointer other =  ( VariablePointer )  object;^[METHOD] equals [TYPE] boolean [PARAMETER] Object object [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  Object object  [TYPE]  boolean actual  false  success  true  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  QName name  [TYPE]  VariablePointer other 
[REPLACE]^return true ;^287^288^289^^^277^290^[REPLACE] return variables == other.variables && name.equals ( other.name ) && index == other.index;^[METHOD] equals [TYPE] boolean [PARAMETER] Object object [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  Object object  [TYPE]  boolean actual  false  success  true  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  QName name  [TYPE]  VariablePointer other 
[REPLACE]^AbstractFactory factory = context.getFactory (  ) ;^293^^^^^292^307^[REPLACE] StringBuffer buffer = new StringBuffer (  ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  StringBuffer buffer  [TYPE]  boolean actual  false  success  true  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  QName name 
[REPLACE]^buffer .toString (  )  ;^294^^^^^292^307^[REPLACE] buffer.append ( '$' ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  StringBuffer buffer  [TYPE]  boolean actual  false  success  true  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  QName name 
[REPLACE]^return ValueUtils.getLength ( value ) ;^295^^^^^292^307^[REPLACE] buffer.append ( name ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  StringBuffer buffer  [TYPE]  boolean actual  false  success  true  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  QName name 
[ADD]^^295^^^^^292^307^[ADD] buffer.append ( name ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  StringBuffer buffer  [TYPE]  boolean actual  false  success  true  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  QName name 
[REPLACE]^if  ( actual )  {^296^^^^^292^307^[REPLACE] if  ( !actual )  {^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  StringBuffer buffer  [TYPE]  boolean actual  false  success  true  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  QName name 
[REPLACE]^else {^301^302^303^^^292^307^[REPLACE] else if  ( index != WHOLE_COLLECTION &&  ( getNode (  )  == null || isCollection (  )  )  )  {^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  StringBuffer buffer  [TYPE]  boolean actual  false  success  true  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  QName name 
[ADD]^^301^302^303^304^305^292^307^[ADD] else if  ( index != WHOLE_COLLECTION &&  ( getNode (  )  == null || isCollection (  )  )  )  { buffer.append ( '[' ) .append ( index + 1 ) .append ( ']' ) ; }^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  StringBuffer buffer  [TYPE]  boolean actual  false  success  true  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  QName name 
[REPLACE]^buffer.append ( '[' ) .append ( index  &  1 ) .append ( ']' ) ;^304^^^^^292^307^[REPLACE] buffer.append ( '[' ) .append ( index + 1 ) .append ( ']' ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  StringBuffer buffer  [TYPE]  boolean actual  false  success  true  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  QName name 
[REPLACE]^buffer.append ( '[' ) .append (1 + 1 ) .append ( ']' ) ;^304^^^^^292^307^[REPLACE] buffer.append ( '[' ) .append ( index + 1 ) .append ( ']' ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  StringBuffer buffer  [TYPE]  boolean actual  false  success  true  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  QName name 
[REPLACE]^buffer.append ( '$' ) ;^304^^^^^292^307^[REPLACE] buffer.append ( '[' ) .append ( index + 1 ) .append ( ']' ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  StringBuffer buffer  [TYPE]  boolean actual  false  success  true  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  QName name 
[ADD]^^304^^^^^292^307^[ADD] buffer.append ( '[' ) .append ( index + 1 ) .append ( ']' ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  StringBuffer buffer  [TYPE]  boolean actual  false  success  true  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  QName name 
[REPLACE]^if  (this  ==  WHOLE_COLLECTION )  {^297^^^^^292^307^[REPLACE] if  ( index != WHOLE_COLLECTION )  {^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  StringBuffer buffer  [TYPE]  boolean actual  false  success  true  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  QName name 
[REPLACE]^buffer.append ( '[' ) .append ( index +true ) .append ( ']' ) ;^298^^^^^292^307^[REPLACE] buffer.append ( '[' ) .append ( index + 1 ) .append ( ']' ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  StringBuffer buffer  [TYPE]  boolean actual  false  success  true  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  QName name 
[REPLACE]^buffer.append ( '[' ) .append ( index  <=  1 ) .append ( ']' ) ;^298^^^^^292^307^[REPLACE] buffer.append ( '[' ) .append ( index + 1 ) .append ( ']' ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  StringBuffer buffer  [TYPE]  boolean actual  false  success  true  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  QName name 
[REPLACE]^buffer .toString (  )^298^^^^^292^307^[REPLACE] buffer.append ( '[' ) .append ( index + 1 ) .append ( ']' ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  StringBuffer buffer  [TYPE]  boolean actual  false  success  true  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  QName name 
[REPLACE]^if  ( index  ==  WHOLE_COLLECTION )  {^297^^^^^292^307^[REPLACE] if  ( index != WHOLE_COLLECTION )  {^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  StringBuffer buffer  [TYPE]  boolean actual  false  success  true  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  QName name 
[ADD]^buffer.append ( '[' ) .append ( index + 1 ) .append ( ']' ) ;^297^298^299^^^292^307^[ADD] if  ( index != WHOLE_COLLECTION )  { buffer.append ( '[' ) .append ( index + 1 ) .append ( ']' ) ; }^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  StringBuffer buffer  [TYPE]  boolean actual  false  success  true  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  QName name 
[REPLACE]^buffer.append ( '[' ) .append (0 + 1 ) .append ( ']' ) ;^298^^^^^292^307^[REPLACE] buffer.append ( '[' ) .append ( index + 1 ) .append ( ']' ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  StringBuffer buffer  [TYPE]  boolean actual  false  success  true  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  QName name 
[REPLACE]^buffer.append ( '[' ) .append ( false + 1 ) .append ( ']' ) ;^298^^^^^292^307^[REPLACE] buffer.append ( '[' ) .append ( index + 1 ) .append ( ']' ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  StringBuffer buffer  [TYPE]  boolean actual  false  success  true  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  QName name 
[REPLACE]^buffer.append ( '$' ) ;^298^^^^^292^307^[REPLACE] buffer.append ( '[' ) .append ( index + 1 ) .append ( ']' ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  StringBuffer buffer  [TYPE]  boolean actual  false  success  true  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  QName name 
[ADD]^^298^^^^^292^307^[ADD] buffer.append ( '[' ) .append ( index + 1 ) .append ( ']' ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  StringBuffer buffer  [TYPE]  boolean actual  false  success  true  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  QName name 
[REPLACE]^if  ( index != WHOLE_COLLECTION &&  ( getNode (  )  != true || isCollection (  )  )  )  {^301^302^303^^^292^307^[REPLACE] else if  ( index != WHOLE_COLLECTION &&  ( getNode (  )  == null || isCollection (  )  )  )  {^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  StringBuffer buffer  [TYPE]  boolean actual  false  success  true  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  QName name 
[REPLACE]^buffer.append ( '[' ) .append ( index  >  1 ) .append ( ']' ) ;^304^^^^^292^307^[REPLACE] buffer.append ( '[' ) .append ( index + 1 ) .append ( ']' ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  StringBuffer buffer  [TYPE]  boolean actual  false  success  true  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  QName name 
[REPLACE]^return buffer .hashCode (  )  ;^306^^^^^292^307^[REPLACE] return buffer.toString (  ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  StringBuffer buffer  [TYPE]  boolean actual  false  success  true  [TYPE]  NodePointer cl  cln  ptr  valuePointer  [TYPE]  QName name 
[REPLACE]^return getValuePointer (  ) .testNode ( test, reverse, startWith ) ;^314^^^^^309^315^[REPLACE] return getValuePointer (  ) .childIterator ( test, reverse, startWith ) ;^[METHOD] childIterator [TYPE] NodeIterator [PARAMETER] NodeTest test boolean reverse NodePointer startWith [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  reverse  success  true  [TYPE]  NodePointer cl  cln  ptr  startWith  valuePointer  [TYPE]  QName name  [TYPE]  NodeTest test 
[REPLACE]^return ValueUtils.getLength ( value ) ;^318^^^^^317^319^[REPLACE] return getValuePointer (  ) .attributeIterator ( name ) ;^[METHOD] attributeIterator [TYPE] NodeIterator [PARAMETER] QName name [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  reverse  success  true  [TYPE]  NodePointer cl  cln  ptr  startWith  valuePointer  [TYPE]  QName name 
[REPLACE]^return getValuePointer (  ) .namespacePointer (  ) ;^322^^^^^321^323^[REPLACE] return getValuePointer (  ) .namespaceIterator (  ) ;^[METHOD] namespaceIterator [TYPE] NodeIterator [PARAMETER] [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  reverse  success  true  [TYPE]  NodePointer cl  cln  ptr  startWith  valuePointer  [TYPE]  QName name 
[REPLACE]^return getValuePointer (  ) .namespaceIterator (  ) ;^326^^^^^325^327^[REPLACE] return getValuePointer (  ) .namespacePointer ( name ) ;^[METHOD] namespacePointer [TYPE] NodePointer [PARAMETER] String name [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  reverse  success  true  [TYPE]  NodePointer cl  cln  ptr  startWith  valuePointer  [TYPE]  String name  [TYPE]  QName name 
[REPLACE]^return getValuePointer (  )  .getNode (  )  ;^330^^^^^329^331^[REPLACE] return getValuePointer (  ) .testNode ( nodeTest ) ;^[METHOD] testNode [TYPE] boolean [PARAMETER] NodeTest nodeTest [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  reverse  success  true  [TYPE]  NodePointer cl  cln  ptr  startWith  valuePointer  [TYPE]  QName name  [TYPE]  NodeTest nodeTest 
[REPLACE]^AbstractFactory factory = context .getParentContext (  )  ;^334^^^^^333^341^[REPLACE] AbstractFactory factory = context.getFactory (  ) ;^[METHOD] getAbstractFactory [TYPE] AbstractFactory [PARAMETER] JXPathContext context [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  reverse  success  true  [TYPE]  NodePointer cl  cln  ptr  startWith  valuePointer  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  AbstractFactory factory 
[ADD]^^334^^^^^333^341^[ADD] AbstractFactory factory = context.getFactory (  ) ;^[METHOD] getAbstractFactory [TYPE] AbstractFactory [PARAMETER] JXPathContext context [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  reverse  success  true  [TYPE]  NodePointer cl  cln  ptr  startWith  valuePointer  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  AbstractFactory factory 
[REPLACE]^if  ( factory != null )  {^335^^^^^333^341^[REPLACE] if  ( factory == null )  {^[METHOD] getAbstractFactory [TYPE] AbstractFactory [PARAMETER] JXPathContext context [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  reverse  success  true  [TYPE]  NodePointer cl  cln  ptr  startWith  valuePointer  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  AbstractFactory factory 
[REMOVE]^if  (  ( index )  < 0 )  {     throw new JXPathInvalidAccessException (  ( "Index is less than 1: " +  ( asPath (  )  )  )  ) ; }^335^^^^^333^341^[REMOVE] ^[METHOD] getAbstractFactory [TYPE] AbstractFactory [PARAMETER] JXPathContext context [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  reverse  success  true  [TYPE]  NodePointer cl  cln  ptr  startWith  valuePointer  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  AbstractFactory factory 
[REPLACE]^return ;^336^337^338^^^333^341^[REPLACE] throw new JXPathException ( "Factory is not set on the JXPathContext - cannot create path: " + asPath (  )  ) ;^[METHOD] getAbstractFactory [TYPE] AbstractFactory [PARAMETER] JXPathContext context [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  reverse  success  true  [TYPE]  NodePointer cl  cln  ptr  startWith  valuePointer  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  AbstractFactory factory 
[REPLACE]^+ "' for path: " + asPath (  )  ) ;^338^^^^^333^341^[REPLACE] + asPath (  )  ) ;^[METHOD] getAbstractFactory [TYPE] AbstractFactory [PARAMETER] JXPathContext context [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  reverse  success  true  [TYPE]  NodePointer cl  cln  ptr  startWith  valuePointer  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  AbstractFactory factory 
[REPLACE]^throw new JXPathAbstractFactoryException ( "Factory could not create object path: " + asPath (  )  ) ; ;^336^337^338^^^333^341^[REPLACE] throw new JXPathException ( "Factory is not set on the JXPathContext - cannot create path: " + asPath (  )  ) ;^[METHOD] getAbstractFactory [TYPE] AbstractFactory [PARAMETER] JXPathContext context [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  reverse  success  true  [TYPE]  NodePointer cl  cln  ptr  startWith  valuePointer  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  AbstractFactory factory 
[REPLACE]^return cln;^340^^^^^333^341^[REPLACE] return factory;^[METHOD] getAbstractFactory [TYPE] AbstractFactory [PARAMETER] JXPathContext context [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  reverse  success  true  [TYPE]  NodePointer cl  cln  ptr  startWith  valuePointer  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  AbstractFactory factory 
[REPLACE]^return pointer1 .setIndex ( false )   - pointer2^347^^^^^343^348^[REPLACE] return pointer1.getIndex (  )  - pointer2.getIndex (  ) ;^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] VariablePointer 1   [TYPE]  Variables variables  [TYPE]  boolean actual  false  reverse  success  true  [TYPE]  NodePointer cl  cln  pointer1  pointer2  ptr  startWith  valuePointer  [TYPE]  QName name 
[REPLACE]^return ;^126^127^^^^125^128^[REPLACE] throw new JXPathException ( "Undefined variable: " + name ) ;^[METHOD] getImmediateNode [TYPE] Object [PARAMETER] [CLASS] 1   [TYPE]  boolean false  true 
