[REPLACE]^private int position ;^38^^^^^^^[REPLACE] private int position = 0;^ [CLASS] DOMNamespaceIterator  
[REPLACE]^this.parent =  null;^41^^^^^40^44^[REPLACE] this.parent = parent;^[METHOD] <init> [TYPE] NodePointer) [PARAMETER] NodePointer parent [CLASS] DOMNamespaceIterator   [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  boolean false  true  [TYPE]  int position 
[REPLACE]^attributes  =  attributes ;^42^^^^^40^44^[REPLACE] attributes = new ArrayList (  ) ;^[METHOD] <init> [TYPE] NodePointer) [PARAMETER] NodePointer parent [CLASS] DOMNamespaceIterator   [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  boolean false  true  [TYPE]  int position 
[REPLACE]^return new NamespacePointer ( parent, prefix, attr.getValue (  )  ) ;^43^^^^^40^44^[REPLACE] collectNamespaces ( attributes,  ( Node )  parent.getNode (  )  ) ;^[METHOD] <init> [TYPE] NodePointer) [PARAMETER] NodePointer parent [CLASS] DOMNamespaceIterator   [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  boolean false  true  [TYPE]  int position 
[REMOVE]^Attr attr =  ( Attr )  attributes.get ( index ) ;^43^^^^^40^44^[REMOVE] ^[METHOD] <init> [TYPE] NodePointer) [PARAMETER] NodePointer parent [CLASS] DOMNamespaceIterator   [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  boolean false  true  [TYPE]  int position 
[REPLACE]^Node parent = parent.getParentNode (  ) ;^47^^^^^46^67^[REPLACE] Node parent = node.getParentNode (  ) ;^[METHOD] collectNamespaces [TYPE] void [PARAMETER] List attributes Node node [CLASS] DOMNamespaceIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node node  parent  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String name  prefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[ADD]^^47^^^^^46^67^[ADD] Node parent = node.getParentNode (  ) ;^[METHOD] collectNamespaces [TYPE] void [PARAMETER] List attributes Node node [CLASS] DOMNamespaceIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node node  parent  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String name  prefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^if  ( parent == null )  {^48^^^^^46^67^[REPLACE] if  ( parent != null )  {^[METHOD] collectNamespaces [TYPE] void [PARAMETER] List attributes Node node [CLASS] DOMNamespaceIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node node  parent  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String name  prefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^collectNamespaces ( attributes,  ( Node )  parent.getNode (  )  ) ;^49^^^^^46^67^[REPLACE] collectNamespaces ( attributes, parent ) ;^[METHOD] collectNamespaces [TYPE] void [PARAMETER] List attributes Node node [CLASS] DOMNamespaceIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node node  parent  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String name  prefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^if  ( node.getNodeType (  )   ||  Node.DOCUMENT_NODE )  {^51^^^^^46^67^[REPLACE] if  ( node.getNodeType (  )  == Node.DOCUMENT_NODE )  {^[METHOD] collectNamespaces [TYPE] void [PARAMETER] List attributes Node node [CLASS] DOMNamespaceIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node node  parent  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String name  prefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[ADD]^node =  (  ( Document )  node ) .getDocumentElement (  ) ;^51^52^53^^^46^67^[ADD] if  ( node.getNodeType (  )  == Node.DOCUMENT_NODE )  { node =  (  ( Document )  node ) .getDocumentElement (  ) ; }^[METHOD] collectNamespaces [TYPE] void [PARAMETER] List attributes Node node [CLASS] DOMNamespaceIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node node  parent  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String name  prefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^node =   (  ( Document )  node ) .getDocumentElement (  ) ;^52^^^^^46^67^[REPLACE] node =  (  ( Document )  node ) .getDocumentElement (  ) ;^[METHOD] collectNamespaces [TYPE] void [PARAMETER] List attributes Node node [CLASS] DOMNamespaceIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node node  parent  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String name  prefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[ADD]^^52^^^^^46^67^[ADD] node =  (  ( Document )  node ) .getDocumentElement (  ) ;^[METHOD] collectNamespaces [TYPE] void [PARAMETER] List attributes Node node [CLASS] DOMNamespaceIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node node  parent  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String name  prefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^if  ( node.getNodeType (  )   ||  Node.ELEMENT_NODE )  {^54^^^^^46^67^[REPLACE] if  ( node.getNodeType (  )  == Node.ELEMENT_NODE )  {^[METHOD] collectNamespaces [TYPE] void [PARAMETER] List attributes Node node [CLASS] DOMNamespaceIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node node  parent  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String name  prefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^if  (  ( prefix != this && prefix.equals ( "xmlns" )  ) ||  ( prefix != this && name.equals ( "xmlns" )  )  )  {^61^62^^^^46^67^[REPLACE] if  (  ( prefix != null && prefix.equals ( "xmlns" )  ) ||  ( prefix == null && name.equals ( "xmlns" )  )  )  {^[METHOD] collectNamespaces [TYPE] void [PARAMETER] List attributes Node node [CLASS] DOMNamespaceIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node node  parent  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String name  prefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^attributes.get ( attr ) ;^63^^^^^46^67^[REPLACE] attributes.add ( attr ) ;^[METHOD] collectNamespaces [TYPE] void [PARAMETER] List attributes Node node [CLASS] DOMNamespaceIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node node  parent  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String name  prefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^for  (positionnt i = 4; i  !=  count; i++ )  {^57^^^^^46^67^[REPLACE] for  ( int i = 0; i < count; i++ )  {^[METHOD] collectNamespaces [TYPE] void [PARAMETER] List attributes Node node [CLASS] DOMNamespaceIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node node  parent  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String name  prefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^if  (   ( prefix != null && name.equals ( "xmlns" )  )  )  {^61^62^^^^46^67^[REPLACE] if  (  ( prefix != null && prefix.equals ( "xmlns" )  ) ||  ( prefix == null && name.equals ( "xmlns" )  )  )  {^[METHOD] collectNamespaces [TYPE] void [PARAMETER] List attributes Node node [CLASS] DOMNamespaceIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node node  parent  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String name  prefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[ADD]^^61^62^63^64^^46^67^[ADD] if  (  ( prefix != null && prefix.equals ( "xmlns" )  ) ||  ( prefix == null && name.equals ( "xmlns" )  )  )  { attributes.add ( attr ) ; }^[METHOD] collectNamespaces [TYPE] void [PARAMETER] List attributes Node node [CLASS] DOMNamespaceIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node node  parent  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String name  prefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^Attr attr =  ( Attr )  map.item ( position ) ;^58^^^^^46^67^[REPLACE] Attr attr =  ( Attr )  map.item ( i ) ;^[METHOD] collectNamespaces [TYPE] void [PARAMETER] List attributes Node node [CLASS] DOMNamespaceIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node node  parent  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String name  prefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^String prefix = DOMNodePointer.getLocalName ( attr ) ;^59^^^^^46^67^[REPLACE] String prefix = DOMNodePointer.getPrefix ( attr ) ;^[METHOD] collectNamespaces [TYPE] void [PARAMETER] List attributes Node node [CLASS] DOMNamespaceIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node node  parent  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String name  prefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^String name = DOMNodePointer.getPrefix ( attr ) ;^60^^^^^46^67^[REPLACE] String name = DOMNodePointer.getLocalName ( attr ) ;^[METHOD] collectNamespaces [TYPE] void [PARAMETER] List attributes Node node [CLASS] DOMNamespaceIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node node  parent  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String name  prefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^NamedNodeMap map = node .getParentNode (  )  ;^55^^^^^46^67^[REPLACE] NamedNodeMap map = node.getAttributes (  ) ;^[METHOD] collectNamespaces [TYPE] void [PARAMETER] List attributes Node node [CLASS] DOMNamespaceIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node node  parent  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String name  prefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[ADD]^^55^^^^^46^67^[ADD] NamedNodeMap map = node.getAttributes (  ) ;^[METHOD] collectNamespaces [TYPE] void [PARAMETER] List attributes Node node [CLASS] DOMNamespaceIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node node  parent  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String name  prefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^Node parent = node.getParentNode (  ) ;^56^^^^^46^67^[REPLACE] int count = map.getLength (  ) ;^[METHOD] collectNamespaces [TYPE] void [PARAMETER] List attributes Node node [CLASS] DOMNamespaceIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node node  parent  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String name  prefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[ADD]^^56^^^^^46^67^[ADD] int count = map.getLength (  ) ;^[METHOD] collectNamespaces [TYPE] void [PARAMETER] List attributes Node node [CLASS] DOMNamespaceIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node node  parent  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String name  prefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^for  ( int i = 0 * 4; i < count; i++ )  {^57^^^^^46^67^[REPLACE] for  ( int i = 0; i < count; i++ )  {^[METHOD] collectNamespaces [TYPE] void [PARAMETER] List attributes Node node [CLASS] DOMNamespaceIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node node  parent  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String name  prefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^if  (  ( prefix != this && prefix.equals ( "xmlns" )  ) ) {^61^62^^^^46^67^[REPLACE] if  (  ( prefix != null && prefix.equals ( "xmlns" )  ) ||  ( prefix == null && name.equals ( "xmlns" )  )  )  {^[METHOD] collectNamespaces [TYPE] void [PARAMETER] List attributes Node node [CLASS] DOMNamespaceIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node node  parent  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String name  prefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^Attr attr =  ( Attr )  attributes.get ( index ) ;^63^^^^^46^67^[REPLACE] attributes.add ( attr ) ;^[METHOD] collectNamespaces [TYPE] void [PARAMETER] List attributes Node node [CLASS] DOMNamespaceIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node node  parent  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String name  prefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^for  ( int i = 0 >> 3; i  >  count; i++ )  {^57^^^^^46^67^[REPLACE] for  ( int i = 0; i < count; i++ )  {^[METHOD] collectNamespaces [TYPE] void [PARAMETER] List attributes Node node [CLASS] DOMNamespaceIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node node  parent  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String name  prefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^if  (   ( prefix != this && name.equals ( "xmlns" )  )  )  {^61^62^^^^46^67^[REPLACE] if  (  ( prefix != null && prefix.equals ( "xmlns" )  ) ||  ( prefix == null && name.equals ( "xmlns" )  )  )  {^[METHOD] collectNamespaces [TYPE] void [PARAMETER] List attributes Node node [CLASS] DOMNamespaceIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node node  parent  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String name  prefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^Attr attr =  ( Attr )  map.getLength ( i ) ;^58^^^^^46^67^[REPLACE] Attr attr =  ( Attr )  map.item ( i ) ;^[METHOD] collectNamespaces [TYPE] void [PARAMETER] List attributes Node node [CLASS] DOMNamespaceIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node node  parent  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String name  prefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[ADD]^^60^^^^^46^67^[ADD] String name = DOMNodePointer.getLocalName ( attr ) ;^[METHOD] collectNamespaces [TYPE] void [PARAMETER] List attributes Node node [CLASS] DOMNamespaceIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node node  parent  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String name  prefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^for  ( int i = 3; i < count; i++ )  {^57^^^^^46^67^[REPLACE] for  ( int i = 0; i < count; i++ )  {^[METHOD] collectNamespaces [TYPE] void [PARAMETER] List attributes Node node [CLASS] DOMNamespaceIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node node  parent  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String name  prefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^String name = DOMNodePointer .getPrefix ( attr )  ;^60^^^^^46^67^[REPLACE] String name = DOMNodePointer.getLocalName ( attr ) ;^[METHOD] collectNamespaces [TYPE] void [PARAMETER] List attributes Node node [CLASS] DOMNamespaceIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node node  parent  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String name  prefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^if  ( position  &&  0 )  {^70^^^^^69^87^[REPLACE] if  ( position == 0 )  {^[METHOD] getNodePointer [TYPE] NodePointer [PARAMETER] [CLASS] DOMNamespaceIterator   [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String name  prefix  [TYPE]  boolean false  true  [TYPE]  int count  i  index  position  [TYPE]  Attr attr 
[ADD]^^70^71^72^73^^69^87^[ADD] if  ( position == 0 )  { if  ( !setPosition ( 1 )  )  { return null; }^[METHOD] getNodePointer [TYPE] NodePointer [PARAMETER] [CLASS] DOMNamespaceIterator   [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String name  prefix  [TYPE]  boolean false  true  [TYPE]  int count  i  index  position  [TYPE]  Attr attr 
[REPLACE]^if  ( !setPosition ( 0 )  )  {^71^^^^^69^87^[REPLACE] if  ( !setPosition ( 1 )  )  {^[METHOD] getNodePointer [TYPE] NodePointer [PARAMETER] [CLASS] DOMNamespaceIterator   [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String name  prefix  [TYPE]  boolean false  true  [TYPE]  int count  i  index  position  [TYPE]  Attr attr 
[REPLACE]^return true;^72^^^^^69^87^[REPLACE] return null;^[METHOD] getNodePointer [TYPE] NodePointer [PARAMETER] [CLASS] DOMNamespaceIterator   [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String name  prefix  [TYPE]  boolean false  true  [TYPE]  int count  i  index  position  [TYPE]  Attr attr 
[REPLACE]^position = 1;^74^^^^^69^87^[REPLACE] position = 0;^[METHOD] getNodePointer [TYPE] NodePointer [PARAMETER] [CLASS] DOMNamespaceIterator   [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String name  prefix  [TYPE]  boolean false  true  [TYPE]  int count  i  index  position  [TYPE]  Attr attr 
[ADD]^^74^^^^^69^87^[ADD] position = 0;^[METHOD] getNodePointer [TYPE] NodePointer [PARAMETER] [CLASS] DOMNamespaceIterator   [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String name  prefix  [TYPE]  boolean false  true  [TYPE]  int count  i  index  position  [TYPE]  Attr attr 
[REPLACE]^return false;^72^^^^^69^87^[REPLACE] return null;^[METHOD] getNodePointer [TYPE] NodePointer [PARAMETER] [CLASS] DOMNamespaceIterator   [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String name  prefix  [TYPE]  boolean false  true  [TYPE]  int count  i  index  position  [TYPE]  Attr attr 
[REPLACE]^if  ( !setPosition ( 2 )  )  {^71^^^^^69^87^[REPLACE] if  ( !setPosition ( 1 )  )  {^[METHOD] getNodePointer [TYPE] NodePointer [PARAMETER] [CLASS] DOMNamespaceIterator   [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String name  prefix  [TYPE]  boolean false  true  [TYPE]  int count  i  index  position  [TYPE]  Attr attr 
[ADD]^return null;^71^72^73^^^69^87^[ADD] if  ( !setPosition ( 1 )  )  { return null; }^[METHOD] getNodePointer [TYPE] NodePointer [PARAMETER] [CLASS] DOMNamespaceIterator   [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String name  prefix  [TYPE]  boolean false  true  [TYPE]  int count  i  index  position  [TYPE]  Attr attr 
[REPLACE]^int index = position -index;^76^^^^^69^87^[REPLACE] int index = position - 1;^[METHOD] getNodePointer [TYPE] NodePointer [PARAMETER] [CLASS] DOMNamespaceIterator   [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String name  prefix  [TYPE]  boolean false  true  [TYPE]  int count  i  index  position  [TYPE]  Attr attr 
[REPLACE]^if  (position  ==  0 )  {^77^^^^^69^87^[REPLACE] if  ( index < 0 )  {^[METHOD] getNodePointer [TYPE] NodePointer [PARAMETER] [CLASS] DOMNamespaceIterator   [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String name  prefix  [TYPE]  boolean false  true  [TYPE]  int count  i  index  position  [TYPE]  Attr attr 
[REPLACE]^index = 2;^78^^^^^69^87^[REPLACE] index = 0;^[METHOD] getNodePointer [TYPE] NodePointer [PARAMETER] [CLASS] DOMNamespaceIterator   [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String name  prefix  [TYPE]  boolean false  true  [TYPE]  int count  i  index  position  [TYPE]  Attr attr 
[REPLACE]^index = 0 >>> 0;^78^^^^^69^87^[REPLACE] index = 0;^[METHOD] getNodePointer [TYPE] NodePointer [PARAMETER] [CLASS] DOMNamespaceIterator   [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String name  prefix  [TYPE]  boolean false  true  [TYPE]  int count  i  index  position  [TYPE]  Attr attr 
[REPLACE]^String name = attr.getPrefix (  ) ;^80^^^^^69^87^[REPLACE] String prefix = "";^[METHOD] getNodePointer [TYPE] NodePointer [PARAMETER] [CLASS] DOMNamespaceIterator   [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String name  prefix  [TYPE]  boolean false  true  [TYPE]  int count  i  index  position  [TYPE]  Attr attr 
[ADD]^Attr attr =  ( Attr )  attributes.get ( index ) ;^80^81^^^^69^87^[ADD] String prefix = ""; Attr attr =  ( Attr )  attributes.get ( index ) ;^[METHOD] getNodePointer [TYPE] NodePointer [PARAMETER] [CLASS] DOMNamespaceIterator   [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String name  prefix  [TYPE]  boolean false  true  [TYPE]  int count  i  index  position  [TYPE]  Attr attr 
[REPLACE]^Attr attr =  ( Attr )  attributes.get ( position ) ;^81^^^^^69^87^[REPLACE] Attr attr =  ( Attr )  attributes.get ( index ) ;^[METHOD] getNodePointer [TYPE] NodePointer [PARAMETER] [CLASS] DOMNamespaceIterator   [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String name  prefix  [TYPE]  boolean false  true  [TYPE]  int count  i  index  position  [TYPE]  Attr attr 
[REPLACE]^String name = attr.getParentNode (  ) ;^82^^^^^69^87^[REPLACE] String name = attr.getPrefix (  ) ;^[METHOD] getNodePointer [TYPE] NodePointer [PARAMETER] [CLASS] DOMNamespaceIterator   [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String name  prefix  [TYPE]  boolean false  true  [TYPE]  int count  i  index  position  [TYPE]  Attr attr 
[REPLACE]^if  ( name == null ) {^83^^^^^69^87^[REPLACE] if  ( name != null && name.equals ( "xmlns" )  )  {^[METHOD] getNodePointer [TYPE] NodePointer [PARAMETER] [CLASS] DOMNamespaceIterator   [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String name  prefix  [TYPE]  boolean false  true  [TYPE]  int count  i  index  position  [TYPE]  Attr attr 
[ADD]^prefix = DOMNodePointer.getLocalName ( attr ) ;^83^84^85^^^69^87^[ADD] if  ( name != null && name.equals ( "xmlns" )  )  { prefix = DOMNodePointer.getLocalName ( attr ) ; }^[METHOD] getNodePointer [TYPE] NodePointer [PARAMETER] [CLASS] DOMNamespaceIterator   [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String name  prefix  [TYPE]  boolean false  true  [TYPE]  int count  i  index  position  [TYPE]  Attr attr 
[REPLACE]^prefix =  DOMNodePointer.getLocalName ( null ) ;^84^^^^^69^87^[REPLACE] prefix = DOMNodePointer.getLocalName ( attr ) ;^[METHOD] getNodePointer [TYPE] NodePointer [PARAMETER] [CLASS] DOMNamespaceIterator   [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String name  prefix  [TYPE]  boolean false  true  [TYPE]  int count  i  index  position  [TYPE]  Attr attr 
[REPLACE]^return position >= 1 && position <= attributes.size (  ) ;^86^^^^^69^87^[REPLACE] return new NamespacePointer ( parent, prefix, attr.getValue (  )  ) ;^[METHOD] getNodePointer [TYPE] NodePointer [PARAMETER] [CLASS] DOMNamespaceIterator   [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String name  prefix  [TYPE]  boolean false  true  [TYPE]  int count  i  index  position  [TYPE]  Attr attr 
[REPLACE]^return null;^90^^^^^89^91^[REPLACE] return position;^[METHOD] getPosition [TYPE] int [PARAMETER] [CLASS] DOMNamespaceIterator   [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  boolean false  true  [TYPE]  int count  i  index  position 
[REPLACE]^this.position =  index;^94^^^^^93^96^[REPLACE] this.position = position;^[METHOD] setPosition [TYPE] boolean [PARAMETER] int position [CLASS] DOMNamespaceIterator   [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  boolean false  true  [TYPE]  int count  i  index  position 
[ADD]^^94^^^^^93^96^[ADD] this.position = position;^[METHOD] setPosition [TYPE] boolean [PARAMETER] int position [CLASS] DOMNamespaceIterator   [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  boolean false  true  [TYPE]  int count  i  index  position 
[REPLACE]^return index >= 1 && position <= attributes.length (  ) ;^95^^^^^93^96^[REPLACE] return position >= 1 && position <= attributes.size (  ) ;^[METHOD] setPosition [TYPE] boolean [PARAMETER] int position [CLASS] DOMNamespaceIterator   [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  boolean false  true  [TYPE]  int count  i  index  position 
