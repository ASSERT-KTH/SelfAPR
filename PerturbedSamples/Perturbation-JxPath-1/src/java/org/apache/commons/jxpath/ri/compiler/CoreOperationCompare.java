[REPLACE]^r =  (  ( Pointer )  r ) .getValue (  ) ;^39^^^^^38^40^[REPLACE] super ( new Expression[] { arg1, arg2 } ) ;^[METHOD] <init> [TYPE] Expression) [PARAMETER] Expression arg1 Expression arg2 [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Expression arg1  arg2 
[REMOVE]^r =  (  ( Collection )  r ) .iterator (  ) ;^39^^^^^38^40^[REMOVE] ^[METHOD] <init> [TYPE] Expression) [PARAMETER] Expression arg1 Expression arg2 [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Expression arg1  arg2 
[REPLACE]^Object l = right.compute ( context ) ;^50^^^^^49^84^[REPLACE] Object l = left.compute ( context ) ;^[METHOD] equal [TYPE] boolean [PARAMETER] EvalContext context Expression left Expression right [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Expression left  right  [TYPE]  EvalContext context  [TYPE]  Object l  r 
[ADD]^Object r = right.compute ( context ) ;^50^51^^^^49^84^[ADD] Object l = left.compute ( context ) ; Object r = right.compute ( context ) ;^[METHOD] equal [TYPE] boolean [PARAMETER] EvalContext context Expression left Expression right [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Expression left  right  [TYPE]  EvalContext context  [TYPE]  Object l  r 
[REPLACE]^Object l = left.compute ( context ) ;^51^^^^^49^84^[REPLACE] Object r = right.compute ( context ) ;^[METHOD] equal [TYPE] boolean [PARAMETER] EvalContext context Expression left Expression right [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Expression left  right  [TYPE]  EvalContext context  [TYPE]  Object l  r 
[REPLACE]^if  ( ! l instanceof InitialContext || l instanceof SelfContext )  {^57^^^^^49^84^[REPLACE] if  ( l instanceof InitialContext || l instanceof SelfContext )  {^[METHOD] equal [TYPE] boolean [PARAMETER] EvalContext context Expression left Expression right [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Expression left  right  [TYPE]  EvalContext context  [TYPE]  Object l  r 
[REPLACE]^r =  (  ( EvalContext )  r ) .getSingleNodePointer (  ) ; ;^58^^^^^49^84^[REPLACE] l =  (  ( EvalContext )  l ) .getSingleNodePointer (  ) ;^[METHOD] equal [TYPE] boolean [PARAMETER] EvalContext context Expression left Expression right [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Expression left  right  [TYPE]  EvalContext context  [TYPE]  Object l  r 
[REPLACE]^if  (  r instanceof SelfContext )  {^61^^^^^49^84^[REPLACE] if  ( r instanceof InitialContext || r instanceof SelfContext )  {^[METHOD] equal [TYPE] boolean [PARAMETER] EvalContext context Expression left Expression right [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Expression left  right  [TYPE]  EvalContext context  [TYPE]  Object l  r 
[ADD]^^61^62^63^^^49^84^[ADD] if  ( r instanceof InitialContext || r instanceof SelfContext )  { r =  (  ( EvalContext )  r ) .getSingleNodePointer (  ) ; }^[METHOD] equal [TYPE] boolean [PARAMETER] EvalContext context Expression left Expression right [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Expression left  right  [TYPE]  EvalContext context  [TYPE]  Object l  r 
[REPLACE]^l =  (  ( EvalContext )  l ) .getSingleNodePointer (  ) ; ;^62^^^^^49^84^[REPLACE] r =  (  ( EvalContext )  r ) .getSingleNodePointer (  ) ;^[METHOD] equal [TYPE] boolean [PARAMETER] EvalContext context Expression left Expression right [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Expression left  right  [TYPE]  EvalContext context  [TYPE]  Object l  r 
[REPLACE]^if  ( ! l instanceof Collection )  {^65^^^^^49^84^[REPLACE] if  ( l instanceof Collection )  {^[METHOD] equal [TYPE] boolean [PARAMETER] EvalContext context Expression left Expression right [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Expression left  right  [TYPE]  EvalContext context  [TYPE]  Object l  r 
[REPLACE]^r =  (  ( Collection )  r ) .iterator (  ) ; ;^66^^^^^49^84^[REPLACE] l =  (  ( Collection )  l ) .iterator (  ) ;^[METHOD] equal [TYPE] boolean [PARAMETER] EvalContext context Expression left Expression right [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Expression left  right  [TYPE]  EvalContext context  [TYPE]  Object l  r 
[REPLACE]^if  ( ! r instanceof Collection )  {^69^^^^^49^84^[REPLACE] if  ( r instanceof Collection )  {^[METHOD] equal [TYPE] boolean [PARAMETER] EvalContext context Expression left Expression right [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Expression left  right  [TYPE]  EvalContext context  [TYPE]  Object l  r 
[ADD]^r =  (  ( Collection )  r ) .iterator (  ) ;^69^70^71^^^49^84^[ADD] if  ( r instanceof Collection )  { r =  (  ( Collection )  r ) .iterator (  ) ; }^[METHOD] equal [TYPE] boolean [PARAMETER] EvalContext context Expression left Expression right [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Expression left  right  [TYPE]  EvalContext context  [TYPE]  Object l  r 
[REPLACE]^l =  (  ( Collection )  l ) .iterator (  ) ; ;^70^^^^^49^84^[REPLACE] r =  (  ( Collection )  r ) .iterator (  ) ;^[METHOD] equal [TYPE] boolean [PARAMETER] EvalContext context Expression left Expression right [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Expression left  right  [TYPE]  EvalContext context  [TYPE]  Object l  r 
[ADD]^^70^^^^^49^84^[ADD] r =  (  ( Collection )  r ) .iterator (  ) ;^[METHOD] equal [TYPE] boolean [PARAMETER] EvalContext context Expression left Expression right [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Expression left  right  [TYPE]  EvalContext context  [TYPE]  Object l  r 
[REPLACE]^if  ( !  ( l instanceof Iterator )  ) {^73^^^^^49^84^[REPLACE] if  (  ( l instanceof Iterator )  && ! ( r instanceof Iterator )  )  {^[METHOD] equal [TYPE] boolean [PARAMETER] EvalContext context Expression left Expression right [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Expression left  right  [TYPE]  EvalContext context  [TYPE]  Object l  r 
[ADD]^return contains (  ( Iterator )  l, r ) ;^73^74^75^^^49^84^[ADD] if  (  ( l instanceof Iterator )  && ! ( r instanceof Iterator )  )  { return contains (  ( Iterator )  l, r ) ; }^[METHOD] equal [TYPE] boolean [PARAMETER] EvalContext context Expression left Expression right [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Expression left  right  [TYPE]  EvalContext context  [TYPE]  Object l  r 
[REPLACE]^else {^76^^^^^49^84^[REPLACE] else if  ( ! ( l instanceof Iterator )  &&  ( r instanceof Iterator )  )  {^[METHOD] equal [TYPE] boolean [PARAMETER] EvalContext context Expression left Expression right [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Expression left  right  [TYPE]  EvalContext context  [TYPE]  Object l  r 
[REPLACE]^if  ( ! l instanceof Iterator ) {^79^^^^^49^84^[REPLACE] else if  ( l instanceof Iterator && r instanceof Iterator )  {^[METHOD] equal [TYPE] boolean [PARAMETER] EvalContext context Expression left Expression right [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Expression left  right  [TYPE]  EvalContext context  [TYPE]  Object l  r 
[REPLACE]^return contains (  ( Iterator )  r, l ) ;^80^^^^^49^84^[REPLACE] return findMatch (  ( Iterator )  l,  ( Iterator )  r ) ;^[METHOD] equal [TYPE] boolean [PARAMETER] EvalContext context Expression left Expression right [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Expression left  right  [TYPE]  EvalContext context  [TYPE]  Object l  r 
[REPLACE]^return contains (  ( Iterator )  l, r ) ;^77^^^^^49^84^[REPLACE] return contains (  ( Iterator )  r, l ) ;^[METHOD] equal [TYPE] boolean [PARAMETER] EvalContext context Expression left Expression right [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Expression left  right  [TYPE]  EvalContext context  [TYPE]  Object l  r 
[REPLACE]^if  ( ! l instanceof Iterator && r instanceof Iterator )  {^79^^^^^49^84^[REPLACE] else if  ( l instanceof Iterator && r instanceof Iterator )  {^[METHOD] equal [TYPE] boolean [PARAMETER] EvalContext context Expression left Expression right [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Expression left  right  [TYPE]  EvalContext context  [TYPE]  Object l  r 
[ADD]^^79^80^81^^^49^84^[ADD] else if  ( l instanceof Iterator && r instanceof Iterator )  { return findMatch (  ( Iterator )  l,  ( Iterator )  r ) ; }^[METHOD] equal [TYPE] boolean [PARAMETER] EvalContext context Expression left Expression right [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Expression left  right  [TYPE]  EvalContext context  [TYPE]  Object l  r 
[REPLACE]^return contains (  ( Iterator )  r, l ) ;^74^^^^^49^84^[REPLACE] return contains (  ( Iterator )  l, r ) ;^[METHOD] equal [TYPE] boolean [PARAMETER] EvalContext context Expression left Expression right [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Expression left  right  [TYPE]  EvalContext context  [TYPE]  Object l  r 
[ADD]^return contains (  ( Iterator )  r, l ) ;^76^77^78^^^49^84^[ADD] else if  ( ! ( l instanceof Iterator )  &&  ( r instanceof Iterator )  )  { return contains (  ( Iterator )  r, l ) ; }^[METHOD] equal [TYPE] boolean [PARAMETER] EvalContext context Expression left Expression right [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Expression left  right  [TYPE]  EvalContext context  [TYPE]  Object l  r 
[REPLACE]^if  ( ! l instanceof true && r instanceof true )  {^79^^^^^49^84^[REPLACE] else if  ( l instanceof Iterator && r instanceof Iterator )  {^[METHOD] equal [TYPE] boolean [PARAMETER] EvalContext context Expression left Expression right [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Expression left  right  [TYPE]  EvalContext context  [TYPE]  Object l  r 
[REPLACE]^else if  ( ! l instanceof Iterator && r instanceof Iterator )  {^79^^^^^49^84^[REPLACE] else if  ( l instanceof Iterator && r instanceof Iterator )  {^[METHOD] equal [TYPE] boolean [PARAMETER] EvalContext context Expression left Expression right [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Expression left  right  [TYPE]  EvalContext context  [TYPE]  Object l  r 
[REPLACE]^return findMatch (  ( Iterator )  l,  ( Iterator )  r ) ;^83^^^^^49^84^[REPLACE] return equal ( l, r ) ;^[METHOD] equal [TYPE] boolean [PARAMETER] EvalContext context Expression left Expression right [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Expression left  right  [TYPE]  EvalContext context  [TYPE]  Object l  r 
[REPLACE]^while  ( it.next (  )  )  {^87^^^^^86^94^[REPLACE] while  ( it.hasNext (  )  )  {^[METHOD] contains [TYPE] boolean [PARAMETER] Iterator it Object value [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  Object element  value 
[REPLACE]^else if  ( l == null )  {^89^^^^^86^94^[REPLACE] if  ( equal ( element, value )  )  {^[METHOD] contains [TYPE] boolean [PARAMETER] Iterator it Object value [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  Object element  value 
[REPLACE]^return false;^90^^^^^86^94^[REPLACE] return true;^[METHOD] contains [TYPE] boolean [PARAMETER] Iterator it Object value [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  Object element  value 
[REPLACE]^Object element = it.hasNext (  ) ;^88^^^^^86^94^[REPLACE] Object element = it.next (  ) ;^[METHOD] contains [TYPE] boolean [PARAMETER] Iterator it Object value [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  Object element  value 
[ADD]^^88^^^^^86^94^[ADD] Object element = it.next (  ) ;^[METHOD] contains [TYPE] boolean [PARAMETER] Iterator it Object value [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  Object element  value 
[ADD]^return true;^89^90^91^^^86^94^[ADD] if  ( equal ( element, value )  )  { return true; }^[METHOD] contains [TYPE] boolean [PARAMETER] Iterator it Object value [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  Object element  value 
[REPLACE]^Object element = it .hasNext (  )  ;^88^^^^^86^94^[REPLACE] Object element = it.next (  ) ;^[METHOD] contains [TYPE] boolean [PARAMETER] Iterator it Object value [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  Object element  value 
[REPLACE]^return true;^93^^^^^86^94^[REPLACE] return false;^[METHOD] contains [TYPE] boolean [PARAMETER] Iterator it Object value [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  Object element  value 
[REPLACE]^Object element = it.next (  ) ;^97^^^^^96^107^[REPLACE] HashSet left = new HashSet (  ) ;^[METHOD] findMatch [TYPE] boolean [PARAMETER] Iterator lit Iterator rit [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Iterator lit  rit  [TYPE]  HashSet left 
[REPLACE]^while  ( rit .next (  )   )  {^98^^^^^96^107^[REPLACE] while  ( lit.hasNext (  )  )  {^[METHOD] findMatch [TYPE] boolean [PARAMETER] Iterator lit Iterator rit [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Iterator lit  rit  [TYPE]  HashSet left 
[REPLACE]^left.add ( lit.hasNext (  )  ) ;^99^^^^^96^107^[REPLACE] left.add ( lit.next (  )  ) ;^[METHOD] findMatch [TYPE] boolean [PARAMETER] Iterator lit Iterator rit [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Iterator lit  rit  [TYPE]  HashSet left 
[REPLACE]^left.add ( rit.next (  )  ) ;^99^^^^^96^107^[REPLACE] left.add ( lit.next (  )  ) ;^[METHOD] findMatch [TYPE] boolean [PARAMETER] Iterator lit Iterator rit [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Iterator lit  rit  [TYPE]  HashSet left 
[ADD]^^99^^^^^96^107^[ADD] left.add ( lit.next (  )  ) ;^[METHOD] findMatch [TYPE] boolean [PARAMETER] Iterator lit Iterator rit [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Iterator lit  rit  [TYPE]  HashSet left 
[REPLACE]^while  ( lit.hasNext (  )  )  {^101^^^^^96^107^[REPLACE] while  ( rit.hasNext (  )  )  {^[METHOD] findMatch [TYPE] boolean [PARAMETER] Iterator lit Iterator rit [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Iterator lit  rit  [TYPE]  HashSet left 
[ADD]^^101^102^103^^^96^107^[ADD] while  ( rit.hasNext (  )  )  { if  ( contains ( left.iterator (  ) , rit.next (  )  )  )  { return true;^[METHOD] findMatch [TYPE] boolean [PARAMETER] Iterator lit Iterator rit [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Iterator lit  rit  [TYPE]  HashSet left 
[REPLACE]^if  ( contains ( left.HashSet (  ) , rit.next (  )  )  )  {^102^^^^^96^107^[REPLACE] if  ( contains ( left.iterator (  ) , rit.next (  )  )  )  {^[METHOD] findMatch [TYPE] boolean [PARAMETER] Iterator lit Iterator rit [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Iterator lit  rit  [TYPE]  HashSet left 
[REPLACE]^return false;^103^^^^^96^107^[REPLACE] return true;^[METHOD] findMatch [TYPE] boolean [PARAMETER] Iterator lit Iterator rit [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Iterator lit  rit  [TYPE]  HashSet left 
[REPLACE]^if  ( contains ( left.iterator (  ) , lit.next (  )  )  )  {^102^^^^^96^107^[REPLACE] if  ( contains ( left.iterator (  ) , rit.next (  )  )  )  {^[METHOD] findMatch [TYPE] boolean [PARAMETER] Iterator lit Iterator rit [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Iterator lit  rit  [TYPE]  HashSet left 
[ADD]^return true;^102^103^104^^^96^107^[ADD] if  ( contains ( left.iterator (  ) , rit.next (  )  )  )  { return true; }^[METHOD] findMatch [TYPE] boolean [PARAMETER] Iterator lit Iterator rit [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Iterator lit  rit  [TYPE]  HashSet left 
[REPLACE]^return true;^106^^^^^96^107^[REPLACE] return false;^[METHOD] findMatch [TYPE] boolean [PARAMETER] Iterator lit Iterator rit [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Iterator lit  rit  [TYPE]  HashSet left 
[REPLACE]^if  (  r instanceof Pointer )  {^110^^^^^109^143^[REPLACE] if  ( l instanceof Pointer && r instanceof Pointer )  {^[METHOD] equal [TYPE] boolean [PARAMETER] Object l Object r [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Object l  r 
[REPLACE]^else if  ( l == null )  {^111^^^^^109^143^[REPLACE] if  ( l.equals ( r )  )  {^[METHOD] equal [TYPE] boolean [PARAMETER] Object l Object r [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Object l  r 
[ADD]^^111^112^113^^^109^143^[ADD] if  ( l.equals ( r )  )  { return true; }^[METHOD] equal [TYPE] boolean [PARAMETER] Object l Object r [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Object l  r 
[REPLACE]^return false;^112^^^^^109^143^[REPLACE] return true;^[METHOD] equal [TYPE] boolean [PARAMETER] Object l Object r [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Object l  r 
[REPLACE]^if  ( ! l instanceof Pointer )  {^116^^^^^109^143^[REPLACE] if  ( l instanceof Pointer )  {^[METHOD] equal [TYPE] boolean [PARAMETER] Object l Object r [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Object l  r 
[REPLACE]^r =  (  ( Pointer )  r ) .getValue (  ) ; ;^117^^^^^109^143^[REPLACE] l =  (  ( Pointer )  l ) .getValue (  ) ;^[METHOD] equal [TYPE] boolean [PARAMETER] Object l Object r [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Object l  r 
[REPLACE]^if  ( ! r instanceof Pointer )  {^120^^^^^109^143^[REPLACE] if  ( r instanceof Pointer )  {^[METHOD] equal [TYPE] boolean [PARAMETER] Object l Object r [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Object l  r 
[ADD]^r =  (  ( Pointer )  r ) .getValue (  ) ;^120^121^122^^^109^143^[ADD] if  ( r instanceof Pointer )  { r =  (  ( Pointer )  r ) .getValue (  ) ; }^[METHOD] equal [TYPE] boolean [PARAMETER] Object l Object r [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Object l  r 
[REPLACE]^l =  (  ( Pointer )  l ) .getValue (  ) ; ;^121^^^^^109^143^[REPLACE] r =  (  ( Pointer )  r ) .getValue (  ) ;^[METHOD] equal [TYPE] boolean [PARAMETER] Object l Object r [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Object l  r 
[REPLACE]^if  ( l  &&  r )  {^124^^^^^109^143^[REPLACE] if  ( l == r )  {^[METHOD] equal [TYPE] boolean [PARAMETER] Object l Object r [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Object l  r 
[REPLACE]^return false;^125^^^^^109^143^[REPLACE] return true;^[METHOD] equal [TYPE] boolean [PARAMETER] Object l Object r [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Object l  r 
[REPLACE]^if  (  r instanceof Boolean )  {^129^^^^^109^143^[REPLACE] if  ( l instanceof Boolean || r instanceof Boolean )  {^[METHOD] equal [TYPE] boolean [PARAMETER] Object l Object r [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Object l  r 
[ADD]^return  ( InfoSetUtil.booleanValue ( l )  == InfoSetUtil.booleanValue ( r )  ) ;^129^130^131^^^109^143^[ADD] if  ( l instanceof Boolean || r instanceof Boolean )  { return  ( InfoSetUtil.booleanValue ( l )  == InfoSetUtil.booleanValue ( r )  ) ; }^[METHOD] equal [TYPE] boolean [PARAMETER] Object l Object r [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Object l  r 
[REPLACE]^if  ( ! l instanceof true || r instanceof Number )  {^132^^^^^109^143^[REPLACE] else if  ( l instanceof Number || r instanceof Number )  {^[METHOD] equal [TYPE] boolean [PARAMETER] Object l Object r [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Object l  r 
[ADD]^return  ( InfoSetUtil.doubleValue ( l )  == InfoSetUtil.doubleValue ( r )  ) ;^132^133^134^^^109^143^[ADD] else if  ( l instanceof Number || r instanceof Number )  { return  ( InfoSetUtil.doubleValue ( l )  == InfoSetUtil.doubleValue ( r )  ) ; }^[METHOD] equal [TYPE] boolean [PARAMETER] Object l Object r [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Object l  r 
[REPLACE]^if  ( ! l instanceof String ) {^135^^^^^109^143^[REPLACE] else if  ( l instanceof String || r instanceof String )  {^[METHOD] equal [TYPE] boolean [PARAMETER] Object l Object r [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Object l  r 
[ADD]^^135^136^137^138^^109^143^[ADD] else if  ( l instanceof String || r instanceof String )  { return  ( InfoSetUtil.stringValue ( l ) .equals ( InfoSetUtil.stringValue ( r )  )  ) ; }^[METHOD] equal [TYPE] boolean [PARAMETER] Object l Object r [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Object l  r 
[REPLACE]^else {^139^^^^^109^143^[REPLACE] else if  ( l == null )  {^[METHOD] equal [TYPE] boolean [PARAMETER] Object l Object r [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Object l  r 
[ADD]^return r == null;^139^140^141^^^109^143^[ADD] else if  ( l == null )  { return r == null; }^[METHOD] equal [TYPE] boolean [PARAMETER] Object l Object r [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Object l  r 
[REPLACE]^return r != null;;^140^^^^^109^143^[REPLACE] return r == null;^[METHOD] equal [TYPE] boolean [PARAMETER] Object l Object r [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Object l  r 
[REPLACE]^return  ( InfoSetUtil.doubleValue ( l ) .equals ( InfoSetUtil.stringValue ( r )  )  ) ;^136^137^^^^109^143^[REPLACE] return  ( InfoSetUtil.stringValue ( l ) .equals ( InfoSetUtil.stringValue ( r )  )  ) ;^[METHOD] equal [TYPE] boolean [PARAMETER] Object l Object r [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Object l  r 
[REMOVE]^if  ( l == r )  {     return true; }^139^^^^^109^143^[REMOVE] ^[METHOD] equal [TYPE] boolean [PARAMETER] Object l Object r [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Object l  r 
[REPLACE]^return  ( InfoSetUtil.booleanValue ( l )  == InfoSetUtil.doubleValue ( r )  ) ;^133^^^^^109^143^[REPLACE] return  ( InfoSetUtil.doubleValue ( l )  == InfoSetUtil.doubleValue ( r )  ) ;^[METHOD] equal [TYPE] boolean [PARAMETER] Object l Object r [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Object l  r 
[REPLACE]^else if  ( ! l instanceof String ) {^135^^^^^109^143^[REPLACE] else if  ( l instanceof String || r instanceof String )  {^[METHOD] equal [TYPE] boolean [PARAMETER] Object l Object r [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Object l  r 
[REPLACE]^return true ;^140^^^^^109^143^[REPLACE] return r == null;^[METHOD] equal [TYPE] boolean [PARAMETER] Object l Object r [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Object l  r 
[REPLACE]^return  ( InfoSetUtil.doubleValue ( l )   &&  InfoSetUtil.booleanValue ( r )  ) ;^130^^^^^109^143^[REPLACE] return  ( InfoSetUtil.booleanValue ( l )  == InfoSetUtil.booleanValue ( r )  ) ;^[METHOD] equal [TYPE] boolean [PARAMETER] Object l Object r [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Object l  r 
[REPLACE]^if  ( ! l instanceof true ) {^132^^^^^109^143^[REPLACE] else if  ( l instanceof Number || r instanceof Number )  {^[METHOD] equal [TYPE] boolean [PARAMETER] Object l Object r [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Object l  r 
[REPLACE]^else {^135^^^^^109^143^[REPLACE] else if  ( l instanceof String || r instanceof String )  {^[METHOD] equal [TYPE] boolean [PARAMETER] Object l Object r [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Object l  r 
[REPLACE]^if  ( l != null )  {^139^^^^^109^143^[REPLACE] else if  ( l == null )  {^[METHOD] equal [TYPE] boolean [PARAMETER] Object l Object r [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Object l  r 
[REPLACE]^return false ;^140^^^^^109^143^[REPLACE] return r == null;^[METHOD] equal [TYPE] boolean [PARAMETER] Object l Object r [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Object l  r 
[ADD]^^139^140^141^^^109^143^[ADD] else if  ( l == null )  { return r == null; }^[METHOD] equal [TYPE] boolean [PARAMETER] Object l Object r [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Object l  r 
[REPLACE]^return r != this;;^140^^^^^109^143^[REPLACE] return r == null;^[METHOD] equal [TYPE] boolean [PARAMETER] Object l Object r [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Object l  r 
[REPLACE]^return r != false;;^140^^^^^109^143^[REPLACE] return r == null;^[METHOD] equal [TYPE] boolean [PARAMETER] Object l Object r [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Object l  r 
[REPLACE]^return  ( InfoSetUtil.booleanValue ( l )   !=  InfoSetUtil.doubleValue ( r )  ) ;;^133^^^^^109^143^[REPLACE] return  ( InfoSetUtil.doubleValue ( l )  == InfoSetUtil.doubleValue ( r )  ) ;^[METHOD] equal [TYPE] boolean [PARAMETER] Object l Object r [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Object l  r 
[REPLACE]^return findMatch (  ( Iterator )  l,  ( Iterator )  r ) ;^136^137^^^^109^143^[REPLACE] return  ( InfoSetUtil.stringValue ( l ) .equals ( InfoSetUtil.stringValue ( r )  )  ) ;^[METHOD] equal [TYPE] boolean [PARAMETER] Object l Object r [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Object l  r 
[REPLACE]^return  ( InfoSetUtil .doubleValue ( l )   == InfoSetUtil^130^^^^^109^143^[REPLACE] return  ( InfoSetUtil.booleanValue ( l )  == InfoSetUtil.booleanValue ( r )  ) ;^[METHOD] equal [TYPE] boolean [PARAMETER] Object l Object r [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Object l  r 
[REPLACE]^return contains (  ( Iterator )  r, l ) ;^142^^^^^109^143^[REPLACE] return l.equals ( r ) ;^[METHOD] equal [TYPE] boolean [PARAMETER] Object l Object r [CLASS] CoreOperationCompare   [TYPE]  boolean false  true  [TYPE]  Object l  r 
