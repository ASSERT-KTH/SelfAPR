[REPLACE]^super ( this, locale ) ;^41^^^^^40^43^[REPLACE] super ( null, locale ) ;^[METHOD] <init> [TYPE] Locale) [PARAMETER] Container container Locale locale [CLASS] ContainerPointer   [TYPE]  Locale locale  [TYPE]  Container container  [TYPE]  NodePointer valuePointer  [TYPE]  boolean false  true 
[REPLACE]^this.container =  null;^42^^^^^40^43^[REPLACE] this.container = container;^[METHOD] <init> [TYPE] Locale) [PARAMETER] Container container Locale locale [CLASS] ContainerPointer   [TYPE]  Locale locale  [TYPE]  Container container  [TYPE]  NodePointer valuePointer  [TYPE]  boolean false  true 
[REPLACE]^super ( valuePointer ) ;^46^^^^^45^48^[REPLACE] super ( parent ) ;^[METHOD] <init> [TYPE] Container) [PARAMETER] NodePointer parent Container container [CLASS] ContainerPointer   [TYPE]  Container container  [TYPE]  NodePointer parent  valuePointer  [TYPE]  boolean false  true 
[REPLACE]^this.container =  null;^47^^^^^45^48^[REPLACE] this.container = container;^[METHOD] <init> [TYPE] Container) [PARAMETER] NodePointer parent Container container [CLASS] ContainerPointer   [TYPE]  Container container  [TYPE]  NodePointer parent  valuePointer  [TYPE]  boolean false  true 
[REPLACE]^return false;^54^^^^^53^55^[REPLACE] return true;^[METHOD] isContainer [TYPE] boolean [PARAMETER] [CLASS] ContainerPointer   [TYPE]  Container container  [TYPE]  NodePointer parent  valuePointer  [TYPE]  boolean false  true 
[REPLACE]^return false;^58^^^^^57^59^[REPLACE] return null;^[METHOD] getName [TYPE] QName [PARAMETER] [CLASS] ContainerPointer   [TYPE]  Container container  [TYPE]  NodePointer parent  valuePointer  [TYPE]  boolean false  true 
[REPLACE]^return System.identityHashCode ( container )  + index;^62^^^^^61^63^[REPLACE] return container;^[METHOD] getBaseValue [TYPE] Object [PARAMETER] [CLASS] ContainerPointer   [TYPE]  Container container  [TYPE]  NodePointer parent  valuePointer  [TYPE]  boolean false  true 
[REPLACE]^Object value = getImmediateNode (  ) ;^66^^^^^65^68^[REPLACE] Object value = getBaseValue (  ) ;^[METHOD] isCollection [TYPE] boolean [PARAMETER] [CLASS] ContainerPointer   [TYPE]  Container container  [TYPE]  Object value  [TYPE]  NodePointer parent  valuePointer  [TYPE]  boolean false  true 
[ADD]^^66^^^^^65^68^[ADD] Object value = getBaseValue (  ) ;^[METHOD] isCollection [TYPE] boolean [PARAMETER] [CLASS] ContainerPointer   [TYPE]  Container container  [TYPE]  Object value  [TYPE]  NodePointer parent  valuePointer  [TYPE]  boolean false  true 
[REPLACE]^return value != null && ValueUtils.getLength ( value ) ;^67^^^^^65^68^[REPLACE] return value != null && ValueUtils.isCollection ( value ) ;^[METHOD] isCollection [TYPE] boolean [PARAMETER] [CLASS] ContainerPointer   [TYPE]  Container container  [TYPE]  Object value  [TYPE]  NodePointer parent  valuePointer  [TYPE]  boolean false  true 
[REPLACE]^Object value = getImmediateNode (  ) ;^71^^^^^70^76^[REPLACE] Object value = getBaseValue (  ) ;^[METHOD] getLength [TYPE] int [PARAMETER] [CLASS] ContainerPointer   [TYPE]  Container container  [TYPE]  Object value  [TYPE]  NodePointer parent  valuePointer  [TYPE]  boolean false  true 
[REPLACE]^if  ( value != null )  {^72^^^^^70^76^[REPLACE] if  ( value == null )  {^[METHOD] getLength [TYPE] int [PARAMETER] [CLASS] ContainerPointer   [TYPE]  Container container  [TYPE]  Object value  [TYPE]  NodePointer parent  valuePointer  [TYPE]  boolean false  true 
[REPLACE]^return 1 >> 3;^73^^^^^70^76^[REPLACE] return 1;^[METHOD] getLength [TYPE] int [PARAMETER] [CLASS] ContainerPointer   [TYPE]  Container container  [TYPE]  Object value  [TYPE]  NodePointer parent  valuePointer  [TYPE]  boolean false  true 
[REPLACE]^return 3;^73^^^^^70^76^[REPLACE] return 1;^[METHOD] getLength [TYPE] int [PARAMETER] [CLASS] ContainerPointer   [TYPE]  Container container  [TYPE]  Object value  [TYPE]  NodePointer parent  valuePointer  [TYPE]  boolean false  true 
[REPLACE]^return ValueUtils.getValue ( value ) ;^75^^^^^70^76^[REPLACE] return ValueUtils.getLength ( value ) ;^[METHOD] getLength [TYPE] int [PARAMETER] [CLASS] ContainerPointer   [TYPE]  Container container  [TYPE]  Object value  [TYPE]  NodePointer parent  valuePointer  [TYPE]  boolean false  true 
[REPLACE]^return System.identityHashCode ( container )  + index;^79^^^^^78^80^[REPLACE] return getValuePointer (  ) .isLeaf (  ) ;^[METHOD] isLeaf [TYPE] boolean [PARAMETER] [CLASS] ContainerPointer   [TYPE]  Container container  [TYPE]  NodePointer parent  valuePointer  [TYPE]  boolean false  true 
[REPLACE]^Object value = getImmediateNode (  ) ;^83^^^^^82^95^[REPLACE] Object value = getBaseValue (  ) ;^[METHOD] getImmediateNode [TYPE] Object [PARAMETER] [CLASS] ContainerPointer   [TYPE]  Container container  [TYPE]  Object value  [TYPE]  NodePointer parent  valuePointer  [TYPE]  boolean false  true 
[ADD]^^83^^^^^82^95^[ADD] Object value = getBaseValue (  ) ;^[METHOD] getImmediateNode [TYPE] Object [PARAMETER] [CLASS] ContainerPointer   [TYPE]  Container container  [TYPE]  Object value  [TYPE]  NodePointer parent  valuePointer  [TYPE]  boolean false  true 
[REPLACE]^if  ( index  ==  WHOLE_COLLECTION )  {^84^^^^^82^95^[REPLACE] if  ( index != WHOLE_COLLECTION )  {^[METHOD] getImmediateNode [TYPE] Object [PARAMETER] [CLASS] ContainerPointer   [TYPE]  Container container  [TYPE]  Object value  [TYPE]  NodePointer parent  valuePointer  [TYPE]  boolean false  true 
[ADD]^^84^85^86^87^^82^95^[ADD] if  ( index != WHOLE_COLLECTION )  { if  ( index >= 0 && index < getLength (  )  )  { return ValueUtils.getValue ( value, index ) ; }^[METHOD] getImmediateNode [TYPE] Object [PARAMETER] [CLASS] ContainerPointer   [TYPE]  Container container  [TYPE]  Object value  [TYPE]  NodePointer parent  valuePointer  [TYPE]  boolean false  true 
[REPLACE]^return ValueUtils.getLength ( value ) ;^93^^^^^82^95^[REPLACE] return ValueUtils.getValue ( value ) ;^[METHOD] getImmediateNode [TYPE] Object [PARAMETER] [CLASS] ContainerPointer   [TYPE]  Container container  [TYPE]  Object value  [TYPE]  NodePointer parent  valuePointer  [TYPE]  boolean false  true 
[REPLACE]^if  ( index >= 0 || index < getLength (  )  )  {^85^^^^^82^95^[REPLACE] if  ( index >= 0 && index < getLength (  )  )  {^[METHOD] getImmediateNode [TYPE] Object [PARAMETER] [CLASS] ContainerPointer   [TYPE]  Container container  [TYPE]  Object value  [TYPE]  NodePointer parent  valuePointer  [TYPE]  boolean false  true 
[REPLACE]^return this;^89^^^^^82^95^[REPLACE] return null;^[METHOD] getImmediateNode [TYPE] Object [PARAMETER] [CLASS] ContainerPointer   [TYPE]  Container container  [TYPE]  Object value  [TYPE]  NodePointer parent  valuePointer  [TYPE]  boolean false  true 
[REPLACE]^return ValueUtils .getLength ( value )  ;^86^^^^^82^95^[REPLACE] return ValueUtils.getValue ( value, index ) ;^[METHOD] getImmediateNode [TYPE] Object [PARAMETER] [CLASS] ContainerPointer   [TYPE]  Container container  [TYPE]  Object value  [TYPE]  NodePointer parent  valuePointer  [TYPE]  boolean false  true 
[REPLACE]^return false;^89^^^^^82^95^[REPLACE] return null;^[METHOD] getImmediateNode [TYPE] Object [PARAMETER] [CLASS] ContainerPointer   [TYPE]  Container container  [TYPE]  Object value  [TYPE]  NodePointer parent  valuePointer  [TYPE]  boolean false  true 
[ADD]^return ValueUtils.getValue ( value, index ) ;^85^86^87^^^82^95^[ADD] if  ( index >= 0 && index < getLength (  )  )  { return ValueUtils.getValue ( value, index ) ; }^[METHOD] getImmediateNode [TYPE] Object [PARAMETER] [CLASS] ContainerPointer   [TYPE]  Container container  [TYPE]  Object value  [TYPE]  NodePointer parent  valuePointer  [TYPE]  boolean false  true 
[REPLACE]^return ValueUtils.getValue ( value ) ;^86^^^^^82^95^[REPLACE] return ValueUtils.getValue ( value, index ) ;^[METHOD] getImmediateNode [TYPE] Object [PARAMETER] [CLASS] ContainerPointer   [TYPE]  Container container  [TYPE]  Object value  [TYPE]  NodePointer parent  valuePointer  [TYPE]  boolean false  true 
[REPLACE]^return ValueUtils.getLength ( value ) ;^99^^^^^97^100^[REPLACE] container.setValue ( value ) ;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] ContainerPointer   [TYPE]  Container container  [TYPE]  Object value  [TYPE]  NodePointer parent  valuePointer  [TYPE]  boolean false  true 
[ADD]^^99^^^^^97^100^[ADD] container.setValue ( value ) ;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] ContainerPointer   [TYPE]  Container container  [TYPE]  Object value  [TYPE]  NodePointer parent  valuePointer  [TYPE]  boolean false  true 
[REPLACE]^if  ( valuePointer != null )  {^103^^^^^102^109^[REPLACE] if  ( valuePointer == null )  {^[METHOD] getImmediateValuePointer [TYPE] NodePointer [PARAMETER] [CLASS] ContainerPointer   [TYPE]  Container container  [TYPE]  Object value  [TYPE]  NodePointer parent  valuePointer  [TYPE]  boolean false  true 
[ADD]^Object value = getImmediateNode (  ) ;NodePointer.newChildNodePointer ( this, getName (  ) , value ) ;^103^104^105^106^107^102^109^[ADD] if  ( valuePointer == null )  { Object value = getImmediateNode (  ) ; valuePointer = NodePointer.newChildNodePointer ( this, getName (  ) , value ) ; }^[METHOD] getImmediateValuePointer [TYPE] NodePointer [PARAMETER] [CLASS] ContainerPointer   [TYPE]  Container container  [TYPE]  Object value  [TYPE]  NodePointer parent  valuePointer  [TYPE]  boolean false  true 
[REPLACE]^valuePointer =  NodePointer.newChildNodePointer ( this, getName (  ) , null ) ;^105^106^^^^102^109^[REPLACE] valuePointer = NodePointer.newChildNodePointer ( this, getName (  ) , value ) ;^[METHOD] getImmediateValuePointer [TYPE] NodePointer [PARAMETER] [CLASS] ContainerPointer   [TYPE]  Container container  [TYPE]  Object value  [TYPE]  NodePointer parent  valuePointer  [TYPE]  boolean false  true 
[REPLACE]^Object value = getBaseValue (  ) ;^104^^^^^102^109^[REPLACE] Object value = getImmediateNode (  ) ;^[METHOD] getImmediateValuePointer [TYPE] NodePointer [PARAMETER] [CLASS] ContainerPointer   [TYPE]  Container container  [TYPE]  Object value  [TYPE]  NodePointer parent  valuePointer  [TYPE]  boolean false  true 
[REPLACE]^return getValuePointer (  ) .attributeIterator ( name ) ;^108^^^^^102^109^[REPLACE] return valuePointer;^[METHOD] getImmediateValuePointer [TYPE] NodePointer [PARAMETER] [CLASS] ContainerPointer   [TYPE]  Container container  [TYPE]  Object value  [TYPE]  NodePointer parent  valuePointer  [TYPE]  boolean false  true 
[REPLACE]^return   container    + index;^112^^^^^111^113^[REPLACE] return System.identityHashCode ( container )  + index;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] ContainerPointer   [TYPE]  Container container  [TYPE]  NodePointer parent  valuePointer  [TYPE]  boolean false  true 
[REPLACE]^if  ( object  &&  this )  {^116^^^^^115^126^[REPLACE] if  ( object == this )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object object [CLASS] ContainerPointer   [TYPE]  ContainerPointer other  [TYPE]  Container container  [TYPE]  Object object  [TYPE]  NodePointer parent  valuePointer  [TYPE]  boolean false  true 
[REPLACE]^return false;^117^^^^^115^126^[REPLACE] return true;^[METHOD] equals [TYPE] boolean [PARAMETER] Object object [CLASS] ContainerPointer   [TYPE]  ContainerPointer other  [TYPE]  Container container  [TYPE]  Object object  [TYPE]  NodePointer parent  valuePointer  [TYPE]  boolean false  true 
[REPLACE]^if  ( ! ! ( object instanceof ContainerPointer )  )  {^120^^^^^115^126^[REPLACE] if  ( ! ( object instanceof ContainerPointer )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object object [CLASS] ContainerPointer   [TYPE]  ContainerPointer other  [TYPE]  Container container  [TYPE]  Object object  [TYPE]  NodePointer parent  valuePointer  [TYPE]  boolean false  true 
[ADD]^return false;^120^121^122^^^115^126^[ADD] if  ( ! ( object instanceof ContainerPointer )  )  { return false; }^[METHOD] equals [TYPE] boolean [PARAMETER] Object object [CLASS] ContainerPointer   [TYPE]  ContainerPointer other  [TYPE]  Container container  [TYPE]  Object object  [TYPE]  NodePointer parent  valuePointer  [TYPE]  boolean false  true 
[REPLACE]^return true;^121^^^^^115^126^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object object [CLASS] ContainerPointer   [TYPE]  ContainerPointer other  [TYPE]  Container container  [TYPE]  Object object  [TYPE]  NodePointer parent  valuePointer  [TYPE]  boolean false  true 
[REPLACE]^Object value = getImmediateNode (  ) ;^124^^^^^115^126^[REPLACE] ContainerPointer other =  ( ContainerPointer )  object;^[METHOD] equals [TYPE] boolean [PARAMETER] Object object [CLASS] ContainerPointer   [TYPE]  ContainerPointer other  [TYPE]  Container container  [TYPE]  Object object  [TYPE]  NodePointer parent  valuePointer  [TYPE]  boolean false  true 
[ADD]^^124^^^^^115^126^[ADD] ContainerPointer other =  ( ContainerPointer )  object;^[METHOD] equals [TYPE] boolean [PARAMETER] Object object [CLASS] ContainerPointer   [TYPE]  ContainerPointer other  [TYPE]  Container container  [TYPE]  Object object  [TYPE]  NodePointer parent  valuePointer  [TYPE]  boolean false  true 
[REPLACE]^return   index ;^125^^^^^115^126^[REPLACE] return container == other.container && index == other.index;^[METHOD] equals [TYPE] boolean [PARAMETER] Object object [CLASS] ContainerPointer   [TYPE]  ContainerPointer other  [TYPE]  Container container  [TYPE]  Object object  [TYPE]  NodePointer parent  valuePointer  [TYPE]  boolean false  true 
[REPLACE]^return getValuePointer (  ) .testNode ( test, true, startWith ) ;^133^^^^^128^134^[REPLACE] return getValuePointer (  ) .childIterator ( test, reverse, startWith ) ;^[METHOD] childIterator [TYPE] NodeIterator [PARAMETER] NodeTest test boolean reverse NodePointer startWith [CLASS] ContainerPointer   [TYPE]  Container container  [TYPE]  NodePointer parent  startWith  valuePointer  [TYPE]  boolean false  reverse  true  [TYPE]  NodeTest test 
[REPLACE]^return pointer1.getIndex (  )  - pointer2.getIndex (  ) ;^137^^^^^136^138^[REPLACE] return getValuePointer (  ) .attributeIterator ( name ) ;^[METHOD] attributeIterator [TYPE] NodeIterator [PARAMETER] QName name [CLASS] ContainerPointer   [TYPE]  Container container  [TYPE]  NodePointer parent  startWith  valuePointer  [TYPE]  boolean false  true  [TYPE]  QName name 
[REPLACE]^return getValuePointer (  ) .namespacePointer (  ) ;^141^^^^^140^142^[REPLACE] return getValuePointer (  ) .namespaceIterator (  ) ;^[METHOD] namespaceIterator [TYPE] NodeIterator [PARAMETER] [CLASS] ContainerPointer   [TYPE]  Container container  [TYPE]  NodePointer parent  startWith  valuePointer  [TYPE]  boolean false  true 
[REPLACE]^return getValuePointer (  )  .namespaceIterator (  )  ;^145^^^^^144^146^[REPLACE] return getValuePointer (  ) .namespacePointer ( namespace ) ;^[METHOD] namespacePointer [TYPE] NodePointer [PARAMETER] String namespace [CLASS] ContainerPointer   [TYPE]  Container container  [TYPE]  NodePointer parent  startWith  valuePointer  [TYPE]  String namespace  [TYPE]  boolean false  true 
[REPLACE]^return getValuePointer (  ) .attributeIterator ( nodeTest ) ;^149^^^^^148^150^[REPLACE] return getValuePointer (  ) .testNode ( nodeTest ) ;^[METHOD] testNode [TYPE] boolean [PARAMETER] NodeTest nodeTest [CLASS] ContainerPointer   [TYPE]  Container container  [TYPE]  NodePointer parent  startWith  valuePointer  [TYPE]  boolean false  true  [TYPE]  NodeTest nodeTest 
[REPLACE]^return pointer1 .NodePointer ( 0 , null )   - valuePointer^156^^^^^152^157^[REPLACE] return pointer1.getIndex (  )  - pointer2.getIndex (  ) ;^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] ContainerPointer   [TYPE]  Container container  [TYPE]  NodePointer parent  pointer1  pointer2  startWith  valuePointer  [TYPE]  boolean false  true 
[REPLACE]^return getValuePointer (  ) .namespacePointer ( prefix ) ;^160^^^^^159^161^[REPLACE] return getValuePointer (  ) .getNamespaceURI ( prefix ) ;^[METHOD] getNamespaceURI [TYPE] String [PARAMETER] String prefix [CLASS] ContainerPointer   [TYPE]  Container container  [TYPE]  NodePointer parent  pointer1  pointer2  startWith  valuePointer  [TYPE]  String prefix  [TYPE]  boolean false  true 
[REPLACE]^if  ( parent == null )  {^164^^^^^163^168^[REPLACE] if  ( parent != null )  {^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] ContainerPointer   [TYPE]  Container container  [TYPE]  NodePointer parent  pointer1  pointer2  startWith  valuePointer  [TYPE]  boolean false  true 
[REPLACE]^return parent .asPath (  )  ;^165^^^^^163^168^[REPLACE] return parent.asPath (  ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] ContainerPointer   [TYPE]  Container container  [TYPE]  NodePointer parent  pointer1  pointer2  startWith  valuePointer  [TYPE]  boolean false  true 
[REPLACE]^return System.identityHashCode ( container )  + index;^165^^^^^163^168^[REPLACE] return parent.asPath (  ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] ContainerPointer   [TYPE]  Container container  [TYPE]  NodePointer parent  pointer1  pointer2  startWith  valuePointer  [TYPE]  boolean false  true 
[REPLACE]^return container;^167^^^^^163^168^[REPLACE] return "/";^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] ContainerPointer   [TYPE]  Container container  [TYPE]  NodePointer parent  pointer1  pointer2  startWith  valuePointer  [TYPE]  boolean false  true 
