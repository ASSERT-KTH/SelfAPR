[REPLACE]^buffer.append ( args[i] ) ;^38^^^^^37^40^[REPLACE] super ( args ) ;^[METHOD] <init> [TYPE] Expression[]) [PARAMETER] QName functionName Expression[] args [CLASS] ExtensionFunction   [TYPE]  QName functionName  [TYPE]  Expression[] args  [TYPE]  boolean false  true 
[REPLACE]^this.functionName =  null;^39^^^^^37^40^[REPLACE] this.functionName = functionName;^[METHOD] <init> [TYPE] Expression[]) [PARAMETER] QName functionName Expression[] args [CLASS] ExtensionFunction   [TYPE]  QName functionName  [TYPE]  Expression[] args  [TYPE]  boolean false  true 
[REPLACE]^return object;^43^^^^^42^44^[REPLACE] return functionName;^[METHOD] getFunctionName [TYPE] QName [PARAMETER] [CLASS] ExtensionFunction   [TYPE]  QName functionName  [TYPE]  boolean false  true 
[REPLACE]^return false;^51^^^^^50^52^[REPLACE] return true;^[METHOD] computeContextDependent [TYPE] boolean [PARAMETER] [CLASS] ExtensionFunction   [TYPE]  QName functionName  [TYPE]  boolean false  true 
[REPLACE]^Expression args[] = getArguments (  ) ;^55^^^^^54^69^[REPLACE] StringBuffer buffer = new StringBuffer (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ExtensionFunction   [TYPE]  StringBuffer buffer  [TYPE]  boolean false  true  [TYPE]  QName functionName  [TYPE]  Expression[] args  [TYPE]  int i 
[ADD]^^55^^^^^54^69^[ADD] StringBuffer buffer = new StringBuffer (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ExtensionFunction   [TYPE]  StringBuffer buffer  [TYPE]  boolean false  true  [TYPE]  QName functionName  [TYPE]  Expression[] args  [TYPE]  int i 
[REPLACE]^buffer.append ( args[i] ) ;^56^^^^^54^69^[REPLACE] buffer.append ( functionName ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ExtensionFunction   [TYPE]  StringBuffer buffer  [TYPE]  boolean false  true  [TYPE]  QName functionName  [TYPE]  Expression[] args  [TYPE]  int i 
[REPLACE]^buffer .append ( 1 )  ;^57^^^^^54^69^[REPLACE] buffer.append ( ' ( ' ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ExtensionFunction   [TYPE]  StringBuffer buffer  [TYPE]  boolean false  true  [TYPE]  QName functionName  [TYPE]  Expression[] args  [TYPE]  int i 
[REPLACE]^for  ( int i = 0; i < args.length; i++ )  { parameters[i] = convert ( args[i].compute ( context )  ) ;^58^^^^^54^69^[REPLACE] Expression args[] = getArguments (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ExtensionFunction   [TYPE]  StringBuffer buffer  [TYPE]  boolean false  true  [TYPE]  QName functionName  [TYPE]  Expression[] args  [TYPE]  int i 
[REPLACE]^if  ( args == null )  {^59^^^^^54^69^[REPLACE] if  ( args != null )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ExtensionFunction   [TYPE]  StringBuffer buffer  [TYPE]  boolean false  true  [TYPE]  QName functionName  [TYPE]  Expression[] args  [TYPE]  int i 
[REPLACE]^if  ( i  <=  0 )  {^61^^^^^54^69^[REPLACE] if  ( i > 0 )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ExtensionFunction   [TYPE]  StringBuffer buffer  [TYPE]  boolean false  true  [TYPE]  QName functionName  [TYPE]  Expression[] args  [TYPE]  int i 
[ADD]^buffer.append ( ", " ) ;^61^62^63^^^54^69^[ADD] if  ( i > 0 )  { buffer.append ( ", " ) ; }^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ExtensionFunction   [TYPE]  StringBuffer buffer  [TYPE]  boolean false  true  [TYPE]  QName functionName  [TYPE]  Expression[] args  [TYPE]  int i 
[REPLACE]^buffer .append ( this )  ;^62^^^^^54^69^[REPLACE] buffer.append ( ", " ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ExtensionFunction   [TYPE]  StringBuffer buffer  [TYPE]  boolean false  true  [TYPE]  QName functionName  [TYPE]  Expression[] args  [TYPE]  int i 
[REPLACE]^for  ( int i = 0; i < args.length + 5; i++ )  {^60^^^^^54^69^[REPLACE] for  ( int i = 0; i < args.length; i++ )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ExtensionFunction   [TYPE]  StringBuffer buffer  [TYPE]  boolean false  true  [TYPE]  QName functionName  [TYPE]  Expression[] args  [TYPE]  int i 
[ADD]^^60^61^62^63^^54^69^[ADD] for  ( int i = 0; i < args.length; i++ )  { if  ( i > 0 )  { buffer.append ( ", " ) ; }^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ExtensionFunction   [TYPE]  StringBuffer buffer  [TYPE]  boolean false  true  [TYPE]  QName functionName  [TYPE]  Expression[] args  [TYPE]  int i 
[REPLACE]^if  ( i  !=  0 )  {^61^^^^^54^69^[REPLACE] if  ( i > 0 )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ExtensionFunction   [TYPE]  StringBuffer buffer  [TYPE]  boolean false  true  [TYPE]  QName functionName  [TYPE]  Expression[] args  [TYPE]  int i 
[REPLACE]^buffer .append ( true )  ;^62^^^^^54^69^[REPLACE] buffer.append ( ", " ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ExtensionFunction   [TYPE]  StringBuffer buffer  [TYPE]  boolean false  true  [TYPE]  QName functionName  [TYPE]  Expression[] args  [TYPE]  int i 
[ADD]^^62^^^^^54^69^[ADD] buffer.append ( ", " ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ExtensionFunction   [TYPE]  StringBuffer buffer  [TYPE]  boolean false  true  [TYPE]  QName functionName  [TYPE]  Expression[] args  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < args.length; i++ )  {^60^^^^^54^69^[REPLACE] for  ( int i = 0; i < args.length; i++ )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ExtensionFunction   [TYPE]  StringBuffer buffer  [TYPE]  boolean false  true  [TYPE]  QName functionName  [TYPE]  Expression[] args  [TYPE]  int i 
[REPLACE]^if  ( i  ==  3 )  {^61^^^^^54^69^[REPLACE] if  ( i > 0 )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ExtensionFunction   [TYPE]  StringBuffer buffer  [TYPE]  boolean false  true  [TYPE]  QName functionName  [TYPE]  Expression[] args  [TYPE]  int i 
[REPLACE]^buffer.append ( functionName ) ;^62^^^^^54^69^[REPLACE] buffer.append ( ", " ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ExtensionFunction   [TYPE]  StringBuffer buffer  [TYPE]  boolean false  true  [TYPE]  QName functionName  [TYPE]  Expression[] args  [TYPE]  int i 
[REPLACE]^for  ( int i = 0; i < args.length (  ) ; i++ )  {^60^^^^^54^69^[REPLACE] for  ( int i = 0; i < args.length; i++ )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ExtensionFunction   [TYPE]  StringBuffer buffer  [TYPE]  boolean false  true  [TYPE]  QName functionName  [TYPE]  Expression[] args  [TYPE]  int i 
[REPLACE]^if  ( i  ==  0 )  {^61^^^^^54^69^[REPLACE] if  ( i > 0 )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ExtensionFunction   [TYPE]  StringBuffer buffer  [TYPE]  boolean false  true  [TYPE]  QName functionName  [TYPE]  Expression[] args  [TYPE]  int i 
[REPLACE]^buffer.append ( ' ( ' ) ;^67^^^^^54^69^[REPLACE] buffer.append ( ' ) ' ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ExtensionFunction   [TYPE]  StringBuffer buffer  [TYPE]  boolean false  true  [TYPE]  QName functionName  [TYPE]  Expression[] args  [TYPE]  int i 
[REPLACE]^return buffer.StringBuffer (  ) ;^68^^^^^54^69^[REPLACE] return buffer.toString (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ExtensionFunction   [TYPE]  StringBuffer buffer  [TYPE]  boolean false  true  [TYPE]  QName functionName  [TYPE]  Expression[] args  [TYPE]  int i 
[REPLACE]^return object;^72^^^^^71^73^[REPLACE] return computeValue ( context ) ;^[METHOD] compute [TYPE] Object [PARAMETER] EvalContext context [CLASS] ExtensionFunction   [TYPE]  EvalContext context  [TYPE]  QName functionName  [TYPE]  boolean false  true 
[REPLACE]^Object[] parameters = true;^76^^^^^75^92^[REPLACE] Object[] parameters = null;^[METHOD] computeValue [TYPE] Object [PARAMETER] EvalContext context [CLASS] ExtensionFunction   [TYPE]  EvalContext context  [TYPE]  Function function  [TYPE]  boolean false  true  [TYPE]  QName functionName  [TYPE]  Object[] parameters  [TYPE]  int i 
[REPLACE]^if  ( true == null )  {^77^^^^^75^92^[REPLACE] if  ( args != null )  {^[METHOD] computeValue [TYPE] Object [PARAMETER] EvalContext context [CLASS] ExtensionFunction   [TYPE]  EvalContext context  [TYPE]  Function function  [TYPE]  boolean false  true  [TYPE]  QName functionName  [TYPE]  Object[] parameters  [TYPE]  int i 
[ADD]^^77^78^79^80^81^75^92^[ADD] if  ( args != null )  { parameters = new Object[args.length]; for  ( int i = 0; i < args.length; i++ )  { parameters[i] = convert ( args[i].compute ( context )  ) ; }^[METHOD] computeValue [TYPE] Object [PARAMETER] EvalContext context [CLASS] ExtensionFunction   [TYPE]  EvalContext context  [TYPE]  Function function  [TYPE]  boolean false  true  [TYPE]  QName functionName  [TYPE]  Object[] parameters  [TYPE]  int i 
[REPLACE]^for  ( int i = 0; i < args.length *  2; i++ )  {^79^^^^^75^92^[REPLACE] for  ( int i = 0; i < args.length; i++ )  {^[METHOD] computeValue [TYPE] Object [PARAMETER] EvalContext context [CLASS] ExtensionFunction   [TYPE]  EvalContext context  [TYPE]  Function function  [TYPE]  boolean false  true  [TYPE]  QName functionName  [TYPE]  Object[] parameters  [TYPE]  int i 
[REPLACE]^parameters[i]  =  parameters[i] ;^80^^^^^75^92^[REPLACE] parameters[i] = convert ( args[i].compute ( context )  ) ;^[METHOD] computeValue [TYPE] Object [PARAMETER] EvalContext context [CLASS] ExtensionFunction   [TYPE]  EvalContext context  [TYPE]  Function function  [TYPE]  boolean false  true  [TYPE]  QName functionName  [TYPE]  Object[] parameters  [TYPE]  int i 
[REPLACE]^parameters ;^78^^^^^75^92^[REPLACE] parameters = new Object[args.length];^[METHOD] computeValue [TYPE] Object [PARAMETER] EvalContext context [CLASS] ExtensionFunction   [TYPE]  EvalContext context  [TYPE]  Function function  [TYPE]  boolean false  true  [TYPE]  QName functionName  [TYPE]  Object[] parameters  [TYPE]  int i 
[ADD]^^80^^^^^75^92^[ADD] parameters[i] = convert ( args[i].compute ( context )  ) ;^[METHOD] computeValue [TYPE] Object [PARAMETER] EvalContext context [CLASS] ExtensionFunction   [TYPE]  EvalContext context  [TYPE]  Function function  [TYPE]  boolean false  true  [TYPE]  QName functionName  [TYPE]  Object[] parameters  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < args.length; i++ )  {^79^^^^^75^92^[REPLACE] for  ( int i = 0; i < args.length; i++ )  {^[METHOD] computeValue [TYPE] Object [PARAMETER] EvalContext context [CLASS] ExtensionFunction   [TYPE]  EvalContext context  [TYPE]  Function function  [TYPE]  boolean false  true  [TYPE]  QName functionName  [TYPE]  Object[] parameters  [TYPE]  int i 
[ADD]^^79^80^81^^^75^92^[ADD] for  ( int i = 0; i < args.length; i++ )  { parameters[i] = convert ( args[i].compute ( context )  ) ; }^[METHOD] computeValue [TYPE] Object [PARAMETER] EvalContext context [CLASS] ExtensionFunction   [TYPE]  EvalContext context  [TYPE]  Function function  [TYPE]  boolean false  true  [TYPE]  QName functionName  [TYPE]  Object[] parameters  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < args.length %  2; i++ )  {^79^^^^^75^92^[REPLACE] for  ( int i = 0; i < args.length; i++ )  {^[METHOD] computeValue [TYPE] Object [PARAMETER] EvalContext context [CLASS] ExtensionFunction   [TYPE]  EvalContext context  [TYPE]  Function function  [TYPE]  boolean false  true  [TYPE]  QName functionName  [TYPE]  Object[] parameters  [TYPE]  int i 
[REPLACE]^parameters  =  parameters ;^78^^^^^75^92^[REPLACE] parameters = new Object[args.length];^[METHOD] computeValue [TYPE] Object [PARAMETER] EvalContext context [CLASS] ExtensionFunction   [TYPE]  EvalContext context  [TYPE]  Function function  [TYPE]  boolean false  true  [TYPE]  QName functionName  [TYPE]  Object[] parameters  [TYPE]  int i 
[ADD]^^78^^^^^75^92^[ADD] parameters = new Object[args.length];^[METHOD] computeValue [TYPE] Object [PARAMETER] EvalContext context [CLASS] ExtensionFunction   [TYPE]  EvalContext context  [TYPE]  Function function  [TYPE]  boolean false  true  [TYPE]  QName functionName  [TYPE]  Object[] parameters  [TYPE]  int i 
[REPLACE]^parameters[i] ;^80^^^^^75^92^[REPLACE] parameters[i] = convert ( args[i].compute ( context )  ) ;^[METHOD] computeValue [TYPE] Object [PARAMETER] EvalContext context [CLASS] ExtensionFunction   [TYPE]  EvalContext context  [TYPE]  Function function  [TYPE]  boolean false  true  [TYPE]  QName functionName  [TYPE]  Object[] parameters  [TYPE]  int i 
[REPLACE]^Function function = context.getRootContext (  ) .compute ( functionName, parameters ) ;^84^85^^^^75^92^[REPLACE] Function function = context.getRootContext (  ) .getFunction ( functionName, parameters ) ;^[METHOD] computeValue [TYPE] Object [PARAMETER] EvalContext context [CLASS] ExtensionFunction   [TYPE]  EvalContext context  [TYPE]  Function function  [TYPE]  boolean false  true  [TYPE]  QName functionName  [TYPE]  Object[] parameters  [TYPE]  int i 
[REPLACE]^if  ( function != null )  {^86^^^^^75^92^[REPLACE] if  ( function == null )  {^[METHOD] computeValue [TYPE] Object [PARAMETER] EvalContext context [CLASS] ExtensionFunction   [TYPE]  EvalContext context  [TYPE]  Function function  [TYPE]  boolean false  true  [TYPE]  QName functionName  [TYPE]  Object[] parameters  [TYPE]  int i 
[REPLACE]^return ;^87^88^^^^75^92^[REPLACE] throw new JXPathFunctionNotFoundException ( "No such function: " + functionName + Arrays.asList ( parameters )  ) ;^[METHOD] computeValue [TYPE] Object [PARAMETER] EvalContext context [CLASS] ExtensionFunction   [TYPE]  EvalContext context  [TYPE]  Function function  [TYPE]  boolean false  true  [TYPE]  QName functionName  [TYPE]  Object[] parameters  [TYPE]  int i 
[REPLACE]^+ functionName +   parameters    ) ;^88^^^^^75^92^[REPLACE] + functionName + Arrays.asList ( parameters )  ) ;^[METHOD] computeValue [TYPE] Object [PARAMETER] EvalContext context [CLASS] ExtensionFunction   [TYPE]  EvalContext context  [TYPE]  Function function  [TYPE]  boolean false  true  [TYPE]  QName functionName  [TYPE]  Object[] parameters  [TYPE]  int i 
[ADD]^^88^^^^^75^92^[ADD] + functionName + Arrays.asList ( parameters )  ) ;^[METHOD] computeValue [TYPE] Object [PARAMETER] EvalContext context [CLASS] ExtensionFunction   [TYPE]  EvalContext context  [TYPE]  Function function  [TYPE]  boolean false  true  [TYPE]  QName functionName  [TYPE]  Object[] parameters  [TYPE]  int i 
[REPLACE]^return functionName;^91^^^^^75^92^[REPLACE] return function.invoke ( context, parameters ) ;^[METHOD] computeValue [TYPE] Object [PARAMETER] EvalContext context [CLASS] ExtensionFunction   [TYPE]  EvalContext context  [TYPE]  Function function  [TYPE]  boolean false  true  [TYPE]  QName functionName  [TYPE]  Object[] parameters  [TYPE]  int i 
[REPLACE]^if  ( ! object instanceof EvalContext )  {^95^^^^^94^99^[REPLACE] if  ( object instanceof EvalContext )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object [CLASS] ExtensionFunction   [TYPE]  QName functionName  [TYPE]  Object object  [TYPE]  boolean false  true 
[REPLACE]^return  (  ( EvalContext )  object )  .getArguments (  )  ;^96^^^^^94^99^[REPLACE] return  (  ( EvalContext )  object ) .getValue (  ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object [CLASS] ExtensionFunction   [TYPE]  QName functionName  [TYPE]  Object object  [TYPE]  boolean false  true 
[REPLACE]^return  (  ( EvalContext )  object ) .getArguments (  ) ;^96^^^^^94^99^[REPLACE] return  (  ( EvalContext )  object ) .getValue (  ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object [CLASS] ExtensionFunction   [TYPE]  QName functionName  [TYPE]  Object object  [TYPE]  boolean false  true 
[REPLACE]^return functionName;^98^^^^^94^99^[REPLACE] return object;^[METHOD] convert [TYPE] Object [PARAMETER] Object object [CLASS] ExtensionFunction   [TYPE]  QName functionName  [TYPE]  Object object  [TYPE]  boolean false  true 
