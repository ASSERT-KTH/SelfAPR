[REPLACE]^this.values =  pointers;^441^^^^^440^442^[REPLACE] this.values = values;^[METHOD] <init> [TYPE] List) [PARAMETER] List values [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object bean  [TYPE]  boolean false  true 
[ADD]^^441^^^^^440^442^[ADD] this.values = values;^[METHOD] <init> [TYPE] List) [PARAMETER] List values [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object bean  [TYPE]  boolean false  true 
[REPLACE]^this.bean =  bean;^468^^^^^467^469^[REPLACE] this.bean = object;^[METHOD] <init> [TYPE] Object) [PARAMETER] Object object [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object bean  object  [TYPE]  boolean false  true 
[REPLACE]^if  (bean != null )  {^49^^^^^48^168^[REPLACE] if  ( object == null )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^return false;^50^^^^^48^168^[REPLACE] return true;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( toType  &&  Object.class )  {^53^^^^^48^168^[REPLACE] if  ( toType == Object.class )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^return false;^54^^^^^48^168^[REPLACE] return true;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Class fromType = bean.getClass (  ) ;^57^^^^^48^168^[REPLACE] Class fromType = object.getClass (  ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( fromType.equals ( cType )  )  {^58^^^^^48^168^[REPLACE] if  ( fromType.equals ( toType )  )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[ADD]^return true;^58^59^60^^^48^168^[ADD] if  ( fromType.equals ( toType )  )  { return true; }^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^return false;^59^^^^^48^168^[REPLACE] return true;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( toType.isAssignableFrom ( cType )  )  {^62^^^^^48^168^[REPLACE] if  ( toType.isAssignableFrom ( fromType )  )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^return false;^63^^^^^48^168^[REPLACE] return true;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( toType  ||  String.class )  {^66^^^^^48^168^[REPLACE] if  ( toType == String.class )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^return false;^67^^^^^48^168^[REPLACE] return true;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^while  ( it.next (  )  )  {^133^^^^^48^168^[REPLACE] while  ( it.hasNext (  )  )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( !canConvert ( value, toType )  )  {^135^^^^^48^168^[REPLACE] if  ( !canConvert ( value, cType )  )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^return true;^136^^^^^48^168^[REPLACE] return false;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = it.hasNext (  ) ;^134^^^^^48^168^[REPLACE] Object value = it.next (  ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( ! object instanceof Boolean )  {^70^^^^^48^168^[REPLACE] if  ( object instanceof Boolean )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^while  ( it .next (  )   )  {^133^^^^^48^168^[REPLACE] while  ( it.hasNext (  )  )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[ADD]^^133^134^^^^48^168^[ADD] while  ( it.hasNext (  )  )  { Object value = it.next (  ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^return value;^136^^^^^48^168^[REPLACE] return false;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^else {^76^^^^^48^168^[REPLACE] else if  ( object instanceof Number )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[ADD]^^76^77^78^79^80^48^168^[ADD] else if  ( object instanceof Number )  { if  ( toType.isPrimitive (  ) || Number.class.isAssignableFrom ( toType )  )  { return true; }^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( canConvert ( value, cType )  )  {^135^^^^^48^168^[REPLACE] if  ( !canConvert ( value, cType )  )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( ! object instanceof Character )  {^82^^^^^48^168^[REPLACE] else if  ( object instanceof Character )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[ADD]^^135^136^137^^^48^168^[ADD] if  ( !canConvert ( value, cType )  )  { return false; }^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( ! object instanceof String )  {^87^^^^^48^168^[REPLACE] else if  ( object instanceof String )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = it .hasNext (  )  ;^134^^^^^48^168^[REPLACE] Object value = it.next (  ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( fromType.isArray (  )  )  {^102^^^^^48^168^[REPLACE] else if  ( fromType.isArray (  )  )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( ! object instanceof Collection )  {^128^^^^^48^168^[REPLACE] else if  ( object instanceof Collection )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^else {^161^^^^^48^168^[REPLACE] else if  ( object instanceof NodeSet )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[ADD]^return canConvert (  (  ( NodeSet )  object ) .getValues (  ) , toType ) ;^161^162^163^^^48^168^[ADD] else if  ( object instanceof NodeSet )  { return canConvert (  (  ( NodeSet )  object ) .getValues (  ) , toType ) ; }^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^else {^164^^^^^48^168^[REPLACE] else if  ( object instanceof Pointer )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^return canConvert (  (  ( Pointer )  object ) .getValues (  ) , toType ) ;^165^^^^^48^168^[REPLACE] return canConvert (  (  ( Pointer )  object ) .getValue (  ) , toType ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^return canConvert (  (  ( Pointer )  object ) .getValue (  ) , fromType ) ;^165^^^^^48^168^[REPLACE] return canConvert (  (  ( Pointer )  object ) .getValue (  ) , toType ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^return convert (  (  ( NodeSet )  object ) .getValues (  ) , toType ) ;^162^^^^^48^168^[REPLACE] return canConvert (  (  ( NodeSet )  object ) .getValues (  ) , toType ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[ADD]^return canConvert (  (  ( Pointer )  object ) .getValue (  ) , toType ) ;^164^165^166^^^48^168^[ADD] else if  ( object instanceof Pointer )  { return canConvert (  (  ( Pointer )  object ) .getValue (  ) , toType ) ; }^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^return canConvert (  (  ( NodeSet )  object ) .getValues (  ) , fromType ) ;^162^^^^^48^168^[REPLACE] return canConvert (  (  ( NodeSet )  object ) .getValues (  ) , toType ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[ADD]^^134^^^^^48^168^[ADD] Object value = it.next (  ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^else if  ( fromType.isArray (  )  )  {^130^^^^^48^168^[REPLACE] if  ( toType.isArray (  )  )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^else {^141^^^^^48^168^[REPLACE] else if  ( Collection.class.isAssignableFrom ( toType )  )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  object ) .size (  )  - 2 > 0 )  {^145^^^^^141^159^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^return canConvert ( "", fromType ) ;^157^^^^^141^159^[REPLACE] return canConvert ( "", toType ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( ! object instanceof List )  {^147^^^^^141^159^[REPLACE] if  ( object instanceof List )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[ADD]^^147^148^149^^^141^159^[ADD] if  ( object instanceof List )  { value =  (  ( List )  object ) .get ( 0 ) ; }^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  null.next (  ) ;^152^^^^^141^159^[REPLACE] value = it.next (  ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[ADD]^^152^^^^^141^159^[ADD] value = it.next (  ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Iterator it =  (  ( Collection )  object )  .size (  )  ;^151^^^^^141^159^[REPLACE] Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 2 ) ;^148^^^^^141^159^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 + 2 ) ;^148^^^^^141^159^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[ADD]^^148^^^^^141^159^[ADD] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^return canConvert ( "", toType ) ;^154^^^^^141^159^[REPLACE] return canConvert ( value, toType ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = it.next (  ) ;^146^^^^^141^159^[REPLACE] Object value;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Iterator it =  (  ( Collection )  object ) .size (  ) ;^151^^^^^141^159^[REPLACE] Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[ADD]^^151^^^^^141^159^[ADD] Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 >>> 3 ) ;^148^^^^^141^159^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 / 3 ) ;^148^^^^^141^159^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^return convert ( "", toType ) ;^157^^^^^141^159^[REPLACE] return canConvert ( "", toType ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[ADD]^^151^152^^^^141^159^[ADD] Iterator it =  (  ( Collection )  object ) .iterator (  ) ; value = it.next (  ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^return canCreateCollection ( fromType ) ;^142^^^^^48^168^[REPLACE] return canCreateCollection ( toType ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  object ) .size (  )  *  0.5  > 0 )  {^145^^^^^48^168^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^return canConvert ( "", fromType ) ;^157^^^^^145^158^[REPLACE] return canConvert ( "", toType ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( ! object instanceof List )  {^147^^^^^48^168^[REPLACE] if  ( object instanceof List )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[ADD]^value =  (  ( List )  object ) .get ( 0 ) ;^147^148^149^^^48^168^[ADD] if  ( object instanceof List )  { value =  (  ( List )  object ) .get ( 0 ) ; }^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  null.next (  ) ;^152^^^^^147^153^[REPLACE] value = it.next (  ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[ADD]^^152^^^^^147^153^[ADD] value = it.next (  ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Iterator it =  (  ( Collection )  object ) .size (  ) ;^151^^^^^147^153^[REPLACE] Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 + 4 ) ;^148^^^^^48^168^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 2 ) ;^148^^^^^48^168^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  null.next (  ) ;^152^^^^^48^168^[REPLACE] value = it.next (  ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[ADD]^^152^^^^^48^168^[ADD] value = it.next (  ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^return canConvert ( "", toType ) ;^154^^^^^48^168^[REPLACE] return canConvert ( value, toType ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = it.next (  ) ;^146^^^^^48^168^[REPLACE] Object value;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Iterator it =  (  ( Collection )  object ) .size (  ) ;^151^^^^^48^168^[REPLACE] Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 * 3 ) ;^148^^^^^48^168^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 - 3 ) ;^148^^^^^48^168^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[ADD]^^148^^^^^48^168^[ADD] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^return convert ( "", toType ) ;^157^^^^^48^168^[REPLACE] return canConvert ( "", toType ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[ADD]^^151^^^^^48^168^[ADD] Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^return false;^139^^^^^48^168^[REPLACE] return true;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Class cType = fromType.getComponentType (  ) ;^131^^^^^48^168^[REPLACE] Class cType = toType.getComponentType (  ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[ADD]^^131^^^^^48^168^[ADD] Class cType = toType.getComponentType (  ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Iterator it =  (  ( Collection )  object )  .size (  )  ;^132^^^^^48^168^[REPLACE] Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  object ) .size (  )  + 5 > 0  )  {^145^^^^^141^159^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 3 ) ;^148^^^^^141^159^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 >> 2 ) ;^148^^^^^141^159^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 4 ) ;^148^^^^^141^159^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 1 ) ;^148^^^^^141^159^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[ADD]^value = it.next (  ) ;^151^152^^^^141^159^[ADD] Iterator it =  (  ( Collection )  object ) .iterator (  ) ; value = it.next (  ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  bean ) .size (  )  - 1 > 0  )  {^145^^^^^48^168^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 1 ) ;^148^^^^^48^168^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 / 1 ) ;^148^^^^^48^168^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Iterator it =  (  ( Collection )  object )  .size (  )  ;^151^^^^^48^168^[REPLACE] Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[ADD]^^147^148^149^^^48^168^[ADD] if  ( object instanceof List )  { value =  (  ( List )  object ) .get ( 0 ) ; }^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Iterator it =  (  ( Collection )  object )  .size (  )  ;^151^^^^^147^153^[REPLACE] Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[ADD]^^151^^^^^147^153^[ADD] Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^return canConvert ( value, fromType ) ;^154^^^^^48^168^[REPLACE] return canConvert ( value, toType ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^return canConvert ( "", fromType ) ;^157^^^^^48^168^[REPLACE] return canConvert ( "", toType ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[ADD]^^132^^^^^48^168^[ADD] Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[ADD]^^151^152^^^^48^168^[ADD] Iterator it =  (  ( Collection )  object ) .iterator (  ) ; value = it.next (  ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[ADD]^Class cType = toType.getComponentType (  ) ;Iterator it =  (  ( Collection )  object ) .iterator (  ) ;Object value = it.next (  ) ;^130^131^132^133^134^48^168^[ADD] if  ( toType.isArray (  )  )  { Class cType = toType.getComponentType (  ) ; Iterator it =  (  ( Collection )  object ) .iterator (  ) ; while  ( it.hasNext (  )  )  { Object value = it.next (  ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  bean ) .size (  )  + 3 > 0 )  {^145^^^^^141^159^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( ! bean instanceof List )  {^147^^^^^141^159^[REPLACE] if  ( object instanceof List )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[ADD]^value =  (  ( List )  object ) .get ( 0 ) ;^147^148^149^^^141^159^[ADD] if  ( object instanceof List )  { value =  (  ( List )  object ) .get ( 0 ) ; }^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 + 0 ) ;^148^^^^^141^159^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[ADD]^^146^^^^^141^159^[ADD] Object value;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  object ) .size (  )  - 2 > 0 )  {^145^^^^^48^168^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[ADD]^^145^146^147^148^149^48^168^[ADD] if  (  (  ( Collection )  object ) .size (  )  > 0 )  { Object value; if  ( object instanceof List )  { value =  (  ( List )  object ) .get ( 0 ) ; }^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( ! bean instanceof List )  {^147^^^^^48^168^[REPLACE] if  ( object instanceof List )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 + 1 ) ;^148^^^^^48^168^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 4 ) ;^148^^^^^48^168^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Iterator it =  (  ( Collection )  object ) .size (  ) ;^132^^^^^48^168^[REPLACE] Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[ADD]^return false;^135^136^137^^^48^168^[ADD] if  ( !canConvert ( value, cType )  )  { return false; }^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[ADD]^^141^142^143^^^48^168^[ADD] else if  ( Collection.class.isAssignableFrom ( toType )  )  { return canCreateCollection ( toType ) ; }^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  object ) .length (  )  > 0 )  {^145^^^^^141^159^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0L ) ;^148^^^^^141^159^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  object ) .size (  )  %  0 .5  > 0  )  {^145^^^^^48^168^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^return convert ( "", toType ) ;^157^^^^^145^158^[REPLACE] return canConvert ( "", toType ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 3 ) ;^148^^^^^48^168^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 << 1 ) ;^148^^^^^48^168^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^return canConvert (  (  ( Pointer )  object )  .getValues (  )  , toType ) ;^165^^^^^48^168^[REPLACE] return canConvert (  (  ( Pointer )  object ) .getValue (  ) , toType ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^return convert (  (  ( NodeSet )  object ) .getValues (  ) , toType ) ;^165^^^^^48^168^[REPLACE] return canConvert (  (  ( Pointer )  object ) .getValue (  ) , toType ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( ! object instanceof Pointer )  {^164^^^^^48^168^[REPLACE] else if  ( object instanceof Pointer )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^return canConvert (  (  ( NodeSet )  object ) .getValue (  ) , toType ) ;^162^^^^^48^168^[REPLACE] return canConvert (  (  ( NodeSet )  object ) .getValues (  ) , toType ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^return canConvert (  (  ( Pointer )  object )  .getValues (  )  , fromType ) ;^165^^^^^48^168^[REPLACE] return canConvert (  (  ( Pointer )  object ) .getValue (  ) , toType ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[ADD]^^146^^^^^48^168^[ADD] Object value;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^else if  ( fromType.isArray (  )  )  {^104^^^^^48^168^[REPLACE] if  ( toType.isArray (  )  )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^else {^115^^^^^48^168^[REPLACE] else if  ( Collection.class.isAssignableFrom ( toType )  )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( Array .get ( value , length )    ==  0 )  {^119^^^^^115^126^[REPLACE] if  ( Array.getLength ( object )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[ADD]^^119^120^121^122^^115^126^[ADD] if  ( Array.getLength ( object )  > 0 )  { Object value = Array.get ( object, 0 ) ; return canConvert ( value, toType ) ; }^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^return canConvert ( "", fromType ) ;^124^^^^^115^126^[REPLACE] return canConvert ( "", toType ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^return canConvert ( "", toType ) ;^121^^^^^115^126^[REPLACE] return canConvert ( value, toType ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.newInstance ( object, 3 ) ;^120^^^^^115^126^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.get ( bean, 0L ) ;^120^^^^^115^126^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[ADD]^^120^^^^^115^126^[ADD] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^return canCreateCollection ( fromType ) ;^116^^^^^48^168^[REPLACE] return canCreateCollection ( toType ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( Array.getLength ( object )   <= length )  {^119^^^^^48^168^[REPLACE] if  ( Array.getLength ( object )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[ADD]^Object value = Array.get ( object, 0 ) ;return canConvert ( value, toType ) ;^119^120^121^122^^48^168^[ADD] if  ( Array.getLength ( object )  > 0 )  { Object value = Array.get ( object, 0 ) ; return canConvert ( value, toType ) ; }^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^return canConvert ( "", fromType ) ;^124^^^^^119^125^[REPLACE] return canConvert ( "", toType ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^return canConvert ( value, fromType ) ;^121^^^^^48^168^[REPLACE] return canConvert ( value, toType ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.get ( object, 0 << 0 ) ;^120^^^^^48^168^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^return canConvert ( "", toType ) ;^121^^^^^48^168^[REPLACE] return canConvert ( value, toType ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^return canConvert ( "", fromType ) ;^124^^^^^48^168^[REPLACE] return canConvert ( "", toType ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.get ( object, 0L ) ;^120^^^^^48^168^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( !canConvert ( value, toType )  )  {^109^^^^^48^168^[REPLACE] if  ( !canConvert ( value, cType )  )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[ADD]^return false;^109^110^111^^^48^168^[ADD] if  ( !canConvert ( value, cType )  )  { return false; }^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^return true;^110^^^^^48^168^[REPLACE] return false;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^for  ( int i = 0; i < length %  2; i++ )  {^107^^^^^48^168^[REPLACE] for  ( int i = 0; i < length; i++ )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^return value;^110^^^^^48^168^[REPLACE] return false;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.get ( object, 0 ) ;^108^^^^^48^168^[REPLACE] Object value = Array.get ( object, i ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^return false;^113^^^^^48^168^[REPLACE] return true;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Class cType = fromType.getComponentType (  ) ;^105^^^^^48^168^[REPLACE] Class cType = toType.getComponentType (  ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^int length =   object   ;^106^^^^^48^168^[REPLACE] int length = Array.getLength ( object ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^for  ( int i = 0 ; i < length; i++ )  {^107^^^^^48^168^[REPLACE] for  ( int i = 0; i < length; i++ )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array .get ( length )  ;^108^^^^^48^168^[REPLACE] Object value = Array.get ( object, i ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( Array.getLength ( object )   !=  0 )  {^119^^^^^115^126^[REPLACE] if  ( Array.getLength ( object )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.get ( object, 0 / 1 ) ;^120^^^^^115^126^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^return canConvert ( value, fromType ) ;^121^^^^^115^126^[REPLACE] return canConvert ( value, toType ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^return convert ( "", toType ) ;^124^^^^^115^126^[REPLACE] return canConvert ( "", toType ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.get ( object, 4 ) ;^120^^^^^115^126^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( Array.getLength ( object )   ==  0 )  {^119^^^^^48^168^[REPLACE] if  ( Array.getLength ( object )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.newInstance ( object, 0 - 1 ) ;^120^^^^^48^168^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.get ( bean, i ) ;^108^^^^^48^168^[REPLACE] Object value = Array.get ( object, i ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Class cType = fromType.getModifiers (  ) ;^105^^^^^48^168^[REPLACE] Class cType = toType.getComponentType (  ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^int length = Array.getLength ( bean ) ;^106^^^^^48^168^[REPLACE] int length = Array.getLength ( object ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.newInstance ( object, i ) ;^108^^^^^48^168^[REPLACE] Object value = Array.get ( object, i ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.get ( object, 0 + 2 ) ;^120^^^^^48^168^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( Array.getLength ( object )   >=  0 )  {^119^^^^^115^126^[REPLACE] if  ( Array.getLength ( object )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.get ( object, 0L ) ;^120^^^^^115^126^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.get ( object, 1 ) ;^120^^^^^115^126^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( Array.getLength ( object )   <=  0 )  {^119^^^^^48^168^[REPLACE] if  ( Array.getLength ( object )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.get ( object, 1 ) ;^120^^^^^48^168^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.get ( object, 4 ) ;^120^^^^^48^168^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( canConvert ( value, cType )  )  {^109^^^^^48^168^[REPLACE] if  ( !canConvert ( value, cType )  )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^for  ( int i = 0; i < length (  ) ; i++ )  {^107^^^^^48^168^[REPLACE] for  ( int i = 0; i < length; i++ )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.newInstance ( bean, i ) ;^108^^^^^48^168^[REPLACE] Object value = Array.get ( object, i ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[ADD]^^105^106^^^^48^168^[ADD] Class cType = toType.getComponentType (  ) ; int length = Array.getLength ( object ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[ADD]^^106^^^^^48^168^[ADD] int length = Array.getLength ( object ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( Array.newInstanceLength ( object )   == length )  {^119^^^^^115^126^[REPLACE] if  ( Array.getLength ( object )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.newInstance ( bean, 4 ) ;^120^^^^^115^126^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.get ( object, 0 * 1 ) ;^120^^^^^115^126^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[ADD]^^120^121^^^^115^126^[ADD] Object value = Array.get ( object, 0 ) ; return canConvert ( value, toType ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( Array.getLength ( object )   >=  1 )  {^119^^^^^48^168^[REPLACE] if  ( Array.getLength ( object )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^return convert ( "", toType ) ;^124^^^^^119^125^[REPLACE] return canConvert ( "", toType ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.get ( object, 2 ) ;^120^^^^^48^168^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[ADD]^^120^^^^^48^168^[ADD] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^else if  ( ! object instanceof Collection )  {^128^^^^^48^168^[REPLACE] else if  ( object instanceof Collection )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[ADD]^^164^165^166^^^48^168^[ADD] else if  ( object instanceof Pointer )  { return canConvert (  (  ( Pointer )  object ) .getValue (  ) , toType ) ; }^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^else if  ( Collection.class .isInterface (  )   )  {^141^^^^^48^168^[REPLACE] else if  ( Collection.class.isAssignableFrom ( toType )  )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[ADD]^return canCreateCollection ( toType ) ;^141^142^143^^^48^168^[ADD] else if  ( Collection.class.isAssignableFrom ( toType )  )  { return canCreateCollection ( toType ) ; }^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 / 1 ) ;^148^^^^^141^159^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 >>> 1 ) ;^148^^^^^141^159^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 * 3 ) ;^148^^^^^141^159^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^return canConvert ( value, fromType ) ;^154^^^^^141^159^[REPLACE] return canConvert ( value, toType ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  object ) .size (  )  + 5 > 0 )  {^145^^^^^48^168^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0L ) ;^148^^^^^48^168^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( Collection.class.isAssignableFrom ( toType )  )  {^141^^^^^48^168^[REPLACE] else if  ( Collection.class.isAssignableFrom ( toType )  )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  object ) .size (  )  %  2 > 0 )  {^145^^^^^141^159^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 / 4 ) ;^148^^^^^141^159^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 << 2 ) ;^148^^^^^141^159^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  object ) .size (  )  /  2 > 0 )  {^145^^^^^48^168^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( fromType.isArray (  )  )  {^130^^^^^48^168^[REPLACE] if  ( toType.isArray (  )  )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  object ) .size (  )  - 4 > 0 )  {^145^^^^^141^159^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[ADD]^^151^152^^^^147^153^[ADD] Iterator it =  (  ( Collection )  object ) .iterator (  ) ; value = it.next (  ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 >> 1 ) ;^148^^^^^48^168^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 / 2 ) ;^148^^^^^48^168^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Class cType = fromType.getModifiers (  ) ;^131^^^^^48^168^[REPLACE] Class cType = toType.getComponentType (  ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  object ) .size (  )  /  2 > 0 )  {^145^^^^^141^159^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 - 1 ) ;^148^^^^^141^159^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 * 0 ) ;^148^^^^^141^159^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  object ) .size (  )  + 4 > 0 )  {^145^^^^^48^168^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 >> 2 ) ;^148^^^^^48^168^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 / 3 ) ;^148^^^^^48^168^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( ! object instanceof NodeSet )  {^161^^^^^48^168^[REPLACE] else if  ( object instanceof NodeSet )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[ADD]^^105^^^^^48^168^[ADD] Class cType = toType.getComponentType (  ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.get ( bean, 0 * 4 ) ;^120^^^^^48^168^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[ADD]^^131^132^^^^48^168^[ADD] Class cType = toType.getComponentType (  ) ; Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( toType .isArray (  )   )  {^88^^^^^48^168^[REPLACE] if  ( toType.isPrimitive (  )  )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^return false;^89^^^^^48^168^[REPLACE] return true;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( toType == Boolean.class && toType == Character.class && toType == Byte.class && toType == Short.class^91^92^93^94^^48^168^[REPLACE] if  ( toType == Boolean.class || toType == Character.class || toType == Byte.class || toType == Short.class^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^return false;^99^^^^^91^100^[REPLACE] return true;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^return false;^99^^^^^48^168^[REPLACE] return true;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( toType.isArray (  )  )  {^88^^^^^48^168^[REPLACE] if  ( toType.isPrimitive (  )  )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( fromType == Boolean.class && toType == Character.class && toType == Byte.class && toType == Short.class^91^92^93^94^^48^168^[REPLACE] if  ( toType == Boolean.class || toType == Character.class || toType == Byte.class || toType == Short.class^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^else {^102^^^^^48^168^[REPLACE] else if  ( fromType.isArray (  )  )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^else {^128^^^^^48^168^[REPLACE] else if  ( object instanceof Collection )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^else if  ( ! object instanceof Pointer )  {^164^^^^^48^168^[REPLACE] else if  ( object instanceof Pointer )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  bean ) .size (  )  *  0 .5  > 0  )  {^145^^^^^141^159^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 - 3 ) ;^148^^^^^141^159^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 - 1 ) ;^148^^^^^48^168^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[ADD]^Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^131^132^^^^48^168^[ADD] Class cType = toType.getComponentType (  ) ; Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  object ) .size (  )  *  2 > 0  )  {^145^^^^^141^159^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  object ) .size (  )  + 3 > 0 )  {^145^^^^^48^168^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  object ) .size (  )  - 5 > 0  )  {^145^^^^^141^159^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  object ) .length (  )  > 0 )  {^145^^^^^48^168^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 >>> 0 ) ;^148^^^^^48^168^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 + 0 ) ;^148^^^^^48^168^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( toType == Object.class )  {^141^^^^^48^168^[REPLACE] else if  ( Collection.class.isAssignableFrom ( toType )  )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  bean ) .iterator (  )  %  0 .5  > 0  )  {^145^^^^^141^159^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 - 0 ) ;^148^^^^^141^159^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  object ) .size (  )  /  0.5  > 0 )  {^145^^^^^48^168^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 - 0 ) ;^148^^^^^48^168^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 * 4 ) ;^148^^^^^48^168^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^else if  ( ! bean instanceof Pointer )  {^164^^^^^48^168^[REPLACE] else if  ( object instanceof Pointer )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[ADD]^Class cType = toType.getComponentType (  ) ;int length = Array.getLength ( object ) ;^104^105^106^107^108^48^168^[ADD] if  ( toType.isArray (  )  )  { Class cType = toType.getComponentType (  ) ; int length = Array.getLength ( object ) ; for  ( int i = 0; i < length; i++ )  { Object value = Array.get ( object, i ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[ADD]^return canCreateCollection ( toType ) ;^115^116^117^^^48^168^[ADD] else if  ( Collection.class.isAssignableFrom ( toType )  )  { return canCreateCollection ( toType ) ; }^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( Array.newInstanceLength ( object )   ==  0 )  {^119^^^^^115^126^[REPLACE] if  ( Array.getLength ( object )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[ADD]^Object value = Array.get ( object, 0 ) ;return canConvert ( value, toType ) ;^119^120^121^122^^115^126^[ADD] if  ( Array.getLength ( object )  > 0 )  { Object value = Array.get ( object, 0 ) ; return canConvert ( value, toType ) ; }^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.get ( object, 3 ) ;^120^^^^^115^126^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array .get ( i )  ;^120^^^^^115^126^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^return new Short (  ( String )  object ) ;^116^^^^^48^168^[REPLACE] return canCreateCollection ( toType ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( Array.getLength ( object )   !=  0 << 2 )  {^119^^^^^48^168^[REPLACE] if  ( Array.getLength ( object )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.get ( object, 0 >>> 2 ) ;^120^^^^^48^168^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[ADD]^^109^110^111^^^48^168^[ADD] if  ( !canConvert ( value, cType )  )  { return false; }^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^for  ( int i = 0; i < length *  0.5 ; i++ )  {^107^^^^^48^168^[REPLACE] for  ( int i = 0; i < length; i++ )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[ADD]^^108^^^^^48^168^[ADD] Object value = Array.get ( object, i ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^int length = Array .get ( value , i )  ;^106^^^^^48^168^[REPLACE] int length = Array.getLength ( object ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[ADD]^^107^108^109^110^111^48^168^[ADD] for  ( int i = 0; i < length; i++ )  { Object value = Array.get ( object, i ) ; if  ( !canConvert ( value, cType )  )  { return false; }^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^else if  ( Collection.class.isAssignableFrom ( fromType )  )  {^115^^^^^48^168^[REPLACE] else if  ( Collection.class.isAssignableFrom ( toType )  )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( Array.getLength ( bean )   ==  0 )  {^119^^^^^115^126^[REPLACE] if  ( Array.getLength ( object )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.newInstance ( bean, 1 ) ;^120^^^^^115^126^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( Array.getLength ( object )   >=  0 )  {^119^^^^^48^168^[REPLACE] if  ( Array.getLength ( object )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^for  ( int i = 0 ; i < length *  0 .5 ; i++ )  {^107^^^^^48^168^[REPLACE] for  ( int i = 0; i < length; i++ )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array .get ( i )  ;^108^^^^^48^168^[REPLACE] Object value = Array.get ( object, i ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.newInstance ( object, 1 ) ;^120^^^^^48^168^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[ADD]^^115^116^117^^^48^168^[ADD] else if  ( Collection.class.isAssignableFrom ( toType )  )  { return canCreateCollection ( toType ) ; }^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( Array.getLength ( object )   ==  0 )  {^119^^^^^115^126^[REPLACE] if  ( Array.getLength ( object )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.get ( bean, 0 - 0 ) ;^120^^^^^115^126^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.get ( object, 0 + 2 ) ;^120^^^^^115^126^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( Array.getLength ( object )   ==  4 )  {^119^^^^^48^168^[REPLACE] if  ( Array.getLength ( object )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.get ( object, 3 ) ;^120^^^^^48^168^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^for  ( int i = 0 ; i < length /  2; i++ )  {^107^^^^^48^168^[REPLACE] for  ( int i = 0; i < length; i++ )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( Array.getLength ( bean )   <=  0 )  {^119^^^^^115^126^[REPLACE] if  ( Array.getLength ( object )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.get ( bean, 0 - 4 ) ;^120^^^^^115^126^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.newInstance ( object, 0L ) ;^120^^^^^115^126^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[ADD]^^128^129^130^131^132^48^168^[ADD] else if  ( object instanceof Collection )  {  if  ( toType.isArray (  )  )  { Class cType = toType.getComponentType (  ) ; Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[ADD]^^161^162^163^^^48^168^[ADD] else if  ( object instanceof NodeSet )  { return canConvert (  (  ( NodeSet )  object ) .getValues (  ) , toType ) ; }^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( ! bean instanceof Pointer )  {^164^^^^^48^168^[REPLACE] else if  ( object instanceof Pointer )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  object ) .iterator (  )  - 1 > 0 )  {^145^^^^^141^159^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Class cType = toType.getModifiers (  ) ;^131^^^^^48^168^[REPLACE] Class cType = toType.getComponentType (  ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  object ) .size (  )  /  0.5  > 0 )  {^145^^^^^141^159^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 << 0 ) ;^148^^^^^141^159^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 >>> 1 ) ;^148^^^^^48^168^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( Collection.class.isAssignableFrom ( fromType )  )  {^141^^^^^48^168^[REPLACE] else if  ( Collection.class.isAssignableFrom ( toType )  )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[ADD]^Object value;value =  (  ( List )  object ) .get ( 0 ) ;^145^146^147^148^149^141^159^[ADD] if  (  (  ( Collection )  object ) .size (  )  > 0 )  { Object value; if  ( object instanceof List )  { value =  (  ( List )  object ) .get ( 0 ) ; }^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 - 2 ) ;^148^^^^^141^159^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 << 4 ) ;^148^^^^^48^168^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 >>> 2 ) ;^148^^^^^141^159^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 % 1 ) ;^148^^^^^48^168^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^for  ( int i = 0; i < length + 1; i++ )  {^107^^^^^48^168^[REPLACE] for  ( int i = 0; i < length; i++ )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^return convert ( "", toType ) ;^124^^^^^48^168^[REPLACE] return canConvert ( "", toType ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.get ( object, 0 + 3 ) ;^120^^^^^48^168^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[ADD]^^120^121^^^^48^168^[ADD] Object value = Array.get ( object, 0 ) ; return canConvert ( value, toType ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (fromType  !=  char.class )  {^83^^^^^48^168^[REPLACE] if  ( toType == char.class )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^return false;^84^^^^^48^168^[REPLACE] return true;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[ADD]^return true;^83^84^85^^^48^168^[ADD] if  ( toType == char.class )  { return true; }^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^else {^87^^^^^48^168^[REPLACE] else if  ( object instanceof String )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^return canConvert (  (  ( NodeSet )  object )  .getValue (  )  , fromType ) ;^162^^^^^48^168^[REPLACE] return canConvert (  (  ( NodeSet )  object ) .getValues (  ) , toType ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[ADD]^^130^131^132^133^134^48^168^[ADD] if  ( toType.isArray (  )  )  { Class cType = toType.getComponentType (  ) ; Iterator it =  (  ( Collection )  object ) .iterator (  ) ; while  ( it.hasNext (  )  )  { Object value = it.next (  ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  object ) .size (  )  + 2 > 0  )  {^145^^^^^141^159^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  object ) .size (  )  *  2 > 0 )  {^145^^^^^48^168^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 - 4 ) ;^148^^^^^48^168^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 * 2 ) ;^148^^^^^48^168^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  object ) .length (  )  > 0  )  {^145^^^^^141^159^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 >> 0 ) ;^148^^^^^141^159^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 % 0 ) ;^148^^^^^141^159^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 / 4 ) ;^148^^^^^48^168^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  object ) .length (  )  > 0  )  {^145^^^^^48^168^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[ADD]^Object value;value =  (  ( List )  object ) .get ( 0 ) ;^145^146^147^148^149^48^168^[ADD] if  (  (  ( Collection )  object ) .size (  )  > 0 )  { Object value; if  ( object instanceof List )  { value =  (  ( List )  object ) .get ( 0 ) ; }^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 >>> 3 ) ;^148^^^^^48^168^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[ADD]^value = it.next (  ) ;^151^152^^^^48^168^[ADD] Iterator it =  (  ( Collection )  object ) .iterator (  ) ; value = it.next (  ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.get ( object, 0 - 0 ) ;^120^^^^^115^126^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (   object     >=  0 )  {^119^^^^^48^168^[REPLACE] if  ( Array.getLength ( object )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.get ( object, 0 / 2 ) ;^120^^^^^48^168^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.get ( bean, 2 ) ;^120^^^^^48^168^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^for  ( int i = 0; i < length - 5; i++ )  {^107^^^^^48^168^[REPLACE] for  ( int i = 0; i < length; i++ )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( Collection.class.isAssignableFrom ( toType )  )  {^115^^^^^48^168^[REPLACE] else if  ( Collection.class.isAssignableFrom ( toType )  )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( Array.getLength ( object )   <=  2 )  {^119^^^^^115^126^[REPLACE] if  ( Array.getLength ( object )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( Array.getLength ( bean )   <= length )  {^119^^^^^48^168^[REPLACE] if  ( Array.getLength ( object )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.newInstance ( object, 4 ) ;^120^^^^^48^168^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^for  ( int i = 0; i < length /  0.5 ; i++ )  {^107^^^^^48^168^[REPLACE] for  ( int i = 0; i < length; i++ )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.newInstance ( object, 0 >>> 0 ) ;^120^^^^^48^168^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( Array.getLength ( object )   <= length )  {^119^^^^^115^126^[REPLACE] if  ( Array.getLength ( object )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.newInstance ( bean, 3 ) ;^120^^^^^115^126^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.newInstance ( object, 0 / 0 ) ;^120^^^^^115^126^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.get ( bean, 1 ) ;^120^^^^^48^168^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^for  ( int i = 0; i < length - 3; i++ )  {^107^^^^^48^168^[REPLACE] for  ( int i = 0; i < length; i++ )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( Array.getLength ( object )   <  0 )  {^119^^^^^115^126^[REPLACE] if  ( Array.getLength ( object )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.newInstance ( object, 0 << 1 ) ;^120^^^^^115^126^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (   object     < length )  {^119^^^^^48^168^[REPLACE] if  ( Array.getLength ( object )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[ADD]^^119^120^121^122^^48^168^[ADD] if  ( Array.getLength ( object )  > 0 )  { Object value = Array.get ( object, 0 ) ; return canConvert ( value, toType ) ; }^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.newInstance ( bean, 0 + 0 ) ;^120^^^^^48^168^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^return canConvert (  (  ( NodeSet )  object )  .getValue (  )  , toType ) ;^162^^^^^48^168^[REPLACE] return canConvert (  (  ( NodeSet )  object ) .getValues (  ) , toType ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  object ) .size (  )  %  0.5  > 0 )  {^145^^^^^141^159^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 * 2 ) ;^148^^^^^141^159^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 - 2 ) ;^148^^^^^48^168^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  object ) .iterator (  )  + 3 > 0 )  {^145^^^^^141^159^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 % 4 ) ;^148^^^^^141^159^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 << 1 ) ;^148^^^^^141^159^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  object ) .size (  )  %  0.5  > 0 )  {^145^^^^^48^168^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 << 0 ) ;^148^^^^^48^168^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 % 3 ) ;^148^^^^^48^168^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  object ) .size (  )  %  2 > 0  )  {^145^^^^^141^159^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( Collection.class .isInterface (  )   )  {^141^^^^^48^168^[REPLACE] else if  ( Collection.class.isAssignableFrom ( toType )  )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  object ) .size (  )  + 4 > 0 )  {^145^^^^^141^159^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  object ) .size (  )  - 1 > 0 )  {^145^^^^^48^168^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^for  ( int i = 0 ; i < length *  2; i++ )  {^107^^^^^48^168^[REPLACE] for  ( int i = 0; i < length; i++ )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[ADD]^^91^92^93^94^95^48^168^[ADD] if  ( toType == Boolean.class || toType == Character.class || toType == Byte.class || toType == Short.class || toType == Integer.class^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( fromType .isArray (  )   )  {^88^^^^^48^168^[REPLACE] if  ( toType.isPrimitive (  )  )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^else if  ( ! object instanceof NodeSet )  {^161^^^^^48^168^[REPLACE] else if  ( object instanceof NodeSet )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 << 4 ) ;^148^^^^^141^159^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  object ) .size (  )  - 4 > 0 )  {^145^^^^^48^168^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[ADD]^value = it.next (  ) ;^151^152^^^^147^153^[ADD] Iterator it =  (  ( Collection )  object ) .iterator (  ) ; value = it.next (  ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  object ) .size (  )  - 1 > 0 )  {^145^^^^^141^159^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  object ) .size (  )  - 5 > 0 )  {^145^^^^^48^168^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  object ) .size (  )  - 1 > 0  )  {^145^^^^^48^168^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  object ) .size (  )  - 3 > 0 )  {^145^^^^^141^159^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  object ) .size (  )  + 1 > 0  )  {^145^^^^^48^168^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.get ( object, 0 - 4 ) ;^120^^^^^115^126^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( Array.getLength ( object )   <  3 )  {^119^^^^^48^168^[REPLACE] if  ( Array.getLength ( object )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.get ( object, 0 + 4 ) ;^120^^^^^48^168^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^for  ( int i = 0; i < length /  2; i++ )  {^107^^^^^48^168^[REPLACE] for  ( int i = 0; i < length; i++ )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.get ( object, 2 ) ;^120^^^^^115^126^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( Array.getLength ( object )   <  0 )  {^119^^^^^48^168^[REPLACE] if  ( Array.getLength ( object )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^int length =   bean   ;^106^^^^^48^168^[REPLACE] int length = Array.getLength ( object ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.get ( object, 0 * 0 ) ;^120^^^^^48^168^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( Array.getLength ( object )   <=  0 )  {^119^^^^^115^126^[REPLACE] if  ( Array.getLength ( object )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (   bean     ==  0 )  {^119^^^^^48^168^[REPLACE] if  ( Array.getLength ( object )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.newInstance ( object, 0L ) ;^120^^^^^48^168^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array .get ( length )  ;^120^^^^^48^168^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^for  ( int i = 0; i < length + 4; i++ )  {^107^^^^^48^168^[REPLACE] for  ( int i = 0; i < length; i++ )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( toType == boolean.class || toType == Boolean.class )  {^109^^^^^48^168^[REPLACE] if  ( !canConvert ( value, cType )  )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( Array.getLength ( object )   == length )  {^119^^^^^115^126^[REPLACE] if  ( Array.getLength ( object )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.get ( object, 0 / 2 ) ;^120^^^^^115^126^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( Array .get ( object , length )    >=  0 )  {^119^^^^^48^168^[REPLACE] if  ( Array.getLength ( object )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.get ( object, 0 - 0 ) ;^120^^^^^48^168^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^else if  ( ! bean instanceof Collection )  {^128^^^^^48^168^[REPLACE] else if  ( object instanceof Collection )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^return canConvert (  (  ( Pointer )  object ) .getValues (  ) , fromType ) ;^165^^^^^48^168^[REPLACE] return canConvert (  (  ( Pointer )  object ) .getValue (  ) , toType ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  object ) .size (  )  + 4 > 0  )  {^145^^^^^141^159^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 % 3 ) ;^148^^^^^141^159^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( toType == boolean.class || toType == Boolean.class )  {^135^^^^^48^168^[REPLACE] if  ( !canConvert ( value, cType )  )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  bean ) .size (  )  /  2 > 0  )  {^145^^^^^141^159^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  object ) .size (  )  *  0.5  > 0 )  {^145^^^^^141^159^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[ADD]^^145^146^147^148^149^141^159^[ADD] if  (  (  ( Collection )  object ) .size (  )  > 0 )  { Object value; if  ( object instanceof List )  { value =  (  ( List )  object ) .get ( 0 ) ; }^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  object ) .size (  )  *  2 > 0  )  {^145^^^^^48^168^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.get ( bean, 4 ) ;^120^^^^^48^168^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Class cType = fromType .getModifiers (  )  ;^131^^^^^48^168^[REPLACE] Class cType = toType.getComponentType (  ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  Number.class.isAssignableFrom ( toType )  )  {^77^78^^^^48^168^[REPLACE] if  ( toType.isPrimitive (  ) || Number.class.isAssignableFrom ( toType )  )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[ADD]^^77^78^79^80^^48^168^[ADD] if  ( toType.isPrimitive (  ) || Number.class.isAssignableFrom ( toType )  )  { return true; }^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^return false;^79^^^^^77^80^[REPLACE] return true;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^return false;^79^^^^^48^168^[REPLACE] return true;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( toType.isPrimitive (  ) && Number.class.isAssignableFrom ( toType )  )  {^77^78^^^^48^168^[REPLACE] if  ( toType.isPrimitive (  ) || Number.class.isAssignableFrom ( toType )  )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^else if  ( ! object instanceof Character )  {^82^^^^^48^168^[REPLACE] else if  ( object instanceof Character )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[ADD]^^102^103^104^105^106^48^168^[ADD] else if  ( fromType.isArray (  )  )  {  if  ( toType.isArray (  )  )  { Class cType = toType.getComponentType (  ) ; int length = Array.getLength ( object ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 % 2 ) ;^148^^^^^141^159^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 >> 3 ) ;^148^^^^^48^168^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 * 4 ) ;^148^^^^^141^159^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  bean ) .size (  )  + 5 > 0 )  {^145^^^^^141^159^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 >> 0 ) ;^148^^^^^48^168^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( Array.getLength ( object )   <  0L )  {^119^^^^^115^126^[REPLACE] if  ( Array.getLength ( object )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( Array.getLength ( object )   <=  0L )  {^119^^^^^48^168^[REPLACE] if  ( Array.getLength ( object )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^for  ( int i = 0; i < length - 2; i++ )  {^107^^^^^48^168^[REPLACE] for  ( int i = 0; i < length; i++ )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( Array.getLength ( object )   >=  0 << 1 )  {^119^^^^^115^126^[REPLACE] if  ( Array.getLength ( object )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( Array.getLength ( object )   !=  0 )  {^119^^^^^48^168^[REPLACE] if  ( Array.getLength ( object )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^for  ( int i = 0 ; i < length + 2; i++ )  {^107^^^^^48^168^[REPLACE] for  ( int i = 0; i < length; i++ )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[ADD]^^104^105^106^107^108^48^168^[ADD] if  ( toType.isArray (  )  )  { Class cType = toType.getComponentType (  ) ; int length = Array.getLength ( object ) ; for  ( int i = 0; i < length; i++ )  { Object value = Array.get ( object, i ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( Collection.class.isAssignableFrom ( fromType )  )  {^115^^^^^48^168^[REPLACE] else if  ( Collection.class.isAssignableFrom ( toType )  )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( Array.getLength ( bean )   <=  1 )  {^119^^^^^115^126^[REPLACE] if  ( Array.getLength ( object )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( Array.getLength ( bean )   >=  0 )  {^119^^^^^48^168^[REPLACE] if  ( Array.getLength ( object )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array .get ( i )  ;^120^^^^^48^168^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.get ( bean, 0 << 2 ) ;^120^^^^^115^126^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( Array .get ( i )   {^119^^^^^48^168^[REPLACE] if  ( Array.getLength ( object )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 >> 1 ) ;^148^^^^^141^159^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  object ) .size (  )  + 2 > 0  )  {^145^^^^^48^168^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 >> 4 ) ;^148^^^^^141^159^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  object ) .size (  )  - 3 > 0  )  {^145^^^^^48^168^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 + 1 ) ;^148^^^^^141^159^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 / 0 ) ;^148^^^^^141^159^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  object ) .size (  )  /  2 > 0  )  {^145^^^^^141^159^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^return new Short (  ( String )  object ) ;^142^^^^^48^168^[REPLACE] return canCreateCollection ( toType ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  object ) .size (  )  + 5 > 0  )  {^145^^^^^48^168^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( fromType.isPrimitive (  )  )  {^88^^^^^48^168^[REPLACE] if  ( toType.isPrimitive (  )  )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[ADD]^return true;^88^89^90^^^48^168^[ADD] if  ( toType.isPrimitive (  )  )  { return true; }^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^return canConvert (  (  ( NodeSet )  object ) .getValue (  ) , fromType ) ;^162^^^^^48^168^[REPLACE] return canConvert (  (  ( NodeSet )  object ) .getValues (  ) , toType ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  object ) .size (  )  /  2 > 0  )  {^145^^^^^48^168^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  object ) .size (  )  + 5 > 0 )  {^145^^^^^141^159^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  object ) .iterator (  )  - 1 > 0  )  {^145^^^^^48^168^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 / 0 ) ;^148^^^^^48^168^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Class cType = toType .getModifiers (  )  ;^131^^^^^48^168^[REPLACE] Class cType = toType.getComponentType (  ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( Array.getLength ( object )   >=  2 )  {^119^^^^^115^126^[REPLACE] if  ( Array.getLength ( object )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.get ( object, 0 >> 4 ) ;^120^^^^^115^126^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^for  ( int i = 0; i < length + 2; i++ )  {^107^^^^^48^168^[REPLACE] for  ( int i = 0; i < length; i++ )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( Array.getLength ( bean )   !=  0 )  {^119^^^^^115^126^[REPLACE] if  ( Array.getLength ( object )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( Array.getLength ( object )   <  2 )  {^119^^^^^48^168^[REPLACE] if  ( Array.getLength ( object )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Class cType = toType.getModifiers (  ) ;^105^^^^^48^168^[REPLACE] Class cType = toType.getComponentType (  ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^int length = Array .get ( value , length )  ;^106^^^^^48^168^[REPLACE] int length = Array.getLength ( object ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.newInstance ( object, 3 ) ;^120^^^^^48^168^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( Array.newInstanceLength ( object )   < length )  {^119^^^^^48^168^[REPLACE] if  ( Array.getLength ( object )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.newInstance ( object, 2 ) ;^120^^^^^115^126^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( Array.getLength ( object )   != length )  {^119^^^^^48^168^[REPLACE] if  ( Array.getLength ( object )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  object ) .size (  )  - 4 > 0  )  {^145^^^^^141^159^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  object ) .size (  )  - 4 > 0  )  {^145^^^^^48^168^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 % 4 ) ;^148^^^^^48^168^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 >> 3 ) ;^148^^^^^141^159^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  object ) .size (  )  - 3 > 0 )  {^145^^^^^48^168^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 % 0 ) ;^148^^^^^48^168^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  object ) .size (  )  %  2 > 0  )  {^145^^^^^48^168^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  object ) .size (  )  *  2 > 0 )  {^145^^^^^141^159^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( ! bean instanceof NodeSet )  {^161^^^^^48^168^[REPLACE] else if  ( object instanceof NodeSet )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^for  ( int i = 0; i < length %  0.5 ; i++ )  {^107^^^^^48^168^[REPLACE] for  ( int i = 0; i < length; i++ )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.get ( bean, 0L ) ;^120^^^^^48^168^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( toType  &&  char.class )  {^83^^^^^48^168^[REPLACE] if  ( toType == char.class )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (fromType  ||  char.class )  {^83^^^^^48^168^[REPLACE] if  ( toType == char.class )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 + 3 ) ;^148^^^^^141^159^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  object ) .iterator (  )  + 5 > 0 )  {^145^^^^^48^168^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 + 2 ) ;^148^^^^^48^168^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  bean ) .size (  )  - 5 > 0 )  {^145^^^^^141^159^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 - 4 ) ;^148^^^^^141^159^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  object ) .size (  )  %  2 > 0 )  {^145^^^^^48^168^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( Array.getLength ( object )   <  4 )  {^119^^^^^115^126^[REPLACE] if  ( Array.getLength ( object )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.get ( object, 0 - 1 ) ;^120^^^^^115^126^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( Array.getLength ( object )   <=  3 )  {^119^^^^^48^168^[REPLACE] if  ( Array.getLength ( object )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^for  ( int i = 0 ; i < length (  ) ; i++ )  {^107^^^^^48^168^[REPLACE] for  ( int i = 0; i < length; i++ )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.get ( object, 0 >>> 4 ) ;^120^^^^^48^168^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[ADD]^return canConvert ( value, toType ) ;^120^121^^^^48^168^[ADD] Object value = Array.get ( object, 0 ) ; return canConvert ( value, toType ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( toType == Object.class )  {^115^^^^^48^168^[REPLACE] else if  ( Collection.class.isAssignableFrom ( toType )  )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.newInstance ( bean, 0 / 2 ) ;^120^^^^^115^126^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( Array.getLength ( object )   <=  4 )  {^119^^^^^48^168^[REPLACE] if  ( Array.getLength ( object )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( Array.getLength ( object )   !=  4 )  {^119^^^^^115^126^[REPLACE] if  ( Array.getLength ( object )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  object )  .iterator (  )   + 1 > 0  )  {^145^^^^^48^168^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 >> 4 ) ;^148^^^^^48^168^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 * 1 ) ;^148^^^^^48^168^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Class cType = fromType .getModifiers (  )  ;^105^^^^^48^168^[REPLACE] Class cType = toType.getComponentType (  ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[ADD]^int length = Array.getLength ( object ) ;^105^106^^^^48^168^[ADD] Class cType = toType.getComponentType (  ) ; int length = Array.getLength ( object ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.get ( object, 0 / 0 ) ;^120^^^^^48^168^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  object ) .size (  )  + 1 > 0 )  {^145^^^^^48^168^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^else if  ( ! bean instanceof NodeSet )  {^161^^^^^48^168^[REPLACE] else if  ( object instanceof NodeSet )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.get ( bean, 0 / 1 ) ;^120^^^^^115^126^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.newInstance ( bean, 0 * 1 ) ;^120^^^^^48^168^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^int length = Array .get ( object , length )  ;^106^^^^^48^168^[REPLACE] int length = Array.getLength ( object ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.get ( bean, 4 ) ;^120^^^^^115^126^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array .get ( length )  ;^120^^^^^115^126^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( Array.newInstanceLength ( object )   <=  0 )  {^119^^^^^48^168^[REPLACE] if  ( Array.getLength ( object )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( Array.getLength ( object )   >=  0 / 0 )  {^119^^^^^48^168^[REPLACE] if  ( Array.getLength ( object )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.newInstance ( bean, 0 + 2 ) ;^120^^^^^48^168^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Class cType = toType .getModifiers (  )  ;^105^^^^^48^168^[REPLACE] Class cType = toType.getComponentType (  ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( Array.getLength ( object )   <=  0 / 2 )  {^119^^^^^115^126^[REPLACE] if  ( Array.getLength ( object )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.newInstance ( bean, 2 ) ;^120^^^^^115^126^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  object ) .size (  )  /  0 .5  > 0  )  {^145^^^^^48^168^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 >>> 4 ) ;^148^^^^^48^168^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  object ) .size (  )  /  0 .5  > 0  )  {^145^^^^^141^159^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.newInstance ( object, 2 ) ;^120^^^^^48^168^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  Number.class.isAssignableFrom ( toType )  )  {^71^72^^^^48^168^[REPLACE] if  ( toType == boolean.class || Number.class.isAssignableFrom ( toType )  )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[ADD]^^71^72^73^74^^48^168^[ADD] if  ( toType == boolean.class || Number.class.isAssignableFrom ( toType )  )  { return true; }^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^return false;^73^^^^^71^74^[REPLACE] return true;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^return false;^73^^^^^48^168^[REPLACE] return true;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( fromType == boolean.class ) {^71^72^^^^48^168^[REPLACE] if  ( toType == boolean.class || Number.class.isAssignableFrom ( toType )  )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^else if  ( ! object instanceof String )  {^87^^^^^48^168^[REPLACE] else if  ( object instanceof String )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  object ) .size (  )  + 2 > 0 )  {^145^^^^^141^159^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  object ) .size (  )  - 3 > 0  )  {^145^^^^^141^159^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  bean ) .size (  )  /  0.5  > 0 )  {^145^^^^^48^168^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^for  ( int i = 0 ; i < length /  0 .5 ; i++ )  {^107^^^^^48^168^[REPLACE] for  ( int i = 0; i < length; i++ )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (   object     !=  0 )  {^119^^^^^115^126^[REPLACE] if  ( Array.getLength ( object )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.get ( bean, 0 / 0 ) ;^120^^^^^115^126^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (   object     <=  0 % 2 )  {^119^^^^^48^168^[REPLACE] if  ( Array.getLength ( object )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.get ( object, 0 / 1 ) ;^120^^^^^48^168^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( Array.newInstanceLength ( object )   <=  0 )  {^119^^^^^115^126^[REPLACE] if  ( Array.getLength ( object )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.get ( object, 0 % 0 ) ;^120^^^^^48^168^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^for  ( int i = 0 ; i < length + 5; i++ )  {^107^^^^^48^168^[REPLACE] for  ( int i = 0; i < length; i++ )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.get ( bean, 0 % 4 ) ;^120^^^^^115^126^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  object ) .size (  )  - 5 > 0 )  {^145^^^^^141^159^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 * 0 ) ;^148^^^^^48^168^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  object ) .size (  )  *  0 .5  > 0  )  {^145^^^^^141^159^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.get ( bean, 3 ) ;^120^^^^^48^168^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  object ) .iterator (  )  /  0.5  > 0 )  {^145^^^^^141^159^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 >>> 2 ) ;^148^^^^^48^168^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 >>> 4 ) ;^148^^^^^141^159^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  object ) .size (  )  + 3 > 0  )  {^145^^^^^141^159^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.get ( bean, 0 - 3 ) ;^120^^^^^115^126^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( Array.getLength ( object )   >=  0 / 4 )  {^119^^^^^48^168^[REPLACE] if  ( Array.getLength ( object )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( Array.newInstanceLength ( object )   <= length )  {^119^^^^^115^126^[REPLACE] if  ( Array.getLength ( object )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.newInstance ( bean, 0 + 4 ) ;^120^^^^^115^126^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.newInstance ( bean, 1 ) ;^120^^^^^48^168^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^for  ( int i = 0 ; i < length - 1; i++ )  {^107^^^^^48^168^[REPLACE] for  ( int i = 0; i < length; i++ )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( Array .get ( length )   {^119^^^^^115^126^[REPLACE] if  ( Array.getLength ( object )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.get ( object, 0 - 2 ) ;^120^^^^^115^126^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[ADD]^return canConvert ( value, toType ) ;^120^121^^^^115^126^[ADD] Object value = Array.get ( object, 0 ) ; return canConvert ( value, toType ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^int length = Array .get ( bean , length )  ;^106^^^^^48^168^[REPLACE] int length = Array.getLength ( object ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.get ( bean, 1 ) ;^120^^^^^115^126^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 >>> 0 ) ;^148^^^^^141^159^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  bean ) .size (  )  - 4 > 0 )  {^145^^^^^48^168^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  object ) .size (  )  + 1 > 0 )  {^145^^^^^141^159^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  bean ) .size (  )  %  2 > 0 )  {^145^^^^^48^168^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.get ( object, 0 - 2 ) ;^120^^^^^48^168^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( toType  !=  char.class )  {^83^^^^^48^168^[REPLACE] if  ( toType == char.class )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( ! bean instanceof Collection )  {^128^^^^^48^168^[REPLACE] else if  ( object instanceof Collection )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 % 2 ) ;^148^^^^^48^168^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^for  ( int i = 0; i < length *  2; i++ )  {^107^^^^^48^168^[REPLACE] for  ( int i = 0; i < length; i++ )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.newInstance ( object, 0 + 3 ) ;^120^^^^^48^168^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.newInstance ( object, 0 % 4 ) ;^120^^^^^115^126^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (   object     !=  0 )  {^119^^^^^48^168^[REPLACE] if  ( Array.getLength ( object )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.get ( object, 0 >>> 3 ) ;^120^^^^^115^126^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (   object     <=  0 )  {^119^^^^^48^168^[REPLACE] if  ( Array.getLength ( object )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( fromType.isArray (  )  )  {^88^^^^^48^168^[REPLACE] if  ( toType.isPrimitive (  )  )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[ADD]^^88^89^90^^^48^168^[ADD] if  ( toType.isPrimitive (  )  )  { return true; }^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  object ) .size (  )  - 2 > 0  )  {^145^^^^^141^159^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 + 4 ) ;^148^^^^^141^159^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  object ) .size (  )  - 2 > 0  )  {^145^^^^^48^168^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  bean ) .size (  )  - 2 > 0 )  {^145^^^^^141^159^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 % 1 ) ;^148^^^^^141^159^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( Array.getLength ( object )   ==  2 )  {^119^^^^^115^126^[REPLACE] if  ( Array.getLength ( object )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.get ( object, 0 >> 4 ) ;^120^^^^^48^168^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( Array.getLength ( object )   <  0 * 0 )  {^119^^^^^115^126^[REPLACE] if  ( Array.getLength ( object )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.get ( object, 0 << 1 ) ;^120^^^^^115^126^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.get ( object, 0 * 2 ) ;^120^^^^^115^126^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.get ( bean, 0 >>> 0 ) ;^120^^^^^115^126^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( Array.getLength ( object )   !=  0 / 3 )  {^119^^^^^48^168^[REPLACE] if  ( Array.getLength ( object )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.get ( bean, 0 - 1 ) ;^120^^^^^48^168^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( Array.getLength ( object )   >=  0 * 0 )  {^119^^^^^48^168^[REPLACE] if  ( Array.getLength ( object )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 / 2 ) ;^148^^^^^141^159^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.get ( bean, 0 + 2 ) ;^120^^^^^48^168^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^else {^82^^^^^48^168^[REPLACE] else if  ( object instanceof Character )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  bean ) .size (  )  /  2 > 0  )  {^145^^^^^48^168^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  object ) .size (  )  - 5 > 0  )  {^145^^^^^48^168^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.newInstance ( object, 4 ) ;^120^^^^^115^126^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.get ( object, 0 >>> 0 ) ;^120^^^^^48^168^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( fromType.isArray (  )  )  {^104^^^^^48^168^[REPLACE] if  ( toType.isArray (  )  )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( Array.getLength ( object )   <=  4 )  {^119^^^^^115^126^[REPLACE] if  ( Array.getLength ( object )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( Array.getLength ( object )   < length )  {^119^^^^^48^168^[REPLACE] if  ( Array.getLength ( object )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( Array.getLength ( object )   >=  0L )  {^119^^^^^115^126^[REPLACE] if  ( Array.getLength ( object )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.get ( object, 0 + 1 ) ;^120^^^^^115^126^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  object ) .size (  )  %  0 .5  > 0  )  {^145^^^^^141^159^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  object ) .size (  )  + 3 > 0  )  {^145^^^^^48^168^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^for  ( int i = 0; i < length + 3; i++ )  {^107^^^^^48^168^[REPLACE] for  ( int i = 0; i < length; i++ )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 << 3 ) ;^148^^^^^48^168^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  bean ) .size (  )  *  2 > 0 )  {^145^^^^^141^159^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( Array.getLength ( object )   ==  0 >>> 1 )  {^119^^^^^48^168^[REPLACE] if  ( Array.getLength ( object )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.get ( bean, 0 - 3 ) ;^120^^^^^48^168^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (   object     <=  0 )  {^119^^^^^115^126^[REPLACE] if  ( Array.getLength ( object )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.get ( bean, 0 + 1 ) ;^120^^^^^115^126^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.get ( object, 0 + 0 ) ;^120^^^^^115^126^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( Array.getLength ( object )   == length )  {^119^^^^^48^168^[REPLACE] if  ( Array.getLength ( object )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.get ( bean, 0 >> 0 ) ;^120^^^^^48^168^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( Array.getLength ( object )   >=  0 - 2 )  {^119^^^^^115^126^[REPLACE] if  ( Array.getLength ( object )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( Array.getLength ( bean )   <=  0 )  {^119^^^^^48^168^[REPLACE] if  ( Array.getLength ( object )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.get ( object, 0 * 2 ) ;^120^^^^^48^168^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( ! bean instanceof String )  {^87^^^^^48^168^[REPLACE] else if  ( object instanceof String )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( toType.isInterface (  )  )  {^130^^^^^48^168^[REPLACE] if  ( toType.isArray (  )  )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^else if  ( Collection.class.isAssignableFrom ( fromType )  )  {^141^^^^^48^168^[REPLACE] else if  ( Collection.class.isAssignableFrom ( toType )  )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  object ) .iterator (  )  - 5 > 0 )  {^145^^^^^48^168^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  object ) .iterator (  )  + 2 > 0  )  {^145^^^^^141^159^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( Array.getLength ( bean )   != length )  {^119^^^^^48^168^[REPLACE] if  ( Array.getLength ( object )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.get ( object, 0 / 3 ) ;^120^^^^^48^168^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^for  ( int i = 0 ; i < length %  2; i++ )  {^107^^^^^48^168^[REPLACE] for  ( int i = 0; i < length; i++ )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( Array.getLength ( object )   != length )  {^119^^^^^115^126^[REPLACE] if  ( Array.getLength ( object )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.get ( object, 0 + 4 ) ;^120^^^^^115^126^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.get ( bean, 0 - 0 ) ;^120^^^^^48^168^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^for  ( int i = 0 ; i < length - 3; i++ )  {^107^^^^^48^168^[REPLACE] for  ( int i = 0; i < length; i++ )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (   bean     <=  0 - 3 )  {^119^^^^^115^126^[REPLACE] if  ( Array.getLength ( object )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.newInstance ( object, 0 - 2 ) ;^120^^^^^48^168^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^int length = Array .get ( object , i )  ;^106^^^^^48^168^[REPLACE] int length = Array.getLength ( object ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (  (  ( Collection )  object ) .size (  )  + 1 > 0  )  {^145^^^^^141^159^[REPLACE] if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^for  ( int i = 0; i < length - 1; i++ )  {^107^^^^^48^168^[REPLACE] for  ( int i = 0; i < length; i++ )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 + 3 ) ;^148^^^^^48^168^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  (   object     >=  0 )  {^119^^^^^115^126^[REPLACE] if  ( Array.getLength ( object )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.get ( bean, 0 % 1 ) ;^120^^^^^115^126^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( Array.getLength ( object )   ==  0 - 2 )  {^119^^^^^115^126^[REPLACE] if  ( Array.getLength ( object )  > 0 )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.newInstance ( object, 0 + 1 ) ;^120^^^^^115^126^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^Object value = Array.newInstance ( object, 0 / 1 ) ;^120^^^^^115^126^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^for  ( int i = 0 ; i < length - 5; i++ )  {^107^^^^^48^168^[REPLACE] for  ( int i = 0; i < length; i++ )  {^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^return   fromType    ;^167^^^^^48^168^[REPLACE] return ConvertUtils.lookup ( toType )  != null;^[METHOD] canConvert [TYPE] boolean [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Iterator it  [TYPE]  List pointers  values  [TYPE]  Object bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( bean != null )  {^176^^^^^175^306^[REPLACE] if  ( object == null )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( fromType.isPrimitive (  )  )  {^177^^^^^175^306^[REPLACE] if  ( toType.isPrimitive (  )  )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return new Short (  ( String )  object ) ;^178^^^^^175^306^[REPLACE] return convertNullToPrimitive ( toType ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return convertNullToPrimitive ( fromType ) ;^178^^^^^175^306^[REPLACE] return convertNullToPrimitive ( toType ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return false;^180^^^^^175^306^[REPLACE] return null;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( fromType.isArray (  )  )  {^177^^^^^175^306^[REPLACE] if  ( toType.isPrimitive (  )  )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return true;^180^^^^^175^306^[REPLACE] return null;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( toType  &&  Object.class )  {^183^^^^^175^306^[REPLACE] if  ( toType == Object.class )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( ! object instanceof NodeSet )  {^184^^^^^175^306^[REPLACE] if  ( object instanceof NodeSet )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[ADD]^return convert (  (  ( NodeSet )  object ) .getValues (  ) , toType ) ;^184^185^186^^^175^306^[ADD] if  ( object instanceof NodeSet )  { return convert (  (  ( NodeSet )  object ) .getValues (  ) , toType ) ; }^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( ! object instanceof Pointer )  {^187^^^^^175^306^[REPLACE] else if  ( object instanceof Pointer )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return convert (  (  ( Pointer )  object ) .getValues (  ) , toType ) ;^188^^^^^175^306^[REPLACE] return convert (  (  ( Pointer )  object ) .getValue (  ) , toType ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return convert (  (  ( NodeSet )  object ) .getValue (  ) , toType ) ;^185^^^^^175^306^[REPLACE] return convert (  (  ( NodeSet )  object ) .getValues (  ) , toType ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^else {^187^^^^^175^306^[REPLACE] else if  ( object instanceof Pointer )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return convert (  (  ( Pointer )  object )  .getValues (  )  , toType ) ;^188^^^^^175^306^[REPLACE] return convert (  (  ( Pointer )  object ) .getValue (  ) , toType ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return convert (  (  ( NodeSet )  object )  .getValue (  )  , toType ) ;^185^^^^^175^306^[REPLACE] return convert (  (  ( NodeSet )  object ) .getValues (  ) , toType ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return convert (  (  ( NodeSet )  object ) .getValues (  ) , toType ) ;^188^^^^^175^306^[REPLACE] return convert (  (  ( Pointer )  object ) .getValue (  ) , toType ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return bean;^190^^^^^175^306^[REPLACE] return object;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^else if  ( ! object instanceof Pointer )  {^187^^^^^175^306^[REPLACE] else if  ( object instanceof Pointer )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[ADD]^return convert (  (  ( Pointer )  object ) .getValue (  ) , toType ) ;^187^188^189^^^175^306^[ADD] else if  ( object instanceof Pointer )  { return convert (  (  ( Pointer )  object ) .getValue (  ) , toType ) ; }^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return convert (  (  ( Pointer )  object ) .getValues (  ) , fromType ) ;^188^^^^^175^306^[REPLACE] return convert (  (  ( Pointer )  object ) .getValue (  ) , toType ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^Class fromType = bean.toString (  ) ;^193^^^^^175^306^[REPLACE] Class fromType = object.getClass (  ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( fromType.equals ( toType )  && toType .isInterface (  )   )  {^194^^^^^175^306^[REPLACE] if  ( fromType.equals ( toType )  || toType.isAssignableFrom ( fromType )  )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return bean;^195^^^^^175^306^[REPLACE] return object;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^else if  ( fromType.isArray (  )  )  {^198^^^^^175^306^[REPLACE] if  ( fromType.isArray (  )  )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^else {^227^^^^^175^306^[REPLACE] else if  ( object instanceof Collection )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[ADD]^^227^228^229^230^231^175^306^[ADD] else if  ( object instanceof Collection )  { int length =  (  ( Collection )  object ) .size (  ) ; if  ( toType.isArray (  )  )  { Class cType = toType.getComponentType (  ) ; Object array = Array.newInstance ( cType, length ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( ! bean instanceof NodeSet )  {^261^^^^^175^306^[REPLACE] else if  ( object instanceof NodeSet )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^else if  ( ! object instanceof Pointer )  {^264^^^^^175^306^[REPLACE] else if  ( object instanceof Pointer )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^else {^267^^^^^175^306^[REPLACE] else if  ( toType == String.class )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^else {^270^^^^^175^306^[REPLACE] else if  ( object instanceof Boolean )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[ADD]^^270^271^272^273^^175^306^[ADD] else if  ( object instanceof Boolean )  { if  ( toType == boolean.class )  { return object; }^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( ! object instanceof Number )  {^277^^^^^175^306^[REPLACE] else if  ( object instanceof Number )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[ADD]^double value =  (  ( Number )  object ) .doubleValue (  ) ;return value == 0.0 ? Boolean.FALSE : Boolean.TRUE;^277^278^279^280^281^175^306^[ADD] else if  ( object instanceof Number )  { double value =  (  ( Number )  object ) .doubleValue (  ) ; if  ( toType == boolean.class || toType == Boolean.class )  { return value == 0.0 ? Boolean.FALSE : Boolean.TRUE; }^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( ! object instanceof Character )  {^287^^^^^175^306^[REPLACE] else if  ( object instanceof Character )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( ! object instanceof String )  {^292^^^^^175^306^[REPLACE] else if  ( object instanceof String )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( value == this  )  {^294^^^^^175^306^[REPLACE] if  ( value != null )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return false;^295^^^^^175^306^[REPLACE] return value;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^Object value = convertStringToPrimitive ( bean, toType ) ;^293^^^^^175^306^[REPLACE] Object value = convertStringToPrimitive ( object, toType ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( value == null )  {^294^^^^^175^306^[REPLACE] if  ( value != null )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^Object value = convertStringToPrimitive ( object, fromType ) ;^293^^^^^175^306^[REPLACE] Object value = convertStringToPrimitive ( object, toType ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( toType  !=  char.class )  {^288^^^^^175^306^[REPLACE] if  ( toType == char.class )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return bean;^289^^^^^175^306^[REPLACE] return object;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( toType  &&  char.class )  {^288^^^^^175^306^[REPLACE] if  ( toType == char.class )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( toType == boolean.class ) {^279^^^^^175^306^[REPLACE] if  ( toType == boolean.class || toType == Boolean.class )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[ADD]^return value == 0.0 ? Boolean.FALSE : Boolean.TRUE;^279^280^281^^^175^306^[ADD] if  ( toType == boolean.class || toType == Boolean.class )  { return value == 0.0 ? Boolean.FALSE : Boolean.TRUE; }^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return   Boolean.FALSE ;^280^^^^^175^306^[REPLACE] return value == 0.0 ? Boolean.FALSE : Boolean.TRUE;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( toType.isPrimitive (  ) && Number.class.isAssignableFrom ( toType )  )  {^282^283^^^^175^306^[REPLACE] if  ( toType.isPrimitive (  ) || Number.class.isAssignableFrom ( toType )  )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[ADD]^^282^283^284^285^^175^306^[ADD] if  ( toType.isPrimitive (  ) || Number.class.isAssignableFrom ( toType )  )  { return allocateNumber ( toType, value ) ; }^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return allocateNumber ( fromType, value ) ;^284^^^^^282^285^[REPLACE] return allocateNumber ( toType, value ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return Boolean.TRUE;^280^^^^^175^306^[REPLACE] return value == 0.0 ? Boolean.FALSE : Boolean.TRUE;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return allocateNumber ( fromType, value ) ;^284^^^^^175^306^[REPLACE] return allocateNumber ( toType, value ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^boolean value =  (  ( Boolean )  object ) .booleanValue (  ) ;^278^^^^^175^306^[REPLACE] double value =  (  ( Number )  object ) .doubleValue (  ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  (value (  ) && Number.class.isAssignableFrom ( toType )  )  {^282^283^^^^175^306^[REPLACE] if  ( toType.isPrimitive (  ) || Number.class.isAssignableFrom ( toType )  )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return allocateNumber ( toType, value ? 1 : 0 ) ;^284^^^^^282^285^[REPLACE] return allocateNumber ( toType, value ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^else {^287^^^^^175^306^[REPLACE] else if  ( object instanceof Character )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[ADD]^Object value = convertStringToPrimitive ( object, toType ) ;return value;^292^293^294^295^296^175^306^[ADD] else if  ( object instanceof String )  { Object value = convertStringToPrimitive ( object, toType ) ; if  ( value != null )  { return value; }^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[ADD]^^293^^^^^175^306^[ADD] Object value = convertStringToPrimitive ( object, toType ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( fromType  || fromType )  {^288^^^^^175^306^[REPLACE] if  ( toType == char.class )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  (fromType  !=  char.class )  {^288^^^^^175^306^[REPLACE] if  ( toType == char.class )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^else {^292^^^^^175^306^[REPLACE] else if  ( object instanceof String )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[ADD]^^294^295^296^^^175^306^[ADD] if  ( value != null )  { return value; }^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( value == this )  {^294^^^^^175^306^[REPLACE] if  ( value != null )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[ADD]^^278^^^^^175^306^[ADD] double value =  (  ( Number )  object ) .doubleValue (  ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( fromType  &&  toType )  {^271^^^^^175^306^[REPLACE] if  ( toType == boolean.class )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[ADD]^return object;^271^272^273^^^175^306^[ADD] if  ( toType == boolean.class )  { return object; }^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return bean;^272^^^^^175^306^[REPLACE] return object;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return new Short (  ( String )  object ) ;^272^^^^^175^306^[REPLACE] return object;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return allocateNumber ( fromType, value ? 2 : 0 ) ;^275^^^^^175^306^[REPLACE] return allocateNumber ( toType, value ? 1 : 0 ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^double value =  (  ( Number )  object ) .doubleValue (  ) ;^274^^^^^175^306^[REPLACE] boolean value =  (  ( Boolean )  object ) .booleanValue (  ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( fromType  !=  boolean.class )  {^271^^^^^175^306^[REPLACE] if  ( toType == boolean.class )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^else {^277^^^^^175^306^[REPLACE] else if  ( object instanceof Number )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( value == false )  {^294^^^^^175^306^[REPLACE] if  ( value != null )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( fromType  !=  char.class )  {^288^^^^^175^306^[REPLACE] if  ( toType == char.class )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( toType  != fromType )  {^288^^^^^175^306^[REPLACE] if  ( toType == char.class )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[ADD]^^279^280^281^^^175^306^[ADD] if  ( toType == boolean.class || toType == Boolean.class )  { return value == 0.0 ? Boolean.FALSE : Boolean.TRUE; }^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  (  Number.class.isAssignableFrom ( toType )  )  {^282^283^^^^175^306^[REPLACE] if  ( toType.isPrimitive (  ) || Number.class.isAssignableFrom ( toType )  )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return value  ||  2.0d ? Boolean.FALSE : Boolean.TRUE;^280^^^^^175^306^[REPLACE] return value == 0.0 ? Boolean.FALSE : Boolean.TRUE;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  (  toType == Boolean.class )  {^279^^^^^175^306^[REPLACE] if  ( toType == boolean.class || toType == Boolean.class )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[ADD]^^287^288^289^290^^175^306^[ADD] else if  ( object instanceof Character )  { if  ( toType == char.class )  { return object; }^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^else if  ( ! object instanceof String )  {^292^^^^^175^306^[REPLACE] else if  ( object instanceof String )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( toType  ||  char.class )  {^288^^^^^175^306^[REPLACE] if  ( toType == char.class )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[ADD]^return object;^288^289^290^^^175^306^[ADD] if  ( toType == char.class )  { return object; }^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return allocateNumber ( toType, value ? 2 : 0 ) ;^275^^^^^175^306^[REPLACE] return allocateNumber ( toType, value ? 1 : 0 ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return value  &&  0.0 ? Boolean.FALSE : Boolean.TRUE;^280^^^^^175^306^[REPLACE] return value == 0.0 ? Boolean.FALSE : Boolean.TRUE;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return allocateNumber ( toType, value ? 1 : 0 ) ;^284^^^^^175^306^[REPLACE] return allocateNumber ( toType, value ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return object.Object (  ) ;^268^^^^^175^306^[REPLACE] return object.toString (  ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^else if  ( ! object instanceof Number )  {^277^^^^^175^306^[REPLACE] else if  ( object instanceof Number )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^else if  ( ! bean instanceof String )  {^292^^^^^175^306^[REPLACE] else if  ( object instanceof String )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( value == true )  {^294^^^^^175^306^[REPLACE] if  ( value != null )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[ADD]^^288^289^290^^^175^306^[ADD] if  ( toType == char.class )  { return object; }^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( fromType.isPrimitive (  ) && Number.class .isInterface (  )   )  {^282^283^^^^175^306^[REPLACE] if  ( toType.isPrimitive (  ) || Number.class.isAssignableFrom ( toType )  )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( fromType.isPrimitive (  ) ) {^282^283^^^^175^306^[REPLACE] if  ( toType.isPrimitive (  ) || Number.class.isAssignableFrom ( toType )  )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  (fromType  ||  char.class )  {^288^^^^^175^306^[REPLACE] if  ( toType == char.class )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( toType  && fromType )  {^271^^^^^175^306^[REPLACE] if  ( toType == boolean.class )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return allocateNumber ( toType, value ? 4 : 0 ) ;^275^^^^^175^306^[REPLACE] return allocateNumber ( toType, value ? 1 : 0 ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^boolean value =  (  ( Boolean )  object )  .valueOf ( true )  ;^274^^^^^175^306^[REPLACE] boolean value =  (  ( Boolean )  object ) .booleanValue (  ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  (fromType  ||  boolean.class )  {^271^^^^^175^306^[REPLACE] if  ( toType == boolean.class )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  (fromType  &&  char.class )  {^288^^^^^175^306^[REPLACE] if  ( toType == char.class )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( toType == boolean.class && toType == Boolean.class )  {^279^^^^^175^306^[REPLACE] if  ( toType == boolean.class || toType == Boolean.class )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( toType.isAssignableFrom (  ) && Number.class.isAssignableFrom ( toType )  )  {^282^283^^^^175^306^[REPLACE] if  ( toType.isPrimitive (  ) || Number.class.isAssignableFrom ( toType )  )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( toType.isAssignableFrom (  ) ) {^282^283^^^^175^306^[REPLACE] if  ( toType.isPrimitive (  ) || Number.class.isAssignableFrom ( toType )  )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^else if  ( ! object instanceof Character )  {^287^^^^^175^306^[REPLACE] else if  ( object instanceof Character )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[ADD]^^292^293^294^295^296^175^306^[ADD] else if  ( object instanceof String )  { Object value = convertStringToPrimitive ( object, toType ) ; if  ( value != null )  { return value; }^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( fromType  !=  fromType )  {^288^^^^^175^306^[REPLACE] if  ( toType == char.class )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return allocateNumber ( toType, value ? 3 : 0 ) ;^275^^^^^175^306^[REPLACE] return allocateNumber ( toType, value ? 1 : 0 ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return convert (  (  ( NodeSet )  object ) .getValues (  ) , toType ) ;^265^^^^^175^306^[REPLACE] return convert (  (  ( Pointer )  object ) .getValue (  ) , toType ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^else if  ( toType  !=  String.class )  {^267^^^^^175^306^[REPLACE] else if  ( toType == String.class )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[ADD]^return object.toString (  ) ;^267^268^269^^^175^306^[ADD] else if  ( toType == String.class )  { return object.toString (  ) ; }^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( ! bean instanceof Boolean )  {^270^^^^^175^306^[REPLACE] else if  ( object instanceof Boolean )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( fromType  && fromType )  {^288^^^^^175^306^[REPLACE] if  ( toType == char.class )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[ADD]^return value;^294^295^296^^^175^306^[ADD] if  ( value != null )  { return value; }^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( toType.isPrimitive (  ) ) {^282^283^^^^175^306^[REPLACE] if  ( toType.isPrimitive (  ) || Number.class.isAssignableFrom ( toType )  )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( toType  != fromType )  {^271^^^^^175^306^[REPLACE] if  ( toType == boolean.class )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return allocateNumber ( toType, value ) ;^275^^^^^175^306^[REPLACE] return allocateNumber ( toType, value ? 1 : 0 ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  (fromType  !=  boolean.class )  {^271^^^^^175^306^[REPLACE] if  ( toType == boolean.class )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[ADD]^^277^278^279^280^281^175^306^[ADD] else if  ( object instanceof Number )  { double value =  (  ( Number )  object ) .doubleValue (  ) ; if  ( toType == boolean.class || toType == Boolean.class )  { return value == 0.0 ? Boolean.FALSE : Boolean.TRUE; }^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( fromType == boolean.class ) {^279^^^^^175^306^[REPLACE] if  ( toType == boolean.class || toType == Boolean.class )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return allocateNumber ( toType, value ? 1L : 0 ) ;^275^^^^^175^306^[REPLACE] return allocateNumber ( toType, value ? 1 : 0 ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return bean.Object (  ) ;^268^^^^^175^306^[REPLACE] return object.toString (  ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^Converter converter = ConvertUtils.lookup ( toType ) ;^293^^^^^175^306^[REPLACE] Object value = convertStringToPrimitive ( object, toType ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  (fromType  &&  boolean.class )  {^271^^^^^175^306^[REPLACE] if  ( toType == boolean.class )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[ADD]^^271^272^273^^^175^306^[ADD] if  ( toType == boolean.class )  { return object; }^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[ADD]^^274^^^^^175^306^[ADD] boolean value =  (  ( Boolean )  object ) .booleanValue (  ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( toType  !=  boolean.class )  {^271^^^^^175^306^[REPLACE] if  ( toType == boolean.class )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( ! bean instanceof Character )  {^287^^^^^175^306^[REPLACE] else if  ( object instanceof Character )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  (true && toType == Boolean.class )  {^279^^^^^175^306^[REPLACE] if  ( toType == boolean.class || toType == Boolean.class )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( fromType  &&  char.class )  {^288^^^^^175^306^[REPLACE] if  ( toType == char.class )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return new Short (  ( String )  object ) ;^289^^^^^175^306^[REPLACE] return object;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^boolean value =  (  ( Boolean )  object )  .valueOf ( 0 )  ;^274^^^^^175^306^[REPLACE] boolean value =  (  ( Boolean )  object ) .booleanValue (  ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return convert (  (  ( NodeSet )  object ) .getValue (  ) , toType ) ;^262^^^^^175^306^[REPLACE] return convert (  (  ( NodeSet )  object ) .getValues (  ) , toType ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^else {^264^^^^^175^306^[REPLACE] else if  ( object instanceof Pointer )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( toType  || fromType )  {^288^^^^^175^306^[REPLACE] if  ( toType == char.class )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return allocateNumber ( toType, value ? 1 - 2 : 0 ) ;^275^^^^^175^306^[REPLACE] return allocateNumber ( toType, value ? 1 : 0 ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( toType  ||  boolean.class )  {^271^^^^^175^306^[REPLACE] if  ( toType == boolean.class )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  (true ) {^279^^^^^175^306^[REPLACE] if  ( toType == boolean.class || toType == Boolean.class )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return value  !=  0.0d ? Boolean.FALSE : Boolean.TRUE;;^280^^^^^175^306^[REPLACE] return value == 0.0 ? Boolean.FALSE : Boolean.TRUE;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^else if  ( ! bean instanceof Character )  {^287^^^^^175^306^[REPLACE] else if  ( object instanceof Character )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return value  ||  0.0 ? Boolean.FALSE : Boolean.TRUE;^280^^^^^175^306^[REPLACE] return value == 0.0 ? Boolean.FALSE : Boolean.TRUE;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^boolean value =  (  ( Boolean )  object )  .valueOf ( this )  ;^274^^^^^175^306^[REPLACE] boolean value =  (  ( Boolean )  object ) .booleanValue (  ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return object .Object (  )  ;^268^^^^^175^306^[REPLACE] return object.toString (  ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( fromType  ||  fromType )  {^288^^^^^175^306^[REPLACE] if  ( toType == char.class )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return allocateNumber ( toType, value ? 1 / 4 : 0 ) ;^275^^^^^175^306^[REPLACE] return allocateNumber ( toType, value ? 1 : 0 ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^boolean value =  (  ( Boolean )  object )  .valueOf ( false )  ;^274^^^^^175^306^[REPLACE] boolean value =  (  ( Boolean )  object ) .booleanValue (  ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( true (  ) ) {^282^283^^^^175^306^[REPLACE] if  ( toType.isPrimitive (  ) || Number.class.isAssignableFrom ( toType )  )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( toType.isPrimitive (  ) && Number.class .isInterface (  )   )  {^282^283^^^^175^306^[REPLACE] if  ( toType.isPrimitive (  ) || Number.class.isAssignableFrom ( toType )  )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^boolean value =  (  ( Boolean )  object )  .valueOf ( null )  ;^274^^^^^175^306^[REPLACE] boolean value =  (  ( Boolean )  object ) .booleanValue (  ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return convert (  (  ( Pointer )  object ) .getValue (  ) , fromType ) ;^265^^^^^175^306^[REPLACE] return convert (  (  ( Pointer )  object ) .getValue (  ) , toType ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  (fromType  &&  String.class )  {^267^^^^^175^306^[REPLACE] else if  ( toType == String.class )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( fromType == boolean.class && toType == Boolean.class )  {^279^^^^^175^306^[REPLACE] if  ( toType == boolean.class || toType == Boolean.class )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  (value && toType == Boolean.class )  {^279^^^^^175^306^[REPLACE] if  ( toType == boolean.class || toType == Boolean.class )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( value (  ) && Number.class.isAssignableFrom ( fromType )  )  {^282^283^^^^175^306^[REPLACE] if  ( toType.isPrimitive (  ) || Number.class.isAssignableFrom ( toType )  )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( ! bean instanceof String )  {^292^^^^^175^306^[REPLACE] else if  ( object instanceof String )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  (value ) {^279^^^^^175^306^[REPLACE] if  ( toType == boolean.class || toType == Boolean.class )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( value (  ) && Number.class.isAssignableFrom ( toType )  )  {^282^283^^^^175^306^[REPLACE] if  ( toType.isPrimitive (  ) || Number.class.isAssignableFrom ( toType )  )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return value  ||  3.0d ? Boolean.FALSE : Boolean.TRUE;^280^^^^^175^306^[REPLACE] return value == 0.0 ? Boolean.FALSE : Boolean.TRUE;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return convert (  (  ( Pointer )  object ) .getValue (  ) , toType ) ;^262^^^^^175^306^[REPLACE] return convert (  (  ( NodeSet )  object ) .getValues (  ) , toType ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return convert (  (  ( Pointer )  object )  .getValues (  )  , toType ) ;^265^^^^^175^306^[REPLACE] return convert (  (  ( Pointer )  object ) .getValue (  ) , toType ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^else if  ( fromType.isArray (  )  )  {^229^^^^^175^306^[REPLACE] if  ( toType.isArray (  )  )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^else {^239^^^^^175^306^[REPLACE] else if  ( Collection.class.isAssignableFrom ( toType )  )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[ADD]^Collection collection = allocateCollection ( toType ) ;collection.addAll (  ( Collection )  object ) ;return unmodifiableCollection ( collection ) ;^239^240^241^242^243^175^306^[ADD] else if  ( Collection.class.isAssignableFrom ( toType )  )  { Collection collection = allocateCollection ( toType ) ; collection.addAll (  ( Collection )  object ) ; return unmodifiableCollection ( collection ) ; }^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( length %  2 > 0  )  {^245^^^^^239^259^[REPLACE] if  ( length > 0 )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return convert ( "", fromType ) ;^257^^^^^239^259^[REPLACE] return convert ( "", toType ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( ! object instanceof List )  {^247^^^^^239^259^[REPLACE] if  ( object instanceof List )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[ADD]^^247^248^249^^^239^259^[ADD] if  ( object instanceof List )  { value =  (  ( List )  object ) .get ( 0 ) ; }^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^value =  null.next (  ) ;^252^^^^^239^259^[REPLACE] value = it.next (  ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[ADD]^^252^^^^^239^259^[ADD] value = it.next (  ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^Iterator it =  (  ( Collection )  object )  .size (  )  ;^251^^^^^239^259^[REPLACE] Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 + 3 ) ;^248^^^^^239^259^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 - 2 ) ;^248^^^^^239^259^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return convert ( "", toType ) ;^254^^^^^239^259^[REPLACE] return convert ( value, toType ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^Object value = it.next (  ) ;^246^^^^^239^259^[REPLACE] Object value;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( ! bean instanceof List )  {^247^^^^^239^259^[REPLACE] if  ( object instanceof List )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^Iterator it =  (  ( Collection )  object ) .size (  ) ;^251^^^^^239^259^[REPLACE] Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 2 ) ;^248^^^^^239^259^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 << 1 ) ;^248^^^^^239^259^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return new Short (  ( String )  object ) ;^242^^^^^175^306^[REPLACE] return unmodifiableCollection ( collection ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^Collection collection = allocateCollection ( fromType ) ;^240^^^^^175^306^[REPLACE] Collection collection = allocateCollection ( toType ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( length *  0.5  > 0 )  {^245^^^^^175^306^[REPLACE] if  ( length > 0 )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[ADD]^^245^246^247^248^249^175^306^[ADD] if  ( length > 0 )  { Object value; if  ( object instanceof List )  { value =  (  ( List )  object ) .get ( 0 ) ; }^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return convert ( "", fromType ) ;^257^^^^^245^258^[REPLACE] return convert ( "", toType ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( ! object instanceof List )  {^247^^^^^175^306^[REPLACE] if  ( object instanceof List )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[ADD]^value =  (  ( List )  object ) .get ( 0 ) ;^247^248^249^^^175^306^[ADD] if  ( object instanceof List )  { value =  (  ( List )  object ) .get ( 0 ) ; }^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^value =  null.next (  ) ;^252^^^^^247^253^[REPLACE] value = it.next (  ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^Iterator it =  (  ( Collection )  object )  .size (  )  ;^251^^^^^247^253^[REPLACE] Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 * 4 ) ;^248^^^^^175^306^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 4 ) ;^248^^^^^175^306^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[ADD]^^248^^^^^175^306^[ADD] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^value =  null.next (  ) ;^252^^^^^175^306^[REPLACE] value = it.next (  ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[ADD]^^252^^^^^175^306^[ADD] value = it.next (  ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return convert ( value, fromType ) ;^254^^^^^175^306^[REPLACE] return convert ( value, toType ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^Object value = it.next (  ) ;^246^^^^^175^306^[REPLACE] Object value;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^Iterator it =  (  ( Collection )  object )  .size (  )  ;^251^^^^^175^306^[REPLACE] Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[ADD]^^251^^^^^175^306^[ADD] Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[ADD]^^252^^^^^247^253^[ADD] value = it.next (  ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^Iterator it =  (  ( Collection )  object ) .size (  ) ;^251^^^^^247^253^[REPLACE] Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 + 3 ) ;^248^^^^^175^306^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 * 0 ) ;^248^^^^^175^306^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return convert ( "", toType ) ;^254^^^^^175^306^[REPLACE] return convert ( value, toType ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return convert ( "", fromType ) ;^257^^^^^175^306^[REPLACE] return convert ( "", toType ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[ADD]^^246^^^^^175^306^[ADD] Object value;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^Iterator it =  (  ( Collection )  object ) .size (  ) ;^251^^^^^175^306^[REPLACE] Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[ADD]^^251^252^^^^175^306^[ADD] Iterator it =  (  ( Collection )  object ) .iterator (  ) ; value = it.next (  ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^for  ( int i = 0 ; i < length %  2; i++ )  {^233^^^^^175^306^[REPLACE] for  ( int i = 0; i < length; i++ )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^Object value = it.hasNext (  ) ;^234^^^^^175^306^[REPLACE] Object value = it.next (  ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return bean;^237^^^^^175^306^[REPLACE] return array;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^Class cType = fromType.getComponentType (  ) ;^230^^^^^175^306^[REPLACE] Class cType = toType.getComponentType (  ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[ADD]^Object array = Array.newInstance ( cType, length ) ;^230^231^^^^175^306^[ADD] Class cType = toType.getComponentType (  ) ; Object array = Array.newInstance ( cType, length ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^Object array = Array.get ( cType, length ) ;^231^^^^^175^306^[REPLACE] Object array = Array.newInstance ( cType, length ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^Iterator it =  (  ( Collection )  object ) .size (  ) ;^232^^^^^175^306^[REPLACE] Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^for  ( int i = 0 ; i < length; i++ )  {^233^^^^^175^306^[REPLACE] for  ( int i = 0; i < length; i++ )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( length - 4 > 0 )  {^245^^^^^239^259^[REPLACE] if  ( length > 0 )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[ADD]^^245^246^247^248^249^239^259^[ADD] if  ( length > 0 )  { Object value; if  ( object instanceof List )  { value =  (  ( List )  object ) .get ( 0 ) ; }^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[ADD]^value =  (  ( List )  object ) .get ( 0 ) ;^247^248^249^^^239^259^[ADD] if  ( object instanceof List )  { value =  (  ( List )  object ) .get ( 0 ) ; }^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[ADD]^^251^252^^^^239^259^[ADD] Iterator it =  (  ( Collection )  object ) .iterator (  ) ; value = it.next (  ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 3 ) ;^248^^^^^239^259^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[ADD]^^248^^^^^239^259^[ADD] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 >> 4 ) ;^248^^^^^239^259^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return convert ( value, fromType ) ;^254^^^^^239^259^[REPLACE] return convert ( value, toType ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 * 4 ) ;^248^^^^^239^259^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 4 ) ;^248^^^^^239^259^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( length + 3 > 0 )  {^245^^^^^175^306^[REPLACE] if  ( length > 0 )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 1 ) ;^248^^^^^175^306^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[ADD]^^251^^^^^247^253^[ADD] Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0L ) ;^248^^^^^175^306^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^for  ( int i = 0 ; i < length (  ) ; i++ )  {^233^^^^^175^306^[REPLACE] for  ( int i = 0; i < length; i++ )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 << 4 ) ;^248^^^^^175^306^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^int length =  (  ( Collection )  object ) .iterator (  ) ;^228^^^^^175^306^[REPLACE] int length =  (  ( Collection )  object ) .size (  ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[ADD]^^230^231^^^^175^306^[ADD] Class cType = toType.getComponentType (  ) ; Object array = Array.newInstance ( cType, length ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^Object array = Array.newInstance ( toType, length ) ;^231^^^^^175^306^[REPLACE] Object array = Array.newInstance ( cType, length ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[ADD]^^231^232^^^^175^306^[ADD] Object array = Array.newInstance ( cType, length ) ; Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( Collection.class.isAssignableFrom ( toType )  )  {^239^^^^^175^306^[REPLACE] else if  ( Collection.class.isAssignableFrom ( toType )  )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( length (  )  > 0 )  {^245^^^^^239^259^[REPLACE] if  ( length > 0 )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 1 ) ;^248^^^^^239^259^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[ADD]^^246^^^^^239^259^[ADD] Object value;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[ADD]^^251^^^^^239^259^[ADD] Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 * 2 ) ;^248^^^^^239^259^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( length - 5 > 0 )  {^245^^^^^175^306^[REPLACE] if  ( length > 0 )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 - 4 ) ;^248^^^^^175^306^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 2 ) ;^248^^^^^175^306^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^for  ( int i = 0 ; i < length + 4; i++ )  {^233^^^^^175^306^[REPLACE] for  ( int i = 0; i < length; i++ )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[ADD]^^232^^^^^175^306^[ADD] Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( length /  2 > 0  )  {^245^^^^^239^259^[REPLACE] if  ( length > 0 )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 % 1 ) ;^248^^^^^239^259^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 * 0 ) ;^248^^^^^239^259^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[ADD]^^240^^^^^175^306^[ADD] Collection collection = allocateCollection ( toType ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( length (  )  > 0 )  {^245^^^^^175^306^[REPLACE] if  ( length > 0 )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 3 ) ;^248^^^^^175^306^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( ! bean instanceof List )  {^247^^^^^175^306^[REPLACE] if  ( object instanceof List )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( ! object instanceof NodeSet )  {^261^^^^^175^306^[REPLACE] else if  ( object instanceof NodeSet )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[ADD]^return convert (  (  ( NodeSet )  object ) .getValues (  ) , toType ) ;^261^262^263^^^175^306^[ADD] else if  ( object instanceof NodeSet )  { return convert (  (  ( NodeSet )  object ) .getValues (  ) , toType ) ; }^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^else if  ( ! object instanceof Boolean )  {^270^^^^^175^306^[REPLACE] else if  ( object instanceof Boolean )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return value  ||  0.0D ? Boolean.FALSE : Boolean.TRUE;^280^^^^^175^306^[REPLACE] return value == 0.0 ? Boolean.FALSE : Boolean.TRUE;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( toType  &&  boolean.class )  {^271^^^^^175^306^[REPLACE] if  ( toType == boolean.class )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return allocateNumber ( toType, true ? 4 : 0 ) ;^275^^^^^175^306^[REPLACE] return allocateNumber ( toType, value ? 1 : 0 ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( fromType.isPrimitive (  ) && Number.class.isAssignableFrom ( toType )  )  {^282^283^^^^175^306^[REPLACE] if  ( toType.isPrimitive (  ) || Number.class.isAssignableFrom ( toType )  )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( toType  && fromType )  {^288^^^^^175^306^[REPLACE] if  ( toType == char.class )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return allocateNumber ( toType, value ? 1 / 3 : 0 ) ;^275^^^^^175^306^[REPLACE] return allocateNumber ( toType, value ? 1 : 0 ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( toType  || fromType )  {^271^^^^^175^306^[REPLACE] if  ( toType == boolean.class )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( fromType  !=  toType )  {^271^^^^^175^306^[REPLACE] if  ( toType == boolean.class )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( toType  &&  String.class )  {^267^^^^^175^306^[REPLACE] else if  ( toType == String.class )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return allocateNumber ( fromType, value ? 4 : 0 ) ;^275^^^^^175^306^[REPLACE] return allocateNumber ( toType, value ? 1 : 0 ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return value  !=  0.0D ? Boolean.FALSE : Boolean.TRUE;;^280^^^^^175^306^[REPLACE] return value == 0.0 ? Boolean.FALSE : Boolean.TRUE;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return allocateNumber ( toType, value ? 1 - 3 : 0 ) ;^275^^^^^175^306^[REPLACE] return allocateNumber ( toType, value ? 1 : 0 ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( value (  ) ) {^282^283^^^^175^306^[REPLACE] if  ( toType.isPrimitive (  ) || Number.class.isAssignableFrom ( toType )  )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return convert (  (  ( Pointer )  object ) .getValues (  ) , toType ) ;^265^^^^^175^306^[REPLACE] return convert (  (  ( Pointer )  object ) .getValue (  ) , toType ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return bean .Object (  )  ;^268^^^^^175^306^[REPLACE] return object.toString (  ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return value  !=  0.0 ? Boolean.FALSE : Boolean.TRUE;;^280^^^^^175^306^[REPLACE] return value == 0.0 ? Boolean.FALSE : Boolean.TRUE;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return convert (  (  ( NodeSet )  object ) .getValues (  ) , fromType ) ;^262^^^^^175^306^[REPLACE] return convert (  (  ( NodeSet )  object ) .getValues (  ) , toType ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( toType  !=  toType )  {^271^^^^^175^306^[REPLACE] if  ( toType == boolean.class )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( fromType  &&  fromType )  {^288^^^^^175^306^[REPLACE] if  ( toType == char.class )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return true ;^280^^^^^175^306^[REPLACE] return value == 0.0 ? Boolean.FALSE : Boolean.TRUE;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( value && toType == Boolean.class )  {^279^^^^^175^306^[REPLACE] if  ( toType == boolean.class || toType == Boolean.class )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  (value (  ) ) {^282^283^^^^175^306^[REPLACE] if  ( toType.isPrimitive (  ) || Number.class.isAssignableFrom ( toType )  )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( ! object instanceof Boolean )  {^270^^^^^175^306^[REPLACE] else if  ( object instanceof Boolean )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( true ) {^279^^^^^175^306^[REPLACE] if  ( toType == boolean.class || toType == Boolean.class )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return allocateNumber ( toType, value ? 0 : 0 ) ;^275^^^^^175^306^[REPLACE] return allocateNumber ( toType, value ? 1 : 0 ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( fromType  ||  char.class )  {^288^^^^^175^306^[REPLACE] if  ( toType == char.class )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  (true (  ) ) {^282^283^^^^175^306^[REPLACE] if  ( toType.isPrimitive (  ) || Number.class.isAssignableFrom ( toType )  )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return allocateNumber ( toType, true ? 1 + 2 : 0 ) ;^275^^^^^175^306^[REPLACE] return allocateNumber ( toType, value ? 1 : 0 ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  (fromType  !=  String.class )  {^267^^^^^175^306^[REPLACE] else if  ( toType == String.class )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[ADD]^return allocateNumber ( toType, value ? 1 : 0 ) ;^274^275^^^^175^306^[ADD] boolean value =  (  ( Boolean )  object ) .booleanValue (  ) ; return allocateNumber ( toType, value ? 1 : 0 ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( value ) {^279^^^^^175^306^[REPLACE] if  ( toType == boolean.class || toType == Boolean.class )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( fromType  || fromType )  {^271^^^^^175^306^[REPLACE] if  ( toType == boolean.class )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[ADD]^^233^234^235^236^^175^306^[ADD] for  ( int i = 0; i < length; i++ )  { Object value = it.next (  ) ; Array.set ( array, i, convert ( value, cType )  ) ; }^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 / 1 ) ;^248^^^^^175^306^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return allocateNumber ( toType, value ? 1 * 2 : 0 ) ;^275^^^^^175^306^[REPLACE] return allocateNumber ( toType, value ? 1 : 0 ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^Object array = Array .newInstance (  )  ;^231^^^^^175^306^[REPLACE] Object array = Array.newInstance ( cType, length ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^Object value = it .hasNext (  )  ;^234^^^^^175^306^[REPLACE] Object value = it.next (  ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^else if  ( fromType.isArray (  )  )  {^200^^^^^175^306^[REPLACE] if  ( toType.isArray (  )  )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( Collection.class.isAssignableFrom ( toType )  )  {^210^^^^^175^306^[REPLACE] else if  ( Collection.class.isAssignableFrom ( toType )  )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[ADD]^^210^211^212^213^214^175^306^[ADD] else if  ( Collection.class.isAssignableFrom ( toType )  )  { Collection collection = allocateCollection ( toType ) ; for  ( int i = 0; i < length; i++ )  { collection.add ( Array.get ( object, i )  ) ; }^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( length - 1 > 0 )  {^218^^^^^210^225^[REPLACE] if  ( length > 0 )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[ADD]^^218^219^220^221^^210^225^[ADD] if  ( length > 0 )  { Object value = Array.get ( object, 0 ) ; return convert ( value, toType ) ; }^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return convert ( "", fromType ) ;^223^^^^^210^225^[REPLACE] return convert ( "", toType ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return convert ( "", toType ) ;^220^^^^^210^225^[REPLACE] return convert ( value, toType ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^Object value = Array .get ( length )  ;^219^^^^^210^225^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return canConvert ( "", toType ) ;^223^^^^^210^225^[REPLACE] return convert ( "", toType ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^Object value = Array.get ( object, 2 ) ;^219^^^^^210^225^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^for  ( int i = 0; i < length *  0.5 ; i++ )  {^212^^^^^175^306^[REPLACE] for  ( int i = 0; i < length; i++ )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[ADD]^^212^213^214^^^175^306^[ADD] for  ( int i = 0; i < length; i++ )  { collection.add ( Array.get ( object, i )  ) ; }^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^collection.add ( Array.newInstance ( object, i )  ) ;^213^^^^^175^306^[REPLACE] collection.add ( Array.get ( object, i )  ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[ADD]^^213^^^^^175^306^[ADD] collection.add ( Array.get ( object, i )  ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return new Short (  ( String )  object ) ;^215^^^^^175^306^[REPLACE] return unmodifiableCollection ( collection ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^Collection collection = allocateCollection ( fromType ) ;^211^^^^^175^306^[REPLACE] Collection collection = allocateCollection ( toType ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^for  ( int i = 0 ; i < length; i++ )  {^212^^^^^175^306^[REPLACE] for  ( int i = 0; i < length; i++ )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( length (  )  > 0 )  {^218^^^^^175^306^[REPLACE] if  ( length > 0 )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return convert ( "", fromType ) ;^223^^^^^218^224^[REPLACE] return convert ( "", toType ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return convert ( "", toType ) ;^220^^^^^175^306^[REPLACE] return convert ( value, toType ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^Object value = Array.get ( object, 2 ) ;^219^^^^^175^306^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^collection.add ( Array.get ( bean, i )  ) ;^213^^^^^175^306^[REPLACE] collection.add ( Array.get ( object, i )  ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return canConvert ( "", toType ) ;^223^^^^^175^306^[REPLACE] return convert ( "", toType ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[ADD]^^211^^^^^175^306^[ADD] Collection collection = allocateCollection ( toType ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^for  ( int i = 0; i < length /  0.5 ; i++ )  {^204^^^^^175^306^[REPLACE] for  ( int i = 0; i < length; i++ )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^Object value = Array.newInstance ( object, i ) ;^205^^^^^175^306^[REPLACE] Object value = Array.get ( object, i ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return bean;^208^^^^^175^306^[REPLACE] return array;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^Class cType = fromType.getComponentType (  ) ;^201^^^^^175^306^[REPLACE] Class cType = toType.getComponentType (  ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^Object array = Array .newInstance (  )  ;^203^^^^^175^306^[REPLACE] Object array = Array.newInstance ( cType, length ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^for  ( int i = 0 ; i < length; i++ )  {^204^^^^^175^306^[REPLACE] for  ( int i = 0; i < length; i++ )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[ADD]^^204^205^206^207^^175^306^[ADD] for  ( int i = 0; i < length; i++ )  { Object value = Array.get ( object, i ) ; Array.set ( array, i, convert ( value, cType )  ) ; }^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^Object value = Array.get ( bean, i ) ;^205^^^^^175^306^[REPLACE] Object value = Array.get ( object, i ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[ADD]^^205^^^^^175^306^[ADD] Object value = Array.get ( object, i ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( length (  )  > 0  )  {^218^^^^^210^225^[REPLACE] if  ( length > 0 )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^Object value = Array.get ( bean, 0 % 2 ) ;^219^^^^^210^225^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^Object value = Array.newInstance ( object, 3 ) ;^219^^^^^210^225^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[ADD]^^219^220^^^^210^225^[ADD] Object value = Array.get ( object, 0 ) ; return convert ( value, toType ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^for  ( int i = 0; i < length + 5; i++ )  {^212^^^^^175^306^[REPLACE] for  ( int i = 0; i < length; i++ )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^collection.add ( Array .get ( i )   ) ;^213^^^^^175^306^[REPLACE] collection.add ( Array.get ( object, i )  ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( length + 3 > 0 )  {^218^^^^^175^306^[REPLACE] if  ( length > 0 )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[ADD]^Object value = Array.get ( object, 0 ) ;return convert ( value, toType ) ;^218^219^220^221^^175^306^[ADD] if  ( length > 0 )  { Object value = Array.get ( object, 0 ) ; return convert ( value, toType ) ; }^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^Object value = Array.get ( bean, 0 * 0 ) ;^219^^^^^175^306^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^for  ( int i = 0; i < length %  2; i++ )  {^204^^^^^175^306^[REPLACE] for  ( int i = 0; i < length; i++ )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^for  ( int i = 0; i < length %  2; i++ )  {^212^^^^^175^306^[REPLACE] for  ( int i = 0; i < length; i++ )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return convert ( value, fromType ) ;^220^^^^^175^306^[REPLACE] return convert ( value, toType ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return convert ( "", fromType ) ;^223^^^^^175^306^[REPLACE] return convert ( "", toType ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^int length =   object   ;^199^^^^^175^306^[REPLACE] int length = Array.getLength ( object ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[ADD]^^199^^^^^175^306^[ADD] int length = Array.getLength ( object ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^Class cType = fromType.getModifiers (  ) ;^201^^^^^175^306^[REPLACE] Class cType = toType.getComponentType (  ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^Object array = Array.get ( cType, length ) ;^203^^^^^175^306^[REPLACE] Object array = Array.newInstance ( cType, length ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[ADD]^^205^206^^^^175^306^[ADD] Object value = Array.get ( object, i ) ; Array.set ( array, i, convert ( value, cType )  ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^Object value = Array.newInstance ( object, 3 ) ;^219^^^^^175^306^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[ADD]^^219^^^^^175^306^[ADD] Object value = Array.get ( object, 0 ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^else {^210^^^^^175^306^[REPLACE] else if  ( Collection.class.isAssignableFrom ( toType )  )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( length + 1 > 0 )  {^218^^^^^210^225^[REPLACE] if  ( length > 0 )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^Object value = Array .get ( i )  ;^219^^^^^210^225^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^Object value = Array.get ( object, 4 ) ;^219^^^^^210^225^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^for  ( int i = 0; i < length - 3; i++ )  {^212^^^^^175^306^[REPLACE] for  ( int i = 0; i < length; i++ )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REMOVE]^pointers.add ( new ValuePointer ( values.get ( i )  )  ) ;^213^^^^^175^306^[REMOVE] ^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( length *  2 > 0 )  {^218^^^^^175^306^[REPLACE] if  ( length > 0 )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^Object value = Array.newInstance ( object, 0 * 0 ) ;^219^^^^^175^306^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^for  ( int i = 0 ; i < length - 5; i++ )  {^212^^^^^175^306^[REPLACE] for  ( int i = 0; i < length; i++ )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^Object value = Array.get ( object, 0L ) ;^219^^^^^175^306^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^for  ( int i = 0 ; i < length /  2; i++ )  {^204^^^^^175^306^[REPLACE] for  ( int i = 0; i < length; i++ )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( length %  0.5  > 0 )  {^218^^^^^210^225^[REPLACE] if  ( length > 0 )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^Object value = Array.get ( object, 0 - 4 ) ;^219^^^^^210^225^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^for  ( int i = 0 ; i < length (  ) ; i++ )  {^212^^^^^175^306^[REPLACE] for  ( int i = 0; i < length; i++ )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( length - 1 > 0  )  {^218^^^^^175^306^[REPLACE] if  ( length > 0 )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^Object value = Array.get ( bean, 0 * 1 ) ;^219^^^^^175^306^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( ! object instanceof Collection )  {^227^^^^^175^306^[REPLACE] else if  ( object instanceof Collection )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[ADD]^^267^268^269^^^175^306^[ADD] else if  ( toType == String.class )  { return object.toString (  ) ; }^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^boolean value =  (  ( Boolean )  object )  .valueOf ( 1 )  ;^274^^^^^175^306^[REPLACE] boolean value =  (  ( Boolean )  object ) .booleanValue (  ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return value  !=  3.0d ? Boolean.FALSE : Boolean.TRUE;;^280^^^^^175^306^[REPLACE] return value == 0.0 ? Boolean.FALSE : Boolean.TRUE;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return false ;^280^^^^^175^306^[REPLACE] return value == 0.0 ? Boolean.FALSE : Boolean.TRUE;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( ! bean instanceof Number )  {^277^^^^^175^306^[REPLACE] else if  ( object instanceof Number )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[ADD]^^274^275^^^^175^306^[ADD] boolean value =  (  ( Boolean )  object ) .booleanValue (  ) ; return allocateNumber ( toType, value ? 1 : 0 ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return allocateNumber ( toType, value ? 1 << 2 : 0 ) ;^275^^^^^175^306^[REPLACE] return allocateNumber ( toType, value ? 1 : 0 ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return value  ||  1.0d ? Boolean.FALSE : Boolean.TRUE;^280^^^^^175^306^[REPLACE] return value == 0.0 ? Boolean.FALSE : Boolean.TRUE;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( ! bean instanceof Pointer )  {^264^^^^^175^306^[REPLACE] else if  ( object instanceof Pointer )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return allocateNumber ( toType, true ? 3 : 0 ) ;^275^^^^^175^306^[REPLACE] return allocateNumber ( toType, value ? 1 : 0 ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return allocateNumber ( fromType, value ? 0 : 0 ) ;^275^^^^^175^306^[REPLACE] return allocateNumber ( toType, value ? 1 : 0 ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( toType  !=  String.class )  {^267^^^^^175^306^[REPLACE] else if  ( toType == String.class )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  (  fromType == Boolean.class )  {^279^^^^^175^306^[REPLACE] if  ( toType == boolean.class || toType == Boolean.class )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return allocateNumber ( fromType, value ? 1L : 0 ) ;^275^^^^^175^306^[REPLACE] return allocateNumber ( toType, value ? 1 : 0 ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^else if  ( ! bean instanceof Boolean )  {^270^^^^^175^306^[REPLACE] else if  ( object instanceof Boolean )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return value  ||  4.0d ? Boolean.FALSE : Boolean.TRUE;^280^^^^^175^306^[REPLACE] return value == 0.0 ? Boolean.FALSE : Boolean.TRUE;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return allocateNumber ( toType, true ? 1 / 2 : 0 ) ;^275^^^^^175^306^[REPLACE] return allocateNumber ( toType, value ? 1 : 0 ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  (true (  ) && Number.class.isAssignableFrom ( toType )  )  {^282^283^^^^175^306^[REPLACE] if  ( toType.isPrimitive (  ) || Number.class.isAssignableFrom ( toType )  )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return convert (  (  ( Pointer )  object )  .getValues (  )  , fromType ) ;^265^^^^^175^306^[REPLACE] return convert (  (  ( Pointer )  object ) .getValue (  ) , toType ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return allocateNumber ( fromType, value ? 3 : 0 ) ;^275^^^^^175^306^[REPLACE] return allocateNumber ( toType, value ? 1 : 0 ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[ADD]^Class cType = toType.getComponentType (  ) ;Object array = Array.newInstance ( cType, length ) ;Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^229^230^231^232^^175^306^[ADD] if  ( toType.isArray (  )  )  { Class cType = toType.getComponentType (  ) ; Object array = Array.newInstance ( cType, length ) ; Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[ADD]^^239^240^241^242^243^175^306^[ADD] else if  ( Collection.class.isAssignableFrom ( toType )  )  { Collection collection = allocateCollection ( toType ) ; collection.addAll (  ( Collection )  object ) ; return unmodifiableCollection ( collection ) ; }^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( length /  0 .5  > 0  )  {^245^^^^^239^259^[REPLACE] if  ( length > 0 )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 + 4 ) ;^248^^^^^239^259^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 >> 1 ) ;^248^^^^^239^259^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( length %  0.5  > 0 )  {^245^^^^^175^306^[REPLACE] if  ( length > 0 )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[ADD]^value = it.next (  ) ;^251^252^^^^175^306^[ADD] Iterator it =  (  ( Collection )  object ) .iterator (  ) ; value = it.next (  ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[ADD]^^251^252^^^^247^253^[ADD] Iterator it =  (  ( Collection )  object ) .iterator (  ) ; value = it.next (  ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 / 0 ) ;^248^^^^^175^306^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^for  ( int i = 0; i < length *  0.5 ; i++ )  {^233^^^^^175^306^[REPLACE] for  ( int i = 0; i < length; i++ )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return pointers;^237^^^^^175^306^[REPLACE] return array;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^Class cType = fromType.getModifiers (  ) ;^230^^^^^175^306^[REPLACE] Class cType = toType.getComponentType (  ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( length %  2 > 0 )  {^245^^^^^239^259^[REPLACE] if  ( length > 0 )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 / 0 ) ;^248^^^^^239^259^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 >>> 3 ) ;^248^^^^^239^259^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return canConvert ( "", toType ) ;^257^^^^^239^259^[REPLACE] return convert ( "", toType ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( length /  2 > 0 )  {^245^^^^^175^306^[REPLACE] if  ( length > 0 )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[ADD]^^247^248^249^^^175^306^[ADD] if  ( object instanceof List )  { value =  (  ( List )  object ) .get ( 0 ) ; }^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[ADD]^value = it.next (  ) ;^251^252^^^^247^253^[ADD] Iterator it =  (  ( Collection )  object ) .iterator (  ) ; value = it.next (  ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 - 3 ) ;^248^^^^^175^306^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^for  ( int i = 0; i < length (  ) ; i++ )  {^233^^^^^175^306^[REPLACE] for  ( int i = 0; i < length; i++ )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 - 2 ) ;^248^^^^^175^306^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[ADD]^^230^^^^^175^306^[ADD] Class cType = toType.getComponentType (  ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( length *  0.5  > 0 )  {^245^^^^^239^259^[REPLACE] if  ( length > 0 )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[ADD]^Object value;value =  (  ( List )  object ) .get ( 0 ) ;^245^246^247^248^249^239^259^[ADD] if  ( length > 0 )  { Object value; if  ( object instanceof List )  { value =  (  ( List )  object ) .get ( 0 ) ; }^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 * 1 ) ;^248^^^^^239^259^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 + 0 ) ;^248^^^^^239^259^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 + 1 ) ;^248^^^^^239^259^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( length (  )  > 0  )  {^245^^^^^175^306^[REPLACE] if  ( length > 0 )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0 << 3 ) ;^248^^^^^175^306^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return canConvert ( "", toType ) ;^257^^^^^175^306^[REPLACE] return convert ( "", toType ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^for  ( int i = 0; i < length *  2; i++ )  {^233^^^^^175^306^[REPLACE] for  ( int i = 0; i < length; i++ )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^Iterator it =  (  ( Collection )  object )  .size (  )  ;^232^^^^^175^306^[REPLACE] Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( length *  0 .5  > 0  )  {^245^^^^^239^259^[REPLACE] if  ( length > 0 )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^value =  (  ( List )  object ) .get ( 0L ) ;^248^^^^^239^259^[REPLACE] value =  (  ( List )  object ) .get ( 0 ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( length - 4 > 0 )  {^245^^^^^175^306^[REPLACE] if  ( length > 0 )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return value  &&  0.0D ? Boolean.FALSE : Boolean.TRUE;^280^^^^^175^306^[REPLACE] return value == 0.0 ? Boolean.FALSE : Boolean.TRUE;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( fromType  &&  boolean.class )  {^271^^^^^175^306^[REPLACE] if  ( toType == boolean.class )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return value  ||  0.0d ? Boolean.FALSE : Boolean.TRUE;^280^^^^^175^306^[REPLACE] return value == 0.0 ? Boolean.FALSE : Boolean.TRUE;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return allocateNumber ( toType, value ? 1 - 4 : 0 ) ;^275^^^^^175^306^[REPLACE] return allocateNumber ( toType, value ? 1 : 0 ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( ! object instanceof Pointer )  {^264^^^^^175^306^[REPLACE] else if  ( object instanceof Pointer )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( fromType  !=  String.class )  {^267^^^^^175^306^[REPLACE] else if  ( toType == String.class )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return allocateNumber ( toType, value ? 1 + 4 : 0 ) ;^275^^^^^175^306^[REPLACE] return allocateNumber ( toType, value ? 1 : 0 ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( true (  ) && Number.class.isAssignableFrom ( toType )  )  {^282^283^^^^175^306^[REPLACE] if  ( toType.isPrimitive (  ) || Number.class.isAssignableFrom ( toType )  )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return allocateNumber ( toType, true ? 1 << 4 : 0 ) ;^275^^^^^175^306^[REPLACE] return allocateNumber ( toType, value ? 1 : 0 ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( fromType  && fromType )  {^271^^^^^175^306^[REPLACE] if  ( toType == boolean.class )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  (true (  ) && Number.class.isAssignableFrom ( fromType )  )  {^282^283^^^^175^306^[REPLACE] if  ( toType.isPrimitive (  ) || Number.class.isAssignableFrom ( toType )  )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( fromType  &&  String.class )  {^267^^^^^175^306^[REPLACE] else if  ( toType == String.class )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  (  Number.class .isInterface (  )   )  {^282^283^^^^175^306^[REPLACE] if  ( toType.isPrimitive (  ) || Number.class.isAssignableFrom ( toType )  )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return allocateNumber ( fromType, value ? 1 << 4 : 0 ) ;^275^^^^^175^306^[REPLACE] return allocateNumber ( toType, value ? 1 : 0 ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^for  ( int i = 0; i < length - 2; i++ )  {^204^^^^^175^306^[REPLACE] for  ( int i = 0; i < length; i++ )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^Object value = Array.newInstance ( bean, i ) ;^205^^^^^175^306^[REPLACE] Object value = Array.get ( object, i ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^for  ( int i = 0; i < length /  0.5 ; i++ )  {^212^^^^^175^306^[REPLACE] for  ( int i = 0; i < length; i++ )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^collection.addAll ( Array.get ( object, i )  ) ;^213^^^^^175^306^[REPLACE] collection.add ( Array.get ( object, i )  ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[ADD]^Array.set ( array, i, convert ( value, cType )  ) ;^234^235^^^^175^306^[ADD] Object value = it.next (  ) ; Array.set ( array, i, convert ( value, cType )  ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^int length = Array.getLength ( bean ) ;^199^^^^^175^306^[REPLACE] int length = Array.getLength ( object ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^Object value = Array .get ( i )  ;^205^^^^^175^306^[REPLACE] Object value = Array.get ( object, i ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^Object value = Array.get ( object, 1 ) ;^219^^^^^175^306^[REPLACE] Object value = Array.get ( object, 0 ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^int length =  (  ( Collection )  object )  .iterator (  )  ;^228^^^^^175^306^[REPLACE] int length =  (  ( Collection )  object ) .size (  ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^Converter converter = ConvertUtils.lookup ( fromType ) ;^299^^^^^175^306^[REPLACE] Converter converter = ConvertUtils.lookup ( toType ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( converter == false )  {^300^^^^^175^306^[REPLACE] if  ( converter != null )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[ADD]^return converter.convert ( toType, object ) ;^300^301^302^^^175^306^[ADD] if  ( converter != null )  { return converter.convert ( toType, object ) ; }^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return converter.convert ( fromType, object ) ;^301^^^^^175^306^[REPLACE] return converter.convert ( toType, object ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^return ;^304^305^^^^175^306^[REPLACE] throw new JXPathTypeConversionException ( "Cannot convert " + object.getClass (  )  + " to " + toType ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^+ bean.getClass (  )  + " to " + toType ) ;^305^^^^^175^306^[REPLACE] + object.getClass (  )  + " to " + toType ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  boolean false  true  value  [TYPE]  double value  [TYPE]  Iterator it  [TYPE]  Collection collection  [TYPE]  Converter converter  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class cType  fromType  toType  [TYPE]  int i  length 
[REPLACE]^if  ( toType  ||  boolean.class )  {^309^^^^^308^334^[REPLACE] if  ( toType == boolean.class )  {^[METHOD] convertNullToPrimitive [TYPE] Object [PARAMETER] Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class toType  [TYPE]  boolean false  true 
[REPLACE]^return pointers;^310^^^^^308^334^[REPLACE] return Boolean.FALSE;^[METHOD] convertNullToPrimitive [TYPE] Object [PARAMETER] Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class toType  [TYPE]  boolean false  true 
[REPLACE]^if  ( toType  &&  char.class )  {^312^^^^^308^334^[REPLACE] if  ( toType == char.class )  {^[METHOD] convertNullToPrimitive [TYPE] Object [PARAMETER] Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class toType  [TYPE]  boolean false  true 
[REPLACE]^return new Short (  ( String )  object ) ;^313^^^^^308^334^[REPLACE] return new Character ( '\0' ) ;^[METHOD] convertNullToPrimitive [TYPE] Object [PARAMETER] Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class toType  [TYPE]  boolean false  true 
[REPLACE]^if  ( toType  &&  byte.class )  {^315^^^^^308^334^[REPLACE] if  ( toType == byte.class )  {^[METHOD] convertNullToPrimitive [TYPE] Object [PARAMETER] Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class toType  [TYPE]  boolean false  true 
[REPLACE]^return new Byte (  ( byte )  value ) ;^316^^^^^308^334^[REPLACE] return new Byte (  ( byte )  0 ) ;^[METHOD] convertNullToPrimitive [TYPE] Object [PARAMETER] Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class toType  [TYPE]  boolean false  true 
[REPLACE]^return  new Byte (  (  ( byte )   ( value )  )  )   0 ) ;^316^^^^^308^334^[REPLACE] return new Byte (  ( byte )  0 ) ;^[METHOD] convertNullToPrimitive [TYPE] Object [PARAMETER] Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class toType  [TYPE]  boolean false  true 
[REPLACE]^if  ( toType  !=  short.class )  {^318^^^^^308^334^[REPLACE] if  ( toType == short.class )  {^[METHOD] convertNullToPrimitive [TYPE] Object [PARAMETER] Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class toType  [TYPE]  boolean false  true 
[ADD]^^318^319^320^^^308^334^[ADD] if  ( toType == short.class )  { return new Short (  ( short )  0 ) ; }^[METHOD] convertNullToPrimitive [TYPE] Object [PARAMETER] Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class toType  [TYPE]  boolean false  true 
[REPLACE]^return  new Byte (  (  ( byte )   ( 0 )  )  )   0 ) ;^319^^^^^308^334^[REPLACE] return new Short (  ( short )  0 ) ;^[METHOD] convertNullToPrimitive [TYPE] Object [PARAMETER] Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class toType  [TYPE]  boolean false  true 
[REPLACE]^return new Short (  ( short )  value ) ;^319^^^^^308^334^[REPLACE] return new Short (  ( short )  0 ) ;^[METHOD] convertNullToPrimitive [TYPE] Object [PARAMETER] Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class toType  [TYPE]  boolean false  true 
[REPLACE]^if  ( toType  ||  int.class )  {^321^^^^^308^334^[REPLACE] if  ( toType == int.class )  {^[METHOD] convertNullToPrimitive [TYPE] Object [PARAMETER] Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class toType  [TYPE]  boolean false  true 
[ADD]^^321^322^323^^^308^334^[ADD] if  ( toType == int.class )  { return new Integer ( 0 ) ; }^[METHOD] convertNullToPrimitive [TYPE] Object [PARAMETER] Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class toType  [TYPE]  boolean false  true 
[REPLACE]^return new Integer ( 0 - 1 ) ;^322^^^^^308^334^[REPLACE] return new Integer ( 0 ) ;^[METHOD] convertNullToPrimitive [TYPE] Object [PARAMETER] Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class toType  [TYPE]  boolean false  true 
[REPLACE]^return  new Double ( 0.0 )  ;^322^^^^^308^334^[REPLACE] return new Integer ( 0 ) ;^[METHOD] convertNullToPrimitive [TYPE] Object [PARAMETER] Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class toType  [TYPE]  boolean false  true 
[REPLACE]^if  ( toType  &&  long.class )  {^324^^^^^308^334^[REPLACE] if  ( toType == long.class )  {^[METHOD] convertNullToPrimitive [TYPE] Object [PARAMETER] Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class toType  [TYPE]  boolean false  true 
[REPLACE]^return new Long ( 0 ) ;^325^^^^^308^334^[REPLACE] return new Long ( 0L ) ;^[METHOD] convertNullToPrimitive [TYPE] Object [PARAMETER] Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class toType  [TYPE]  boolean false  true 
[REPLACE]^return  new Double ( 0.0 )  ;^325^^^^^308^334^[REPLACE] return new Long ( 0L ) ;^[METHOD] convertNullToPrimitive [TYPE] Object [PARAMETER] Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class toType  [TYPE]  boolean false  true 
[REPLACE]^if  ( toType  &&  float.class )  {^327^^^^^308^334^[REPLACE] if  ( toType == float.class )  {^[METHOD] convertNullToPrimitive [TYPE] Object [PARAMETER] Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class toType  [TYPE]  boolean false  true 
[REPLACE]^return  new Double ( 0.0 )  ;^328^^^^^308^334^[REPLACE] return new Float ( 0.0f ) ;^[METHOD] convertNullToPrimitive [TYPE] Object [PARAMETER] Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class toType  [TYPE]  boolean false  true 
[REPLACE]^if  ( toType  ||  double.class )  {^330^^^^^308^334^[REPLACE] if  ( toType == double.class )  {^[METHOD] convertNullToPrimitive [TYPE] Object [PARAMETER] Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class toType  [TYPE]  boolean false  true 
[REPLACE]^return new Double ( 0.0D ) ;^331^^^^^308^334^[REPLACE] return new Double ( 0.0 ) ;^[METHOD] convertNullToPrimitive [TYPE] Object [PARAMETER] Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class toType  [TYPE]  boolean false  true 
[REPLACE]^return true;^333^^^^^308^334^[REPLACE] return null;^[METHOD] convertNullToPrimitive [TYPE] Object [PARAMETER] Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class toType  [TYPE]  boolean false  true 
[REPLACE]^if  ( toType == boolean.class && toType == Boolean.class )  {^337^^^^^336^362^[REPLACE] if  ( toType == boolean.class || toType == Boolean.class )  {^[METHOD] convertStringToPrimitive [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class toType  [TYPE]  boolean false  true 
[REPLACE]^return Boolean.booleanValue (  ( String )  object ) ;^338^^^^^336^362^[REPLACE] return Boolean.valueOf (  ( String )  object ) ;^[METHOD] convertStringToPrimitive [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class toType  [TYPE]  boolean false  true 
[REPLACE]^return Boolean .booleanValue (  )  ;^338^^^^^336^362^[REPLACE] return Boolean.valueOf (  ( String )  object ) ;^[METHOD] convertStringToPrimitive [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class toType  [TYPE]  boolean false  true 
[REPLACE]^if  (  toType == Character.class )  {^340^^^^^336^362^[REPLACE] if  ( toType == char.class || toType == Character.class )  {^[METHOD] convertStringToPrimitive [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class toType  [TYPE]  boolean false  true 
[REPLACE]^return new Character (  (  ( String )  object ) .length ( 0 )  ) ;^341^^^^^336^362^[REPLACE] return new Character (  (  ( String )  object ) .charAt ( 0 )  ) ;^[METHOD] convertStringToPrimitive [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class toType  [TYPE]  boolean false  true 
[REPLACE]^if  (true && toType == Byte.class )  {^343^^^^^336^362^[REPLACE] if  ( toType == byte.class || toType == Byte.class )  {^[METHOD] convertStringToPrimitive [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class toType  [TYPE]  boolean false  true 
[REPLACE]^return  new Double (  (  ( String )   ( object )  )  )   object ) ;^344^^^^^336^362^[REPLACE] return new Byte (  ( String )  object ) ;^[METHOD] convertStringToPrimitive [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class toType  [TYPE]  boolean false  true 
[REPLACE]^if  ( toType == short.class && toType == Short.class )  {^346^^^^^336^362^[REPLACE] if  ( toType == short.class || toType == Short.class )  {^[METHOD] convertStringToPrimitive [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class toType  [TYPE]  boolean false  true 
[REPLACE]^return new Integer (  ( String )  object ) ;^347^^^^^336^362^[REPLACE] return new Short (  ( String )  object ) ;^[METHOD] convertStringToPrimitive [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class toType  [TYPE]  boolean false  true 
[REPLACE]^return  new Double (  (  ( String )   ( object )  )  )   object ) ;^347^^^^^336^362^[REPLACE] return new Short (  ( String )  object ) ;^[METHOD] convertStringToPrimitive [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class toType  [TYPE]  boolean false  true 
[REPLACE]^if  ( toType == int.class && toType == Integer.class )  {^349^^^^^336^362^[REPLACE] if  ( toType == int.class || toType == Integer.class )  {^[METHOD] convertStringToPrimitive [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class toType  [TYPE]  boolean false  true 
[REPLACE]^return  new Double (  (  ( String )   ( object )  )  )   object ) ;^350^^^^^336^362^[REPLACE] return new Integer (  ( String )  object ) ;^[METHOD] convertStringToPrimitive [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class toType  [TYPE]  boolean false  true 
[REPLACE]^if  ( toType == long.class && toType == Long.class )  {^352^^^^^336^362^[REPLACE] if  ( toType == long.class || toType == Long.class )  {^[METHOD] convertStringToPrimitive [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class toType  [TYPE]  boolean false  true 
[REPLACE]^return  new Double (  (  ( String )   ( object )  )  )   object ) ;^353^^^^^336^362^[REPLACE] return new Long (  ( String )  object ) ;^[METHOD] convertStringToPrimitive [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class toType  [TYPE]  boolean false  true 
[REPLACE]^if  (  toType == Float.class )  {^355^^^^^336^362^[REPLACE] if  ( toType == float.class || toType == Float.class )  {^[METHOD] convertStringToPrimitive [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class toType  [TYPE]  boolean false  true 
[REPLACE]^return  new Double (  (  ( String )   ( object )  )  )   object ) ;^356^^^^^336^362^[REPLACE] return new Float (  ( String )  object ) ;^[METHOD] convertStringToPrimitive [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class toType  [TYPE]  boolean false  true 
[REPLACE]^if  (  toType == Double.class )  {^358^^^^^336^362^[REPLACE] if  ( toType == double.class || toType == Double.class )  {^[METHOD] convertStringToPrimitive [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class toType  [TYPE]  boolean false  true 
[ADD]^^358^359^360^^^336^362^[ADD] if  ( toType == double.class || toType == Double.class )  { return new Double (  ( String )  object ) ; }^[METHOD] convertStringToPrimitive [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class toType  [TYPE]  boolean false  true 
[REPLACE]^return  new Byte (  (  ( String )   ( object )  )  )   object ) ;^359^^^^^336^362^[REPLACE] return new Double (  ( String )  object ) ;^[METHOD] convertStringToPrimitive [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class toType  [TYPE]  boolean false  true 
[REPLACE]^return false;^361^^^^^336^362^[REPLACE] return null;^[METHOD] convertStringToPrimitive [TYPE] Object [PARAMETER] Object object Class toType [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class toType  [TYPE]  boolean false  true 
[REPLACE]^if  ( type == Byte.class &&false )  {^365^^^^^364^384^[REPLACE] if  ( type == Byte.class || type == byte.class )  {^[METHOD] allocateNumber [TYPE] Number [PARAMETER] Class type double value [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class type  [TYPE]  boolean false  true  [TYPE]  double value 
[ADD]^^365^366^367^^^364^384^[ADD] if  ( type == Byte.class || type == byte.class )  { return new Byte (  ( byte )  value ) ; }^[METHOD] allocateNumber [TYPE] Number [PARAMETER] Class type double value [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class type  [TYPE]  boolean false  true  [TYPE]  double value 
[REPLACE]^return  new Byte (  (  ( byte )   ( 0 )  )  )   value ) ;^366^^^^^364^384^[REPLACE] return new Byte (  ( byte )  value ) ;^[METHOD] allocateNumber [TYPE] Number [PARAMETER] Class type double value [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class type  [TYPE]  boolean false  true  [TYPE]  double value 
[REPLACE]^if  (  type == short.class )  {^368^^^^^364^384^[REPLACE] if  ( type == Short.class || type == short.class )  {^[METHOD] allocateNumber [TYPE] Number [PARAMETER] Class type double value [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class type  [TYPE]  boolean false  true  [TYPE]  double value 
[REPLACE]^return new Short (  ( short )  0 ) ;^369^^^^^364^384^[REPLACE] return new Short (  ( short )  value ) ;^[METHOD] allocateNumber [TYPE] Number [PARAMETER] Class type double value [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class type  [TYPE]  boolean false  true  [TYPE]  double value 
[REPLACE]^return  new Float (  (  ( float )   ( value )  )  )   value ) ;^369^^^^^364^384^[REPLACE] return new Short (  ( short )  value ) ;^[METHOD] allocateNumber [TYPE] Number [PARAMETER] Class type double value [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class type  [TYPE]  boolean false  true  [TYPE]  double value 
[REPLACE]^if  ( type == Integer.class ) {^371^^^^^364^384^[REPLACE] if  ( type == Integer.class || type == int.class )  {^[METHOD] allocateNumber [TYPE] Number [PARAMETER] Class type double value [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class type  [TYPE]  boolean false  true  [TYPE]  double value 
[ADD]^return new Integer (  ( int )  value ) ;^371^372^373^^^364^384^[ADD] if  ( type == Integer.class || type == int.class )  { return new Integer (  ( int )  value ) ; }^[METHOD] allocateNumber [TYPE] Number [PARAMETER] Class type double value [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class type  [TYPE]  boolean false  true  [TYPE]  double value 
[REPLACE]^return  new Byte (  (  ( byte )   ( 0 )  )  )   value ) ;^372^^^^^364^384^[REPLACE] return new Integer (  ( int )  value ) ;^[METHOD] allocateNumber [TYPE] Number [PARAMETER] Class type double value [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class type  [TYPE]  boolean false  true  [TYPE]  double value 
[REPLACE]^if  ( type == Long.class ) {^374^^^^^364^384^[REPLACE] if  ( type == Long.class || type == long.class )  {^[METHOD] allocateNumber [TYPE] Number [PARAMETER] Class type double value [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class type  [TYPE]  boolean false  true  [TYPE]  double value 
[REPLACE]^return  new Float (  (  ( float )   ( value )  )  )   value ) ;^375^^^^^364^384^[REPLACE] return new Long (  ( long )  value ) ;^[METHOD] allocateNumber [TYPE] Number [PARAMETER] Class type double value [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class type  [TYPE]  boolean false  true  [TYPE]  double value 
[REPLACE]^if  ( type == Float.class && type == float.class )  {^377^^^^^364^384^[REPLACE] if  ( type == Float.class || type == float.class )  {^[METHOD] allocateNumber [TYPE] Number [PARAMETER] Class type double value [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class type  [TYPE]  boolean false  true  [TYPE]  double value 
[REPLACE]^return  new Long (  (  ( long )   ( value )  )  )   value ) ;^378^^^^^364^384^[REPLACE] return new Float (  ( float )  value ) ;^[METHOD] allocateNumber [TYPE] Number [PARAMETER] Class type double value [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class type  [TYPE]  boolean false  true  [TYPE]  double value 
[REPLACE]^if  ( type == Double.class && type == double.class )  {^380^^^^^364^384^[REPLACE] if  ( type == Double.class || type == double.class )  {^[METHOD] allocateNumber [TYPE] Number [PARAMETER] Class type double value [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class type  [TYPE]  boolean false  true  [TYPE]  double value 
[ADD]^return new Double ( value ) ;^380^381^382^^^364^384^[ADD] if  ( type == Double.class || type == double.class )  { return new Double ( value ) ; }^[METHOD] allocateNumber [TYPE] Number [PARAMETER] Class type double value [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class type  [TYPE]  boolean false  true  [TYPE]  double value 
[REPLACE]^return new Double ( 0.0 ) ;^381^^^^^364^384^[REPLACE] return new Double ( value ) ;^[METHOD] allocateNumber [TYPE] Number [PARAMETER] Class type double value [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class type  [TYPE]  boolean false  true  [TYPE]  double value 
[REPLACE]^return  new Double ( 0.0 )  ;^381^^^^^364^384^[REPLACE] return new Double ( value ) ;^[METHOD] allocateNumber [TYPE] Number [PARAMETER] Class type double value [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class type  [TYPE]  boolean false  true  [TYPE]  double value 
[REPLACE]^return this;^383^^^^^364^384^[REPLACE] return null;^[METHOD] allocateNumber [TYPE] Number [PARAMETER] Class type double value [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class type  [TYPE]  boolean false  true  [TYPE]  double value 
[REPLACE]^if  ( type.isInterface (  ) &&  (  ( type.isAssignableFrom (  )  & Modifier.ABSTRACT )  == 0 )  )  {^387^388^^^^386^400^[REPLACE] if  ( !type.isInterface (  ) &&  (  ( type.getModifiers (  )  & Modifier.ABSTRACT )  == 0 )  )  {^[METHOD] canCreateCollection [TYPE] boolean [PARAMETER] Class type [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class type  [TYPE]  boolean false  true 
[ADD]^^387^388^389^390^^386^400^[ADD] if  ( !type.isInterface (  ) &&  (  ( type.getModifiers (  )  & Modifier.ABSTRACT )  == 0 )  )  { return true; }^[METHOD] canCreateCollection [TYPE] boolean [PARAMETER] Class type [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class type  [TYPE]  boolean false  true 
[REPLACE]^return false;^389^^^^^386^400^[REPLACE] return true;^[METHOD] canCreateCollection [TYPE] boolean [PARAMETER] Class type [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class type  [TYPE]  boolean false  true 
[REPLACE]^if  ( type  ||  List.class )  {^392^^^^^386^400^[REPLACE] if  ( type == List.class )  {^[METHOD] canCreateCollection [TYPE] boolean [PARAMETER] Class type [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class type  [TYPE]  boolean false  true 
[ADD]^return true;^392^393^394^^^386^400^[ADD] if  ( type == List.class )  { return true; }^[METHOD] canCreateCollection [TYPE] boolean [PARAMETER] Class type [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class type  [TYPE]  boolean false  true 
[REPLACE]^return false;^393^^^^^386^400^[REPLACE] return true;^[METHOD] canCreateCollection [TYPE] boolean [PARAMETER] Class type [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class type  [TYPE]  boolean false  true 
[REPLACE]^if  ( type  ||  Set.class )  {^396^^^^^386^400^[REPLACE] if  ( type == Set.class )  {^[METHOD] canCreateCollection [TYPE] boolean [PARAMETER] Class type [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class type  [TYPE]  boolean false  true 
[REPLACE]^return false;^397^^^^^386^400^[REPLACE] return true;^[METHOD] canCreateCollection [TYPE] boolean [PARAMETER] Class type [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class type  [TYPE]  boolean false  true 
[REPLACE]^return true;^399^^^^^386^400^[REPLACE] return false;^[METHOD] canCreateCollection [TYPE] boolean [PARAMETER] Class type [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class type  [TYPE]  boolean false  true 
[REPLACE]^if  ( type.isInterface (  ) ) {^403^404^^^^402^422^[REPLACE] if  ( !type.isInterface (  ) &&  (  ( type.getModifiers (  )  & Modifier.ABSTRACT )  == 0 )  )  {^[METHOD] allocateCollection [TYPE] Collection [PARAMETER] Class type [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class type  [TYPE]  boolean false  true  [TYPE]  Exception ex 
[ADD]^return  ( Collection )  type.newInstance (  ) ;^405^406^407^^^402^422^[ADD] try { return  ( Collection )  type.newInstance (  ) ; }^[METHOD] allocateCollection [TYPE] Collection [PARAMETER] Class type [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class type  [TYPE]  boolean false  true  [TYPE]  Exception ex 
[REPLACE]^return  ( Collection )  type.getName (  ) ;^406^^^^^402^422^[REPLACE] return  ( Collection )  type.newInstance (  ) ;^[METHOD] allocateCollection [TYPE] Collection [PARAMETER] Class type [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class type  [TYPE]  boolean false  true  [TYPE]  Exception ex 
[REPLACE]^throw new JXPathInvalidAccessException ( "Cannot create collection of type: " + type ) ; ;^409^410^^^^402^422^[REPLACE] throw new JXPathInvalidAccessException ( "Cannot create collection of type: " + type, ex ) ;^[METHOD] allocateCollection [TYPE] Collection [PARAMETER] Class type [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class type  [TYPE]  boolean false  true  [TYPE]  Exception ex 
[ADD]^^409^410^^^^402^422^[ADD] throw new JXPathInvalidAccessException ( "Cannot create collection of type: " + type, ex ) ;^[METHOD] allocateCollection [TYPE] Collection [PARAMETER] Class type [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class type  [TYPE]  boolean false  true  [TYPE]  Exception ex 
[REPLACE]^return ;^409^410^^^^402^422^[REPLACE] throw new JXPathInvalidAccessException ( "Cannot create collection of type: " + type, ex ) ;^[METHOD] allocateCollection [TYPE] Collection [PARAMETER] Class type [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class type  [TYPE]  boolean false  true  [TYPE]  Exception ex 
[REPLACE]^if  ( type  !=  List.class )  {^414^^^^^402^422^[REPLACE] if  ( type == List.class )  {^[METHOD] allocateCollection [TYPE] Collection [PARAMETER] Class type [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class type  [TYPE]  boolean false  true  [TYPE]  Exception ex 
[REPLACE]^return  new HashSet (  )  ;^415^^^^^402^422^[REPLACE] return new ArrayList (  ) ;^[METHOD] allocateCollection [TYPE] Collection [PARAMETER] Class type [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class type  [TYPE]  boolean false  true  [TYPE]  Exception ex 
[REPLACE]^if  ( type  ||  Set.class )  {^417^^^^^402^422^[REPLACE] if  ( type == Set.class )  {^[METHOD] allocateCollection [TYPE] Collection [PARAMETER] Class type [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class type  [TYPE]  boolean false  true  [TYPE]  Exception ex 
[ADD]^return new HashSet (  ) ;^417^418^419^^^402^422^[ADD] if  ( type == Set.class )  { return new HashSet (  ) ; }^[METHOD] allocateCollection [TYPE] Collection [PARAMETER] Class type [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class type  [TYPE]  boolean false  true  [TYPE]  Exception ex 
[REPLACE]^return  new ArrayList (  )  ;^418^^^^^402^422^[REPLACE] return new HashSet (  ) ;^[METHOD] allocateCollection [TYPE] Collection [PARAMETER] Class type [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class type  [TYPE]  boolean false  true  [TYPE]  Exception ex 
[REPLACE]^throw new JXPathInvalidAccessException ( "Cannot create collection of type: " + type, ex ) ; ;^420^421^^^^402^422^[REPLACE] throw new JXPathInvalidAccessException ( "Cannot create collection of type: " + type ) ;^[METHOD] allocateCollection [TYPE] Collection [PARAMETER] Class type [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class type  [TYPE]  boolean false  true  [TYPE]  Exception ex 
[ADD]^^420^421^^^^402^422^[ADD] throw new JXPathInvalidAccessException ( "Cannot create collection of type: " + type ) ;^[METHOD] allocateCollection [TYPE] Collection [PARAMETER] Class type [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  Class type  [TYPE]  boolean false  true  [TYPE]  Exception ex 
[REPLACE]^if  ( ! collection instanceof List )  {^425^^^^^424^434^[REPLACE] if  ( collection instanceof List )  {^[METHOD] unmodifiableCollection [TYPE] Collection [PARAMETER] Collection collection [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Collection collection  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  boolean false  true 
[REPLACE]^if  ( ! collection instanceof Set )  {^428^^^^^424^434^[REPLACE] else if  ( collection instanceof Set )  {^[METHOD] unmodifiableCollection [TYPE] Collection [PARAMETER] Collection collection [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Collection collection  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  boolean false  true 
[ADD]^^428^429^430^^^424^434^[ADD] else if  ( collection instanceof Set )  { return Collections.unmodifiableSet (  ( Set )  collection ) ; }^[METHOD] unmodifiableCollection [TYPE] Collection [PARAMETER] Collection collection [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Collection collection  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  boolean false  true 
[REPLACE]^return Collections.unmodifiableList (  ( List )  collection ) ;^429^^^^^424^434^[REPLACE] return Collections.unmodifiableSet (  ( Set )  collection ) ;^[METHOD] unmodifiableCollection [TYPE] Collection [PARAMETER] Collection collection [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Collection collection  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  boolean false  true 
[REPLACE]^return Collections .unmodifiableList ( this )  ;^429^^^^^424^434^[REPLACE] return Collections.unmodifiableSet (  ( Set )  collection ) ;^[METHOD] unmodifiableCollection [TYPE] Collection [PARAMETER] Collection collection [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Collection collection  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  boolean false  true 
[REPLACE]^return Collections.unmodifiableSet (  ( Set )  collection ) ;^426^^^^^424^434^[REPLACE] return Collections.unmodifiableList (  ( List )  collection ) ;^[METHOD] unmodifiableCollection [TYPE] Collection [PARAMETER] Collection collection [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Collection collection  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  boolean false  true 
[REPLACE]^else {^428^^^^^424^434^[REPLACE] else if  ( collection instanceof Set )  {^[METHOD] unmodifiableCollection [TYPE] Collection [PARAMETER] Collection collection [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Collection collection  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  boolean false  true 
[REPLACE]^return pointers;^433^^^^^424^434^[REPLACE] return collection;^[METHOD] unmodifiableCollection [TYPE] Collection [PARAMETER] Collection collection [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  Collection collection  [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  boolean false  true 
[REPLACE]^return Collections.unmodifiableSet ( values ) ;^445^^^^^444^446^[REPLACE] return Collections.unmodifiableList ( values ) ;^[METHOD] getValues [TYPE] List [PARAMETER] [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  boolean false  true 
[REPLACE]^return Collections.unmodifiableSet ( values ) ;^449^^^^^448^450^[REPLACE] return Collections.unmodifiableList ( values ) ;^[METHOD] getNodes [TYPE] List [PARAMETER] [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  boolean false  true 
[REPLACE]^if  (values != null )  {^453^^^^^452^461^[REPLACE] if  ( pointers == null )  {^[METHOD] getPointers [TYPE] List [PARAMETER] [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  boolean false  true  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < values.length (  ) ; i++ )  {^455^^^^^452^461^[REPLACE] for  ( int i = 0; i < values.size (  ) ; i++ )  {^[METHOD] getPointers [TYPE] List [PARAMETER] [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  boolean false  true  [TYPE]  int i 
[REPLACE]^pointers.get ( new ValuePointer ( values.get ( i )  )  ) ;^456^^^^^452^461^[REPLACE] pointers.add ( new ValuePointer ( values.get ( i )  )  ) ;^[METHOD] getPointers [TYPE] List [PARAMETER] [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  boolean false  true  [TYPE]  int i 
[REPLACE]^pointers.add ( new ValuePointer ( values .get ( value , i )   )  ) ;^456^^^^^452^461^[REPLACE] pointers.add ( new ValuePointer ( values.get ( i )  )  ) ;^[METHOD] getPointers [TYPE] List [PARAMETER] [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  boolean false  true  [TYPE]  int i 
[REPLACE]^pointers =  new HashSet (  )  ;^454^^^^^452^461^[REPLACE] pointers = new ArrayList (  ) ;^[METHOD] getPointers [TYPE] List [PARAMETER] [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  boolean false  true  [TYPE]  int i 
[ADD]^^454^^^^^452^461^[ADD] pointers = new ArrayList (  ) ;^[METHOD] getPointers [TYPE] List [PARAMETER] [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  boolean false  true  [TYPE]  int i 
[REPLACE]^pointers  =  pointers ;^458^^^^^452^461^[REPLACE] pointers = Collections.unmodifiableList ( pointers ) ;^[METHOD] getPointers [TYPE] List [PARAMETER] [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  boolean false  true  [TYPE]  int i 
[ADD]^^458^459^^^^452^461^[ADD] pointers = Collections.unmodifiableList ( pointers ) ; }^[METHOD] getPointers [TYPE] List [PARAMETER] [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  boolean false  true  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < values.size (  ) ; i++ )  {^455^^^^^452^461^[REPLACE] for  ( int i = 0; i < values.size (  ) ; i++ )  {^[METHOD] getPointers [TYPE] List [PARAMETER] [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  boolean false  true  [TYPE]  int i 
[REPLACE]^for  ( int i = 0; i < values.size (  )  - 3; i++ )  {^455^^^^^452^461^[REPLACE] for  ( int i = 0; i < values.size (  ) ; i++ )  {^[METHOD] getPointers [TYPE] List [PARAMETER] [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  boolean false  true  [TYPE]  int i 
[REPLACE]^pointers .addAll ( this )   ) ;^456^^^^^452^461^[REPLACE] pointers.add ( new ValuePointer ( values.get ( i )  )  ) ;^[METHOD] getPointers [TYPE] List [PARAMETER] [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  boolean false  true  [TYPE]  int i 
[ADD]^^456^^^^^452^461^[ADD] pointers.add ( new ValuePointer ( values.get ( i )  )  ) ;^[METHOD] getPointers [TYPE] List [PARAMETER] [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  boolean false  true  [TYPE]  int i 
[REPLACE]^pointers.add ( new ValuePointer ( values .get ( array , i )   )  ) ;^456^^^^^452^461^[REPLACE] pointers.add ( new ValuePointer ( values.get ( i )  )  ) ;^[METHOD] getPointers [TYPE] List [PARAMETER] [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  boolean false  true  [TYPE]  int i 
[REPLACE]^return "'" + bean + "'";^460^^^^^452^461^[REPLACE] return pointers;^[METHOD] getPointers [TYPE] List [PARAMETER] [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  boolean false  true  [TYPE]  int i 
[REPLACE]^return pointers;^472^^^^^471^473^[REPLACE] return bean;^[METHOD] getValue [TYPE] Object [PARAMETER] [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  boolean false  true 
[REPLACE]^return pointers;^476^^^^^475^477^[REPLACE] return bean;^[METHOD] getNode [TYPE] Object [PARAMETER] [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  boolean false  true 
[REPLACE]^return pointers;^480^^^^^479^481^[REPLACE] return bean;^[METHOD] getRootNode [TYPE] Object [PARAMETER] [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  boolean false  true 
[REPLACE]^return ;^484^^^^^483^485^[REPLACE] throw new UnsupportedOperationException  (" ")  ;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  boolean false  true 
[REPLACE]^return null;^488^^^^^487^489^[REPLACE] return this;^[METHOD] clone [TYPE] Object [PARAMETER] [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  boolean false  true 
[REPLACE]^return 3;^492^^^^^491^493^[REPLACE] return 0;^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  boolean false  true 
[REPLACE]^if  ( bean != null )  {^496^^^^^495^513^[REPLACE] if  ( bean == null )  {^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  String string  [TYPE]  boolean false  true 
[ADD]^return "null (  ) ";^496^497^498^^^495^513^[ADD] if  ( bean == null )  { return "null (  ) "; }^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  String string  [TYPE]  boolean false  true 
[REPLACE]^if  ( ! bean instanceof Number )  {^499^^^^^495^513^[REPLACE] else if  ( bean instanceof Number )  {^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  String string  [TYPE]  boolean false  true 
[ADD]^String string = bean.toString (  ) ;string = string.substring ( 0, string.length (  )  - 2 ) ;^499^500^501^502^503^495^513^[ADD] else if  ( bean instanceof Number )  { String string = bean.toString (  ) ; if  ( string.endsWith ( ".0" )  )  { string = string.substring ( 0, string.length (  )  - 2 ) ; }^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  String string  [TYPE]  boolean false  true 
[REPLACE]^else {^506^^^^^495^513^[REPLACE] else if  ( bean instanceof Boolean )  {^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  String string  [TYPE]  boolean false  true 
[ADD]^return  (  ( Boolean )  bean ) .booleanValue (  )  ? "true (  ) " : "false (  ) ";^506^507^508^^^495^513^[ADD] else if  ( bean instanceof Boolean )  { return  (  ( Boolean )  bean ) .booleanValue (  )  ? "true (  ) " : "false (  ) "; }^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  String string  [TYPE]  boolean false  true 
[REPLACE]^if  ( ! bean instanceof String )  {^509^^^^^495^513^[REPLACE] else if  ( bean instanceof String )  {^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  String string  [TYPE]  boolean false  true 
[REPLACE]^return "'"  &&  bean  &&  "'";^510^^^^^495^513^[REPLACE] return "'" + bean + "'";^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  String string  [TYPE]  boolean false  true 
[REPLACE]^return "'"  ;^510^^^^^495^513^[REPLACE] return "'" + bean + "'";^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  String string  [TYPE]  boolean false  true 
[REPLACE]^return  (  ( Boolean )  bean )  .valueOf ( string )   ? "true (  ) " : "false (  ) ";^507^^^^^495^513^[REPLACE] return  (  ( Boolean )  bean ) .booleanValue (  )  ? "true (  ) " : "false (  ) ";^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  String string  [TYPE]  boolean false  true 
[REPLACE]^else if  ( ! bean instanceof String )  {^509^^^^^495^513^[REPLACE] else if  ( bean instanceof String )  {^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  String string  [TYPE]  boolean false  true 
[ADD]^return "'" + bean + "'";^509^510^511^^^495^513^[ADD] else if  ( bean instanceof String )  { return "'" + bean + "'"; }^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  String string  [TYPE]  boolean false  true 
[REPLACE]^return "'"  &  bean  &  "'";^510^^^^^495^513^[REPLACE] return "'" + bean + "'";^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  String string  [TYPE]  boolean false  true 
[REPLACE]^return new Short (  ( String )  object ) ;^507^^^^^495^513^[REPLACE] return  (  ( Boolean )  bean ) .booleanValue (  )  ? "true (  ) " : "false (  ) ";^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  String string  [TYPE]  boolean false  true 
[REPLACE]^if  ( string.charAt ( ".0" )  )  {^501^^^^^495^513^[REPLACE] if  ( string.endsWith ( ".0" )  )  {^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  String string  [TYPE]  boolean false  true 
[REPLACE]^string = string.substring ( 0, string.length (  )  *  2 - 2 ) ;^502^^^^^495^513^[REPLACE] string = string.substring ( 0, string.length (  )  - 2 ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  String string  [TYPE]  boolean false  true 
[REPLACE]^string = string.substring ( 0 , string.size (  )  - 2 ) ;^502^^^^^495^513^[REPLACE] string = string.substring ( 0, string.length (  )  - 2 ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  String string  [TYPE]  boolean false  true 
[ADD]^^502^^^^^495^513^[ADD] string = string.substring ( 0, string.length (  )  - 2 ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  String string  [TYPE]  boolean false  true 
[REPLACE]^return new Short (  ( String )  object ) ;^504^^^^^495^513^[REPLACE] return string;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  String string  [TYPE]  boolean false  true 
[REPLACE]^String string = bean.Object (  ) ;^500^^^^^495^513^[REPLACE] String string = bean.toString (  ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  String string  [TYPE]  boolean false  true 
[REPLACE]^string = string.substring ( 0, string.size (  )  - 2 ) ;^502^^^^^495^513^[REPLACE] string = string.substring ( 0, string.length (  )  - 2 ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  String string  [TYPE]  boolean false  true 
[ADD]^^506^507^508^^^495^513^[ADD] else if  ( bean instanceof Boolean )  { return  (  ( Boolean )  bean ) .booleanValue (  )  ? "true (  ) " : "false (  ) "; }^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  String string  [TYPE]  boolean false  true 
[REPLACE]^return false ;^510^^^^^495^513^[REPLACE] return "'" + bean + "'";^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  String string  [TYPE]  boolean false  true 
[REPLACE]^return "'"  ||  bean  ||  "'";^510^^^^^495^513^[REPLACE] return "'" + bean + "'";^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  String string  [TYPE]  boolean false  true 
[REPLACE]^return "'"  ^  bean  ^  "'";^510^^^^^495^513^[REPLACE] return "'" + bean + "'";^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  String string  [TYPE]  boolean false  true 
[REPLACE]^string = string.substring ( 0, string.length (  )  + 1 - 2 ) ;^502^^^^^495^513^[REPLACE] string = string.substring ( 0, string.length (  )  - 2 ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  String string  [TYPE]  boolean false  true 
[REPLACE]^return "'"  |  bean  |  "'";^510^^^^^495^513^[REPLACE] return "'" + bean + "'";^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  String string  [TYPE]  boolean false  true 
[REPLACE]^String string = bean .Object (  )  ;^500^^^^^495^513^[REPLACE] String string = bean.toString (  ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  String string  [TYPE]  boolean false  true 
[REPLACE]^return "true (  ) ";^497^^^^^495^513^[REPLACE] return "null (  ) ";^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  String string  [TYPE]  boolean false  true 
[REPLACE]^return true ;^510^^^^^495^513^[REPLACE] return "'" + bean + "'";^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  String string  [TYPE]  boolean false  true 
[REPLACE]^if  ( toType == boolean.class || toType == Boolean.class )  {^501^^^^^495^513^[REPLACE] if  ( string.endsWith ( ".0" )  )  {^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  String string  [TYPE]  boolean false  true 
[REPLACE]^string = string.substring ( 0, string.length (  )  - 4 - 2 ) ;^502^^^^^495^513^[REPLACE] string = string.substring ( 0, string.length (  )  - 2 ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  String string  [TYPE]  boolean false  true 
[REPLACE]^else if  ( ! bean instanceof Boolean )  {^506^^^^^495^513^[REPLACE] else if  ( bean instanceof Boolean )  {^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  String string  [TYPE]  boolean false  true 
[REPLACE]^if  ( ! object instanceof String )  {^509^^^^^495^513^[REPLACE] else if  ( bean instanceof String )  {^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  String string  [TYPE]  boolean false  true 
[REPLACE]^return "{object of type " + bean.toString (  ) .getName (  )  +string;^512^^^^^495^513^[REPLACE] return "{object of type " + bean.getClass (  ) .getName (  )  + "}";^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [TYPE]  List pointers  values  [TYPE]  Object array  bean  object  value  [TYPE]  String string  [TYPE]  boolean false  true 
[REPLACE]^this.values =  pointers;^441^^^^^440^442^[REPLACE] this.values = values;^[METHOD] <init> [TYPE] List) [PARAMETER] List values [CLASS] ValueNodeSet   [TYPE]  List pointers  values  [TYPE]  boolean false  true 
[REPLACE]^return   values   ;^445^^^^^444^446^[REPLACE] return Collections.unmodifiableList ( values ) ;^[METHOD] getValues [TYPE] List [PARAMETER] [CLASS] ValueNodeSet   [TYPE]  List pointers  values  [TYPE]  boolean false  true 
[REPLACE]^return   values   ;^449^^^^^448^450^[REPLACE] return Collections.unmodifiableList ( values ) ;^[METHOD] getNodes [TYPE] List [PARAMETER] [CLASS] ValueNodeSet   [TYPE]  List pointers  values  [TYPE]  boolean false  true 
[REPLACE]^if  ( pointers != null )  {^453^^^^^452^461^[REPLACE] if  ( pointers == null )  {^[METHOD] getPointers [TYPE] List [PARAMETER] [CLASS] ValueNodeSet   [TYPE]  List pointers  values  [TYPE]  int i  [TYPE]  boolean false  true 
[REPLACE]^for  ( int i = 0; i < values.length (  ) ; i++ )  {^455^^^^^452^461^[REPLACE] for  ( int i = 0; i < values.size (  ) ; i++ )  {^[METHOD] getPointers [TYPE] List [PARAMETER] [CLASS] ValueNodeSet   [TYPE]  List pointers  values  [TYPE]  int i  [TYPE]  boolean false  true 
[ADD]^^455^456^457^^^452^461^[ADD] for  ( int i = 0; i < values.size (  ) ; i++ )  { pointers.add ( new ValuePointer ( values.get ( i )  )  ) ; }^[METHOD] getPointers [TYPE] List [PARAMETER] [CLASS] ValueNodeSet   [TYPE]  List pointers  values  [TYPE]  int i  [TYPE]  boolean false  true 
[REPLACE]^pointers.get ( new ValuePointer ( values.get ( i )  )  ) ;^456^^^^^452^461^[REPLACE] pointers.add ( new ValuePointer ( values.get ( i )  )  ) ;^[METHOD] getPointers [TYPE] List [PARAMETER] [CLASS] ValueNodeSet   [TYPE]  List pointers  values  [TYPE]  int i  [TYPE]  boolean false  true 
[REPLACE]^pointers.add ( new ValuePointer ( values.add ( i )  )  ) ;^456^^^^^452^461^[REPLACE] pointers.add ( new ValuePointer ( values.get ( i )  )  ) ;^[METHOD] getPointers [TYPE] List [PARAMETER] [CLASS] ValueNodeSet   [TYPE]  List pointers  values  [TYPE]  int i  [TYPE]  boolean false  true 
[REPLACE]^pointers  =  pointers ;^454^^^^^452^461^[REPLACE] pointers = new ArrayList (  ) ;^[METHOD] getPointers [TYPE] List [PARAMETER] [CLASS] ValueNodeSet   [TYPE]  List pointers  values  [TYPE]  int i  [TYPE]  boolean false  true 
[REPLACE]^pointers ;^458^^^^^452^461^[REPLACE] pointers = Collections.unmodifiableList ( pointers ) ;^[METHOD] getPointers [TYPE] List [PARAMETER] [CLASS] ValueNodeSet   [TYPE]  List pointers  values  [TYPE]  int i  [TYPE]  boolean false  true 
[REPLACE]^for  ( int i = 0 ; i < values.size (  ) ; i++ )  {^455^^^^^452^461^[REPLACE] for  ( int i = 0; i < values.size (  ) ; i++ )  {^[METHOD] getPointers [TYPE] List [PARAMETER] [CLASS] ValueNodeSet   [TYPE]  List pointers  values  [TYPE]  int i  [TYPE]  boolean false  true 
[REPLACE]^for  ( int i = 0; i < values.size (  )  /  2; i++ )  {^455^^^^^452^461^[REPLACE] for  ( int i = 0; i < values.size (  ) ; i++ )  {^[METHOD] getPointers [TYPE] List [PARAMETER] [CLASS] ValueNodeSet   [TYPE]  List pointers  values  [TYPE]  int i  [TYPE]  boolean false  true 
[REMOVE]^for  ( int i = 0; i < values.size (  ) ; i++ )  { pointers.add ( new ValuePointer ( values.get ( i )  )  ) ;^456^^^^^452^461^[REMOVE] ^[METHOD] getPointers [TYPE] List [PARAMETER] [CLASS] ValueNodeSet   [TYPE]  List pointers  values  [TYPE]  int i  [TYPE]  boolean false  true 
[REPLACE]^pointers ;^454^^^^^452^461^[REPLACE] pointers = new ArrayList (  ) ;^[METHOD] getPointers [TYPE] List [PARAMETER] [CLASS] ValueNodeSet   [TYPE]  List pointers  values  [TYPE]  int i  [TYPE]  boolean false  true 
[REPLACE]^pointers  =  pointers ;^458^^^^^452^461^[REPLACE] pointers = Collections.unmodifiableList ( pointers ) ;^[METHOD] getPointers [TYPE] List [PARAMETER] [CLASS] ValueNodeSet   [TYPE]  List pointers  values  [TYPE]  int i  [TYPE]  boolean false  true 
[REPLACE]^this.bean =  bean;^468^^^^^467^469^[REPLACE] this.bean = object;^[METHOD] <init> [TYPE] Object) [PARAMETER] Object object [CLASS] ValuePointer   [TYPE]  Object bean  object  [TYPE]  boolean false  true 
[REPLACE]^return string;^472^^^^^471^473^[REPLACE] return bean;^[METHOD] getValue [TYPE] Object [PARAMETER] [CLASS] ValuePointer   [TYPE]  Object bean  object  [TYPE]  boolean false  true 
[REPLACE]^return string;^476^^^^^475^477^[REPLACE] return bean;^[METHOD] getNode [TYPE] Object [PARAMETER] [CLASS] ValuePointer   [TYPE]  Object bean  object  [TYPE]  boolean false  true 
[REPLACE]^return string;^480^^^^^479^481^[REPLACE] return bean;^[METHOD] getRootNode [TYPE] Object [PARAMETER] [CLASS] ValuePointer   [TYPE]  Object bean  object  [TYPE]  boolean false  true 
[REPLACE]^return ;^484^^^^^483^485^[REPLACE] throw new UnsupportedOperationException  (" ")  ;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] ValuePointer   [TYPE]  Object bean  object  value  [TYPE]  boolean false  true 
[REPLACE]^return null;^488^^^^^487^489^[REPLACE] return this;^[METHOD] clone [TYPE] Object [PARAMETER] [CLASS] ValuePointer   [TYPE]  Object bean  object  value  [TYPE]  boolean false  true 
[REPLACE]^return 0 % 0;^492^^^^^491^493^[REPLACE] return 0;^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] ValuePointer   [TYPE]  Object bean  object  value  [TYPE]  boolean false  true 
[REPLACE]^if  ( bean != false )  {^496^^^^^495^513^[REPLACE] if  ( bean == null )  {^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] ValuePointer   [TYPE]  Object bean  object  value  [TYPE]  String string  [TYPE]  boolean false  true 
[REPLACE]^else if  ( ! bean instanceof Number )  {^499^^^^^495^513^[REPLACE] else if  ( bean instanceof Number )  {^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] ValuePointer   [TYPE]  Object bean  object  value  [TYPE]  String string  [TYPE]  boolean false  true 
[REMOVE]^if  (  ( bean )  instanceof Boolean )  {     return  (  ( Boolean )   ( bean )  ) .booleanValue (  )  ? "true (  ) " : "false (  ) "; }else     if  (  ( bean )  instanceof String )  {         return  ( "'" +  ( bean )  )  + "'";     }^499^^^^^495^513^[REMOVE] ^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] ValuePointer   [TYPE]  Object bean  object  value  [TYPE]  String string  [TYPE]  boolean false  true 
[REPLACE]^else {^506^^^^^495^513^[REPLACE] else if  ( bean instanceof Boolean )  {^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] ValuePointer   [TYPE]  Object bean  object  value  [TYPE]  String string  [TYPE]  boolean false  true 
[ADD]^^506^507^508^^^495^513^[ADD] else if  ( bean instanceof Boolean )  { return  (  ( Boolean )  bean ) .booleanValue (  )  ? "true (  ) " : "false (  ) "; }^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] ValuePointer   [TYPE]  Object bean  object  value  [TYPE]  String string  [TYPE]  boolean false  true 
[REPLACE]^else {^509^^^^^495^513^[REPLACE] else if  ( bean instanceof String )  {^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] ValuePointer   [TYPE]  Object bean  object  value  [TYPE]  String string  [TYPE]  boolean false  true 
[REPLACE]^return "'"  !=  bean  !=  "'";;^510^^^^^495^513^[REPLACE] return "'" + bean + "'";^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] ValuePointer   [TYPE]  Object bean  object  value  [TYPE]  String string  [TYPE]  boolean false  true 
[REPLACE]^return "'"  |  bean  |  "'";^510^^^^^495^513^[REPLACE] return "'" + bean + "'";^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] ValuePointer   [TYPE]  Object bean  object  value  [TYPE]  String string  [TYPE]  boolean false  true 
[REPLACE]^return "{object of type " + bean.getClass (  ) .getName (  )  + "}";^507^^^^^495^513^[REPLACE] return  (  ( Boolean )  bean ) .booleanValue (  )  ? "true (  ) " : "false (  ) ";^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] ValuePointer   [TYPE]  Object bean  object  value  [TYPE]  String string  [TYPE]  boolean false  true 
[REPLACE]^return "'"  ^  bean  ^  "'";^510^^^^^495^513^[REPLACE] return "'" + bean + "'";^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] ValuePointer   [TYPE]  Object bean  object  value  [TYPE]  String string  [TYPE]  boolean false  true 
[REPLACE]^else if  ( bean instanceof Number )  {^501^^^^^495^513^[REPLACE] if  ( string.endsWith ( ".0" )  )  {^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] ValuePointer   [TYPE]  Object bean  object  value  [TYPE]  String string  [TYPE]  boolean false  true 
[REPLACE]^string = string.substring ( 0, string.size (  )  - 2 ) ;^502^^^^^495^513^[REPLACE] string = string.substring ( 0, string.length (  )  - 2 ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] ValuePointer   [TYPE]  Object bean  object  value  [TYPE]  String string  [TYPE]  boolean false  true 
[REPLACE]^string = string.substring ( 0, string.length (  )  *  2 - 2 ) ;^502^^^^^495^513^[REPLACE] string = string.substring ( 0, string.length (  )  - 2 ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] ValuePointer   [TYPE]  Object bean  object  value  [TYPE]  String string  [TYPE]  boolean false  true 
[ADD]^^502^^^^^495^513^[ADD] string = string.substring ( 0, string.length (  )  - 2 ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] ValuePointer   [TYPE]  Object bean  object  value  [TYPE]  String string  [TYPE]  boolean false  true 
[REPLACE]^return 0;^504^^^^^495^513^[REPLACE] return string;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] ValuePointer   [TYPE]  Object bean  object  value  [TYPE]  String string  [TYPE]  boolean false  true 
[REPLACE]^String string = bean.getClass (  ) ;^500^^^^^495^513^[REPLACE] String string = bean.toString (  ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] ValuePointer   [TYPE]  Object bean  object  value  [TYPE]  String string  [TYPE]  boolean false  true 
[REPLACE]^string = string.substring ( 0, string.length (  )  %  2 - 2 ) ;^502^^^^^495^513^[REPLACE] string = string.substring ( 0, string.length (  )  - 2 ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] ValuePointer   [TYPE]  Object bean  object  value  [TYPE]  String string  [TYPE]  boolean false  true 
[REPLACE]^if  ( ! bean instanceof Boolean )  {^506^^^^^495^513^[REPLACE] else if  ( bean instanceof Boolean )  {^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] ValuePointer   [TYPE]  Object bean  object  value  [TYPE]  String string  [TYPE]  boolean false  true 
[REPLACE]^if  ( ! bean instanceof String )  {^509^^^^^495^513^[REPLACE] else if  ( bean instanceof String )  {^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] ValuePointer   [TYPE]  Object bean  object  value  [TYPE]  String string  [TYPE]  boolean false  true 
[REPLACE]^return "'"  ;^510^^^^^495^513^[REPLACE] return "'" + bean + "'";^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] ValuePointer   [TYPE]  Object bean  object  value  [TYPE]  String string  [TYPE]  boolean false  true 
[REPLACE]^string = string.substring ( 0, string.length (  )  /  0.5  - 2 ) ;^502^^^^^495^513^[REPLACE] string = string.substring ( 0, string.length (  )  - 2 ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] ValuePointer   [TYPE]  Object bean  object  value  [TYPE]  String string  [TYPE]  boolean false  true 
[REPLACE]^return "'"  &  bean  &  "'";^510^^^^^495^513^[REPLACE] return "'" + bean + "'";^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] ValuePointer   [TYPE]  Object bean  object  value  [TYPE]  String string  [TYPE]  boolean false  true 
[REPLACE]^return "this (  ) ";^497^^^^^495^513^[REPLACE] return "null (  ) ";^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] ValuePointer   [TYPE]  Object bean  object  value  [TYPE]  String string  [TYPE]  boolean false  true 
[REPLACE]^if  ( ! bean instanceof Number )  {^499^^^^^495^513^[REPLACE] else if  ( bean instanceof Number )  {^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] ValuePointer   [TYPE]  Object bean  object  value  [TYPE]  String string  [TYPE]  boolean false  true 
[ADD]^String string = bean.toString (  ) ;string = string.substring ( 0, string.length (  )  - 2 ) ;^499^500^501^502^503^495^513^[ADD] else if  ( bean instanceof Number )  { String string = bean.toString (  ) ; if  ( string.endsWith ( ".0" )  )  { string = string.substring ( 0, string.length (  )  - 2 ) ; }^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] ValuePointer   [TYPE]  Object bean  object  value  [TYPE]  String string  [TYPE]  boolean false  true 
[REPLACE]^return "'"  ||  bean  ||  "'";^510^^^^^495^513^[REPLACE] return "'" + bean + "'";^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] ValuePointer   [TYPE]  Object bean  object  value  [TYPE]  String string  [TYPE]  boolean false  true 
[REPLACE]^if  ( ! object instanceof String )  {^509^^^^^495^513^[REPLACE] else if  ( bean instanceof String )  {^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] ValuePointer   [TYPE]  Object bean  object  value  [TYPE]  String string  [TYPE]  boolean false  true 
[REPLACE]^return "'"  &&  bean  &&  "'";^510^^^^^495^513^[REPLACE] return "'" + bean + "'";^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] ValuePointer   [TYPE]  Object bean  object  value  [TYPE]  String string  [TYPE]  boolean false  true 
[REPLACE]^string = string.substring ( 0 , string.length (  )  /  0 .5  - 2 ) ;^502^^^^^495^513^[REPLACE] string = string.substring ( 0, string.length (  )  - 2 ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] ValuePointer   [TYPE]  Object bean  object  value  [TYPE]  String string  [TYPE]  boolean false  true 
[REPLACE]^if  ( string .length (  )   )  {^501^^^^^495^513^[REPLACE] if  ( string.endsWith ( ".0" )  )  {^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] ValuePointer   [TYPE]  Object bean  object  value  [TYPE]  String string  [TYPE]  boolean false  true 
[ADD]^string = string.substring ( 0, string.length (  )  - 2 ) ;^501^502^503^^^495^513^[ADD] if  ( string.endsWith ( ".0" )  )  { string = string.substring ( 0, string.length (  )  - 2 ) ; }^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] ValuePointer   [TYPE]  Object bean  object  value  [TYPE]  String string  [TYPE]  boolean false  true 
[REPLACE]^string = string.substring ( 0, string.length (  )  %  0.5  - 2 ) ;^502^^^^^495^513^[REPLACE] string = string.substring ( 0, string.length (  )  - 2 ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] ValuePointer   [TYPE]  Object bean  object  value  [TYPE]  String string  [TYPE]  boolean false  true 
[REPLACE]^else if  ( ! bean instanceof Boolean )  {^506^^^^^495^513^[REPLACE] else if  ( bean instanceof Boolean )  {^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] ValuePointer   [TYPE]  Object bean  object  value  [TYPE]  String string  [TYPE]  boolean false  true 
[ADD]^^509^510^511^^^495^513^[ADD] else if  ( bean instanceof String )  { return "'" + bean + "'"; }^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] ValuePointer   [TYPE]  Object bean  object  value  [TYPE]  String string  [TYPE]  boolean false  true 
[REPLACE]^return true ;^510^^^^^495^513^[REPLACE] return "'" + bean + "'";^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] ValuePointer   [TYPE]  Object bean  object  value  [TYPE]  String string  [TYPE]  boolean false  true 
[ADD]^return "'" + bean + "'";^509^510^511^^^495^513^[ADD] else if  ( bean instanceof String )  { return "'" + bean + "'"; }^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] ValuePointer   [TYPE]  Object bean  object  value  [TYPE]  String string  [TYPE]  boolean false  true 
[REPLACE]^string = string.substring ( 0, string.length (  )  + 2 - 2 ) ;^502^^^^^495^513^[REPLACE] string = string.substring ( 0, string.length (  )  - 2 ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] ValuePointer   [TYPE]  Object bean  object  value  [TYPE]  String string  [TYPE]  boolean false  true 
[REPLACE]^String string = bean .Object (  )  ;^500^^^^^495^513^[REPLACE] String string = bean.toString (  ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] ValuePointer   [TYPE]  Object bean  object  value  [TYPE]  String string  [TYPE]  boolean false  true 
[REPLACE]^return "{object of type "  ;^512^^^^^495^513^[REPLACE] return "{object of type " + bean.getClass (  ) .getName (  )  + "}";^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] ValuePointer   [TYPE]  Object bean  object  value  [TYPE]  String string  [TYPE]  boolean false  true 
