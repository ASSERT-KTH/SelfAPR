[REPLACE]^buffer.append ( parent.asPath (  )  ) ;^32^^^^^31^33^[REPLACE] super ( parent ) ;^[METHOD] <init> [TYPE] NodePointer) [PARAMETER] NodePointer parent [CLASS] LangAttributePointer   [TYPE]  boolean false  true  [TYPE]  NodePointer parent 
[REPLACE]^return null;^36^^^^^35^37^[REPLACE] return new QName ( "xml", "lang" ) ;^[METHOD] getName [TYPE] QName [PARAMETER] [CLASS] LangAttributePointer   [TYPE]  boolean false  true 
[REPLACE]^return true;^40^^^^^39^41^[REPLACE] return null;^[METHOD] getNamespaceURI [TYPE] String [PARAMETER] [CLASS] LangAttributePointer   [TYPE]  boolean false  true 
[REPLACE]^return true;^44^^^^^43^45^[REPLACE] return false;^[METHOD] isCollection [TYPE] boolean [PARAMETER] [CLASS] LangAttributePointer   [TYPE]  boolean false  true 
[REPLACE]^return 1L;^48^^^^^47^49^[REPLACE] return 1;^[METHOD] getLength [TYPE] int [PARAMETER] [CLASS] LangAttributePointer   [TYPE]  boolean false  true 
[REPLACE]^return getBaseValue (  ) ;^52^^^^^51^53^[REPLACE] return parent.getLocale (  ) .toString (  ) .replace ( '_', '-' ) ;^[METHOD] getBaseValue [TYPE] Object [PARAMETER] [CLASS] LangAttributePointer   [TYPE]  boolean false  true 
[REPLACE]^return null;^56^^^^^55^57^[REPLACE] return getBaseValue (  ) ;^[METHOD] getImmediateNode [TYPE] Object [PARAMETER] [CLASS] LangAttributePointer   [TYPE]  boolean false  true 
[REPLACE]^return false;^60^^^^^59^61^[REPLACE] return true;^[METHOD] isLeaf [TYPE] boolean [PARAMETER] [CLASS] LangAttributePointer   [TYPE]  boolean false  true 
[REPLACE]^return ;^67^68^^^^66^69^[REPLACE] throw new UnsupportedOperationException ( "Cannot change locale using the 'lang' attribute" ) ;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] LangAttributePointer   [TYPE]  boolean false  true  [TYPE]  Object value 
[ADD]^^67^68^^^^66^69^[ADD] throw new UnsupportedOperationException ( "Cannot change locale using the 'lang' attribute" ) ;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] LangAttributePointer   [TYPE]  boolean false  true  [TYPE]  Object value 
[REPLACE]^if  ( parent == null )  {^75^^^^^73^84^[REPLACE] if  ( parent != null )  {^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] LangAttributePointer   [TYPE]  StringBuffer buffer  [TYPE]  boolean false  true 
[REPLACE]^if  (  buffer.charAt ( buffer.length (  )  - 1 - 1 )  != '/' )  {^77^78^^^^73^84^[REPLACE] if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] LangAttributePointer   [TYPE]  StringBuffer buffer  [TYPE]  boolean false  true 
[ADD]^^77^78^79^80^^73^84^[ADD] if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  { buffer.append ( '/' ) ; }^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] LangAttributePointer   [TYPE]  StringBuffer buffer  [TYPE]  boolean false  true 
[REPLACE]^buffer.charAt ( '/' ) ;^79^^^^^73^84^[REPLACE] buffer.append ( '/' ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] LangAttributePointer   [TYPE]  StringBuffer buffer  [TYPE]  boolean false  true 
[REMOVE]^super ( parent ) ;^79^^^^^73^84^[REMOVE] ^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] LangAttributePointer   [TYPE]  StringBuffer buffer  [TYPE]  boolean false  true 
[REPLACE]^if  (  buffer.charAt ( buffer.length (  )  /  2 - 1 )  != '/' )  {^77^78^^^^73^84^[REPLACE] if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] LangAttributePointer   [TYPE]  StringBuffer buffer  [TYPE]  boolean false  true 
[REPLACE]^super ( parent ) ;^82^^^^^73^84^[REPLACE] buffer.append ( "@xml:lang" ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] LangAttributePointer   [TYPE]  StringBuffer buffer  [TYPE]  boolean false  true 
[ADD]^^82^83^^^^73^84^[ADD] buffer.append ( "@xml:lang" ) ; return buffer.toString (  ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] LangAttributePointer   [TYPE]  StringBuffer buffer  [TYPE]  boolean false  true 
[REPLACE]^return buffer.StringBuffer (  ) ;^83^^^^^73^84^[REPLACE] return buffer.toString (  ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] LangAttributePointer   [TYPE]  StringBuffer buffer  [TYPE]  boolean false  true 
[REPLACE]^return 2;^87^^^^^86^88^[REPLACE] return 0;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] LangAttributePointer   [TYPE]  boolean false  true 
[REPLACE]^if  ( object  ||  this )  {^91^^^^^90^100^[REPLACE] if  ( object == this )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object object [CLASS] LangAttributePointer   [TYPE]  boolean false  true  [TYPE]  Object object 
[REPLACE]^return false;^92^^^^^90^100^[REPLACE] return true;^[METHOD] equals [TYPE] boolean [PARAMETER] Object object [CLASS] LangAttributePointer   [TYPE]  boolean false  true  [TYPE]  Object object 
[REPLACE]^if  ( ! ! ( object instanceof LangAttributePointer )  )  {^95^^^^^90^100^[REPLACE] if  ( ! ( object instanceof LangAttributePointer )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object object [CLASS] LangAttributePointer   [TYPE]  boolean false  true  [TYPE]  Object object 
[REPLACE]^return true;^96^^^^^90^100^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object object [CLASS] LangAttributePointer   [TYPE]  boolean false  true  [TYPE]  Object object 
[REPLACE]^return false;^99^^^^^90^100^[REPLACE] return true;^[METHOD] equals [TYPE] boolean [PARAMETER] Object object [CLASS] LangAttributePointer   [TYPE]  boolean false  true  [TYPE]  Object object 
[REPLACE]^return true;^103^^^^^102^104^[REPLACE] return false;^[METHOD] testNode [TYPE] boolean [PARAMETER] NodeTest test [CLASS] LangAttributePointer   [TYPE]  boolean false  true  [TYPE]  NodeTest test 
[REPLACE]^return 1;^111^^^^^106^112^[REPLACE] return 0;^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] LangAttributePointer   [TYPE]  boolean false  true  [TYPE]  NodePointer pointer1  pointer2 
