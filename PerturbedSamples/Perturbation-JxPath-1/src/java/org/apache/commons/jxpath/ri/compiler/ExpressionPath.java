[REPLACE]^private boolean basicKnown ;^41^^^^^^^[REPLACE] private boolean basicKnown = false;^ [CLASS] ExpressionPath  
[REPLACE]^buffer.append ( steps[i] ) ;^49^^^^^44^52^[REPLACE] super ( steps ) ;^[METHOD] <init> [TYPE] Step[]) [PARAMETER] Expression expression Expression[] predicates Step[] steps [CLASS] ExpressionPath   [TYPE]  Step[] steps  [TYPE]  boolean basic  basicKnown  false  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates 
[REPLACE]^this.expression =  null;^50^^^^^44^52^[REPLACE] this.expression = expression;^[METHOD] <init> [TYPE] Step[]) [PARAMETER] Expression expression Expression[] predicates Step[] steps [CLASS] ExpressionPath   [TYPE]  Step[] steps  [TYPE]  boolean basic  basicKnown  false  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates 
[REPLACE]^this.predicates =  null;^51^^^^^44^52^[REPLACE] this.predicates = predicates;^[METHOD] <init> [TYPE] Step[]) [PARAMETER] Expression expression Expression[] predicates Step[] steps [CLASS] ExpressionPath   [TYPE]  Step[] steps  [TYPE]  boolean basic  basicKnown  false  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates 
[REPLACE]^return expressionPath ( context, false ) ;^55^^^^^54^56^[REPLACE] return expression;^[METHOD] getExpression [TYPE] Expression [PARAMETER] [CLASS] ExpressionPath   [TYPE]  boolean basic  basicKnown  false  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates 
[REPLACE]^return expressionPath ( context, false ) ;^63^^^^^62^64^[REPLACE] return predicates;^[METHOD] getPredicates [TYPE] Expression[] [PARAMETER] [CLASS] ExpressionPath   [TYPE]  boolean basic  basicKnown  false  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates 
[REPLACE]^if  ( expression .compute ( this )   )  {^71^^^^^70^82^[REPLACE] if  ( expression.isContextDependent (  )  )  {^[METHOD] computeContextDependent [TYPE] boolean [PARAMETER] [CLASS] ExpressionPath   [TYPE]  boolean basic  basicKnown  false  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates  [TYPE]  int i 
[ADD]^return true;^71^72^73^^^70^82^[ADD] if  ( expression.isContextDependent (  )  )  { return true; }^[METHOD] computeContextDependent [TYPE] boolean [PARAMETER] [CLASS] ExpressionPath   [TYPE]  boolean basic  basicKnown  false  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates  [TYPE]  int i 
[REPLACE]^return false;^72^^^^^70^82^[REPLACE] return true;^[METHOD] computeContextDependent [TYPE] boolean [PARAMETER] [CLASS] ExpressionPath   [TYPE]  boolean basic  basicKnown  false  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates  [TYPE]  int i 
[REPLACE]^if  ( predicates == null )  {^74^^^^^70^82^[REPLACE] if  ( predicates != null )  {^[METHOD] computeContextDependent [TYPE] boolean [PARAMETER] [CLASS] ExpressionPath   [TYPE]  boolean basic  basicKnown  false  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates  [TYPE]  int i 
[ADD]^^74^75^76^77^78^70^82^[ADD] if  ( predicates != null )  { for  ( int i = 0; i < predicates.length; i++ )  { if  ( predicates[i].isContextDependent (  )  )  { return true; }^[METHOD] computeContextDependent [TYPE] boolean [PARAMETER] [CLASS] ExpressionPath   [TYPE]  boolean basic  basicKnown  false  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates  [TYPE]  int i 
[REPLACE]^if  ( predicates[i].computeContextDependent (  )  )  {^76^^^^^70^82^[REPLACE] if  ( predicates[i].isContextDependent (  )  )  {^[METHOD] computeContextDependent [TYPE] boolean [PARAMETER] [CLASS] ExpressionPath   [TYPE]  boolean basic  basicKnown  false  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates  [TYPE]  int i 
[REPLACE]^return false;^77^^^^^70^82^[REPLACE] return true;^[METHOD] computeContextDependent [TYPE] boolean [PARAMETER] [CLASS] ExpressionPath   [TYPE]  boolean basic  basicKnown  false  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < predicates.length - 4; i++ )  {^75^^^^^70^82^[REPLACE] for  ( int i = 0; i < predicates.length; i++ )  {^[METHOD] computeContextDependent [TYPE] boolean [PARAMETER] [CLASS] ExpressionPath   [TYPE]  boolean basic  basicKnown  false  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates  [TYPE]  int i 
[ADD]^^75^76^77^78^^70^82^[ADD] for  ( int i = 0; i < predicates.length; i++ )  { if  ( predicates[i].isContextDependent (  )  )  { return true; }^[METHOD] computeContextDependent [TYPE] boolean [PARAMETER] [CLASS] ExpressionPath   [TYPE]  boolean basic  basicKnown  false  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates  [TYPE]  int i 
[ADD]^return true;^76^77^78^^^70^82^[ADD] if  ( predicates[i].isContextDependent (  )  )  { return true; }^[METHOD] computeContextDependent [TYPE] boolean [PARAMETER] [CLASS] ExpressionPath   [TYPE]  boolean basic  basicKnown  false  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < predicates.length; i++ )  {^75^^^^^70^82^[REPLACE] for  ( int i = 0; i < predicates.length; i++ )  {^[METHOD] computeContextDependent [TYPE] boolean [PARAMETER] [CLASS] ExpressionPath   [TYPE]  boolean basic  basicKnown  false  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates  [TYPE]  int i 
[REPLACE]^for  ( int i = 0; i < predicates.length /  2; i++ )  {^75^^^^^70^82^[REPLACE] for  ( int i = 0; i < predicates.length; i++ )  {^[METHOD] computeContextDependent [TYPE] boolean [PARAMETER] [CLASS] ExpressionPath   [TYPE]  boolean basic  basicKnown  false  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates  [TYPE]  int i 
[REPLACE]^return super.isContextDependent (  ) ;^81^^^^^70^82^[REPLACE] return super.computeContextDependent (  ) ;^[METHOD] computeContextDependent [TYPE] boolean [PARAMETER] [CLASS] ExpressionPath   [TYPE]  boolean basic  basicKnown  false  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates  [TYPE]  int i 
[REPLACE]^if  ( basicKnown )  {^89^^^^^88^94^[REPLACE] if  ( !basicKnown )  {^[METHOD] isSimpleExpressionPath [TYPE] boolean [PARAMETER] [CLASS] ExpressionPath   [TYPE]  boolean basic  basicKnown  false  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates 
[REPLACE]^basicKnown = false;^90^^^^^88^94^[REPLACE] basicKnown = true;^[METHOD] isSimpleExpressionPath [TYPE] boolean [PARAMETER] [CLASS] ExpressionPath   [TYPE]  boolean basic  basicKnown  false  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates 
[REPLACE]^basic = isSimplePath (  )  ;^91^^^^^88^94^[REPLACE] basic = isSimplePath (  )  && areBasicPredicates ( getPredicates (  )  ) ;^[METHOD] isSimpleExpressionPath [TYPE] boolean [PARAMETER] [CLASS] ExpressionPath   [TYPE]  boolean basic  basicKnown  false  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates 
[REPLACE]^return expression;^93^^^^^88^94^[REPLACE] return basic;^[METHOD] isSimpleExpressionPath [TYPE] boolean [PARAMETER] [CLASS] ExpressionPath   [TYPE]  boolean basic  basicKnown  false  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates 
[REPLACE]^Step steps[] = getSteps (  ) ;^97^^^^^96^124^[REPLACE] StringBuffer buffer = new StringBuffer (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ExpressionPath   [TYPE]  StringBuffer buffer  [TYPE]  Step[] steps  [TYPE]  boolean basic  basicKnown  false  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates  [TYPE]  int i 
[REPLACE]^if  ( ! expression instanceof CoreOperation || expression instanceof ExpressionPath || expression instanceof LocationPath )  {^98^99^100^^^96^124^[REPLACE] if  ( expression instanceof CoreOperation || expression instanceof ExpressionPath || expression instanceof LocationPath )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ExpressionPath   [TYPE]  StringBuffer buffer  [TYPE]  Step[] steps  [TYPE]  boolean basic  basicKnown  false  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates  [TYPE]  int i 
[ADD]^^98^99^100^101^102^96^124^[ADD] if  ( expression instanceof CoreOperation || expression instanceof ExpressionPath || expression instanceof LocationPath )  { buffer.append ( ' ( ' ) ; buffer.append ( expression ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ExpressionPath   [TYPE]  StringBuffer buffer  [TYPE]  Step[] steps  [TYPE]  boolean basic  basicKnown  false  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates  [TYPE]  int i 
[REPLACE]^buffer .toString (  )  ;^106^^^^^98^107^[REPLACE] buffer.append ( expression ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ExpressionPath   [TYPE]  StringBuffer buffer  [TYPE]  Step[] steps  [TYPE]  boolean basic  basicKnown  false  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates  [TYPE]  int i 
[REPLACE]^buffer.StringBuffer ( ' ( ' ) ;^101^^^^^98^107^[REPLACE] buffer.append ( ' ( ' ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ExpressionPath   [TYPE]  StringBuffer buffer  [TYPE]  Step[] steps  [TYPE]  boolean basic  basicKnown  false  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates  [TYPE]  int i 
[ADD]^^101^102^^^^98^107^[ADD] buffer.append ( ' ( ' ) ; buffer.append ( expression ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ExpressionPath   [TYPE]  StringBuffer buffer  [TYPE]  Step[] steps  [TYPE]  boolean basic  basicKnown  false  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates  [TYPE]  int i 
[REPLACE]^buffer .toString (  )  ;^102^^^^^98^107^[REPLACE] buffer.append ( expression ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ExpressionPath   [TYPE]  StringBuffer buffer  [TYPE]  Step[] steps  [TYPE]  boolean basic  basicKnown  false  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates  [TYPE]  int i 
[REPLACE]^buffer .toString (  )  ' ) ;^103^^^^^98^107^[REPLACE] buffer.append ( ' ) ' ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ExpressionPath   [TYPE]  StringBuffer buffer  [TYPE]  Step[] steps  [TYPE]  boolean basic  basicKnown  false  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates  [TYPE]  int i 
[REPLACE]^if  ( predicates == null )  {^108^^^^^96^124^[REPLACE] if  ( predicates != null )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ExpressionPath   [TYPE]  StringBuffer buffer  [TYPE]  Step[] steps  [TYPE]  boolean basic  basicKnown  false  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates  [TYPE]  int i 
[REPLACE]^for  ( int i = 0; i < predicates.length *  2; i++ )  {^109^^^^^96^124^[REPLACE] for  ( int i = 0; i < predicates.length; i++ )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ExpressionPath   [TYPE]  StringBuffer buffer  [TYPE]  Step[] steps  [TYPE]  boolean basic  basicKnown  false  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates  [TYPE]  int i 
[REPLACE]^buffer.append ( ']' ) ;^110^^^^^96^124^[REPLACE] buffer.append ( '[' ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ExpressionPath   [TYPE]  StringBuffer buffer  [TYPE]  Step[] steps  [TYPE]  boolean basic  basicKnown  false  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates  [TYPE]  int i 
[REPLACE]^buffer.append ( ']' ) ;^111^^^^^96^124^[REPLACE] buffer.append ( predicates[i] ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ExpressionPath   [TYPE]  StringBuffer buffer  [TYPE]  Step[] steps  [TYPE]  boolean basic  basicKnown  false  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates  [TYPE]  int i 
[ADD]^^111^^^^^96^124^[ADD] buffer.append ( predicates[i] ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ExpressionPath   [TYPE]  StringBuffer buffer  [TYPE]  Step[] steps  [TYPE]  boolean basic  basicKnown  false  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates  [TYPE]  int i 
[REPLACE]^buffer .toString (  )  ;^112^^^^^96^124^[REPLACE] buffer.append ( ']' ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ExpressionPath   [TYPE]  StringBuffer buffer  [TYPE]  Step[] steps  [TYPE]  boolean basic  basicKnown  false  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < predicates.length; i++ )  {^109^^^^^96^124^[REPLACE] for  ( int i = 0; i < predicates.length; i++ )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ExpressionPath   [TYPE]  StringBuffer buffer  [TYPE]  Step[] steps  [TYPE]  boolean basic  basicKnown  false  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates  [TYPE]  int i 
[REPLACE]^buffer .toString (  )  ;^111^^^^^96^124^[REPLACE] buffer.append ( predicates[i] ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ExpressionPath   [TYPE]  StringBuffer buffer  [TYPE]  Step[] steps  [TYPE]  boolean basic  basicKnown  false  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates  [TYPE]  int i 
[REMOVE]^buffer.append ( ']' ) ;^111^^^^^96^124^[REMOVE] ^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ExpressionPath   [TYPE]  StringBuffer buffer  [TYPE]  Step[] steps  [TYPE]  boolean basic  basicKnown  false  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates  [TYPE]  int i 
[REPLACE]^buffer.append ( ' ) ' ) ;^112^^^^^96^124^[REPLACE] buffer.append ( ']' ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ExpressionPath   [TYPE]  StringBuffer buffer  [TYPE]  Step[] steps  [TYPE]  boolean basic  basicKnown  false  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates  [TYPE]  int i 
[REPLACE]^StringBuffer buffer = new StringBuffer (  ) ;^116^^^^^96^124^[REPLACE] Step steps[] = getSteps (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ExpressionPath   [TYPE]  StringBuffer buffer  [TYPE]  Step[] steps  [TYPE]  boolean basic  basicKnown  false  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates  [TYPE]  int i 
[REPLACE]^if  ( steps == null )  {^117^^^^^96^124^[REPLACE] if  ( steps != null )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ExpressionPath   [TYPE]  StringBuffer buffer  [TYPE]  Step[] steps  [TYPE]  boolean basic  basicKnown  false  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates  [TYPE]  int i 
[REPLACE]^for  ( int i = 0; i < steps.length /  2; i++ )  {^118^^^^^96^124^[REPLACE] for  ( int i = 0; i < steps.length; i++ )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ExpressionPath   [TYPE]  StringBuffer buffer  [TYPE]  Step[] steps  [TYPE]  boolean basic  basicKnown  false  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates  [TYPE]  int i 
[ADD]^^118^119^120^121^^96^124^[ADD] for  ( int i = 0; i < steps.length; i++ )  { buffer.append ( "/" ) ; buffer.append ( steps[i] ) ; }^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ExpressionPath   [TYPE]  StringBuffer buffer  [TYPE]  Step[] steps  [TYPE]  boolean basic  basicKnown  false  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates  [TYPE]  int i 
[REPLACE]^buffer.append ( ']' ) ;^119^^^^^96^124^[REPLACE] buffer.append ( "/" ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ExpressionPath   [TYPE]  StringBuffer buffer  [TYPE]  Step[] steps  [TYPE]  boolean basic  basicKnown  false  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates  [TYPE]  int i 
[REPLACE]^buffer.append ( ']' ) ;^120^^^^^96^124^[REPLACE] buffer.append ( steps[i] ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ExpressionPath   [TYPE]  StringBuffer buffer  [TYPE]  Step[] steps  [TYPE]  boolean basic  basicKnown  false  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < steps.length; i++ )  {^118^^^^^96^124^[REPLACE] for  ( int i = 0; i < steps.length; i++ )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ExpressionPath   [TYPE]  StringBuffer buffer  [TYPE]  Step[] steps  [TYPE]  boolean basic  basicKnown  false  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates  [TYPE]  int i 
[REPLACE]^for  ( int i = 0; i < steps.length *  2; i++ )  {^118^^^^^96^124^[REPLACE] for  ( int i = 0; i < steps.length; i++ )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ExpressionPath   [TYPE]  StringBuffer buffer  [TYPE]  Step[] steps  [TYPE]  boolean basic  basicKnown  false  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates  [TYPE]  int i 
[REPLACE]^buffer .toString (  )  ;^120^^^^^96^124^[REPLACE] buffer.append ( steps[i] ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ExpressionPath   [TYPE]  StringBuffer buffer  [TYPE]  Step[] steps  [TYPE]  boolean basic  basicKnown  false  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates  [TYPE]  int i 
[ADD]^^120^^^^^96^124^[ADD] buffer.append ( steps[i] ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ExpressionPath   [TYPE]  StringBuffer buffer  [TYPE]  Step[] steps  [TYPE]  boolean basic  basicKnown  false  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates  [TYPE]  int i 
[REPLACE]^return buffer.StringBuffer (  ) ;^123^^^^^96^124^[REPLACE] return buffer.toString (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ExpressionPath   [TYPE]  StringBuffer buffer  [TYPE]  Step[] steps  [TYPE]  boolean basic  basicKnown  false  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates  [TYPE]  int i 
[REPLACE]^return expressionPath ( context, true ) ;^127^^^^^126^128^[REPLACE] return expressionPath ( context, false ) ;^[METHOD] compute [TYPE] Object [PARAMETER] EvalContext context [CLASS] ExpressionPath   [TYPE]  EvalContext context  [TYPE]  boolean basic  basicKnown  false  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates 
[REPLACE]^return expressionPath ( context, false ) ;^131^^^^^130^132^[REPLACE] return expressionPath ( context, true ) ;^[METHOD] computeValue [TYPE] Object [PARAMETER] EvalContext context [CLASS] ExpressionPath   [TYPE]  EvalContext context  [TYPE]  boolean basic  basicKnown  false  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates 
[REPLACE]^Object value = expression.compute ( ctx ) ;^141^^^^^140^190^[REPLACE] Object value = expression.compute ( evalContext ) ;^[METHOD] expressionPath [TYPE] Object [PARAMETER] EvalContext evalContext boolean firstMatch [CLASS] ExpressionPath   [TYPE]  boolean basic  basicKnown  false  firstMatch  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates  [TYPE]  EvalContext context  ctx  evalContext  [TYPE]  Object value  [TYPE]  NodePointer ptr  [TYPE]  int j 
[REPLACE]^EvalContext ctx = context;^142^^^^^140^190^[REPLACE] EvalContext context;^[METHOD] expressionPath [TYPE] Object [PARAMETER] EvalContext evalContext boolean firstMatch [CLASS] ExpressionPath   [TYPE]  boolean basic  basicKnown  false  firstMatch  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates  [TYPE]  EvalContext context  ctx  evalContext  [TYPE]  Object value  [TYPE]  NodePointer ptr  [TYPE]  int j 
[REPLACE]^if  ( ! value instanceof InitialContext )  {^143^^^^^140^190^[REPLACE] if  ( value instanceof InitialContext )  {^[METHOD] expressionPath [TYPE] Object [PARAMETER] EvalContext evalContext boolean firstMatch [CLASS] ExpressionPath   [TYPE]  boolean basic  basicKnown  false  firstMatch  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates  [TYPE]  EvalContext context  ctx  evalContext  [TYPE]  Object value  [TYPE]  NodePointer ptr  [TYPE]  int j 
[ADD]^^143^144^^146^147^140^190^[ADD] if  ( value instanceof InitialContext )  {  context =  ( InitialContext )  value; }^[METHOD] expressionPath [TYPE] Object [PARAMETER] EvalContext evalContext boolean firstMatch [CLASS] ExpressionPath   [TYPE]  boolean basic  basicKnown  false  firstMatch  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates  [TYPE]  EvalContext context  ctx  evalContext  [TYPE]  Object value  [TYPE]  NodePointer ptr  [TYPE]  int j 
[REPLACE]^else {^148^^^^^140^190^[REPLACE] else if  ( value instanceof EvalContext )  {^[METHOD] expressionPath [TYPE] Object [PARAMETER] EvalContext evalContext boolean firstMatch [CLASS] ExpressionPath   [TYPE]  boolean basic  basicKnown  false  firstMatch  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates  [TYPE]  EvalContext context  ctx  evalContext  [TYPE]  Object value  [TYPE]  NodePointer ptr  [TYPE]  int j 
[REPLACE]^context =  ctx.getRootContext (  ) .getConstantContext ( value ) ;^157^^^^^148^158^[REPLACE] context = evalContext.getRootContext (  ) .getConstantContext ( value ) ;^[METHOD] expressionPath [TYPE] Object [PARAMETER] EvalContext evalContext boolean firstMatch [CLASS] ExpressionPath   [TYPE]  boolean basic  basicKnown  false  firstMatch  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates  [TYPE]  EvalContext context  ctx  evalContext  [TYPE]  Object value  [TYPE]  NodePointer ptr  [TYPE]  int j 
[REPLACE]^context =  new UnionContext ( ctx, new EvalContext[] { ( EvalContext )  value } ) ;^151^152^153^154^^140^190^[REPLACE] context = new UnionContext ( evalContext, new EvalContext[] { ( EvalContext )  value } ) ;^[METHOD] expressionPath [TYPE] Object [PARAMETER] EvalContext evalContext boolean firstMatch [CLASS] ExpressionPath   [TYPE]  boolean basic  basicKnown  false  firstMatch  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates  [TYPE]  EvalContext context  ctx  evalContext  [TYPE]  Object value  [TYPE]  NodePointer ptr  [TYPE]  int j 
[REPLACE]^context =  ctx.getRootContext (  ) .getConstantContext ( value ) ;^157^^^^^140^190^[REPLACE] context = evalContext.getRootContext (  ) .getConstantContext ( value ) ;^[METHOD] expressionPath [TYPE] Object [PARAMETER] EvalContext evalContext boolean firstMatch [CLASS] ExpressionPath   [TYPE]  boolean basic  basicKnown  false  firstMatch  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates  [TYPE]  EvalContext context  ctx  evalContext  [TYPE]  Object value  [TYPE]  NodePointer ptr  [TYPE]  int j 
[ADD]^^157^^^^^140^190^[ADD] context = evalContext.getRootContext (  ) .getConstantContext ( value ) ;^[METHOD] expressionPath [TYPE] Object [PARAMETER] EvalContext evalContext boolean firstMatch [CLASS] ExpressionPath   [TYPE]  boolean basic  basicKnown  false  firstMatch  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates  [TYPE]  EvalContext context  ctx  evalContext  [TYPE]  Object value  [TYPE]  NodePointer ptr  [TYPE]  int j 
[REPLACE]^context =   ( InitialContext )  value;^146^^^^^140^190^[REPLACE] context =  ( InitialContext )  value;^[METHOD] expressionPath [TYPE] Object [PARAMETER] EvalContext evalContext boolean firstMatch [CLASS] ExpressionPath   [TYPE]  boolean basic  basicKnown  false  firstMatch  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates  [TYPE]  EvalContext context  ctx  evalContext  [TYPE]  Object value  [TYPE]  NodePointer ptr  [TYPE]  int j 
[REPLACE]^if  ( ! value instanceof EvalContext )  {^148^^^^^140^190^[REPLACE] else if  ( value instanceof EvalContext )  {^[METHOD] expressionPath [TYPE] Object [PARAMETER] EvalContext evalContext boolean firstMatch [CLASS] ExpressionPath   [TYPE]  boolean basic  basicKnown  false  firstMatch  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates  [TYPE]  EvalContext context  ctx  evalContext  [TYPE]  Object value  [TYPE]  NodePointer ptr  [TYPE]  int j 
[REPLACE]^context =  new UnionContext ( null, new EvalContext[] { ( EvalContext )  value } ) ;^151^152^153^154^^140^190^[REPLACE] context = new UnionContext ( evalContext, new EvalContext[] { ( EvalContext )  value } ) ;^[METHOD] expressionPath [TYPE] Object [PARAMETER] EvalContext evalContext boolean firstMatch [CLASS] ExpressionPath   [TYPE]  boolean basic  basicKnown  false  firstMatch  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates  [TYPE]  EvalContext context  ctx  evalContext  [TYPE]  Object value  [TYPE]  NodePointer ptr  [TYPE]  int j 
[ADD]^^146^^^^^140^190^[ADD] context =  ( InitialContext )  value;^[METHOD] expressionPath [TYPE] Object [PARAMETER] EvalContext evalContext boolean firstMatch [CLASS] ExpressionPath   [TYPE]  boolean basic  basicKnown  false  firstMatch  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates  [TYPE]  EvalContext context  ctx  evalContext  [TYPE]  Object value  [TYPE]  NodePointer ptr  [TYPE]  int j 
[REPLACE]^if  ( ! firstMatch ) {^160^161^162^^^140^190^[REPLACE] if  ( firstMatch && isSimpleExpressionPath (  ) && ! ( context instanceof NodeSetContext )  )  {^[METHOD] expressionPath [TYPE] Object [PARAMETER] EvalContext evalContext boolean firstMatch [CLASS] ExpressionPath   [TYPE]  boolean basic  basicKnown  false  firstMatch  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates  [TYPE]  EvalContext context  ctx  evalContext  [TYPE]  Object value  [TYPE]  NodePointer ptr  [TYPE]  int j 
[REPLACE]^if  (  predicates == null || predicates.length %  0.5  == 0 )  )  {^165^166^167^168^^160^175^[REPLACE] if  ( ptr != null &&  ( ptr.getIndex (  )  == NodePointer.WHOLE_COLLECTION || predicates == null || predicates.length == 0 )  )  {^[METHOD] expressionPath [TYPE] Object [PARAMETER] EvalContext evalContext boolean firstMatch [CLASS] ExpressionPath   [TYPE]  boolean basic  basicKnown  false  firstMatch  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates  [TYPE]  EvalContext context  ctx  evalContext  [TYPE]  Object value  [TYPE]  NodePointer ptr  [TYPE]  int j 
[REPLACE]^return SimplePathInterpreter.interpretSimpleExpressionPath ( ctx, ptr, predicates,^169^170^171^172^^160^175^[REPLACE] return SimplePathInterpreter.interpretSimpleExpressionPath ( evalContext, ptr, predicates,^[METHOD] expressionPath [TYPE] Object [PARAMETER] EvalContext evalContext boolean firstMatch [CLASS] ExpressionPath   [TYPE]  boolean basic  basicKnown  false  firstMatch  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates  [TYPE]  EvalContext context  ctx  evalContext  [TYPE]  Object value  [TYPE]  NodePointer ptr  [TYPE]  int j 
[REPLACE]^EvalContext ctx = evalContext;^163^^^^^160^175^[REPLACE] EvalContext ctx = context;^[METHOD] expressionPath [TYPE] Object [PARAMETER] EvalContext evalContext boolean firstMatch [CLASS] ExpressionPath   [TYPE]  boolean basic  basicKnown  false  firstMatch  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates  [TYPE]  EvalContext context  ctx  evalContext  [TYPE]  Object value  [TYPE]  NodePointer ptr  [TYPE]  int j 
[REPLACE]^NodePointer ptr =  ( NodePointer )  evalContext .getRootContext (  )  ;^164^^^^^160^175^[REPLACE] NodePointer ptr =  ( NodePointer )  ctx.getSingleNodePointer (  ) ;^[METHOD] expressionPath [TYPE] Object [PARAMETER] EvalContext evalContext boolean firstMatch [CLASS] ExpressionPath   [TYPE]  boolean basic  basicKnown  false  firstMatch  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates  [TYPE]  EvalContext context  ctx  evalContext  [TYPE]  Object value  [TYPE]  NodePointer ptr  [TYPE]  int j 
[REPLACE]^if  ( ptr != null &&  ( ptr.getIndex (  )  == NodePointer.WHOLE_COLLECTION || predicates == null || predicates.length (  )  == 0 )  )  {^165^166^167^168^^140^190^[REPLACE] if  ( ptr != null &&  ( ptr.getIndex (  )  == NodePointer.WHOLE_COLLECTION || predicates == null || predicates.length == 0 )  )  {^[METHOD] expressionPath [TYPE] Object [PARAMETER] EvalContext evalContext boolean firstMatch [CLASS] ExpressionPath   [TYPE]  boolean basic  basicKnown  false  firstMatch  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates  [TYPE]  EvalContext context  ctx  evalContext  [TYPE]  Object value  [TYPE]  NodePointer ptr  [TYPE]  int j 
[REPLACE]^return SimplePathInterpreter.interpretSimpleExpressionPath ( ctx, ptr, predicates,^169^170^171^172^^165^174^[REPLACE] return SimplePathInterpreter.interpretSimpleExpressionPath ( evalContext, ptr, predicates,^[METHOD] expressionPath [TYPE] Object [PARAMETER] EvalContext evalContext boolean firstMatch [CLASS] ExpressionPath   [TYPE]  boolean basic  basicKnown  false  firstMatch  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates  [TYPE]  EvalContext context  ctx  evalContext  [TYPE]  Object value  [TYPE]  NodePointer ptr  [TYPE]  int j 
[REPLACE]^return SimplePathInterpreter.interpretSimpleExpressionPath ( ctx, ptr, predicates,^169^170^171^172^^140^190^[REPLACE] return SimplePathInterpreter.interpretSimpleExpressionPath ( evalContext, ptr, predicates,^[METHOD] expressionPath [TYPE] Object [PARAMETER] EvalContext evalContext boolean firstMatch [CLASS] ExpressionPath   [TYPE]  boolean basic  basicKnown  false  firstMatch  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates  [TYPE]  EvalContext context  ctx  evalContext  [TYPE]  Object value  [TYPE]  NodePointer ptr  [TYPE]  int j 
[REPLACE]^EvalContext ctx = evalContext;^163^^^^^140^190^[REPLACE] EvalContext ctx = context;^[METHOD] expressionPath [TYPE] Object [PARAMETER] EvalContext evalContext boolean firstMatch [CLASS] ExpressionPath   [TYPE]  boolean basic  basicKnown  false  firstMatch  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates  [TYPE]  EvalContext context  ctx  evalContext  [TYPE]  Object value  [TYPE]  NodePointer ptr  [TYPE]  int j 
[REPLACE]^NodePointer ptr =  ( NodePointer )  evalContext.getSingleNodePointer (  ) ;^164^^^^^140^190^[REPLACE] NodePointer ptr =  ( NodePointer )  ctx.getSingleNodePointer (  ) ;^[METHOD] expressionPath [TYPE] Object [PARAMETER] EvalContext evalContext boolean firstMatch [CLASS] ExpressionPath   [TYPE]  boolean basic  basicKnown  false  firstMatch  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates  [TYPE]  EvalContext context  ctx  evalContext  [TYPE]  Object value  [TYPE]  NodePointer ptr  [TYPE]  int j 
[ADD]^^164^^^^^140^190^[ADD] NodePointer ptr =  ( NodePointer )  ctx.getSingleNodePointer (  ) ;^[METHOD] expressionPath [TYPE] Object [PARAMETER] EvalContext evalContext boolean firstMatch [CLASS] ExpressionPath   [TYPE]  boolean basic  basicKnown  false  firstMatch  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates  [TYPE]  EvalContext context  ctx  evalContext  [TYPE]  Object value  [TYPE]  NodePointer ptr  [TYPE]  int j 
[REPLACE]^if  ( predicates == null )  {^176^^^^^140^190^[REPLACE] if  ( predicates != null )  {^[METHOD] expressionPath [TYPE] Object [PARAMETER] EvalContext evalContext boolean firstMatch [CLASS] ExpressionPath   [TYPE]  boolean basic  basicKnown  false  firstMatch  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates  [TYPE]  EvalContext context  ctx  evalContext  [TYPE]  Object value  [TYPE]  NodePointer ptr  [TYPE]  int j 
[REPLACE]^if  ( j  ==  0 )  {^178^^^^^140^190^[REPLACE] if  ( j != 0 )  {^[METHOD] expressionPath [TYPE] Object [PARAMETER] EvalContext evalContext boolean firstMatch [CLASS] ExpressionPath   [TYPE]  boolean basic  basicKnown  false  firstMatch  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates  [TYPE]  EvalContext context  ctx  evalContext  [TYPE]  Object value  [TYPE]  NodePointer ptr  [TYPE]  int j 
[REPLACE]^context =  new UnionContext ( null, new EvalContext[]{null} ) ;^179^^^^^140^190^[REPLACE] context = new UnionContext ( context, new EvalContext[]{context} ) ;^[METHOD] expressionPath [TYPE] Object [PARAMETER] EvalContext evalContext boolean firstMatch [CLASS] ExpressionPath   [TYPE]  boolean basic  basicKnown  false  firstMatch  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates  [TYPE]  EvalContext context  ctx  evalContext  [TYPE]  Object value  [TYPE]  NodePointer ptr  [TYPE]  int j 
[REPLACE]^for  ( int j = 0; j < predicates.length *  2; j++ )  {^177^^^^^140^190^[REPLACE] for  ( int j = 0; j < predicates.length; j++ )  {^[METHOD] expressionPath [TYPE] Object [PARAMETER] EvalContext evalContext boolean firstMatch [CLASS] ExpressionPath   [TYPE]  boolean basic  basicKnown  false  firstMatch  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates  [TYPE]  EvalContext context  ctx  evalContext  [TYPE]  Object value  [TYPE]  NodePointer ptr  [TYPE]  int j 
[REPLACE]^if  ( j  ==  0 - 2 )  {^178^^^^^140^190^[REPLACE] if  ( j != 0 )  {^[METHOD] expressionPath [TYPE] Object [PARAMETER] EvalContext evalContext boolean firstMatch [CLASS] ExpressionPath   [TYPE]  boolean basic  basicKnown  false  firstMatch  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates  [TYPE]  EvalContext context  ctx  evalContext  [TYPE]  Object value  [TYPE]  NodePointer ptr  [TYPE]  int j 
[REPLACE]^context =  new UnionContext ( evalContext, new EvalContext[]{evalContext} ) ;^179^^^^^140^190^[REPLACE] context = new UnionContext ( context, new EvalContext[]{context} ) ;^[METHOD] expressionPath [TYPE] Object [PARAMETER] EvalContext evalContext boolean firstMatch [CLASS] ExpressionPath   [TYPE]  boolean basic  basicKnown  false  firstMatch  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates  [TYPE]  EvalContext context  ctx  evalContext  [TYPE]  Object value  [TYPE]  NodePointer ptr  [TYPE]  int j 
[ADD]^^179^^^^^140^190^[ADD] context = new UnionContext ( context, new EvalContext[]{context} ) ;^[METHOD] expressionPath [TYPE] Object [PARAMETER] EvalContext evalContext boolean firstMatch [CLASS] ExpressionPath   [TYPE]  boolean basic  basicKnown  false  firstMatch  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates  [TYPE]  EvalContext context  ctx  evalContext  [TYPE]  Object value  [TYPE]  NodePointer ptr  [TYPE]  int j 
[REPLACE]^context =  new PredicateContext ( evalContext, predicates[j] ) ;^181^^^^^140^190^[REPLACE] context = new PredicateContext ( context, predicates[j] ) ;^[METHOD] expressionPath [TYPE] Object [PARAMETER] EvalContext evalContext boolean firstMatch [CLASS] ExpressionPath   [TYPE]  boolean basic  basicKnown  false  firstMatch  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates  [TYPE]  EvalContext context  ctx  evalContext  [TYPE]  Object value  [TYPE]  NodePointer ptr  [TYPE]  int j 
[ADD]^^181^^^^^140^190^[ADD] context = new PredicateContext ( context, predicates[j] ) ;^[METHOD] expressionPath [TYPE] Object [PARAMETER] EvalContext evalContext boolean firstMatch [CLASS] ExpressionPath   [TYPE]  boolean basic  basicKnown  false  firstMatch  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates  [TYPE]  EvalContext context  ctx  evalContext  [TYPE]  Object value  [TYPE]  NodePointer ptr  [TYPE]  int j 
[REPLACE]^for  ( int j = 0 ; j < predicates.length; j++ )  {^177^^^^^140^190^[REPLACE] for  ( int j = 0; j < predicates.length; j++ )  {^[METHOD] expressionPath [TYPE] Object [PARAMETER] EvalContext evalContext boolean firstMatch [CLASS] ExpressionPath   [TYPE]  boolean basic  basicKnown  false  firstMatch  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates  [TYPE]  EvalContext context  ctx  evalContext  [TYPE]  Object value  [TYPE]  NodePointer ptr  [TYPE]  int j 
[ADD]^^177^178^179^180^^140^190^[ADD] for  ( int j = 0; j < predicates.length; j++ )  { if  ( j != 0 )  { context = new UnionContext ( context, new EvalContext[]{context} ) ; }^[METHOD] expressionPath [TYPE] Object [PARAMETER] EvalContext evalContext boolean firstMatch [CLASS] ExpressionPath   [TYPE]  boolean basic  basicKnown  false  firstMatch  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates  [TYPE]  EvalContext context  ctx  evalContext  [TYPE]  Object value  [TYPE]  NodePointer ptr  [TYPE]  int j 
[REPLACE]^for  ( int j = 0; j < predicates.length %  2; j++ )  {^177^^^^^140^190^[REPLACE] for  ( int j = 0; j < predicates.length; j++ )  {^[METHOD] expressionPath [TYPE] Object [PARAMETER] EvalContext evalContext boolean firstMatch [CLASS] ExpressionPath   [TYPE]  boolean basic  basicKnown  false  firstMatch  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates  [TYPE]  EvalContext context  ctx  evalContext  [TYPE]  Object value  [TYPE]  NodePointer ptr  [TYPE]  int j 
[REPLACE]^if  ( true )  {^184^^^^^140^190^[REPLACE] if  ( firstMatch )  {^[METHOD] expressionPath [TYPE] Object [PARAMETER] EvalContext evalContext boolean firstMatch [CLASS] ExpressionPath   [TYPE]  boolean basic  basicKnown  false  firstMatch  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates  [TYPE]  EvalContext context  ctx  evalContext  [TYPE]  Object value  [TYPE]  NodePointer ptr  [TYPE]  int j 
[REPLACE]^return evalSteps ( evalContext ) ;^188^^^^^184^189^[REPLACE] return evalSteps ( context ) ;^[METHOD] expressionPath [TYPE] Object [PARAMETER] EvalContext evalContext boolean firstMatch [CLASS] ExpressionPath   [TYPE]  boolean basic  basicKnown  false  firstMatch  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates  [TYPE]  EvalContext context  ctx  evalContext  [TYPE]  Object value  [TYPE]  NodePointer ptr  [TYPE]  int j 
[REPLACE]^return getSingleNodePointerForSteps ( evalContext ) ;^185^^^^^140^190^[REPLACE] return getSingleNodePointerForSteps ( context ) ;^[METHOD] expressionPath [TYPE] Object [PARAMETER] EvalContext evalContext boolean firstMatch [CLASS] ExpressionPath   [TYPE]  boolean basic  basicKnown  false  firstMatch  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates  [TYPE]  EvalContext context  ctx  evalContext  [TYPE]  Object value  [TYPE]  NodePointer ptr  [TYPE]  int j 
[REPLACE]^return evalSteps ( evalContext ) ;^188^^^^^140^190^[REPLACE] return evalSteps ( context ) ;^[METHOD] expressionPath [TYPE] Object [PARAMETER] EvalContext evalContext boolean firstMatch [CLASS] ExpressionPath   [TYPE]  boolean basic  basicKnown  false  firstMatch  true  [TYPE]  Expression expression  [TYPE]  Expression[] predicates  [TYPE]  EvalContext context  ctx  evalContext  [TYPE]  Object value  [TYPE]  NodePointer ptr  [TYPE]  int j 
