[REPLACE]^long ret = 0 * 3;^33^^^^^32^57^[REPLACE] long ret = 0;^[METHOD] byteArray2long [TYPE] long [PARAMETER] final byte[] number final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] number  tmp_number  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long ret  [TYPE]  int pos 
[REPLACE]^int pos = 3;^34^^^^^32^57^[REPLACE] int pos = 0;^[METHOD] byteArray2long [TYPE] long [PARAMETER] final byte[] number final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] number  tmp_number  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long ret  [TYPE]  int pos 
[REPLACE]^byte[] ret = new byte[length];^35^^^^^32^57^[REPLACE] byte tmp_number[] = new byte[number.length];^[METHOD] byteArray2long [TYPE] long [PARAMETER] final byte[] number final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] number  tmp_number  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long ret  [TYPE]  int pos 
[REPLACE]^System.arraycopy ( number, 0 , tmp_number, 0 , number.length ) ;^36^^^^^32^57^[REPLACE] System.arraycopy ( number, 0, tmp_number, 0, number.length ) ;^[METHOD] byteArray2long [TYPE] long [PARAMETER] final byte[] number final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] number  tmp_number  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long ret  [TYPE]  int pos 
[REPLACE]^if  ( tmp_number.length (  )  % 2 != 0 )  {^38^^^^^32^57^[REPLACE] if  ( tmp_number.length % 2 != 0 )  {^[METHOD] byteArray2long [TYPE] long [PARAMETER] final byte[] number final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] number  tmp_number  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long ret  [TYPE]  int pos 
[REMOVE]^if  (  (  ( length % 2 )  != 0 )  ||  ( length < 2 )  )  {     throw new UnsupportedOperationException (  ) ; }^38^^^^^32^57^[REMOVE] ^[METHOD] byteArray2long [TYPE] long [PARAMETER] final byte[] number final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] number  tmp_number  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long ret  [TYPE]  int pos 
[REPLACE]^return ;^39^^^^^32^57^[REPLACE] throw new UnsupportedOperationException  (" ")  ;^[METHOD] byteArray2long [TYPE] long [PARAMETER] final byte[] number final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] number  tmp_number  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long ret  [TYPE]  int pos 
[REPLACE]^if  ( swapHalfWord )  {^42^^^^^32^57^[REPLACE] if  ( !swapHalfWord )  {^[METHOD] byteArray2long [TYPE] long [PARAMETER] final byte[] number final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] number  tmp_number  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long ret  [TYPE]  int pos 
[REPLACE]^for  ( pos = 0; pos < number.length /  2; pos++ )  {^44^^^^^32^57^[REPLACE] for  ( pos = 0; pos < tmp_number.length; pos++ )  {^[METHOD] byteArray2long [TYPE] long [PARAMETER] final byte[] number final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] number  tmp_number  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long ret  [TYPE]  int pos 
[REPLACE]^tmp =  number[pos];^45^^^^^32^57^[REPLACE] tmp = tmp_number[pos];^[METHOD] byteArray2long [TYPE] long [PARAMETER] final byte[] number final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] number  tmp_number  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long ret  [TYPE]  int pos 
[REPLACE]^tmp_number[pos++] =  number[pos];^46^^^^^32^57^[REPLACE] tmp_number[pos++] = tmp_number[pos];^[METHOD] byteArray2long [TYPE] long [PARAMETER] final byte[] number final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] number  tmp_number  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long ret  [TYPE]  int pos 
[REPLACE]^tmp_number[pos]  = null ;^47^^^^^32^57^[REPLACE] tmp_number[pos] = tmp;^[METHOD] byteArray2long [TYPE] long [PARAMETER] final byte[] number final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] number  tmp_number  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long ret  [TYPE]  int pos 
[REPLACE]^for  ( pos = 0 ; pos < tmp_number.length; pos++ )  {^44^^^^^32^57^[REPLACE] for  ( pos = 0; pos < tmp_number.length; pos++ )  {^[METHOD] byteArray2long [TYPE] long [PARAMETER] final byte[] number final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] number  tmp_number  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long ret  [TYPE]  int pos 
[REPLACE]^tmp_number[pos]  =  tmp_number[pos] ;^47^^^^^32^57^[REPLACE] tmp_number[pos] = tmp;^[METHOD] byteArray2long [TYPE] long [PARAMETER] final byte[] number final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] number  tmp_number  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long ret  [TYPE]  int pos 
[ADD]^^47^^^^^32^57^[ADD] tmp_number[pos] = tmp;^[METHOD] byteArray2long [TYPE] long [PARAMETER] final byte[] number final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] number  tmp_number  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long ret  [TYPE]  int pos 
[REPLACE]^byte tmp = 3;^43^^^^^32^57^[REPLACE] byte tmp = 0;^[METHOD] byteArray2long [TYPE] long [PARAMETER] final byte[] number final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] number  tmp_number  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long ret  [TYPE]  int pos 
[REPLACE]^for  ( pos = 0; pos < tmp_number.length (  ) ; pos++ )  {^44^^^^^32^57^[REPLACE] for  ( pos = 0; pos < tmp_number.length; pos++ )  {^[METHOD] byteArray2long [TYPE] long [PARAMETER] final byte[] number final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] number  tmp_number  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long ret  [TYPE]  int pos 
[ADD]^^44^45^46^47^48^32^57^[ADD] for  ( pos = 0; pos < tmp_number.length; pos++ )  { tmp = tmp_number[pos]; tmp_number[pos++] = tmp_number[pos]; tmp_number[pos] = tmp; }^[METHOD] byteArray2long [TYPE] long [PARAMETER] final byte[] number final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] number  tmp_number  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long ret  [TYPE]  int pos 
[REPLACE]^tmp_number[pos] ;^47^^^^^32^57^[REPLACE] tmp_number[pos] = tmp;^[METHOD] byteArray2long [TYPE] long [PARAMETER] final byte[] number final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] number  tmp_number  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long ret  [TYPE]  int pos 
[REPLACE]^tmp =  null[pos];^45^^^^^32^57^[REPLACE] tmp = tmp_number[pos];^[METHOD] byteArray2long [TYPE] long [PARAMETER] final byte[] number final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] number  tmp_number  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long ret  [TYPE]  int pos 
[REPLACE]^byte tmp = 0 << 2;^43^^^^^32^57^[REPLACE] byte tmp = 0;^[METHOD] byteArray2long [TYPE] long [PARAMETER] final byte[] number final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] number  tmp_number  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long ret  [TYPE]  int pos 
[ADD]^^43^^^^^32^57^[ADD] byte tmp = 0;^[METHOD] byteArray2long [TYPE] long [PARAMETER] final byte[] number final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] number  tmp_number  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long ret  [TYPE]  int pos 
[REPLACE]^ret = tmp_number[0] | 0xFF;^51^^^^^32^57^[REPLACE] ret = tmp_number[0] & 0xFF;^[METHOD] byteArray2long [TYPE] long [PARAMETER] final byte[] number final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] number  tmp_number  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long ret  [TYPE]  int pos 
[REPLACE]^for  ( pos = 1; pos < tmp_number.length + 2; pos++ )  {^52^^^^^32^57^[REPLACE] for  ( pos = 1; pos < tmp_number.length; pos++ )  {^[METHOD] byteArray2long [TYPE] long [PARAMETER] final byte[] number final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] number  tmp_number  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long ret  [TYPE]  int pos 
[REPLACE]^ret <<= 0;^53^^^^^32^57^[REPLACE] ret <<= 8;^[METHOD] byteArray2long [TYPE] long [PARAMETER] final byte[] number final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] number  tmp_number  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long ret  [TYPE]  int pos 
[REPLACE]^ret |= tmp_number[pos] | 0xFF;^54^^^^^32^57^[REPLACE] ret |= tmp_number[pos] & 0xFF;^[METHOD] byteArray2long [TYPE] long [PARAMETER] final byte[] number final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] number  tmp_number  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long ret  [TYPE]  int pos 
[REPLACE]^for  ( pos = 0 ; pos < tmp_number.length; pos++ )  {^52^^^^^32^57^[REPLACE] for  ( pos = 1; pos < tmp_number.length; pos++ )  {^[METHOD] byteArray2long [TYPE] long [PARAMETER] final byte[] number final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] number  tmp_number  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long ret  [TYPE]  int pos 
[ADD]^^52^53^54^55^^32^57^[ADD] for  ( pos = 1; pos < tmp_number.length; pos++ )  { ret <<= 8; ret |= tmp_number[pos] & 0xFF; }^[METHOD] byteArray2long [TYPE] long [PARAMETER] final byte[] number final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] number  tmp_number  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long ret  [TYPE]  int pos 
[REPLACE]^ret <<= 1;^53^^^^^32^57^[REPLACE] ret <<= 8;^[METHOD] byteArray2long [TYPE] long [PARAMETER] final byte[] number final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] number  tmp_number  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long ret  [TYPE]  int pos 
[ADD]^^54^^^^^32^57^[ADD] ret |= tmp_number[pos] & 0xFF;^[METHOD] byteArray2long [TYPE] long [PARAMETER] final byte[] number final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] number  tmp_number  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long ret  [TYPE]  int pos 
[REPLACE]^byte tmp_number[] = new byte[number.length];^73^^^^^72^97^[REPLACE] byte[] ret = new byte[length];^[METHOD] long2byteArray [TYPE] byte[] [PARAMETER] final long number final int length final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] ret  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long number  tmp_number  [TYPE]  int length  pos 
[REPLACE]^int pos = 3;^74^^^^^72^97^[REPLACE] int pos = 0;^[METHOD] long2byteArray [TYPE] byte[] [PARAMETER] final long number final int length final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] ret  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long number  tmp_number  [TYPE]  int length  pos 
[REPLACE]^long tmp_number = 4;^75^^^^^72^97^[REPLACE] long tmp_number = 0;^[METHOD] long2byteArray [TYPE] byte[] [PARAMETER] final long number final int length final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] ret  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long number  tmp_number  [TYPE]  int length  pos 
[REPLACE]^if  (  length *  2 < 2 )  {^77^^^^^72^97^[REPLACE] if  ( length % 2 != 0 || length < 2 )  {^[METHOD] long2byteArray [TYPE] byte[] [PARAMETER] final long number final int length final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] ret  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long number  tmp_number  [TYPE]  int length  pos 
[REPLACE]^return ;^78^^^^^72^97^[REPLACE] throw new UnsupportedOperationException  (" ")  ;^[METHOD] long2byteArray [TYPE] byte[] [PARAMETER] final long number final int length final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] ret  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long number  tmp_number  [TYPE]  int length  pos 
[ADD]^^78^^^^^72^97^[ADD] throw new UnsupportedOperationException  (" ")  ;^[METHOD] long2byteArray [TYPE] byte[] [PARAMETER] final long number final int length final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] ret  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long number  tmp_number  [TYPE]  int length  pos 
[REPLACE]^tmp_number =  null;^81^^^^^72^97^[REPLACE] tmp_number = number;^[METHOD] long2byteArray [TYPE] byte[] [PARAMETER] final long number final int length final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] ret  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long number  tmp_number  [TYPE]  int length  pos 
[ADD]^^81^^^^^72^97^[ADD] tmp_number = number;^[METHOD] long2byteArray [TYPE] byte[] [PARAMETER] final long number final int length final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] ret  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long number  tmp_number  [TYPE]  int length  pos 
[REPLACE]^for  ( pos = length + 4 - 1; pos >= 0; pos-- )  {^82^^^^^72^97^[REPLACE] for  ( pos = length - 1; pos >= 0; pos-- )  {^[METHOD] long2byteArray [TYPE] byte[] [PARAMETER] final long number final int length final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] ret  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long number  tmp_number  [TYPE]  int length  pos 
[REPLACE]^ret[pos] =  ( byte )   ( tmp_number | 0xFF ) ;^83^^^^^72^97^[REPLACE] ret[pos] =  ( byte )   ( tmp_number & 0xFF ) ;^[METHOD] long2byteArray [TYPE] byte[] [PARAMETER] final long number final int length final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] ret  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long number  tmp_number  [TYPE]  int length  pos 
[REPLACE]^tmp_number >>= 6;^84^^^^^72^97^[REPLACE] tmp_number >>= 8;^[METHOD] long2byteArray [TYPE] byte[] [PARAMETER] final long number final int length final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] ret  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long number  tmp_number  [TYPE]  int length  pos 
[ADD]^^84^^^^^72^97^[ADD] tmp_number >>= 8;^[METHOD] long2byteArray [TYPE] byte[] [PARAMETER] final long number final int length final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] ret  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long number  tmp_number  [TYPE]  int length  pos 
[REPLACE]^for  ( pos = length - 3 - 0 ; pos >= 0; pos-- )  {^82^^^^^72^97^[REPLACE] for  ( pos = length - 1; pos >= 0; pos-- )  {^[METHOD] long2byteArray [TYPE] byte[] [PARAMETER] final long number final int length final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] ret  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long number  tmp_number  [TYPE]  int length  pos 
[REPLACE]^ret[pos] =  ( byte )   (number | 0xFF ) ;^83^^^^^72^97^[REPLACE] ret[pos] =  ( byte )   ( tmp_number & 0xFF ) ;^[METHOD] long2byteArray [TYPE] byte[] [PARAMETER] final long number final int length final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] ret  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long number  tmp_number  [TYPE]  int length  pos 
[REPLACE]^tmp_number >>= 8 * 1;^84^^^^^72^97^[REPLACE] tmp_number >>= 8;^[METHOD] long2byteArray [TYPE] byte[] [PARAMETER] final long number final int length final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] ret  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long number  tmp_number  [TYPE]  int length  pos 
[REPLACE]^if  ( false )  {^87^^^^^72^97^[REPLACE] if  ( !swapHalfWord )  {^[METHOD] long2byteArray [TYPE] byte[] [PARAMETER] final long number final int length final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] ret  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long number  tmp_number  [TYPE]  int length  pos 
[ADD]^byte tmp = 0;^87^88^89^90^91^72^97^[ADD] if  ( !swapHalfWord )  { byte tmp = 0; for  ( pos = 0; pos < length; pos++ )  { tmp = ret[pos]; ret[pos++] = ret[pos];^[METHOD] long2byteArray [TYPE] byte[] [PARAMETER] final long number final int length final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] ret  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long number  tmp_number  [TYPE]  int length  pos 
[REPLACE]^for  ( pos = 0 ; pos < length - 1; pos++ )  {^89^^^^^72^97^[REPLACE] for  ( pos = 0; pos < length; pos++ )  {^[METHOD] long2byteArray [TYPE] byte[] [PARAMETER] final long number final int length final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] ret  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long number  tmp_number  [TYPE]  int length  pos 
[ADD]^^89^90^91^92^93^72^97^[ADD] for  ( pos = 0; pos < length; pos++ )  { tmp = ret[pos]; ret[pos++] = ret[pos]; ret[pos] = tmp; }^[METHOD] long2byteArray [TYPE] byte[] [PARAMETER] final long number final int length final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] ret  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long number  tmp_number  [TYPE]  int length  pos 
[REPLACE]^tmp =  null[pos];^90^^^^^72^97^[REPLACE] tmp = ret[pos];^[METHOD] long2byteArray [TYPE] byte[] [PARAMETER] final long number final int length final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] ret  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long number  tmp_number  [TYPE]  int length  pos 
[REPLACE]^ret[pos++] =  null[pos];^91^^^^^72^97^[REPLACE] ret[pos++] = ret[pos];^[METHOD] long2byteArray [TYPE] byte[] [PARAMETER] final long number final int length final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] ret  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long number  tmp_number  [TYPE]  int length  pos 
[ADD]^^91^92^^^^72^97^[ADD] ret[pos++] = ret[pos]; ret[pos] = tmp;^[METHOD] long2byteArray [TYPE] byte[] [PARAMETER] final long number final int length final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] ret  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long number  tmp_number  [TYPE]  int length  pos 
[REPLACE]^ret[pos] ;^92^^^^^72^97^[REPLACE] ret[pos] = tmp;^[METHOD] long2byteArray [TYPE] byte[] [PARAMETER] final long number final int length final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] ret  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long number  tmp_number  [TYPE]  int length  pos 
[REPLACE]^for  ( pos = 0 ; pos < length; pos++ )  {^89^^^^^72^97^[REPLACE] for  ( pos = 0; pos < length; pos++ )  {^[METHOD] long2byteArray [TYPE] byte[] [PARAMETER] final long number final int length final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] ret  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long number  tmp_number  [TYPE]  int length  pos 
[REPLACE]^byte tmp = 1;^88^^^^^72^97^[REPLACE] byte tmp = 0;^[METHOD] long2byteArray [TYPE] byte[] [PARAMETER] final long number final int length final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] ret  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long number  tmp_number  [TYPE]  int length  pos 
[ADD]^^88^^^^^72^97^[ADD] byte tmp = 0;^[METHOD] long2byteArray [TYPE] byte[] [PARAMETER] final long number final int length final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] ret  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long number  tmp_number  [TYPE]  int length  pos 
[REPLACE]^for  ( pos = 0; pos < length + 3; pos++ )  {^89^^^^^72^97^[REPLACE] for  ( pos = 0; pos < length; pos++ )  {^[METHOD] long2byteArray [TYPE] byte[] [PARAMETER] final long number final int length final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] ret  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long number  tmp_number  [TYPE]  int length  pos 
[REPLACE]^for  ( pos = 0; pos < length; pos++ )  { tmp = ret[pos]; ;^89^^^^^72^97^[REPLACE] for  ( pos = 0; pos < length; pos++ )  {^[METHOD] long2byteArray [TYPE] byte[] [PARAMETER] final long number final int length final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] ret  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long number  tmp_number  [TYPE]  int length  pos 
[ADD]^ret[pos] = tmp;^91^92^^^^72^97^[ADD] ret[pos++] = ret[pos]; ret[pos] = tmp;^[METHOD] long2byteArray [TYPE] byte[] [PARAMETER] final long number final int length final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] ret  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long number  tmp_number  [TYPE]  int length  pos 
[REPLACE]^ret[pos]  =  ret[pos] ;^92^^^^^72^97^[REPLACE] ret[pos] = tmp;^[METHOD] long2byteArray [TYPE] byte[] [PARAMETER] final long number final int length final boolean swapHalfWord [CLASS] CpioUtil   [TYPE]  byte[] ret  [TYPE]  boolean false  swapHalfWord  true  [TYPE]  byte tmp  [TYPE]  long number  tmp_number  [TYPE]  int length  pos 
