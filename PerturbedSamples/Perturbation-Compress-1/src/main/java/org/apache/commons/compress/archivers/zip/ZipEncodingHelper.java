[REPLACE]^private  final Map simpleEncodings;^65^^^^^^^[REPLACE] private static final Map simpleEncodings;^ [CLASS] ZipEncodingHelper SimpleEncodingHolder  
[REPLACE]^private static final byte[] HEX_DIGITS  = null ;^163^164^^^^163^167^[REPLACE] private static final byte[] HEX_DIGITS = new byte [] {^ [CLASS] ZipEncodingHelper SimpleEncodingHolder  
[REPLACE]^static  String UTF8 = "UTF8";^191^^^^^^^[REPLACE] static final String UTF8 = "UTF8";^ [CLASS] ZipEncodingHelper SimpleEncodingHolder  
[REPLACE]^static  ZipEncoding UTF8_ZIP_ENCODING = new FallbackZipEncoding ( UTF8 ) ;^196^^^^^^^[REPLACE] static final ZipEncoding UTF8_ZIP_ENCODING = new FallbackZipEncoding ( UTF8 ) ;^ [CLASS] ZipEncodingHelper SimpleEncodingHolder  
[REPLACE]^this.highChars =  null;^50^^^^^49^51^[REPLACE] this.highChars = highChars;^[METHOD] <init> [TYPE] ZipEncodingHelper$SimpleEncodingHolder(char[]) [PARAMETER] char[] highChars [CLASS] ZipEncodingHelper SimpleEncodingHolder   [TYPE]  byte[] HEX_DIGITS  [TYPE]  boolean false  true  [TYPE]  ZipEncoding UTF8_ZIP_ENCODING  [TYPE]  Simple8BitZipEncoding encoding  [TYPE]  String UTF8  [TYPE]  Map simpleEncodings  [TYPE]  char[] highChars 
[REPLACE]^if  ( this.encoding != null )  {^58^^^^^57^62^[REPLACE] if  ( this.encoding == null )  {^[METHOD] getEncoding [TYPE] Simple8BitZipEncoding [PARAMETER] [CLASS] ZipEncodingHelper SimpleEncodingHolder   [TYPE]  byte[] HEX_DIGITS  [TYPE]  boolean false  true  [TYPE]  ZipEncoding UTF8_ZIP_ENCODING  [TYPE]  Simple8BitZipEncoding encoding  [TYPE]  String UTF8  [TYPE]  Map simpleEncodings  [TYPE]  char[] highChars 
[REPLACE]^this.encoding =  new FallbackZipEncoding (  )  ;^59^^^^^57^62^[REPLACE] this.encoding = new Simple8BitZipEncoding ( this.highChars ) ;^[METHOD] getEncoding [TYPE] Simple8BitZipEncoding [PARAMETER] [CLASS] ZipEncodingHelper SimpleEncodingHolder   [TYPE]  byte[] HEX_DIGITS  [TYPE]  boolean false  true  [TYPE]  ZipEncoding UTF8_ZIP_ENCODING  [TYPE]  Simple8BitZipEncoding encoding  [TYPE]  String UTF8  [TYPE]  Map simpleEncodings  [TYPE]  char[] highChars 
[REPLACE]^return on;^61^^^^^57^62^[REPLACE] return this.encoding;^[METHOD] getEncoding [TYPE] Simple8BitZipEncoding [PARAMETER] [CLASS] ZipEncodingHelper SimpleEncodingHolder   [TYPE]  byte[] HEX_DIGITS  [TYPE]  boolean false  true  [TYPE]  ZipEncoding UTF8_ZIP_ENCODING  [TYPE]  Simple8BitZipEncoding encoding  [TYPE]  String UTF8  [TYPE]  Map simpleEncodings  [TYPE]  char[] highChars 
[REPLACE]^b.limit ( b.rewind (  )  ) ;^148^^^^^147^156^[REPLACE] b.limit ( b.position (  )  ) ;^[METHOD] growBuffer [TYPE] ByteBuffer [PARAMETER] ByteBuffer b int newCapacity [CLASS] ZipEncodingHelper SimpleEncodingHolder   [TYPE]  byte[] HEX_DIGITS  [TYPE]  boolean false  true  [TYPE]  ZipEncoding UTF8_ZIP_ENCODING  [TYPE]  Simple8BitZipEncoding encoding  [TYPE]  String UTF8  [TYPE]  Map simpleEncodings  [TYPE]  ByteBuffer b  on  [TYPE]  int c2  newCapacity  [TYPE]  char[] highChars 
[REPLACE]^b.position (  ) ;^149^^^^^147^156^[REPLACE] b.rewind (  ) ;^[METHOD] growBuffer [TYPE] ByteBuffer [PARAMETER] ByteBuffer b int newCapacity [CLASS] ZipEncodingHelper SimpleEncodingHolder   [TYPE]  byte[] HEX_DIGITS  [TYPE]  boolean false  true  [TYPE]  ZipEncoding UTF8_ZIP_ENCODING  [TYPE]  Simple8BitZipEncoding encoding  [TYPE]  String UTF8  [TYPE]  Map simpleEncodings  [TYPE]  ByteBuffer b  on  [TYPE]  int c2  newCapacity  [TYPE]  char[] highChars 
[REPLACE]^int c2 = b.capacity (  )   ;^151^^^^^147^156^[REPLACE] int c2 = b.capacity (  )  * 2;^[METHOD] growBuffer [TYPE] ByteBuffer [PARAMETER] ByteBuffer b int newCapacity [CLASS] ZipEncodingHelper SimpleEncodingHolder   [TYPE]  byte[] HEX_DIGITS  [TYPE]  boolean false  true  [TYPE]  ZipEncoding UTF8_ZIP_ENCODING  [TYPE]  Simple8BitZipEncoding encoding  [TYPE]  String UTF8  [TYPE]  Map simpleEncodings  [TYPE]  ByteBuffer b  on  [TYPE]  int c2  newCapacity  [TYPE]  char[] highChars 
[ADD]^^151^152^^^^147^156^[ADD] int c2 = b.capacity (  )  * 2; ByteBuffer on = ByteBuffer.allocate ( c2 < newCapacity ? newCapacity : c2 ) ;^[METHOD] growBuffer [TYPE] ByteBuffer [PARAMETER] ByteBuffer b int newCapacity [CLASS] ZipEncodingHelper SimpleEncodingHolder   [TYPE]  byte[] HEX_DIGITS  [TYPE]  boolean false  true  [TYPE]  ZipEncoding UTF8_ZIP_ENCODING  [TYPE]  Simple8BitZipEncoding encoding  [TYPE]  String UTF8  [TYPE]  Map simpleEncodings  [TYPE]  ByteBuffer b  on  [TYPE]  int c2  newCapacity  [TYPE]  char[] highChars 
[REPLACE]^ByteBuffer on = ByteBuffer.allocate ( c2  ==  newCapacity ? newCapacity : c2 ) ;^152^^^^^147^156^[REPLACE] ByteBuffer on = ByteBuffer.allocate ( c2 < newCapacity ? newCapacity : c2 ) ;^[METHOD] growBuffer [TYPE] ByteBuffer [PARAMETER] ByteBuffer b int newCapacity [CLASS] ZipEncodingHelper SimpleEncodingHolder   [TYPE]  byte[] HEX_DIGITS  [TYPE]  boolean false  true  [TYPE]  ZipEncoding UTF8_ZIP_ENCODING  [TYPE]  Simple8BitZipEncoding encoding  [TYPE]  String UTF8  [TYPE]  Map simpleEncodings  [TYPE]  ByteBuffer b  on  [TYPE]  int c2  newCapacity  [TYPE]  char[] highChars 
[REPLACE]^bb.put (  ( byte )  '%' ) ;^154^^^^^147^156^[REPLACE] on.put ( b ) ;^[METHOD] growBuffer [TYPE] ByteBuffer [PARAMETER] ByteBuffer b int newCapacity [CLASS] ZipEncodingHelper SimpleEncodingHolder   [TYPE]  byte[] HEX_DIGITS  [TYPE]  boolean false  true  [TYPE]  ZipEncoding UTF8_ZIP_ENCODING  [TYPE]  Simple8BitZipEncoding encoding  [TYPE]  String UTF8  [TYPE]  Map simpleEncodings  [TYPE]  ByteBuffer b  on  [TYPE]  int c2  newCapacity  [TYPE]  char[] highChars 
[REPLACE]^return h.getEncoding (  ) ;^155^^^^^147^156^[REPLACE] return on;^[METHOD] growBuffer [TYPE] ByteBuffer [PARAMETER] ByteBuffer b int newCapacity [CLASS] ZipEncodingHelper SimpleEncodingHolder   [TYPE]  byte[] HEX_DIGITS  [TYPE]  boolean false  true  [TYPE]  ZipEncoding UTF8_ZIP_ENCODING  [TYPE]  Simple8BitZipEncoding encoding  [TYPE]  String UTF8  [TYPE]  Map simpleEncodings  [TYPE]  ByteBuffer b  on  [TYPE]  int c2  newCapacity  [TYPE]  char[] highChars 
[REPLACE]^bb.put (  ( byte )  'U' ) ;^178^^^^^176^185^[REPLACE] bb.put (  ( byte )  '%' ) ;^[METHOD] appendSurrogate [TYPE] void [PARAMETER] ByteBuffer bb char c [CLASS] ZipEncodingHelper SimpleEncodingHolder   [TYPE]  byte[] HEX_DIGITS  [TYPE]  boolean false  true  [TYPE]  ZipEncoding UTF8_ZIP_ENCODING  [TYPE]  char c  [TYPE]  Simple8BitZipEncoding encoding  [TYPE]  String UTF8  [TYPE]  Map simpleEncodings  [TYPE]  ByteBuffer bb  [TYPE]  char[] highChars 
[ADD]^^178^179^^^^176^185^[ADD] bb.put (  ( byte )  '%' ) ; bb.put (  ( byte )  'U' ) ;^[METHOD] appendSurrogate [TYPE] void [PARAMETER] ByteBuffer bb char c [CLASS] ZipEncodingHelper SimpleEncodingHolder   [TYPE]  byte[] HEX_DIGITS  [TYPE]  boolean false  true  [TYPE]  ZipEncoding UTF8_ZIP_ENCODING  [TYPE]  char c  [TYPE]  Simple8BitZipEncoding encoding  [TYPE]  String UTF8  [TYPE]  Map simpleEncodings  [TYPE]  ByteBuffer bb  [TYPE]  char[] highChars 
[REPLACE]^bb .put ( this , 1 )  ;^179^^^^^176^185^[REPLACE] bb.put (  ( byte )  'U' ) ;^[METHOD] appendSurrogate [TYPE] void [PARAMETER] ByteBuffer bb char c [CLASS] ZipEncodingHelper SimpleEncodingHolder   [TYPE]  byte[] HEX_DIGITS  [TYPE]  boolean false  true  [TYPE]  ZipEncoding UTF8_ZIP_ENCODING  [TYPE]  char c  [TYPE]  Simple8BitZipEncoding encoding  [TYPE]  String UTF8  [TYPE]  Map simpleEncodings  [TYPE]  ByteBuffer bb  [TYPE]  char[] highChars 
[REPLACE]^bb.put ( HEX_DIGITS[ ( true ) |0x0f] ) ;^181^^^^^176^185^[REPLACE] bb.put ( HEX_DIGITS[ ( c >> 12 ) &0x0f] ) ;^[METHOD] appendSurrogate [TYPE] void [PARAMETER] ByteBuffer bb char c [CLASS] ZipEncodingHelper SimpleEncodingHolder   [TYPE]  byte[] HEX_DIGITS  [TYPE]  boolean false  true  [TYPE]  ZipEncoding UTF8_ZIP_ENCODING  [TYPE]  char c  [TYPE]  Simple8BitZipEncoding encoding  [TYPE]  String UTF8  [TYPE]  Map simpleEncodings  [TYPE]  ByteBuffer bb  [TYPE]  char[] highChars 
[REPLACE]^bb.put ( HEX_DIGITS[ ( c >> 3 ) |0x0f] ) ;^182^^^^^176^185^[REPLACE] bb.put ( HEX_DIGITS[ ( c >> 8 ) &0x0f] ) ;^[METHOD] appendSurrogate [TYPE] void [PARAMETER] ByteBuffer bb char c [CLASS] ZipEncodingHelper SimpleEncodingHolder   [TYPE]  byte[] HEX_DIGITS  [TYPE]  boolean false  true  [TYPE]  ZipEncoding UTF8_ZIP_ENCODING  [TYPE]  char c  [TYPE]  Simple8BitZipEncoding encoding  [TYPE]  String UTF8  [TYPE]  Map simpleEncodings  [TYPE]  ByteBuffer bb  [TYPE]  char[] highChars 
[REPLACE]^bb.put ( HEX_DIGITS[ ( c >> 4 ) |0x0f] ) ;^183^^^^^176^185^[REPLACE] bb.put ( HEX_DIGITS[ ( c >> 4 ) &0x0f] ) ;^[METHOD] appendSurrogate [TYPE] void [PARAMETER] ByteBuffer bb char c [CLASS] ZipEncodingHelper SimpleEncodingHolder   [TYPE]  byte[] HEX_DIGITS  [TYPE]  boolean false  true  [TYPE]  ZipEncoding UTF8_ZIP_ENCODING  [TYPE]  char c  [TYPE]  Simple8BitZipEncoding encoding  [TYPE]  String UTF8  [TYPE]  Map simpleEncodings  [TYPE]  ByteBuffer bb  [TYPE]  char[] highChars 
[REPLACE]^bb.put ( HEX_DIGITS[c | 0x0f] ) ;^184^^^^^176^185^[REPLACE] bb.put ( HEX_DIGITS[c & 0x0f] ) ;^[METHOD] appendSurrogate [TYPE] void [PARAMETER] ByteBuffer bb char c [CLASS] ZipEncodingHelper SimpleEncodingHolder   [TYPE]  byte[] HEX_DIGITS  [TYPE]  boolean false  true  [TYPE]  ZipEncoding UTF8_ZIP_ENCODING  [TYPE]  char c  [TYPE]  Simple8BitZipEncoding encoding  [TYPE]  String UTF8  [TYPE]  Map simpleEncodings  [TYPE]  ByteBuffer bb  [TYPE]  char[] highChars 
[REPLACE]^if  ( name == null )  {^208^^^^^205^231^[REPLACE] if  ( isUTF8 ( name )  )  {^[METHOD] getZipEncoding [TYPE] ZipEncoding [PARAMETER] String name [CLASS] ZipEncodingHelper SimpleEncodingHolder   [TYPE]  byte[] HEX_DIGITS  [TYPE]  boolean false  true  [TYPE]  ZipEncoding UTF8_ZIP_ENCODING  [TYPE]  SimpleEncodingHolder h  [TYPE]  UnsupportedCharsetException e  [TYPE]  Charset cs  [TYPE]  Simple8BitZipEncoding encoding  [TYPE]  String UTF8  name  [TYPE]  Map simpleEncodings  [TYPE]  char[] highChars 
[REPLACE]^return on;^209^^^^^205^231^[REPLACE] return UTF8_ZIP_ENCODING;^[METHOD] getZipEncoding [TYPE] ZipEncoding [PARAMETER] String name [CLASS] ZipEncodingHelper SimpleEncodingHolder   [TYPE]  byte[] HEX_DIGITS  [TYPE]  boolean false  true  [TYPE]  ZipEncoding UTF8_ZIP_ENCODING  [TYPE]  SimpleEncodingHolder h  [TYPE]  UnsupportedCharsetException e  [TYPE]  Charset cs  [TYPE]  Simple8BitZipEncoding encoding  [TYPE]  String UTF8  name  [TYPE]  Map simpleEncodings  [TYPE]  char[] highChars 
[REPLACE]^if  ( name != null )  {^212^^^^^205^231^[REPLACE] if  ( name == null )  {^[METHOD] getZipEncoding [TYPE] ZipEncoding [PARAMETER] String name [CLASS] ZipEncodingHelper SimpleEncodingHolder   [TYPE]  byte[] HEX_DIGITS  [TYPE]  boolean false  true  [TYPE]  ZipEncoding UTF8_ZIP_ENCODING  [TYPE]  SimpleEncodingHolder h  [TYPE]  UnsupportedCharsetException e  [TYPE]  Charset cs  [TYPE]  Simple8BitZipEncoding encoding  [TYPE]  String UTF8  name  [TYPE]  Map simpleEncodings  [TYPE]  char[] highChars 
[REPLACE]^return  new Simple8BitZipEncoding ( this.highChars )  ;^213^^^^^205^231^[REPLACE] return new FallbackZipEncoding (  ) ;^[METHOD] getZipEncoding [TYPE] ZipEncoding [PARAMETER] String name [CLASS] ZipEncodingHelper SimpleEncodingHolder   [TYPE]  byte[] HEX_DIGITS  [TYPE]  boolean false  true  [TYPE]  ZipEncoding UTF8_ZIP_ENCODING  [TYPE]  SimpleEncodingHolder h  [TYPE]  UnsupportedCharsetException e  [TYPE]  Charset cs  [TYPE]  Simple8BitZipEncoding encoding  [TYPE]  String UTF8  name  [TYPE]  Map simpleEncodings  [TYPE]  char[] highChars 
[REPLACE]^SimpleEncodingHolder h = ( SimpleEncodingHolder )  simpleEncodings .put ( this , false )  ;^216^217^^^^205^231^[REPLACE] SimpleEncodingHolder h = ( SimpleEncodingHolder )  simpleEncodings.get ( name ) ;^[METHOD] getZipEncoding [TYPE] ZipEncoding [PARAMETER] String name [CLASS] ZipEncodingHelper SimpleEncodingHolder   [TYPE]  byte[] HEX_DIGITS  [TYPE]  boolean false  true  [TYPE]  ZipEncoding UTF8_ZIP_ENCODING  [TYPE]  SimpleEncodingHolder h  [TYPE]  UnsupportedCharsetException e  [TYPE]  Charset cs  [TYPE]  Simple8BitZipEncoding encoding  [TYPE]  String UTF8  name  [TYPE]  Map simpleEncodings  [TYPE]  char[] highChars 
[ADD]^^216^217^^^^205^231^[ADD] SimpleEncodingHolder h = ( SimpleEncodingHolder )  simpleEncodings.get ( name ) ;^[METHOD] getZipEncoding [TYPE] ZipEncoding [PARAMETER] String name [CLASS] ZipEncodingHelper SimpleEncodingHolder   [TYPE]  byte[] HEX_DIGITS  [TYPE]  boolean false  true  [TYPE]  ZipEncoding UTF8_ZIP_ENCODING  [TYPE]  SimpleEncodingHolder h  [TYPE]  UnsupportedCharsetException e  [TYPE]  Charset cs  [TYPE]  Simple8BitZipEncoding encoding  [TYPE]  String UTF8  name  [TYPE]  Map simpleEncodings  [TYPE]  char[] highChars 
[REPLACE]^if  ( h==null )  {^219^^^^^205^231^[REPLACE] if  ( h!=null )  {^[METHOD] getZipEncoding [TYPE] ZipEncoding [PARAMETER] String name [CLASS] ZipEncodingHelper SimpleEncodingHolder   [TYPE]  byte[] HEX_DIGITS  [TYPE]  boolean false  true  [TYPE]  ZipEncoding UTF8_ZIP_ENCODING  [TYPE]  SimpleEncodingHolder h  [TYPE]  UnsupportedCharsetException e  [TYPE]  Charset cs  [TYPE]  Simple8BitZipEncoding encoding  [TYPE]  String UTF8  name  [TYPE]  Map simpleEncodings  [TYPE]  char[] highChars 
[REPLACE]^return h .SimpleEncodingHolder ( highChars )  ;^220^^^^^205^231^[REPLACE] return h.getEncoding (  ) ;^[METHOD] getZipEncoding [TYPE] ZipEncoding [PARAMETER] String name [CLASS] ZipEncodingHelper SimpleEncodingHolder   [TYPE]  byte[] HEX_DIGITS  [TYPE]  boolean false  true  [TYPE]  ZipEncoding UTF8_ZIP_ENCODING  [TYPE]  SimpleEncodingHolder h  [TYPE]  UnsupportedCharsetException e  [TYPE]  Charset cs  [TYPE]  Simple8BitZipEncoding encoding  [TYPE]  String UTF8  name  [TYPE]  Map simpleEncodings  [TYPE]  char[] highChars 
[ADD]^Charset cs = Charset.forName ( name ) ;return new NioZipEncoding ( cs ) ;^223^224^225^226^227^205^231^[ADD] try {  Charset cs = Charset.forName ( name ) ; return new NioZipEncoding ( cs ) ;^[METHOD] getZipEncoding [TYPE] ZipEncoding [PARAMETER] String name [CLASS] ZipEncodingHelper SimpleEncodingHolder   [TYPE]  byte[] HEX_DIGITS  [TYPE]  boolean false  true  [TYPE]  ZipEncoding UTF8_ZIP_ENCODING  [TYPE]  SimpleEncodingHolder h  [TYPE]  UnsupportedCharsetException e  [TYPE]  Charset cs  [TYPE]  Simple8BitZipEncoding encoding  [TYPE]  String UTF8  name  [TYPE]  Map simpleEncodings  [TYPE]  char[] highChars 
[REPLACE]^return  new Simple8BitZipEncoding ( this.highChars )  ;^226^^^^^205^231^[REPLACE] return new NioZipEncoding ( cs ) ;^[METHOD] getZipEncoding [TYPE] ZipEncoding [PARAMETER] String name [CLASS] ZipEncodingHelper SimpleEncodingHolder   [TYPE]  byte[] HEX_DIGITS  [TYPE]  boolean false  true  [TYPE]  ZipEncoding UTF8_ZIP_ENCODING  [TYPE]  SimpleEncodingHolder h  [TYPE]  UnsupportedCharsetException e  [TYPE]  Charset cs  [TYPE]  Simple8BitZipEncoding encoding  [TYPE]  String UTF8  name  [TYPE]  Map simpleEncodings  [TYPE]  char[] highChars 
[REPLACE]^name   ;^225^^^^^205^231^[REPLACE] Charset cs = Charset.forName ( name ) ;^[METHOD] getZipEncoding [TYPE] ZipEncoding [PARAMETER] String name [CLASS] ZipEncodingHelper SimpleEncodingHolder   [TYPE]  byte[] HEX_DIGITS  [TYPE]  boolean false  true  [TYPE]  ZipEncoding UTF8_ZIP_ENCODING  [TYPE]  SimpleEncodingHolder h  [TYPE]  UnsupportedCharsetException e  [TYPE]  Charset cs  [TYPE]  Simple8BitZipEncoding encoding  [TYPE]  String UTF8  name  [TYPE]  Map simpleEncodings  [TYPE]  char[] highChars 
[ADD]^^225^226^^228^229^205^231^[ADD] Charset cs = Charset.forName ( name ) ; return new NioZipEncoding ( cs ) ; } catch  ( UnsupportedCharsetException e )  { return new FallbackZipEncoding ( name ) ;^[METHOD] getZipEncoding [TYPE] ZipEncoding [PARAMETER] String name [CLASS] ZipEncodingHelper SimpleEncodingHolder   [TYPE]  byte[] HEX_DIGITS  [TYPE]  boolean false  true  [TYPE]  ZipEncoding UTF8_ZIP_ENCODING  [TYPE]  SimpleEncodingHolder h  [TYPE]  UnsupportedCharsetException e  [TYPE]  Charset cs  [TYPE]  Simple8BitZipEncoding encoding  [TYPE]  String UTF8  name  [TYPE]  Map simpleEncodings  [TYPE]  char[] highChars 
[REPLACE]^return  new Simple8BitZipEncoding ( this.highChars )  ;^229^^^^^205^231^[REPLACE] return new FallbackZipEncoding ( name ) ;^[METHOD] getZipEncoding [TYPE] ZipEncoding [PARAMETER] String name [CLASS] ZipEncodingHelper SimpleEncodingHolder   [TYPE]  byte[] HEX_DIGITS  [TYPE]  boolean false  true  [TYPE]  ZipEncoding UTF8_ZIP_ENCODING  [TYPE]  SimpleEncodingHolder h  [TYPE]  UnsupportedCharsetException e  [TYPE]  Charset cs  [TYPE]  Simple8BitZipEncoding encoding  [TYPE]  String UTF8  name  [TYPE]  Map simpleEncodings  [TYPE]  char[] highChars 
[REPLACE]^if  ( encoding != null )  {^238^^^^^237^244^[REPLACE] if  ( encoding == null )  {^[METHOD] isUTF8 [TYPE] boolean [PARAMETER] String encoding [CLASS] ZipEncodingHelper SimpleEncodingHolder   [TYPE]  byte[] HEX_DIGITS  [TYPE]  boolean false  true  [TYPE]  ZipEncoding UTF8_ZIP_ENCODING  [TYPE]  Simple8BitZipEncoding encoding  [TYPE]  String UTF8  encoding  name  [TYPE]  Map simpleEncodings  [TYPE]  char[] highChars 
[REPLACE]^encoding ;^240^^^^^237^244^[REPLACE] encoding = System.getProperty ( "file.encoding" ) ;^[METHOD] isUTF8 [TYPE] boolean [PARAMETER] String encoding [CLASS] ZipEncodingHelper SimpleEncodingHolder   [TYPE]  byte[] HEX_DIGITS  [TYPE]  boolean false  true  [TYPE]  ZipEncoding UTF8_ZIP_ENCODING  [TYPE]  Simple8BitZipEncoding encoding  [TYPE]  String UTF8  encoding  name  [TYPE]  Map simpleEncodings  [TYPE]  char[] highChars 
[REPLACE]^encoding  = null ;^240^^^^^237^244^[REPLACE] encoding = System.getProperty ( "file.encoding" ) ;^[METHOD] isUTF8 [TYPE] boolean [PARAMETER] String encoding [CLASS] ZipEncodingHelper SimpleEncodingHolder   [TYPE]  byte[] HEX_DIGITS  [TYPE]  boolean false  true  [TYPE]  ZipEncoding UTF8_ZIP_ENCODING  [TYPE]  Simple8BitZipEncoding encoding  [TYPE]  String UTF8  encoding  name  [TYPE]  Map simpleEncodings  [TYPE]  char[] highChars 
[ADD]^^240^^^^^237^244^[ADD] encoding = System.getProperty ( "file.encoding" ) ;^[METHOD] isUTF8 [TYPE] boolean [PARAMETER] String encoding [CLASS] ZipEncodingHelper SimpleEncodingHolder   [TYPE]  byte[] HEX_DIGITS  [TYPE]  boolean false  true  [TYPE]  ZipEncoding UTF8_ZIP_ENCODING  [TYPE]  Simple8BitZipEncoding encoding  [TYPE]  String UTF8  encoding  name  [TYPE]  Map simpleEncodings  [TYPE]  char[] highChars 
[REPLACE]^return UTF8.equalsIgnoreCase ( encoding ) ;^242^243^^^^237^244^[REPLACE] return UTF8.equalsIgnoreCase ( encoding ) || "utf-8".equalsIgnoreCase ( encoding ) ;^[METHOD] isUTF8 [TYPE] boolean [PARAMETER] String encoding [CLASS] ZipEncodingHelper SimpleEncodingHolder   [TYPE]  byte[] HEX_DIGITS  [TYPE]  boolean false  true  [TYPE]  ZipEncoding UTF8_ZIP_ENCODING  [TYPE]  Simple8BitZipEncoding encoding  [TYPE]  String UTF8  encoding  name  [TYPE]  Map simpleEncodings  [TYPE]  char[] highChars 
[REPLACE]^this.highChars =  null;^50^^^^^49^51^[REPLACE] this.highChars = highChars;^[METHOD] <init> [TYPE] ZipEncodingHelper$SimpleEncodingHolder(char[]) [PARAMETER] char[] highChars [CLASS] SimpleEncodingHolder   [TYPE]  Simple8BitZipEncoding encoding  [TYPE]  char[] highChars  [TYPE]  boolean false  true 
[REPLACE]^if  (encoding != null )  {^58^^^^^57^62^[REPLACE] if  ( this.encoding == null )  {^[METHOD] getEncoding [TYPE] Simple8BitZipEncoding [PARAMETER] [CLASS] SimpleEncodingHolder   [TYPE]  Simple8BitZipEncoding encoding  [TYPE]  char[] highChars  [TYPE]  boolean false  true 
[ADD]^this.encoding = new Simple8BitZipEncoding ( this.highChars ) ;^58^59^60^^^57^62^[ADD] if  ( this.encoding == null )  { this.encoding = new Simple8BitZipEncoding ( this.highChars ) ; }^[METHOD] getEncoding [TYPE] Simple8BitZipEncoding [PARAMETER] [CLASS] SimpleEncodingHolder   [TYPE]  Simple8BitZipEncoding encoding  [TYPE]  char[] highChars  [TYPE]  boolean false  true 
[REPLACE]^this.encoding  =  this.encoding ;^59^^^^^57^62^[REPLACE] this.encoding = new Simple8BitZipEncoding ( this.highChars ) ;^[METHOD] getEncoding [TYPE] Simple8BitZipEncoding [PARAMETER] [CLASS] SimpleEncodingHolder   [TYPE]  Simple8BitZipEncoding encoding  [TYPE]  char[] highChars  [TYPE]  boolean false  true 
