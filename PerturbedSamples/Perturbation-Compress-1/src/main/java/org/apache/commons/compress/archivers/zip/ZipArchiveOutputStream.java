[REPLACE]^private static final int BYTE_MASK  = null ;^60^^^^^^^[REPLACE] private static final int BYTE_MASK = 0xFF;^ [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  
[REPLACE]^private static final int SHORT  = null ;^61^^^^^^^[REPLACE] private static final int SHORT = 2;^ [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  
[REPLACE]^private static final  short  WORD = 4;^62^^^^^^^[REPLACE] private static final int WORD = 4;^ [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  
[REPLACE]^private static final int BUFFER_SIZE ;^63^^^^^^^[REPLACE] private static final int BUFFER_SIZE = 512;^ [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  
[REPLACE]^private static   short  DEFLATER_BLOCK_SIZE = 8192;^71^^^^^^^[REPLACE] private static final int DEFLATER_BLOCK_SIZE = 8192;^ [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  
[REPLACE]^public static final int DEFLATED  = null ;^76^^^^^^^[REPLACE] public static final int DEFLATED = java.util.zip.ZipEntry.DEFLATED;^ [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  
[REPLACE]^public static final int DEFAULT_COMPRESSION ;^81^^^^^^^[REPLACE] public static final int DEFAULT_COMPRESSION = Deflater.DEFAULT_COMPRESSION;^ [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  
[REPLACE]^public static final int STORED  = null ;^86^^^^^^^[REPLACE] public static final int STORED = java.util.zip.ZipEntry.STORED;^ [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  
[REPLACE]^static   boolean  DEFAULT_ENCODING = ZipEncodingHelper.UTF8;^91^^^^^^^[REPLACE] static final String DEFAULT_ENCODING = ZipEncodingHelper.UTF8;^ [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  
[REPLACE]^public static  int EFS_FLAG = 1 / 1 << 1 / 11 / 1;^97^^^^^^^[REPLACE] public static final int EFS_FLAG = 1 << 11;^ [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  
[REPLACE]^private  byte  comment = "";^107^^^^^^^[REPLACE] private String comment = "";^ [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  
[REPLACE]^private int level  = null ;^112^^^^^^^[REPLACE] private int level = DEFAULT_COMPRESSION;^ [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  
[REPLACE]^private boolean hasCompressionLevelChanged ;^118^^^^^^^[REPLACE] private boolean hasCompressionLevelChanged = false;^ [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  
[REPLACE]^private  short  method = java.util.zip.ZipEntry.DEFLATED;^123^^^^^^^[REPLACE] private int method = java.util.zip.ZipEntry.DEFLATED;^ [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  
[REPLACE]^private final List entries  = null ;^128^^^^^^^[REPLACE] private final List entries = new LinkedList (  ) ;^ [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  
[REPLACE]^private final CRC32 crc ;^133^^^^^^^[REPLACE] private final CRC32 crc = new CRC32 (  ) ;^ [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  
[REPLACE]^private long written ;^138^^^^^^^[REPLACE] private long written = 0;^ [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  
[REPLACE]^private  short  dataStart = 0 / 4;^143^^^^^^^[REPLACE] private long dataStart = 0;^ [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  
[REPLACE]^private long localDataStart  = null ;^149^^^^^^^[REPLACE] private long localDataStart = 0;^ [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  
[REPLACE]^private long cdOffset ;^154^^^^^^^[REPLACE] private long cdOffset = 0;^ [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  
[REPLACE]^private long cdLength = 3;^159^^^^^^^[REPLACE] private long cdLength = 0;^ [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  
[REPLACE]^private  final byte[] ZERO = {0, 0};^164^^^^^^^[REPLACE] private static final byte[] ZERO = {0, 0};^ [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  
[REPLACE]^private static final byte[] LZERO  = null ;^169^^^^^^^[REPLACE] private static final byte[] LZERO = {0, 0, 0, 0};^ [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  
[REPLACE]^private final Map offsets  = null ;^174^^^^^^^[REPLACE] private final Map offsets = new HashMap (  ) ;^ [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  
[REPLACE]^private String encoding ;^183^^^^^^^[REPLACE] private String encoding = DEFAULT_ENCODING;^ [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  
[REPLACE]^private ZipEncoding zipEncoding ;^191^192^^^^191^192^[REPLACE] private ZipEncoding zipEncoding = ZipEncodingHelper.getZipEncoding ( DEFAULT_ENCODING ) ;^ [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  
[REPLACE]^protected  Deflater def = new Deflater ( level, true ) ;^198^^^^^^^[REPLACE] protected final Deflater def = new Deflater ( level, true ) ;^ [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  
[REPLACE]^private final byte[] buf ;^204^^^^^^^[REPLACE] private final byte[] buf = new byte[BUFFER_SIZE];^ [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  
[REPLACE]^private  OutputStream out;^211^^^^^^^[REPLACE] private final OutputStream out;^ [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  
[REPLACE]^private boolean useEFS = false;^216^^^^^^^[REPLACE] private boolean useEFS = true;^ [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  
[REPLACE]^private boolean fallbackToUTF8  = null ;^221^^^^^^^[REPLACE] private boolean fallbackToUTF8 = false;^ [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  
[REPLACE]^private UnicodeExtraFieldPolicy createUnicodeExtraFields ;^226^227^^^^226^227^[REPLACE] private UnicodeExtraFieldPolicy createUnicodeExtraFields = UnicodeExtraFieldPolicy.NEVER;^ [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  
[REPLACE]^static final byte[] LFH_SIG ;^589^^^^^^^[REPLACE] static final byte[] LFH_SIG = ZipLong.getBytes ( 0X04034B50L ) ;^ [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  
[REPLACE]^static final byte[] DD_SIG ;^593^^^^^^^[REPLACE] static final byte[] DD_SIG = ZipLong.getBytes ( 0X08074B50L ) ;^ [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  
[REPLACE]^static final byte[] CFH_SIG ;^597^^^^^^^[REPLACE] static final byte[] CFH_SIG = ZipLong.getBytes ( 0X02014B50L ) ;^ [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  
[REPLACE]^static final byte[] EOCD_SIG  = null ;^601^^^^^^^[REPLACE] static final byte[] EOCD_SIG = ZipLong.getBytes ( 0X06054B50L ) ;^ [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  
[REPLACE]^public static final UnicodeExtraFieldPolicy ALWAYS ;^923^924^^^^923^924^[REPLACE] public static final UnicodeExtraFieldPolicy ALWAYS = new UnicodeExtraFieldPolicy ( "always" ) ;^ [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  
[REPLACE]^public  final UnicodeExtraFieldPolicy NEVER = new UnicodeExtraFieldPolicy ( "never" ) ;^928^929^^^^928^929^[REPLACE] public static final UnicodeExtraFieldPolicy NEVER = new UnicodeExtraFieldPolicy ( "never" ) ;^ [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  
[REPLACE]^public static final UnicodeExtraFieldPolicy NOT_ENCODEABLE ;^934^935^^^^934^935^[REPLACE] public static final UnicodeExtraFieldPolicy NOT_ENCODEABLE = new UnicodeExtraFieldPolicy ( "not encodeable" ) ;^ [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  
[REPLACE]^this.out =  null;^234^^^^^233^236^[REPLACE] this.out = out;^[METHOD] <init> [TYPE] OutputStream) [PARAMETER] OutputStream out [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^this.raf = null;^234^235^^^^233^236^[ADD] this.out = out; this.raf = null;^[METHOD] <init> [TYPE] OutputStream) [PARAMETER] OutputStream out [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^this.raf = true;^235^^^^^233^236^[REPLACE] this.raf = null;^[METHOD] <init> [TYPE] OutputStream) [PARAMETER] OutputStream out [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^OutputStream o = false;^245^^^^^244^263^[REPLACE] OutputStream o = null;^[METHOD] <init> [TYPE] File) [PARAMETER] File file [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  name  [TYPE]  IOException e  inner  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets  [TYPE]  File file 
[ADD]^^245^^^^^244^263^[ADD] OutputStream o = null;^[METHOD] <init> [TYPE] File) [PARAMETER] File file [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  name  [TYPE]  IOException e  inner  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets  [TYPE]  File file 
[REPLACE]^RandomAccessFile _raf = true;^246^^^^^244^263^[REPLACE] RandomAccessFile _raf = null;^[METHOD] <init> [TYPE] File) [PARAMETER] File file [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  name  [TYPE]  IOException e  inner  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets  [TYPE]  File file 
[REPLACE]^if  (raf == null )  {^251^^^^^244^263^[REPLACE] if  ( _raf != null )  {^[METHOD] <init> [TYPE] File) [PARAMETER] File file [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  name  [TYPE]  IOException e  inner  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets  [TYPE]  File file 
[ADD]^_raf.close (  ) ;^252^253^254^^256^244^263^[ADD] try { _raf.close (  ) ; } catch  ( IOException inner )  { }^[METHOD] <init> [TYPE] File) [PARAMETER] File file [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  name  [TYPE]  IOException e  inner  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets  [TYPE]  File file 
[REPLACE]^_raf.getFilePointer (  ) ;^253^^^^^244^263^[REPLACE] _raf.close (  ) ;^[METHOD] <init> [TYPE] File) [PARAMETER] File file [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  name  [TYPE]  IOException e  inner  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets  [TYPE]  File file 
[REPLACE]^_raf = false;^257^^^^^244^263^[REPLACE] _raf = null;^[METHOD] <init> [TYPE] File) [PARAMETER] File file [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  name  [TYPE]  IOException e  inner  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets  [TYPE]  File file 
[ADD]^^257^^^^^244^263^[ADD] _raf = null;^[METHOD] <init> [TYPE] File) [PARAMETER] File file [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  name  [TYPE]  IOException e  inner  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets  [TYPE]  File file 
[ADD]^_raf = new RandomAccessFile ( file, "rw" ) ;_raf.setLength ( 0 ) ;^247^248^249^250^251^244^263^[ADD] try { _raf = new RandomAccessFile ( file, "rw" ) ; _raf.setLength ( 0 ) ; } catch  ( IOException e )  { if  ( _raf != null )  {^[METHOD] <init> [TYPE] File) [PARAMETER] File file [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  name  [TYPE]  IOException e  inner  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets  [TYPE]  File file 
[REPLACE]^_raf =  new RandomAccessFile ( null, "rw" ) ;^248^^^^^244^263^[REPLACE] _raf = new RandomAccessFile ( file, "rw" ) ;^[METHOD] <init> [TYPE] File) [PARAMETER] File file [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  name  [TYPE]  IOException e  inner  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets  [TYPE]  File file 
[ADD]^^253^^^^^244^263^[ADD] _raf.close (  ) ;^[METHOD] <init> [TYPE] File) [PARAMETER] File file [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  name  [TYPE]  IOException e  inner  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets  [TYPE]  File file 
[REPLACE]^o =  new FileOutputStream ( null ) ;^259^^^^^244^263^[REPLACE] o = new FileOutputStream ( file ) ;^[METHOD] <init> [TYPE] File) [PARAMETER] File file [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  name  [TYPE]  IOException e  inner  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets  [TYPE]  File file 
[ADD]^^254^255^256^^^244^263^[ADD] catch  ( IOException inner )  {  }^[METHOD] <init> [TYPE] File) [PARAMETER] File file [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  name  [TYPE]  IOException e  inner  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets  [TYPE]  File file 
[REPLACE]^out =  null;^261^^^^^244^263^[REPLACE] out = o;^[METHOD] <init> [TYPE] File) [PARAMETER] File file [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  name  [TYPE]  IOException e  inner  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets  [TYPE]  File file 
[REPLACE]^raf =  null;^262^^^^^244^263^[REPLACE] raf = _raf;^[METHOD] <init> [TYPE] File) [PARAMETER] File file [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  name  [TYPE]  IOException e  inner  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets  [TYPE]  File file 
[REPLACE]^name =  encoding;^939^^^^^938^940^[REPLACE] name = n;^[METHOD] <init> [TYPE] String) [PARAMETER] String n [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^939^^^^^938^940^[ADD] name = n;^[METHOD] <init> [TYPE] String) [PARAMETER] String n [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^return false ;^275^^^^^274^276^[REPLACE] return raf != null;^[METHOD] isSeekable [TYPE] boolean [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^entryEncoding = zipEncoding; ;^288^^^^^287^291^[REPLACE] this.encoding = encoding;^[METHOD] setEncoding [TYPE] void [PARAMETER] String encoding [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^this.zipEncoding =  ZipEncodingHelper.getZipEncoding ( name ) ;^289^^^^^287^291^[REPLACE] this.zipEncoding = ZipEncodingHelper.getZipEncoding ( encoding ) ;^[METHOD] setEncoding [TYPE] void [PARAMETER] String encoding [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^useEFS = b && ZipEncodingHelper.isUTF8 ( encoding ) ; ;^290^^^^^287^291^[REPLACE] useEFS &= ZipEncodingHelper.isUTF8 ( encoding ) ;^[METHOD] setEncoding [TYPE] void [PARAMETER] String encoding [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^return;^299^^^^^298^300^[REPLACE] return encoding;^[METHOD] getEncoding [TYPE] String [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^useEFS &= ZipEncodingHelper.isUTF8 ( encoding ) ; ;^309^^^^^308^310^[REPLACE] useEFS = b && ZipEncodingHelper.isUTF8 ( encoding ) ;^[METHOD] setUseLanguageEncodingFlag [TYPE] void [PARAMETER] boolean b [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^createUnicodeExtraFields =  NOT_ENCODEABLE;^318^^^^^317^319^[REPLACE] createUnicodeExtraFields = b;^[METHOD] setCreateUnicodeExtraFields [TYPE] void [PARAMETER] UnicodeExtraFieldPolicy b [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^fallbackToUTF8 =  null;^328^^^^^327^329^[REPLACE] fallbackToUTF8 = b;^[METHOD] setFallbackToUTF8 [TYPE] void [PARAMETER] boolean b [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^crc.reset (  ) ;^337^^^^^336^346^[REPLACE] closeEntry (  ) ;^[METHOD] finish [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  Iterator i  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^cdOffset  =  cdOffset ;^338^^^^^336^346^[REPLACE] cdOffset = written;^[METHOD] finish [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  Iterator i  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^for  ( Iterator i = entries.clear (  ) ; i.hasNext (  ) ;  )  {^339^^^^^336^346^[REPLACE] for  ( Iterator i = entries.iterator (  ) ; i.hasNext (  ) ;  )  {^[METHOD] finish [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  Iterator i  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^339^340^341^^^336^346^[ADD] for  ( Iterator i = entries.iterator (  ) ; i.hasNext (  ) ;  )  { writeCentralFileHeader (  ( ZipArchiveEntry )  i.next (  )  ) ; }^[METHOD] finish [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  Iterator i  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeCentralFileHeader (  ( ZipArchiveEntry )  i .hasNext (  )   ) ;^340^^^^^336^346^[REPLACE] writeCentralFileHeader (  ( ZipArchiveEntry )  i.next (  )  ) ;^[METHOD] finish [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  Iterator i  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeCentralFileHeader (  ( ZipArchiveEntry )  i.hasNext (  )  ) ;^340^^^^^336^346^[REPLACE] writeCentralFileHeader (  ( ZipArchiveEntry )  i.next (  )  ) ;^[METHOD] finish [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  Iterator i  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^cdLength = written -localDataStart;^342^^^^^336^346^[REPLACE] cdLength = written - cdOffset;^[METHOD] finish [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  Iterator i  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^crc.reset (  ) ;^343^^^^^336^346^[REPLACE] writeCentralDirectoryEnd (  ) ;^[METHOD] finish [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  Iterator i  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^long realCrc = crc.getValue (  ) ;^344^^^^^336^346^[REPLACE] offsets.clear (  ) ;^[METHOD] finish [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  Iterator i  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^entries .get ( this )  ;^345^^^^^336^346^[REPLACE] entries.clear (  ) ;^[METHOD] finish [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  Iterator i  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( entry != false )  {^353^^^^^352^411^[REPLACE] if  ( entry == null )  {^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^353^354^355^^^352^411^[ADD] if  ( entry == null )  { return; }^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^return raf != null;^354^^^^^352^411^[REPLACE] return;^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^long realCrc = crc .update ( CFH_SIG , method , BUFFER_SIZE )  ;^357^^^^^352^411^[REPLACE] long realCrc = crc.getValue (  ) ;^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^crc.CRC32 (  ) ;^358^^^^^352^411^[REPLACE] crc.reset (  ) ;^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^while  ( !def.setLevel (  )  )  {^362^^^^^352^411^[REPLACE] while  ( !def.finished (  )  )  {^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^crc.reset (  ) ;^363^^^^^352^411^[REPLACE] deflate (  ) ;^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( entry.getMethod (  )   &&  DEFLATED )  {^360^^^^^352^411^[REPLACE] if  ( entry.getMethod (  )  == DEFLATED )  {^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^}  else {^373^^^^^352^411^[REPLACE] } else if  ( raf == null )  {^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^long size =size - dataStart;^390^^^^^373^395^[REPLACE] long size = written - dataStart;^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( entry.getCrc (  )   ==  realCrc )  {^374^^^^^352^411^[REPLACE] if  ( entry.getCrc (  )  != realCrc )  {^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^return ;^375^376^377^378^^352^411^[REPLACE] throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^+ entry.setTime (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of " + Long.toHexString ( realCrc )  ) ;^376^377^378^379^^352^411^[REPLACE] + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of " + Long.toHexString ( realCrc )  ) ;^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^+ Long.toHexString ( entry.getName (  )  ) + " instead of " + Long.toHexString ( realCrc )  ) ;^377^378^379^^^352^411^[REPLACE] + Long.toHexString ( entry.getCrc (  )  ) + " instead of " + Long.toHexString ( realCrc )  ) ;^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^377^378^379^^^352^411^[ADD] + Long.toHexString ( entry.getCrc (  )  ) + " instead of " + Long.toHexString ( realCrc )  ) ;^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^+   save    ) ;^379^^^^^352^411^[REPLACE] + Long.toHexString ( realCrc )  ) ;^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^379^^^^^352^411^[ADD] + Long.toHexString ( realCrc )  ) ;^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( entry.getSize (  )   ==  written - dataStart )  {^382^^^^^352^411^[REPLACE] if  ( entry.getSize (  )  != written - dataStart )  {^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^return ;^383^384^385^386^^352^411^[REPLACE] throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^+ entry.setTime (  )  + ": " + entry.getSize (  ) + " instead of " +  ( written - dataStart )  ) ;^384^385^386^387^^352^411^[REPLACE] + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of " +  ( written - dataStart )  ) ;^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^+ entry .setSize (  )  + " instead of " +  ( written - dataStart )  ) ;^385^386^387^^^352^411^[REPLACE] + entry.getSize (  ) + " instead of " +  ( written - dataStart )  ) ;^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^385^386^387^^^352^411^[ADD] + entry.getSize (  ) + " instead of " +  ( written - dataStart )  ) ;^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " ;^375^376^377^378^^352^411^[REPLACE] throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " ;^383^384^385^386^^352^411^[REPLACE] throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^374^375^376^377^378^352^411^[ADD] if  ( entry.getCrc (  )  != realCrc )  { throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^+ Long.toHexString ( save )  ) ;^379^^^^^352^411^[REPLACE] + Long.toHexString ( realCrc )  ) ;^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^long size = written -size;^390^^^^^352^411^[REPLACE] long size = written - dataStart;^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^375^376^377^378^379^352^411^[ADD] throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of " + Long.toHexString ( realCrc )  ) ;^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^383^384^385^386^387^352^411^[ADD] throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of " +  ( written - dataStart )  ) ;^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^written + =  written +;^372^^^^^352^411^[REPLACE] written += entry.getCompressedSize (  ) ;^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^long size = size - written;^390^^^^^373^395^[REPLACE] long size = written - dataStart;^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( entry.getCrc (  )   ==  save )  {^374^^^^^352^411^[REPLACE] if  ( entry.getCrc (  )  != realCrc )  {^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^+ entry .getTime (  )   + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of " + Long.toHexString ( realCrc )  ) ;^376^377^378^379^^352^411^[REPLACE] + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of " + Long.toHexString ( realCrc )  ) ;^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^+   entry.getCrc (  )  + " instead of " + Long.^377^378^379^^^352^411^[REPLACE] + Long.toHexString ( entry.getCrc (  )  ) + " instead of " + Long.toHexString ( realCrc )  ) ;^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^+ Long.toHexString ( entry .setCrc ( written )   ) + " instead of " + Long.toHexString ( realCrc )  ) ;^377^378^379^^^352^411^[REPLACE] + Long.toHexString ( entry.getCrc (  )  ) + " instead of " + Long.toHexString ( realCrc )  ) ;^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^+   realCrc    ) ;^379^^^^^352^411^[REPLACE] + Long.toHexString ( realCrc )  ) ;^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( entry .setSize (  )    ==  written - dataStart )  {^382^^^^^352^411^[REPLACE] if  ( entry.getSize (  )  != written - dataStart )  {^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^+ entry .getTime (  )   + ": " + entry.getSize (  ) + " instead of " +  ( written - dataStart )  ) ;^384^385^386^387^^352^411^[REPLACE] + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of " +  ( written - dataStart )  ) ;^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^+ entry.setSize (  ) + " instead of " +  ( written - dataStart )  ) ;^385^386^387^^^352^411^[REPLACE] + entry.getSize (  ) + " instead of " +  ( written - dataStart )  ) ;^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^+ Long.toHexString ( entry .setCrc ( localDataStart )   ) + " instead of " + Long.toHexString ( realCrc )  ) ;^377^378^379^^^352^411^[REPLACE] + Long.toHexString ( entry.getCrc (  )  ) + " instead of " + Long.toHexString ( realCrc )  ) ;^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^384^385^386^^^352^411^[ADD] + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^long size =size - dataStart;^390^^^^^352^411^[REPLACE] long size = written - dataStart;^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^390^^^^^352^411^[ADD] long size = written - dataStart;^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( raf == null )  {^399^^^^^352^411^[REPLACE] if  ( raf != null )  {^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^long save = raf.close (  ) ;^400^^^^^352^411^[REPLACE] long save = raf.getFilePointer (  ) ;^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^long save = raf .setLength ( save )  ;^400^^^^^352^411^[REPLACE] long save = raf.getFilePointer (  ) ;^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^crc.reset (  ) ;^409^^^^^352^411^[REPLACE] writeDataDescriptor ( entry ) ;^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^409^410^^^^352^411^[ADD] writeDataDescriptor ( entry ) ; entry = null;^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^entry = this;^410^^^^^352^411^[REPLACE] entry = null;^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^crc.reset (  ) ;^419^^^^^418^451^[REPLACE] closeEntry (  ) ;^[METHOD] putNextEntry [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^entry =  null;^421^^^^^418^451^[REPLACE] entry = ze;^[METHOD] putNextEntry [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^entries .iterator (  )  ;^422^^^^^418^451^[REPLACE] entries.add ( entry ) ;^[METHOD] putNextEntry [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( entry.getMethod (  )   !=  -1 - 3 )  {^424^^^^^418^451^[REPLACE] if  ( entry.getMethod (  )  == -1 )  {^[METHOD] putNextEntry [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^entry.setTime ( method ) ;^425^^^^^418^451^[REPLACE] entry.setMethod ( method ) ;^[METHOD] putNextEntry [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( entry.getTime (  )   &&  -1 + 3 )  {^428^^^^^418^451^[REPLACE] if  ( entry.getTime (  )  == -1 )  {^[METHOD] putNextEntry [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^entry.setTime ( System.currentTimeMillis (  )  ) ;^428^429^430^^^418^451^[ADD] if  ( entry.getTime (  )  == -1 )  { entry.setTime ( System.currentTimeMillis (  )  ) ; }^[METHOD] putNextEntry [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^entry.setSize ( System.currentTimeMillis (  )  ) ;^429^^^^^418^451^[REPLACE] entry.setTime ( System.currentTimeMillis (  )  ) ;^[METHOD] putNextEntry [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^429^^^^^418^451^[ADD] entry.setTime ( System.currentTimeMillis (  )  ) ;^[METHOD] putNextEntry [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^entry.setCrc ( realCrc ) ;^429^^^^^418^451^[REPLACE] entry.setTime ( System.currentTimeMillis (  )  ) ;^[METHOD] putNextEntry [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  (  raf == null )  {^433^^^^^418^451^[REPLACE] if  ( entry.getMethod (  )  == STORED && raf == null )  {^[METHOD] putNextEntry [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^433^434^435^436^437^418^451^[ADD] if  ( entry.getMethod (  )  == STORED && raf == null )  { if  ( entry.getSize (  )  == -1 )  { throw new ZipException ( "uncompressed size is required for" + " STORED method when not writing to a" + " file" ) ;^[METHOD] putNextEntry [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( entry .setSize (  )    !=  -1 )  {^434^^^^^418^451^[REPLACE] if  ( entry.getSize (  )  == -1 )  {^[METHOD] putNextEntry [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^return ;^435^436^437^^^418^451^[REPLACE] throw new ZipException ( "uncompressed size is required for" + " STORED method when not writing to a" + " file" ) ;^[METHOD] putNextEntry [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( entry.getCrc (  )   &&  -1 )  {^439^^^^^418^451^[REPLACE] if  ( entry.getCrc (  )  == -1 )  {^[METHOD] putNextEntry [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^439^440^441^442^^418^451^[ADD] if  ( entry.getCrc (  )  == -1 )  { throw new ZipException ( "crc checksum is required for STORED" + " method when not writing to a file" ) ; }^[METHOD] putNextEntry [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^return ;^440^441^^^^418^451^[REPLACE] throw new ZipException ( "crc checksum is required for STORED" + " method when not writing to a file" ) ;^[METHOD] putNextEntry [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^440^441^442^^^418^451^[ADD] throw new ZipException ( "crc checksum is required for STORED" + " method when not writing to a file" ) ; }^[METHOD] putNextEntry [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^throw new ZipException ( "uncompressed size is required for" + " STORED method when not writing to a" ;^435^436^437^^^418^451^[REPLACE] throw new ZipException ( "uncompressed size is required for" + " STORED method when not writing to a" + " file" ) ;^[METHOD] putNextEntry [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^throw new ZipException ( "uncompressed size is required for" + " STORED method when not writing to a" ;^440^441^^^^418^451^[REPLACE] throw new ZipException ( "crc checksum is required for STORED" + " method when not writing to a file" ) ;^[METHOD] putNextEntry [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( entry.getSize (  )   !=  -1 )  {^434^^^^^418^451^[REPLACE] if  ( entry.getSize (  )  == -1 )  {^[METHOD] putNextEntry [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( entry.getMethod (  )  == DEFLATED || hasCompressionLevelChanged )  {^446^^^^^418^451^[REPLACE] if  ( entry.getMethod (  )  == DEFLATED && hasCompressionLevelChanged )  {^[METHOD] putNextEntry [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^def.setLevel ( level ) ;hasCompressionLevelChanged = false;^446^447^448^449^^418^451^[ADD] if  ( entry.getMethod (  )  == DEFLATED && hasCompressionLevelChanged )  { def.setLevel ( level ) ; hasCompressionLevelChanged = false; }^[METHOD] putNextEntry [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^hasCompressionLevelChanged = true;^448^^^^^418^451^[REPLACE] hasCompressionLevelChanged = false;^[METHOD] putNextEntry [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^450^^^^^418^451^[REPLACE] writeLocalFileHeader ( entry ) ;^[METHOD] putNextEntry [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^this.comment =  name;^458^^^^^457^459^[REPLACE] this.comment = comment;^[METHOD] setComment [TYPE] void [PARAMETER] String comment [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( level < Deflater.DEFAULT_COMPRESSION ) {^470^471^^^^469^477^[REPLACE] if  ( level < Deflater.DEFAULT_COMPRESSION || level > Deflater.BEST_COMPRESSION )  {^[METHOD] setLevel [TYPE] void [PARAMETER] int level [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^return ;^472^473^^^^469^477^[REPLACE] throw new IllegalArgumentException ( "Invalid compression level: " + level ) ;^[METHOD] setLevel [TYPE] void [PARAMETER] int level [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^hasCompressionLevelChanged =  ( this.level  == STORED ) ;^475^^^^^469^477^[REPLACE] hasCompressionLevelChanged =  ( this.level != level ) ;^[METHOD] setLevel [TYPE] void [PARAMETER] int level [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^475^^^^^469^477^[ADD] hasCompressionLevelChanged =  ( this.level != level ) ;^[METHOD] setLevel [TYPE] void [PARAMETER] int level [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^this.level =  method;^476^^^^^469^477^[REPLACE] this.level = level;^[METHOD] setLevel [TYPE] void [PARAMETER] int level [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^this.method =  level;^486^^^^^485^487^[REPLACE] this.method = method;^[METHOD] setMethod [TYPE] void [PARAMETER] int method [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( entry.getMethod (  )   !=  DEFLATED )  {^497^^^^^496^523^[REPLACE] if  ( entry.getMethod (  )  == DEFLATED )  {^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^497^498^499^500^501^496^523^[ADD] if  ( entry.getMethod (  )  == DEFLATED )  { if  ( length > 0 )  { if  ( !def.finished (  )  )  { if  ( length <= DEFLATER_BLOCK_SIZE )  { def.setInput ( b, offset, length ) ;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^written += extra.length; ;^520^^^^^497^521^[REPLACE] written += length;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( length /  0.5  > 0 )  {^498^^^^^496^523^[REPLACE] if  ( length > 0 )  {^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^498^499^500^501^502^496^523^[ADD] if  ( length > 0 )  { if  ( !def.finished (  )  )  { if  ( length <= DEFLATER_BLOCK_SIZE )  { def.setInput ( b, offset, length ) ; deflateUntilInputIsNeeded (  ) ;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( def.finished (  )  )  {^499^^^^^496^523^[REPLACE] if  ( !def.finished (  )  )  {^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^499^500^501^502^^496^523^[ADD] if  ( !def.finished (  )  )  { if  ( length <= DEFLATER_BLOCK_SIZE )  { def.setInput ( b, offset, length ) ; deflateUntilInputIsNeeded (  ) ;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( length - 3 <= DEFLATER_BLOCK_SIZE )  {^500^^^^^496^523^[REPLACE] if  ( length <= DEFLATER_BLOCK_SIZE )  {^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( offset < length *  0.5  )  {^511^^^^^500^515^[REPLACE] if  ( done < length )  {^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^def.setInput ( b, offset + done, length - done ) ;deflateUntilInputIsNeeded (  ) ;^511^512^513^514^^500^515^[ADD] if  ( done < length )  { def.setInput ( b, offset + done, length - done ) ; deflateUntilInputIsNeeded (  ) ; }^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^def.setInput ( b, offset + done, method (  )  - done ) ;^512^^^^^500^515^[REPLACE] def.setInput ( b, offset + done, length - done ) ;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^entries.clear (  ) ;^513^^^^^500^515^[REPLACE] deflateUntilInputIsNeeded (  ) ;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^for  (DEFLATER_BLOCK_SIZEnt i = 0; i  >  fullblocks; i++ )  {^505^^^^^500^515^[REPLACE] for  ( int i = 0; i < fullblocks; i++ )  {^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^def.setInput ( b, level + i * fullblocks, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^500^515^[REPLACE] def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^506^507^^^^500^515^[ADD] def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^entries.clear (  ) ;^508^^^^^500^515^[REPLACE] deflateUntilInputIsNeeded (  ) ;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^final int fullblocks = method (  )  / DEFLATER_BLOCK_SIZE;^504^^^^^500^515^[REPLACE] final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^504^^^^^500^515^[ADD] final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^for  ( int i = 4; i < fullblocks; i++ )  {^505^^^^^500^515^[REPLACE] for  ( int i = 0; i < fullblocks; i++ )  {^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^final int done = method  ;^510^^^^^500^515^[REPLACE] final int done = fullblocks * DEFLATER_BLOCK_SIZE;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^def.setInput ( b, level, length ) ;^501^^^^^496^523^[REPLACE] def.setInput ( b, offset, length ) ;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^entries.clear (  ) ;^502^^^^^496^523^[REPLACE] deflateUntilInputIsNeeded (  ) ;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REMOVE]^crc.reset (  ) ;^502^^^^^496^523^[REMOVE] ^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( done < method %  0.5  )  {^511^^^^^496^523^[REPLACE] if  ( done < length )  {^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^def .needsInput (  )  ;^512^^^^^496^523^[REPLACE] def.setInput ( b, offset + done, length - done ) ;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^entries.clear (  ) ;^513^^^^^496^523^[REPLACE] deflateUntilInputIsNeeded (  ) ;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^for  (DEFLATER_BLOCK_SIZEnt i = 0; i  >=  fullblocks; i++ )  {^505^^^^^496^523^[REPLACE] for  ( int i = 0; i < fullblocks; i++ )  {^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^def.setInput ( b, offset  &  i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^496^523^[REPLACE] def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^entries.clear (  ) ;^508^^^^^496^523^[REPLACE] deflateUntilInputIsNeeded (  ) ;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^final int fullblocks = length %  2 / DEFLATER_BLOCK_SIZE;^504^^^^^496^523^[REPLACE] final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^for  ( int i = 3; i < fullblocks; i++ )  {^505^^^^^496^523^[REPLACE] for  ( int i = 0; i < fullblocks; i++ )  {^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^final int done = length  ;^510^^^^^496^523^[REPLACE] final int done = fullblocks * DEFLATER_BLOCK_SIZE;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( length *  0 .5  <= DEFLATER_BLOCK_SIZE )  {^500^^^^^496^523^[REPLACE] if  ( length <= DEFLATER_BLOCK_SIZE )  {^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( done < length + 3 )  {^511^^^^^500^515^[REPLACE] if  ( done < length )  {^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^def.setInput ( b, level + done, length - 1 - done ) ;^512^^^^^500^515^[REPLACE] def.setInput ( b, offset + done, length - done ) ;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^for  ( int i = 0; i  <=  fullblocks; i++ )  {^505^^^^^500^515^[REPLACE] for  ( int i = 0; i < fullblocks; i++ )  {^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^505^506^507^508^509^500^515^[ADD] for  ( int i = 0; i < fullblocks; i++ )  { def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ; deflateUntilInputIsNeeded (  ) ; }^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^def.setInput ( b, offset + i *level,level ) ;^506^507^^^^500^515^[REPLACE] def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^508^^^^^500^515^[ADD] deflateUntilInputIsNeeded (  ) ;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^final int fullblocks = length (  )  / DEFLATER_BLOCK_SIZE;^504^^^^^500^515^[REPLACE] final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^for  ( int i = 0 / 4; i < fullblocks; i++ )  {^505^^^^^500^515^[REPLACE] for  ( int i = 0; i < fullblocks; i++ )  {^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^final int done =method  ;^510^^^^^500^515^[REPLACE] final int done = fullblocks * DEFLATER_BLOCK_SIZE;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^def.deflate ( b, offset, method ) ;^501^^^^^496^523^[REPLACE] def.setInput ( b, offset, length ) ;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^501^502^^^^496^523^[ADD] def.setInput ( b, offset, length ) ; deflateUntilInputIsNeeded (  ) ;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( done < length + 2 )  {^511^^^^^496^523^[REPLACE] if  ( done < length )  {^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^def.setInput ( b, offset + done, length - done ) ;deflateUntilInputIsNeeded (  ) ;^511^512^513^514^^496^523^[ADD] if  ( done < length )  { def.setInput ( b, offset + done, length - done ) ; deflateUntilInputIsNeeded (  ) ; }^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^513^^^^^496^523^[ADD] deflateUntilInputIsNeeded (  ) ;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^for  ( int i = 0; i  !=  fullblocks; i++ )  {^505^^^^^496^523^[REPLACE] for  ( int i = 0; i < fullblocks; i++ )  {^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^def.setInput ( b, level  ||  i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^496^523^[REPLACE] def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REMOVE]^crc.reset (  ) ;^508^^^^^496^523^[REMOVE] ^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^final int fullblocks = length %  0.5  / DEFLATER_BLOCK_SIZE;^504^^^^^496^523^[REPLACE] final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^for  ( int i = 2; i < fullblocks; i++ )  {^505^^^^^496^523^[REPLACE] for  ( int i = 0; i < fullblocks; i++ )  {^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^final int done = fullblocks  ;^510^^^^^496^523^[REPLACE] final int done = fullblocks * DEFLATER_BLOCK_SIZE;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( length (  )  <= DEFLATER_BLOCK_SIZE )  {^500^^^^^496^523^[REPLACE] if  ( length <= DEFLATER_BLOCK_SIZE )  {^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^def.setInput ( b, offset, length ) ;deflateUntilInputIsNeeded (  ) ;final int fullblocks = length / DEFLATER_BLOCK_SIZE;^500^501^502^503^504^496^523^[ADD] if  ( length <= DEFLATER_BLOCK_SIZE )  { def.setInput ( b, offset, length ) ; deflateUntilInputIsNeeded (  ) ; } else { final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( done < length /  2 )  {^511^^^^^500^515^[REPLACE] if  ( done < length )  {^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^def.setInput ( b, offset + done, length (  )  - done ) ;^512^^^^^500^515^[REPLACE] def.setInput ( b, offset + done, length - done ) ;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^for  ( int i = 0; i  >=  WORD; i++ )  {^505^^^^^500^515^[REPLACE] for  ( int i = 0; i < fullblocks; i++ )  {^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^def.setInput ( b, level + i * done, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^500^515^[REPLACE] def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^final int fullblocks = length + 1 / DEFLATER_BLOCK_SIZE;^504^^^^^500^515^[REPLACE] final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^for  ( int i = 1; i < fullblocks; i++ )  {^505^^^^^500^515^[REPLACE] for  ( int i = 0; i < fullblocks; i++ )  {^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^def.deflate ( b, level, length ) ;^501^^^^^496^523^[REPLACE] def.setInput ( b, offset, length ) ;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( done < length *  2 )  {^511^^^^^496^523^[REPLACE] if  ( done < length )  {^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^def.setInput ( b, offset + done, length *  0.5  - done ) ;^512^^^^^496^523^[REPLACE] def.setInput ( b, offset + done, length - done ) ;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^512^513^^^^496^523^[ADD] def.setInput ( b, offset + done, length - done ) ; deflateUntilInputIsNeeded (  ) ;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^for  (DEFLATER_BLOCK_SIZEnt i = 0; i  <=  fullblocks; i++ )  {^505^^^^^496^523^[REPLACE] for  ( int i = 0; i < fullblocks; i++ )  {^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^def.setInput ( b,level + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^496^523^[REPLACE] def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^final int fullblocks = method %  0.5  / DEFLATER_BLOCK_SIZE;^504^^^^^496^523^[REPLACE] final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^505^506^507^508^509^496^523^[ADD] for  ( int i = 0; i < fullblocks; i++ )  { def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ; deflateUntilInputIsNeeded (  ) ; }^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^final int done = WORD  ;^510^^^^^496^523^[REPLACE] final int done = fullblocks * DEFLATER_BLOCK_SIZE;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( length *  0.5  <= DEFLATER_BLOCK_SIZE )  {^500^^^^^496^523^[REPLACE] if  ( length <= DEFLATER_BLOCK_SIZE )  {^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( offset < length - 3 )  {^511^^^^^500^515^[REPLACE] if  ( done < length )  {^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^def.setInput ( b, offset + done, method - 2 - done ) ;^512^^^^^500^515^[REPLACE] def.setInput ( b, offset + done, length - done ) ;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^512^513^^^^500^515^[ADD] def.setInput ( b, offset + done, length - done ) ; deflateUntilInputIsNeeded (  ) ;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^def.setInput ( b, offset + DEFLATER_BLOCK_SIZE *level,level ) ;^506^507^^^^500^515^[REPLACE] def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^final int fullblocks = length /  0.5  / DEFLATER_BLOCK_SIZE;^504^^^^^500^515^[REPLACE] final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^for  ( int i = 3; i < fullblocks; i++ )  {^505^^^^^500^515^[REPLACE] for  ( int i = 0; i < fullblocks; i++ )  {^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^final int done =length  ;^510^^^^^500^515^[REPLACE] final int done = fullblocks * DEFLATER_BLOCK_SIZE;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^def .needsInput (  )  ;^501^^^^^496^523^[REPLACE] def.setInput ( b, offset, length ) ;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( done < length %  0.5  )  {^511^^^^^496^523^[REPLACE] if  ( done < length )  {^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^511^512^513^514^^496^523^[ADD] if  ( done < length )  { def.setInput ( b, offset + done, length - done ) ; deflateUntilInputIsNeeded (  ) ; }^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^def.setInput ( b, offset + done, length (  )  - done ) ;^512^^^^^496^523^[REPLACE] def.setInput ( b, offset + done, length - done ) ;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^for  (DEFLATER_BLOCK_SIZEnt DEFLATER_BLOCK_SIZE = 4; i  !=  fullblocks; i++ )  {^505^^^^^496^523^[REPLACE] for  ( int i = 0; i < fullblocks; i++ )  {^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^def.setInput ( b, offset + i *level,level ) ;^506^507^^^^496^523^[REPLACE] def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^final int fullblocks = method *  0.5  / DEFLATER_BLOCK_SIZE;^504^^^^^496^523^[REPLACE] final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^504^^^^^496^523^[ADD] final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^for  ( int i = 4; i < fullblocks; i++ )  {^505^^^^^496^523^[REPLACE] for  ( int i = 0; i < fullblocks; i++ )  {^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^final int done = done  ;^510^^^^^496^523^[REPLACE] final int done = fullblocks * DEFLATER_BLOCK_SIZE;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^510^^^^^496^523^[ADD] final int done = fullblocks * DEFLATER_BLOCK_SIZE;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( length + 2 > 0  )  {^498^^^^^496^523^[REPLACE] if  ( length > 0 )  {^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^500^501^502^503^504^496^523^[ADD] if  ( length <= DEFLATER_BLOCK_SIZE )  { def.setInput ( b, offset, length ) ; deflateUntilInputIsNeeded (  ) ; } else { final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( offset < length /  2 )  {^511^^^^^500^515^[REPLACE] if  ( done < length )  {^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^def.setInput ( b, offset + done, length - 4 - done ) ;^512^^^^^500^515^[REPLACE] def.setInput ( b, offset + done, length - done ) ;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^deflateUntilInputIsNeeded (  ) ;^512^513^^^^500^515^[ADD] def.setInput ( b, offset + done, length - done ) ; deflateUntilInputIsNeeded (  ) ;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^for  ( int i = 0; i  >=  fullblocks; i++ )  {^505^^^^^500^515^[REPLACE] for  ( int i = 0; i < fullblocks; i++ )  {^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^def.setInput ( b,level + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^500^515^[REPLACE] def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^final int fullblocks = length %  2 / DEFLATER_BLOCK_SIZE;^504^^^^^500^515^[REPLACE] final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^for  ( int i = 0 / 1; i < fullblocks; i++ )  {^505^^^^^500^515^[REPLACE] for  ( int i = 0; i < fullblocks; i++ )  {^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^final int done = fullblocks  ;^510^^^^^500^515^[REPLACE] final int done = fullblocks * DEFLATER_BLOCK_SIZE;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^def.deflate ( b, offset, level ) ;^501^^^^^496^523^[REPLACE] def.setInput ( b, offset, length ) ;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( done < length + 4 )  {^511^^^^^496^523^[REPLACE] if  ( done < length )  {^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^def.setInput ( b, offset + done, length /  2 - done ) ;^512^^^^^496^523^[REPLACE] def.setInput ( b, offset + done, length - done ) ;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^512^^^^^496^523^[ADD] def.setInput ( b, offset + done, length - done ) ;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REMOVE]^crc.reset (  ) ;^513^^^^^496^523^[REMOVE] ^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^for  ( DEFLATER_BLOCK_SIZEnt i = 0; i  >=  method; i++ )  {^505^^^^^496^523^[REPLACE] for  ( int i = 0; i < fullblocks; i++ )  {^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^def.setInput ( b, level + i * length, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^496^523^[REPLACE] def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^506^507^^^^496^523^[ADD] def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^final int fullblocks = level + 4 / DEFLATER_BLOCK_SIZE;^504^^^^^496^523^[REPLACE] final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^for  ( int i = 0 - 1; i < fullblocks; i++ )  {^505^^^^^496^523^[REPLACE] for  ( int i = 0; i < fullblocks; i++ )  {^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^final int done =done  ;^510^^^^^496^523^[REPLACE] final int done = fullblocks * DEFLATER_BLOCK_SIZE;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( done < length *  2 )  {^511^^^^^500^515^[REPLACE] if  ( done < length )  {^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^def.setInput ( b, offset + done, length + 4 - done ) ;^512^^^^^500^515^[REPLACE] def.setInput ( b, offset + done, length - done ) ;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^for  (DEFLATER_BLOCK_SIZEnt i = 0; i  !=  fullblocks; i++ )  {^505^^^^^500^515^[REPLACE] for  ( int i = 0; i < fullblocks; i++ )  {^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^final int fullblocks = length *  2 / DEFLATER_BLOCK_SIZE;^504^^^^^500^515^[REPLACE] final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^for  ( int i = 0 - 3; i < fullblocks; i++ )  {^505^^^^^500^515^[REPLACE] for  ( int i = 0; i < fullblocks; i++ )  {^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^final int done = done  ;^510^^^^^500^515^[REPLACE] final int done = fullblocks * DEFLATER_BLOCK_SIZE;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^510^^^^^500^515^[ADD] final int done = fullblocks * DEFLATER_BLOCK_SIZE;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^final int fullblocks = length *  2 / DEFLATER_BLOCK_SIZE;^504^^^^^496^523^[REPLACE] final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( length + 1 <= DEFLATER_BLOCK_SIZE )  {^500^^^^^496^523^[REPLACE] if  ( length <= DEFLATER_BLOCK_SIZE )  {^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( done < length - 4 )  {^511^^^^^500^515^[REPLACE] if  ( done < length )  {^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REMOVE]^raf.write ( data, offset, length ) ;^512^^^^^500^515^[REMOVE] ^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^for  ( int i = 2; i  ==  fullblocks; i++ )  {^505^^^^^500^515^[REPLACE] for  ( int i = 0; i < fullblocks; i++ )  {^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^final int done =level  ;^510^^^^^500^515^[REPLACE] final int done = fullblocks * DEFLATER_BLOCK_SIZE;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^502^^^^^496^523^[ADD] deflateUntilInputIsNeeded (  ) ;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( done < length - 4 )  {^511^^^^^496^523^[REPLACE] if  ( done < length )  {^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^def.setInput ( b, offset + done, length + 1 - done ) ;^512^^^^^496^523^[REPLACE] def.setInput ( b, offset + done, length - done ) ;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^for  (DEFLATER_BLOCK_SIZEnt i = 0 % 1; i  ==  fullblocks; i++ )  {^505^^^^^496^523^[REPLACE] for  ( int i = 0; i < fullblocks; i++ )  {^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^for  ( int i = 1; i < fullblocks; i++ )  {^505^^^^^496^523^[REPLACE] for  ( int i = 0; i < fullblocks; i++ )  {^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( done < length %  2 )  {^511^^^^^500^515^[REPLACE] if  ( done < length )  {^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^for  ( int i = 0; i  ==  fullblocks; i++ )  {^505^^^^^500^515^[REPLACE] for  ( int i = 0; i < fullblocks; i++ )  {^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^def.setInput ( b, offset  &&  i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^500^515^[REPLACE] def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^def.setInput ( buf, offset, length ) ;^501^^^^^496^523^[REPLACE] def.setInput ( b, offset, length ) ;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( done < length - 5 )  {^511^^^^^496^523^[REPLACE] if  ( done < length )  {^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^def.setInput ( b, offset + done, method (  )  - done ) ;^512^^^^^496^523^[REPLACE] def.setInput ( b, offset + done, length - done ) ;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^for  ( int i = 0; i  >  fullblocks; i++ )  {^505^^^^^496^523^[REPLACE] for  ( int i = 0; i < fullblocks; i++ )  {^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^written += extra.length; ;^520^^^^^496^523^[REPLACE] written += length;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^520^^^^^496^523^[ADD] written += length;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^final int fullblocks = length - 2 / DEFLATER_BLOCK_SIZE;^504^^^^^496^523^[REPLACE] final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^final int done = method  ;^510^^^^^496^523^[REPLACE] final int done = fullblocks * DEFLATER_BLOCK_SIZE;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^crc.update ( buf, offset, length ) ;^522^^^^^496^523^[REPLACE] crc.update ( b, offset, length ) ;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^byte[] buff = new byte[1 << 1];^533^^^^^532^536^[REPLACE] byte[] buff = new byte[1];^[METHOD] write [TYPE] void [PARAMETER] int b [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^buff[2] =  ( byte )   ( b | BYTE_MASK ) ;^534^^^^^532^536^[REPLACE] buff[0] =  ( byte )   ( b & BYTE_MASK ) ;^[METHOD] write [TYPE] void [PARAMETER] int b [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^write ( buff, 0, 1 ) ;^534^535^^^^532^536^[ADD] buff[0] =  ( byte )   ( b & BYTE_MASK ) ; write ( buff, 0, 1 ) ;^[METHOD] write [TYPE] void [PARAMETER] int b [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^write ( buff, 0 >>> 0, 1 ) ;^535^^^^^532^536^[REPLACE] write ( buff, 0, 1 ) ;^[METHOD] write [TYPE] void [PARAMETER] int b [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^crc.reset (  ) ;^545^^^^^544^553^[REPLACE] finish (  ) ;^[METHOD] close [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  (_raf == null )  {^547^^^^^544^553^[REPLACE] if  ( raf != null )  {^[METHOD] close [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^raf.close (  ) ;^547^548^549^^^544^553^[ADD] if  ( raf != null )  { raf.close (  ) ; }^[METHOD] close [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^raf.getFilePointer (  ) ;^548^^^^^544^553^[REPLACE] raf.close (  ) ;^[METHOD] close [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( out == false )  {^550^^^^^544^553^[REPLACE] if  ( out != null )  {^[METHOD] close [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^out.flush (  ) ;^551^^^^^544^553^[REPLACE] out.close (  ) ;^[METHOD] close [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( out == null )  {^562^^^^^561^565^[REPLACE] if  ( out != null )  {^[METHOD] flush [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^out.close (  ) ;^563^^^^^561^565^[REPLACE] out.flush (  ) ;^[METHOD] flush [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^offsets.put ( ze, ZipLong.getBytes ( written )  ) ;^568^^^^^567^569^[REPLACE] putNextEntry (  ( ZipArchiveEntry )  entry ) ;^[METHOD] putArchiveEntry [TYPE] void [PARAMETER] ArchiveEntry entry [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  ArchiveEntry entry  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^write ( b, 0 , b.length ) ;^580^^^^^579^581^[REPLACE] write ( b, 0, b.length ) ;^[METHOD] write [TYPE] void [PARAMETER] byte[] b [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^int len = def.deflate ( buf, 0 , buf.length ) ;^608^^^^^607^612^[REPLACE] int len = def.deflate ( buf, 0, buf.length ) ;^[METHOD] deflate [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( length  <=  0 )  {^609^^^^^607^612^[REPLACE] if  ( len > 0 )  {^[METHOD] deflate [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( buf, 1, len ) ;^610^^^^^607^612^[REPLACE] writeOut ( buf, 0, len ) ;^[METHOD] deflate [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^610^^^^^607^612^[ADD] writeOut ( buf, 0, len ) ;^[METHOD] deflate [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^boolean encodable = zipEncoding.canEncode ( ze.getTime (  )  ) ;^621^^^^^619^716^[REPLACE] boolean encodable = zipEncoding.canEncode ( ze.getName (  )  ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^final int zipMethod = ze.getMethod (  ) ;^623^^^^^619^716^[REPLACE] final ZipEncoding entryEncoding;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( hasCompressionLevelChanged && fallbackToUTF8 )  {^625^^^^^619^716^[REPLACE] if  ( !encodable && fallbackToUTF8 )  {^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^625^626^627^628^629^619^716^[ADD] if  ( !encodable && fallbackToUTF8 )  { entryEncoding = ZipEncodingHelper.UTF8_ZIP_ENCODING; } else { entryEncoding = zipEncoding; }^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^this.encoding = encoding; ;^628^^^^^625^629^[REPLACE] entryEncoding = zipEncoding;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^entryEncoding  =  entryEncoding ;^626^^^^^619^716^[REPLACE] entryEncoding = ZipEncodingHelper.UTF8_ZIP_ENCODING;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^entryEncoding  = null ;^626^^^^^619^716^[REPLACE] entryEncoding = ZipEncodingHelper.UTF8_ZIP_ENCODING;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^this.encoding = encoding; ;^628^^^^^619^716^[REPLACE] entryEncoding = zipEncoding;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^ByteBuffer name = zipEncoding.encode ( ze.getName (  )  ) ;^631^^^^^619^716^[REPLACE] ByteBuffer name = entryEncoding.encode ( ze.getName (  )  ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( createUnicodeExtraFields  ==  UnicodeExtraFieldPolicy.NEVER )  {^633^^^^^619^716^[REPLACE] if  ( createUnicodeExtraFields != UnicodeExtraFieldPolicy.NEVER )  {^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  (  encodable )  {^635^636^^^^619^716^[REPLACE] if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS || !encodable )  {^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^635^636^637^638^639^619^716^[ADD] if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS || !encodable )  { ze.addExtraField ( new UnicodePathExtraField ( ze.getName (  ) , name.array (  ) , name.arrayOffset (  ) ,^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^ze.addExtraField ( new UnicodePathExtraField ( ze.getName (  ) , commentB.array (  ) , name.arrayOffset (  ) , name.limit (  )  )  ) ;^637^638^639^640^^635^641^[REPLACE] ze.addExtraField ( new UnicodePathExtraField ( ze.getName (  ) , name.array (  ) , name.arrayOffset (  ) , name.limit (  )  )  ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^637^638^639^^^635^641^[ADD] ze.addExtraField ( new UnicodePathExtraField ( ze.getName (  ) , name.array (  ) , name.arrayOffset (  ) ,^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^ze.addExtraField ( new UnicodePathExtraField ( ze.getTime (  ) , name.array (  ) , name.arrayOffset (  ) , name.limit (  )  )  ) ;^637^638^639^640^^635^641^[REPLACE] ze.addExtraField ( new UnicodePathExtraField ( ze.getName (  ) , name.array (  ) , name.arrayOffset (  ) , name.limit (  )  )  ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^name.array (  ) , commentB.arrayOffset (  ) , name.limit (  )  )  ) ;^638^639^640^^^635^641^[REPLACE] name.array (  ) , name.arrayOffset (  ) , name.limit (  )  )  ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^name.array (  ) , commentB.limit (  )  )  ) ;^639^640^^^^635^641^[REPLACE] name.arrayOffset (  ) , name.limit (  )  )  ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^crc.reset (  ) ;^640^^^^^635^641^[REPLACE] name.limit (  )  )  ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( comm == null && !"".equals ( comm )  )  {^644^^^^^619^716^[REPLACE] if  ( comm != null && !"".equals ( comm )  )  {^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^644^645^646^^648^619^716^[ADD] if  ( comm != null && !"".equals ( comm )  )  {  boolean commentEncodable = this.zipEncoding.canEncode ( comm ) ; if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  (  commentEncodable )  {^648^649^^^^619^716^[REPLACE] if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS || !commentEncodable )  {^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^ByteBuffer commentB = zipEncoding .canEncode (  )  ;^650^^^^^648^656^[REPLACE] ByteBuffer commentB = entryEncoding.encode ( comm ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^650^^^^^648^656^[ADD] ByteBuffer commentB = entryEncoding.encode ( comm ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^boolean nameentEncodable = this.zipEncoding .encode (  )  ;^646^^^^^619^716^[REPLACE] boolean commentEncodable = this.zipEncoding.canEncode ( comm ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^646^^^^^619^716^[ADD] boolean commentEncodable = this.zipEncoding.canEncode ( comm ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^ByteBuffer commentB = entryEncoding .canEncode (  )  ;^650^^^^^619^716^[REPLACE] ByteBuffer commentB = entryEncoding.encode ( comm ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^648^649^650^651^652^619^716^[ADD] if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS || !commentEncodable )  { ByteBuffer commentB = entryEncoding.encode ( comm ) ; ze.addExtraField ( new UnicodeCommentExtraField ( comm, commentB.array (  ) ,^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^ByteBuffer nameentB = entryEncoding .canEncode (  )  ;^650^^^^^648^656^[REPLACE] ByteBuffer commentB = entryEncoding.encode ( comm ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^String comm = ze .getName (  )  ;^643^^^^^619^716^[REPLACE] String comm = ze.getComment (  ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^boolean nameentEncodable = this.zipEncoding.canEncode ( comm ) ;^646^^^^^619^716^[REPLACE] boolean commentEncodable = this.zipEncoding.canEncode ( comm ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^ByteBuffer nameentB = entryEncoding.encode ( comm ) ;^650^^^^^619^716^[REPLACE] ByteBuffer commentB = entryEncoding.encode ( comm ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^name.arrayOffset (  ) , commentB.limit (  )  )  ) ;^639^640^^^^635^641^[REPLACE] name.arrayOffset (  ) , name.limit (  )  )  ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REMOVE]^if  (  ( createUnicodeExtraFields )  !=  ( NEVER )  )  {     if  (  (  ( createUnicodeExtraFields )  ==  ( ALWAYS )  )  ||  ( !encodable )  )  {         ze.addExtraField ( new UnicodePathExtraField ( ze.getName (  ) , name.array (  ) , name.arrayOffset (  ) , name.limit (  )  )  ) ;     }     String comm = ze.getComment (  ) ;     if  (  ( comm != null )  &&  ( ! ( "".equals ( comm )  )  )  )  {         boolean commentEncodable = canEncode ( comm ) ;         if  (  (  ( createUnicodeExtraFields )  ==  ( ALWAYS )  )  ||  ( !commentEncodable )  )  {             ByteBuffer commentB = entryEncoding.encode ( comm ) ;             ze.addExtraField ( new UnicodeCommentExtraField ( comm, commentB.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  )  ) ;         }     } }^644^^^^^619^716^[REMOVE] ^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS ) {^648^649^^^^619^716^[REPLACE] if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS || !commentEncodable )  {^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^ByteBuffer commentB = zipEncoding.encode ( comm ) ;^650^^^^^648^656^[REPLACE] ByteBuffer commentB = entryEncoding.encode ( comm ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^boolean nameentEncodable = this.zipEncoding.encode ( comm ) ;^646^^^^^619^716^[REPLACE] boolean commentEncodable = this.zipEncoding.canEncode ( comm ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^ByteBuffer commentB = zipEncoding.encode ( comm ) ;^650^^^^^619^716^[REPLACE] ByteBuffer commentB = entryEncoding.encode ( comm ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS || commentEncodable )  {^648^649^^^^619^716^[REPLACE] if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS || !commentEncodable )  {^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^String comm = ze.getName (  ) ;^643^^^^^619^716^[REPLACE] String comm = ze.getComment (  ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^ByteBuffer nameentB = entryEncoding.canEncode ( comm ) ;^650^^^^^619^716^[REPLACE] ByteBuffer commentB = entryEncoding.encode ( comm ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^offsets.put ( ze,   written    ) ;^660^^^^^619^716^[REPLACE] offsets.put ( ze, ZipLong.getBytes ( written )  ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REMOVE]^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^660^^^^^619^716^[REMOVE] ^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( DD_SIG ) ;^662^^^^^619^716^[REPLACE] writeOut ( LFH_SIG ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REMOVE]^crc.reset (  ) ;^662^^^^^619^716^[REMOVE] ^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^written += SHORT; ;^663^^^^^619^716^[REPLACE] written += WORD;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^final int zipMethod = ze.getTime (  ) ;^666^^^^^619^716^[REPLACE] final int zipMethod = ze.getMethod (  ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeVersionNeededToExtractAndGeneralPurposeBits ( zipMethod, encodable  <  fallbackToUTF8 ) ;^668^669^670^^^619^716^[REPLACE] writeVersionNeededToExtractAndGeneralPurposeBits ( zipMethod, !encodable && fallbackToUTF8 ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^668^669^670^^^619^716^[ADD] writeVersionNeededToExtractAndGeneralPurposeBits ( zipMethod, !encodable && fallbackToUTF8 ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^written += SHORT; ;^671^^^^^619^716^[REPLACE] written += WORD;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( ZipShort.getBytes ( method )  ) ;^674^^^^^619^716^[REPLACE] writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^written += SHORT;^674^675^^^^619^716^[ADD] writeOut ( ZipShort.getBytes ( zipMethod )  ) ; written += SHORT;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( ZipShort.getBytes ( offset )  ) ;^674^^^^^619^716^[REPLACE] writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^written += length; ;^675^^^^^619^716^[REPLACE] written += SHORT;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^675^^^^^619^716^[ADD] written += SHORT;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( ZipUtil.toDosTime ( ze.getName (  )  )  ) ;^678^^^^^619^716^[REPLACE] writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( ZipUtil.adjustToLong ( ze.getTime (  )  )  ) ;^678^^^^^619^716^[REPLACE] writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^678^679^^^^619^716^[ADD] writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ; written += WORD;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^written += SHORT; ;^679^^^^^619^716^[REPLACE] written += WORD;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^679^^^^^619^716^[ADD] written += WORD;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^dataStart = written; ;^684^^^^^619^716^[REPLACE] localDataStart = written;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^684^^^^^619^716^[ADD] localDataStart = written;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( zipMethod != DEFLATED || raf != false )  {^685^^^^^619^716^[REPLACE] if  ( zipMethod == DEFLATED || raf != null )  {^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^690^^^^^685^693^[REPLACE] writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut (   ze.getCrc (  )   ) ;^690^^^^^685^693^[REPLACE] writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( ZipLong.getBytes ( ze .setCrc ( size )   )  ) ;^690^^^^^685^693^[REPLACE] writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^691^^^^^685^693^[REPLACE] writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( ZipLong.getBytes ( ze.setSize (  )  )  ) ;^691^^^^^685^693^[REPLACE] writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^691^692^^^^685^693^[ADD] writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ; writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^692^^^^^685^693^[REPLACE] writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^692^^^^^685^693^[ADD] writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( ZipLong.getBytes ( ze .setSize (  )   )  ) ;^692^^^^^685^693^[REPLACE] writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( ZipLong.getBytes ( ze.setSize (  )  )  ) ;^692^^^^^685^693^[REPLACE] writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( ZERO ) ;^686^^^^^619^716^[REPLACE] writeOut ( LZERO ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( ZERO ) ;^687^^^^^619^716^[REPLACE] writeOut ( LZERO ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( ZERO ) ;^688^^^^^619^716^[REPLACE] writeOut ( LZERO ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^written += 5;^695^^^^^619^716^[REPLACE] written += 12;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;^699^^^^^619^716^[REPLACE] writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^written += length; ;^700^^^^^619^716^[REPLACE] written += SHORT;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^byte[] extra = ze .getCentralDirectoryExtra (  )  ;^703^^^^^619^716^[REPLACE] byte[] extra = ze.getLocalFileDataExtra (  ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^703^^^^^619^716^[ADD] byte[] extra = ze.getLocalFileDataExtra (  ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( ZipShort.getBytes ( ZERO.length )  ) ;^704^^^^^619^716^[REPLACE] writeOut ( ZipShort.getBytes ( extra.length )  ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut (   ZERO.length    ) ;^704^^^^^619^716^[REPLACE] writeOut ( ZipShort.getBytes ( extra.length )  ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^written += length; ;^705^^^^^619^716^[REPLACE] written += SHORT;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( commentB.array (  ) , name.arrayOffset (  ) , name.limit (  )  ) ;^708^^^^^619^716^[REPLACE] writeOut ( name.array (  ) , name.arrayOffset (  ) , name.limit (  )  ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^708^709^^^^619^716^[ADD] writeOut ( name.array (  ) , name.arrayOffset (  ) , name.limit (  )  ) ; written += name.limit (  ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( commentB.array (  ) , name.array (  ) , name.limit (  )  ) ;^708^^^^^619^716^[REPLACE] writeOut ( name.array (  ) , name.arrayOffset (  ) , name.limit (  )  ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^written += commentB.limit (  ) ; ;^709^^^^^619^716^[REPLACE] written += name.limit (  ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( ZERO ) ;^712^^^^^619^716^[REPLACE] writeOut ( extra ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^written += length; ;^713^^^^^619^716^[REPLACE] written += extra.length;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^713^^^^^619^716^[ADD] written += extra.length;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^localDataStart = written; ;^715^^^^^619^716^[REPLACE] dataStart = written;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( ze.getMethod (  )  == DEFLATED || raf != this )  {^724^^^^^723^734^[REPLACE] if  ( ze.getMethod (  )  != DEFLATED || raf != null )  {^[METHOD] writeDataDescriptor [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^return raf != null;^725^^^^^723^734^[REPLACE] return;^[METHOD] writeDataDescriptor [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( EOCD_SIG ) ;^727^^^^^723^734^[REPLACE] writeOut ( DD_SIG ) ;^[METHOD] writeDataDescriptor [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^728^^^^^723^734^[REPLACE] writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^[METHOD] writeDataDescriptor [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut (   entry.getCrc (  )   ) ;^728^^^^^723^734^[REPLACE] writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^[METHOD] writeDataDescriptor [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( ZipLong.getBytes ( entry.getName (  )  )  ) ;^728^^^^^723^734^[REPLACE] writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^[METHOD] writeDataDescriptor [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^728^729^^^^723^734^[ADD] writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ; writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^[METHOD] writeDataDescriptor [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;^729^^^^^723^734^[REPLACE] writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^[METHOD] writeDataDescriptor [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( ZipLong.getBytes ( entry .setCompressedSize (  )   )  ) ;^729^^^^^723^734^[REPLACE] writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^[METHOD] writeDataDescriptor [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^729^^^^^723^734^[ADD] writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^[METHOD] writeDataDescriptor [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^730^^^^^723^734^[REPLACE] writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^[METHOD] writeDataDescriptor [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( ZipLong.getBytes ( entry .setSize (  )   )  ) ;^730^^^^^723^734^[REPLACE] writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^[METHOD] writeDataDescriptor [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( ZipLong.getBytes ( entry.setSize (  )  )  ) ;^730^^^^^723^734^[REPLACE] writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^[METHOD] writeDataDescriptor [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^written += 16 - 3;^732^^^^^723^734^[REPLACE] written += 16;^[METHOD] writeDataDescriptor [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^732^^^^^723^734^[ADD] written += 16;^[METHOD] writeDataDescriptor [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( LFH_SIG ) ;^742^^^^^741^832^[REPLACE] writeOut ( CFH_SIG ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^written += SHORT; ;^743^^^^^741^832^[REPLACE] written += WORD;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  & 20 )  ) ;^747^^^^^741^832^[REPLACE] writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^747^748^^750^751^741^832^[ADD] writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ; written += SHORT; final int zipMethod = ze.getMethod (  ) ; final boolean encodable = zipEncoding.canEncode ( ze.getName (  )  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( ZipShort.getBytes (  ( ze .getMethod (  )   << 8 )  | 20 )  ) ;^747^^^^^741^832^[REPLACE] writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^written += length; ;^748^^^^^741^832^[REPLACE] written += SHORT;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^748^^^^^741^832^[ADD] written += SHORT;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^final int zipMethod = ze .setMethod ( fullblocks )  ;^750^^^^^741^832^[REPLACE] final int zipMethod = ze.getMethod (  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^final boolean encodable = zipEncoding.canEncode ( ze.getTime (  )  ) ;^751^^^^^741^832^[REPLACE] final boolean encodable = zipEncoding.canEncode ( ze.getName (  )  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^751^^^^^741^832^[ADD] final boolean encodable = zipEncoding.canEncode ( ze.getName (  )  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeVersionNeededToExtractAndGeneralPurposeBits ( zipMethod, encodable ;^752^753^754^^^741^832^[REPLACE] writeVersionNeededToExtractAndGeneralPurposeBits ( zipMethod, !encodable && fallbackToUTF8 ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^written += SHORT; ;^755^^^^^741^832^[REPLACE] written += WORD;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^755^^^^^741^832^[ADD] written += WORD;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( ZipShort.getBytes ( len )  ) ;^758^^^^^741^832^[REPLACE] writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut (   offset    ) ;^758^^^^^741^832^[REPLACE] writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^written += length; ;^759^^^^^741^832^[REPLACE] written += SHORT;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( ZipUtil .adjustToLong ( done )   ) ;^762^^^^^741^832^[REPLACE] writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( ZipUtil.adjustToLong ( ze.getTime (  )  )  ) ;^762^^^^^741^832^[REPLACE] writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( ZipUtil.toDosTime ( ze .setTime ( localDataStart )   )  ) ;^762^^^^^741^832^[REPLACE] writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REMOVE]^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^762^^^^^741^832^[REMOVE] ^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^written += SHORT; ;^763^^^^^741^832^[REPLACE] written += WORD;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^768^^^^^741^832^[REPLACE] writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( ZipLong.getBytes ( ze .setCrc ( realCrc )   )  ) ;^768^^^^^741^832^[REPLACE] writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( ZipLong.getBytes ( ze.getName (  )  )  ) ;^768^^^^^741^832^[REPLACE] writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut (   ze.getCompressedSize (  )   ) ;^769^^^^^741^832^[REPLACE] writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( ZipLong.getBytes ( ze.setCompressedSize (  )  )  ) ;^769^^^^^741^832^[REPLACE] writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^770^^^^^741^832^[REPLACE] writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( ZipLong.getBytes ( ze.setSize (  )  )  ) ;^770^^^^^741^832^[REPLACE] writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^written += 12 - 4;^772^^^^^741^832^[REPLACE] written += 12;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^final int zipMethod = ze.getMethod (  ) ;^776^^^^^741^832^[REPLACE] final ZipEncoding entryEncoding;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( true && fallbackToUTF8 )  {^778^^^^^741^832^[REPLACE] if  ( !encodable && fallbackToUTF8 )  {^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^entryEncoding = ZipEncodingHelper.UTF8_ZIP_ENCODING;entryEncoding = zipEncoding;^778^779^780^781^782^741^832^[ADD] if  ( !encodable && fallbackToUTF8 )  { entryEncoding = ZipEncodingHelper.UTF8_ZIP_ENCODING; } else { entryEncoding = zipEncoding; }^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^this.encoding = encoding; ;^781^^^^^778^782^[REPLACE] entryEncoding = zipEncoding;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^entryEncoding ;^779^^^^^741^832^[REPLACE] entryEncoding = ZipEncodingHelper.UTF8_ZIP_ENCODING;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^entryEncoding  = null ;^779^^^^^741^832^[REPLACE] entryEncoding = ZipEncodingHelper.UTF8_ZIP_ENCODING;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^this.encoding = encoding; ;^781^^^^^741^832^[REPLACE] entryEncoding = zipEncoding;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^781^^^^^741^832^[ADD] entryEncoding = zipEncoding;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^ByteBuffer name = zipEncoding.encode ( ze.getName (  )  ) ;^784^^^^^741^832^[REPLACE] ByteBuffer name = entryEncoding.encode ( ze.getName (  )  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut (   name.limit (  )   ) ;^786^^^^^741^832^[REPLACE] writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;^786^^^^^741^832^[REPLACE] writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REMOVE]^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^786^^^^^741^832^[REMOVE] ^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^written += length; ;^787^^^^^741^832^[REPLACE] written += SHORT;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^byte[] extra = ze.getLocalFileDataExtra (  ) ;^790^^^^^741^832^[REPLACE] byte[] extra = ze.getCentralDirectoryExtra (  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( ZipShort.getBytes ( ZERO.length )  ) ;^791^^^^^741^832^[REPLACE] writeOut ( ZipShort.getBytes ( extra.length )  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^written += length; ;^792^^^^^741^832^[REPLACE] written += SHORT;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^String comm = ze.getName (  ) ;^795^^^^^741^832^[REPLACE] String comm = ze.getComment (  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  (name != null )  {^796^^^^^741^832^[REPLACE] if  ( comm == null )  {^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^comm ;^797^^^^^741^832^[REPLACE] comm = "";^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^comm  =  comm ;^797^^^^^741^832^[REPLACE] comm = "";^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^ByteBuffer commentB = entryEncoding .canEncode (  )  ;^800^^^^^741^832^[REPLACE] ByteBuffer commentB = entryEncoding.encode ( comm ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^802^^^^^741^832^[REPLACE] writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^802^^^^^741^832^[ADD] writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^written += length; ;^803^^^^^741^832^[REPLACE] written += SHORT;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^803^^^^^741^832^[ADD] written += SHORT;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( LZERO ) ;^806^^^^^741^832^[REPLACE] writeOut ( ZERO ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^806^807^^^^741^832^[ADD] writeOut ( ZERO ) ; written += SHORT;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^written += length; ;^807^^^^^741^832^[REPLACE] written += SHORT;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( ZipLong.getBytes ( ze.getExternalAttributes (  )  )  ) ;^810^^^^^741^832^[REPLACE] writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^810^811^^^^741^832^[ADD] writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ; written += SHORT;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( ZipShort.getBytes ( ze .getExternalAttributes (  )   )  ) ;^810^^^^^741^832^[REPLACE] writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^written += length; ;^811^^^^^741^832^[REPLACE] written += SHORT;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^811^^^^^741^832^[ADD] written += SHORT;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( ZipLong.getBytes ( ze.getInternalAttributes (  )  )  ) ;^814^^^^^741^832^[REPLACE] writeOut ( ZipLong.getBytes ( ze.getExternalAttributes (  )  )  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut (   ze.getExternalAttributes (  )   ) ;^814^^^^^741^832^[REPLACE] writeOut ( ZipLong.getBytes ( ze.getExternalAttributes (  )  )  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REMOVE]^long realCrc = crc.getValue (  ) ;^814^^^^^741^832^[REMOVE] ^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^written += SHORT; ;^815^^^^^741^832^[REPLACE] written += WORD;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut (  ( byte[] )  offsets.clear ( ze )  ) ;^818^^^^^741^832^[REPLACE] writeOut (  ( byte[] )  offsets.get ( ze )  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^818^819^^^^741^832^[ADD] writeOut (  ( byte[] )  offsets.get ( ze )  ) ; written += WORD;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^written += SHORT; ;^819^^^^^741^832^[REPLACE] written += WORD;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^819^^^^^741^832^[ADD] written += WORD;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( commentB.array (  ) , name.arrayOffset (  ) , name.limit (  )  ) ;^822^^^^^741^832^[REPLACE] writeOut ( name.array (  ) , name.arrayOffset (  ) , name.limit (  )  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REMOVE]^raf.write ( data, offset, length ) ;^822^^^^^741^832^[REMOVE] ^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( name.arrayOffset (  ) , name.arrayOffset (  ) , name.limit (  )  ) ;^822^^^^^741^832^[REPLACE] writeOut ( name.array (  ) , name.arrayOffset (  ) , name.limit (  )  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^written += commentB.limit (  ) ; ;^823^^^^^741^832^[REPLACE] written += name.limit (  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( ZERO ) ;^826^^^^^741^832^[REPLACE] writeOut ( extra ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^written += length; ;^827^^^^^741^832^[REPLACE] written += extra.length;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( name.array (  ) , commentB.array (  ) , commentB.limit (  )  ) ;^830^^^^^741^832^[REPLACE] writeOut ( commentB.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^830^^^^^741^832^[ADD] writeOut ( commentB.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( name.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  ) ;^830^^^^^741^832^[REPLACE] writeOut ( commentB.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( commentB.array (  ) , commentB.array (  ) , commentB.limit (  )  ) ;^830^^^^^741^832^[REPLACE] writeOut ( commentB.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^written += name.limit (  ) ; ;^831^^^^^741^832^[REPLACE] written += commentB.limit (  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( DD_SIG ) ;^839^^^^^838^858^[REPLACE] writeOut ( EOCD_SIG ) ;^[METHOD] writeCentralDirectoryEnd [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer data  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( LZERO ) ;^842^^^^^838^858^[REPLACE] writeOut ( ZERO ) ;^[METHOD] writeCentralDirectoryEnd [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer data  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( LZERO ) ;^843^^^^^838^858^[REPLACE] writeOut ( ZERO ) ;^[METHOD] writeCentralDirectoryEnd [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer data  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^byte[] num = ZipShort.getBytes ( entries .iterator (  )   ) ;^846^^^^^838^858^[REPLACE] byte[] num = ZipShort.getBytes ( entries.size (  )  ) ;^[METHOD] writeCentralDirectoryEnd [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer data  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^846^847^^^^838^858^[ADD] byte[] num = ZipShort.getBytes ( entries.size (  )  ) ; writeOut ( num ) ;^[METHOD] writeCentralDirectoryEnd [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer data  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( buff ) ;^847^^^^^838^858^[REPLACE] writeOut ( num ) ;^[METHOD] writeCentralDirectoryEnd [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer data  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( buff ) ;^848^^^^^838^858^[REPLACE] writeOut ( num ) ;^[METHOD] writeCentralDirectoryEnd [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer data  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut (   cdLength    ) ;^851^^^^^838^858^[REPLACE] writeOut ( ZipLong.getBytes ( cdLength )  ) ;^[METHOD] writeCentralDirectoryEnd [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer data  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^851^852^^^^838^858^[ADD] writeOut ( ZipLong.getBytes ( cdLength )  ) ; writeOut ( ZipLong.getBytes ( cdOffset )  ) ;^[METHOD] writeCentralDirectoryEnd [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer data  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^851^^^^^838^858^[ADD] writeOut ( ZipLong.getBytes ( cdLength )  ) ;^[METHOD] writeCentralDirectoryEnd [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer data  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( ZipLong.getBytes ( cdLength )  ) ;^852^^^^^838^858^[REPLACE] writeOut ( ZipLong.getBytes ( cdOffset )  ) ;^[METHOD] writeCentralDirectoryEnd [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer data  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut (   cdOffset    ) ;^852^^^^^838^858^[REPLACE] writeOut ( ZipLong.getBytes ( cdOffset )  ) ;^[METHOD] writeCentralDirectoryEnd [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer data  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^ByteBuffer data = this.zipEncoding.canEncode ( comment ) ;^855^^^^^838^858^[REPLACE] ByteBuffer data = this.zipEncoding.encode ( comment ) ;^[METHOD] writeCentralDirectoryEnd [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer data  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^855^856^^^^838^858^[ADD] ByteBuffer data = this.zipEncoding.encode ( comment ) ; writeOut ( ZipShort.getBytes ( data.limit (  )  )  ) ;^[METHOD] writeCentralDirectoryEnd [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer data  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut (   data.limit (  )   ) ;^856^^^^^838^858^[REPLACE] writeOut ( ZipShort.getBytes ( data.limit (  )  )  ) ;^[METHOD] writeCentralDirectoryEnd [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer data  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^856^^^^^838^858^[REPLACE] writeOut ( ZipShort.getBytes ( data.limit (  )  )  ) ;^[METHOD] writeCentralDirectoryEnd [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer data  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( name.array (  ) , name.arrayOffset (  ) , name.limit (  )  ) ;^857^^^^^838^858^[REPLACE] writeOut ( data.array (  ) , data.arrayOffset (  ) , data.limit (  )  ) ;^[METHOD] writeCentralDirectoryEnd [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer data  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( data.arrayOffset (  ) , data.arrayOffset (  ) , data.limit (  )  ) ;^857^^^^^838^858^[REPLACE] writeOut ( data.array (  ) , data.arrayOffset (  ) , data.limit (  )  ) ;^[METHOD] writeCentralDirectoryEnd [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer data  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^857^^^^^838^858^[ADD] writeOut ( data.array (  ) , data.arrayOffset (  ) , data.limit (  )  ) ;^[METHOD] writeCentralDirectoryEnd [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer data  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( data.array (  ) , data .array (  )  , data.limit (  )  ) ;^857^^^^^838^858^[REPLACE] writeOut ( data.array (  ) , data.arrayOffset (  ) , data.limit (  )  ) ;^[METHOD] writeCentralDirectoryEnd [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer data  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( data, 0 , data.length ) ;^866^^^^^865^867^[REPLACE] writeOut ( data, 0, data.length ) ;^[METHOD] writeOut [TYPE] void [PARAMETER] byte[] data [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( raf ==_raf )  {^878^^^^^876^883^[REPLACE] if  ( raf != null )  {^[METHOD] writeOut [TYPE] void [PARAMETER] byte[] data int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^out.write ( data, level, length ) ;^881^^^^^876^883^[REPLACE] out.write ( data, offset, length ) ;^[METHOD] writeOut [TYPE] void [PARAMETER] byte[] data int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^881^^^^^876^883^[ADD] out.write ( data, offset, length ) ;^[METHOD] writeOut [TYPE] void [PARAMETER] byte[] data int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^raf .write ( WORD )  ;^879^^^^^876^883^[REPLACE] raf.write ( data, offset, length ) ;^[METHOD] writeOut [TYPE] void [PARAMETER] byte[] data int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^crc.reset (  ) ;^887^^^^^885^889^[REPLACE] deflate (  ) ;^[METHOD] deflateUntilInputIsNeeded [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^int versionNeededToExtract = 5;^898^^^^^891^913^[REPLACE] int versionNeededToExtract = 10;^[METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [TYPE] void [PARAMETER] final int zipMethod final boolean utfFallback [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  utfFallback  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^int generalPurposeFlag  =  0;^899^^^^^891^913^[REPLACE] int generalPurposeFlag =  ( useEFS || utfFallback )  ? EFS_FLAG : 0;^[METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [TYPE] void [PARAMETER] final int zipMethod final boolean utfFallback [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  utfFallback  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  (  raf == true )  {^900^^^^^891^913^[REPLACE] if  ( zipMethod == DEFLATED && raf == null )  {^[METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [TYPE] void [PARAMETER] final int zipMethod final boolean utfFallback [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  utfFallback  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^versionNeededToExtract =  19;^903^^^^^891^913^[REPLACE] versionNeededToExtract =  20;^[METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [TYPE] void [PARAMETER] final int zipMethod final boolean utfFallback [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  utfFallback  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^generalPurposeFlag |= 6;^905^^^^^891^913^[REPLACE] generalPurposeFlag |= 8;^[METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [TYPE] void [PARAMETER] final int zipMethod final boolean utfFallback [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  utfFallback  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^905^^^^^891^913^[ADD] generalPurposeFlag |= 8;^[METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [TYPE] void [PARAMETER] final int zipMethod final boolean utfFallback [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  utfFallback  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^versionNeededToExtract =  3;^903^^^^^891^913^[REPLACE] versionNeededToExtract =  20;^[METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [TYPE] void [PARAMETER] final int zipMethod final boolean utfFallback [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  utfFallback  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^generalPurposeFlag |= 7;^905^^^^^891^913^[REPLACE] generalPurposeFlag |= 8;^[METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [TYPE] void [PARAMETER] final int zipMethod final boolean utfFallback [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  utfFallback  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( ZipShort.getBytes ( length )  ) ;^910^^^^^891^913^[REPLACE] writeOut ( ZipShort.getBytes ( versionNeededToExtract )  ) ;^[METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [TYPE] void [PARAMETER] final int zipMethod final boolean utfFallback [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  utfFallback  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( ZipShort.getBytes ( generalPurposeFlag )  ) ;^910^^^^^891^913^[REPLACE] writeOut ( ZipShort.getBytes ( versionNeededToExtract )  ) ;^[METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [TYPE] void [PARAMETER] final int zipMethod final boolean utfFallback [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  utfFallback  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut (   len    ) ;^912^^^^^891^913^[REPLACE] writeOut ( ZipShort.getBytes ( generalPurposeFlag )  ) ;^[METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [TYPE] void [PARAMETER] final int zipMethod final boolean utfFallback [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  utfFallback  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut (   fullblocks    ) ;^912^^^^^891^913^[REPLACE] writeOut ( ZipShort.getBytes ( generalPurposeFlag )  ) ;^[METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [TYPE] void [PARAMETER] final int zipMethod final boolean utfFallback [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  utfFallback  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^912^^^^^891^913^[ADD] writeOut ( ZipShort.getBytes ( generalPurposeFlag )  ) ;^[METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [TYPE] void [PARAMETER] final int zipMethod final boolean utfFallback [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  utfFallback  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^return;^942^^^^^941^943^[REPLACE] return name;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  utfFallback  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^public static  UnicodeExtraFieldPolicy ALWAYS = new UnicodeExtraFieldPolicy ( "always" ) ;^923^924^^^^923^924^[REPLACE] public static final UnicodeExtraFieldPolicy ALWAYS = new UnicodeExtraFieldPolicy ( "always" ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  utfFallback  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^public static final UnicodeExtraFieldPolicy NEVER ;^928^929^^^^928^929^[REPLACE] public static final UnicodeExtraFieldPolicy NEVER = new UnicodeExtraFieldPolicy ( "never" ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  utfFallback  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^public static final UnicodeExtraFieldPolicy NOT_ENCODEABLE ;^934^935^^^^934^935^[REPLACE] public static final UnicodeExtraFieldPolicy NOT_ENCODEABLE = new UnicodeExtraFieldPolicy ( "not encodeable" ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  utfFallback  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^private final  short  name;^937^^^^^^^[REPLACE] private final String name;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  utfFallback  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^name =  null;^939^^^^^938^940^[REPLACE] name = n;^[METHOD] <init> [TYPE] String) [PARAMETER] String n [CLASS] UnicodeExtraFieldPolicy   [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  [TYPE]  String n  name  [TYPE]  boolean false  true 
