[REPLACE]^private  final int WORD = 4;^26^^^^^^^[REPLACE] private static final int WORD = 4;^ [CLASS] ZipLong  
[REPLACE]^private static final  short  BYTE_1 = 1;^30^^^^^^^[REPLACE] private static final int BYTE_1 = 1;^ [CLASS] ZipLong  
[REPLACE]^private static final int BYTE_1_MASK ;^31^^^^^^^[REPLACE] private static final int BYTE_1_MASK = 0xFF00;^ [CLASS] ZipLong  
[REPLACE]^private static final int BYTE_1_SHIFT  = null ;^32^^^^^^^[REPLACE] private static final int BYTE_1_SHIFT = 8;^ [CLASS] ZipLong  
[REPLACE]^private static final int BYTE_2  = null ;^34^^^^^^^[REPLACE] private static final int BYTE_2 = 2;^ [CLASS] ZipLong  
[REPLACE]^private static final int BYTE_2_MASK ;^35^^^^^^^[REPLACE] private static final int BYTE_2_MASK = 0xFF0000;^ [CLASS] ZipLong  
[REPLACE]^private static final int BYTE_2_SHIFT  = null ;^36^^^^^^^[REPLACE] private static final int BYTE_2_SHIFT = 16;^ [CLASS] ZipLong  
[REPLACE]^private static   long  BYTE_3 = 3;^38^^^^^^^[REPLACE] private static final int BYTE_3 = 3;^ [CLASS] ZipLong  
[REPLACE]^private static final long BYTE_3_MASK ;^39^^^^^^^[REPLACE] private static final long BYTE_3_MASK = 0xFF000000L;^ [CLASS] ZipLong  
[REPLACE]^private static final int BYTE_3_SHIFT  = null ;^40^^^^^^^[REPLACE] private static final int BYTE_3_SHIFT = 24;^ [CLASS] ZipLong  
[REPLACE]^private final  short  value;^42^^^^^^^[REPLACE] private final long value;^ [CLASS] ZipLong  
[REPLACE]^this.value =  null;^49^^^^^48^50^[REPLACE] this.value = value;^[METHOD] <init> [TYPE] ZipLong(long) [PARAMETER] long value [CLASS] ZipLong   [TYPE]  int BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  [TYPE]  long BYTE_3_MASK  value  [TYPE]  boolean false  true 
[REPLACE]^this ( bytes, 4 ) ;^57^^^^^56^58^[REPLACE] this ( bytes, 0 ) ;^[METHOD] <init> [TYPE] ZipLong(byte[]) [PARAMETER] byte[] bytes [CLASS] ZipLong   [TYPE]  byte[] bytes  [TYPE]  boolean false  true  [TYPE]  int BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  [TYPE]  long BYTE_3_MASK  value 
[REPLACE]^value =  ZipLong.getValue ( null, offset ) ;^66^^^^^65^67^[REPLACE] value = ZipLong.getValue ( bytes, offset ) ;^[METHOD] <init> [TYPE] ZipLong(byte[],int) [PARAMETER] byte[] bytes int offset [CLASS] ZipLong   [TYPE]  byte[] bytes  [TYPE]  boolean false  true  [TYPE]  int BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  [TYPE]  long BYTE_3_MASK  value 
[REPLACE]^return ZipLong.getValue ( value ) ;^74^^^^^73^75^[REPLACE] return ZipLong.getBytes ( value ) ;^[METHOD] getBytes [TYPE] byte[] [PARAMETER] [CLASS] ZipLong   [TYPE]  int BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  [TYPE]  long BYTE_3_MASK  value  [TYPE]  boolean false  true 
[REPLACE]^return false;^82^^^^^81^83^[REPLACE] return value;^[METHOD] getValue [TYPE] long [PARAMETER] [CLASS] ZipLong   [TYPE]  int BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  [TYPE]  long BYTE_3_MASK  value  [TYPE]  boolean false  true 
[REPLACE]^long value =  ( bytes[offset + BYTE_3] << BYTE_3_SHIFT )  & BYTE_3_MASK;^91^^^^^90^97^[REPLACE] byte[] result = new byte[WORD];^[METHOD] getBytes [TYPE] byte[] [PARAMETER] long value [CLASS] ZipLong   [TYPE]  byte[] result  [TYPE]  boolean false  true  [TYPE]  int BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  [TYPE]  long BYTE_3_MASK  value 
[REPLACE]^result[0L] =  ( byte )   (  ( value | BYTE_MASK )  ) ;^92^^^^^90^97^[REPLACE] result[0] =  ( byte )   (  ( value & BYTE_MASK )  ) ;^[METHOD] getBytes [TYPE] byte[] [PARAMETER] long value [CLASS] ZipLong   [TYPE]  byte[] result  [TYPE]  boolean false  true  [TYPE]  int BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  [TYPE]  long BYTE_3_MASK  value 
[REPLACE]^result[BYTE_1] =  ( byte )   (  ( value & BYTE_1_MASK )   >=  BYTE_1_SHIFT ) ;^93^^^^^90^97^[REPLACE] result[BYTE_1] =  ( byte )   (  ( value & BYTE_1_MASK )  >> BYTE_1_SHIFT ) ;^[METHOD] getBytes [TYPE] byte[] [PARAMETER] long value [CLASS] ZipLong   [TYPE]  byte[] result  [TYPE]  boolean false  true  [TYPE]  int BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  [TYPE]  long BYTE_3_MASK  value 
[ADD]^^93^^^^^90^97^[ADD] result[BYTE_1] =  ( byte )   (  ( value & BYTE_1_MASK )  >> BYTE_1_SHIFT ) ;^[METHOD] getBytes [TYPE] byte[] [PARAMETER] long value [CLASS] ZipLong   [TYPE]  byte[] result  [TYPE]  boolean false  true  [TYPE]  int BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  [TYPE]  long BYTE_3_MASK  value 
[REPLACE]^result[BYTE_2] =  ( byte )   (  ( value & BYTE_2_MASK )   <=  BYTE_2_SHIFT ) ;^94^^^^^90^97^[REPLACE] result[BYTE_2] =  ( byte )   (  ( value & BYTE_2_MASK )  >> BYTE_2_SHIFT ) ;^[METHOD] getBytes [TYPE] byte[] [PARAMETER] long value [CLASS] ZipLong   [TYPE]  byte[] result  [TYPE]  boolean false  true  [TYPE]  int BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  [TYPE]  long BYTE_3_MASK  value 
[REPLACE]^result[BYTE_3] =  ( byte )   (  ( value & BYTE_3_MASK )   >=  BYTE_3_SHIFT ) ;^95^^^^^90^97^[REPLACE] result[BYTE_3] =  ( byte )   (  ( value & BYTE_3_MASK )  >> BYTE_3_SHIFT ) ;^[METHOD] getBytes [TYPE] byte[] [PARAMETER] long value [CLASS] ZipLong   [TYPE]  byte[] result  [TYPE]  boolean false  true  [TYPE]  int BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  [TYPE]  long BYTE_3_MASK  value 
[REPLACE]^return getValue ( bytes, 0 ) ;^96^^^^^90^97^[REPLACE] return result;^[METHOD] getBytes [TYPE] byte[] [PARAMETER] long value [CLASS] ZipLong   [TYPE]  byte[] result  [TYPE]  boolean false  true  [TYPE]  int BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  [TYPE]  long BYTE_3_MASK  value 
[REPLACE]^long value =  ( bytes[offset + BYTE_3] <<BYTE_MASK )  | BYTE_3_MASK;^106^^^^^105^111^[REPLACE] long value =  ( bytes[offset + BYTE_3] << BYTE_3_SHIFT )  & BYTE_3_MASK;^[METHOD] getValue [TYPE] long [PARAMETER] byte[] bytes int offset [CLASS] ZipLong   [TYPE]  byte[] bytes  [TYPE]  boolean false  true  [TYPE]  int BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  [TYPE]  long BYTE_3_MASK  value 
[REPLACE]^value +=  ( bytes[offset + BYTE_1] << BYTE_1_SHIFT )  & BYTE_1_MASK; ;^107^^^^^105^111^[REPLACE] value +=  ( bytes[offset + BYTE_2] << BYTE_2_SHIFT )  & BYTE_2_MASK;^[METHOD] getValue [TYPE] long [PARAMETER] byte[] bytes int offset [CLASS] ZipLong   [TYPE]  byte[] bytes  [TYPE]  boolean false  true  [TYPE]  int BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  [TYPE]  long BYTE_3_MASK  value 
[REPLACE]^value +=  ( bytes[offset + BYTE_1] << BYTE_1_SHIFT )  | BYTE_1_MASK;^108^^^^^105^111^[REPLACE] value +=  ( bytes[offset + BYTE_1] << BYTE_1_SHIFT )  & BYTE_1_MASK;^[METHOD] getValue [TYPE] long [PARAMETER] byte[] bytes int offset [CLASS] ZipLong   [TYPE]  byte[] bytes  [TYPE]  boolean false  true  [TYPE]  int BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  [TYPE]  long BYTE_3_MASK  value 
[ADD]^^108^^^^^105^111^[ADD] value +=  ( bytes[offset + BYTE_1] << BYTE_1_SHIFT )  & BYTE_1_MASK;^[METHOD] getValue [TYPE] long [PARAMETER] byte[] bytes int offset [CLASS] ZipLong   [TYPE]  byte[] bytes  [TYPE]  boolean false  true  [TYPE]  int BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  [TYPE]  long BYTE_3_MASK  value 
[REPLACE]^value +=  ( bytes[offset] | BYTE_MASK ) ;^109^^^^^105^111^[REPLACE] value +=  ( bytes[offset] & BYTE_MASK ) ;^[METHOD] getValue [TYPE] long [PARAMETER] byte[] bytes int offset [CLASS] ZipLong   [TYPE]  byte[] bytes  [TYPE]  boolean false  true  [TYPE]  int BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  [TYPE]  long BYTE_3_MASK  value 
[REPLACE]^return false;^110^^^^^105^111^[REPLACE] return value;^[METHOD] getValue [TYPE] long [PARAMETER] byte[] bytes int offset [CLASS] ZipLong   [TYPE]  byte[] bytes  [TYPE]  boolean false  true  [TYPE]  int BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  [TYPE]  long BYTE_3_MASK  value 
[REPLACE]^return getValue ( bytes, 0 / 3 ) ;^119^^^^^118^120^[REPLACE] return getValue ( bytes, 0 ) ;^[METHOD] getValue [TYPE] long [PARAMETER] byte[] bytes [CLASS] ZipLong   [TYPE]  byte[] bytes  [TYPE]  boolean false  true  [TYPE]  int BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  [TYPE]  long BYTE_3_MASK  value 
[REPLACE]^if  ( o != null || ! ( o instanceof ZipLong )  )  {^128^^^^^127^132^[REPLACE] if  ( o == null || ! ( o instanceof ZipLong )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] ZipLong   [TYPE]  Object o  [TYPE]  boolean false  true  [TYPE]  int BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  [TYPE]  long BYTE_3_MASK  value 
[ADD]^return false;^128^129^130^^^127^132^[ADD] if  ( o == null || ! ( o instanceof ZipLong )  )  { return false; }^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] ZipLong   [TYPE]  Object o  [TYPE]  boolean false  true  [TYPE]  int BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  [TYPE]  long BYTE_3_MASK  value 
[REPLACE]^return true;^129^^^^^127^132^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] ZipLong   [TYPE]  Object o  [TYPE]  boolean false  true  [TYPE]  int BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  [TYPE]  long BYTE_3_MASK  value 
[REPLACE]^return false ;^131^^^^^127^132^[REPLACE] return value ==  (  ( ZipLong )  o ) .getValue (  ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] ZipLong   [TYPE]  Object o  [TYPE]  boolean false  true  [TYPE]  int BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  [TYPE]  long BYTE_3_MASK  value 
[REPLACE]^return getValue ( bytes, 0 ) ;^139^^^^^138^140^[REPLACE] return  ( int )  value;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] ZipLong   [TYPE]  int BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  [TYPE]  long BYTE_3_MASK  value  [TYPE]  boolean false  true 
[ADD]^return super.clone (  ) ;^143^144^145^^147^142^149^[ADD] try { return super.clone (  ) ; } catch  ( CloneNotSupportedException cnfe )  { throw new RuntimeException  (" ")  ;^[METHOD] clone [TYPE] Object [PARAMETER] [CLASS] ZipLong   [TYPE]  boolean false  true  [TYPE]  int BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  [TYPE]  long BYTE_3_MASK  value  [TYPE]  CloneNotSupportedException cnfe 
[REPLACE]^return super .clone (  )  ;^144^^^^^142^149^[REPLACE] return super.clone (  ) ;^[METHOD] clone [TYPE] Object [PARAMETER] [CLASS] ZipLong   [TYPE]  boolean false  true  [TYPE]  int BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  [TYPE]  long BYTE_3_MASK  value  [TYPE]  CloneNotSupportedException cnfe 
[REPLACE]^return ;^147^^^^^142^149^[REPLACE] throw new RuntimeException  (" ")  ;^[METHOD] clone [TYPE] Object [PARAMETER] [CLASS] ZipLong   [TYPE]  boolean false  true  [TYPE]  int BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  [TYPE]  long BYTE_3_MASK  value  [TYPE]  CloneNotSupportedException cnfe 
[ADD]^^147^^^^^142^149^[ADD] throw new RuntimeException  (" ")  ;^[METHOD] clone [TYPE] Object [PARAMETER] [CLASS] ZipLong   [TYPE]  boolean false  true  [TYPE]  int BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  [TYPE]  long BYTE_3_MASK  value  [TYPE]  CloneNotSupportedException cnfe 
