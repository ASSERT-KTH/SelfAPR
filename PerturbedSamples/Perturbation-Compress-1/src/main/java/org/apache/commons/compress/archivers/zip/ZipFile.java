[REPLACE]^private static final int HASH_SIZE  = null ;^62^^^^^^^[REPLACE] private static final int HASH_SIZE = 509;^ [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  
[REPLACE]^private static  int SHORT     =   2;^63^^^^^^^[REPLACE] private static final int SHORT     =   2;^ [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  
[REPLACE]^private static final int WORD      =   1;^64^^^^^^^[REPLACE] private static final int WORD      =   4;^ [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  
[REPLACE]^private static final  long  BYTE_SHIFT = 4;^66^^^^^^^[REPLACE] private static final int BYTE_SHIFT = 8;^ [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  
[REPLACE]^private static final int POS_0  = null ;^67^^^^^^^[REPLACE] private static final int POS_0 = 0;^ [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  
[REPLACE]^private static final int POS_1 ;^68^^^^^^^[REPLACE] private static final int POS_1 = 1;^ [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  
[REPLACE]^private static final int POS_2  = null ;^69^^^^^^^[REPLACE] private static final int POS_2 = 2;^ [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  
[REPLACE]^private static final int POS_4 = 4;^70^^^^^^^[REPLACE] private static final int POS_3 = 3;^ [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  
[REPLACE]^private final Map entries ;^76^^^^^^^[REPLACE] private final Map entries = new HashMap ( HASH_SIZE ) ;^ [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  
[REPLACE]^private  Map nameMap = new HashMap ( HASH_SIZE ) ;^81^^^^^^^[REPLACE] private final Map nameMap = new HashMap ( HASH_SIZE ) ;^ [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  
[REPLACE]^private long headerOffset ;^84^^^^^^^[REPLACE] private long headerOffset = -1;^ [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  
[REPLACE]^private long dataOffset = -4;^85^^^^^^^[REPLACE] private long dataOffset = -1;^ [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  
[REPLACE]^private  String encoding;^95^^^^^^^[REPLACE] private final String encoding;^ [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  
[REPLACE]^private  ZipEncoding zipEncoding;^100^^^^^^^[REPLACE] private final ZipEncoding zipEncoding;^ [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  
[REPLACE]^private  RandomAccessFile archive;^105^^^^^^^[REPLACE] private final RandomAccessFile archive;^ [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  
[REPLACE]^private static final  long  CFH_LEN =^276^277^278^279^^276^292^[REPLACE] private static final int CFH_LEN =^ [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  
[REPLACE]^private static final int MIN_EOCD_SIZE ;^407^408^409^410^^407^420^[REPLACE] private static final int MIN_EOCD_SIZE =^ [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  
[REPLACE]^private static final int MAX_EOCD_SIZE  = null ;^422^423^424^425^^422^423^[REPLACE] private static final int MAX_EOCD_SIZE = MIN_EOCD_SIZE   private static final int CFD_LOCATOR_OFFSET =^ [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  
[REPLACE]^private static final int CFD_LOCATOR_OFFSET  = null ;^425^426^427^428^^425^434^[REPLACE] private static final int CFD_LOCATOR_OFFSET =^ [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  
[REPLACE]^private  final long LFH_OFFSET_FOR_FILENAME_LENGTH =^481^482^483^484^^481^490^[REPLACE] private static final long LFH_OFFSET_FOR_FILENAME_LENGTH =^ [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  
[REPLACE]^private boolean addDummyByte ;^621^^^^^^^[REPLACE] private boolean addDummyByte = false;^ [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  
[REPLACE]^private  byte[] name;^681^^^^^^^[REPLACE] private final byte[] name;^ [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  
[REPLACE]^private  byte[] comment;^682^^^^^^^[REPLACE] private final byte[] comment;^ [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment  
[REPLACE]^this.zipEncoding = ZipEncodingHelper.getZipEncoding ( encoding ) ;^120^^^^^119^121^[REPLACE] this ( f, ZipEncodingHelper.UTF8 ) ;^[METHOD] <init> [TYPE] File) [PARAMETER] File f [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] comment  name  [TYPE]  boolean addDummyByte  false  true  useUnicodeExtraFields  [TYPE]  ZipEncoding zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  [TYPE]  Map entries  nameMap  [TYPE]  File f  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining 
[ADD]^^120^^^^^119^121^[ADD] this ( f, ZipEncodingHelper.UTF8 ) ;^[METHOD] <init> [TYPE] File) [PARAMETER] File f [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] comment  name  [TYPE]  boolean addDummyByte  false  true  useUnicodeExtraFields  [TYPE]  ZipEncoding zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  [TYPE]  Map entries  nameMap  [TYPE]  File f  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining 
[REPLACE]^this ( new File ( encoding ) , ZipEncodingHelper.UTF8 ) ;^131^^^^^130^132^[REPLACE] this ( new File ( name ) , ZipEncodingHelper.UTF8 ) ;^[METHOD] <init> [TYPE] String) [PARAMETER] String name [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] comment  name  [TYPE]  boolean addDummyByte  false  true  useUnicodeExtraFields  [TYPE]  ZipEncoding zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining 
[REPLACE]^this ( new File ( name ) , encoding, false ) ;^145^^^^^144^146^[REPLACE] this ( new File ( name ) , encoding, true ) ;^[METHOD] <init> [TYPE] String) [PARAMETER] String name String encoding [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] comment  name  [TYPE]  boolean addDummyByte  false  true  useUnicodeExtraFields  [TYPE]  ZipEncoding zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining 
[ADD]^^145^^^^^144^146^[ADD] this ( new File ( name ) , encoding, true ) ;^[METHOD] <init> [TYPE] String) [PARAMETER] String name String encoding [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] comment  name  [TYPE]  boolean addDummyByte  false  true  useUnicodeExtraFields  [TYPE]  ZipEncoding zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining 
[REPLACE]^this ( f, encoding, false ) ;^159^^^^^158^160^[REPLACE] this ( f, encoding, true ) ;^[METHOD] <init> [TYPE] String) [PARAMETER] File f String encoding [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] comment  name  [TYPE]  boolean addDummyByte  false  true  useUnicodeExtraFields  [TYPE]  ZipEncoding zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  nameMap  [TYPE]  File f  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining 
[REPLACE]^this.encoding =  name;^176^^^^^174^194^[REPLACE] this.encoding = encoding;^[METHOD] <init> [TYPE] String,boolean) [PARAMETER] File f String encoding boolean useUnicodeExtraFields [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] comment  name  [TYPE]  boolean addDummyByte  false  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  IOException e2  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  File f  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining 
[ADD]^^176^177^^^^174^194^[ADD] this.encoding = encoding; this.zipEncoding = ZipEncodingHelper.getZipEncoding ( encoding ) ;^[METHOD] <init> [TYPE] String,boolean) [PARAMETER] File f String encoding boolean useUnicodeExtraFields [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] comment  name  [TYPE]  boolean addDummyByte  false  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  IOException e2  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  File f  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining 
[REPLACE]^this.zipEncoding =  ZipEncodingHelper.getZipEncoding ( name ) ;^177^^^^^174^194^[REPLACE] this.zipEncoding = ZipEncodingHelper.getZipEncoding ( encoding ) ;^[METHOD] <init> [TYPE] String,boolean) [PARAMETER] File f String encoding boolean useUnicodeExtraFields [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] comment  name  [TYPE]  boolean addDummyByte  false  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  IOException e2  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  File f  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining 
[REPLACE]^this.useUnicodeExtraFields =  true;^178^^^^^174^194^[REPLACE] this.useUnicodeExtraFields = useUnicodeExtraFields;^[METHOD] <init> [TYPE] String,boolean) [PARAMETER] File f String encoding boolean useUnicodeExtraFields [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] comment  name  [TYPE]  boolean addDummyByte  false  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  IOException e2  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  File f  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining 
[REPLACE]^archive =  new RandomAccessFile ( null, "r" ) ;^179^^^^^174^194^[REPLACE] archive = new RandomAccessFile ( f, "r" ) ;^[METHOD] <init> [TYPE] String,boolean) [PARAMETER] File f String encoding boolean useUnicodeExtraFields [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] comment  name  [TYPE]  boolean addDummyByte  false  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  IOException e2  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  File f  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining 
[REPLACE]^boolean success = true;^180^^^^^174^194^[REPLACE] boolean success = false;^[METHOD] <init> [TYPE] String,boolean) [PARAMETER] File f String encoding boolean useUnicodeExtraFields [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] comment  name  [TYPE]  boolean addDummyByte  false  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  IOException e2  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  File f  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining 
[REPLACE]^if  ( !useUnicodeExtraFields )  {^186^^^^^174^194^[REPLACE] if  ( !success )  {^[METHOD] <init> [TYPE] String,boolean) [PARAMETER] File f String encoding boolean useUnicodeExtraFields [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] comment  name  [TYPE]  boolean addDummyByte  false  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  IOException e2  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  File f  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining 
[ADD]^^186^187^188^189^^174^194^[ADD] if  ( !success )  { try { archive.close (  ) ; } catch  ( IOException e2 )  {^[METHOD] <init> [TYPE] String,boolean) [PARAMETER] File f String encoding boolean useUnicodeExtraFields [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] comment  name  [TYPE]  boolean addDummyByte  false  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  IOException e2  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  File f  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining 
[ADD]^archive.close (  ) ;^187^188^189^^191^174^194^[ADD] try { archive.close (  ) ; } catch  ( IOException e2 )  { }^[METHOD] <init> [TYPE] String,boolean) [PARAMETER] File f String encoding boolean useUnicodeExtraFields [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] comment  name  [TYPE]  boolean addDummyByte  false  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  IOException e2  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  File f  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining 
[REPLACE]^archive.read (  ) ;^188^^^^^174^194^[REPLACE] archive.close (  ) ;^[METHOD] <init> [TYPE] String,boolean) [PARAMETER] File f String encoding boolean useUnicodeExtraFields [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] comment  name  [TYPE]  boolean addDummyByte  false  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  IOException e2  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  File f  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining 
[ADD]^Map entriesWithoutEFS = populateFromCentralDirectory (  ) ;resolveLocalFileHeaderData ( entriesWithoutEFS ) ;success = true;^181^182^183^184^185^174^194^[ADD] try { Map entriesWithoutEFS = populateFromCentralDirectory (  ) ; resolveLocalFileHeaderData ( entriesWithoutEFS ) ; success = true; } finally {^[METHOD] <init> [TYPE] String,boolean) [PARAMETER] File f String encoding boolean useUnicodeExtraFields [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] comment  name  [TYPE]  boolean addDummyByte  false  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  IOException e2  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  File f  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining 
[REPLACE]^success = false;^184^^^^^174^194^[REPLACE] success = true;^[METHOD] <init> [TYPE] String,boolean) [PARAMETER] File f String encoding boolean useUnicodeExtraFields [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] comment  name  [TYPE]  boolean addDummyByte  false  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  IOException e2  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  File f  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining 
[REPLACE]^OffsetEntry offset = new OffsetEntry (  ) ;^182^^^^^174^194^[REPLACE] Map entriesWithoutEFS = populateFromCentralDirectory (  ) ;^[METHOD] <init> [TYPE] String,boolean) [PARAMETER] File f String encoding boolean useUnicodeExtraFields [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] comment  name  [TYPE]  boolean addDummyByte  false  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  IOException e2  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  File f  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining 
[ADD]^^182^183^^^^174^194^[ADD] Map entriesWithoutEFS = populateFromCentralDirectory (  ) ; resolveLocalFileHeaderData ( entriesWithoutEFS ) ;^[METHOD] <init> [TYPE] String,boolean) [PARAMETER] File f String encoding boolean useUnicodeExtraFields [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] comment  name  [TYPE]  boolean addDummyByte  false  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  IOException e2  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  File f  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining 
[ADD]^^189^190^191^^^174^194^[ADD] catch  ( IOException e2 )  {  }^[METHOD] <init> [TYPE] String,boolean) [PARAMETER] File f String encoding boolean useUnicodeExtraFields [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] comment  name  [TYPE]  boolean addDummyByte  false  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  IOException e2  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  File f  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining 
[REPLACE]^this.remaining =  start;^624^^^^^623^626^[REPLACE] this.remaining = remaining;^[METHOD] <init> [TYPE] ZipFile$BoundedInputStream(long,long) [PARAMETER] long start long remaining [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] comment  name  [TYPE]  boolean addDummyByte  false  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start 
[REPLACE]^loc =  remaining;^625^^^^^623^626^[REPLACE] loc = start;^[METHOD] <init> [TYPE] ZipFile$BoundedInputStream(long,long) [PARAMETER] long start long remaining [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] comment  name  [TYPE]  boolean addDummyByte  false  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start 
[ADD]^^625^^^^^623^626^[ADD] loc = start;^[METHOD] <init> [TYPE] ZipFile$BoundedInputStream(long,long) [PARAMETER] long start long remaining [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] comment  name  [TYPE]  boolean addDummyByte  false  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start 
[REPLACE]^this.name =  comment;^684^^^^^683^686^[REPLACE] this.name = name;^[METHOD] <init> [TYPE] ZipFile$NameAndComment(byte[],byte[]) [PARAMETER] byte[] name byte[] comment [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] comment  name  [TYPE]  boolean addDummyByte  false  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start 
[REPLACE]^this.comment =  name;^685^^^^^683^686^[REPLACE] this.comment = comment;^[METHOD] <init> [TYPE] ZipFile$NameAndComment(byte[],byte[]) [PARAMETER] byte[] name byte[] comment [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] comment  name  [TYPE]  boolean addDummyByte  false  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start 
[ADD]^^685^^^^^683^686^[ADD] this.comment = comment;^[METHOD] <init> [TYPE] ZipFile$NameAndComment(byte[],byte[]) [PARAMETER] byte[] name byte[] comment [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] comment  name  [TYPE]  boolean addDummyByte  false  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start 
[REPLACE]^return noEFS;^202^^^^^201^203^[REPLACE] return encoding;^[METHOD] getEncoding [TYPE] String [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] comment  name  [TYPE]  boolean addDummyByte  false  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start 
[REPLACE]^archive.read (  ) ;^210^^^^^209^211^[REPLACE] archive.close (  ) ;^[METHOD] close [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] comment  name  [TYPE]  boolean addDummyByte  false  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start 
[REPLACE]^if  ( zipfile == null )  {^219^^^^^218^226^[REPLACE] if  ( zipfile != null )  {^[METHOD] closeQuietly [TYPE] void [PARAMETER] ZipFile zipfile [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] comment  name  [TYPE]  boolean addDummyByte  false  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  ZipFile zipfile  [TYPE]  String encoding  name  [TYPE]  IOException e  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start 
[ADD]^zipfile.close (  ) ;^220^221^222^^224^218^226^[ADD] try { zipfile.close (  ) ; } catch  ( IOException e )  { }^[METHOD] closeQuietly [TYPE] void [PARAMETER] ZipFile zipfile [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] comment  name  [TYPE]  boolean addDummyByte  false  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  ZipFile zipfile  [TYPE]  String encoding  name  [TYPE]  IOException e  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start 
[REPLACE]^zipfile.getEntries (  ) ;^221^^^^^218^226^[REPLACE] zipfile.close (  ) ;^[METHOD] closeQuietly [TYPE] void [PARAMETER] ZipFile zipfile [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] comment  name  [TYPE]  boolean addDummyByte  false  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  ZipFile zipfile  [TYPE]  String encoding  name  [TYPE]  IOException e  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start 
[ADD]^^221^^^^^218^226^[ADD] zipfile.close (  ) ;^[METHOD] closeQuietly [TYPE] void [PARAMETER] ZipFile zipfile [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] comment  name  [TYPE]  boolean addDummyByte  false  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  ZipFile zipfile  [TYPE]  String encoding  name  [TYPE]  IOException e  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start 
[REPLACE]^return   entries.keySet (  )  ;^233^^^^^232^234^[REPLACE] return Collections.enumeration ( entries.keySet (  )  ) ;^[METHOD] getEntries [TYPE] Enumeration [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] comment  name  [TYPE]  boolean addDummyByte  false  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start 
[REPLACE]^return  ( ZipArchiveEntry )  nameMap.keySet ( name ) ;^244^^^^^243^245^[REPLACE] return  ( ZipArchiveEntry )  nameMap.get ( name ) ;^[METHOD] getEntry [TYPE] ZipArchiveEntry [PARAMETER] String name [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] comment  name  [TYPE]  boolean addDummyByte  false  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start 
[REPLACE]^OffsetEntry offsetEntry =  ( OffsetEntry )  entries.keySet ( ze ) ;^257^^^^^255^274^[REPLACE] OffsetEntry offsetEntry =  ( OffsetEntry )  entries.get ( ze ) ;^[METHOD] getInputStream [TYPE] InputStream [PARAMETER] ZipArchiveEntry ze [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] comment  name  [TYPE]  boolean addDummyByte  false  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  OffsetEntry offsetEntry  [TYPE]  BoundedInputStream bis  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start 
[REPLACE]^if  ( offsetEntry != false )  {^258^^^^^255^274^[REPLACE] if  ( offsetEntry == null )  {^[METHOD] getInputStream [TYPE] InputStream [PARAMETER] ZipArchiveEntry ze [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] comment  name  [TYPE]  boolean addDummyByte  false  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  OffsetEntry offsetEntry  [TYPE]  BoundedInputStream bis  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start 
[REPLACE]^return this;^259^^^^^255^274^[REPLACE] return null;^[METHOD] getInputStream [TYPE] InputStream [PARAMETER] ZipArchiveEntry ze [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] comment  name  [TYPE]  boolean addDummyByte  false  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  OffsetEntry offsetEntry  [TYPE]  BoundedInputStream bis  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start 
[REPLACE]^return true;^259^^^^^255^274^[REPLACE] return null;^[METHOD] getInputStream [TYPE] InputStream [PARAMETER] ZipArchiveEntry ze [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] comment  name  [TYPE]  boolean addDummyByte  false  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  OffsetEntry offsetEntry  [TYPE]  BoundedInputStream bis  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start 
[REPLACE]^OffsetEntry offsetEntry =  ( OffsetEntry )  entries.get ( ze ) ;^261^^^^^255^274^[REPLACE] long start = offsetEntry.dataOffset;^[METHOD] getInputStream [TYPE] InputStream [PARAMETER] ZipArchiveEntry ze [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] comment  name  [TYPE]  boolean addDummyByte  false  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  OffsetEntry offsetEntry  [TYPE]  BoundedInputStream bis  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start 
[REPLACE]^BoundedInputStream bis = new BoundedInputStream ( remaining, ze.getCompressedSize (  )  ) ;^262^263^^^^255^274^[REPLACE] BoundedInputStream bis = new BoundedInputStream ( start, ze.getCompressedSize (  )  ) ;^[METHOD] getInputStream [TYPE] InputStream [PARAMETER] ZipArchiveEntry ze [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] comment  name  [TYPE]  boolean addDummyByte  false  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  OffsetEntry offsetEntry  [TYPE]  BoundedInputStream bis  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start 
[REPLACE]^return encoding;^266^^^^^255^274^[REPLACE] return bis;^[METHOD] getInputStream [TYPE] InputStream [PARAMETER] ZipArchiveEntry ze [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] comment  name  [TYPE]  boolean addDummyByte  false  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  OffsetEntry offsetEntry  [TYPE]  BoundedInputStream bis  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start 
[REPLACE]^return new InflaterInputStream ( bis, new Inflater ( false )  ) ;^269^^^^^255^274^[REPLACE] return new InflaterInputStream ( bis, new Inflater ( true )  ) ;^[METHOD] getInputStream [TYPE] InputStream [PARAMETER] ZipArchiveEntry ze [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] comment  name  [TYPE]  boolean addDummyByte  false  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  OffsetEntry offsetEntry  [TYPE]  BoundedInputStream bis  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start 
[REPLACE]^return ;^271^272^^^^255^274^[REPLACE] throw new ZipException ( "Found unsupported compression method " + ze.getMethod (  )  ) ;^[METHOD] getInputStream [TYPE] InputStream [PARAMETER] ZipArchiveEntry ze [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] comment  name  [TYPE]  boolean addDummyByte  false  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  OffsetEntry offsetEntry  [TYPE]  BoundedInputStream bis  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  dataOffset  headerOffset  loc  remaining  start 
[REPLACE]^OffsetEntry offset = new OffsetEntry (  ) ;^308^^^^^307^405^[REPLACE] HashMap noEFS = new HashMap (  ) ;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[REPLACE]^long sig = ZipLong.getValue ( signatureBytes ) ;^310^^^^^307^405^[REPLACE] positionAtCentralDirectory (  ) ;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[ADD]^^310^^^^^307^405^[ADD] positionAtCentralDirectory (  ) ;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[REPLACE]^byte[] cfdOffset = new byte[WORD];^312^^^^^307^405^[REPLACE] byte[] cfh = new byte[CFH_LEN];^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[REPLACE]^byte[] cfdOffset = new byte[WORD];^314^^^^^307^405^[REPLACE] byte[] signatureBytes = new byte[WORD];^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[REPLACE]^archive.readFully ( name ) ;^315^^^^^307^405^[REPLACE] archive.readFully ( signatureBytes ) ;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[REPLACE]^long sig = ZipLong.getValue ( name ) ;^316^^^^^307^405^[REPLACE] long sig = ZipLong.getValue ( signatureBytes ) ;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[REPLACE]^final long cfhSig = ZipLong .getValue ( signatureBytes , MAX_EOCD_SIZE )  ;^317^^^^^307^405^[REPLACE] final long cfhSig = ZipLong.getValue ( ZipArchiveOutputStream.CFH_SIG ) ;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[ADD]^^317^^^^^307^405^[ADD] final long cfhSig = ZipLong.getValue ( ZipArchiveOutputStream.CFH_SIG ) ;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[REPLACE]^if  ( sig != remaining ) {^318^^^^^307^405^[REPLACE] if  ( sig != cfhSig && startsWithLocalFileHeader (  )  )  {^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[REPLACE]^return ;^319^320^^^^307^405^[REPLACE] throw new IOException ( "central directory is empty, can't expand" + " corrupt archive." ) ;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[REPLACE]^while  ( sig  != time )  {^322^^^^^307^405^[REPLACE] while  ( sig == cfhSig )  {^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[ADD]^^322^323^^^^307^405^[ADD] while  ( sig == cfhSig )  { archive.readFully ( cfh ) ;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[REPLACE]^if  ( hasEFS && useUnicodeExtraFields )  {^400^^^^^307^405^[REPLACE] if  ( !hasEFS && useUnicodeExtraFields )  {^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[REPLACE]^noEFS.put ( ze, new NameAndComment ( fileName, signatureBytes )  ) ;^401^^^^^307^405^[REPLACE] noEFS.put ( ze, new NameAndComment ( fileName, comment )  ) ;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[ADD]^^401^^^^^307^405^[ADD] noEFS.put ( ze, new NameAndComment ( fileName, comment )  ) ;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[REPLACE]^off += WORD; ;^328^^^^^307^405^[REPLACE] off += SHORT;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[ADD]^^328^^^^^307^405^[ADD] off += SHORT;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[REPLACE]^off += WORD; ;^331^^^^^307^405^[REPLACE] off += SHORT;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[REPLACE]^off += WORD; ;^339^^^^^307^405^[REPLACE] off += SHORT;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[REPLACE]^off += WORD; ;^342^^^^^307^405^[REPLACE] off += SHORT;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[REPLACE]^off += SHORT; ;^349^^^^^307^405^[REPLACE] off += WORD;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[REPLACE]^off += SHORT; ;^352^^^^^307^405^[REPLACE] off += WORD;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[REPLACE]^off += SHORT; ;^355^^^^^307^405^[REPLACE] off += WORD;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[REPLACE]^off += SHORT; ;^358^^^^^307^405^[REPLACE] off += WORD;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[REPLACE]^off += WORD; ;^361^^^^^307^405^[REPLACE] off += SHORT;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[REPLACE]^off += WORD; ;^364^^^^^307^405^[REPLACE] off += SHORT;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[REPLACE]^off += WORD; ;^367^^^^^307^405^[REPLACE] off += SHORT;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[REPLACE]^off += WORD; ;^369^^^^^307^405^[REPLACE] off += SHORT;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[REPLACE]^off += WORD; ;^372^^^^^307^405^[REPLACE] off += SHORT;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[REPLACE]^off += SHORT; ;^375^^^^^307^405^[REPLACE] off += WORD;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[REPLACE]^offset.headerOffset =  ZipLong.getValue ( cfh, off ) ;^383^^^^^307^405^[REPLACE] offset.headerOffset = ZipLong.getValue ( cfh, off ) ;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[REPLACE]^sig =  ZipLong.getValue ( name ) ;^398^^^^^307^405^[REPLACE] sig = ZipLong.getValue ( signatureBytes ) ;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[REPLACE]^int off = 4;^324^^^^^307^405^[REPLACE] int off = 0;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[REPLACE]^OffsetEntry offset = new OffsetEntry (  ) ;^325^^^^^307^405^[REPLACE] ZipArchiveEntry ze = new ZipArchiveEntry (  ) ;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[REPLACE]^int versionMadeBy = ZipShort.getValue ( comment, off ) ;^327^^^^^307^405^[REPLACE] int versionMadeBy = ZipShort.getValue ( cfh, off ) ;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[REPLACE]^final int generalPurposeFlag = ZipShort.getValue ( cfh, generalPurposeFlag ) ;^333^^^^^307^405^[REPLACE] final int generalPurposeFlag = ZipShort.getValue ( cfh, off ) ;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[ADD]^^333^^^^^307^405^[ADD] final int generalPurposeFlag = ZipShort.getValue ( cfh, off ) ;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[REPLACE]^final boolean hasEFS = ( versionMadeBy & ZipArchiveOutputStream.EFS_FLAG )   ==  0;^334^335^^^^307^405^[REPLACE] final boolean hasEFS = ( generalPurposeFlag & ZipArchiveOutputStream.EFS_FLAG )  != 0;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[ADD]^^334^335^^^^307^405^[ADD] final boolean hasEFS = ( generalPurposeFlag & ZipArchiveOutputStream.EFS_FLAG )  != 0;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[REPLACE]^final ZipEncoding entryEncoding = useUnicodeExtraFields ? ZipEncodingHelper.UTF8_ZIP_ENCODING : zipEncoding;^336^337^^^^307^405^[REPLACE] final ZipEncoding entryEncoding = hasEFS ? ZipEncodingHelper.UTF8_ZIP_ENCODING : zipEncoding;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[REPLACE]^long time = ZipUtil.dosToJavaTime ( ZipLong.getValue ( cfh, versionMadeBy )  ) ;^347^^^^^307^405^[REPLACE] long time = ZipUtil.dosToJavaTime ( ZipLong.getValue ( cfh, off )  ) ;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[REPLACE]^int fileNameLen = ZipShort.getValue ( comment, off ) ;^360^^^^^307^405^[REPLACE] int fileNameLen = ZipShort.getValue ( cfh, off ) ;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[REPLACE]^int extraLen = ZipShort.getValue ( cfh, SHORT ) ;^363^^^^^307^405^[REPLACE] int extraLen = ZipShort.getValue ( cfh, off ) ;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[REPLACE]^int commentLen = ZipShort.getValue ( cfh, WORD ) ;^366^^^^^307^405^[REPLACE] int commentLen = ZipShort.getValue ( cfh, off ) ;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[ADD]^^366^^^^^307^405^[ADD] int commentLen = ZipShort.getValue ( cfh, off ) ;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[REPLACE]^byte[] cfdOffset = new byte[WORD];^377^^^^^307^405^[REPLACE] byte[] fileName = new byte[fileNameLen];^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[REPLACE]^byte[] cfdOffset = new byte[WORD];^382^^^^^307^405^[REPLACE] OffsetEntry offset = new OffsetEntry (  ) ;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[REPLACE]^byte[] cfdOffset = new byte[WORD];^389^^^^^307^405^[REPLACE] byte[] cdExtraData = new byte[extraLen];^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[REPLACE]^byte[] cfdOffset = new byte[WORD];^393^^^^^307^405^[REPLACE] byte[] comment = new byte[commentLen];^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[REPLACE]^if  ( hasEFS ) {^400^^^^^307^405^[REPLACE] if  ( !hasEFS && useUnicodeExtraFields )  {^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[ADD]^noEFS.put ( ze, new NameAndComment ( fileName, comment )  ) ;^400^401^402^^^307^405^[ADD] if  ( !hasEFS && useUnicodeExtraFields )  { noEFS.put ( ze, new NameAndComment ( fileName, comment )  ) ; }^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[REMOVE]^ze.setCrc ( ZipLong.getValue ( cfh, off )  ) ;^401^^^^^307^405^[REMOVE] ^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[ADD]^^331^^^^^307^405^[ADD] off += SHORT;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[REPLACE]^int off = 3;^324^^^^^307^405^[REPLACE] int off = 0;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[ADD]^^327^328^^^^307^405^[ADD] int versionMadeBy = ZipShort.getValue ( cfh, off ) ; off += SHORT;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[REPLACE]^final int generalPurposeFlag = ZipShort.getValue ( cfh, versionMadeBy ) ;^333^^^^^307^405^[REPLACE] final int generalPurposeFlag = ZipShort.getValue ( cfh, off ) ;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[REPLACE]^final boolean hasEFS = ( commentLen & ZipArchiveOutputStream.EFS_FLAG )   ==  POS_0 - 2;^334^335^^^^307^405^[REPLACE] final boolean hasEFS = ( generalPurposeFlag & ZipArchiveOutputStream.EFS_FLAG )  != 0;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[ADD]^^336^337^^^^307^405^[ADD] final ZipEncoding entryEncoding = hasEFS ? ZipEncodingHelper.UTF8_ZIP_ENCODING : zipEncoding;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[REPLACE]^long time = ZipUtil.dosToJavaTime ( ZipLong.getValue ( comment, off )  ) ;^347^^^^^307^405^[REPLACE] long time = ZipUtil.dosToJavaTime ( ZipLong.getValue ( cfh, off )  ) ;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[ADD]^^347^^^^^307^405^[ADD] long time = ZipUtil.dosToJavaTime ( ZipLong.getValue ( cfh, off )  ) ;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[REPLACE]^int extraLen = ZipShort.getValue ( cfh, off ) ;^360^^^^^307^405^[REPLACE] int fileNameLen = ZipShort.getValue ( cfh, off ) ;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[REPLACE]^int extraLen = ZipShort.getValue ( cfh, versionMadeBy ) ;^363^^^^^307^405^[REPLACE] int extraLen = ZipShort.getValue ( cfh, off ) ;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[REPLACE]^int commentLen = ZipShort.getValue ( comment, off ) ;^366^^^^^307^405^[REPLACE] int commentLen = ZipShort.getValue ( cfh, off ) ;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[REPLACE]^return encoding;^404^^^^^307^405^[REPLACE] return noEFS;^[METHOD] populateFromCentralDirectory [TYPE] Map [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfh  comment  fileName  name  signatureBytes  [TYPE]  boolean addDummyByte  false  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  HashMap noEFS  [TYPE]  OffsetEntry offset  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  remaining  sig  start  time 
[REPLACE]^boolean found = true;^443^^^^^442^475^[REPLACE] boolean found = false;^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^long off = archive.length (  )  *  2 - MIN_EOCD_SIZE;^444^^^^^442^475^[REPLACE] long off = archive.length (  )  - MIN_EOCD_SIZE;^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[ADD]^^444^^^^^442^475^[ADD] long off = archive.length (  )  - MIN_EOCD_SIZE;^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^long stopSearching =   archive.length (  )  ;^445^^^^^442^475^[REPLACE] long stopSearching = Math.max ( 0L, archive.length (  )  - MAX_EOCD_SIZE ) ;^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^while  (useUnicodeExtraFields ;^450^^^^^442^475^[REPLACE] while  ( off >= stopSearching && curr != -1 )  {^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^if  (versionMadeBy  ||  sig[POS_0] )  {^451^^^^^442^475^[REPLACE] if  ( curr == sig[POS_0] )  {^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REMOVE]^if  ( curr ==  ( POS_1] )  )  {     curr = archive.read (  ) ;     if  ( curr ==  ( POS_2] )  )  {         curr = archive.read (  ) ;         if  ( curr ==  ( POS_3] )  )  {             found = true;             break;         }     } }^451^^^^^442^475^[REMOVE] ^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^if  ( curr  ||  signatureBytes[POS_1] )  {^453^^^^^442^475^[REPLACE] if  ( curr == sig[POS_1] )  {^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^if  ( curr  !=  sig[POS_2] )  {^455^^^^^442^475^[REPLACE] if  ( curr == sig[POS_2] )  {^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REMOVE]^if  ( curr ==  ( POS_1] )  )  {     curr = archive.read (  ) ;     if  ( curr ==  ( POS_2] )  )  {         curr = archive.read (  ) ;         if  ( curr ==  ( POS_3] )  )  {             found = true;             break;         }     } }^455^^^^^442^475^[REMOVE] ^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^if  ( curr  &&  sig[POS_3] )  {^457^^^^^442^475^[REPLACE] if  ( curr == sig[POS_3] )  {^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^found = false;^458^^^^^442^475^[REPLACE] found = true;^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^curr ;^456^^^^^442^475^[REPLACE] curr = archive.read (  ) ;^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^if  ( versionMadeBy  &&  sig[POS_3] )  {^457^^^^^442^475^[REPLACE] if  ( curr == sig[POS_3] )  {^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^curr  =  curr ;^454^^^^^442^475^[REPLACE] curr = archive.read (  ) ;^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^curr  =  curr ;^456^^^^^442^475^[REPLACE] curr = archive.read (  ) ;^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[ADD]^^458^^^^^442^475^[ADD] found = true;^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^if  ( versionMadeBy  ||  sig[POS_2] )  {^455^^^^^442^475^[REPLACE] if  ( curr == sig[POS_2] )  {^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^if  ( curr  ||  sig[POS_3] )  {^457^^^^^442^475^[REPLACE] if  ( curr == sig[POS_3] )  {^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[ADD]^^456^^^^^442^475^[ADD] curr = archive.read (  ) ;^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[ADD]^^458^459^^^^442^475^[ADD] found = true; break;^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^curr ;^452^^^^^442^475^[REPLACE] curr = archive.read (  ) ;^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[ADD]^^452^^^^^442^475^[ADD] curr = archive.read (  ) ;^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^if  (versionMadeBy  !=  sig[POS_1] )  {^453^^^^^442^475^[REPLACE] if  ( curr == sig[POS_1] )  {^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^if  ( versionMadeBy  &&  sig[POS_2] )  {^455^^^^^442^475^[REPLACE] if  ( curr == sig[POS_2] )  {^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^if  (versionMadeBy  &&  sig[POS_3] )  {^457^^^^^442^475^[REPLACE] if  ( curr == sig[POS_3] )  {^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^curr  = null ;^456^^^^^442^475^[REPLACE] curr = archive.read (  ) ;^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^if  (versionMadeBy  ||  sig[POS_3] )  {^457^^^^^442^475^[REPLACE] if  ( curr == sig[POS_3] )  {^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^if  (versionMadeBy  ||  sig[POS_2] )  {^455^^^^^442^475^[REPLACE] if  ( curr == sig[POS_2] )  {^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^curr  =  curr ;^452^^^^^442^475^[REPLACE] curr = archive.read (  ) ;^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^curr ;^454^^^^^442^475^[REPLACE] curr = archive.read (  ) ;^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^curr ;^465^^^^^442^475^[REPLACE] curr = archive.read (  ) ;^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[ADD]^^465^^^^^442^475^[ADD] curr = archive.read (  ) ;^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^if  ( off  <=  0 )  {^446^^^^^442^475^[REPLACE] if  ( off >= 0 )  {^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^while  ( hasEFS ;^450^^^^^442^475^[REPLACE] while  ( off >= stopSearching && curr != -1 )  {^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^if  ( curr  !=  sig[POS_0] )  {^451^^^^^442^475^[REPLACE] if  ( curr == sig[POS_0] )  {^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[ADD]^curr = archive.read (  ) ;curr = archive.read (  ) ;^451^452^453^454^^442^475^[ADD] if  ( curr == sig[POS_0] )  { curr = archive.read (  ) ; if  ( curr == sig[POS_1] )  { curr = archive.read (  ) ;^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^if  (versionMadeBy  ||  sig[POS_1] )  {^453^^^^^442^475^[REPLACE] if  ( curr == sig[POS_1] )  {^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^if  ( curr  !=  sig[POS_3] )  {^457^^^^^442^475^[REPLACE] if  ( curr == sig[POS_3] )  {^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^if  (versionMadeBy  !=  sig[POS_3] )  {^457^^^^^442^475^[REPLACE] if  ( curr == sig[POS_3] )  {^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^if  ( curr  &&  signatureBytes[POS_1] )  {^453^^^^^442^475^[REPLACE] if  ( curr == sig[POS_1] )  {^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[ADD]^curr = archive.read (  ) ;curr = archive.read (  ) ;^453^454^455^456^^442^475^[ADD] if  ( curr == sig[POS_1] )  { curr = archive.read (  ) ; if  ( curr == sig[POS_2] )  { curr = archive.read (  ) ;^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^if  ( curr  &&  signatureBytes[POS_2] )  {^455^^^^^442^475^[REPLACE] if  ( curr == sig[POS_2] )  {^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[ADD]^^454^^^^^442^475^[ADD] curr = archive.read (  ) ;^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^if  ( curr  &&  sig[POS_2] )  {^455^^^^^442^475^[REPLACE] if  ( curr == sig[POS_2] )  {^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[ADD]^curr = archive.read (  ) ;found = true;break;^455^456^457^458^459^442^475^[ADD] if  ( curr == sig[POS_2] )  { curr = archive.read (  ) ; if  ( curr == sig[POS_3] )  { found = true; break;^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[ADD]^^457^458^459^460^^442^475^[ADD] if  ( curr == sig[POS_3] )  { found = true; break; }^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^curr  = null ;^452^^^^^442^475^[REPLACE] curr = archive.read (  ) ;^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^curr  = null ;^465^^^^^442^475^[REPLACE] curr = archive.read (  ) ;^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^if  ( curr  &&  sig[POS_0] )  {^451^^^^^442^475^[REPLACE] if  ( curr == sig[POS_0] )  {^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^if  ( versionMadeBy  !=  signatureBytes[POS_2] )  {^455^^^^^442^475^[REPLACE] if  ( curr == sig[POS_2] )  {^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^if  ( curr  ||  sig[POS_2] )  {^455^^^^^442^475^[REPLACE] if  ( curr == sig[POS_2] )  {^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^if  ( curr  &&  sig[POS_1] )  {^453^^^^^442^475^[REPLACE] if  ( curr == sig[POS_1] )  {^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[ADD]^found = true;break;^457^458^459^460^^442^475^[ADD] if  ( curr == sig[POS_3] )  { found = true; break; }^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^final boolean hasEFS = ( generalPurposeFlag & ZipArchiveOutputStream.EFS_FLAG )  != 0;^448^^^^^442^475^[REPLACE] byte[] sig = ZipArchiveOutputStream.EOCD_SIG;^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[ADD]^^448^^^^^442^475^[ADD] byte[] sig = ZipArchiveOutputStream.EOCD_SIG;^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^int curr = archive.length (  ) ;^449^^^^^442^475^[REPLACE] int curr = archive.read (  ) ;^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^if  ( curr  !=  signatureBytes[POS_1] )  {^453^^^^^442^475^[REPLACE] if  ( curr == sig[POS_1] )  {^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^if  (versionMadeBy  &&  sig[POS_2] )  {^455^^^^^442^475^[REPLACE] if  ( curr == sig[POS_2] )  {^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[ADD]^^455^456^457^458^459^442^475^[ADD] if  ( curr == sig[POS_2] )  { curr = archive.read (  ) ; if  ( curr == sig[POS_3] )  { found = true; break;^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^if  ( versionMadeBy  ||  sig[POS_3] )  {^457^^^^^442^475^[REPLACE] if  ( curr == sig[POS_3] )  {^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^curr  =  curr ;^465^^^^^442^475^[REPLACE] curr = archive.read (  ) ;^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^if  ( !useUnicodeExtraFields )  {^468^^^^^442^475^[REPLACE] if  ( !found )  {^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[ADD]^^468^469^470^^^442^475^[ADD] if  ( !found )  { throw new ZipException  (" ")  ; }^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^return ;^469^^^^^442^475^[REPLACE] throw new ZipException  (" ")  ;^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^archive.seek ( off +stopSearching ) ;^471^^^^^442^475^[REPLACE] archive.seek ( off + CFD_LOCATOR_OFFSET ) ;^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[ADD]^^471^472^^^^442^475^[ADD] archive.seek ( off + CFD_LOCATOR_OFFSET ) ; byte[] cfdOffset = new byte[WORD];^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^OffsetEntry offset = new OffsetEntry (  ) ;^472^^^^^442^475^[REPLACE] byte[] cfdOffset = new byte[WORD];^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^archive.readFully ( signatureBytes ) ;^473^^^^^442^475^[REPLACE] archive.readFully ( cfdOffset ) ;^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^archive.seek ( ZipLong.getValue ( signatureBytes )  ) ;^474^^^^^442^475^[REPLACE] archive.seek ( ZipLong.getValue ( cfdOffset )  ) ;^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[ADD]^^474^^^^^442^475^[ADD] archive.seek ( ZipLong.getValue ( cfdOffset )  ) ;^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^archive.seek (   signatureBytes    ) ;^474^^^^^442^475^[REPLACE] archive.seek ( ZipLong.getValue ( cfdOffset )  ) ;^[METHOD] positionAtCentralDirectory [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] cdExtraData  cfdOffset  cfh  comment  fileName  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraLen  fileNameLen  generalPurposeFlag  off  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  remaining  sig  start  stopSearching  time 
[REPLACE]^OffsetEntry offsetEntry =  ( OffsetEntry )  entries.get ( ze ) ;^501^^^^^500^537^[REPLACE] Enumeration e = getEntries (  ) ;^[METHOD] resolveLocalFileHeaderData [TYPE] void [PARAMETER] Map entriesWithoutEFS [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  Enumeration e  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  OffsetEntry offsetEntry  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[REPLACE]^while  (WORD  ==  0 )  {^513^^^^^500^537^[REPLACE] while  ( lenToSkip > 0 )  {^[METHOD] resolveLocalFileHeaderData [TYPE] void [PARAMETER] Map entriesWithoutEFS [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  Enumeration e  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  OffsetEntry offsetEntry  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[REPLACE]^if  ( skipped  ==  4 )  {^515^^^^^500^537^[REPLACE] if  ( skipped <= 0 )  {^[METHOD] resolveLocalFileHeaderData [TYPE] void [PARAMETER] Map entriesWithoutEFS [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  Enumeration e  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  OffsetEntry offsetEntry  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[REPLACE]^return ;^516^517^^^^500^537^[REPLACE] throw new RuntimeException ( "failed to skip file name in" + " local file header" ) ;^[METHOD] resolveLocalFileHeaderData [TYPE] void [PARAMETER] Map entriesWithoutEFS [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  Enumeration e  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  OffsetEntry offsetEntry  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[REPLACE]^lenToSkip -=  versionMadeBy;^519^^^^^500^537^[REPLACE] lenToSkip -= skipped;^[METHOD] resolveLocalFileHeaderData [TYPE] void [PARAMETER] Map entriesWithoutEFS [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  Enumeration e  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  OffsetEntry offsetEntry  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[REPLACE]^int skipped = archive.seek ( lenToSkip ) ;^514^^^^^500^537^[REPLACE] int skipped = archive.skipBytes ( lenToSkip ) ;^[METHOD] resolveLocalFileHeaderData [TYPE] void [PARAMETER] Map entriesWithoutEFS [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  Enumeration e  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  OffsetEntry offsetEntry  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[REPLACE]^if  (generalPurposeFlag  !=  0 )  {^515^^^^^500^537^[REPLACE] if  ( skipped <= 0 )  {^[METHOD] resolveLocalFileHeaderData [TYPE] void [PARAMETER] Map entriesWithoutEFS [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  Enumeration e  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  OffsetEntry offsetEntry  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[REPLACE]^if  ( nameMap.containsKey ( ze )  )  {^531^^^^^500^537^[REPLACE] if  ( entriesWithoutEFS.containsKey ( ze )  )  {^[METHOD] resolveLocalFileHeaderData [TYPE] void [PARAMETER] Map entriesWithoutEFS [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  Enumeration e  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  OffsetEntry offsetEntry  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[REPLACE]^setNameAndCommentFromExtraFields ( ze, ( NameAndComment ) nameMap.get ( ze )  ) ;^532^533^534^^^500^537^[REPLACE] setNameAndCommentFromExtraFields ( ze, ( NameAndComment ) entriesWithoutEFS.get ( ze )  ) ;^[METHOD] resolveLocalFileHeaderData [TYPE] void [PARAMETER] Map entriesWithoutEFS [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  Enumeration e  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  OffsetEntry offsetEntry  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[REPLACE]^entriesWithoutEFS.keySet ( ze )  ) ;^534^^^^^500^537^[REPLACE] entriesWithoutEFS.get ( ze )  ) ;^[METHOD] resolveLocalFileHeaderData [TYPE] void [PARAMETER] Map entriesWithoutEFS [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  Enumeration e  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  OffsetEntry offsetEntry  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[REPLACE]^offsetEntry.dataOffset = offset + LFH_OFFSET_FOR_FILENAME_LENGTH + SHORT + SHORT + fileNameLen + lenToSkip;^528^529^^^^500^537^[REPLACE] offsetEntry.dataOffset = offset + LFH_OFFSET_FOR_FILENAME_LENGTH + SHORT + SHORT + fileNameLen + extraFieldLen;^[METHOD] resolveLocalFileHeaderData [TYPE] void [PARAMETER] Map entriesWithoutEFS [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  Enumeration e  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  OffsetEntry offsetEntry  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[REPLACE]^ZipArchiveEntry ze =  ( ZipArchiveEntry )  e.hasMoreElements (  ) ;^503^^^^^500^537^[REPLACE] ZipArchiveEntry ze =  ( ZipArchiveEntry )  e.nextElement (  ) ;^[METHOD] resolveLocalFileHeaderData [TYPE] void [PARAMETER] Map entriesWithoutEFS [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  Enumeration e  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  OffsetEntry offsetEntry  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[ADD]^^503^^^^^500^537^[ADD] ZipArchiveEntry ze =  ( ZipArchiveEntry )  e.nextElement (  ) ;^[METHOD] resolveLocalFileHeaderData [TYPE] void [PARAMETER] Map entriesWithoutEFS [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  Enumeration e  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  OffsetEntry offsetEntry  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[REPLACE]^OffsetEntry offsetEntry =  ( OffsetEntry )  entries.keySet ( ze ) ;^504^^^^^500^537^[REPLACE] OffsetEntry offsetEntry =  ( OffsetEntry )  entries.get ( ze ) ;^[METHOD] resolveLocalFileHeaderData [TYPE] void [PARAMETER] Map entriesWithoutEFS [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  Enumeration e  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  OffsetEntry offsetEntry  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[ADD]^long offset = offsetEntry.headerOffset;^504^505^^^^500^537^[ADD] OffsetEntry offsetEntry =  ( OffsetEntry )  entries.get ( ze ) ; long offset = offsetEntry.headerOffset;^[METHOD] resolveLocalFileHeaderData [TYPE] void [PARAMETER] Map entriesWithoutEFS [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  Enumeration e  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  OffsetEntry offsetEntry  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[REPLACE]^OffsetEntry offsetEntry =  ( OffsetEntry )  entries.get ( ze ) ;^505^^^^^500^537^[REPLACE] long offset = offsetEntry.headerOffset;^[METHOD] resolveLocalFileHeaderData [TYPE] void [PARAMETER] Map entriesWithoutEFS [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  Enumeration e  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  OffsetEntry offsetEntry  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[ADD]^^505^506^^^^500^537^[ADD] long offset = offsetEntry.headerOffset; archive.seek ( offset + LFH_OFFSET_FOR_FILENAME_LENGTH ) ;^[METHOD] resolveLocalFileHeaderData [TYPE] void [PARAMETER] Map entriesWithoutEFS [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  Enumeration e  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  OffsetEntry offsetEntry  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[REPLACE]^byte[] cfdOffset = new byte[WORD];^507^^^^^500^537^[REPLACE] byte[] b = new byte[SHORT];^[METHOD] resolveLocalFileHeaderData [TYPE] void [PARAMETER] Map entriesWithoutEFS [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  Enumeration e  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  OffsetEntry offsetEntry  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[REPLACE]^int fileNameLen =   signatureBytes   ;^509^^^^^500^537^[REPLACE] int fileNameLen = ZipShort.getValue ( b ) ;^[METHOD] resolveLocalFileHeaderData [TYPE] void [PARAMETER] Map entriesWithoutEFS [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  Enumeration e  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  OffsetEntry offsetEntry  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[REPLACE]^int extraFieldLen = ZipShort.getValue ( signatureBytes ) ;^511^^^^^500^537^[REPLACE] int extraFieldLen = ZipShort.getValue ( b ) ;^[METHOD] resolveLocalFileHeaderData [TYPE] void [PARAMETER] Map entriesWithoutEFS [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  Enumeration e  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  OffsetEntry offsetEntry  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[REPLACE]^int lenToSkip = versionMadeBy;^512^^^^^500^537^[REPLACE] int lenToSkip = fileNameLen;^[METHOD] resolveLocalFileHeaderData [TYPE] void [PARAMETER] Map entriesWithoutEFS [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  Enumeration e  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  OffsetEntry offsetEntry  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[REPLACE]^int skipped = archive.skipBytes ( commentLen ) ;^514^^^^^500^537^[REPLACE] int skipped = archive.skipBytes ( lenToSkip ) ;^[METHOD] resolveLocalFileHeaderData [TYPE] void [PARAMETER] Map entriesWithoutEFS [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  Enumeration e  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  OffsetEntry offsetEntry  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[ADD]^^514^^^^^500^537^[ADD] int skipped = archive.skipBytes ( lenToSkip ) ;^[METHOD] resolveLocalFileHeaderData [TYPE] void [PARAMETER] Map entriesWithoutEFS [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  Enumeration e  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  OffsetEntry offsetEntry  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[REPLACE]^byte[] cfdOffset = new byte[WORD];^521^^^^^500^537^[REPLACE] byte[] localExtraData = new byte[extraFieldLen];^[METHOD] resolveLocalFileHeaderData [TYPE] void [PARAMETER] Map entriesWithoutEFS [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  Enumeration e  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  OffsetEntry offsetEntry  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[REPLACE]^while  ( lenToSkip  <  3 )  {^513^^^^^500^537^[REPLACE] while  ( lenToSkip > 0 )  {^[METHOD] resolveLocalFileHeaderData [TYPE] void [PARAMETER] Map entriesWithoutEFS [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  Enumeration e  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  OffsetEntry offsetEntry  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[REPLACE]^if  ( skipped  >=  0 >>> 0 )  {^515^^^^^500^537^[REPLACE] if  ( skipped <= 0 )  {^[METHOD] resolveLocalFileHeaderData [TYPE] void [PARAMETER] Map entriesWithoutEFS [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  Enumeration e  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  OffsetEntry offsetEntry  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[REMOVE]^if  ( !found )  {     throw new ZipException ( "archive is not a ZIP archive" ) ; }^515^^^^^500^537^[REMOVE] ^[METHOD] resolveLocalFileHeaderData [TYPE] void [PARAMETER] Map entriesWithoutEFS [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  Enumeration e  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  OffsetEntry offsetEntry  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[REPLACE]^lenToSkip -=  null;^519^^^^^500^537^[REPLACE] lenToSkip -= skipped;^[METHOD] resolveLocalFileHeaderData [TYPE] void [PARAMETER] Map entriesWithoutEFS [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  Enumeration e  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  OffsetEntry offsetEntry  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[REPLACE]^if  (fileNameLen  !=  0 )  {^515^^^^^500^537^[REPLACE] if  ( skipped <= 0 )  {^[METHOD] resolveLocalFileHeaderData [TYPE] void [PARAMETER] Map entriesWithoutEFS [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  Enumeration e  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  OffsetEntry offsetEntry  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[ADD]^^531^532^533^534^535^500^537^[ADD] if  ( entriesWithoutEFS.containsKey ( ze )  )  { setNameAndCommentFromExtraFields ( ze, ( NameAndComment ) entriesWithoutEFS.get ( ze )  ) ; }^[METHOD] resolveLocalFileHeaderData [TYPE] void [PARAMETER] Map entriesWithoutEFS [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  Enumeration e  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  OffsetEntry offsetEntry  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[REPLACE]^offsetEntry.dataOffset = offset + LFH_OFFSET_FOR_FILENAME_LENGTH + SHORT + SHORT + fileNameLen + versionMadeBy;^528^529^^^^500^537^[REPLACE] offsetEntry.dataOffset = offset + LFH_OFFSET_FOR_FILENAME_LENGTH + SHORT + SHORT + fileNameLen + extraFieldLen;^[METHOD] resolveLocalFileHeaderData [TYPE] void [PARAMETER] Map entriesWithoutEFS [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  Enumeration e  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  OffsetEntry offsetEntry  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[ADD]^^528^529^^^^500^537^[ADD] offsetEntry.dataOffset = offset + LFH_OFFSET_FOR_FILENAME_LENGTH + SHORT + SHORT + fileNameLen + extraFieldLen;^[METHOD] resolveLocalFileHeaderData [TYPE] void [PARAMETER] Map entriesWithoutEFS [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  Enumeration e  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  OffsetEntry offsetEntry  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[ADD]^^507^^^^^500^537^[ADD] byte[] b = new byte[SHORT];^[METHOD] resolveLocalFileHeaderData [TYPE] void [PARAMETER] Map entriesWithoutEFS [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  Enumeration e  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  OffsetEntry offsetEntry  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[REPLACE]^int fileNameLen = ZipShort .getValue ( name , extraFieldLen )  ;^509^^^^^500^537^[REPLACE] int fileNameLen = ZipShort.getValue ( b ) ;^[METHOD] resolveLocalFileHeaderData [TYPE] void [PARAMETER] Map entriesWithoutEFS [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  Enumeration e  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  OffsetEntry offsetEntry  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[REPLACE]^int ret = -1;^512^^^^^500^537^[REPLACE] int lenToSkip = fileNameLen;^[METHOD] resolveLocalFileHeaderData [TYPE] void [PARAMETER] Map entriesWithoutEFS [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  Enumeration e  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  OffsetEntry offsetEntry  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[REPLACE]^int skipped = archive.skipBytes ( fileNameLen ) ;^514^^^^^500^537^[REPLACE] int skipped = archive.skipBytes ( lenToSkip ) ;^[METHOD] resolveLocalFileHeaderData [TYPE] void [PARAMETER] Map entriesWithoutEFS [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  Enumeration e  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  OffsetEntry offsetEntry  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[REPLACE]^archive.skipBytes ( 3 ) ;^544^^^^^543^553^[REPLACE] archive.seek ( 0 ) ;^[METHOD] startsWithLocalFileHeader [TYPE] boolean [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[REPLACE]^byte[] cfdOffset = new byte[WORD];^545^^^^^543^553^[REPLACE] final byte[] start = new byte[WORD];^[METHOD] startsWithLocalFileHeader [TYPE] boolean [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[REPLACE]^archive.seek ( signatureBytes ) ;^546^^^^^543^553^[REPLACE] archive.readFully ( start ) ;^[METHOD] startsWithLocalFileHeader [TYPE] boolean [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[ADD]^^546^^^^^543^553^[ADD] archive.readFully ( start ) ;^[METHOD] startsWithLocalFileHeader [TYPE] boolean [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[REPLACE]^if  ( start[i]  ==  ZipArchiveOutputStream.LFH_SIG[i] )  {^548^^^^^543^553^[REPLACE] if  ( start[i] != ZipArchiveOutputStream.LFH_SIG[i] )  {^[METHOD] startsWithLocalFileHeader [TYPE] boolean [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[REPLACE]^return true;^549^^^^^543^553^[REPLACE] return false;^[METHOD] startsWithLocalFileHeader [TYPE] boolean [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[REPLACE]^for  ( int i = 0; i < signatureBytes.length - 3; i++ )  {^547^^^^^543^553^[REPLACE] for  ( int i = 0; i < start.length; i++ )  {^[METHOD] startsWithLocalFileHeader [TYPE] boolean [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[ADD]^^547^548^549^550^^543^553^[ADD] for  ( int i = 0; i < start.length; i++ )  { if  ( start[i] != ZipArchiveOutputStream.LFH_SIG[i] )  { return false; }^[METHOD] startsWithLocalFileHeader [TYPE] boolean [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[ADD]^return false;^548^549^550^^^543^553^[ADD] if  ( start[i] != ZipArchiveOutputStream.LFH_SIG[i] )  { return false; }^[METHOD] startsWithLocalFileHeader [TYPE] boolean [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[REPLACE]^for  ( int i = 0 ; i < start.length; i++ )  {^547^^^^^543^553^[REPLACE] for  ( int i = 0; i < start.length; i++ )  {^[METHOD] startsWithLocalFileHeader [TYPE] boolean [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[REPLACE]^return false;^552^^^^^543^553^[REPLACE] return true;^[METHOD] startsWithLocalFileHeader [TYPE] boolean [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[REPLACE]^UnicodePathExtraField name =  ( UnicodePathExtraField ) ze.getMethod ( UnicodePathExtraField.UPATH_ID ) ;^562^563^^^^560^581^[REPLACE] UnicodePathExtraField name =  ( UnicodePathExtraField ) ze.getExtraField ( UnicodePathExtraField.UPATH_ID ) ;^[METHOD] setNameAndCommentFromExtraFields [TYPE] void [PARAMETER] ZipArchiveEntry ze NameAndComment nc [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  UnicodePathExtraField name  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  UnicodeCommentExtraField cmt  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  NameAndComment nc  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[ADD]^^562^563^^^^560^581^[ADD] UnicodePathExtraField name =  ( UnicodePathExtraField ) ze.getExtraField ( UnicodePathExtraField.UPATH_ID ) ;^[METHOD] setNameAndCommentFromExtraFields [TYPE] void [PARAMETER] ZipArchiveEntry ze NameAndComment nc [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  UnicodePathExtraField name  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  UnicodeCommentExtraField cmt  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  NameAndComment nc  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[REPLACE]^String originalName = ze .setName (  )  ;^564^^^^^560^581^[REPLACE] String originalName = ze.getName (  ) ;^[METHOD] setNameAndCommentFromExtraFields [TYPE] void [PARAMETER] ZipArchiveEntry ze NameAndComment nc [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  UnicodePathExtraField name  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  UnicodeCommentExtraField cmt  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  NameAndComment nc  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[ADD]^^564^565^^^^560^581^[ADD] String originalName = ze.getName (  ) ; String newName = getUnicodeStringIfOriginalMatches ( name, nc.name ) ;^[METHOD] setNameAndCommentFromExtraFields [TYPE] void [PARAMETER] ZipArchiveEntry ze NameAndComment nc [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  UnicodePathExtraField name  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  UnicodeCommentExtraField cmt  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  NameAndComment nc  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[REPLACE]^String newComment = getUnicodeStringIfOriginalMatches ( cmt, nc.comment ) ;^565^^^^^560^581^[REPLACE] String newName = getUnicodeStringIfOriginalMatches ( name, nc.name ) ;^[METHOD] setNameAndCommentFromExtraFields [TYPE] void [PARAMETER] ZipArchiveEntry ze NameAndComment nc [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  UnicodePathExtraField name  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  UnicodeCommentExtraField cmt  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  NameAndComment nc  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[REPLACE]^if  (  !originalName.equals ( newName )  )  {^566^^^^^560^581^[REPLACE] if  ( newName != null && !originalName.equals ( newName )  )  {^[METHOD] setNameAndCommentFromExtraFields [TYPE] void [PARAMETER] ZipArchiveEntry ze NameAndComment nc [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  UnicodePathExtraField name  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  UnicodeCommentExtraField cmt  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  NameAndComment nc  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[REPLACE]^ze .getName (  )  ;^567^^^^^560^581^[REPLACE] ze.setName ( newName ) ;^[METHOD] setNameAndCommentFromExtraFields [TYPE] void [PARAMETER] ZipArchiveEntry ze NameAndComment nc [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  UnicodePathExtraField name  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  UnicodeCommentExtraField cmt  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  NameAndComment nc  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[REPLACE]^nameMap.remove ( newName ) ;^568^^^^^560^581^[REPLACE] nameMap.remove ( originalName ) ;^[METHOD] setNameAndCommentFromExtraFields [TYPE] void [PARAMETER] ZipArchiveEntry ze NameAndComment nc [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  UnicodePathExtraField name  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  UnicodeCommentExtraField cmt  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  NameAndComment nc  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[REPLACE]^nameMap.put ( newComment, ze ) ;^569^^^^^560^581^[REPLACE] nameMap.put ( newName, ze ) ;^[METHOD] setNameAndCommentFromExtraFields [TYPE] void [PARAMETER] ZipArchiveEntry ze NameAndComment nc [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  UnicodePathExtraField name  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  UnicodeCommentExtraField cmt  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  NameAndComment nc  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[ADD]^^569^^^^^560^581^[ADD] nameMap.put ( newName, ze ) ;^[METHOD] setNameAndCommentFromExtraFields [TYPE] void [PARAMETER] ZipArchiveEntry ze NameAndComment nc [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  UnicodePathExtraField name  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  UnicodeCommentExtraField cmt  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  NameAndComment nc  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[REPLACE]^if  ( nc.comment != null ) {^572^^^^^560^581^[REPLACE] if  ( nc.comment != null && nc.comment.length > 0 )  {^[METHOD] setNameAndCommentFromExtraFields [TYPE] void [PARAMETER] ZipArchiveEntry ze NameAndComment nc [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  UnicodePathExtraField name  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  UnicodeCommentExtraField cmt  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  NameAndComment nc  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[REPLACE]^if  ( newComment == this  )  {^577^^^^^560^581^[REPLACE] if  ( newComment != null )  {^[METHOD] setNameAndCommentFromExtraFields [TYPE] void [PARAMETER] ZipArchiveEntry ze NameAndComment nc [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  UnicodePathExtraField name  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  UnicodeCommentExtraField cmt  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  NameAndComment nc  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[REPLACE]^ze.setComment ( originalName ) ;^578^^^^^560^581^[REPLACE] ze.setComment ( newComment ) ;^[METHOD] setNameAndCommentFromExtraFields [TYPE] void [PARAMETER] ZipArchiveEntry ze NameAndComment nc [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  UnicodePathExtraField name  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  UnicodeCommentExtraField cmt  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  NameAndComment nc  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[REPLACE]^UnicodeCommentExtraField cmt =  ( UnicodeCommentExtraField ) ze .setExtra ( name )  ;^573^574^^^^560^581^[REPLACE] UnicodeCommentExtraField cmt =  ( UnicodeCommentExtraField ) ze.getExtraField ( UnicodeCommentExtraField.UCOM_ID ) ;^[METHOD] setNameAndCommentFromExtraFields [TYPE] void [PARAMETER] ZipArchiveEntry ze NameAndComment nc [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  UnicodePathExtraField name  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  UnicodeCommentExtraField cmt  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  NameAndComment nc  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[REPLACE]^if  ( originalName == null )  {^577^^^^^560^581^[REPLACE] if  ( newComment != null )  {^[METHOD] setNameAndCommentFromExtraFields [TYPE] void [PARAMETER] ZipArchiveEntry ze NameAndComment nc [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  UnicodePathExtraField name  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  UnicodeCommentExtraField cmt  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  NameAndComment nc  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[REPLACE]^UnicodeCommentExtraField cmt =  ( UnicodeCommentExtraField ) ze.getMethod ( UnicodeCommentExtraField.UCOM_ID ) ;^573^574^^^^560^581^[REPLACE] UnicodeCommentExtraField cmt =  ( UnicodeCommentExtraField ) ze.getExtraField ( UnicodeCommentExtraField.UCOM_ID ) ;^[METHOD] setNameAndCommentFromExtraFields [TYPE] void [PARAMETER] ZipArchiveEntry ze NameAndComment nc [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  UnicodePathExtraField name  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  UnicodeCommentExtraField cmt  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  NameAndComment nc  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[ADD]^^575^576^^^^560^581^[ADD] String newComment = getUnicodeStringIfOriginalMatches ( cmt, nc.comment ) ;^[METHOD] setNameAndCommentFromExtraFields [TYPE] void [PARAMETER] ZipArchiveEntry ze NameAndComment nc [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  UnicodePathExtraField name  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  UnicodeCommentExtraField cmt  [TYPE]  ZipArchiveEntry ze  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  NameAndComment nc  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  remaining  sig  start  stopSearching  time 
[REPLACE]^if  ( f == null )  {^592^^^^^590^611^[REPLACE] if  ( f != null )  {^[METHOD] getUnicodeStringIfOriginalMatches [TYPE] String [PARAMETER] AbstractUnicodeExtraField f byte[] orig [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  AbstractUnicodeExtraField f  [TYPE]  CRC32 crc32  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  IOException ex  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^if  (time  ||  f.getNameCRC32 (  )  )  {^597^^^^^590^611^[REPLACE] if  ( origCRC32 == f.getNameCRC32 (  )  )  {^[METHOD] getUnicodeStringIfOriginalMatches [TYPE] String [PARAMETER] AbstractUnicodeExtraField f byte[] orig [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  AbstractUnicodeExtraField f  [TYPE]  CRC32 crc32  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  IOException ex  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[ADD]^.UTF8_ZIP_ENCODING.decode ( f.getUnicodeName (  )  ) ;^598^599^600^601^602^590^611^[ADD] try { return ZipEncodingHelper .UTF8_ZIP_ENCODING.decode ( f.getUnicodeName (  )  ) ; } catch  ( IOException ex )  {^[METHOD] getUnicodeStringIfOriginalMatches [TYPE] String [PARAMETER] AbstractUnicodeExtraField f byte[] orig [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  AbstractUnicodeExtraField f  [TYPE]  CRC32 crc32  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  IOException ex  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^return ZipEncodingHelper .UTF8_ZIP_ENCODING.decode ( f.getNameCRC32 (  )  ) ;^599^600^^^^590^611^[REPLACE] return ZipEncodingHelper .UTF8_ZIP_ENCODING.decode ( f.getUnicodeName (  )  ) ;^[METHOD] getUnicodeStringIfOriginalMatches [TYPE] String [PARAMETER] AbstractUnicodeExtraField f byte[] orig [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  AbstractUnicodeExtraField f  [TYPE]  CRC32 crc32  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  IOException ex  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^return  ( ZipArchiveEntry )  nameMap.get ( name ) ;^599^600^^^^590^611^[REPLACE] return ZipEncodingHelper .UTF8_ZIP_ENCODING.decode ( f.getUnicodeName (  )  ) ;^[METHOD] getUnicodeStringIfOriginalMatches [TYPE] String [PARAMETER] AbstractUnicodeExtraField f byte[] orig [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  AbstractUnicodeExtraField f  [TYPE]  CRC32 crc32  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  IOException ex  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^return this;^606^^^^^590^611^[REPLACE] return null;^[METHOD] getUnicodeStringIfOriginalMatches [TYPE] String [PARAMETER] AbstractUnicodeExtraField f byte[] orig [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  AbstractUnicodeExtraField f  [TYPE]  CRC32 crc32  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  IOException ex  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^return ZipEncodingHelper .UTF8_ZIP_ENCODING.decode ( f .getNameCRC32 (  )   ) ;^599^600^^^^590^611^[REPLACE] return ZipEncodingHelper .UTF8_ZIP_ENCODING.decode ( f.getUnicodeName (  )  ) ;^[METHOD] getUnicodeStringIfOriginalMatches [TYPE] String [PARAMETER] AbstractUnicodeExtraField f byte[] orig [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  AbstractUnicodeExtraField f  [TYPE]  CRC32 crc32  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  IOException ex  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^return true;^606^^^^^590^611^[REPLACE] return null;^[METHOD] getUnicodeStringIfOriginalMatches [TYPE] String [PARAMETER] AbstractUnicodeExtraField f byte[] orig [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  AbstractUnicodeExtraField f  [TYPE]  CRC32 crc32  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  IOException ex  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^Enumeration e = getEntries (  ) ;^593^^^^^590^611^[REPLACE] CRC32 crc32 = new CRC32 (  ) ;^[METHOD] getUnicodeStringIfOriginalMatches [TYPE] String [PARAMETER] AbstractUnicodeExtraField f byte[] orig [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  AbstractUnicodeExtraField f  [TYPE]  CRC32 crc32  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  IOException ex  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[ADD]^^593^594^^^^590^611^[ADD] CRC32 crc32 = new CRC32 (  ) ; crc32.update ( orig ) ;^[METHOD] getUnicodeStringIfOriginalMatches [TYPE] String [PARAMETER] AbstractUnicodeExtraField f byte[] orig [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  AbstractUnicodeExtraField f  [TYPE]  CRC32 crc32  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  IOException ex  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^long origCRC32 = crc32 .getValue ( sig )  ;^595^^^^^590^611^[REPLACE] long origCRC32 = crc32.getValue (  ) ;^[METHOD] getUnicodeStringIfOriginalMatches [TYPE] String [PARAMETER] AbstractUnicodeExtraField f byte[] orig [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  AbstractUnicodeExtraField f  [TYPE]  CRC32 crc32  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  IOException ex  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^if  ( origCRC32  || stopSearching (  )  )  {^597^^^^^590^611^[REPLACE] if  ( origCRC32 == f.getNameCRC32 (  )  )  {^[METHOD] getUnicodeStringIfOriginalMatches [TYPE] String [PARAMETER] AbstractUnicodeExtraField f byte[] orig [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  AbstractUnicodeExtraField f  [TYPE]  CRC32 crc32  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  IOException ex  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^long origCRC32 = crc32 .getValue ( b )  ;^595^^^^^590^611^[REPLACE] long origCRC32 = crc32.getValue (  ) ;^[METHOD] getUnicodeStringIfOriginalMatches [TYPE] String [PARAMETER] AbstractUnicodeExtraField f byte[] orig [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  AbstractUnicodeExtraField f  [TYPE]  CRC32 crc32  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  IOException ex  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^return true;^610^^^^^590^611^[REPLACE] return null;^[METHOD] getUnicodeStringIfOriginalMatches [TYPE] String [PARAMETER] AbstractUnicodeExtraField f byte[] orig [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  AbstractUnicodeExtraField f  [TYPE]  CRC32 crc32  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  IOException ex  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^if  ( remaining--  >  0 )  {^629^^^^^628^640^[REPLACE] if  ( remaining-- <= 0 )  {^[METHOD] read [TYPE] int [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^if  ( zipfile != null )  {^630^^^^^628^640^[REPLACE] if  ( addDummyByte )  {^[METHOD] read [TYPE] int [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^addDummyByte = true;^631^^^^^628^640^[REPLACE] addDummyByte = false;^[METHOD] read [TYPE] int [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^return 0 >> 3;^632^^^^^628^640^[REPLACE] return 0;^[METHOD] read [TYPE] int [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^return 2;^632^^^^^628^640^[REPLACE] return 0;^[METHOD] read [TYPE] int [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^return -3;^634^^^^^628^640^[REPLACE] return -1;^[METHOD] read [TYPE] int [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[ADD]^addDummyByte = false;return 0;^630^631^632^633^^628^640^[ADD] if  ( addDummyByte )  { addDummyByte = false; return 0; }^[METHOD] read [TYPE] int [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[ADD]^^631^632^^^^628^640^[ADD] addDummyByte = false; return 0;^[METHOD] read [TYPE] int [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^return 1;^632^^^^^628^640^[REPLACE] return 0;^[METHOD] read [TYPE] int [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^return 4;^632^^^^^628^640^[REPLACE] return 0;^[METHOD] read [TYPE] int [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^return -2;^634^^^^^628^640^[REPLACE] return -1;^[METHOD] read [TYPE] int [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^return archive.length (  ) ;^638^^^^^628^640^[REPLACE] return archive.read (  ) ;^[METHOD] read [TYPE] int [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  lenToSkip  off  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^if  (time  <  0 )  {^643^^^^^642^669^[REPLACE] if  ( remaining <= 0 )  {^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[ADD]^^643^644^645^646^647^642^669^[ADD] if  ( remaining <= 0 )  { if  ( addDummyByte )  { addDummyByte = false; b[off] = 0; return 1;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^if  ( zipfile != null )  {^644^^^^^642^669^[REPLACE] if  ( addDummyByte )  {^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^addDummyByte = true;^645^^^^^642^669^[REPLACE] addDummyByte = false;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^b[off] = 3;^646^^^^^642^669^[REPLACE] b[off] = 0;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[ADD]^^646^^^^^642^669^[ADD] b[off] = 0;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^return 1 - 3;^647^^^^^642^669^[REPLACE] return 1;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^b[off] = 1;^646^^^^^642^669^[REPLACE] b[off] = 0;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^return 0;^647^^^^^642^669^[REPLACE] return 1;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^return -1 - 3;^649^^^^^642^669^[REPLACE] return -1;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^b[off] = 4;^646^^^^^642^669^[REPLACE] b[off] = 0;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^return 1L;^647^^^^^642^669^[REPLACE] return 1;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^b[off] = 0L;^646^^^^^642^669^[REPLACE] b[off] = 0;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^return -0;^649^^^^^642^669^[REPLACE] return -1;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^if  ( versionMadeBy  <  0 )  {^652^^^^^642^669^[REPLACE] if  ( len <= 0 )  {^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^return 1;^653^^^^^642^669^[REPLACE] return 0;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^return 0 + 0;^653^^^^^642^669^[REPLACE] return 0;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^if  (versionMadeBy  >=  remaining )  {^656^^^^^642^669^[REPLACE] if  ( len > remaining )  {^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^len =  (  long  )  remaining;^657^^^^^642^669^[REPLACE] len =  ( int )  remaining;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[ADD]^^657^^^^^642^669^[ADD] len =  ( int )  remaining;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^int ret = -4;^659^^^^^642^669^[REPLACE] int ret = -1;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^ret =  archive.read ( null, off, len ) ;^662^^^^^642^669^[REPLACE] ret = archive.read ( b, off, len ) ;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^if  (versionMadeBy  <=  0 )  {^664^^^^^642^669^[REPLACE] if  ( ret > 0 )  {^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[ADD]^^664^665^666^667^^642^669^[ADD] if  ( ret > 0 )  { loc += ret; remaining -= ret; }^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^loc +=  versionMadeBy;^665^^^^^642^669^[REPLACE] loc += ret;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^remaining -=  null;^666^^^^^642^669^[REPLACE] remaining -= ret;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^loc +=  null;^665^^^^^642^669^[REPLACE] loc += ret;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[ADD]^^665^^^^^642^669^[ADD] loc += ret;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^remaining -=  versionMadeBy;^666^^^^^642^669^[REPLACE] remaining -= ret;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^return versionMadeBy;^668^^^^^642^669^[REPLACE] return ret;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^addDummyByte = false;^676^^^^^675^677^[REPLACE] addDummyByte = true;^[METHOD] addDummy [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[ADD]^^676^^^^^675^677^[ADD] addDummyByte = true;^[METHOD] addDummy [TYPE] void [PARAMETER] [CLASS] ZipFile OffsetEntry BoundedInputStream NameAndComment   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^private long headerOffset ;^84^^^^^^^[REPLACE] private long headerOffset = -1;^[METHOD] addDummy [TYPE] void [PARAMETER] [CLASS] OffsetEntry   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^private long dataOffset ;^85^^^^^^^[REPLACE] private long dataOffset = -1;^[METHOD] addDummy [TYPE] void [PARAMETER] [CLASS] OffsetEntry   [TYPE]  byte[] b  cdExtraData  cfdOffset  cfh  comment  fileName  localExtraData  name  orig  sig  signatureBytes  start  [TYPE]  boolean addDummyByte  false  found  hasEFS  success  true  useUnicodeExtraFields  [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  RandomAccessFile archive  [TYPE]  String encoding  name  newComment  newName  originalName  [TYPE]  Map entries  entriesWithoutEFS  nameMap  [TYPE]  int BYTE_SHIFT  CFD_LOCATOR_OFFSET  CFH_LEN  HASH_SIZE  MAX_EOCD_SIZE  MIN_EOCD_SIZE  NIBLET_MASK  POS_0  POS_1  POS_2  POS_3  SHORT  WORD  commentLen  curr  extraFieldLen  extraLen  fileNameLen  generalPurposeFlag  i  len  lenToSkip  off  ret  skipped  versionMadeBy  [TYPE]  long LFH_OFFSET_FOR_FILENAME_LENGTH  cfhSig  dataOffset  headerOffset  loc  off  offset  origCRC32  remaining  sig  start  stopSearching  time 
[REPLACE]^private  short  remaining;^619^^^^^^^[REPLACE] private long remaining;^[METHOD] <init> [TYPE] ZipFile$OffsetEntry() [PARAMETER] [CLASS] BoundedInputStream   [TYPE]  long dataOffset  headerOffset  [TYPE]  boolean false  true 
[REPLACE]^private boolean addDummyByte  = null ;^621^^^^^^^[REPLACE] private boolean addDummyByte = false;^[METHOD] <init> [TYPE] ZipFile$OffsetEntry() [PARAMETER] [CLASS] BoundedInputStream   [TYPE]  long dataOffset  headerOffset  [TYPE]  boolean false  true 
[REPLACE]^this.remaining =  start;^624^^^^^623^626^[REPLACE] this.remaining = remaining;^[METHOD] <init> [TYPE] ZipFile$BoundedInputStream(long,long) [PARAMETER] long start long remaining [CLASS] BoundedInputStream   [TYPE]  long loc  remaining  start  [TYPE]  boolean addDummyByte  false  true 
[ADD]^^624^625^^^^623^626^[ADD] this.remaining = remaining; loc = start;^[METHOD] <init> [TYPE] ZipFile$BoundedInputStream(long,long) [PARAMETER] long start long remaining [CLASS] BoundedInputStream   [TYPE]  long loc  remaining  start  [TYPE]  boolean addDummyByte  false  true 
[REPLACE]^loc =  remaining;^625^^^^^623^626^[REPLACE] loc = start;^[METHOD] <init> [TYPE] ZipFile$BoundedInputStream(long,long) [PARAMETER] long start long remaining [CLASS] BoundedInputStream   [TYPE]  long loc  remaining  start  [TYPE]  boolean addDummyByte  false  true 
[REPLACE]^if  ( remaining--  == start )  {^629^^^^^628^640^[REPLACE] if  ( remaining-- <= 0 )  {^[METHOD] read [TYPE] int [PARAMETER] [CLASS] BoundedInputStream   [TYPE]  long loc  remaining  start  [TYPE]  boolean addDummyByte  false  true 
[ADD]^^629^630^631^632^633^628^640^[ADD] if  ( remaining-- <= 0 )  { if  ( addDummyByte )  { addDummyByte = false; return 0; }^[METHOD] read [TYPE] int [PARAMETER] [CLASS] BoundedInputStream   [TYPE]  long loc  remaining  start  [TYPE]  boolean addDummyByte  false  true 
[REPLACE]^if  ( remaining-- <= 0 )  {^630^^^^^628^640^[REPLACE] if  ( addDummyByte )  {^[METHOD] read [TYPE] int [PARAMETER] [CLASS] BoundedInputStream   [TYPE]  long loc  remaining  start  [TYPE]  boolean addDummyByte  false  true 
[REMOVE]^if  ( addDummyByte )  {     addDummyByte = false;     b[off] = 0;     return 1; }^630^^^^^628^640^[REMOVE] ^[METHOD] read [TYPE] int [PARAMETER] [CLASS] BoundedInputStream   [TYPE]  long loc  remaining  start  [TYPE]  boolean addDummyByte  false  true 
[REPLACE]^addDummyByte = true;^631^^^^^628^640^[REPLACE] addDummyByte = false;^[METHOD] read [TYPE] int [PARAMETER] [CLASS] BoundedInputStream   [TYPE]  long loc  remaining  start  [TYPE]  boolean addDummyByte  false  true 
[REPLACE]^return 0L;^632^^^^^628^640^[REPLACE] return 0;^[METHOD] read [TYPE] int [PARAMETER] [CLASS] BoundedInputStream   [TYPE]  long loc  remaining  start  [TYPE]  boolean addDummyByte  false  true 
[REPLACE]^return -1 >>> 3;^634^^^^^628^640^[REPLACE] return -1;^[METHOD] read [TYPE] int [PARAMETER] [CLASS] BoundedInputStream   [TYPE]  long loc  remaining  start  [TYPE]  boolean addDummyByte  false  true 
[ADD]^addDummyByte = false;return 0;^630^631^632^633^^628^640^[ADD] if  ( addDummyByte )  { addDummyByte = false; return 0; }^[METHOD] read [TYPE] int [PARAMETER] [CLASS] BoundedInputStream   [TYPE]  long loc  remaining  start  [TYPE]  boolean addDummyByte  false  true 
[REPLACE]^addDummyByte = true; ;^631^^^^^628^640^[REPLACE] addDummyByte = false;^[METHOD] read [TYPE] int [PARAMETER] [CLASS] BoundedInputStream   [TYPE]  long loc  remaining  start  [TYPE]  boolean addDummyByte  false  true 
[REPLACE]^return 0 + 1;^632^^^^^628^640^[REPLACE] return 0;^[METHOD] read [TYPE] int [PARAMETER] [CLASS] BoundedInputStream   [TYPE]  long loc  remaining  start  [TYPE]  boolean addDummyByte  false  true 
[REPLACE]^return 0 * 1;^632^^^^^628^640^[REPLACE] return 0;^[METHOD] read [TYPE] int [PARAMETER] [CLASS] BoundedInputStream   [TYPE]  long loc  remaining  start  [TYPE]  boolean addDummyByte  false  true 
[REPLACE]^return -1 * 3;^634^^^^^628^640^[REPLACE] return -1;^[METHOD] read [TYPE] int [PARAMETER] [CLASS] BoundedInputStream   [TYPE]  long loc  remaining  start  [TYPE]  boolean addDummyByte  false  true 
[REPLACE]^return archive .read (  )  ;^638^^^^^628^640^[REPLACE] return archive.read (  ) ;^[METHOD] read [TYPE] int [PARAMETER] [CLASS] BoundedInputStream   [TYPE]  long loc  remaining  start  [TYPE]  boolean addDummyByte  false  true 
[REPLACE]^if  ( remaining  ==  0 )  {^643^^^^^642^669^[REPLACE] if  ( remaining <= 0 )  {^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] BoundedInputStream   [TYPE]  byte[] b  [TYPE]  boolean addDummyByte  false  true  [TYPE]  long loc  remaining  start  [TYPE]  int len  off  ret 
[REPLACE]^if  ( remaining-- <= 0 )  {^644^^^^^642^669^[REPLACE] if  ( addDummyByte )  {^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] BoundedInputStream   [TYPE]  byte[] b  [TYPE]  boolean addDummyByte  false  true  [TYPE]  long loc  remaining  start  [TYPE]  int len  off  ret 
[ADD]^addDummyByte = false;b[off] = 0;return 1;^644^645^646^647^648^642^669^[ADD] if  ( addDummyByte )  { addDummyByte = false; b[off] = 0; return 1; }^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] BoundedInputStream   [TYPE]  byte[] b  [TYPE]  boolean addDummyByte  false  true  [TYPE]  long loc  remaining  start  [TYPE]  int len  off  ret 
[REPLACE]^addDummyByte = true;^645^^^^^642^669^[REPLACE] addDummyByte = false;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] BoundedInputStream   [TYPE]  byte[] b  [TYPE]  boolean addDummyByte  false  true  [TYPE]  long loc  remaining  start  [TYPE]  int len  off  ret 
[REPLACE]^b[off] = 1;^646^^^^^642^669^[REPLACE] b[off] = 0;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] BoundedInputStream   [TYPE]  byte[] b  [TYPE]  boolean addDummyByte  false  true  [TYPE]  long loc  remaining  start  [TYPE]  int len  off  ret 
[REPLACE]^return 2;^647^^^^^642^669^[REPLACE] return 1;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] BoundedInputStream   [TYPE]  byte[] b  [TYPE]  boolean addDummyByte  false  true  [TYPE]  long loc  remaining  start  [TYPE]  int len  off  ret 
[REPLACE]^b[off] = 0L;^646^^^^^642^669^[REPLACE] b[off] = 0;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] BoundedInputStream   [TYPE]  byte[] b  [TYPE]  boolean addDummyByte  false  true  [TYPE]  long loc  remaining  start  [TYPE]  int len  off  ret 
[REPLACE]^return 1 * 4;^647^^^^^642^669^[REPLACE] return 1;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] BoundedInputStream   [TYPE]  byte[] b  [TYPE]  boolean addDummyByte  false  true  [TYPE]  long loc  remaining  start  [TYPE]  int len  off  ret 
[REPLACE]^return -1 + 0;^649^^^^^642^669^[REPLACE] return -1;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] BoundedInputStream   [TYPE]  byte[] b  [TYPE]  boolean addDummyByte  false  true  [TYPE]  long loc  remaining  start  [TYPE]  int len  off  ret 
[ADD]^^644^645^646^647^648^642^669^[ADD] if  ( addDummyByte )  { addDummyByte = false; b[off] = 0; return 1; }^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] BoundedInputStream   [TYPE]  byte[] b  [TYPE]  boolean addDummyByte  false  true  [TYPE]  long loc  remaining  start  [TYPE]  int len  off  ret 
[REPLACE]^b[off] = 4;^646^^^^^642^669^[REPLACE] b[off] = 0;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] BoundedInputStream   [TYPE]  byte[] b  [TYPE]  boolean addDummyByte  false  true  [TYPE]  long loc  remaining  start  [TYPE]  int len  off  ret 
[ADD]^^646^647^^^^642^669^[ADD] b[off] = 0; return 1;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] BoundedInputStream   [TYPE]  byte[] b  [TYPE]  boolean addDummyByte  false  true  [TYPE]  long loc  remaining  start  [TYPE]  int len  off  ret 
[REPLACE]^return 3;^647^^^^^642^669^[REPLACE] return 1;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] BoundedInputStream   [TYPE]  byte[] b  [TYPE]  boolean addDummyByte  false  true  [TYPE]  long loc  remaining  start  [TYPE]  int len  off  ret 
[REPLACE]^b[off] = 0 + 4;^646^^^^^642^669^[REPLACE] b[off] = 0;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] BoundedInputStream   [TYPE]  byte[] b  [TYPE]  boolean addDummyByte  false  true  [TYPE]  long loc  remaining  start  [TYPE]  int len  off  ret 
[REPLACE]^return 1 / 4;^647^^^^^642^669^[REPLACE] return 1;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] BoundedInputStream   [TYPE]  byte[] b  [TYPE]  boolean addDummyByte  false  true  [TYPE]  long loc  remaining  start  [TYPE]  int len  off  ret 
[REPLACE]^return -1 * 1;^649^^^^^642^669^[REPLACE] return -1;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] BoundedInputStream   [TYPE]  byte[] b  [TYPE]  boolean addDummyByte  false  true  [TYPE]  long loc  remaining  start  [TYPE]  int len  off  ret 
[REPLACE]^if  ( len  ==  1 )  {^652^^^^^642^669^[REPLACE] if  ( len <= 0 )  {^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] BoundedInputStream   [TYPE]  byte[] b  [TYPE]  boolean addDummyByte  false  true  [TYPE]  long loc  remaining  start  [TYPE]  int len  off  ret 
[REPLACE]^return 2;^653^^^^^642^669^[REPLACE] return 0;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] BoundedInputStream   [TYPE]  byte[] b  [TYPE]  boolean addDummyByte  false  true  [TYPE]  long loc  remaining  start  [TYPE]  int len  off  ret 
[REPLACE]^return 0 + 0;^653^^^^^642^669^[REPLACE] return 0;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] BoundedInputStream   [TYPE]  byte[] b  [TYPE]  boolean addDummyByte  false  true  [TYPE]  long loc  remaining  start  [TYPE]  int len  off  ret 
[REPLACE]^if  ( len  <  remaining )  {^656^^^^^642^669^[REPLACE] if  ( len > remaining )  {^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] BoundedInputStream   [TYPE]  byte[] b  [TYPE]  boolean addDummyByte  false  true  [TYPE]  long loc  remaining  start  [TYPE]  int len  off  ret 
[ADD]^^656^657^658^^^642^669^[ADD] if  ( len > remaining )  { len =  ( int )  remaining; }^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] BoundedInputStream   [TYPE]  byte[] b  [TYPE]  boolean addDummyByte  false  true  [TYPE]  long loc  remaining  start  [TYPE]  int len  off  ret 
[REPLACE]^len =  (  long  )  remaining;^657^^^^^642^669^[REPLACE] len =  ( int )  remaining;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] BoundedInputStream   [TYPE]  byte[] b  [TYPE]  boolean addDummyByte  false  true  [TYPE]  long loc  remaining  start  [TYPE]  int len  off  ret 
[REPLACE]^len  =  len ;^657^^^^^642^669^[REPLACE] len =  ( int )  remaining;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] BoundedInputStream   [TYPE]  byte[] b  [TYPE]  boolean addDummyByte  false  true  [TYPE]  long loc  remaining  start  [TYPE]  int len  off  ret 
[REPLACE]^int ret = -4;^659^^^^^642^669^[REPLACE] int ret = -1;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] BoundedInputStream   [TYPE]  byte[] b  [TYPE]  boolean addDummyByte  false  true  [TYPE]  long loc  remaining  start  [TYPE]  int len  off  ret 
[REPLACE]^ret =  archive.read ( null, off, len ) ;^662^^^^^642^669^[REPLACE] ret = archive.read ( b, off, len ) ;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] BoundedInputStream   [TYPE]  byte[] b  [TYPE]  boolean addDummyByte  false  true  [TYPE]  long loc  remaining  start  [TYPE]  int len  off  ret 
[REPLACE]^if  ( len  >=  4 )  {^664^^^^^642^669^[REPLACE] if  ( ret > 0 )  {^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] BoundedInputStream   [TYPE]  byte[] b  [TYPE]  boolean addDummyByte  false  true  [TYPE]  long loc  remaining  start  [TYPE]  int len  off  ret 
[REMOVE]^if  ( len >  ( remaining )  )  {     len =  (  ( int )   ( remaining )  ) ; }^664^^^^^642^669^[REMOVE] ^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] BoundedInputStream   [TYPE]  byte[] b  [TYPE]  boolean addDummyByte  false  true  [TYPE]  long loc  remaining  start  [TYPE]  int len  off  ret 
[REPLACE]^loc +=  len;^665^^^^^642^669^[REPLACE] loc += ret;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] BoundedInputStream   [TYPE]  byte[] b  [TYPE]  boolean addDummyByte  false  true  [TYPE]  long loc  remaining  start  [TYPE]  int len  off  ret 
[REPLACE]^remaining -=  len;^666^^^^^642^669^[REPLACE] remaining -= ret;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] BoundedInputStream   [TYPE]  byte[] b  [TYPE]  boolean addDummyByte  false  true  [TYPE]  long loc  remaining  start  [TYPE]  int len  off  ret 
[REPLACE]^remaining -=  null;^666^^^^^642^669^[REPLACE] remaining -= ret;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] BoundedInputStream   [TYPE]  byte[] b  [TYPE]  boolean addDummyByte  false  true  [TYPE]  long loc  remaining  start  [TYPE]  int len  off  ret 
[REPLACE]^return len;^668^^^^^642^669^[REPLACE] return ret;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] BoundedInputStream   [TYPE]  byte[] b  [TYPE]  boolean addDummyByte  false  true  [TYPE]  long loc  remaining  start  [TYPE]  int len  off  ret 
[REPLACE]^addDummyByte = false;^676^^^^^675^677^[REPLACE] addDummyByte = true;^[METHOD] addDummy [TYPE] void [PARAMETER] [CLASS] BoundedInputStream   [TYPE]  long loc  remaining  start  [TYPE]  boolean addDummyByte  false  true 
[REPLACE]^private  byte[] name;^681^^^^^^^[REPLACE] private final byte[] name;^[METHOD] addDummy [TYPE] void [PARAMETER] [CLASS] NameAndComment   [TYPE]  long loc  remaining  start  [TYPE]  boolean addDummyByte  false  true 
[REPLACE]^private  byte[] comment;^682^^^^^^^[REPLACE] private final byte[] comment;^[METHOD] addDummy [TYPE] void [PARAMETER] [CLASS] NameAndComment   [TYPE]  long loc  remaining  start  [TYPE]  boolean addDummyByte  false  true 
[REPLACE]^this.name =  null;^684^^^^^683^686^[REPLACE] this.name = name;^[METHOD] <init> [TYPE] ZipFile$NameAndComment(byte[],byte[]) [PARAMETER] byte[] name byte[] comment [CLASS] NameAndComment   [TYPE]  byte[] comment  name  [TYPE]  boolean false  true 
[REPLACE]^this.comment =  name;^685^^^^^683^686^[REPLACE] this.comment = comment;^[METHOD] <init> [TYPE] ZipFile$NameAndComment(byte[],byte[]) [PARAMETER] byte[] name byte[] comment [CLASS] NameAndComment   [TYPE]  byte[] comment  name  [TYPE]  boolean false  true 
