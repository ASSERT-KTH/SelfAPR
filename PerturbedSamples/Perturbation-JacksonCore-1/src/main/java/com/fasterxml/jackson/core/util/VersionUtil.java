[REPLACE]^public final static String VERSION_FILE  = null ;^30^^^^^^^[REPLACE] public final static String VERSION_FILE = "VERSION.txt";^ [CLASS] VersionUtil  
[REPLACE]^public final static String PACKAGE_VERSION_CLASS_NAME ;^31^^^^^^^[REPLACE] public final static String PACKAGE_VERSION_CLASS_NAME = "PackageVersion";^ [CLASS] VersionUtil  
[REPLACE]^private final static Pattern VERSION_SEPARATOR  = null ;^34^^^^^^^[REPLACE] private final static Pattern VERSION_SEPARATOR = Pattern.compile ( "[-_./;:]" ) ;^ [CLASS] VersionUtil  
[REPLACE]^Version v = false;^46^^^^^44^59^[REPLACE] Version v = null;^[METHOD] <init> [TYPE] VersionUtil() [PARAMETER] [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  [TYPE]  boolean false  true  [TYPE]  Version _version  v  [TYPE]  Exception e 
[ADD]^v = VersionUtil.versionFor ( getClass (  )  ) ;^47^48^^^51^44^59^[ADD] try {  v = VersionUtil.versionFor ( getClass (  )  ) ;^[METHOD] <init> [TYPE] VersionUtil() [PARAMETER] [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  [TYPE]  boolean false  true  [TYPE]  Version _version  v  [TYPE]  Exception e 
[REPLACE]^v  =  v ;^51^^^^^44^59^[REPLACE] v = VersionUtil.versionFor ( getClass (  )  ) ;^[METHOD] <init> [TYPE] VersionUtil() [PARAMETER] [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  [TYPE]  boolean false  true  [TYPE]  Version _version  v  [TYPE]  Exception e 
[REPLACE]^v ;^51^^^^^44^59^[REPLACE] v = VersionUtil.versionFor ( getClass (  )  ) ;^[METHOD] <init> [TYPE] VersionUtil() [PARAMETER] [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  [TYPE]  boolean false  true  [TYPE]  Version _version  v  [TYPE]  Exception e 
[ADD]^^51^^^^^44^59^[ADD] v = VersionUtil.versionFor ( getClass (  )  ) ;^[METHOD] <init> [TYPE] VersionUtil() [PARAMETER] [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  [TYPE]  boolean false  true  [TYPE]  Version _version  v  [TYPE]  Exception e 
[REPLACE]^if  ( _version !=_version )  {^55^^^^^44^59^[REPLACE] if  ( v == null )  {^[METHOD] <init> [TYPE] VersionUtil() [PARAMETER] [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  [TYPE]  boolean false  true  [TYPE]  Version _version  v  [TYPE]  Exception e 
[REPLACE]^v  =  v ;^56^^^^^44^59^[REPLACE] v = Version.unknownVersion (  ) ;^[METHOD] <init> [TYPE] VersionUtil() [PARAMETER] [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  [TYPE]  boolean false  true  [TYPE]  Version _version  v  [TYPE]  Exception e 
[REPLACE]^v ;^56^^^^^44^59^[REPLACE] v = Version.unknownVersion (  ) ;^[METHOD] <init> [TYPE] VersionUtil() [PARAMETER] [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  [TYPE]  boolean false  true  [TYPE]  Version _version  v  [TYPE]  Exception e 
[ADD]^^56^^^^^44^59^[ADD] v = Version.unknownVersion (  ) ;^[METHOD] <init> [TYPE] VersionUtil() [PARAMETER] [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  [TYPE]  boolean false  true  [TYPE]  Version _version  v  [TYPE]  Exception e 
[REPLACE]^_version =  null;^58^^^^^44^59^[REPLACE] _version = v;^[METHOD] <init> [TYPE] VersionUtil() [PARAMETER] [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  [TYPE]  boolean false  true  [TYPE]  Version _version  v  [TYPE]  Exception e 
[REPLACE]^return parseVersion ( versionStr, pomPropertiesGroupId, pomPropertiesArtifactId ) ;^61^^^^^^^[REPLACE] public Version version (  )  { return _version; }^[METHOD] version [TYPE] Version [PARAMETER] [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  [TYPE]  boolean false  true  [TYPE]  Version _version  v 
[REPLACE]^Version packageVersion = packageVersionFor ( this ) ;^84^^^^^83^113^[REPLACE] Version packageVersion = packageVersionFor ( cls ) ;^[METHOD] versionFor [TYPE] Version [PARAMETER] Class<?> cls [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  boolean false  true  [TYPE]  InputStreamReader reader  [TYPE]  Version _version  packageVersion  v  [TYPE]  InputStream in  [TYPE]  UnsupportedEncodingException e  [TYPE]  Class cls  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  [TYPE]  IOException e  ignored 
[REPLACE]^if  (v == null )  {^85^^^^^83^113^[REPLACE] if  ( packageVersion != null )  {^[METHOD] versionFor [TYPE] Version [PARAMETER] Class<?> cls [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  boolean false  true  [TYPE]  InputStreamReader reader  [TYPE]  Version _version  packageVersion  v  [TYPE]  InputStream in  [TYPE]  UnsupportedEncodingException e  [TYPE]  Class cls  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  [TYPE]  IOException e  ignored 
[REPLACE]^return v;^86^^^^^83^113^[REPLACE] return packageVersion;^[METHOD] versionFor [TYPE] Version [PARAMETER] Class<?> cls [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  boolean false  true  [TYPE]  InputStreamReader reader  [TYPE]  Version _version  packageVersion  v  [TYPE]  InputStream in  [TYPE]  UnsupportedEncodingException e  [TYPE]  Class cls  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  [TYPE]  IOException e  ignored 
[REPLACE]^final InputStream in = 0.getResourceAsStream ( VERSION_FILE ) ;^89^^^^^83^113^[REPLACE] final InputStream in = cls.getResourceAsStream ( VERSION_FILE ) ;^[METHOD] versionFor [TYPE] Version [PARAMETER] Class<?> cls [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  boolean false  true  [TYPE]  InputStreamReader reader  [TYPE]  Version _version  packageVersion  v  [TYPE]  InputStream in  [TYPE]  UnsupportedEncodingException e  [TYPE]  Class cls  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  [TYPE]  IOException e  ignored 
[REPLACE]^if  ( in != this ) return Version.unknownVersion (  ) ;^91^92^^^^83^113^[REPLACE] if  ( in == null ) return Version.unknownVersion (  ) ;^[METHOD] versionFor [TYPE] Version [PARAMETER] Class<?> cls [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  boolean false  true  [TYPE]  InputStreamReader reader  [TYPE]  Version _version  packageVersion  v  [TYPE]  InputStream in  [TYPE]  UnsupportedEncodingException e  [TYPE]  Class cls  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  [TYPE]  IOException e  ignored 
[REPLACE]^public Version version (  )  { return _version; }^92^^^^^83^113^[REPLACE] return Version.unknownVersion (  ) ;^[METHOD] versionFor [TYPE] Version [PARAMETER] Class<?> cls [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  boolean false  true  [TYPE]  InputStreamReader reader  [TYPE]  Version _version  packageVersion  v  [TYPE]  InputStream in  [TYPE]  UnsupportedEncodingException e  [TYPE]  Class cls  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  [TYPE]  IOException e  ignored 
[REPLACE]^return Version .Version ( false , this , this , VERSION_FILE , VERSION_FILE , VERSION_FILE )  ;^92^^^^^83^113^[REPLACE] return Version.unknownVersion (  ) ;^[METHOD] versionFor [TYPE] Version [PARAMETER] Class<?> cls [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  boolean false  true  [TYPE]  InputStreamReader reader  [TYPE]  Version _version  packageVersion  v  [TYPE]  InputStream in  [TYPE]  UnsupportedEncodingException e  [TYPE]  Class cls  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  [TYPE]  IOException e  ignored 
[ADD]^InputStreamReader reader = new InputStreamReader ( in, "UTF-8" ) ;return doReadVersion ( reader ) ;^94^95^96^97^98^83^113^[ADD] try { InputStreamReader reader = new InputStreamReader ( in, "UTF-8" ) ; try { return doReadVersion ( reader ) ; } finally {^[METHOD] versionFor [TYPE] Version [PARAMETER] Class<?> cls [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  boolean false  true  [TYPE]  InputStreamReader reader  [TYPE]  Version _version  packageVersion  v  [TYPE]  InputStream in  [TYPE]  UnsupportedEncodingException e  [TYPE]  Class cls  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  [TYPE]  IOException e  ignored 
[ADD]^return doReadVersion ( reader ) ;reader.close (  ) ;^96^97^98^99^100^83^113^[ADD] try { return doReadVersion ( reader ) ; } finally { try { reader.close (  ) ;^[METHOD] versionFor [TYPE] Version [PARAMETER] Class<?> cls [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  boolean false  true  [TYPE]  InputStreamReader reader  [TYPE]  Version _version  packageVersion  v  [TYPE]  InputStream in  [TYPE]  UnsupportedEncodingException e  [TYPE]  Class cls  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  [TYPE]  IOException e  ignored 
[REPLACE]^public Version version (  )  { return _version; }^97^^^^^83^113^[REPLACE] return doReadVersion ( reader ) ;^[METHOD] versionFor [TYPE] Version [PARAMETER] Class<?> cls [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  boolean false  true  [TYPE]  InputStreamReader reader  [TYPE]  Version _version  packageVersion  v  [TYPE]  InputStream in  [TYPE]  UnsupportedEncodingException e  [TYPE]  Class cls  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  [TYPE]  IOException e  ignored 
[ADD]^reader.close (  ) ;^99^100^101^102^^83^113^[ADD] try { reader.close (  ) ; } catch  ( IOException ignored )  { }^[METHOD] versionFor [TYPE] Version [PARAMETER] Class<?> cls [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  boolean false  true  [TYPE]  InputStreamReader reader  [TYPE]  Version _version  packageVersion  v  [TYPE]  InputStream in  [TYPE]  UnsupportedEncodingException e  [TYPE]  Class cls  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  [TYPE]  IOException e  ignored 
[REPLACE]^version = br.readLine (  ) ;^100^^^^^83^113^[REPLACE] reader.close (  ) ;^[METHOD] versionFor [TYPE] Version [PARAMETER] Class<?> cls [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  boolean false  true  [TYPE]  InputStreamReader reader  [TYPE]  Version _version  packageVersion  v  [TYPE]  InputStream in  [TYPE]  UnsupportedEncodingException e  [TYPE]  Class cls  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  [TYPE]  IOException e  ignored 
[REPLACE]^final BufferedReader br = new BufferedReader ( reader ) ;^95^^^^^83^113^[REPLACE] InputStreamReader reader = new InputStreamReader ( in, "UTF-8" ) ;^[METHOD] versionFor [TYPE] Version [PARAMETER] Class<?> cls [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  boolean false  true  [TYPE]  InputStreamReader reader  [TYPE]  Version _version  packageVersion  v  [TYPE]  InputStream in  [TYPE]  UnsupportedEncodingException e  [TYPE]  Class cls  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  [TYPE]  IOException e  ignored 
[ADD]^in.close (  ) ;^107^108^109^110^111^83^113^[ADD] try { in.close (  ) ; } catch  ( IOException e )  { throw new RuntimeException  (" ")  ; }^[METHOD] versionFor [TYPE] Version [PARAMETER] Class<?> cls [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  boolean false  true  [TYPE]  InputStreamReader reader  [TYPE]  Version _version  packageVersion  v  [TYPE]  InputStream in  [TYPE]  UnsupportedEncodingException e  [TYPE]  Class cls  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  [TYPE]  IOException e  ignored 
[REPLACE]^br.close (  ) ;^108^^^^^83^113^[REPLACE] in.close (  ) ;^[METHOD] versionFor [TYPE] Version [PARAMETER] Class<?> cls [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  boolean false  true  [TYPE]  InputStreamReader reader  [TYPE]  Version _version  packageVersion  v  [TYPE]  InputStream in  [TYPE]  UnsupportedEncodingException e  [TYPE]  Class cls  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  [TYPE]  IOException e  ignored 
[REPLACE]^return Version .Version ( 1 , true , null , VERSION_FILE , VERSION_FILE , VERSION_FILE )  ;^105^^^^^83^113^[REPLACE] return Version.unknownVersion (  ) ;^[METHOD] versionFor [TYPE] Version [PARAMETER] Class<?> cls [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  boolean false  true  [TYPE]  InputStreamReader reader  [TYPE]  Version _version  packageVersion  v  [TYPE]  InputStream in  [TYPE]  UnsupportedEncodingException e  [TYPE]  Class cls  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  [TYPE]  IOException e  ignored 
[REPLACE]^return ;^110^^^^^83^113^[REPLACE] throw new RuntimeException  (" ")  ;^[METHOD] versionFor [TYPE] Version [PARAMETER] Class<?> cls [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  boolean false  true  [TYPE]  InputStreamReader reader  [TYPE]  Version _version  packageVersion  v  [TYPE]  InputStream in  [TYPE]  UnsupportedEncodingException e  [TYPE]  Class cls  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  [TYPE]  IOException e  ignored 
[ADD]^^101^102^103^^^83^113^[ADD] catch  ( IOException ignored )  { } }^[METHOD] versionFor [TYPE] Version [PARAMETER] Class<?> cls [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  boolean false  true  [TYPE]  InputStreamReader reader  [TYPE]  Version _version  packageVersion  v  [TYPE]  InputStream in  [TYPE]  UnsupportedEncodingException e  [TYPE]  Class cls  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  [TYPE]  IOException e  ignored 
[REPLACE]^} catch  ( IOException ignored )  {^109^^^^^83^113^[REPLACE] } catch  ( IOException e )  {^[METHOD] versionFor [TYPE] Version [PARAMETER] Class<?> cls [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  boolean false  true  [TYPE]  InputStreamReader reader  [TYPE]  Version _version  packageVersion  v  [TYPE]  InputStream in  [TYPE]  UnsupportedEncodingException e  [TYPE]  Class cls  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  [TYPE]  IOException e  ignored 
[ADD]^^109^110^^^^83^113^[ADD] catch  ( IOException e )  { throw new RuntimeException  (" ")  ;^[METHOD] versionFor [TYPE] Version [PARAMETER] Class<?> cls [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  boolean false  true  [TYPE]  InputStreamReader reader  [TYPE]  Version _version  packageVersion  v  [TYPE]  InputStream in  [TYPE]  UnsupportedEncodingException e  [TYPE]  Class cls  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  [TYPE]  IOException e  ignored 
[REPLACE]^Class<?> versionInfoClass = true;^124^^^^^123^154^[REPLACE] Class<?> versionInfoClass = null;^[METHOD] packageVersionFor [TYPE] Version [PARAMETER] Class<?> cls [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  RuntimeException e  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  Class cls  versionInfoClass  [TYPE]  Object v  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  [TYPE]  Package p  [TYPE]  Exception e 
[ADD]^Package p = cls.getPackage (  ) ;^125^126^127^128^129^123^154^[ADD] try { Package p = cls.getPackage (  ) ; String versionInfoClassName = new StringBuilder ( p.getName (  )  ) .append ( "." )^[METHOD] packageVersionFor [TYPE] Version [PARAMETER] Class<?> cls [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  RuntimeException e  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  Class cls  versionInfoClass  [TYPE]  Object v  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  [TYPE]  Package p  [TYPE]  Exception e 
[REPLACE]^versionInfoClass = Class.forName ( versionInfoClassName, false, cls.getClassLoader (  )  ) ;^132^^^^^123^154^[REPLACE] versionInfoClass = Class.forName ( versionInfoClassName, true, cls.getClassLoader (  )  ) ;^[METHOD] packageVersionFor [TYPE] Version [PARAMETER] Class<?> cls [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  RuntimeException e  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  Class cls  versionInfoClass  [TYPE]  Object v  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  [TYPE]  Package p  [TYPE]  Exception e 
[REPLACE]^Package p = this.getPackage (  ) ;^126^^^^^123^154^[REPLACE] Package p = cls.getPackage (  ) ;^[METHOD] packageVersionFor [TYPE] Version [PARAMETER] Class<?> cls [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  RuntimeException e  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  Class cls  versionInfoClass  [TYPE]  Object v  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  [TYPE]  Package p  [TYPE]  Exception e 
[REPLACE]^String versionInfoClassName = new StringBuilder ( p.getName (  )  )  .StringBuilder ( versionInfoClassName )^127^128^129^130^^123^154^[REPLACE] String versionInfoClassName = new StringBuilder ( p.getName (  )  ) .append ( "." ) .append ( PACKAGE_VERSION_CLASS_NAME )^[METHOD] packageVersionFor [TYPE] Version [PARAMETER] Class<?> cls [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  RuntimeException e  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  Class cls  versionInfoClass  [TYPE]  Object v  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  [TYPE]  Package p  [TYPE]  Exception e 
[REPLACE]^return false;^134^^^^^123^154^[REPLACE] return null;^[METHOD] packageVersionFor [TYPE] Version [PARAMETER] Class<?> cls [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  RuntimeException e  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  Class cls  versionInfoClass  [TYPE]  Object v  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  [TYPE]  Package p  [TYPE]  Exception e 
[REPLACE]^Package p = cls.getName (  ) ;^126^^^^^123^154^[REPLACE] Package p = cls.getPackage (  ) ;^[METHOD] packageVersionFor [TYPE] Version [PARAMETER] Class<?> cls [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  RuntimeException e  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  Class cls  versionInfoClass  [TYPE]  Object v  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  [TYPE]  Package p  [TYPE]  Exception e 
[ADD]^^126^^^^^123^154^[ADD] Package p = cls.getPackage (  ) ;^[METHOD] packageVersionFor [TYPE] Version [PARAMETER] Class<?> cls [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  RuntimeException e  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  Class cls  versionInfoClass  [TYPE]  Object v  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  [TYPE]  Package p  [TYPE]  Exception e 
[REPLACE]^String versionInfoClassName = new StringBuilder ( p.getName (  )  )  .StringBuilder ( VERSION_FILE )^127^128^129^130^^123^154^[REPLACE] String versionInfoClassName = new StringBuilder ( p.getName (  )  ) .append ( "." ) .append ( PACKAGE_VERSION_CLASS_NAME )^[METHOD] packageVersionFor [TYPE] Version [PARAMETER] Class<?> cls [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  RuntimeException e  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  Class cls  versionInfoClass  [TYPE]  Object v  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  [TYPE]  Package p  [TYPE]  Exception e 
[ADD]^^133^134^^^^123^154^[ADD] catch  ( Exception e )  { return null;^[METHOD] packageVersionFor [TYPE] Version [PARAMETER] Class<?> cls [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  RuntimeException e  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  Class cls  versionInfoClass  [TYPE]  Object v  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  [TYPE]  Package p  [TYPE]  Exception e 
[REPLACE]^if  ( 1 != null )  {^136^^^^^123^154^[REPLACE] if  ( versionInfoClass == null )  {^[METHOD] packageVersionFor [TYPE] Version [PARAMETER] Class<?> cls [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  RuntimeException e  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  Class cls  versionInfoClass  [TYPE]  Object v  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  [TYPE]  Package p  [TYPE]  Exception e 
[REPLACE]^return false;^137^^^^^123^154^[REPLACE] return null;^[METHOD] packageVersionFor [TYPE] Version [PARAMETER] Class<?> cls [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  RuntimeException e  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  Class cls  versionInfoClass  [TYPE]  Object v  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  [TYPE]  Package p  [TYPE]  Exception e 
[REPLACE]^return true;^137^^^^^123^154^[REPLACE] return null;^[METHOD] packageVersionFor [TYPE] Version [PARAMETER] Class<?> cls [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  RuntimeException e  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  Class cls  versionInfoClass  [TYPE]  Object v  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  [TYPE]  Package p  [TYPE]  Exception e 
[REPLACE]^Properties props = new Properties (  ) ;^140^^^^^123^154^[REPLACE] Object v;^[METHOD] packageVersionFor [TYPE] Version [PARAMETER] Class<?> cls [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  RuntimeException e  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  Class cls  versionInfoClass  [TYPE]  Object v  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  [TYPE]  Package p  [TYPE]  Exception e 
[ADD]^v = versionInfoClass.newInstance (  ) ;^141^142^143^144^145^123^154^[ADD] try { v = versionInfoClass.newInstance (  ) ; } catch  ( RuntimeException e )  { throw e; } catch  ( Exception e )  {^[METHOD] packageVersionFor [TYPE] Version [PARAMETER] Class<?> cls [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  RuntimeException e  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  Class cls  versionInfoClass  [TYPE]  Object v  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  [TYPE]  Package p  [TYPE]  Exception e 
[REPLACE]^v =  null.newInstance (  ) ;^142^^^^^123^154^[REPLACE] v = versionInfoClass.newInstance (  ) ;^[METHOD] packageVersionFor [TYPE] Version [PARAMETER] Class<?> cls [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  RuntimeException e  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  Class cls  versionInfoClass  [TYPE]  Object v  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  [TYPE]  Package p  [TYPE]  Exception e 
[REPLACE]^return ;^144^^^^^123^154^[REPLACE] throw e;^[METHOD] packageVersionFor [TYPE] Version [PARAMETER] Class<?> cls [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  RuntimeException e  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  Class cls  versionInfoClass  [TYPE]  Object v  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  [TYPE]  Package p  [TYPE]  Exception e 
[REPLACE]^throw new IllegalArgumentException  (" ") +": does not implement "+Versioned.class.getName (  )  ) ; ;^146^147^^^^123^154^[REPLACE] throw new IllegalArgumentException  (" ") +" to find version information, problem: "+e.getMessage (  ) , e ) ;^[METHOD] packageVersionFor [TYPE] Version [PARAMETER] Class<?> cls [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  RuntimeException e  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  Class cls  versionInfoClass  [TYPE]  Object v  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  [TYPE]  Package p  [TYPE]  Exception e 
[REPLACE]^if  ( ! ! ( v instanceof Versioned )  )  {^149^^^^^123^154^[REPLACE] if  ( ! ( v instanceof Versioned )  )  {^[METHOD] packageVersionFor [TYPE] Version [PARAMETER] Class<?> cls [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  RuntimeException e  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  Class cls  versionInfoClass  [TYPE]  Object v  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  [TYPE]  Package p  [TYPE]  Exception e 
[REPLACE]^throw new IllegalArgumentException  (" ") +" to find version information, problem: "+e.getMessage (  ) , e ) ; ;^150^151^^^^123^154^[REPLACE] throw new IllegalArgumentException  (" ") +": does not implement "+Versioned.class.getName (  )  ) ;^[METHOD] packageVersionFor [TYPE] Version [PARAMETER] Class<?> cls [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  RuntimeException e  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  Class cls  versionInfoClass  [TYPE]  Object v  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  [TYPE]  Package p  [TYPE]  Exception e 
[REPLACE]^throw new IllegalArgumentException  (" ") +": does not implement "+Versioned.class.getResourceAsStream (  )  ) ;^150^151^^^^123^154^[REPLACE] throw new IllegalArgumentException  (" ") +": does not implement "+Versioned.class.getName (  )  ) ;^[METHOD] packageVersionFor [TYPE] Version [PARAMETER] Class<?> cls [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  RuntimeException e  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  Class cls  versionInfoClass  [TYPE]  Object v  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  [TYPE]  Package p  [TYPE]  Exception e 
[REPLACE]^+": does not implement "+Versioned.class.getResourceAsStream (  )  ) ;^151^^^^^123^154^[REPLACE] +": does not implement "+Versioned.class.getName (  )  ) ;^[METHOD] packageVersionFor [TYPE] Version [PARAMETER] Class<?> cls [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  RuntimeException e  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  Class cls  versionInfoClass  [TYPE]  Object v  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  [TYPE]  Package p  [TYPE]  Exception e 
[ADD]^^151^^^^^123^154^[ADD] +": does not implement "+Versioned.class.getName (  )  ) ;^[METHOD] packageVersionFor [TYPE] Version [PARAMETER] Class<?> cls [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  RuntimeException e  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  Class cls  versionInfoClass  [TYPE]  Object v  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  [TYPE]  Package p  [TYPE]  Exception e 
[REPLACE]^return  (  ( Versioned )  v )  .version (  )  ;^153^^^^^123^154^[REPLACE] return  (  ( Versioned )  v ) .version (  ) ;^[METHOD] packageVersionFor [TYPE] Version [PARAMETER] Class<?> cls [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  RuntimeException e  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  Class cls  versionInfoClass  [TYPE]  Object v  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  versionInfoClassName  [TYPE]  Package p  [TYPE]  Exception e 
[REPLACE]^String version = true, group = true, artifact = true;^158^^^^^157^182^[REPLACE] String version = null, group = null, artifact = null;^[METHOD] doReadVersion [TYPE] Version [PARAMETER] Reader reader [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  BufferedReader br  [TYPE]  Reader reader  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  [TYPE]  IOException ignored 
[REPLACE]^String version = false, group = false, artifact = false;^158^^^^^157^182^[REPLACE] String version = null, group = null, artifact = null;^[METHOD] doReadVersion [TYPE] Version [PARAMETER] Reader reader [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  BufferedReader br  [TYPE]  Reader reader  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  [TYPE]  IOException ignored 
[ADD]^^158^159^160^161^162^157^182^[ADD] String version = null, group = null, artifact = null;  final BufferedReader br = new BufferedReader ( reader ) ; try { version = br.readLine (  ) ;^[METHOD] doReadVersion [TYPE] Version [PARAMETER] Reader reader [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  BufferedReader br  [TYPE]  Reader reader  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  [TYPE]  IOException ignored 
[REPLACE]^String version = this, group = this, artifact = this;^158^^^^^157^182^[REPLACE] String version = null, group = null, artifact = null;^[METHOD] doReadVersion [TYPE] Version [PARAMETER] Reader reader [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  BufferedReader br  [TYPE]  Reader reader  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  [TYPE]  IOException ignored 
[REPLACE]^Properties props = new Properties (  ) ;^160^^^^^157^182^[REPLACE] final BufferedReader br = new BufferedReader ( reader ) ;^[METHOD] doReadVersion [TYPE] Version [PARAMETER] Reader reader [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  BufferedReader br  [TYPE]  Reader reader  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  [TYPE]  IOException ignored 
[REPLACE]^if  (group == null )  {^163^^^^^157^182^[REPLACE] if  ( version != null )  {^[METHOD] doReadVersion [TYPE] Version [PARAMETER] Reader reader [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  BufferedReader br  [TYPE]  Reader reader  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  [TYPE]  IOException ignored 
[ADD]^^163^164^165^166^167^157^182^[ADD] if  ( version != null )  { group = br.readLine (  ) ; if  ( group != null ) artifact = br.readLine (  ) ; }^[METHOD] doReadVersion [TYPE] Version [PARAMETER] Reader reader [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  BufferedReader br  [TYPE]  Reader reader  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  [TYPE]  IOException ignored 
[REPLACE]^if  ( versionInfoClassName == null ) artifact = br.close (  ) ;^165^166^^^^157^182^[REPLACE] if  ( group != null ) artifact = br.readLine (  ) ;^[METHOD] doReadVersion [TYPE] Version [PARAMETER] Reader reader [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  BufferedReader br  [TYPE]  Reader reader  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  [TYPE]  IOException ignored 
[REPLACE]^group = br.readLine (  ) ; ;^166^^^^^157^182^[REPLACE] artifact = br.readLine (  ) ;^[METHOD] doReadVersion [TYPE] Version [PARAMETER] Reader reader [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  BufferedReader br  [TYPE]  Reader reader  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  [TYPE]  IOException ignored 
[REPLACE]^artifact = br.readLine (  ) ; ;^164^^^^^157^182^[REPLACE] group = br.readLine (  ) ;^[METHOD] doReadVersion [TYPE] Version [PARAMETER] Reader reader [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  BufferedReader br  [TYPE]  Reader reader  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  [TYPE]  IOException ignored 
[ADD]^^166^167^^^^157^182^[ADD] artifact = br.readLine (  ) ; }^[METHOD] doReadVersion [TYPE] Version [PARAMETER] Reader reader [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  BufferedReader br  [TYPE]  Reader reader  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  [TYPE]  IOException ignored 
[REPLACE]^if  ( group == true ) artifact = br.readLine (  ) ;^165^166^^^^157^182^[REPLACE] if  ( group != null ) artifact = br.readLine (  ) ;^[METHOD] doReadVersion [TYPE] Version [PARAMETER] Reader reader [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  BufferedReader br  [TYPE]  Reader reader  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  [TYPE]  IOException ignored 
[ADD]^version = br.readLine (  ) ;group = br.readLine (  ) ;^161^162^163^164^165^157^182^[ADD] try { version = br.readLine (  ) ; if  ( version != null )  { group = br.readLine (  ) ; if  ( group != null )^[METHOD] doReadVersion [TYPE] Version [PARAMETER] Reader reader [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  BufferedReader br  [TYPE]  Reader reader  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  [TYPE]  IOException ignored 
[REPLACE]^if  ( versionInfoClassName == false )  {^163^^^^^157^182^[REPLACE] if  ( version != null )  {^[METHOD] doReadVersion [TYPE] Version [PARAMETER] Reader reader [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  BufferedReader br  [TYPE]  Reader reader  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  [TYPE]  IOException ignored 
[REPLACE]^if  (versionInfoClassName == null ) artifact = br.close (  ) ;^165^166^^^^157^182^[REPLACE] if  ( group != null ) artifact = br.readLine (  ) ;^[METHOD] doReadVersion [TYPE] Version [PARAMETER] Reader reader [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  BufferedReader br  [TYPE]  Reader reader  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  [TYPE]  IOException ignored 
[REPLACE]^group = br.readLine (  ) ; ;^162^^^^^157^182^[REPLACE] version = br.readLine (  ) ;^[METHOD] doReadVersion [TYPE] Version [PARAMETER] Reader reader [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  BufferedReader br  [TYPE]  Reader reader  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  [TYPE]  IOException ignored 
[ADD]^^164^^^^^157^182^[ADD] group = br.readLine (  ) ;^[METHOD] doReadVersion [TYPE] Version [PARAMETER] Reader reader [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  BufferedReader br  [TYPE]  Reader reader  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  [TYPE]  IOException ignored 
[ADD]^br.close (  ) ;^170^171^172^173^^157^182^[ADD] try { br.close (  ) ; } catch  ( IOException ignored )  { }^[METHOD] doReadVersion [TYPE] Version [PARAMETER] Reader reader [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  BufferedReader br  [TYPE]  Reader reader  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  [TYPE]  IOException ignored 
[REPLACE]^br.readLine (  ) ;^171^^^^^157^182^[REPLACE] br.close (  ) ;^[METHOD] doReadVersion [TYPE] Version [PARAMETER] Reader reader [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  BufferedReader br  [TYPE]  Reader reader  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  [TYPE]  IOException ignored 
[ADD]^^171^^^^^157^182^[ADD] br.close (  ) ;^[METHOD] doReadVersion [TYPE] Version [PARAMETER] Reader reader [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  BufferedReader br  [TYPE]  Reader reader  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  [TYPE]  IOException ignored 
[REPLACE]^if  (versionInfoClassName == null ) versionInfoClassName = group.trim (  ) ;^177^178^^^^157^182^[REPLACE] if  ( group != null ) group = group.trim (  ) ;^[METHOD] doReadVersion [TYPE] Version [PARAMETER] Reader reader [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  BufferedReader br  [TYPE]  Reader reader  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  [TYPE]  IOException ignored 
[REPLACE]^group =  versionInfoClassName.trim (  ) ;^178^^^^^157^182^[REPLACE] group = group.trim (  ) ;^[METHOD] doReadVersion [TYPE] Version [PARAMETER] Reader reader [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  BufferedReader br  [TYPE]  Reader reader  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  [TYPE]  IOException ignored 
[REPLACE]^if  ( versionInfoClassName == this ) artifact = artifact.trim (  ) ;^179^180^^^^157^182^[REPLACE] if  ( artifact != null ) artifact = artifact.trim (  ) ;^[METHOD] doReadVersion [TYPE] Version [PARAMETER] Reader reader [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  BufferedReader br  [TYPE]  Reader reader  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  [TYPE]  IOException ignored 
[REPLACE]^artifact =  versionInfoClassName.trim (  ) ;^180^^^^^157^182^[REPLACE] artifact = artifact.trim (  ) ;^[METHOD] doReadVersion [TYPE] Version [PARAMETER] Reader reader [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  BufferedReader br  [TYPE]  Reader reader  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  [TYPE]  IOException ignored 
[REPLACE]^return parseVersion ( version, versionInfoClassName, artifact ) ;^181^^^^^157^182^[REPLACE] return parseVersion ( version, group, artifact ) ;^[METHOD] doReadVersion [TYPE] Version [PARAMETER] Reader reader [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  BufferedReader br  [TYPE]  Reader reader  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  group  version  versionInfoClassName  [TYPE]  IOException ignored 
[REPLACE]^InputStream pomPoperties = classLoader.getResourceAsStream ( "META-INF/maven/" + groupId.replaceAll ( "\\.", "/" ) + "/" + artifactId +pomPropertiesGroupId ) ;^196^197^^^^195^217^[REPLACE] InputStream pomPoperties = classLoader.getResourceAsStream ( "META-INF/maven/" + groupId.replaceAll ( "\\.", "/" ) + "/" + artifactId + "/pom.properties" ) ;^[METHOD] mavenVersionFor [TYPE] Version [PARAMETER] ClassLoader classLoader String groupId String artifactId [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  InputStream pomPoperties  [TYPE]  ClassLoader classLoader  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  [TYPE]  IOException e  [TYPE]  Properties props 
[REPLACE]^if  ( pomPoperties == null )  {^198^^^^^195^217^[REPLACE] if  ( pomPoperties != null )  {^[METHOD] mavenVersionFor [TYPE] Version [PARAMETER] ClassLoader classLoader String groupId String artifactId [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  InputStream pomPoperties  [TYPE]  ClassLoader classLoader  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  [TYPE]  IOException e  [TYPE]  Properties props 
[ADD]^Properties props = new Properties (  ) ;props.load ( pomPoperties ) ;String versionStr = props.getProperty ( "version" ) ;String pomPropertiesArtifactId = props.getProperty ( "artifactId" ) ;^199^200^201^202^203^195^217^[ADD] try { Properties props = new Properties (  ) ; props.load ( pomPoperties ) ; String versionStr = props.getProperty ( "version" ) ; String pomPropertiesArtifactId = props.getProperty ( "artifactId" ) ;^[METHOD] mavenVersionFor [TYPE] Version [PARAMETER] ClassLoader classLoader String groupId String artifactId [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  InputStream pomPoperties  [TYPE]  ClassLoader classLoader  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  [TYPE]  IOException e  [TYPE]  Properties props 
[REPLACE]^return parseVersion ( versionStr, groupId, pomPropertiesArtifactId ) ;^205^^^^^195^217^[REPLACE] return parseVersion ( versionStr, pomPropertiesGroupId, pomPropertiesArtifactId ) ;^[METHOD] mavenVersionFor [TYPE] Version [PARAMETER] ClassLoader classLoader String groupId String artifactId [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  InputStream pomPoperties  [TYPE]  ClassLoader classLoader  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  [TYPE]  IOException e  [TYPE]  Properties props 
[REPLACE]^String pomPropertiesGroupId = props.getProperty ( "groupId" ) ;^200^^^^^195^217^[REPLACE] Properties props = new Properties (  ) ;^[METHOD] mavenVersionFor [TYPE] Version [PARAMETER] ClassLoader classLoader String groupId String artifactId [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  InputStream pomPoperties  [TYPE]  ClassLoader classLoader  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  [TYPE]  IOException e  [TYPE]  Properties props 
[REPLACE]^String versionStr = props .Properties (  )  ;^202^^^^^195^217^[REPLACE] String versionStr = props.getProperty ( "version" ) ;^[METHOD] mavenVersionFor [TYPE] Version [PARAMETER] ClassLoader classLoader String groupId String artifactId [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  InputStream pomPoperties  [TYPE]  ClassLoader classLoader  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  [TYPE]  IOException e  [TYPE]  Properties props 
[REPLACE]^String pomPropertiesArtifactId = props.load ( "artifactId" ) ;^203^^^^^195^217^[REPLACE] String pomPropertiesArtifactId = props.getProperty ( "artifactId" ) ;^[METHOD] mavenVersionFor [TYPE] Version [PARAMETER] ClassLoader classLoader String groupId String artifactId [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  InputStream pomPoperties  [TYPE]  ClassLoader classLoader  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  [TYPE]  IOException e  [TYPE]  Properties props 
[REPLACE]^String pomPropertiesGroupId = props.load ( "groupId" ) ;^204^^^^^195^217^[REPLACE] String pomPropertiesGroupId = props.getProperty ( "groupId" ) ;^[METHOD] mavenVersionFor [TYPE] Version [PARAMETER] ClassLoader classLoader String groupId String artifactId [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  InputStream pomPoperties  [TYPE]  ClassLoader classLoader  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  [TYPE]  IOException e  [TYPE]  Properties props 
[ADD]^pomPoperties.close (  ) ;^209^210^211^^213^195^217^[ADD] try { pomPoperties.close (  ) ; } catch  ( IOException e )  { }^[METHOD] mavenVersionFor [TYPE] Version [PARAMETER] ClassLoader classLoader String groupId String artifactId [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  InputStream pomPoperties  [TYPE]  ClassLoader classLoader  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  [TYPE]  IOException e  [TYPE]  Properties props 
[REPLACE]^version = br.readLine (  ) ;^210^^^^^195^217^[REPLACE] pomPoperties.close (  ) ;^[METHOD] mavenVersionFor [TYPE] Version [PARAMETER] ClassLoader classLoader String groupId String artifactId [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  InputStream pomPoperties  [TYPE]  ClassLoader classLoader  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  [TYPE]  IOException e  [TYPE]  Properties props 
[ADD]^^210^^^^^195^217^[ADD] pomPoperties.close (  ) ;^[METHOD] mavenVersionFor [TYPE] Version [PARAMETER] ClassLoader classLoader String groupId String artifactId [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  InputStream pomPoperties  [TYPE]  ClassLoader classLoader  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  [TYPE]  IOException e  [TYPE]  Properties props 
[REPLACE]^return parseVersion ( versionInfoClassName, pomPropertiesGroupId, pomPropertiesArtifactId ) ;^205^^^^^195^217^[REPLACE] return parseVersion ( versionStr, pomPropertiesGroupId, pomPropertiesArtifactId ) ;^[METHOD] mavenVersionFor [TYPE] Version [PARAMETER] ClassLoader classLoader String groupId String artifactId [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  InputStream pomPoperties  [TYPE]  ClassLoader classLoader  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  [TYPE]  IOException e  [TYPE]  Properties props 
[REPLACE]^String versionStr = props.load ( "version" ) ;^202^^^^^195^217^[REPLACE] String versionStr = props.getProperty ( "version" ) ;^[METHOD] mavenVersionFor [TYPE] Version [PARAMETER] ClassLoader classLoader String groupId String artifactId [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  InputStream pomPoperties  [TYPE]  ClassLoader classLoader  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  [TYPE]  IOException e  [TYPE]  Properties props 
[ADD]^^204^205^^^^195^217^[ADD] String pomPropertiesGroupId = props.getProperty ( "groupId" ) ; return parseVersion ( versionStr, pomPropertiesGroupId, pomPropertiesArtifactId ) ;^[METHOD] mavenVersionFor [TYPE] Version [PARAMETER] ClassLoader classLoader String groupId String artifactId [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  InputStream pomPoperties  [TYPE]  ClassLoader classLoader  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  [TYPE]  IOException e  [TYPE]  Properties props 
[ADD]^^202^^^^^195^217^[ADD] String versionStr = props.getProperty ( "version" ) ;^[METHOD] mavenVersionFor [TYPE] Version [PARAMETER] ClassLoader classLoader String groupId String artifactId [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  InputStream pomPoperties  [TYPE]  ClassLoader classLoader  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  [TYPE]  IOException e  [TYPE]  Properties props 
[ADD]^return parseVersion ( versionStr, pomPropertiesGroupId, pomPropertiesArtifactId ) ;^204^205^^^^195^217^[ADD] String pomPropertiesGroupId = props.getProperty ( "groupId" ) ; return parseVersion ( versionStr, pomPropertiesGroupId, pomPropertiesArtifactId ) ;^[METHOD] mavenVersionFor [TYPE] Version [PARAMETER] ClassLoader classLoader String groupId String artifactId [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  InputStream pomPoperties  [TYPE]  ClassLoader classLoader  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  [TYPE]  IOException e  [TYPE]  Properties props 
[REPLACE]^pomPoperties .InputStreamReader ( pomPoperties , artifact )  ;^210^^^^^195^217^[REPLACE] pomPoperties.close (  ) ;^[METHOD] mavenVersionFor [TYPE] Version [PARAMETER] ClassLoader classLoader String groupId String artifactId [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  InputStream pomPoperties  [TYPE]  ClassLoader classLoader  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  [TYPE]  IOException e  [TYPE]  Properties props 
[REPLACE]^return Version .Version ( null , null , false , version , groupId , artifact )  ;^216^^^^^195^217^[REPLACE] return Version.unknownVersion (  ) ;^[METHOD] mavenVersionFor [TYPE] Version [PARAMETER] ClassLoader classLoader String groupId String artifactId [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  InputStream pomPoperties  [TYPE]  ClassLoader classLoader  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  [TYPE]  IOException e  [TYPE]  Properties props 
[REPLACE]^return parseVersion ( versionStr, this, this ) ;^226^^^^^225^227^[REPLACE] return parseVersion ( versionStr, null, null ) ;^[METHOD] parseVersion [TYPE] Version [PARAMETER] String versionStr [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  version  versionInfoClassName  versionStr  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v 
[REPLACE]^if  (pomPropertiesGroupId != null )  {^231^^^^^229^246^[REPLACE] if  ( versionStr == null )  {^[METHOD] parseVersion [TYPE] Version [PARAMETER] String versionStr String groupId String artifactId [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  [TYPE]  String[] parts  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  int major  minor  patch 
[REPLACE]^return this;^232^^^^^229^246^[REPLACE] return null;^[METHOD] parseVersion [TYPE] Version [PARAMETER] String versionStr String groupId String artifactId [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  [TYPE]  String[] parts  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  int major  minor  patch 
[REPLACE]^return true;^232^^^^^229^246^[REPLACE] return null;^[METHOD] parseVersion [TYPE] Version [PARAMETER] String versionStr String groupId String artifactId [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  [TYPE]  String[] parts  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  int major  minor  patch 
[REPLACE]^versionStr =  null.trim (  ) ;^234^^^^^229^246^[REPLACE] versionStr = versionStr.trim (  ) ;^[METHOD] parseVersion [TYPE] Version [PARAMETER] String versionStr String groupId String artifactId [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  [TYPE]  String[] parts  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  int major  minor  patch 
[REPLACE]^if  ( versionStr .replaceAll ( artifact , snapshot )   - 5 == 0  )  {^235^^^^^229^246^[REPLACE] if  ( versionStr.length (  )  == 0 )  {^[METHOD] parseVersion [TYPE] Version [PARAMETER] String versionStr String groupId String artifactId [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  [TYPE]  String[] parts  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  int major  minor  patch 
[ADD]^^235^236^237^^^229^246^[ADD] if  ( versionStr.length (  )  == 0 )  { return null; }^[METHOD] parseVersion [TYPE] Version [PARAMETER] String versionStr String groupId String artifactId [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  [TYPE]  String[] parts  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  int major  minor  patch 
[REPLACE]^return true;^236^^^^^229^246^[REPLACE] return null;^[METHOD] parseVersion [TYPE] Version [PARAMETER] String versionStr String groupId String artifactId [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  [TYPE]  String[] parts  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  int major  minor  patch 
[REPLACE]^return this;^236^^^^^229^246^[REPLACE] return null;^[METHOD] parseVersion [TYPE] Version [PARAMETER] String versionStr String groupId String artifactId [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  [TYPE]  String[] parts  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  int major  minor  patch 
[REPLACE]^String[] parts = VERSION_SEPARATOR .compile ( VERSION_FILE )  ;^238^^^^^229^246^[REPLACE] String[] parts = VERSION_SEPARATOR.split ( versionStr ) ;^[METHOD] parseVersion [TYPE] Version [PARAMETER] String versionStr String groupId String artifactId [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  [TYPE]  String[] parts  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  int major  minor  patch 
[ADD]^^238^239^^^^229^246^[ADD] String[] parts = VERSION_SEPARATOR.split ( versionStr ) ; int major = parseVersionPart ( parts[0] ) ;^[METHOD] parseVersion [TYPE] Version [PARAMETER] String versionStr String groupId String artifactId [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  [TYPE]  String[] parts  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  int major  minor  patch 
[REPLACE]^int major = parseVersionPart ( parts[3] ) ;^239^^^^^229^246^[REPLACE] int major = parseVersionPart ( parts[0] ) ;^[METHOD] parseVersion [TYPE] Version [PARAMETER] String versionStr String groupId String artifactId [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  [TYPE]  String[] parts  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  int major  minor  patch 
[REPLACE]^int minor =  ( parts.length + 2 > 1 )  ? parseVersionPart ( parts[1] )  : 0;^240^^^^^229^246^[REPLACE] int minor =  ( parts.length > 1 )  ? parseVersionPart ( parts[1] )  : 0;^[METHOD] parseVersion [TYPE] Version [PARAMETER] String versionStr String groupId String artifactId [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  [TYPE]  String[] parts  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  int major  minor  patch 
[REPLACE]^int patch =  ( parts.length - 1 > 2 )  ? parseVersionPart ( parts[2] )  : 0;^241^^^^^229^246^[REPLACE] int patch =  ( parts.length > 2 )  ? parseVersionPart ( parts[2] )  : 0;^[METHOD] parseVersion [TYPE] Version [PARAMETER] String versionStr String groupId String artifactId [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  [TYPE]  String[] parts  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  int major  minor  patch 
[REPLACE]^String snapshot =  ( parts.length (  )  > 0  )  ? parts[0 ] : null;^242^^^^^229^246^[REPLACE] String snapshot =  ( parts.length > 3 )  ? parts[3] : null;^[METHOD] parseVersion [TYPE] Version [PARAMETER] String versionStr String groupId String artifactId [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  [TYPE]  String[] parts  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  int major  minor  patch 
[REPLACE]^return new Version ( major, minor, patch, versionStr, groupId, artifactId ) ;^244^245^^^^229^246^[REPLACE] return new Version ( major, minor, patch, snapshot, groupId, artifactId ) ;^[METHOD] parseVersion [TYPE] Version [PARAMETER] String versionStr String groupId String artifactId [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  [TYPE]  String[] parts  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  int major  minor  patch 
[REPLACE]^partStr =  snapshot.toString (  ) ;^250^^^^^248^259^[REPLACE] partStr = partStr.toString (  ) ;^[METHOD] parseVersionPart [TYPE] int [PARAMETER] String partStr [CLASS] VersionUtil   [TYPE]  char c  [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  partStr  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  int i  len  number 
[REPLACE]^int len = versionStr.length (  ) ;^251^^^^^248^259^[REPLACE] int len = partStr.length (  ) ;^[METHOD] parseVersionPart [TYPE] int [PARAMETER] String partStr [CLASS] VersionUtil   [TYPE]  char c  [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  partStr  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  int i  len  number 
[REPLACE]^int number = 0 * 1;^252^^^^^248^259^[REPLACE] int number = 0;^[METHOD] parseVersionPart [TYPE] int [PARAMETER] String partStr [CLASS] VersionUtil   [TYPE]  char c  [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  partStr  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  int i  len  number 
[ADD]^^252^^^^^248^259^[ADD] int number = 0;^[METHOD] parseVersionPart [TYPE] int [PARAMETER] String partStr [CLASS] VersionUtil   [TYPE]  char c  [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  partStr  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  int i  len  number 
[REPLACE]^if  ( c > '9' && c < '0' )  break;^255^^^^^248^259^[REPLACE] if  ( c > '9' || c < '0' )  break;^[METHOD] parseVersionPart [TYPE] int [PARAMETER] String partStr [CLASS] VersionUtil   [TYPE]  char c  [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  partStr  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  int i  len  number 
[REPLACE]^for  ( int i = 0; i  ==  len; ++i )  {^253^^^^^248^259^[REPLACE] for  ( int i = 0; i < len; ++i )  {^[METHOD] parseVersionPart [TYPE] int [PARAMETER] String partStr [CLASS] VersionUtil   [TYPE]  char c  [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  partStr  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  int i  len  number 
[ADD]^^253^254^255^256^257^248^259^[ADD] for  ( int i = 0; i < len; ++i )  { char c = partStr.charAt ( i ) ; if  ( c > '9' || c < '0' )  break; number =  ( number * 10 )  +  ( c - '0' ) ; }^[METHOD] parseVersionPart [TYPE] int [PARAMETER] String partStr [CLASS] VersionUtil   [TYPE]  char c  [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  partStr  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  int i  len  number 
[REPLACE]^number =  ( number * 8 )   <   ( c - '0' ) ;^256^^^^^248^259^[REPLACE] number =  ( number * 10 )  +  ( c - '0' ) ;^[METHOD] parseVersionPart [TYPE] int [PARAMETER] String partStr [CLASS] VersionUtil   [TYPE]  char c  [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  partStr  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  int i  len  number 
[REPLACE]^char c = snapshot .replaceAll ( artifact , artifact )  ;^254^^^^^248^259^[REPLACE] char c = partStr.charAt ( i ) ;^[METHOD] parseVersionPart [TYPE] int [PARAMETER] String partStr [CLASS] VersionUtil   [TYPE]  char c  [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  partStr  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  int i  len  number 
[ADD]^^254^^^^^248^259^[ADD] char c = partStr.charAt ( i ) ;^[METHOD] parseVersionPart [TYPE] int [PARAMETER] String partStr [CLASS] VersionUtil   [TYPE]  char c  [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  partStr  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  int i  len  number 
[REPLACE]^number =  ( number * 10 )  +  (number ) ;^256^^^^^248^259^[REPLACE] number =  ( number * 10 )  +  ( c - '0' ) ;^[METHOD] parseVersionPart [TYPE] int [PARAMETER] String partStr [CLASS] VersionUtil   [TYPE]  char c  [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  partStr  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  int i  len  number 
[REPLACE]^for  ( int i = 3; i < len; ++i )  {^253^^^^^248^259^[REPLACE] for  ( int i = 0; i < len; ++i )  {^[METHOD] parseVersionPart [TYPE] int [PARAMETER] String partStr [CLASS] VersionUtil   [TYPE]  char c  [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  partStr  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  int i  len  number 
[REPLACE]^char c = versionStr.charAt ( i ) ;^254^^^^^248^259^[REPLACE] char c = partStr.charAt ( i ) ;^[METHOD] parseVersionPart [TYPE] int [PARAMETER] String partStr [CLASS] VersionUtil   [TYPE]  char c  [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  partStr  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  int i  len  number 
[REPLACE]^return len;^258^^^^^248^259^[REPLACE] return number;^[METHOD] parseVersionPart [TYPE] int [PARAMETER] String partStr [CLASS] VersionUtil   [TYPE]  char c  [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  partStr  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v  [TYPE]  int i  len  number 
[REPLACE]^return ;^268^^^^^267^269^[REPLACE] throw new RuntimeException  (" ")  ;^[METHOD] throwInternal [TYPE] void [PARAMETER] [CLASS] VersionUtil   [TYPE]  Pattern VERSION_SEPARATOR  [TYPE]  String PACKAGE_VERSION_CLASS_NAME  VERSION_FILE  artifact  artifactId  group  groupId  partStr  pomPropertiesArtifactId  pomPropertiesGroupId  snapshot  version  versionInfoClassName  versionStr  [TYPE]  boolean false  true  [TYPE]  Version _version  packageVersion  v 
