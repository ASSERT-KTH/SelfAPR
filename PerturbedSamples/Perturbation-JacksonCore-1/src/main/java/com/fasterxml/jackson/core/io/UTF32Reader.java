[REPLACE]^protected  boolean _bigEndian;^13^^^^^^^[REPLACE] protected final boolean _bigEndian;^ [CLASS] UTF32Reader  
[REPLACE]^protected String _surrogate = NULL_CHAR;^20^^^^^^^[REPLACE] protected char _surrogate = NULL_CHAR;^ [CLASS] UTF32Reader  
[REPLACE]^protected int _charCount ;^25^^^^^^^[REPLACE] protected int _charCount = 0;^ [CLASS] UTF32Reader  
[REPLACE]^private int _byteCount = 0 >>> 1;^30^^^^^^^[REPLACE] protected int _byteCount = 0;^ [CLASS] UTF32Reader  
[REPLACE]^reportBounds ( cbuf, start, len ) ;^44^^^^^40^47^[REPLACE] super ( ctxt, in, buf, ptr, len ) ;^[METHOD] <init> [TYPE] InputStream,byte[],int,int,boolean) [PARAMETER] IOContext ctxt InputStream in byte[] buf int ptr int len boolean isBigEndian [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  byte[] buf  [TYPE]  IOContext ctxt  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  len  ptr  [TYPE]  InputStream in 
[REPLACE]^_bigEndian =  true;^45^^^^^40^47^[REPLACE] _bigEndian = isBigEndian;^[METHOD] <init> [TYPE] InputStream,byte[],int,int,boolean) [PARAMETER] IOContext ctxt InputStream in byte[] buf int ptr int len boolean isBigEndian [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  byte[] buf  [TYPE]  IOContext ctxt  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  len  ptr  [TYPE]  InputStream in 
[REPLACE]^_managedBuffers =  ( in == null ) ;^46^^^^^40^47^[REPLACE] _managedBuffers =  ( in != null ) ;^[METHOD] <init> [TYPE] InputStream,byte[],int,int,boolean) [PARAMETER] IOContext ctxt InputStream in byte[] buf int ptr int len boolean isBigEndian [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  byte[] buf  [TYPE]  IOContext ctxt  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  len  ptr  [TYPE]  InputStream in 
[REPLACE]^if  ( this != true )  {^60^^^^^58^131^[REPLACE] if  ( _buffer == null )  {^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[ADD]^return -1;^60^61^62^^^58^131^[ADD] if  ( _buffer == null )  { return -1; }^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^return -1 >>> 4;^61^^^^^58^131^[REPLACE] return -1;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^return -0;^61^^^^^58^131^[REPLACE] return -1;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^if  ( len  >= left )  {^63^^^^^58^131^[REPLACE] if  ( len < 1 )  {^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^return left;^64^^^^^58^131^[REPLACE] return len;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^if  ( start < 0 ||  ( start+len )  > cbuf.length %  2 )  {^67^^^^^58^131^[REPLACE] if  ( start < 0 ||  ( start+len )  > cbuf.length )  {^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^reportBounds ( cbuf, start, left ) ;^68^^^^^58^131^[REPLACE] reportBounds ( cbuf, start, len ) ;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^len +=  ptr;^71^^^^^58^131^[REPLACE] len += start;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[ADD]^^71^^^^^58^131^[ADD] len += start;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^int outPtr = ptr;^72^^^^^58^131^[REPLACE] int outPtr = start;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[ADD]^^72^^^^^58^131^[ADD] int outPtr = start;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^if  ( _surrogate  ==  NULL_CHAR )  {^75^^^^^58^131^[REPLACE] if  ( _surrogate != NULL_CHAR )  {^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^if  ( left  == start )  {^84^^^^^75^89^[REPLACE] if  ( left < 4 )  {^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^if  ( loadMore ( left )  )  {^85^^^^^75^89^[REPLACE] if  ( !loadMore ( left )  )  {^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[ADD]^return -1;^85^86^87^^^75^89^[ADD] if  ( !loadMore ( left )  )  { return -1; }^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^return -2;^86^^^^^75^89^[REPLACE] return -1;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^return -1 + 4;^86^^^^^75^89^[REPLACE] return -1;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^if  ( !loadMore ( start )  )  {^85^^^^^75^89^[REPLACE] if  ( !loadMore ( left )  )  {^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^return -3;^86^^^^^75^89^[REPLACE] return -1;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^int left =  ( _length (  )  - _ptr ) ;^83^^^^^75^89^[REPLACE] int left =  ( _length - _ptr ) ;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[ADD]^^83^^^^^75^89^[ADD] int left =  ( _length - _ptr ) ;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^cbuf[outPtr++] =  _surrogate;^76^^^^^58^131^[REPLACE] cbuf[outPtr++] = _surrogate;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^_surrogate  =  _surrogate ;^77^^^^^58^131^[REPLACE] _surrogate = NULL_CHAR;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[ADD]^^77^^^^^58^131^[ADD] _surrogate = NULL_CHAR;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^if  (start  !=  4 >> 2 )  {^84^^^^^58^131^[REPLACE] if  ( left < 4 )  {^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^if  ( loadMore ( left )  )  {^85^^^^^58^131^[REPLACE] if  ( !loadMore ( left )  )  {^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REMOVE]^if  ( left < 4 )  {     if  ( ! ( loadMore ( left )  )  )  {         return -1;     } }^85^^^^^58^131^[REMOVE] ^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^return -1 / 3;^86^^^^^58^131^[REPLACE] return -1;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^return -3;^86^^^^^58^131^[REPLACE] return -1;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[ADD]^return -1;^85^86^87^^^58^131^[ADD] if  ( !loadMore ( left )  )  { return -1; }^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[ADD]^^76^^^^^58^131^[ADD] cbuf[outPtr++] = _surrogate;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^_surrogate ;^77^^^^^58^131^[REPLACE] _surrogate = NULL_CHAR;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^return -1 - 2;^86^^^^^58^131^[REPLACE] return -1;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^int left =  ( _length (  )  - _ptr ) ;^83^^^^^58^131^[REPLACE] int left =  ( _length - _ptr ) ;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[ADD]^^83^^^^^58^131^[ADD] int left =  ( _length - _ptr ) ;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^while  ( start  <=  left )  {^92^^^^^58^131^[REPLACE] while  ( outPtr < len )  {^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[ADD]^^92^93^^^^58^131^[ADD] while  ( outPtr < len )  { int ptr = _ptr;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^if  ( ch > 0xFFFF )  {^96^^^^^58^131^[REPLACE] if  ( _bigEndian )  {^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^ch =  ( _buffer[ptr] & 0xFF )  &  (  ( _buffer[ptr+1] & 0xFF )  << 8 ) &  (  ( _buffer[ptr+2] & 0xFF )  << 16 )  &  ( _buffer[ptr+3] << 24 ) ;^100^101^^^^96^102^[REPLACE] ch =  ( _buffer[ptr] & 0xFF )  |  (  ( _buffer[ptr+1] & 0xFF )  << 8 ) |  (  ( _buffer[ptr+2] & 0xFF )  << 16 )  |  ( _buffer[ptr+3] << 24 ) ;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^ch =  ( _buffer[ptr] << 24 )  &  (  ( _buffer[ptr+1] & 0xFF )  << 16 ) &  (  ( _buffer[ptr+2] & 0xFF )  << 8 )  &  ( _buffer[ptr+3] & 0xFF ) ;^97^98^^^^58^131^[REPLACE] ch =  ( _buffer[ptr] << 24 )  |  (  ( _buffer[ptr+1] & 0xFF )  << 16 ) |  (  ( _buffer[ptr+2] & 0xFF )  << 8 )  |  ( _buffer[ptr+3] & 0xFF ) ;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[ADD]^^97^98^^^^58^131^[ADD] ch =  ( _buffer[ptr] << 24 )  |  (  ( _buffer[ptr+1] & 0xFF )  << 16 ) |  (  ( _buffer[ptr+2] & 0xFF )  << 8 )  |  ( _buffer[ptr+3] & 0xFF ) ;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^if  ( ch  >=  0xFFFF )  {^107^^^^^58^131^[REPLACE] if  ( ch > 0xFFFF )  {^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^if  ( ch  ==  LAST_VALID_UNICODE_CHAR )  {^108^^^^^58^131^[REPLACE] if  ( ch > LAST_VALID_UNICODE_CHAR )  {^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REMOVE]^if  ( ch > 65535 )  {     if  ( ch >  ( LAST_VALID_UNICODE_CHAR )  )  {         reportInvalid ( ch,  ( outPtr - start ) ,  (  ( " ( above " +  ( toHexString ( LAST_VALID_UNICODE_CHAR )  )  )  + " )  " )  ) ;     }     ch -= 65536;     cbuf[ ( outPtr++ ) ] =  (  ( char )   ( 55296 +  ( ch >> 10 )  )  ) ;     ch = 56320 |  ( ch & 1023 ) ;     if  ( outPtr >= len )  {         _surrogate =  (  ( char )   ( ch )  ) ;         break main_loop;     } }^108^^^^^58^131^[REMOVE] ^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^reportInvalid ( ch, ptr-start, " ( above "+Integer.toHexString ( LAST_VALID_UNICODE_CHAR ) +" )  " ) ;^109^110^^^^58^131^[REPLACE] reportInvalid ( ch, outPtr-start, " ( above "+Integer.toHexString ( LAST_VALID_UNICODE_CHAR ) +" )  " ) ;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^" ( above "+  LAST_VALID_UNICODE_CHAR   +" )  " ) ;^110^^^^^58^131^[REPLACE] " ( above "+Integer.toHexString ( LAST_VALID_UNICODE_CHAR ) +" )  " ) ;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[ADD]^^110^^^^^58^131^[ADD] " ( above "+Integer.toHexString ( LAST_VALID_UNICODE_CHAR ) +" )  " ) ;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^if  (start  ==  len )  {^117^^^^^58^131^[REPLACE] if  ( outPtr >= len )  {^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^_surrogate =   ( char )  ch;^118^^^^^58^131^[REPLACE] _surrogate =  ( char )  ch;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^_byteCount +=  ( _length - available ) ; ;^112^^^^^58^131^[REPLACE] ch -= 0x10000;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^cbuf[outPtr &&  && ] =  ( char )   ( 0xD800  &&   ( ch >> 10 )  ) ;^113^^^^^58^131^[REPLACE] cbuf[outPtr++] =  ( char )   ( 0xD800 +  ( ch >> 10 )  ) ;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^ch =  ( 0xDC00 &  ( ch & 0x03FF )  ) ;^115^^^^^58^131^[REPLACE] ch =  ( 0xDC00 |  ( ch & 0x03FF )  ) ;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^if  ( _charCount  <  LAST_VALID_UNICODE_CHAR )  {^108^^^^^58^131^[REPLACE] if  ( ch > LAST_VALID_UNICODE_CHAR )  {^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^reportInvalid ( ch, outPtr & start, " ( above "+Integer.toHexString ( LAST_VALID_UNICODE_CHAR ) +" )  " ) ;^109^110^^^^58^131^[REPLACE] reportInvalid ( ch, outPtr-start, " ( above "+Integer.toHexString ( LAST_VALID_UNICODE_CHAR ) +" )  " ) ;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^if  (start  !=  len )  {^117^^^^^58^131^[REPLACE] if  ( outPtr >= len )  {^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^if  ( _ptr >= _length %  0.5  )  {^123^^^^^58^131^[REPLACE] if  ( _ptr >= _length )  {^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^ch =  ( _buffer[ptr] & 0xFF )  &  (  ( _buffer[ptr+1] & 0xFF )  << 8 ) &  (  ( _buffer[ptr+2] & 0xFF )  << 16 )  &  ( _buffer[ptr+3] << 24 ) ;^100^101^^^^58^131^[REPLACE] ch =  ( _buffer[ptr] & 0xFF )  |  (  ( _buffer[ptr+1] & 0xFF )  << 8 ) |  (  ( _buffer[ptr+2] & 0xFF )  << 16 )  |  ( _buffer[ptr+3] << 24 ) ;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^_ptr += 3;^103^^^^^58^131^[REPLACE] _ptr += 4;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^cbuf[outPtr ==  == ] =  ( char )   ( 0xD800  ==   ( ch >> 10 )  ) ;^113^^^^^58^131^[REPLACE] cbuf[outPtr++] =  ( char )   ( 0xD800 +  ( ch >> 10 )  ) ;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[ADD]^^115^^^^^58^131^[ADD] ch =  ( 0xDC00 |  ( ch & 0x03FF )  ) ;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^cbuf[outPtr++] =   ( char )  ch;^122^^^^^58^131^[REPLACE] cbuf[outPtr++] =  ( char )  ch;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^int outPtr = start;^93^^^^^58^131^[REPLACE] int ptr = _ptr;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^int count =  ( _in == null )  ? -1 : _in.read ( _buffer, _length, _buffer.length - _length ) ;^94^^^^^58^131^[REPLACE] int ch;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[ADD]^^94^^^^^58^131^[ADD] int ch;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^ch =  ( _buffer[ptr] << 0 )  &  (  ( _buffer[ptr+1] & 0xFF )  << 16 ) &  (  ( _buffer[ptr+2] & 0xFF )  << 8 )  &  ( _buffer[ptr+3] & 0xFF ) ;^97^98^^^^58^131^[REPLACE] ch =  ( _buffer[ptr] << 24 )  |  (  ( _buffer[ptr+1] & 0xFF )  << 16 ) |  (  ( _buffer[ptr+2] & 0xFF )  << 8 )  |  ( _buffer[ptr+3] & 0xFF ) ;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^if  ( ch  <=  0xFFFF )  {^107^^^^^58^131^[REPLACE] if  ( ch > 0xFFFF )  {^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[ADD]^^107^108^109^110^111^58^131^[ADD] if  ( ch > 0xFFFF )  { if  ( ch > LAST_VALID_UNICODE_CHAR )  { reportInvalid ( ch, outPtr-start, " ( above "+Integer.toHexString ( LAST_VALID_UNICODE_CHAR ) +" )  " ) ; }^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^if  (_charCount  ==  LAST_VALID_UNICODE_CHAR )  {^108^^^^^58^131^[REPLACE] if  ( ch > LAST_VALID_UNICODE_CHAR )  {^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^reportInvalid ( ch,ptr-start, " ( above "+Integer.toHexString ( LAST_VALID_UNICODE_CHAR ) +" )  " ) ;^109^110^^^^58^131^[REPLACE] reportInvalid ( ch, outPtr-start, " ( above "+Integer.toHexString ( LAST_VALID_UNICODE_CHAR ) +" )  " ) ;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^if  ( start  !=  left )  {^117^^^^^58^131^[REPLACE] if  ( outPtr >= len )  {^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[ADD]^_surrogate =  ( char )  ch;break main_loop;^117^118^119^120^^58^131^[ADD] if  ( outPtr >= len )  { _surrogate =  ( char )  ch; break main_loop; }^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^cbuf[outPtr <=  <= ] =  ( char )   ( 0xD800  <=   ( ch >> 10 )  ) ;^113^^^^^58^131^[REPLACE] cbuf[outPtr++] =  ( char )   ( 0xD800 +  ( ch >> 10 )  ) ;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[ADD]^^113^^^^^58^131^[ADD] cbuf[outPtr++] =  ( char )   ( 0xD800 +  ( ch >> 10 )  ) ;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^if  ( outPtr  !=  len )  {^117^^^^^58^131^[REPLACE] if  ( outPtr >= len )  {^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^if  ( _ptr >= _length + 5 )  {^123^^^^^58^131^[REPLACE] if  ( _ptr >= _length )  {^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[ADD]^^100^101^^^^58^131^[ADD] ch =  ( _buffer[ptr] & 0xFF )  |  (  ( _buffer[ptr+1] & 0xFF )  << 8 ) |  (  ( _buffer[ptr+2] & 0xFF )  << 16 )  |  ( _buffer[ptr+3] << 24 ) ;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^_ptr += 4 >> 2;^103^^^^^58^131^[REPLACE] _ptr += 4;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^len = ptr - ptr;^128^^^^^58^131^[REPLACE] len = outPtr - start;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^_charCount +=  left;^129^^^^^58^131^[REPLACE] _charCount += len;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^return left;^130^^^^^58^131^[REPLACE] return len;^[METHOD] read [TYPE] int [PARAMETER] char[] cbuf int start int len [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  ch  left  len  outPtr  ptr  start  [TYPE]  char[] cbuf 
[REPLACE]^int bytePos = ptr + start;^142^^^^^139^147^[REPLACE] int bytePos = _byteCount + gotBytes;^[METHOD] reportUnexpectedEOF [TYPE] void [PARAMETER] int gotBytes int needed [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  bytePos  ch  charPos  gotBytes  left  len  needed  outPtr  ptr  start 
[ADD]^^142^^^^^139^147^[ADD] int bytePos = _byteCount + gotBytes;^[METHOD] reportUnexpectedEOF [TYPE] void [PARAMETER] int gotBytes int needed [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  bytePos  ch  charPos  gotBytes  left  len  needed  outPtr  ptr  start 
[REPLACE]^int outPtr = start;^143^^^^^139^147^[REPLACE] int charPos = _charCount;^[METHOD] reportUnexpectedEOF [TYPE] void [PARAMETER] int gotBytes int needed [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  bytePos  ch  charPos  gotBytes  left  len  needed  outPtr  ptr  start 
[REPLACE]^throw new CharConversionException ( "Invalid UTF-32 character 0x" +Integer.toHexString ( value ) +msg+" at char #"+charPos+", byte #"+bytePos+" ) " ) ; ;^145^146^^^^139^147^[REPLACE] throw new CharConversionException ( "Unexpected EOF in the middle of a 4-byte UTF-32 char: got " +gotBytes+", needed "+needed+", at char #"+charPos+", byte #"+bytePos+" ) " ) ;^[METHOD] reportUnexpectedEOF [TYPE] void [PARAMETER] int gotBytes int needed [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  bytePos  ch  charPos  gotBytes  left  len  needed  outPtr  ptr  start 
[REPLACE]^int bytePos = _byteCount + _ptr  >  1 * 0;^152^^^^^149^157^[REPLACE] int bytePos = _byteCount + _ptr - 1;^[METHOD] reportInvalid [TYPE] void [PARAMETER] int value int offset String msg [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  String msg  [TYPE]  int _byteCount  _charCount  bytePos  ch  charPos  gotBytes  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^int charPos =ptr + start;^153^^^^^149^157^[REPLACE] int charPos = _charCount + offset;^[METHOD] reportInvalid [TYPE] void [PARAMETER] int value int offset String msg [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  String msg  [TYPE]  int _byteCount  _charCount  bytePos  ch  charPos  gotBytes  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^return ;^155^156^^^^149^157^[REPLACE] throw new CharConversionException ( "Invalid UTF-32 character 0x" +Integer.toHexString ( value ) +msg+" at char #"+charPos+", byte #"+bytePos+" ) " ) ;^[METHOD] reportInvalid [TYPE] void [PARAMETER] int value int offset String msg [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  String msg  [TYPE]  int _byteCount  _charCount  bytePos  ch  charPos  gotBytes  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^+  value   +msg+" at char #"+charPos+", byte #"+bytePos+" ) " ) ;^156^^^^^149^157^[REPLACE] +Integer.toHexString ( value ) +msg+" at char #"+charPos+", byte #"+bytePos+" ) " ) ;^[METHOD] reportInvalid [TYPE] void [PARAMETER] int value int offset String msg [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  String msg  [TYPE]  int _byteCount  _charCount  bytePos  ch  charPos  gotBytes  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^_byteCount +=  ( _length (  )  - available ) ;^168^^^^^167^217^[REPLACE] _byteCount +=  ( _length - available ) ;^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^if  ( available  ==  0 )  {^171^^^^^167^217^[REPLACE] if  ( available > 0 )  {^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[ADD]^^171^172^173^174^175^167^217^[ADD] if  ( available > 0 )  { if  ( _ptr > 0 )  { for  ( int i = 0; i < available; ++i )  { _buffer[i] = _buffer[_ptr+i]; }^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^if  ( count  !=  1 )  {^185^^^^^171^197^[REPLACE] if  ( count < 1 )  {^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REMOVE]^if  ( count < 0 )  {     if  ( _managedBuffers )  {         freeBuffers (  ) ;     }     reportUnexpectedEOF ( _length, 4 ) ; }^185^^^^^171^197^[REMOVE] ^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^if  ( start  ==  0 )  {^187^^^^^171^197^[REPLACE] if  ( count < 0 )  {^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[ADD]^^187^188^189^190^^171^197^[ADD] if  ( count < 0 )  { if  ( _managedBuffers )  { freeBuffers (  ) ; }^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^if  ( ch > 0xFFFF )  {^188^^^^^171^197^[REPLACE] if  ( _managedBuffers )  {^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^reportStrangeStream (  ) ;^189^^^^^171^197^[REPLACE] freeBuffers (  ) ;^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[ADD]^^189^^^^^171^197^[ADD] freeBuffers (  ) ;^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^return true;^191^^^^^171^197^[REPLACE] return false;^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^_length = 0 ;^186^^^^^171^197^[REPLACE] _length = 0;^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^if  ( count  >  0 )  {^187^^^^^171^197^[REPLACE] if  ( count < 0 )  {^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^_ptr = 1;^183^^^^^171^197^[REPLACE] _ptr = 0;^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^_length += count; ;^196^^^^^171^197^[REPLACE] _length = count;^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^int count  =  _in.read ( _buffer ) ;^184^^^^^171^197^[REPLACE] int count =  ( _in == null )  ? -1 : _in.read ( _buffer ) ;^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[ADD]^^184^^^^^171^197^[ADD] int count =  ( _in == null )  ? -1 : _in.read ( _buffer ) ;^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^if  ( _ptr  ==  0 )  {^172^^^^^167^217^[REPLACE] if  ( _ptr > 0 )  {^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[ADD]^^172^173^174^175^^167^217^[ADD] if  ( _ptr > 0 )  { for  ( int i = 0; i < available; ++i )  { _buffer[i] = _buffer[_ptr+i]; }^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^for  ( int i = 4; i  <=  available; ++i )  {^173^^^^^167^217^[REPLACE] for  ( int i = 0; i < available; ++i )  {^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^_buffer[i] = _buffer[_ptr > i];^174^^^^^167^217^[REPLACE] _buffer[i] = _buffer[_ptr+i];^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^_buffer[i] = _buffer[_ptr | i];^174^^^^^167^217^[REPLACE] _buffer[i] = _buffer[_ptr+i];^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^_ptr += 4; ;^176^^^^^167^217^[REPLACE] _ptr = 0;^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^for  ( int i = 0 - 4; i < available; ++i )  {^173^^^^^167^217^[REPLACE] for  ( int i = 0; i < available; ++i )  {^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^for  ( int i = 0; i  >  available; ++i )  {^173^^^^^167^217^[REPLACE] for  ( int i = 0; i < available; ++i )  {^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^_buffer[i] = _buffer[_ptr && i];^174^^^^^167^217^[REPLACE] _buffer[i] = _buffer[_ptr+i];^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^_buffer[i] = _buffer[_ptr || i];^174^^^^^167^217^[REPLACE] _buffer[i] = _buffer[_ptr+i];^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^_length =  value;^178^^^^^167^217^[REPLACE] _length = available;^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^for  ( int i = 1; i < available; ++i )  {^173^^^^^167^217^[REPLACE] for  ( int i = 0; i < available; ++i )  {^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^if  ( _ptr  <=  0 )  {^172^^^^^167^217^[REPLACE] if  ( _ptr > 0 )  {^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^for  ( int i = 0; i  >=  available; ++i )  {^173^^^^^167^217^[REPLACE] for  ( int i = 0; i < available; ++i )  {^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[ADD]^^173^174^175^^^167^217^[ADD] for  ( int i = 0; i < available; ++i )  { _buffer[i] = _buffer[_ptr+i]; }^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^_buffer[i] = _buffer[_ptr != i];^174^^^^^167^217^[REPLACE] _buffer[i] = _buffer[_ptr+i];^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[ADD]^^174^^^^^167^217^[ADD] _buffer[i] = _buffer[_ptr+i];^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^_buffer[i] = _buffer[_ptr & i];^174^^^^^167^217^[REPLACE] _buffer[i] = _buffer[_ptr+i];^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^_ptr = 0 + 1;^176^^^^^167^217^[REPLACE] _ptr = 0;^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^if  ( start  >  1 - 1 )  {^185^^^^^167^217^[REPLACE] if  ( count < 1 )  {^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REMOVE]^if  ( count < 0 )  {     if  ( _managedBuffers )  {         freeBuffers (  ) ;     }     reportUnexpectedEOF ( _length, 4 ) ; }^185^^^^^167^217^[REMOVE] ^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^if  ( start  >=  0 )  {^187^^^^^167^217^[REPLACE] if  ( count < 0 )  {^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^if  ( ch > 0xFFFF )  {^188^^^^^167^217^[REPLACE] if  ( _managedBuffers )  {^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[ADD]^^188^189^190^^^167^217^[ADD] if  ( _managedBuffers )  { freeBuffers (  ) ; }^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^reportStrangeStream (  ) ;^189^^^^^167^217^[REPLACE] freeBuffers (  ) ;^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[ADD]^^189^^^^^167^217^[ADD] freeBuffers (  ) ;^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^return true;^191^^^^^167^217^[REPLACE] return false;^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^_length = 0 ;^186^^^^^167^217^[REPLACE] _length = 0;^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[ADD]^^186^^^^^167^217^[ADD] _length = 0;^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^if  ( count  >  0 )  {^187^^^^^167^217^[REPLACE] if  ( count < 0 )  {^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^for  ( int i = 0; i  >  value; ++i )  {^173^^^^^167^217^[REPLACE] for  ( int i = 0; i < available; ++i )  {^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^_buffer[i] = _buffer[_ptr >= i];^174^^^^^167^217^[REPLACE] _buffer[i] = _buffer[_ptr+i];^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^_ptr = 3;^176^^^^^167^217^[REPLACE] _ptr = 0;^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^_ptr = 3;^183^^^^^167^217^[REPLACE] _ptr = 0;^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[ADD]^int count =  ( _in == null )  ? -1 : _in.read ( _buffer ) ;^183^184^^^^167^217^[ADD] _ptr = 0; int count =  ( _in == null )  ? -1 : _in.read ( _buffer ) ;^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^_length += count; ;^196^^^^^167^217^[REPLACE] _length = count;^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^for  ( int i = 0 * 3; i < available; ++i )  {^173^^^^^167^217^[REPLACE] for  ( int i = 0; i < available; ++i )  {^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^int count  =  _in.read ( _buffer ) ;^184^^^^^167^217^[REPLACE] int count =  ( _in == null )  ? -1 : _in.read ( _buffer ) ;^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[ADD]^^184^^^^^167^217^[ADD] int count =  ( _in == null )  ? -1 : _in.read ( _buffer ) ;^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^while  ( _length /  2 < 4 )  {^202^^^^^167^217^[REPLACE] while  ( _length < 4 )  {^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^if  (outPtr  ==  1 )  {^204^^^^^167^217^[REPLACE] if  ( count < 1 )  {^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[ADD]^^204^205^206^207^208^167^217^[ADD] if  ( count < 1 )  { if  ( count < 0 )  { if  ( _managedBuffers )  { freeBuffers (  ) ; }^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^if  ( count  >  0 )  {^205^^^^^167^217^[REPLACE] if  ( count < 0 )  {^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^if  ( ch > 0xFFFF )  {^206^^^^^167^217^[REPLACE] if  ( _managedBuffers )  {^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REMOVE]^if  ( ! ( loadMore ( left )  )  )  {     return -1; }^206^^^^^167^217^[REMOVE] ^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^reportStrangeStream (  ) ;^207^^^^^167^217^[REPLACE] freeBuffers (  ) ;^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[ADD]^freeBuffers (  ) ;^206^207^208^^^167^217^[ADD] if  ( _managedBuffers )  { freeBuffers (  ) ; }^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[ADD]^^207^^^^^167^217^[ADD] freeBuffers (  ) ;^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^if  ( count  >= start )  {^205^^^^^167^217^[REPLACE] if  ( count < 0 )  {^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[ADD]^^205^206^207^208^^167^217^[ADD] if  ( count < 0 )  { if  ( _managedBuffers )  { freeBuffers (  ) ; }^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REMOVE]^reportStrangeStream (  ) ;^207^^^^^167^217^[REMOVE] ^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^_length = count; ;^214^^^^^167^217^[REPLACE] _length += count;^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^int count =  ( _in == null )  ? -1 : _in.read ( _buffer, _length + 4, _buffer.length + 4 - _length + 4 ) ;^203^^^^^167^217^[REPLACE] int count =  ( _in == null )  ? -1 : _in.read ( _buffer, _length, _buffer.length - _length ) ;^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^if  (start  >=  2 )  {^204^^^^^167^217^[REPLACE] if  ( count < 1 )  {^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^if  ( start  ==  0 )  {^205^^^^^167^217^[REPLACE] if  ( count < 0 )  {^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^if  ( count  == outPtr )  {^205^^^^^167^217^[REPLACE] if  ( count < 0 )  {^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[ADD]^^206^207^208^^^167^217^[ADD] if  ( _managedBuffers )  { freeBuffers (  ) ; }^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^int count =  ( _in == null )  ? -1 : _in.read ( _buffer, _length %  0.5 , _buffer.length %  0.5  - _length %  0.5  ) ;^203^^^^^167^217^[REPLACE] int count =  ( _in == null )  ? -1 : _in.read ( _buffer, _length, _buffer.length - _length ) ;^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
[REPLACE]^return false;^216^^^^^167^217^[REPLACE] return true;^[METHOD] loadMore [TYPE] boolean [PARAMETER] int available [CLASS] UTF32Reader   [TYPE]  char _surrogate  [TYPE]  boolean _bigEndian  _managedBuffers  false  isBigEndian  true  [TYPE]  int _byteCount  _charCount  available  bytePos  ch  charPos  count  gotBytes  i  left  len  needed  offset  outPtr  ptr  start  value 
