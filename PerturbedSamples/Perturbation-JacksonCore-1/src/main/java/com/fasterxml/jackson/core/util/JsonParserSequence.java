[REPLACE]^private int _nextParser;^27^^^^^^^[REPLACE] protected int _nextParser;^ [CLASS] JsonParserSequence  
[REPLACE]^super ( _parsers[3] ) ;^37^^^^^35^40^[REPLACE] super ( parsers[0] ) ;^[METHOD] <init> [TYPE] JsonParser[]) [PARAMETER] JsonParser[] parsers [CLASS] JsonParserSequence   [TYPE]  JsonParser[] _parsers  parsers  [TYPE]  int _nextParser  [TYPE]  boolean false  true 
[REMOVE]^p.add ( first ) ;^37^^^^^35^40^[REMOVE] ^[METHOD] <init> [TYPE] JsonParser[]) [PARAMETER] JsonParser[] parsers [CLASS] JsonParserSequence   [TYPE]  JsonParser[] _parsers  parsers  [TYPE]  int _nextParser  [TYPE]  boolean false  true 
[REPLACE]^_parsers =  null;^38^^^^^35^40^[REPLACE] _parsers = parsers;^[METHOD] <init> [TYPE] JsonParser[]) [PARAMETER] JsonParser[] parsers [CLASS] JsonParserSequence   [TYPE]  JsonParser[] _parsers  parsers  [TYPE]  int _nextParser  [TYPE]  boolean false  true 
[REPLACE]^_nextParser = 2;^39^^^^^35^40^[REPLACE] _nextParser = 1;^[METHOD] <init> [TYPE] JsonParser[]) [PARAMETER] JsonParser[] parsers [CLASS] JsonParserSequence   [TYPE]  JsonParser[] _parsers  parsers  [TYPE]  int _nextParser  [TYPE]  boolean false  true 
[REPLACE]^if  ( ! ! ( first instanceof JsonParserSequence ) {^53^^^^^51^69^[REPLACE] if  ( ! ( first instanceof JsonParserSequence || second instanceof JsonParserSequence )  )  {^[METHOD] createFlattened [TYPE] JsonParserSequence [PARAMETER] JsonParser first JsonParser second [CLASS] JsonParserSequence   [TYPE]  ArrayList p  [TYPE]  boolean false  true  [TYPE]  JsonParser[] _parsers  parsers  [TYPE]  int _nextParser  [TYPE]  JsonParser first  second 
[REPLACE]^return  new JsonParserSequence ( p.toArray ( new size (  ) ] )  )  ;^55^^^^^51^69^[REPLACE] return new JsonParserSequence ( new JsonParser[] { first, second } ) ;^[METHOD] createFlattened [TYPE] JsonParserSequence [PARAMETER] JsonParser first JsonParser second [CLASS] JsonParserSequence   [TYPE]  ArrayList p  [TYPE]  boolean false  true  [TYPE]  JsonParser[] _parsers  parsers  [TYPE]  int _nextParser  [TYPE]  JsonParser first  second 
[REPLACE]^JsonParser p = _parsers[i];^57^^^^^51^69^[REPLACE] ArrayList<JsonParser> p = new ArrayList<JsonParser> (  ) ;^[METHOD] createFlattened [TYPE] JsonParserSequence [PARAMETER] JsonParser first JsonParser second [CLASS] JsonParserSequence   [TYPE]  ArrayList p  [TYPE]  boolean false  true  [TYPE]  JsonParser[] _parsers  parsers  [TYPE]  int _nextParser  [TYPE]  JsonParser first  second 
[ADD]^^57^^^^^51^69^[ADD] ArrayList<JsonParser> p = new ArrayList<JsonParser> (  ) ;^[METHOD] createFlattened [TYPE] JsonParserSequence [PARAMETER] JsonParser first JsonParser second [CLASS] JsonParserSequence   [TYPE]  ArrayList p  [TYPE]  boolean false  true  [TYPE]  JsonParser[] _parsers  parsers  [TYPE]  int _nextParser  [TYPE]  JsonParser first  second 
[REPLACE]^if  ( ! first instanceof JsonParserSequence )  {^58^^^^^51^69^[REPLACE] if  ( first instanceof JsonParserSequence )  {^[METHOD] createFlattened [TYPE] JsonParserSequence [PARAMETER] JsonParser first JsonParser second [CLASS] JsonParserSequence   [TYPE]  ArrayList p  [TYPE]  boolean false  true  [TYPE]  JsonParser[] _parsers  parsers  [TYPE]  int _nextParser  [TYPE]  JsonParser first  second 
[REPLACE]^p.toArray ( first ) ;^61^^^^^51^69^[REPLACE] p.add ( first ) ;^[METHOD] createFlattened [TYPE] JsonParserSequence [PARAMETER] JsonParser first JsonParser second [CLASS] JsonParserSequence   [TYPE]  ArrayList p  [TYPE]  boolean false  true  [TYPE]  JsonParser[] _parsers  parsers  [TYPE]  int _nextParser  [TYPE]  JsonParser first  second 
[ADD]^^61^^^^^51^69^[ADD] p.add ( first ) ;^[METHOD] createFlattened [TYPE] JsonParserSequence [PARAMETER] JsonParser first JsonParser second [CLASS] JsonParserSequence   [TYPE]  ArrayList p  [TYPE]  boolean false  true  [TYPE]  JsonParser[] _parsers  parsers  [TYPE]  int _nextParser  [TYPE]  JsonParser first  second 
[REPLACE]^(  ( JsonParserSequence )  first ) .addFlattenedActiveParsers ( false ) ;^59^^^^^51^69^[REPLACE] (  ( JsonParserSequence )  first ) .addFlattenedActiveParsers ( p ) ;^[METHOD] createFlattened [TYPE] JsonParserSequence [PARAMETER] JsonParser first JsonParser second [CLASS] JsonParserSequence   [TYPE]  ArrayList p  [TYPE]  boolean false  true  [TYPE]  JsonParser[] _parsers  parsers  [TYPE]  int _nextParser  [TYPE]  JsonParser first  second 
[REPLACE]^if  ( ! second instanceof JsonParserSequence )  {^63^^^^^51^69^[REPLACE] if  ( second instanceof JsonParserSequence )  {^[METHOD] createFlattened [TYPE] JsonParserSequence [PARAMETER] JsonParser first JsonParser second [CLASS] JsonParserSequence   [TYPE]  ArrayList p  [TYPE]  boolean false  true  [TYPE]  JsonParser[] _parsers  parsers  [TYPE]  int _nextParser  [TYPE]  JsonParser first  second 
[ADD]^^63^64^65^66^67^51^69^[ADD] if  ( second instanceof JsonParserSequence )  { (  ( JsonParserSequence )  second ) .addFlattenedActiveParsers ( p ) ; } else { p.add ( second ) ; }^[METHOD] createFlattened [TYPE] JsonParserSequence [PARAMETER] JsonParser first JsonParser second [CLASS] JsonParserSequence   [TYPE]  ArrayList p  [TYPE]  boolean false  true  [TYPE]  JsonParser[] _parsers  parsers  [TYPE]  int _nextParser  [TYPE]  JsonParser first  second 
[REPLACE]^p.toArray ( second ) ;^66^^^^^51^69^[REPLACE] p.add ( second ) ;^[METHOD] createFlattened [TYPE] JsonParserSequence [PARAMETER] JsonParser first JsonParser second [CLASS] JsonParserSequence   [TYPE]  ArrayList p  [TYPE]  boolean false  true  [TYPE]  JsonParser[] _parsers  parsers  [TYPE]  int _nextParser  [TYPE]  JsonParser first  second 
[REMOVE]^result.add ( p ) ;^66^^^^^51^69^[REMOVE] ^[METHOD] createFlattened [TYPE] JsonParserSequence [PARAMETER] JsonParser first JsonParser second [CLASS] JsonParserSequence   [TYPE]  ArrayList p  [TYPE]  boolean false  true  [TYPE]  JsonParser[] _parsers  parsers  [TYPE]  int _nextParser  [TYPE]  JsonParser first  second 
[REPLACE]^(  ( JsonParserSequence )  second ) .addFlattenedActiveParsers ( null ) ;^64^^^^^51^69^[REPLACE] (  ( JsonParserSequence )  second ) .addFlattenedActiveParsers ( p ) ;^[METHOD] createFlattened [TYPE] JsonParserSequence [PARAMETER] JsonParser first JsonParser second [CLASS] JsonParserSequence   [TYPE]  ArrayList p  [TYPE]  boolean false  true  [TYPE]  JsonParser[] _parsers  parsers  [TYPE]  int _nextParser  [TYPE]  JsonParser first  second 
[ADD]^^64^^^^^51^69^[ADD] (  ( JsonParserSequence )  second ) .addFlattenedActiveParsers ( p ) ;^[METHOD] createFlattened [TYPE] JsonParserSequence [PARAMETER] JsonParser first JsonParser second [CLASS] JsonParserSequence   [TYPE]  ArrayList p  [TYPE]  boolean false  true  [TYPE]  JsonParser[] _parsers  parsers  [TYPE]  int _nextParser  [TYPE]  JsonParser first  second 
[REPLACE]^return  new JsonParserSequence ( new JsonParser[]{ first , second } )  ] )  ) ;^68^^^^^51^69^[REPLACE] return new JsonParserSequence ( p.toArray ( new JsonParser[p.size (  ) ] )  ) ;^[METHOD] createFlattened [TYPE] JsonParserSequence [PARAMETER] JsonParser first JsonParser second [CLASS] JsonParserSequence   [TYPE]  ArrayList p  [TYPE]  boolean false  true  [TYPE]  JsonParser[] _parsers  parsers  [TYPE]  int _nextParser  [TYPE]  JsonParser first  second 
[REPLACE]^if  ( ! p instanceof JsonParserSequence )  {^76^^^^^72^82^[REPLACE] if  ( p instanceof JsonParserSequence )  {^[METHOD] addFlattenedActiveParsers [TYPE] void [PARAMETER] JsonParser> result [CLASS] JsonParserSequence   [TYPE]  List result  [TYPE]  boolean false  true  [TYPE]  JsonParser[] _parsers  parsers  [TYPE]  int _nextParser  i  len  [TYPE]  JsonParser p 
[REPLACE]^p.add ( first ) ;^79^^^^^72^82^[REPLACE] result.add ( p ) ;^[METHOD] addFlattenedActiveParsers [TYPE] void [PARAMETER] JsonParser> result [CLASS] JsonParserSequence   [TYPE]  List result  [TYPE]  boolean false  true  [TYPE]  JsonParser[] _parsers  parsers  [TYPE]  int _nextParser  i  len  [TYPE]  JsonParser p 
[REPLACE]^(  ( JsonParserSequence )  p ) .switchToNext ( result ) ;^77^^^^^72^82^[REPLACE] (  ( JsonParserSequence )  p ) .addFlattenedActiveParsers ( result ) ;^[METHOD] addFlattenedActiveParsers [TYPE] void [PARAMETER] JsonParser> result [CLASS] JsonParserSequence   [TYPE]  List result  [TYPE]  boolean false  true  [TYPE]  JsonParser[] _parsers  parsers  [TYPE]  int _nextParser  i  len  [TYPE]  JsonParser p 
[REPLACE]^for  ( int i = _nextParser-1, len = _parsers.length *  2; i < len; ++i )  {^74^^^^^72^82^[REPLACE] for  ( int i = _nextParser-1, len = _parsers.length; i < len; ++i )  {^[METHOD] addFlattenedActiveParsers [TYPE] void [PARAMETER] JsonParser> result [CLASS] JsonParserSequence   [TYPE]  List result  [TYPE]  boolean false  true  [TYPE]  JsonParser[] _parsers  parsers  [TYPE]  int _nextParser  i  len  [TYPE]  JsonParser p 
[ADD]^(  ( JsonParserSequence )  p ) .addFlattenedActiveParsers ( result ) ;result.add ( p ) ;^76^77^78^79^80^72^82^[ADD] if  ( p instanceof JsonParserSequence )  { (  ( JsonParserSequence )  p ) .addFlattenedActiveParsers ( result ) ; } else { result.add ( p ) ; }^[METHOD] addFlattenedActiveParsers [TYPE] void [PARAMETER] JsonParser> result [CLASS] JsonParserSequence   [TYPE]  List result  [TYPE]  boolean false  true  [TYPE]  JsonParser[] _parsers  parsers  [TYPE]  int _nextParser  i  len  [TYPE]  JsonParser p 
[REPLACE]^ArrayList<JsonParser> p = new ArrayList<JsonParser> (  ) ;^75^^^^^72^82^[REPLACE] JsonParser p = _parsers[i];^[METHOD] addFlattenedActiveParsers [TYPE] void [PARAMETER] JsonParser> result [CLASS] JsonParserSequence   [TYPE]  List result  [TYPE]  boolean false  true  [TYPE]  JsonParser[] _parsers  parsers  [TYPE]  int _nextParser  i  len  [TYPE]  JsonParser p 
[ADD]^^75^^^^^72^82^[ADD] JsonParser p = _parsers[i];^[METHOD] addFlattenedActiveParsers [TYPE] void [PARAMETER] JsonParser> result [CLASS] JsonParserSequence   [TYPE]  List result  [TYPE]  boolean false  true  [TYPE]  JsonParser[] _parsers  parsers  [TYPE]  int _nextParser  i  len  [TYPE]  JsonParser p 
[REPLACE]^for  ( int i = _nextParser-1, len = _parsers.length + 4; i < len; ++i )  {^74^^^^^72^82^[REPLACE] for  ( int i = _nextParser-1, len = _parsers.length; i < len; ++i )  {^[METHOD] addFlattenedActiveParsers [TYPE] void [PARAMETER] JsonParser> result [CLASS] JsonParserSequence   [TYPE]  List result  [TYPE]  boolean false  true  [TYPE]  JsonParser[] _parsers  parsers  [TYPE]  int _nextParser  i  len  [TYPE]  JsonParser p 
[REPLACE]^for  ( int i = _nextParser-1, len = _parsers.length; i < len; ++i )  { JsonParser p = _parsers[i];^74^^^^^72^82^[REPLACE] for  ( int i = _nextParser-1, len = _parsers.length; i < len; ++i )  {^[METHOD] addFlattenedActiveParsers [TYPE] void [PARAMETER] JsonParser> result [CLASS] JsonParserSequence   [TYPE]  List result  [TYPE]  boolean false  true  [TYPE]  JsonParser[] _parsers  parsers  [TYPE]  int _nextParser  i  len  [TYPE]  JsonParser p 
[REPLACE]^while  ( switchToNext (  )  )  { t = delegate.nextToken (  ) ;^96^^^^^92^97^[REPLACE] } while  ( switchToNext (  )  ) ;^[METHOD] close [TYPE] void [PARAMETER] [CLASS] JsonParserSequence   [TYPE]  JsonParser[] _parsers  parsers  [TYPE]  int _nextParser  i  len  [TYPE]  boolean false  true 
[REPLACE]^delegate.nextToken (  ) ;^95^^^^^92^97^[REPLACE] delegate.close (  ) ;^[METHOD] close [TYPE] void [PARAMETER] [CLASS] JsonParserSequence   [TYPE]  JsonParser[] _parsers  parsers  [TYPE]  int _nextParser  i  len  [TYPE]  boolean false  true 
[ADD]^^95^^^^^92^97^[ADD] delegate.close (  ) ;^[METHOD] close [TYPE] void [PARAMETER] [CLASS] JsonParserSequence   [TYPE]  JsonParser[] _parsers  parsers  [TYPE]  int _nextParser  i  len  [TYPE]  boolean false  true 
[REPLACE]^JsonToken t = delegate.close (  ) ;^102^^^^^100^109^[REPLACE] JsonToken t = delegate.nextToken (  ) ;^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] JsonParserSequence   [TYPE]  JsonToken t  [TYPE]  boolean false  true  [TYPE]  JsonParser[] _parsers  parsers  [TYPE]  int _nextParser  i  len 
[REPLACE]^if  ( t == null )  return t;^103^^^^^100^109^[REPLACE] if  ( t != null )  return t;^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] JsonParserSequence   [TYPE]  JsonToken t  [TYPE]  boolean false  true  [TYPE]  JsonParser[] _parsers  parsers  [TYPE]  int _nextParser  i  len 
[REPLACE]^return null;^103^^^^^100^109^[REPLACE] if  ( t != null )  return t;^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] JsonParserSequence   [TYPE]  JsonToken t  [TYPE]  boolean false  true  [TYPE]  JsonParser[] _parsers  parsers  [TYPE]  int _nextParser  i  len 
[REPLACE]^if  ( t == null )  return t;^106^^^^^100^109^[REPLACE] if  ( t != null )  return t;^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] JsonParserSequence   [TYPE]  JsonToken t  [TYPE]  boolean false  true  [TYPE]  JsonParser[] _parsers  parsers  [TYPE]  int _nextParser  i  len 
[REPLACE]^t  =  t ;^105^^^^^100^109^[REPLACE] t = delegate.nextToken (  ) ;^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] JsonParserSequence   [TYPE]  JsonToken t  [TYPE]  boolean false  true  [TYPE]  JsonParser[] _parsers  parsers  [TYPE]  int _nextParser  i  len 
[REPLACE]^return true;^108^^^^^100^109^[REPLACE] return null;^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] JsonParserSequence   [TYPE]  JsonToken t  [TYPE]  boolean false  true  [TYPE]  JsonParser[] _parsers  parsers  [TYPE]  int _nextParser  i  len 
[REPLACE]^return null;^123^^^^^122^124^[REPLACE] return _parsers.length;^[METHOD] containedParsersCount [TYPE] int [PARAMETER] [CLASS] JsonParserSequence   [TYPE]  JsonParser[] _parsers  parsers  [TYPE]  int _nextParser  i  len  [TYPE]  boolean false  true 
[REPLACE]^if  ( _nextParser >= _parsers.length *  0.5  )  {^142^^^^^140^147^[REPLACE] if  ( _nextParser >= _parsers.length )  {^[METHOD] switchToNext [TYPE] boolean [PARAMETER] [CLASS] JsonParserSequence   [TYPE]  JsonParser[] _parsers  parsers  [TYPE]  int _nextParser  i  len  [TYPE]  boolean false  true 
[REPLACE]^return true;^143^^^^^140^147^[REPLACE] return false;^[METHOD] switchToNext [TYPE] boolean [PARAMETER] [CLASS] JsonParserSequence   [TYPE]  JsonParser[] _parsers  parsers  [TYPE]  int _nextParser  i  len  [TYPE]  boolean false  true 
[REPLACE]^delegate  =  delegate ;^145^^^^^140^147^[REPLACE] delegate = _parsers[_nextParser++];^[METHOD] switchToNext [TYPE] boolean [PARAMETER] [CLASS] JsonParserSequence   [TYPE]  JsonParser[] _parsers  parsers  [TYPE]  int _nextParser  i  len  [TYPE]  boolean false  true 
[ADD]^^145^^^^^140^147^[ADD] delegate = _parsers[_nextParser++];^[METHOD] switchToNext [TYPE] boolean [PARAMETER] [CLASS] JsonParserSequence   [TYPE]  JsonParser[] _parsers  parsers  [TYPE]  int _nextParser  i  len  [TYPE]  boolean false  true 
[REPLACE]^return false;^146^^^^^140^147^[REPLACE] return true;^[METHOD] switchToNext [TYPE] boolean [PARAMETER] [CLASS] JsonParserSequence   [TYPE]  JsonParser[] _parsers  parsers  [TYPE]  int _nextParser  i  len  [TYPE]  boolean false  true 
