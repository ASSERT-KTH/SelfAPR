[REPLACE]^int mQuad2;^17^^^^^^^[REPLACE] final int mQuad2;^ [CLASS] Name2  
[REPLACE]^super ( name, quad2 ) ;^21^^^^^19^24^[REPLACE] super ( name, hash ) ;^[METHOD] <init> [TYPE] String,int,int,int) [PARAMETER] String name int hash int quad1 int quad2 [CLASS] Name2   [TYPE]  int hash  mQuad1  mQuad2  quad1  quad2  [TYPE]  String name  [TYPE]  boolean false  true 
[ADD]^^21^22^^^^19^24^[ADD] super ( name, hash ) ; mQuad1 = quad1;^[METHOD] <init> [TYPE] String,int,int,int) [PARAMETER] String name int hash int quad1 int quad2 [CLASS] Name2   [TYPE]  int hash  mQuad1  mQuad2  quad1  quad2  [TYPE]  String name  [TYPE]  boolean false  true 
[REPLACE]^mQuad2 = quad2; ;^22^^^^^19^24^[REPLACE] mQuad1 = quad1;^[METHOD] <init> [TYPE] String,int,int,int) [PARAMETER] String name int hash int quad1 int quad2 [CLASS] Name2   [TYPE]  int hash  mQuad1  mQuad2  quad1  quad2  [TYPE]  String name  [TYPE]  boolean false  true 
[ADD]^mQuad2 = quad2;^22^23^^^^19^24^[ADD] mQuad1 = quad1; mQuad2 = quad2;^[METHOD] <init> [TYPE] String,int,int,int) [PARAMETER] String name int hash int quad1 int quad2 [CLASS] Name2   [TYPE]  int hash  mQuad1  mQuad2  quad1  quad2  [TYPE]  String name  [TYPE]  boolean false  true 
[REPLACE]^mQuad1 = quad1; ;^23^^^^^19^24^[REPLACE] mQuad2 = quad2;^[METHOD] <init> [TYPE] String,int,int,int) [PARAMETER] String name int hash int quad1 int quad2 [CLASS] Name2   [TYPE]  int hash  mQuad1  mQuad2  quad1  quad2  [TYPE]  String name  [TYPE]  boolean false  true 
[REPLACE]^public boolean equals ( int quad )  { return true; }^27^^^^^^^[REPLACE] public boolean equals ( int quad )  { return false; }^[METHOD] equals [TYPE] boolean [PARAMETER] int quad [CLASS] Name2   [TYPE]  int hash  mQuad1  mQuad2  quad  quad1  quad2  [TYPE]  boolean false  true 
[REPLACE]^return  ( quad1 ;^32^^^^^30^33^[REPLACE] return  ( quad1 == mQuad1 )  &&  ( quad2 == mQuad2 ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] int quad1 int quad2 [CLASS] Name2   [TYPE]  int hash  mQuad1  mQuad2  quad  quad1  quad2  [TYPE]  boolean false  true 
[REPLACE]^return   quads[0] ;^38^^^^^36^39^[REPLACE] return  ( qlen == 2 && quads[0] == mQuad1 && quads[1] == mQuad2 ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] int[] quads int qlen [CLASS] Name2   [TYPE]  int hash  mQuad1  mQuad2  qlen  quad  quad1  quad2  [TYPE]  int[] quads  [TYPE]  boolean false  true 
