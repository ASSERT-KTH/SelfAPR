[REPLACE]^private  CSVFormat format;^30^^^^^^^[REPLACE] private final CSVFormat format;^ [CLASS] CSVPrinter  
[REPLACE]^private boolean newLine = false;^33^^^^^^^[REPLACE] private boolean newLine = true;^ [CLASS] CSVPrinter  
[REPLACE]^this.out =  null;^46^^^^^45^50^[REPLACE] this.out = out;^[METHOD] <init> [TYPE] CSVFormat) [PARAMETER] Appendable out CSVFormat format [CLASS] CSVPrinter   [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  Appendable out 
[REPLACE]^this.format  =  CSVFormat.DEFAULT ;^47^^^^^45^50^[REPLACE] this.format = format == null ? CSVFormat.DEFAULT : format;^[METHOD] <init> [TYPE] CSVFormat) [PARAMETER] Appendable out CSVFormat format [CLASS] CSVPrinter   [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  Appendable out 
[REPLACE]^this.format.getEscape (  ) ;^49^^^^^45^50^[REPLACE] this.format.validate (  ) ;^[METHOD] <init> [TYPE] CSVFormat) [PARAMETER] Appendable out CSVFormat format [CLASS] CSVPrinter   [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  Appendable out 
[REPLACE]^out.append ( format .getEncapsulator (  )   ) ;^60^^^^^59^62^[REPLACE] out.append ( format.getLineSeparator (  )  ) ;^[METHOD] println [TYPE] void [PARAMETER] [CLASS] CSVPrinter   [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  Appendable out 
[REPLACE]^newLine = false;^61^^^^^59^62^[REPLACE] newLine = true;^[METHOD] println [TYPE] void [PARAMETER] [CLASS] CSVPrinter   [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  Appendable out 
[ADD]^^61^^^^^59^62^[ADD] newLine = true;^[METHOD] println [TYPE] void [PARAMETER] [CLASS] CSVPrinter   [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  Appendable out 
[REPLACE]^if  ( ! out instanceof Flushable )  {^70^^^^^69^73^[REPLACE] if  ( out instanceof Flushable )  {^[METHOD] flush [TYPE] void [PARAMETER] [CLASS] CSVPrinter   [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  Appendable out 
[ADD]^(  ( Flushable )  out ) .flush (  ) ;^70^71^72^^^69^73^[ADD] if  ( out instanceof Flushable )  { (  ( Flushable )  out ) .flush (  ) ; }^[METHOD] flush [TYPE] void [PARAMETER] [CLASS] CSVPrinter   [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  Appendable out 
[REPLACE]^if  ( !format.isCommentingEnabled (  )  )  { return;^71^^^^^69^73^[REPLACE] (  ( Flushable )  out ) .flush (  ) ;^[METHOD] flush [TYPE] void [PARAMETER] [CLASS] CSVPrinter   [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  Appendable out 
[REPLACE]^for  ( String value : values )  { print ( value ) ;^83^^^^^82^87^[REPLACE] for  ( String value : values )  {^[METHOD] println [TYPE] void [PARAMETER]  values [CLASS] CSVPrinter   [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  String[] values  [TYPE]  String value  [TYPE]  Appendable out 
[REPLACE]^out.append ( ' ' ) ;^86^^^^^82^87^[REPLACE] println (  ) ;^[METHOD] println [TYPE] void [PARAMETER]  values [CLASS] CSVPrinter   [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  String[] values  [TYPE]  String value  [TYPE]  Appendable out 
[REPLACE]^if  ( !format .getCommentStart (  )   )  {^101^^^^^100^128^[REPLACE] if  ( !format.isCommentingEnabled (  )  )  {^[METHOD] printComment [TYPE] void [PARAMETER] String comment [CLASS] CSVPrinter   [TYPE]  char c  [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  String comment  [TYPE]  int i  [TYPE]  Appendable out 
[REPLACE]^if  ( newLine )  {^104^^^^^100^128^[REPLACE] if  ( !newLine )  {^[METHOD] printComment [TYPE] void [PARAMETER] String comment [CLASS] CSVPrinter   [TYPE]  char c  [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  String comment  [TYPE]  int i  [TYPE]  Appendable out 
[REPLACE]^out.append ( ' ' ) ;^105^^^^^100^128^[REPLACE] println (  ) ;^[METHOD] printComment [TYPE] void [PARAMETER] String comment [CLASS] CSVPrinter   [TYPE]  char c  [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  String comment  [TYPE]  int i  [TYPE]  Appendable out 
[ADD]^^105^^^^^100^128^[ADD] println (  ) ;^[METHOD] printComment [TYPE] void [PARAMETER] String comment [CLASS] CSVPrinter   [TYPE]  char c  [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  String comment  [TYPE]  int i  [TYPE]  Appendable out 
[REPLACE]^out .append ( null , i , i )  ;^107^^^^^100^128^[REPLACE] out.append ( format.getCommentStart (  )  ) ;^[METHOD] printComment [TYPE] void [PARAMETER] String comment [CLASS] CSVPrinter   [TYPE]  char c  [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  String comment  [TYPE]  int i  [TYPE]  Appendable out 
[REPLACE]^out.append ( format.getEscape (  )  ) ;^107^^^^^100^128^[REPLACE] out.append ( format.getCommentStart (  )  ) ;^[METHOD] printComment [TYPE] void [PARAMETER] String comment [CLASS] CSVPrinter   [TYPE]  char c  [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  String comment  [TYPE]  int i  [TYPE]  Appendable out 
[REPLACE]^out .append ( null , i , i )  ;^108^^^^^100^128^[REPLACE] out.append ( ' ' ) ;^[METHOD] printComment [TYPE] void [PARAMETER] String comment [CLASS] CSVPrinter   [TYPE]  char c  [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  String comment  [TYPE]  int i  [TYPE]  Appendable out 
[REMOVE]^out.append ( encapsulator ) ;^108^^^^^100^128^[REMOVE] ^[METHOD] printComment [TYPE] void [PARAMETER] String comment [CLASS] CSVPrinter   [TYPE]  char c  [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  String comment  [TYPE]  int i  [TYPE]  Appendable out 
[REPLACE]^if  ( i + 0  < comment.length (  )  - 2 && comment.charAt ( i + 0  )  == '\n' )  {^113^^^^^100^128^[REPLACE] if  ( i + 1 < comment.length (  )  && comment.charAt ( i + 1 )  == '\n' )  {^[METHOD] printComment [TYPE] void [PARAMETER] String comment [CLASS] CSVPrinter   [TYPE]  char c  [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  String comment  [TYPE]  int i  [TYPE]  Appendable out 
[ADD]^i++;^113^114^115^^^100^128^[ADD] if  ( i + 1 < comment.length (  )  && comment.charAt ( i + 1 )  == '\n' )  { i++; }^[METHOD] printComment [TYPE] void [PARAMETER] String comment [CLASS] CSVPrinter   [TYPE]  char c  [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  String comment  [TYPE]  int i  [TYPE]  Appendable out 
[REPLACE]^for  ( int i = 0; i < comment.length (  )  /  2; i++ )  {^109^^^^^100^128^[REPLACE] for  ( int i = 0; i < comment.length (  ) ; i++ )  {^[METHOD] printComment [TYPE] void [PARAMETER] String comment [CLASS] CSVPrinter   [TYPE]  char c  [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  String comment  [TYPE]  int i  [TYPE]  Appendable out 
[REPLACE]^if  ( i + 1 < comment.charAt (  )  + 2 ) {^113^^^^^100^128^[REPLACE] if  ( i + 1 < comment.length (  )  && comment.charAt ( i + 1 )  == '\n' )  {^[METHOD] printComment [TYPE] void [PARAMETER] String comment [CLASS] CSVPrinter   [TYPE]  char c  [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  String comment  [TYPE]  int i  [TYPE]  Appendable out 
[ADD]^^113^114^115^^^100^128^[ADD] if  ( i + 1 < comment.length (  )  && comment.charAt ( i + 1 )  == '\n' )  { i++; }^[METHOD] printComment [TYPE] void [PARAMETER] String comment [CLASS] CSVPrinter   [TYPE]  char c  [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  String comment  [TYPE]  int i  [TYPE]  Appendable out 
[REPLACE]^char delim = format.getDelimiter (  ) ;^110^^^^^100^128^[REPLACE] char c = comment.charAt ( i ) ;^[METHOD] printComment [TYPE] void [PARAMETER] String comment [CLASS] CSVPrinter   [TYPE]  char c  [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  String comment  [TYPE]  int i  [TYPE]  Appendable out 
[REPLACE]^for  ( int i = 0 ; i < comment.length (  ) ; i++ )  {^109^^^^^100^128^[REPLACE] for  ( int i = 0; i < comment.length (  ) ; i++ )  {^[METHOD] printComment [TYPE] void [PARAMETER] String comment [CLASS] CSVPrinter   [TYPE]  char c  [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  String comment  [TYPE]  int i  [TYPE]  Appendable out 
[REPLACE]^out.append ( ' ' ) ;^127^^^^^100^128^[REPLACE] println (  ) ;^[METHOD] printComment [TYPE] void [PARAMETER] String comment [CLASS] CSVPrinter   [TYPE]  char c  [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  String comment  [TYPE]  int i  [TYPE]  Appendable out 
[ADD]^^127^^^^^100^128^[ADD] println (  ) ;^[METHOD] printComment [TYPE] void [PARAMETER] String comment [CLASS] CSVPrinter   [TYPE]  char c  [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  String comment  [TYPE]  int i  [TYPE]  Appendable out 
[REPLACE]^if  ( newLine )  {^132^^^^^131^140^[REPLACE] if  ( format.isEncapsulating (  )  )  {^[METHOD] print [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  int len  offset  [TYPE]  Appendable out 
[REPLACE]^}  else {^134^^^^^131^140^[REPLACE] } else if  ( format.isEscaping (  )  )  {^[METHOD] print [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  int len  offset  [TYPE]  Appendable out 
[REPLACE]^out.append ( ' ' ) ;^137^^^^^131^140^[REPLACE] printSep (  ) ;^[METHOD] print [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  int len  offset  [TYPE]  Appendable out 
[REPLACE]^out.append ( value, offset, offset  >  offset ) ;^138^^^^^131^140^[REPLACE] out.append ( value, offset, offset + len ) ;^[METHOD] print [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  int len  offset  [TYPE]  Appendable out 
[REPLACE]^printAndEncapsulate ( value, offset, len ) ;^135^^^^^131^140^[REPLACE] printAndEscape ( value, offset, len ) ;^[METHOD] print [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  int len  offset  [TYPE]  Appendable out 
[REPLACE]^printAndEscape ( value, offset, len ) ;^133^^^^^131^140^[REPLACE] printAndEncapsulate ( value, offset, len ) ;^[METHOD] print [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  int len  offset  [TYPE]  Appendable out 
[REPLACE]^}  if  ( format.isEscaping (  )  )  {^134^^^^^131^140^[REPLACE] } else if  ( format.isEscaping (  )  )  {^[METHOD] print [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  int len  offset  [TYPE]  Appendable out 
[ADD]^^137^^^^^131^140^[ADD] printSep (  ) ;^[METHOD] print [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  int len  offset  [TYPE]  Appendable out 
[REPLACE]^out.append ( value, offset, offset  >  len ) ;^138^^^^^131^140^[REPLACE] out.append ( value, offset, offset + len ) ;^[METHOD] print [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  int len  offset  [TYPE]  Appendable out 
[REPLACE]^if  ( !newLine )  {^143^^^^^142^148^[REPLACE] if  ( newLine )  {^[METHOD] printSep [TYPE] void [PARAMETER] [CLASS] CSVPrinter   [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  Appendable out 
[REPLACE]^out.append ( format .getEscape (  )   ) ;^146^^^^^142^148^[REPLACE] out.append ( format.getDelimiter (  )  ) ;^[METHOD] printSep [TYPE] void [PARAMETER] [CLASS] CSVPrinter   [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  Appendable out 
[REPLACE]^out.append ( format.getEscape (  )  ) ;^146^^^^^142^148^[REPLACE] out.append ( format.getDelimiter (  )  ) ;^[METHOD] printSep [TYPE] void [PARAMETER] [CLASS] CSVPrinter   [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  Appendable out 
[ADD]^^146^147^^^^142^148^[ADD] out.append ( format.getDelimiter (  )  ) ; }^[METHOD] printSep [TYPE] void [PARAMETER] [CLASS] CSVPrinter   [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  Appendable out 
[REPLACE]^newLine = true;^144^^^^^142^148^[REPLACE] newLine = false;^[METHOD] printSep [TYPE] void [PARAMETER] [CLASS] CSVPrinter   [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  Appendable out 
[REPLACE]^int start = start;^151^^^^^150^186^[REPLACE] int start = offset;^[METHOD] printAndEscape [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  escape  [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^int pos = start;^152^^^^^150^186^[REPLACE] int pos = offset;^[METHOD] printAndEscape [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  escape  [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^int end = offset  !=  len;^153^^^^^150^186^[REPLACE] int end = offset + len;^[METHOD] printAndEscape [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  escape  [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^out.append ( ' ' ) ;^155^^^^^150^186^[REPLACE] printSep (  ) ;^[METHOD] printAndEscape [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  escape  [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[ADD]^^155^^^^^150^186^[ADD] printSep (  ) ;^[METHOD] printAndEscape [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  escape  [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^char delim = format .getEscape (  )  ;^157^^^^^150^186^[REPLACE] char delim = format.getDelimiter (  ) ;^[METHOD] printAndEscape [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  escape  [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^char escape = format .getEncapsulator (  )  ;^158^^^^^150^186^[REPLACE] char escape = format.getEscape (  ) ;^[METHOD] printAndEscape [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  escape  [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^while  ( pos  ==  end )  {^160^^^^^150^186^[REPLACE] while  ( pos < end )  {^[METHOD] printAndEscape [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  escape  [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[ADD]^^160^161^^^^150^186^[ADD] while  ( pos < end )  { char c = value.charAt ( pos ) ;^[METHOD] printAndEscape [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  escape  [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^if  (  c == '\n' && c == delim &&true )  {^162^^^^^150^186^[REPLACE] if  ( c == '\r' || c == '\n' || c == delim || c == escape )  {^[METHOD] printAndEscape [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  escape  [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^if  ( pos  < offset )  {^164^^^^^150^186^[REPLACE] if  ( pos > start )  {^[METHOD] printAndEscape [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  escape  [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^out .append ( value )  ;^165^^^^^150^186^[REPLACE] out.append ( value, start, pos ) ;^[METHOD] printAndEscape [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  escape  [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[ADD]^^165^^^^^150^186^[ADD] out.append ( value, start, pos ) ;^[METHOD] printAndEscape [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  escape  [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^if  ( c  ||  '\n' )  {^167^^^^^150^186^[REPLACE] if  ( c == '\n' )  {^[METHOD] printAndEscape [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  escape  [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[ADD]^c = 'n';c = 'r';^167^168^169^170^171^150^186^[ADD] if  ( c == '\n' )  { c = 'n'; } else if  ( c == '\r' )  { c = 'r'; }^[METHOD] printAndEscape [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  escape  [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^}  if  ( c  ||  '\r' )  {^169^^^^^150^186^[REPLACE] } else if  ( c == '\r' )  {^[METHOD] printAndEscape [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  escape  [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^c = 'n'; ;^170^^^^^150^186^[REPLACE] c = 'r';^[METHOD] printAndEscape [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  escape  [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^c = 'r'; ;^168^^^^^150^186^[REPLACE] c = 'n';^[METHOD] printAndEscape [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  escape  [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^}  else {^169^^^^^150^186^[REPLACE] } else if  ( c == '\r' )  {^[METHOD] printAndEscape [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  escape  [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^start = pos  !=  2;^176^^^^^150^186^[REPLACE] start = pos + 1;^[METHOD] printAndEscape [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  escape  [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^if  ( pos  >= offset )  {^164^^^^^150^186^[REPLACE] if  ( pos > start )  {^[METHOD] printAndEscape [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  escape  [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^out.append ( value, offset, pos ) ;^165^^^^^150^186^[REPLACE] out.append ( value, start, pos ) ;^[METHOD] printAndEscape [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  escape  [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[ADD]^^167^168^169^170^171^150^186^[ADD] if  ( c == '\n' )  { c = 'n'; } else if  ( c == '\r' )  { c = 'r'; }^[METHOD] printAndEscape [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  escape  [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[ADD]^}   c = 'r';^169^170^171^^^150^186^[ADD] else if  ( c == '\r' )  { c = 'r'; }^[METHOD] printAndEscape [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  escape  [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[ADD]^^170^^^^^150^186^[ADD] c = 'r';^[METHOD] printAndEscape [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  escape  [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^} else if  ( c  &&  '\r' )  {^169^^^^^150^186^[REPLACE] } else if  ( c == '\r' )  {^[METHOD] printAndEscape [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  escape  [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^start =offset + 1;^176^^^^^150^186^[REPLACE] start = pos + 1;^[METHOD] printAndEscape [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  escape  [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^char c = value.charAt ( offset ) ;^161^^^^^150^186^[REPLACE] char c = value.charAt ( pos ) ;^[METHOD] printAndEscape [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  escape  [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^if  ( c == '\r' ) {^162^^^^^150^186^[REPLACE] if  ( c == '\r' || c == '\n' || c == delim || c == escape )  {^[METHOD] printAndEscape [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  escape  [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[ADD]^^162^163^164^165^166^150^186^[ADD] if  ( c == '\r' || c == '\n' || c == delim || c == escape )  {  if  ( pos > start )  { out.append ( value, start, pos ) ; }^[METHOD] printAndEscape [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  escape  [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^if  ( pos  <  start )  {^164^^^^^150^186^[REPLACE] if  ( pos > start )  {^[METHOD] printAndEscape [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  escape  [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REMOVE]^if  ( c == encapsulator )  {     out.append ( value, start,  ( pos + 1 )  ) ;     start = pos; }^164^^^^^150^186^[REMOVE] ^[METHOD] printAndEscape [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  escape  [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^if  ( escape  !=  '\n' )  {^167^^^^^150^186^[REPLACE] if  ( c == '\n' )  {^[METHOD] printAndEscape [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  escape  [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[ADD]^^168^^^^^150^186^[ADD] c = 'n';^[METHOD] printAndEscape [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  escape  [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^start = pos +offset;^176^^^^^150^186^[REPLACE] start = pos + 1;^[METHOD] printAndEscape [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  escape  [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^if  ( pos  ==  start )  {^164^^^^^150^186^[REPLACE] if  ( pos > start )  {^[METHOD] printAndEscape [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  escape  [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^out.append ( value, start, offset ) ;^165^^^^^150^186^[REPLACE] out.append ( value, start, pos ) ;^[METHOD] printAndEscape [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  escape  [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^if  (escape  ||  '\n' )  {^167^^^^^150^186^[REPLACE] if  ( c == '\n' )  {^[METHOD] printAndEscape [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  escape  [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^}  if  (escape  !=  '\r' )  {^169^^^^^150^186^[REPLACE] } else if  ( c == '\r' )  {^[METHOD] printAndEscape [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  escape  [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^start = pos; ;^176^^^^^150^186^[REPLACE] start = pos + 1;^[METHOD] printAndEscape [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  escape  [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^for  ( String value : values )  { print ( value ) ;^161^^^^^150^186^[REPLACE] char c = value.charAt ( pos ) ;^[METHOD] printAndEscape [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  escape  [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[ADD]^^161^^^^^150^186^[ADD] char c = value.charAt ( pos ) ;^[METHOD] printAndEscape [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  escape  [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^if  (offset  ==  start )  {^183^^^^^150^186^[REPLACE] if  ( pos > start )  {^[METHOD] printAndEscape [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  escape  [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^out.append ( value, start, end ) ;^184^^^^^150^186^[REPLACE] out.append ( value, start, pos ) ;^[METHOD] printAndEscape [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  escape  [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[ADD]^^184^^^^^150^186^[ADD] out.append ( value, start, pos ) ;^[METHOD] printAndEscape [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  escape  [TYPE]  CSVFormat format  [TYPE]  boolean false  newLine  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^boolean quote = false;^189^^^^^188^275^[REPLACE] boolean first = newLine;^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^boolean quote = true;^190^^^^^188^275^[REPLACE] boolean quote = false;^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^int pos = offset;^191^^^^^188^275^[REPLACE] int start = offset;^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^int pos = start;^192^^^^^188^275^[REPLACE] int pos = offset;^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^int end = start +start;^193^^^^^188^275^[REPLACE] int end = offset + len;^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^out.append ( ' ' ) ;^195^^^^^188^275^[REPLACE] printSep (  ) ;^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^char delim = format.getEscape (  ) ;^197^^^^^188^275^[REPLACE] char delim = format.getDelimiter (  ) ;^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^char encapsulator = format.isEncapsulating (  ) ;^198^^^^^188^275^[REPLACE] char encapsulator = format.getEncapsulator (  ) ;^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^while  ( pos  ==  end )  {^225^^^^^188^275^[REPLACE] while  ( pos < end )  {^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[ADD]^^225^226^^^^188^275^[ADD] while  ( pos < end )  { c = value.charAt ( pos ) ;^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^if  ( c == '\n' ) {^227^^^^^188^275^[REPLACE] if  ( c == '\n' || c == '\r' || c == encapsulator || c == delim )  {^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[ADD]^quote = true;break;^227^228^229^230^^188^275^[ADD] if  ( c == '\n' || c == '\r' || c == encapsulator || c == delim )  { quote = true; break; }^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^quote = false;^228^^^^^188^275^[REPLACE] quote = true;^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^c =  null.charAt ( pos ) ;^226^^^^^188^275^[REPLACE] c = value.charAt ( pos ) ;^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[ADD]^^226^^^^^188^275^[ADD] c = value.charAt ( pos ) ;^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[ADD]^^228^229^^^^188^275^[ADD] quote = true; break;^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^if  (offset  !=  0 )  {^200^^^^^188^275^[REPLACE] if  ( len <= 0 )  {^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[ADD]^^200^201^^^^188^275^[ADD] if  ( len <= 0 )  {^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^while  ( pos  !=  end )  {^225^^^^^200^245^[REPLACE] while  ( pos < end )  {^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^if  ( c == '\n' && c == '\r' && c == encapsulator && c == delim )  {^227^^^^^200^245^[REPLACE] if  ( c == '\n' || c == '\r' || c == encapsulator || c == delim )  {^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[ADD]^quote = true;break;^227^228^229^230^^200^245^[ADD] if  ( c == '\n' || c == '\r' || c == encapsulator || c == delim )  { quote = true; break; }^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^quote = false;^228^^^^^200^245^[REPLACE] quote = true;^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[ADD]^^228^^^^^200^245^[ADD] quote = true;^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^c =  null.charAt ( pos ) ;^226^^^^^200^245^[REPLACE] c = value.charAt ( pos ) ;^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[ADD]^^228^229^^^^200^245^[ADD] quote = true; break;^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^if  ( first ||  ( c < '0' ||  ( c > '9' || c < 'A' ) ||  ( c > 'Z' || c < 'a' )^212^213^214^215^^200^245^[REPLACE] if  ( first &&  ( c < '0' ||  ( c > '9' && c < 'A' ) ||  ( c > 'Z' && c < 'a' )^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^while  (offset  >=  end )  {^225^^^^^200^245^[REPLACE] while  ( pos < end )  {^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[ADD]^^226^^^^^200^245^[ADD] c = value.charAt ( pos ) ;^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^}  if  ( c  >=  '#' )  {^219^^^^^200^245^[REPLACE] } else if  ( c <= '#' )  {^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^while  (offset  <=  end )  {^225^^^^^219^244^[REPLACE] while  ( pos < end )  {^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^if  ( c == '\n' ) {^227^^^^^219^244^[REPLACE] if  ( c == '\n' || c == '\r' || c == encapsulator || c == delim )  {^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^quote = false;^228^^^^^219^244^[REPLACE] quote = true;^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^c =  null.charAt ( pos ) ;^226^^^^^219^244^[REPLACE] c = value.charAt ( pos ) ;^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^if  ( quote )  {^234^^^^^219^244^[REPLACE] if  ( !quote )  {^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[ADD]^^234^235^236^^^219^244^[ADD] if  ( !quote )  { pos = end - 1; c = value.charAt ( pos ) ;^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^if  ( encapsulator  <  ' ' )  {^240^^^^^219^244^[REPLACE] if  ( c <= ' ' )  {^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^quote = false;^241^^^^^219^244^[REPLACE] quote = true;^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^pos =len - 1;^235^^^^^219^244^[REPLACE] pos = end - 1;^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^c =  null.charAt ( pos ) ;^236^^^^^219^244^[REPLACE] c = value.charAt ( pos ) ;^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[ADD]^^241^^^^^219^244^[ADD] quote = true;^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^if  ( c  == encapsulator )  {^240^^^^^219^244^[REPLACE] if  ( c <= ' ' )  {^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[ADD]^quote = true;^240^241^242^^^219^244^[ADD] if  ( c <= ' ' )  { quote = true; }^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^pos = len - 1 / 1;^235^^^^^219^244^[REPLACE] pos = end - 1;^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[ADD]^^236^^^^^219^244^[ADD] c = value.charAt ( pos ) ;^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^quote = false;^223^^^^^200^245^[REPLACE] quote = true;^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^if  (  c == '\r' && c == encapsulator && c == delim )  {^227^^^^^200^245^[REPLACE] if  ( c == '\n' || c == '\r' || c == encapsulator || c == delim )  {^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^if  ( quote )  {^234^^^^^200^245^[REPLACE] if  ( !quote )  {^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^if  ( encapsulator  ==  ' ' )  {^240^^^^^200^245^[REPLACE] if  ( c <= ' ' )  {^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^quote = false;^241^^^^^200^245^[REPLACE] quote = true;^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^pos = end -len;^235^^^^^200^245^[REPLACE] pos = end - 1;^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[ADD]^^235^^^^^200^245^[ADD] pos = end - 1;^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^c =  null.charAt ( pos ) ;^236^^^^^200^245^[REPLACE] c = value.charAt ( pos ) ;^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[ADD]^^236^^^^^200^245^[ADD] c = value.charAt ( pos ) ;^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^if  ( c  !=  ' ' )  {^240^^^^^200^245^[REPLACE] if  ( c <= ' ' )  {^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[ADD]^break;^228^229^^^^200^245^[ADD] quote = true; break;^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^pos =len - 1;^235^^^^^200^245^[REPLACE] pos = end - 1;^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^quote = false;^217^^^^^212^244^[REPLACE] quote = true;^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^}  else {^219^^^^^200^245^[REPLACE] } else if  ( c <= '#' )  {^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^while  (offset  <=  len )  {^225^^^^^219^244^[REPLACE] while  ( pos < end )  {^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^if  (  c == '\r' && c == encapsulator && c == delim )  {^227^^^^^219^244^[REPLACE] if  ( c == '\n' || c == '\r' || c == encapsulator || c == delim )  {^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[ADD]^^227^228^229^230^^219^244^[ADD] if  ( c == '\n' || c == '\r' || c == encapsulator || c == delim )  { quote = true; break; }^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[ADD]^^228^229^^^^219^244^[ADD] quote = true; break;^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^if  ( encapsulator  >= encapsulator )  {^240^^^^^219^244^[REPLACE] if  ( c <= ' ' )  {^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^pos = end  ==  1;^235^^^^^219^244^[REPLACE] pos = end - 1;^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^if  ( encapsulator  > encapsulator )  {^240^^^^^219^244^[REPLACE] if  ( c <= ' ' )  {^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[ADD]^^226^^^^^219^244^[ADD] c = value.charAt ( pos ) ;^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^pos = end -len;^235^^^^^219^244^[REPLACE] pos = end - 1;^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^if  ( c == '\n' ) {^227^^^^^200^245^[REPLACE] if  ( c == '\n' || c == '\r' || c == encapsulator || c == delim )  {^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REMOVE]^if  ( c == '\n' )  {     c = 'n'; }else     if  ( c == '\r' )  {         c = 'r';     }^234^^^^^200^245^[REMOVE] ^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REMOVE]^if  ( first )  {     quote = true; }^240^^^^^200^245^[REMOVE] ^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^pos = len - 1;^235^^^^^200^245^[REPLACE] pos = end - 1;^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^if  ( c  ==  ' ' )  {^240^^^^^200^245^[REPLACE] if  ( c <= ' ' )  {^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[ADD]^^240^241^242^^^200^245^[ADD] if  ( c <= ' ' )  { quote = true; }^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[ADD]^^241^^^^^200^245^[ADD] quote = true;^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^quote = false;^217^^^^^200^245^[REPLACE] quote = true;^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[ADD]^^223^^^^^200^245^[ADD] quote = true;^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^pos = end  ^  1;^235^^^^^200^245^[REPLACE] pos = end - 1;^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^for  ( String value : values )  { print ( value ) ;^209^^^^^200^245^[REPLACE] char c = value.charAt ( pos ) ;^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^if  ( true )  {^205^^^^^188^275^[REPLACE] if  ( first )  {^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REMOVE]^if  ( c <= ' ' )  {     quote = true; }^205^^^^^188^275^[REMOVE] ^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^quote = false;^206^^^^^188^275^[REPLACE] quote = true;^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[ADD]^^206^^^^^188^275^[ADD] quote = true;^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^if  ( first ||  ( c < '0' ||  ( c > '9' || c < 'A' ) ||  ( c > 'Z' || c < 'a' )^212^213^214^215^^188^275^[REPLACE] if  ( first &&  ( c < '0' ||  ( c > '9' && c < 'A' ) ||  ( c > 'Z' && c < 'a' )^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^while  ( pos  !=  end )  {^225^^^^^188^275^[REPLACE] while  ( pos < end )  {^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^if  (  c == '\r' && c == encapsulator && c == delim )  {^227^^^^^188^275^[REPLACE] if  ( c == '\n' || c == '\r' || c == encapsulator || c == delim )  {^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^}  if  (encapsulator  ==  '#' )  {^219^^^^^188^275^[REPLACE] } else if  ( c <= '#' )  {^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^while  ( pos  > offset )  {^225^^^^^219^244^[REPLACE] while  ( pos < end )  {^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[ADD]^^228^^^^^219^244^[ADD] quote = true;^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^if  ( c  ==  ' ' )  {^240^^^^^219^244^[REPLACE] if  ( c <= ' ' )  {^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^if  (encapsulator  >=  ' ' )  {^240^^^^^219^244^[REPLACE] if  ( c <= ' ' )  {^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REMOVE]^if  ( first )  {     quote = true; }^240^^^^^219^244^[REMOVE] ^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^quote = false;^223^^^^^188^275^[REPLACE] quote = true;^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^if  ( quote )  {^234^^^^^188^275^[REPLACE] if  ( !quote )  {^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REMOVE]^if  ( c == '\n' )  {     c = 'n'; }else     if  ( c == '\r' )  {         c = 'r';     }^234^^^^^188^275^[REMOVE] ^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^if  ( c  ==  ' ' )  {^240^^^^^188^275^[REPLACE] if  ( c <= ' ' )  {^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^quote = false;^241^^^^^188^275^[REPLACE] quote = true;^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^pos = end  |  2;^235^^^^^188^275^[REPLACE] pos = end - 1;^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[ADD]^^235^^^^^188^275^[ADD] pos = end - 1;^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^c =  null.charAt ( pos ) ;^236^^^^^188^275^[REPLACE] c = value.charAt ( pos ) ;^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^if  ( encapsulator  >  ' ' )  {^240^^^^^188^275^[REPLACE] if  ( c <= ' ' )  {^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[ADD]^quote = true;^240^241^242^^^188^275^[ADD] if  ( c <= ' ' )  { quote = true; }^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[ADD]^^223^^^^^188^275^[ADD] quote = true;^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[ADD]^^228^^^^^188^275^[ADD] quote = true;^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^pos =len - 0;^235^^^^^188^275^[REPLACE] pos = end - 1;^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^}  else {^219^^^^^188^275^[REPLACE] } else if  ( c <= '#' )  {^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^while  ( pos  >= offset )  {^225^^^^^219^244^[REPLACE] while  ( pos < end )  {^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^if  ( encapsulator == '\n' && c == '\r' && c == encapsulator && c == delim )  {^227^^^^^219^244^[REPLACE] if  ( c == '\n' || c == '\r' || c == encapsulator || c == delim )  {^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^if  ( c == '\n' && c == '\r' && c == encapsulator && quote )  {^227^^^^^219^244^[REPLACE] if  ( c == '\n' || c == '\r' || c == encapsulator || c == delim )  {^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^if  ( c  >=  ' ' )  {^240^^^^^219^244^[REPLACE] if  ( c <= ' ' )  {^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^if  ( c  != encapsulator )  {^240^^^^^219^244^[REPLACE] if  ( c <= ' ' )  {^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^pos = end  !=  1;^235^^^^^219^244^[REPLACE] pos = end - 1;^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[ADD]^^235^^^^^219^244^[ADD] pos = end - 1;^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^if  ( c == '\n' && c == '\r' && c == encapsulator && c == encapsulator )  {^227^^^^^188^275^[REPLACE] if  ( c == '\n' || c == '\r' || c == encapsulator || c == delim )  {^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[ADD]^pos = end - 1;c = value.charAt ( pos ) ;^234^235^236^^^188^275^[ADD] if  ( !quote )  { pos = end - 1; c = value.charAt ( pos ) ;^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^if  (encapsulator  ==  ' ' )  {^240^^^^^188^275^[REPLACE] if  ( c <= ' ' )  {^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^pos = end -len;^235^^^^^188^275^[REPLACE] pos = end - 1;^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[ADD]^^236^^^^^188^275^[ADD] c = value.charAt ( pos ) ;^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[ADD]^^241^^^^^188^275^[ADD] quote = true;^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^if  (encapsulator  <  ' ' )  {^240^^^^^188^275^[REPLACE] if  ( c <= ' ' )  {^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^quote = false;^217^^^^^188^275^[REPLACE] quote = true;^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^char c = value.charAt ( offset ) ;^209^^^^^188^275^[REPLACE] char c = value.charAt ( pos ) ;^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^if  ( quote )  {^247^^^^^188^275^[REPLACE] if  ( !quote )  {^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^out.append ( delim ) ;^254^^^^^188^275^[REPLACE] out.append ( encapsulator ) ;^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^while  (offset  >  end )  {^258^^^^^188^275^[REPLACE] while  ( pos < end )  {^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^if  ( c  &&  encapsulator )  {^260^^^^^188^275^[REPLACE] if  ( c == encapsulator )  {^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[ADD]^^260^261^^^264^188^275^[ADD] if  ( c == encapsulator )  {  out.append ( value, start, pos + 1 ) ;^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^start = pos + 1; ;^267^^^^^188^275^[REPLACE] start = pos;^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^char c = value.charAt ( offset ) ;^259^^^^^188^275^[REPLACE] char c = value.charAt ( pos ) ;^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^out.append ( value, start, end ) ;^273^^^^^188^275^[REPLACE] out.append ( value, start, pos ) ;^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[ADD]^out.append ( encapsulator ) ;^273^274^^^^188^275^[ADD] out.append ( value, start, pos ) ; out.append ( encapsulator ) ;^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^out.append ( delim ) ;^274^^^^^188^275^[REPLACE] out.append ( encapsulator ) ;^[METHOD] printAndEncapsulate [TYPE] void [PARAMETER] CharSequence value int offset int len [CLASS] CSVPrinter   [TYPE]  CharSequence value  [TYPE]  char c  delim  encapsulator  [TYPE]  CSVFormat format  [TYPE]  boolean false  first  newLine  quote  true  [TYPE]  int end  len  offset  pos  start  [TYPE]  Appendable out 
[REPLACE]^if  ( value != null )  {^284^^^^^283^296^[REPLACE] if  ( value == null )  {^[METHOD] print [TYPE] void [PARAMETER] String value boolean checkForEscape [CLASS] CSVPrinter   [TYPE]  CSVFormat format  [TYPE]  boolean checkForEscape  false  first  newLine  quote  true  [TYPE]  String value  [TYPE]  Appendable out 
[REMOVE]^if  ( first )  {     quote = true; }^284^^^^^283^296^[REMOVE] ^[METHOD] print [TYPE] void [PARAMETER] String value boolean checkForEscape [CLASS] CSVPrinter   [TYPE]  CSVFormat format  [TYPE]  boolean checkForEscape  false  first  newLine  quote  true  [TYPE]  String value  [TYPE]  Appendable out 
[REPLACE]^value  =  value ;^286^^^^^283^296^[REPLACE] value = "";^[METHOD] print [TYPE] void [PARAMETER] String value boolean checkForEscape [CLASS] CSVPrinter   [TYPE]  CSVFormat format  [TYPE]  boolean checkForEscape  false  first  newLine  quote  true  [TYPE]  String value  [TYPE]  Appendable out 
[REPLACE]^if  ( newLine )  {^289^^^^^283^296^[REPLACE] if  ( !checkForEscape )  {^[METHOD] print [TYPE] void [PARAMETER] String value boolean checkForEscape [CLASS] CSVPrinter   [TYPE]  CSVFormat format  [TYPE]  boolean checkForEscape  false  first  newLine  quote  true  [TYPE]  String value  [TYPE]  Appendable out 
[REPLACE]^print ( value, 0 , value.length (  )  ) ;^294^^^^^283^296^[REPLACE] print ( value, 0, value.length (  )  ) ;^[METHOD] print [TYPE] void [PARAMETER] String value boolean checkForEscape [CLASS] CSVPrinter   [TYPE]  CSVFormat format  [TYPE]  boolean checkForEscape  false  first  newLine  quote  true  [TYPE]  String value  [TYPE]  Appendable out 
[REPLACE]^char c = value.charAt ( pos ) ;^294^^^^^283^296^[REPLACE] print ( value, 0, value.length (  )  ) ;^[METHOD] print [TYPE] void [PARAMETER] String value boolean checkForEscape [CLASS] CSVPrinter   [TYPE]  CSVFormat format  [TYPE]  boolean checkForEscape  false  first  newLine  quote  true  [TYPE]  String value  [TYPE]  Appendable out 
[REPLACE]^out.append ( ' ' ) ;^291^^^^^283^296^[REPLACE] printSep (  ) ;^[METHOD] print [TYPE] void [PARAMETER] String value boolean checkForEscape [CLASS] CSVPrinter   [TYPE]  CSVFormat format  [TYPE]  boolean checkForEscape  false  first  newLine  quote  true  [TYPE]  String value  [TYPE]  Appendable out 
[REPLACE]^out .append ( null , null , null )  ;^292^^^^^283^296^[REPLACE] out.append ( value ) ;^[METHOD] print [TYPE] void [PARAMETER] String value boolean checkForEscape [CLASS] CSVPrinter   [TYPE]  CSVFormat format  [TYPE]  boolean checkForEscape  false  first  newLine  quote  true  [TYPE]  String value  [TYPE]  Appendable out 
[REPLACE]^print ( value, false ) ;^305^^^^^304^306^[REPLACE] print ( value, true ) ;^[METHOD] print [TYPE] void [PARAMETER] String value [CLASS] CSVPrinter   [TYPE]  CSVFormat format  [TYPE]  boolean checkForEscape  false  first  newLine  quote  true  [TYPE]  String value  [TYPE]  Appendable out 
