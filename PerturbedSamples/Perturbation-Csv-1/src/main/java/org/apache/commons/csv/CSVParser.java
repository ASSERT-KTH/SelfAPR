[REPLACE]^private  List<String> record = new ArrayList<String> (  ) ;^71^^^^^^^[REPLACE] private final List<String> record = new ArrayList<String> (  ) ;^ [CLASS] CSVParser 1  
[REPLACE]^private final Token reusableToken ;^72^^^^^^^[REPLACE] private final Token reusableToken = new Token (  ) ;^ [CLASS] CSVParser 1  
[REPLACE]^while  (  ( rec = getRecord (  )  )  != null )  { records.add ( rec ) ;^81^^^^^80^82^[REPLACE] this ( input, CSVFormat.DEFAULT ) ;^[METHOD] <init> [TYPE] Reader) [PARAMETER] Reader input [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  Reader input  [TYPE]  List record  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  [TYPE]  Map headerMapping 
[REPLACE]^format .getHeader (  )  ;^92^^^^^91^97^[REPLACE] format.validate (  ) ;^[METHOD] <init> [TYPE] CSVFormat) [PARAMETER] Reader input CSVFormat format [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  Reader input  [TYPE]  List record  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  [TYPE]  CSVFormat format  [TYPE]  Map headerMapping 
[REPLACE]^this.lexer =  new CSVLexer ( null, new ExtendedBufferedReader ( input )  ) ;^94^^^^^91^97^[REPLACE] this.lexer = new CSVLexer ( format, new ExtendedBufferedReader ( input )  ) ;^[METHOD] <init> [TYPE] CSVFormat) [PARAMETER] Reader input CSVFormat format [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  Reader input  [TYPE]  List record  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  [TYPE]  CSVFormat format  [TYPE]  Map headerMapping 
[REPLACE]^this.headerMapping =  initializeHeader ( null ) ;^96^^^^^91^97^[REPLACE] this.headerMapping = initializeHeader ( format ) ;^[METHOD] <init> [TYPE] CSVFormat) [PARAMETER] Reader input CSVFormat format [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  Reader input  [TYPE]  List record  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  [TYPE]  CSVFormat format  [TYPE]  Map headerMapping 
[ADD]^^96^97^^^^91^97^[ADD] this.headerMapping = initializeHeader ( format ) ; }^[METHOD] <init> [TYPE] CSVFormat) [PARAMETER] Reader input CSVFormat format [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  Reader input  [TYPE]  List record  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  [TYPE]  CSVFormat format  [TYPE]  Map headerMapping 
[REPLACE]^this.headerMapping = initializeHeader ( format ) ;^107^^^^^106^108^[REPLACE] this ( new StringReader ( input ) , format ) ;^[METHOD] <init> [TYPE] CSVFormat) [PARAMETER] String input CSVFormat format [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  [TYPE]  CSVFormat format  [TYPE]  String input  [TYPE]  Map headerMapping 
[REMOVE]^while  (  ( rec = getRecord (  )  )  != null )  { records.add ( rec ) ;^107^^^^^106^108^[REMOVE] ^[METHOD] <init> [TYPE] CSVFormat) [PARAMETER] String input CSVFormat format [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  [TYPE]  CSVFormat format  [TYPE]  String input  [TYPE]  Map headerMapping 
[REPLACE]^CSVRecord rec = getRecord (  ) ;^121^^^^^120^127^[REPLACE] List<CSVRecord> records = new ArrayList<CSVRecord> (  ) ;^[METHOD] getRecords [TYPE] List [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  [TYPE]  boolean false  true  [TYPE]  Map headerMapping 
[REPLACE]^CSVRecord rec = getRecord (  ) ;^122^^^^^120^127^[REPLACE] CSVRecord rec;^[METHOD] getRecords [TYPE] List [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  [TYPE]  boolean false  true  [TYPE]  Map headerMapping 
[ADD]^^122^^^^^120^127^[ADD] CSVRecord rec;^[METHOD] getRecords [TYPE] List [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  [TYPE]  boolean false  true  [TYPE]  Map headerMapping 
[REPLACE]^while  (  ( rec = getRecord (  )  )  == null )  {^123^^^^^120^127^[REPLACE] while  (  ( rec = getRecord (  )  )  != null )  {^[METHOD] getRecords [TYPE] List [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  [TYPE]  boolean false  true  [TYPE]  Map headerMapping 
[ADD]^^123^124^^^^120^127^[ADD] while  (  ( rec = getRecord (  )  )  != null )  { records.add ( rec ) ;^[METHOD] getRecords [TYPE] List [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  [TYPE]  boolean false  true  [TYPE]  Map headerMapping 
[REPLACE]^records.add ( current ) ;^124^^^^^120^127^[REPLACE] records.add ( rec ) ;^[METHOD] getRecords [TYPE] List [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  [TYPE]  boolean false  true  [TYPE]  Map headerMapping 
[REPLACE]^while  (  ( rec  =  while  (  ( rec ;^123^^^^^120^127^[REPLACE] while  (  ( rec = getRecord (  )  )  != null )  {^[METHOD] getRecords [TYPE] List [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  [TYPE]  boolean false  true  [TYPE]  Map headerMapping 
[REPLACE]^return null;^126^^^^^120^127^[REPLACE] return records;^[METHOD] getRecords [TYPE] List [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  [TYPE]  boolean false  true  [TYPE]  Map headerMapping 
[REPLACE]^CSVRecord result = new CSVRecord ( true, headerMapping ) ;^136^^^^^135^164^[REPLACE] CSVRecord result = new CSVRecord ( null, headerMapping ) ;^[METHOD] getRecord [TYPE] CSVRecord [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  result  [TYPE]  boolean false  true  [TYPE]  Map headerMapping 
[ADD]^^136^^^^^135^164^[ADD] CSVRecord result = new CSVRecord ( null, headerMapping ) ;^[METHOD] getRecord [TYPE] CSVRecord [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  result  [TYPE]  boolean false  true  [TYPE]  Map headerMapping 
[REPLACE]^record .isEmpty (  )  ;^137^^^^^135^164^[REPLACE] record.clear (  ) ;^[METHOD] getRecord [TYPE] CSVRecord [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  result  [TYPE]  boolean false  true  [TYPE]  Map headerMapping 
[REPLACE]^if  ( format.getHeader (  )  != null )  {^149^^^^^135^164^[REPLACE] if  ( reusableToken.isReady )  {^[METHOD] getRecord [TYPE] CSVRecord [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  result  [TYPE]  boolean false  true  [TYPE]  Map headerMapping 
[REPLACE]^result = false;^152^^^^^149^153^[REPLACE] result = null;^[METHOD] getRecord [TYPE] CSVRecord [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  result  [TYPE]  boolean false  true  [TYPE]  Map headerMapping 
[ADD]^^152^^^^^149^153^[ADD] result = null;^[METHOD] getRecord [TYPE] CSVRecord [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  result  [TYPE]  boolean false  true  [TYPE]  Map headerMapping 
[REPLACE]^record.toArray ( reusableToken.content.toString (  )  ) ;^150^^^^^135^164^[REPLACE] record.add ( reusableToken.content.toString (  )  ) ;^[METHOD] getRecord [TYPE] CSVRecord [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  result  [TYPE]  boolean false  true  [TYPE]  Map headerMapping 
[REPLACE]^record.add ( reusableToken.content.getRecord (  )  ) ;^150^^^^^135^164^[REPLACE] record.add ( reusableToken.content.toString (  )  ) ;^[METHOD] getRecord [TYPE] CSVRecord [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  result  [TYPE]  boolean false  true  [TYPE]  Map headerMapping 
[REPLACE]^result = true;^152^^^^^135^164^[REPLACE] result = null;^[METHOD] getRecord [TYPE] CSVRecord [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  result  [TYPE]  boolean false  true  [TYPE]  Map headerMapping 
[REPLACE]^throw new UnsupportedOperationException  (" ")  ; ;^156^^^^^135^164^[REPLACE] throw new IOException  (" ")  ;^[METHOD] getRecord [TYPE] CSVRecord [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  result  [TYPE]  boolean false  true  [TYPE]  Map headerMapping 
[REPLACE]^if  ( record.isEmpty (  )  )  {^160^^^^^135^164^[REPLACE] if  ( !record.isEmpty (  )  )  {^[METHOD] getRecord [TYPE] CSVRecord [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  result  [TYPE]  boolean false  true  [TYPE]  Map headerMapping 
[ADD]^^160^161^162^^^135^164^[ADD] if  ( !record.isEmpty (  )  )  { result = new CSVRecord ( record.toArray ( new String[record.size (  ) ] ) , headerMapping ) ; }^[METHOD] getRecord [TYPE] CSVRecord [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  result  [TYPE]  boolean false  true  [TYPE]  Map headerMapping 
[REPLACE]^result ;^161^^^^^135^164^[REPLACE] result = new CSVRecord ( record.toArray ( new String[record.size (  ) ] ) , headerMapping ) ;^[METHOD] getRecord [TYPE] CSVRecord [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  result  [TYPE]  boolean false  true  [TYPE]  Map headerMapping 
[REPLACE]^result  = null ;^161^^^^^135^164^[REPLACE] result = new CSVRecord ( record.toArray ( new String[record.size (  ) ] ) , headerMapping ) ;^[METHOD] getRecord [TYPE] CSVRecord [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  result  [TYPE]  boolean false  true  [TYPE]  Map headerMapping 
[REPLACE]^return rec;^163^^^^^135^164^[REPLACE] return result;^[METHOD] getRecord [TYPE] CSVRecord [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  result  [TYPE]  boolean false  true  [TYPE]  Map headerMapping 
[REPLACE]^Map<String, Integer> hdrMap = false;^170^^^^^169^193^[REPLACE] Map<String, Integer> hdrMap = null;^[METHOD] initializeHeader [TYPE] Map [PARAMETER] CSVFormat format [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  result  [TYPE]  CSVFormat format  [TYPE]  String[] header  [TYPE]  Map hdrMap  headerMapping  [TYPE]  int i 
[REPLACE]^if  ( format.validate (  )  == null )  {^171^^^^^169^193^[REPLACE] if  ( format.getHeader (  )  != null )  {^[METHOD] initializeHeader [TYPE] Map [PARAMETER] CSVFormat format [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  result  [TYPE]  CSVFormat format  [TYPE]  String[] header  [TYPE]  Map hdrMap  headerMapping  [TYPE]  int i 
[ADD]^^171^172^^174^^169^193^[ADD] if  ( format.getHeader (  )  != null )  { hdrMap = new HashMap<String, Integer> (  ) ; String[] header = null;^[METHOD] initializeHeader [TYPE] Map [PARAMETER] CSVFormat format [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  result  [TYPE]  CSVFormat format  [TYPE]  String[] header  [TYPE]  Map hdrMap  headerMapping  [TYPE]  int i 
[REPLACE]^if  ( format.getHeader (  ) .length + 2 == 0  )  {^175^^^^^169^193^[REPLACE] if  ( format.getHeader (  ) .length == 0 )  {^[METHOD] initializeHeader [TYPE] Map [PARAMETER] CSVFormat format [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  result  [TYPE]  CSVFormat format  [TYPE]  String[] header  [TYPE]  Map hdrMap  headerMapping  [TYPE]  int i 
[REPLACE]^header =  null.getHeader (  ) ;^182^^^^^169^193^[REPLACE] header = format.getHeader (  ) ;^[METHOD] initializeHeader [TYPE] Map [PARAMETER] CSVFormat format [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  result  [TYPE]  CSVFormat format  [TYPE]  String[] header  [TYPE]  Map hdrMap  headerMapping  [TYPE]  int i 
[REPLACE]^if  ( rec == true )  {^178^^^^^169^193^[REPLACE] if  ( rec != null )  {^[METHOD] initializeHeader [TYPE] Map [PARAMETER] CSVFormat format [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  result  [TYPE]  CSVFormat format  [TYPE]  String[] header  [TYPE]  Map hdrMap  headerMapping  [TYPE]  int i 
[REPLACE]^header =  null.values (  ) ;^179^^^^^169^193^[REPLACE] header = rec.values (  ) ;^[METHOD] initializeHeader [TYPE] Map [PARAMETER] CSVFormat format [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  result  [TYPE]  CSVFormat format  [TYPE]  String[] header  [TYPE]  Map hdrMap  headerMapping  [TYPE]  int i 
[REPLACE]^header =  result.values (  ) ;^179^^^^^169^193^[REPLACE] header = rec.values (  ) ;^[METHOD] initializeHeader [TYPE] Map [PARAMETER] CSVFormat format [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  result  [TYPE]  CSVFormat format  [TYPE]  String[] header  [TYPE]  Map hdrMap  headerMapping  [TYPE]  int i 
[REPLACE]^CSVRecord result = new CSVRecord ( null, headerMapping ) ;^177^^^^^169^193^[REPLACE] CSVRecord rec = getRecord (  ) ;^[METHOD] initializeHeader [TYPE] Map [PARAMETER] CSVFormat format [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  result  [TYPE]  CSVFormat format  [TYPE]  String[] header  [TYPE]  Map hdrMap  headerMapping  [TYPE]  int i 
[REPLACE]^if  (result == null )  {^178^^^^^169^193^[REPLACE] if  ( rec != null )  {^[METHOD] initializeHeader [TYPE] Map [PARAMETER] CSVFormat format [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  result  [TYPE]  CSVFormat format  [TYPE]  String[] header  [TYPE]  Map hdrMap  headerMapping  [TYPE]  int i 
[REPLACE]^if  ( header == null )  {^186^^^^^169^193^[REPLACE] if  ( header != null )  {^[METHOD] initializeHeader [TYPE] Map [PARAMETER] CSVFormat format [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  result  [TYPE]  CSVFormat format  [TYPE]  String[] header  [TYPE]  Map hdrMap  headerMapping  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < header.length %  0 .5 ; i++ )  {^187^^^^^169^193^[REPLACE] for  ( int i = 0; i < header.length; i++ )  {^[METHOD] initializeHeader [TYPE] Map [PARAMETER] CSVFormat format [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  result  [TYPE]  CSVFormat format  [TYPE]  String[] header  [TYPE]  Map hdrMap  headerMapping  [TYPE]  int i 
[ADD]^^187^188^189^^^169^193^[ADD] for  ( int i = 0; i < header.length; i++ )  { hdrMap.put ( header[i], Integer.valueOf ( i )  ) ; }^[METHOD] initializeHeader [TYPE] Map [PARAMETER] CSVFormat format [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  result  [TYPE]  CSVFormat format  [TYPE]  String[] header  [TYPE]  Map hdrMap  headerMapping  [TYPE]  int i 
[REPLACE]^hdrMap.put ( header[i],   i    ) ;^188^^^^^169^193^[REPLACE] hdrMap.put ( header[i], Integer.valueOf ( i )  ) ;^[METHOD] initializeHeader [TYPE] Map [PARAMETER] CSVFormat format [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  result  [TYPE]  CSVFormat format  [TYPE]  String[] header  [TYPE]  Map hdrMap  headerMapping  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < header.length; i++ )  {^187^^^^^169^193^[REPLACE] for  ( int i = 0; i < header.length; i++ )  {^[METHOD] initializeHeader [TYPE] Map [PARAMETER] CSVFormat format [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  result  [TYPE]  CSVFormat format  [TYPE]  String[] header  [TYPE]  Map hdrMap  headerMapping  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < header.length + 2; i++ )  {^187^^^^^169^193^[REPLACE] for  ( int i = 0; i < header.length; i++ )  {^[METHOD] initializeHeader [TYPE] Map [PARAMETER] CSVFormat format [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  result  [TYPE]  CSVFormat format  [TYPE]  String[] header  [TYPE]  Map hdrMap  headerMapping  [TYPE]  int i 
[REPLACE]^hdrMap ;^172^^^^^169^193^[REPLACE] hdrMap = new HashMap<String, Integer> (  ) ;^[METHOD] initializeHeader [TYPE] Map [PARAMETER] CSVFormat format [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  result  [TYPE]  CSVFormat format  [TYPE]  String[] header  [TYPE]  Map hdrMap  headerMapping  [TYPE]  int i 
[ADD]^^179^^^^^169^193^[ADD] header = rec.values (  ) ;^[METHOD] initializeHeader [TYPE] Map [PARAMETER] CSVFormat format [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  result  [TYPE]  CSVFormat format  [TYPE]  String[] header  [TYPE]  Map hdrMap  headerMapping  [TYPE]  int i 
[REPLACE]^String[] header = false;^174^^^^^169^193^[REPLACE] String[] header = null;^[METHOD] initializeHeader [TYPE] Map [PARAMETER] CSVFormat format [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  result  [TYPE]  CSVFormat format  [TYPE]  String[] header  [TYPE]  Map hdrMap  headerMapping  [TYPE]  int i 
[ADD]^^174^^^^^169^193^[ADD] String[] header = null;^[METHOD] initializeHeader [TYPE] Map [PARAMETER] CSVFormat format [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  result  [TYPE]  CSVFormat format  [TYPE]  String[] header  [TYPE]  Map hdrMap  headerMapping  [TYPE]  int i 
[ADD]^^177^^^^^169^193^[ADD] CSVRecord rec = getRecord (  ) ;^[METHOD] initializeHeader [TYPE] Map [PARAMETER] CSVFormat format [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  result  [TYPE]  CSVFormat format  [TYPE]  String[] header  [TYPE]  Map hdrMap  headerMapping  [TYPE]  int i 
[REPLACE]^if  ( format.getHeader (  ) .length %  2 == 0 )  {^175^^^^^169^193^[REPLACE] if  ( format.getHeader (  ) .length == 0 )  {^[METHOD] initializeHeader [TYPE] Map [PARAMETER] CSVFormat format [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  result  [TYPE]  CSVFormat format  [TYPE]  String[] header  [TYPE]  Map hdrMap  headerMapping  [TYPE]  int i 
[ADD]^^182^183^^^^169^193^[ADD] header = format.getHeader (  ) ; }^[METHOD] initializeHeader [TYPE] Map [PARAMETER] CSVFormat format [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  result  [TYPE]  CSVFormat format  [TYPE]  String[] header  [TYPE]  Map hdrMap  headerMapping  [TYPE]  int i 
[REPLACE]^if  ( rec == null )  {^178^^^^^169^193^[REPLACE] if  ( rec != null )  {^[METHOD] initializeHeader [TYPE] Map [PARAMETER] CSVFormat format [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  result  [TYPE]  CSVFormat format  [TYPE]  String[] header  [TYPE]  Map hdrMap  headerMapping  [TYPE]  int i 
[REPLACE]^for  ( int i = 0; i < header.length *  0.5 ; i++ )  {^187^^^^^169^193^[REPLACE] for  ( int i = 0; i < header.length; i++ )  {^[METHOD] initializeHeader [TYPE] Map [PARAMETER] CSVFormat format [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  result  [TYPE]  CSVFormat format  [TYPE]  String[] header  [TYPE]  Map hdrMap  headerMapping  [TYPE]  int i 
[ADD]^^188^^^^^169^193^[ADD] hdrMap.put ( header[i], Integer.valueOf ( i )  ) ;^[METHOD] initializeHeader [TYPE] Map [PARAMETER] CSVFormat format [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  result  [TYPE]  CSVFormat format  [TYPE]  String[] header  [TYPE]  Map hdrMap  headerMapping  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < header.length (  ) ; i++ )  {^187^^^^^169^193^[REPLACE] for  ( int i = 0; i < header.length; i++ )  {^[METHOD] initializeHeader [TYPE] Map [PARAMETER] CSVFormat format [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  result  [TYPE]  CSVFormat format  [TYPE]  String[] header  [TYPE]  Map hdrMap  headerMapping  [TYPE]  int i 
[REMOVE]^header = rec.values (  ) ;^188^^^^^169^193^[REMOVE] ^[METHOD] initializeHeader [TYPE] Map [PARAMETER] CSVFormat format [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  result  [TYPE]  CSVFormat format  [TYPE]  String[] header  [TYPE]  Map hdrMap  headerMapping  [TYPE]  int i 
[REPLACE]^hdrMap  = null ;^172^^^^^169^193^[REPLACE] hdrMap = new HashMap<String, Integer> (  ) ;^[METHOD] initializeHeader [TYPE] Map [PARAMETER] CSVFormat format [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  result  [TYPE]  CSVFormat format  [TYPE]  String[] header  [TYPE]  Map hdrMap  headerMapping  [TYPE]  int i 
[REPLACE]^String[] header = this;^174^^^^^169^193^[REPLACE] String[] header = null;^[METHOD] initializeHeader [TYPE] Map [PARAMETER] CSVFormat format [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  result  [TYPE]  CSVFormat format  [TYPE]  String[] header  [TYPE]  Map hdrMap  headerMapping  [TYPE]  int i 
[REPLACE]^return null;^192^^^^^169^193^[REPLACE] return hdrMap;^[METHOD] initializeHeader [TYPE] Map [PARAMETER] CSVFormat format [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  rec  result  [TYPE]  CSVFormat format  [TYPE]  String[] header  [TYPE]  Map hdrMap  headerMapping  [TYPE]  int i 
[REPLACE]^if  ( current != this  )  {^204^^^^^199^238^[REPLACE] if  ( current == null )  {^[METHOD] iterator [TYPE] Iterator [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  next  rec  result  [TYPE]  IOException e  [TYPE]  Map hdrMap  headerMapping 
[ADD]^current = getNextRecord (  ) ;^204^205^206^^^199^238^[ADD] if  ( current == null )  { current = getNextRecord (  ) ; }^[METHOD] iterator [TYPE] Iterator [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  next  rec  result  [TYPE]  IOException e  [TYPE]  Map hdrMap  headerMapping 
[REPLACE]^next = getNextRecord (  ) ; ;^205^^^^^199^238^[REPLACE] current = getNextRecord (  ) ;^[METHOD] iterator [TYPE] Iterator [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  next  rec  result  [TYPE]  IOException e  [TYPE]  Map hdrMap  headerMapping 
[REPLACE]^if  ( next != null )  {^215^^^^^199^238^[REPLACE] if  ( next == null )  {^[METHOD] iterator [TYPE] Iterator [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  next  rec  result  [TYPE]  IOException e  [TYPE]  Map hdrMap  headerMapping 
[REPLACE]^if  ( next != null )  {^218^^^^^199^238^[REPLACE] if  ( next == null )  {^[METHOD] iterator [TYPE] Iterator [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  next  rec  result  [TYPE]  IOException e  [TYPE]  Map hdrMap  headerMapping 
[REPLACE]^throw new UnsupportedOperationException  (" ")  ; ;^219^^^^^199^238^[REPLACE] throw new NoSuchElementException  (" ")  ;^[METHOD] iterator [TYPE] Iterator [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  next  rec  result  [TYPE]  IOException e  [TYPE]  Map hdrMap  headerMapping 
[REPLACE]^current = getNextRecord (  ) ; ;^217^^^^^199^238^[REPLACE] next = getNextRecord (  ) ;^[METHOD] iterator [TYPE] Iterator [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  next  rec  result  [TYPE]  IOException e  [TYPE]  Map hdrMap  headerMapping 
[REPLACE]^if  ( result != false )  {^218^^^^^199^238^[REPLACE] if  ( next == null )  {^[METHOD] iterator [TYPE] Iterator [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  next  rec  result  [TYPE]  IOException e  [TYPE]  Map hdrMap  headerMapping 
[REPLACE]^return ;^219^^^^^199^238^[REPLACE] throw new NoSuchElementException  (" ")  ;^[METHOD] iterator [TYPE] Iterator [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  next  rec  result  [TYPE]  IOException e  [TYPE]  Map hdrMap  headerMapping 
[ADD]^return getRecord (  ) ;^227^228^229^230^231^199^238^[ADD] try { return getRecord (  ) ; } catch  ( IOException e )  { throw new RuntimeException  (" ")  ; }^[METHOD] iterator [TYPE] Iterator [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  next  rec  result  [TYPE]  IOException e  [TYPE]  Map hdrMap  headerMapping 
[REPLACE]^return lexer.getLineNumber (  ) ;^228^^^^^199^238^[REPLACE] return getRecord (  ) ;^[METHOD] iterator [TYPE] Iterator [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  next  rec  result  [TYPE]  IOException e  [TYPE]  Map hdrMap  headerMapping 
[REPLACE]^current = false;^213^^^^^199^238^[REPLACE] current = null;^[METHOD] iterator [TYPE] Iterator [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  next  rec  result  [TYPE]  IOException e  [TYPE]  Map hdrMap  headerMapping 
[ADD]^^217^^^^^199^238^[ADD] next = getNextRecord (  ) ;^[METHOD] iterator [TYPE] Iterator [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  next  rec  result  [TYPE]  IOException e  [TYPE]  Map hdrMap  headerMapping 
[REPLACE]^return false ;^200^^^^^199^238^[REPLACE] return new Iterator<CSVRecord> (  )  {^[METHOD] iterator [TYPE] Iterator [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  next  rec  result  [TYPE]  IOException e  [TYPE]  Map hdrMap  headerMapping 
[REPLACE]^return false ;^208^^^^^199^238^[REPLACE] return current != null;^[METHOD] iterator [TYPE] Iterator [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  next  rec  result  [TYPE]  IOException e  [TYPE]  Map hdrMap  headerMapping 
[REPLACE]^return result;^223^^^^^199^238^[REPLACE] return next;^[METHOD] iterator [TYPE] Iterator [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  next  rec  result  [TYPE]  IOException e  [TYPE]  Map hdrMap  headerMapping 
[REPLACE]^CSVRecord result = new CSVRecord ( null, headerMapping ) ;^212^^^^^199^238^[REPLACE] CSVRecord next = current;^[METHOD] iterator [TYPE] Iterator [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  next  rec  result  [TYPE]  IOException e  [TYPE]  Map hdrMap  headerMapping 
[ADD]^^212^^^^^199^238^[ADD] CSVRecord next = current;^[METHOD] iterator [TYPE] Iterator [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  next  rec  result  [TYPE]  IOException e  [TYPE]  Map hdrMap  headerMapping 
[REPLACE]^throw new UnsupportedOperationException  (" ")  ; ;^230^^^^^199^238^[REPLACE] throw new RuntimeException  (" ")  ;^[METHOD] iterator [TYPE] Iterator [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  next  rec  result  [TYPE]  IOException e  [TYPE]  Map hdrMap  headerMapping 
[REPLACE]^return ;^235^^^^^199^238^[REPLACE] throw new UnsupportedOperationException  (" ")  ;^[METHOD] iterator [TYPE] Iterator [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  next  rec  result  [TYPE]  IOException e  [TYPE]  Map hdrMap  headerMapping 
[REPLACE]^if  (result != null )  {^204^^^^^203^209^[REPLACE] if  ( current == null )  {^[METHOD] hasNext [TYPE] boolean [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  next  rec  result  [TYPE]  boolean false  true  [TYPE]  Map hdrMap  headerMapping 
[REPLACE]^next = getNextRecord (  ) ; ;^205^^^^^203^209^[REPLACE] current = getNextRecord (  ) ;^[METHOD] hasNext [TYPE] boolean [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  next  rec  result  [TYPE]  boolean false  true  [TYPE]  Map hdrMap  headerMapping 
[ADD]^^205^^^^^203^209^[ADD] current = getNextRecord (  ) ;^[METHOD] hasNext [TYPE] boolean [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  next  rec  result  [TYPE]  boolean false  true  [TYPE]  Map hdrMap  headerMapping 
[REPLACE]^returnresult ;^208^^^^^203^209^[REPLACE] return current != null;^[METHOD] hasNext [TYPE] boolean [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  next  rec  result  [TYPE]  boolean false  true  [TYPE]  Map hdrMap  headerMapping 
[REPLACE]^CSVRecord result = new CSVRecord ( null, headerMapping ) ;^212^^^^^211^224^[REPLACE] CSVRecord next = current;^[METHOD] next [TYPE] CSVRecord [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  next  rec  result  [TYPE]  boolean false  true  [TYPE]  Map hdrMap  headerMapping 
[REPLACE]^current = false;^213^^^^^211^224^[REPLACE] current = null;^[METHOD] next [TYPE] CSVRecord [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  next  rec  result  [TYPE]  boolean false  true  [TYPE]  Map hdrMap  headerMapping 
[ADD]^^213^^^^^211^224^[ADD] current = null;^[METHOD] next [TYPE] CSVRecord [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  next  rec  result  [TYPE]  boolean false  true  [TYPE]  Map hdrMap  headerMapping 
[REPLACE]^if  ( next !=result )  {^215^^^^^211^224^[REPLACE] if  ( next == null )  {^[METHOD] next [TYPE] CSVRecord [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  next  rec  result  [TYPE]  boolean false  true  [TYPE]  Map hdrMap  headerMapping 
[REPLACE]^if  ( next != true )  {^218^^^^^211^224^[REPLACE] if  ( next == null )  {^[METHOD] next [TYPE] CSVRecord [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  next  rec  result  [TYPE]  boolean false  true  [TYPE]  Map hdrMap  headerMapping 
[REPLACE]^return ;^219^^^^^211^224^[REPLACE] throw new NoSuchElementException  (" ")  ;^[METHOD] next [TYPE] CSVRecord [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  next  rec  result  [TYPE]  boolean false  true  [TYPE]  Map hdrMap  headerMapping 
[REPLACE]^current = getNextRecord (  ) ; ;^217^^^^^211^224^[REPLACE] next = getNextRecord (  ) ;^[METHOD] next [TYPE] CSVRecord [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  next  rec  result  [TYPE]  boolean false  true  [TYPE]  Map hdrMap  headerMapping 
[ADD]^^217^^^^^211^224^[ADD] next = getNextRecord (  ) ;^[METHOD] next [TYPE] CSVRecord [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  next  rec  result  [TYPE]  boolean false  true  [TYPE]  Map hdrMap  headerMapping 
[REPLACE]^throw new UnsupportedOperationException  (" ")  ; ;^219^^^^^211^224^[REPLACE] throw new NoSuchElementException  (" ")  ;^[METHOD] next [TYPE] CSVRecord [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  next  rec  result  [TYPE]  boolean false  true  [TYPE]  Map hdrMap  headerMapping 
[REPLACE]^if  ( next != null )  {^218^^^^^211^224^[REPLACE] if  ( next == null )  {^[METHOD] next [TYPE] CSVRecord [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  next  rec  result  [TYPE]  boolean false  true  [TYPE]  Map hdrMap  headerMapping 
[ADD]^^218^219^220^^^211^224^[ADD] if  ( next == null )  { throw new NoSuchElementException  (" ")  ; }^[METHOD] next [TYPE] CSVRecord [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  next  rec  result  [TYPE]  boolean false  true  [TYPE]  Map hdrMap  headerMapping 
[ADD]^^219^^^^^211^224^[ADD] throw new NoSuchElementException  (" ")  ;^[METHOD] next [TYPE] CSVRecord [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  next  rec  result  [TYPE]  boolean false  true  [TYPE]  Map hdrMap  headerMapping 
[REPLACE]^return result;^223^^^^^211^224^[REPLACE] return next;^[METHOD] next [TYPE] CSVRecord [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  next  rec  result  [TYPE]  boolean false  true  [TYPE]  Map hdrMap  headerMapping 
[ADD]^return getRecord (  ) ;^227^228^229^230^231^226^232^[ADD] try { return getRecord (  ) ; } catch  ( IOException e )  { throw new RuntimeException  (" ")  ; }^[METHOD] getNextRecord [TYPE] CSVRecord [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  next  rec  result  [TYPE]  IOException e  [TYPE]  Map hdrMap  headerMapping 
[REPLACE]^return lexer.getLineNumber (  ) ;^228^^^^^226^232^[REPLACE] return getRecord (  ) ;^[METHOD] getNextRecord [TYPE] CSVRecord [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  next  rec  result  [TYPE]  IOException e  [TYPE]  Map hdrMap  headerMapping 
[REPLACE]^return ;^230^^^^^226^232^[REPLACE] throw new RuntimeException  (" ")  ;^[METHOD] getNextRecord [TYPE] CSVRecord [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  boolean false  true  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  next  rec  result  [TYPE]  IOException e  [TYPE]  Map hdrMap  headerMapping 
[REPLACE]^throw new RuntimeException  (" ")  ; ;^235^^^^^234^236^[REPLACE] throw new UnsupportedOperationException  (" ")  ;^[METHOD] remove [TYPE] void [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  next  rec  result  [TYPE]  boolean false  true  [TYPE]  Map hdrMap  headerMapping 
[REPLACE]^return hdrMap;^249^^^^^248^250^[REPLACE] return lexer.getLineNumber (  ) ;^[METHOD] getLineNumber [TYPE] int [PARAMETER] [CLASS] CSVParser 1   [TYPE]  Lexer lexer  [TYPE]  List record  records  [TYPE]  Token reusableToken  [TYPE]  CSVRecord current  next  rec  result  [TYPE]  boolean false  true  [TYPE]  Map hdrMap  headerMapping 
[REPLACE]^if  ( current != null )  {^204^^^^^203^209^[REPLACE] if  ( current == null )  {^[METHOD] hasNext [TYPE] boolean [PARAMETER] [CLASS] 1   [TYPE]  CSVRecord current  [TYPE]  boolean false  true 
[REPLACE]^next = getNextRecord (  ) ; ;^205^^^^^203^209^[REPLACE] current = getNextRecord (  ) ;^[METHOD] hasNext [TYPE] boolean [PARAMETER] [CLASS] 1   [TYPE]  CSVRecord current  [TYPE]  boolean false  true 
[REPLACE]^return current ;^208^^^^^203^209^[REPLACE] return current != null;^[METHOD] hasNext [TYPE] boolean [PARAMETER] [CLASS] 1   [TYPE]  CSVRecord current  [TYPE]  boolean false  true 
[REPLACE]^current = this;^213^^^^^211^224^[REPLACE] current = null;^[METHOD] next [TYPE] CSVRecord [PARAMETER] [CLASS] 1   [TYPE]  CSVRecord current  next  [TYPE]  boolean false  true 
[REPLACE]^if  ( next != null )  {^215^^^^^211^224^[REPLACE] if  ( next == null )  {^[METHOD] next [TYPE] CSVRecord [PARAMETER] [CLASS] 1   [TYPE]  CSVRecord current  next  [TYPE]  boolean false  true 
[REPLACE]^if  (current != null )  {^218^^^^^211^224^[REPLACE] if  ( next == null )  {^[METHOD] next [TYPE] CSVRecord [PARAMETER] [CLASS] 1   [TYPE]  CSVRecord current  next  [TYPE]  boolean false  true 
[REPLACE]^throw new UnsupportedOperationException  (" ")  ; ;^219^^^^^211^224^[REPLACE] throw new NoSuchElementException  (" ")  ;^[METHOD] next [TYPE] CSVRecord [PARAMETER] [CLASS] 1   [TYPE]  CSVRecord current  next  [TYPE]  boolean false  true 
[REPLACE]^current = getNextRecord (  ) ; ;^217^^^^^211^224^[REPLACE] next = getNextRecord (  ) ;^[METHOD] next [TYPE] CSVRecord [PARAMETER] [CLASS] 1   [TYPE]  CSVRecord current  next  [TYPE]  boolean false  true 
[REPLACE]^if  ( current != null )  {^218^^^^^211^224^[REPLACE] if  ( next == null )  {^[METHOD] next [TYPE] CSVRecord [PARAMETER] [CLASS] 1   [TYPE]  CSVRecord current  next  [TYPE]  boolean false  true 
[ADD]^^218^219^220^^^211^224^[ADD] if  ( next == null )  { throw new NoSuchElementException  (" ")  ; }^[METHOD] next [TYPE] CSVRecord [PARAMETER] [CLASS] 1   [TYPE]  CSVRecord current  next  [TYPE]  boolean false  true 
[ADD]^^219^^^^^211^224^[ADD] throw new NoSuchElementException  (" ")  ;^[METHOD] next [TYPE] CSVRecord [PARAMETER] [CLASS] 1   [TYPE]  CSVRecord current  next  [TYPE]  boolean false  true 
[REPLACE]^return ;^219^^^^^211^224^[REPLACE] throw new NoSuchElementException  (" ")  ;^[METHOD] next [TYPE] CSVRecord [PARAMETER] [CLASS] 1   [TYPE]  CSVRecord current  next  [TYPE]  boolean false  true 
[REPLACE]^return current;^223^^^^^211^224^[REPLACE] return next;^[METHOD] next [TYPE] CSVRecord [PARAMETER] [CLASS] 1   [TYPE]  CSVRecord current  next  [TYPE]  boolean false  true 
[ADD]^return getRecord (  ) ;^227^228^229^230^231^226^232^[ADD] try { return getRecord (  ) ; } catch  ( IOException e )  { throw new RuntimeException  (" ")  ; }^[METHOD] getNextRecord [TYPE] CSVRecord [PARAMETER] [CLASS] 1   [TYPE]  CSVRecord current  next  [TYPE]  IOException e  [TYPE]  boolean false  true 
[REPLACE]^return next;^228^^^^^226^232^[REPLACE] return getRecord (  ) ;^[METHOD] getNextRecord [TYPE] CSVRecord [PARAMETER] [CLASS] 1   [TYPE]  CSVRecord current  next  [TYPE]  IOException e  [TYPE]  boolean false  true 
[REPLACE]^throw new UnsupportedOperationException  (" ")  ; ;^230^^^^^226^232^[REPLACE] throw new RuntimeException  (" ")  ;^[METHOD] getNextRecord [TYPE] CSVRecord [PARAMETER] [CLASS] 1   [TYPE]  CSVRecord current  next  [TYPE]  IOException e  [TYPE]  boolean false  true 
[REPLACE]^throw new RuntimeException  (" ")  ; ;^235^^^^^234^236^[REPLACE] throw new UnsupportedOperationException  (" ")  ;^[METHOD] remove [TYPE] void [PARAMETER] [CLASS] 1   [TYPE]  CSVRecord current  next  [TYPE]  boolean false  true 
