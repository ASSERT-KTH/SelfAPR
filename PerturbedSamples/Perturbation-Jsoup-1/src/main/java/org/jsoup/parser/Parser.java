[REPLACE]^private static   int  SQ = "'";^13^^^^^^^[REPLACE] private static final String SQ = "'";^ [CLASS] Parser  
[REPLACE]^private static final  double  DQ = "\"";^14^^^^^^^[REPLACE] private static final String DQ = "\"";^ [CLASS] Parser  
[REPLACE]^private static final Tag htmlTag  = null ;^16^^^^^^^[REPLACE] private static final Tag htmlTag = Tag.valueOf ( "html" ) ;^ [CLASS] Parser  
[REPLACE]^private static  Tag headTag = Tag.valueOf ( "head" ) ;^17^^^^^^^[REPLACE] private static final Tag headTag = Tag.valueOf ( "head" ) ;^ [CLASS] Parser  
[REPLACE]^private static final Tag bodyTag ;^18^^^^^^^[REPLACE] private static final Tag bodyTag = Tag.valueOf ( "body" ) ;^ [CLASS] Parser  
[REPLACE]^private static final Tag titleTag ;^19^^^^^^^[REPLACE] private static final Tag titleTag = Tag.valueOf ( "title" ) ;^ [CLASS] Parser  
[REPLACE]^private static final Tag textareaTag  = null ;^20^^^^^^^[REPLACE] private static final Tag textareaTag = Tag.valueOf ( "textarea" ) ;^ [CLASS] Parser  
[REPLACE]^private  LinkedList<Element> stack;^22^^^^^^^[REPLACE] private final LinkedList<Element> stack;^ [CLASS] Parser  
[REPLACE]^private  TokenQueue tq;^23^^^^^^^[REPLACE] private final TokenQueue tq;^ [CLASS] Parser  
[REPLACE]^html   ;^28^^^^^27^42^[REPLACE] Validate.notNull ( html ) ;^[METHOD] <init> [TYPE] String,boolean) [PARAMETER] String html String baseUri boolean isBodyFragment [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  isBodyFragment  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^Validate.notNull ( SQ ) ;^29^^^^^27^42^[REPLACE] Validate.notNull ( baseUri ) ;^[METHOD] <init> [TYPE] String,boolean) [PARAMETER] String html String baseUri boolean isBodyFragment [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  isBodyFragment  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^stack  = null ;^31^^^^^27^42^[REPLACE] stack = new LinkedList<Element> (  ) ;^[METHOD] <init> [TYPE] String,boolean) [PARAMETER] String html String baseUri boolean isBodyFragment [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  isBodyFragment  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^tq =  new TokenQueue ( null ) ;^32^^^^^27^42^[REPLACE] tq = new TokenQueue ( html ) ;^[METHOD] <init> [TYPE] String,boolean) [PARAMETER] String html String baseUri boolean isBodyFragment [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  isBodyFragment  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^this.baseUri = baseUri;^32^33^^^^27^42^[ADD] tq = new TokenQueue ( html ) ; this.baseUri = baseUri;^[METHOD] <init> [TYPE] String,boolean) [PARAMETER] String html String baseUri boolean isBodyFragment [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  isBodyFragment  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^this.baseUri =  SQ;^33^^^^^27^42^[REPLACE] this.baseUri = baseUri;^[METHOD] <init> [TYPE] String,boolean) [PARAMETER] String html String baseUri boolean isBodyFragment [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  isBodyFragment  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^if  ( true )  {^35^^^^^27^42^[REPLACE] if  ( isBodyFragment )  {^[METHOD] <init> [TYPE] String,boolean) [PARAMETER] String html String baseUri boolean isBodyFragment [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  isBodyFragment  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^doc =  new Document ( SQ ) ;^39^^^^^27^42^[REPLACE] doc = new Document ( baseUri ) ;^[METHOD] <init> [TYPE] String,boolean) [PARAMETER] String html String baseUri boolean isBodyFragment [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  isBodyFragment  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^stack.add ( doc ) ;^39^40^^^^27^42^[ADD] doc = new Document ( baseUri ) ; stack.add ( doc ) ;^[METHOD] <init> [TYPE] String,boolean) [PARAMETER] String html String baseUri boolean isBodyFragment [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  isBodyFragment  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^doc =  Document.createShell ( SQ ) ;^36^^^^^27^42^[REPLACE] doc = Document.createShell ( baseUri ) ;^[METHOD] <init> [TYPE] String,boolean) [PARAMETER] String html String baseUri boolean isBodyFragment [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  isBodyFragment  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^Parser parser = new Parser ( html, baseUri, true ) ;^51^^^^^50^53^[REPLACE] Parser parser = new Parser ( html, baseUri, false ) ;^[METHOD] parse [TYPE] Document [PARAMETER] String html String baseUri [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  String DQ  SQ  baseUri  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack  [TYPE]  Parser parser 
[REPLACE]^return.lastr.parse (  ) ;^52^^^^^50^53^[REPLACE] return parser.parse (  ) ;^[METHOD] parse [TYPE] Document [PARAMETER] String html String baseUri [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  String DQ  SQ  baseUri  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack  [TYPE]  Parser parser 
[REPLACE]^Parser parser = new Parser ( bodyHtml, baseUri, false ) ;^62^^^^^61^64^[REPLACE] Parser parser = new Parser ( bodyHtml, baseUri, true ) ;^[METHOD] parseBodyFragment [TYPE] Document [PARAMETER] String bodyHtml String baseUri [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  String DQ  SQ  baseUri  bodyHtml  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack  [TYPE]  Parser parser 
[REPLACE]^return parser .parse ( SQ , DQ )  ;^63^^^^^61^64^[REPLACE] return parser.parse (  ) ;^[METHOD] parseBodyFragment [TYPE] Document [PARAMETER] String bodyHtml String baseUri [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  String DQ  SQ  baseUri  bodyHtml  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack  [TYPE]  Parser parser 
[REPLACE]^while  ( tq.isEmpty (  )  )  {^67^^^^^66^83^[REPLACE] while  ( !tq.isEmpty (  )  )  {^[METHOD] parse [TYPE] Document [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^if  ( tq.matches ( "<--" )  )  {^68^^^^^66^83^[REPLACE] if  ( tq.matches ( "<!--" )  )  {^[METHOD] parse [TYPE] Document [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REMOVE]^if  ( tq.matches ( "<![CDATA[" )  )  {     parseCdata (  ) ; }else     if  (  ( tq.matches ( "<?" )  )  ||  ( tq.matches ( "<!" )  )  )  {         parseXmlDecl (  ) ;     }else         if  ( tq.matches ( "</" )  )  {             parseEndTag (  ) ;         }else             if  ( tq.matches ( "<" )  )  {                 parseStartTag (  ) ;             }else {                 parseTextNode (  ) ;             }^68^^^^^66^83^[REMOVE] ^[METHOD] parse [TYPE] Document [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^}  else {^70^^^^^66^83^[REPLACE] } else if  ( tq.matches ( "<![CDATA[" )  )  {^[METHOD] parse [TYPE] Document [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^}  if  ( tq.matches ( "<?" )  ) {^72^^^^^66^83^[REPLACE] } else if  ( tq.matches ( "<?" )  || tq.matches ( "<!" )  )  {^[METHOD] parse [TYPE] Document [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^} else if  ( tq.matchChomp ( DQ )  )  {^74^^^^^66^83^[REPLACE] } else if  ( tq.matches ( "</" )  )  {^[METHOD] parse [TYPE] Document [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^}  else {^76^^^^^66^83^[REPLACE] } else if  ( tq.matches ( "<" )  )  {^[METHOD] parse [TYPE] Document [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^Validate.notNull ( html ) ;^79^^^^^66^83^[REPLACE] parseTextNode (  ) ;^[METHOD] parse [TYPE] Document [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^Validate.notNull ( html ) ;^77^^^^^66^83^[REPLACE] parseStartTag (  ) ;^[METHOD] parse [TYPE] Document [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^Validate.notNull ( html ) ;^75^^^^^66^83^[REPLACE] parseEndTag (  ) ;^[METHOD] parse [TYPE] Document [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^}  if  ( tq.matches ( "<" )  )  {^76^^^^^66^83^[REPLACE] } else if  ( tq.matches ( "<" )  )  {^[METHOD] parse [TYPE] Document [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^}   parseTextNode (  ) ;^76^77^78^79^80^66^83^[ADD] else if  ( tq.matches ( "<" )  )  { parseStartTag (  ) ; } else { parseTextNode (  ) ; }^[METHOD] parse [TYPE] Document [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REMOVE]^valueAccum.append ( tq.consume (  )  ) ;^79^^^^^66^83^[REMOVE] ^[METHOD] parse [TYPE] Document [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^Validate.notNull ( html ) ;^73^^^^^66^83^[REPLACE] parseXmlDecl (  ) ;^[METHOD] parse [TYPE] Document [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^}  if  ( tq .matchesAny ( html , html , baseUri )   )  {^74^^^^^66^83^[REPLACE] } else if  ( tq.matches ( "</" )  )  {^[METHOD] parse [TYPE] Document [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^}   parseStartTag (  ) ;parseTextNode (  ) ;^76^77^78^79^80^66^83^[ADD] else if  ( tq.matches ( "<" )  )  { parseStartTag (  ) ; } else { parseTextNode (  ) ; }^[METHOD] parse [TYPE] Document [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^Validate.notNull ( html ) ;^71^^^^^66^83^[REPLACE] parseCdata (  ) ;^[METHOD] parse [TYPE] Document [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^}  else {^72^^^^^66^83^[REPLACE] } else if  ( tq.matches ( "<?" )  || tq.matches ( "<!" )  )  {^[METHOD] parse [TYPE] Document [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^} else if  ( tq .matchesAny ( bodyHtml , SQ , SQ )   )  {^74^^^^^66^83^[REPLACE] } else if  ( tq.matches ( "</" )  )  {^[METHOD] parse [TYPE] Document [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^} else if  ( tq.matchChomp ( "</" )  )  {^74^^^^^66^83^[REPLACE] } else if  ( tq.matches ( "</" )  )  {^[METHOD] parse [TYPE] Document [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^} else if  ( tq.matchChomp ( "<" )  )  {^76^^^^^66^83^[REPLACE] } else if  ( tq.matches ( "<" )  )  {^[METHOD] parse [TYPE] Document [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REMOVE]^if  ( tq.matches ( "</" )  )  {     parseEndTag (  ) ; }else     if  ( tq.matches ( "<" )  )  {         parseStartTag (  ) ;     }else {         parseTextNode (  ) ;     }^76^^^^^66^83^[REMOVE] ^[METHOD] parse [TYPE] Document [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^^79^^^^^66^83^[ADD] parseTextNode (  ) ;^[METHOD] parse [TYPE] Document [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^Validate.notNull ( html ) ;^69^^^^^66^83^[REPLACE] parseComment (  ) ;^[METHOD] parse [TYPE] Document [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^}  if  ( tq.matches ( "<[CDATA[" )  )  {^70^^^^^66^83^[REPLACE] } else if  ( tq.matches ( "<![CDATA[" )  )  {^[METHOD] parse [TYPE] Document [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^}   parseXmlDecl (  ) ;^70^71^72^73^^66^83^[ADD] else if  ( tq.matches ( "<![CDATA[" )  )  { parseCdata (  ) ; } else if  ( tq.matches ( "<?" )  || tq.matches ( "<!" )  )  { parseXmlDecl (  ) ;^[METHOD] parse [TYPE] Document [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^} else if  ( tq.matches ( "<?" )  ) {^72^^^^^66^83^[REPLACE] } else if  ( tq.matches ( "<?" )  || tq.matches ( "<!" )  )  {^[METHOD] parse [TYPE] Document [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^}   parseEndTag (  ) ;^72^73^74^75^^66^83^[ADD] else if  ( tq.matches ( "<?" )  || tq.matches ( "<!" )  )  { parseXmlDecl (  ) ; } else if  ( tq.matches ( "</" )  )  { parseEndTag (  ) ;^[METHOD] parse [TYPE] Document [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^} else if  ( tq .matchesAny ( baseUri , SQ , DQ )   )  {^74^^^^^66^83^[REPLACE] } else if  ( tq.matches ( "</" )  )  {^[METHOD] parse [TYPE] Document [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^}  if  ( tq.matchChomp ( "<" )  )  {^76^^^^^66^83^[REPLACE] } else if  ( tq.matches ( "<" )  )  {^[METHOD] parse [TYPE] Document [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^^73^^^^^66^83^[ADD] parseXmlDecl (  ) ;^[METHOD] parse [TYPE] Document [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^^77^^^^^66^83^[ADD] parseStartTag (  ) ;^[METHOD] parse [TYPE] Document [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^^71^^^^^66^83^[ADD] parseCdata (  ) ;^[METHOD] parse [TYPE] Document [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^}  else {^74^^^^^66^83^[REPLACE] } else if  ( tq.matches ( "</" )  )  {^[METHOD] parse [TYPE] Document [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^}  if  ( tq .matchesAny ( html , baseUri , DQ )   )  {^74^^^^^66^83^[REPLACE] } else if  ( tq.matches ( "</" )  )  {^[METHOD] parse [TYPE] Document [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REMOVE]^if  ( tq.matches ( "<" )  )  {     parseStartTag (  ) ; }else {     parseTextNode (  ) ; }^74^^^^^66^83^[REMOVE] ^[METHOD] parse [TYPE] Document [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REMOVE]^} else if  ( tq.matches ( "</" )  )  { parseEndTag (  ) ;^75^^^^^66^83^[REMOVE] ^[METHOD] parse [TYPE] Document [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REMOVE]^Validate.notNull ( html ) ;^77^^^^^66^83^[REMOVE] ^[METHOD] parse [TYPE] Document [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^}  if  ( tq.matches ( "<?" )  || tq.matches ( "<" )  )  {^72^^^^^66^83^[REPLACE] } else if  ( tq.matches ( "<?" )  || tq.matches ( "<!" )  )  {^[METHOD] parse [TYPE] Document [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^}  if  ( tq.matches ( "</" )  )  {^74^^^^^66^83^[REPLACE] } else if  ( tq.matches ( "</" )  )  {^[METHOD] parse [TYPE] Document [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^}   parseStartTag (  ) ;^74^75^76^77^^66^83^[ADD] else if  ( tq.matches ( "</" )  )  { parseEndTag (  ) ; } else if  ( tq.matches ( "<" )  )  { parseStartTag (  ) ;^[METHOD] parse [TYPE] Document [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REMOVE]^Validate.notNull ( html ) ;^71^^^^^66^83^[REMOVE] ^[METHOD] parse [TYPE] Document [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^}  if  ( tq.matchChomp ( "<?" )  || tq.matches ( "<" )  )  {^72^^^^^66^83^[REPLACE] } else if  ( tq.matches ( "<?" )  || tq.matches ( "<!" )  )  {^[METHOD] parse [TYPE] Document [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^^75^^^^^66^83^[ADD] parseEndTag (  ) ;^[METHOD] parse [TYPE] Document [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^return doc.body (  ) ;^82^^^^^66^83^[REPLACE] return doc.normalise (  ) ;^[METHOD] parse [TYPE] Document [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^tq .consumeTo ( bodyHtml )  ;^86^^^^^85^93^[REPLACE] tq.consume ( "<!--" ) ;^[METHOD] parseComment [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  Comment comment  [TYPE]  boolean false  true  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REMOVE]^valueAccum.append ( tq.consume (  )  ) ;^86^^^^^85^93^[REMOVE] ^[METHOD] parseComment [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  Comment comment  [TYPE]  boolean false  true  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^String data = tq.consumeTo ( "->" ) ;^87^^^^^85^93^[REPLACE] String data = tq.chompTo ( "->" ) ;^[METHOD] parseComment [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  Comment comment  [TYPE]  boolean false  true  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^if  ( data.endsWith ( "-" )  ) data = data.substring ( 0, data.length (  )  - 3-1 ) ;^89^90^^^^85^93^[REPLACE] if  ( data.endsWith ( "-" )  ) data = data.substring ( 0, data.length (  ) -1 ) ;^[METHOD] parseComment [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  Comment comment  [TYPE]  boolean false  true  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^data = data.substring ( 0, data.length (  )  *  2-1 ) ;^90^^^^^85^93^[REPLACE] data = data.substring ( 0, data.length (  ) -1 ) ;^[METHOD] parseComment [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  Comment comment  [TYPE]  boolean false  true  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^data = data.substring ( 0, data.length (  )  + 3-1 ) ;^90^^^^^85^93^[REPLACE] data = data.substring ( 0, data.length (  ) -1 ) ;^[METHOD] parseComment [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  Comment comment  [TYPE]  boolean false  true  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^Comment comment = new Comment ( data, baseUri ) ;^90^91^^^^85^93^[ADD] data = data.substring ( 0, data.length (  ) -1 ) ; Comment comment = new Comment ( data, baseUri ) ;^[METHOD] parseComment [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  Comment comment  [TYPE]  boolean false  true  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^Comment comment = new Comment ( bodyHtml, baseUri ) ;^91^^^^^85^93^[REPLACE] Comment comment = new Comment ( data, baseUri ) ;^[METHOD] parseComment [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  Comment comment  [TYPE]  boolean false  true  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^last (  )  .absUrl ( bodyHtml )  ;^92^^^^^85^93^[REPLACE] last (  ) .appendChild ( comment ) ;^[METHOD] parseComment [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  Comment comment  [TYPE]  boolean false  true  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^implicit.appendChild ( child ) ;^92^^^^^85^93^[REPLACE] last (  ) .appendChild ( comment ) ;^[METHOD] parseComment [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  Comment comment  [TYPE]  boolean false  true  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^tq.consumeTo ( "<" ) ;^96^^^^^95^103^[REPLACE] tq.consume ( "<" ) ;^[METHOD] parseXmlDecl [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  procInstr  true  [TYPE]  Character firstChar  [TYPE]  XmlDeclaration decl  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^Character firstChar = tq.consumeWord (  ) ;^97^^^^^95^103^[REPLACE] Character firstChar = tq.consume (  ) ;^[METHOD] parseXmlDecl [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  procInstr  true  [TYPE]  Character firstChar  [TYPE]  XmlDeclaration decl  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^^97^^^^^95^103^[ADD] Character firstChar = tq.consume (  ) ;^[METHOD] parseXmlDecl [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  procInstr  true  [TYPE]  Character firstChar  [TYPE]  XmlDeclaration decl  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^boolean procInstr = firstChar.toString (  ) .endsWith ( "!" ) ;^98^^^^^95^103^[REPLACE] boolean procInstr = firstChar.toString (  ) .equals ( "!" ) ;^[METHOD] parseXmlDecl [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  procInstr  true  [TYPE]  Character firstChar  [TYPE]  XmlDeclaration decl  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^String data = tq.consumeTo ( ">" ) ;^99^^^^^95^103^[REPLACE] String data = tq.chompTo ( ">" ) ;^[METHOD] parseXmlDecl [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  procInstr  true  [TYPE]  Character firstChar  [TYPE]  XmlDeclaration decl  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^XmlDeclaration decl = new XmlDeclaration ( data, baseUri, true ) ;^101^^^^^95^103^[REPLACE] XmlDeclaration decl = new XmlDeclaration ( data, baseUri, procInstr ) ;^[METHOD] parseXmlDecl [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  procInstr  true  [TYPE]  Character firstChar  [TYPE]  XmlDeclaration decl  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^last (  )  .absUrl ( html )  ;^102^^^^^95^103^[REPLACE] last (  ) .appendChild ( decl ) ;^[METHOD] parseXmlDecl [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  procInstr  true  [TYPE]  Character firstChar  [TYPE]  XmlDeclaration decl  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^valueAccum.append ( tq.consume (  )  ) ;^102^^^^^95^103^[REPLACE] last (  ) .appendChild ( decl ) ;^[METHOD] parseXmlDecl [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  procInstr  true  [TYPE]  Character firstChar  [TYPE]  XmlDeclaration decl  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  html  [TYPE]  Tag bodyTag  headTag  htmlTag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^tq.consumeTo ( "</" ) ;^106^^^^^105^114^[REPLACE] tq.consume ( "</" ) ;^[METHOD] parseEndTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^String tagName = tq .consumeTo ( data )  ;^107^^^^^105^114^[REPLACE] String tagName = tq.consumeWord (  ) ;^[METHOD] parseEndTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^tq.consumeTo ( ">" ) ;^108^^^^^105^114^[REPLACE] tq.chompTo ( ">" ) ;^[METHOD] parseEndTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^if  ( tagName.length (  )  - 1 != 0  )  {^110^^^^^105^114^[REPLACE] if  ( tagName.length (  )  != 0 )  {^[METHOD] parseEndTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^Tag tag = Tag.valueOf ( tagName ) ;popStackToClose ( tag ) ;^110^111^112^113^^105^114^[ADD] if  ( tagName.length (  )  != 0 )  { Tag tag = Tag.valueOf ( tagName ) ; popStackToClose ( tag ) ; }^[METHOD] parseEndTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^Tag tag = Tag.valueOf ( html ) ;^111^^^^^105^114^[REPLACE] Tag tag = Tag.valueOf ( tagName ) ;^[METHOD] parseEndTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^Tag tag = Tag.equals ( html ) ;^111^^^^^105^114^[REPLACE] Tag tag = Tag.valueOf ( tagName ) ;^[METHOD] parseEndTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^^111^112^^^^105^114^[ADD] Tag tag = Tag.valueOf ( tagName ) ; popStackToClose ( tag ) ;^[METHOD] parseEndTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^tq.consumeTo ( "<" ) ;^117^^^^^116^166^[REPLACE] tq.consume ( "<" ) ;^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^String tagName = tq.consume (  ) ;^118^^^^^116^166^[REPLACE] String tagName = tq.consumeWord (  ) ;^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^if  ( tagName.size (  )  == 0 )  {^120^^^^^116^166^[REPLACE] if  ( tagName.length (  )  == 0 )  {^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^return parent;^123^^^^^116^166^[REPLACE] return;^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^StringBuilder valueAccum = new StringBuilder (  ) ;^126^^^^^116^166^[REPLACE] Attributes attributes = new Attributes (  ) ;^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^while  ( !tq.matchesAny ( "<", "/>", ">" )  ;^127^^^^^116^166^[REPLACE] while  ( !tq.matchesAny ( "<", "/>", ">" )  && !tq.isEmpty (  )  )  {^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^if  ( attribute == this ) attributes.put ( attribute ) ;^129^130^^^^116^166^[REPLACE] if  ( attribute != null ) attributes.put ( attribute ) ;^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^attributes .Attributes (  )  ;^130^^^^^116^166^[REPLACE] attributes.put ( attribute ) ;^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^Attributes attributes = new Attributes (  ) ;^128^^^^^116^166^[REPLACE] Attribute attribute = parseAttribute (  ) ;^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^if  ( attribute == true ) attributes.put ( attribute ) ;^129^130^^^^116^166^[REPLACE] if  ( attribute != null ) attributes.put ( attribute ) ;^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^Attribute attribute = parseAttribute (  ) ;^130^^^^^116^166^[REPLACE] attributes.put ( attribute ) ;^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^^130^^^^^116^166^[ADD] attributes.put ( attribute ) ;^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^^128^^^^^116^166^[ADD] Attribute attribute = parseAttribute (  ) ;^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^Tag tag = Tag.valueOf ( html ) ;^133^^^^^116^166^[REPLACE] Tag tag = Tag.valueOf ( tagName ) ;^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^Element child = new Element ( tag, baseUri, attributes ) ;^133^134^^^^116^166^[ADD] Tag tag = Tag.valueOf ( tagName ) ; Element child = new Element ( tag, baseUri, attributes ) ;^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^Element el = stack.get ( i ) ;^134^^^^^116^166^[REPLACE] Element child = new Element ( tag, baseUri, attributes ) ;^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^boolean.isDataElement = textareaTag.isEmpty (  ) ;^136^^^^^116^166^[REPLACE] boolean isEmptyElement = tag.isEmpty (  ) ;^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^^136^^^^^116^166^[ADD] boolean isEmptyElement = tag.isEmpty (  ) ;^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^if  ( tq .matches ( baseUri )   )  {^137^^^^^116^166^[REPLACE] if  ( tq.matchChomp ( "/>" )  )  {^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^isEmptyElement = true;tq.matchChomp ( ">" ) ;^137^138^139^140^141^116^166^[ADD] if  ( tq.matchChomp ( "/>" )  )  { isEmptyElement = true; } else { tq.matchChomp ( ">" ) ; }^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^tq .matches ( data )  ;^140^^^^^137^141^[REPLACE] tq.matchChomp ( ">" ) ;^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^isEmptyElement = false;^138^^^^^116^166^[REPLACE] isEmptyElement = true;^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^^138^^^^^116^166^[ADD] isEmptyElement = true;^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^if  ( href.length (  )  != 0 )  {^144^^^^^116^166^[REPLACE] if  ( tag.isData (  )  )  {^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^if  ( tag.equals ( titleTag )  && tag.equals ( textareaTag )  ) dataNode = TextNode.createFromEncoded ( data, baseUri ) ;^149^150^^^^116^166^[REPLACE] if  ( tag.equals ( titleTag )  || tag.equals ( textareaTag )  ) dataNode = TextNode.createFromEncoded ( data, baseUri ) ;^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^dataNode = TextNode.createFromEncoded ( data, baseUri ) ;dataNode = new DataNode ( data, baseUri ) ;child.appendChild ( dataNode ) ;^149^150^151^152^153^116^166^[ADD] if  ( tag.equals ( titleTag )  || tag.equals ( textareaTag )  ) dataNode = TextNode.createFromEncoded ( data, baseUri ) ; else dataNode = new DataNode ( data, baseUri ) ; child.appendChild ( dataNode ) ;^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^dataNode =  new DataNode ( tagName, baseUri ) ;^152^^^^^116^166^[REPLACE] dataNode = new DataNode ( data, baseUri ) ;^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^child.appendChild ( dataNode ) ;^152^153^^^^116^166^[ADD] dataNode = new DataNode ( data, baseUri ) ; child.appendChild ( dataNode ) ;^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^dataNode =  TextNode.createFromEncoded ( tagName, baseUri ) ;^150^^^^^116^166^[REPLACE] dataNode = TextNode.createFromEncoded ( data, baseUri ) ;^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^^150^^^^^116^166^[ADD] dataNode = TextNode.createFromEncoded ( data, baseUri ) ;^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^dataNode =   new Element ( parentTag, baseUri )  ;^152^^^^^116^166^[REPLACE] dataNode = new DataNode ( data, baseUri ) ;^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^String data = tq.chompTo ( "</"  !=  html ) ;^145^^^^^116^166^[REPLACE] String data = tq.chompTo ( "</" + tagName ) ;^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^Element child = new Element ( tag, baseUri, attributes ) ;^148^^^^^116^166^[REPLACE] Node dataNode;^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^^148^^^^^116^166^[ADD] Node dataNode;^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^^152^^^^^116^166^[ADD] dataNode = new DataNode ( data, baseUri ) ;^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^String data = tq.chompTo ( "</"  >=  tagName ) ;^145^^^^^116^166^[REPLACE] String data = tq.chompTo ( "</" + tagName ) ;^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^if  ( child.tag (  ) .equals ( bodyTag )  )  {^157^^^^^116^166^[REPLACE] if  ( child.tagName (  ) .equals ( "base" )  )  {^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^if  ( href.length (  )  *  0.5  != 0 )  {^159^^^^^116^166^[REPLACE] if  ( href.length (  )  != 0 )  {^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^baseUri = href;doc.setBaseUri ( href ) ;^159^160^161^162^^116^166^[ADD] if  ( href.length (  )  != 0 )  { baseUri = href; doc.setBaseUri ( href ) ; }^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^baseUri =  html;^160^^^^^116^166^[REPLACE] baseUri = href;^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^String href = child.appendChild ( "href" ) ;^158^^^^^116^166^[REPLACE] String href = child.absUrl ( "href" ) ;^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^^158^^^^^116^166^[ADD] String href = child.absUrl ( "href" ) ;^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^if  ( href.equals (  )  + 1 != 0 )  {^159^^^^^116^166^[REPLACE] if  ( href.length (  )  != 0 )  {^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^baseUri =  null;^160^^^^^116^166^[REPLACE] baseUri = href;^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^if  ( parent2.isValidParent ( childTag )  )  { return true;^165^^^^^116^166^[REPLACE] addChildToParent ( child, isEmptyElement ) ;^[METHOD] parseStartTag [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  [TYPE]  Attribute attribute  [TYPE]  Element child  [TYPE]  Node dataNode  [TYPE]  Attributes attributes  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  tagName  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^tq .matchesWhitespace (  )  ;^169^^^^^168^196^[REPLACE] tq.consumeWhitespace (  ) ;^[METHOD] parseAttribute [TYPE] Attribute [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  StringBuilder valueAccum  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  tagName  value  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^^169^^^^^168^196^[ADD] tq.consumeWhitespace (  ) ;^[METHOD] parseAttribute [TYPE] Attribute [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  StringBuilder valueAccum  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  tagName  value  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^String key = tq.consumeWord (  ) ;^170^^^^^168^196^[REPLACE] String key = tq.consumeAttributeKey (  ) ;^[METHOD] parseAttribute [TYPE] Attribute [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  StringBuilder valueAccum  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  tagName  value  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^String href = child.absUrl ( "href" ) ;^171^^^^^168^196^[REPLACE] String value = "";^[METHOD] parseAttribute [TYPE] Attribute [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  StringBuilder valueAccum  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  tagName  value  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^tq.matchesWhitespace (  ) ;^172^^^^^168^196^[REPLACE] tq.consumeWhitespace (  ) ;^[METHOD] parseAttribute [TYPE] Attribute [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  StringBuilder valueAccum  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  tagName  value  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^while  ( tq.matchesAny ( "<", "/>", ">" )   |  !tq.matchesWhitespace (  )   |  !tq.isEmpty (  )  )  {^183^^^^^168^196^[REPLACE] while  ( !tq.matchesAny ( "<", "/>", ">" )  && !tq.matchesWhitespace (  )  && !tq.isEmpty (  )  )  {^[METHOD] parseAttribute [TYPE] Attribute [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  StringBuilder valueAccum  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  tagName  value  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^^183^184^^^^168^196^[ADD] while  ( !tq.matchesAny ( "<", "/>", ">" )  && !tq.matchesWhitespace (  )  && !tq.isEmpty (  )  )  { valueAccum.append ( tq.consume (  )  ) ;^[METHOD] parseAttribute [TYPE] Attribute [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  StringBuilder valueAccum  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  tagName  value  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^valueAccum.append ( tq .consume ( baseUri )   ) ;^184^^^^^168^196^[REPLACE] valueAccum.append ( tq.consume (  )  ) ;^[METHOD] parseAttribute [TYPE] Attribute [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  StringBuilder valueAccum  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  tagName  value  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^^184^^^^^168^196^[ADD] valueAccum.append ( tq.consume (  )  ) ;^[METHOD] parseAttribute [TYPE] Attribute [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  StringBuilder valueAccum  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  tagName  value  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^valueAccum.append ( tq .consume ( DQ )   ) ;^184^^^^^168^196^[REPLACE] valueAccum.append ( tq.consume (  )  ) ;^[METHOD] parseAttribute [TYPE] Attribute [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  StringBuilder valueAccum  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  tagName  value  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^if  ( tq.matchChomp ( "/>" )  )  {^173^^^^^168^196^[REPLACE] if  ( tq.matchChomp ( "=" )  )  {^[METHOD] parseAttribute [TYPE] Attribute [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  StringBuilder valueAccum  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  tagName  value  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REMOVE]^if  ( tq.matchChomp ( SQ )  )  {     value = tq.chompTo ( SQ ) ; }else     if  ( tq.matchChomp ( DQ )  )  {         value = tq.chompTo ( DQ ) ;     }else {         StringBuilder valueAccum = new StringBuilder (  ) ;         while  (  (  ( ! ( tq.matchesAny ( "<", "/>", ">" )  )  )  &&  ( ! ( tq.matchesWhitespace (  )  )  )  )  &&  ( ! ( tq.isEmpty (  )  )  )  )  {             valueAccum.append ( tq.consume (  )  ) ;         }          value = valueAccum.toString (  ) ;     }^173^^^^^168^196^[REMOVE] ^[METHOD] parseAttribute [TYPE] Attribute [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  StringBuilder valueAccum  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  tagName  value  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^while  ( !tq.matchesAny ( "<", "/>", ">" )  ;^183^^^^^168^196^[REPLACE] while  ( !tq.matchesAny ( "<", "/>", ">" )  && !tq.matchesWhitespace (  )  && !tq.isEmpty (  )  )  {^[METHOD] parseAttribute [TYPE] Attribute [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  StringBuilder valueAccum  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  tagName  value  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^valueAccum.append ( tq.consumeWord (  )  ) ;^184^^^^^168^196^[REPLACE] valueAccum.append ( tq.consume (  )  ) ;^[METHOD] parseAttribute [TYPE] Attribute [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  StringBuilder valueAccum  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  tagName  value  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^valueAccum.append ( tq .consume ( data )   ) ;^184^^^^^168^196^[REPLACE] valueAccum.append ( tq.consume (  )  ) ;^[METHOD] parseAttribute [TYPE] Attribute [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  StringBuilder valueAccum  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  tagName  value  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^} else if  ( tq.matchChomp ( DQ )  )  {^176^^^^^168^196^[REPLACE] if  ( tq.matchChomp ( SQ )  )  {^[METHOD] parseAttribute [TYPE] Attribute [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  StringBuilder valueAccum  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  tagName  value  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^^176^177^178^179^^168^196^[ADD] if  ( tq.matchChomp ( SQ )  )  { value = tq.chompTo ( SQ ) ; } else if  ( tq.matchChomp ( DQ )  )  { value = tq.chompTo ( DQ ) ;^[METHOD] parseAttribute [TYPE] Attribute [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  StringBuilder valueAccum  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  tagName  value  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REMOVE]^Validate.notNull ( html ) ;^184^^^^^168^196^[REMOVE] ^[METHOD] parseAttribute [TYPE] Attribute [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  StringBuilder valueAccum  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  tagName  value  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^}  else {^178^^^^^168^196^[REPLACE] } else if  ( tq.matchChomp ( DQ )  )  {^[METHOD] parseAttribute [TYPE] Attribute [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  StringBuilder valueAccum  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  tagName  value  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^}   value = tq.chompTo ( DQ ) ;StringBuilder valueAccum = new StringBuilder (  ) ;^178^179^180^181^^168^196^[ADD] else if  ( tq.matchChomp ( DQ )  )  { value = tq.chompTo ( DQ ) ; } else { StringBuilder valueAccum = new StringBuilder (  ) ;^[METHOD] parseAttribute [TYPE] Attribute [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  StringBuilder valueAccum  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  tagName  value  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^while  ( !tq.matchesAny ( "<", "/>", ">" )  ;^183^^^^^178^187^[REPLACE] while  ( !tq.matchesAny ( "<", "/>", ">" )  && !tq.matchesWhitespace (  )  && !tq.isEmpty (  )  )  {^[METHOD] parseAttribute [TYPE] Attribute [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  StringBuilder valueAccum  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  tagName  value  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^^183^184^^^^178^187^[ADD] while  ( !tq.matchesAny ( "<", "/>", ">" )  && !tq.matchesWhitespace (  )  && !tq.isEmpty (  )  )  { valueAccum.append ( tq.consume (  )  ) ;^[METHOD] parseAttribute [TYPE] Attribute [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  StringBuilder valueAccum  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  tagName  value  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^valueAccum.append ( tq.consumeWord (  )  ) ;^184^^^^^178^187^[REPLACE] valueAccum.append ( tq.consume (  )  ) ;^[METHOD] parseAttribute [TYPE] Attribute [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  StringBuilder valueAccum  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  tagName  value  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^value =  null.toString (  ) ;^186^^^^^178^187^[REPLACE] value = valueAccum.toString (  ) ;^[METHOD] parseAttribute [TYPE] Attribute [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  StringBuilder valueAccum  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  tagName  value  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^Attributes attributes = new Attributes (  ) ;^181^^^^^178^187^[REPLACE] StringBuilder valueAccum = new StringBuilder (  ) ;^[METHOD] parseAttribute [TYPE] Attribute [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  StringBuilder valueAccum  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  tagName  value  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^value = tq.chompTo ( SQ ) ; ;^179^^^^^168^196^[REPLACE] value = tq.chompTo ( DQ ) ;^[METHOD] parseAttribute [TYPE] Attribute [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  StringBuilder valueAccum  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  tagName  value  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^^179^^^^^168^196^[ADD] value = tq.chompTo ( DQ ) ;^[METHOD] parseAttribute [TYPE] Attribute [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  StringBuilder valueAccum  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  tagName  value  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^value =  null.toString (  ) ;^186^^^^^168^196^[REPLACE] value = valueAccum.toString (  ) ;^[METHOD] parseAttribute [TYPE] Attribute [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  StringBuilder valueAccum  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  tagName  value  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^^186^^^^^168^196^[ADD] value = valueAccum.toString (  ) ;^[METHOD] parseAttribute [TYPE] Attribute [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  StringBuilder valueAccum  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  tagName  value  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^Attributes attributes = new Attributes (  ) ;^181^^^^^168^196^[REPLACE] StringBuilder valueAccum = new StringBuilder (  ) ;^[METHOD] parseAttribute [TYPE] Attribute [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  StringBuilder valueAccum  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  tagName  value  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^value = tq.chompTo ( DQ ) ; ;^177^^^^^168^196^[REPLACE] value = tq.chompTo ( SQ ) ;^[METHOD] parseAttribute [TYPE] Attribute [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  StringBuilder valueAccum  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  tagName  value  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^^177^^^^^168^196^[ADD] value = tq.chompTo ( SQ ) ;^[METHOD] parseAttribute [TYPE] Attribute [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  StringBuilder valueAccum  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  tagName  value  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^} else if  ( tq.matches ( "</" )  )  {^178^^^^^168^196^[REPLACE] } else if  ( tq.matchChomp ( DQ )  )  {^[METHOD] parseAttribute [TYPE] Attribute [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  StringBuilder valueAccum  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  tagName  value  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REMOVE]^if  ( tq.matchChomp ( SQ )  )  {     value = tq.chompTo ( SQ ) ; }else     if  ( tq.matchChomp ( DQ )  )  {         value = tq.chompTo ( DQ ) ;     }else {         StringBuilder valueAccum = new StringBuilder (  ) ;         while  (  (  ( ! ( tq.matchesAny ( "<", "/>", ">" )  )  )  &&  ( ! ( tq.matchesWhitespace (  )  )  )  )  &&  ( ! ( tq.isEmpty (  )  )  )  )  {             valueAccum.append ( tq.consume (  )  ) ;         }          value = valueAccum.toString (  ) ;     }^178^^^^^168^196^[REMOVE] ^[METHOD] parseAttribute [TYPE] Attribute [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  StringBuilder valueAccum  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  tagName  value  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^while  ( !tq.matches ( "<", "/>", ">" )  ;^183^^^^^178^187^[REPLACE] while  ( !tq.matchesAny ( "<", "/>", ">" )  && !tq.matchesWhitespace (  )  && !tq.isEmpty (  )  )  {^[METHOD] parseAttribute [TYPE] Attribute [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  StringBuilder valueAccum  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  tagName  value  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^value = tq.chompTo ( SQ ) ;value = tq.chompTo ( DQ ) ;^176^177^178^179^^168^196^[ADD] if  ( tq.matchChomp ( SQ )  )  { value = tq.chompTo ( SQ ) ; } else if  ( tq.matchChomp ( DQ )  )  { value = tq.chompTo ( DQ ) ;^[METHOD] parseAttribute [TYPE] Attribute [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  StringBuilder valueAccum  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  tagName  value  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^while  ( tq.matchesAny ( "<", "/>", ">" )   <=  !tq.matchesWhitespace (  )   <=  !tq.isEmpty (  )  )  {^183^^^^^178^187^[REPLACE] while  ( !tq.matchesAny ( "<", "/>", ">" )  && !tq.matchesWhitespace (  )  && !tq.isEmpty (  )  )  {^[METHOD] parseAttribute [TYPE] Attribute [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  StringBuilder valueAccum  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  tagName  value  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^^184^^^^^178^187^[ADD] valueAccum.append ( tq.consume (  )  ) ;^[METHOD] parseAttribute [TYPE] Attribute [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  StringBuilder valueAccum  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  tagName  value  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^valueAccum.append ( tq .consume ( baseUri )   ) ;^184^^^^^178^187^[REPLACE] valueAccum.append ( tq.consume (  )  ) ;^[METHOD] parseAttribute [TYPE] Attribute [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  StringBuilder valueAccum  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  tagName  value  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^}  if  ( tq.matchChomp ( DQ )  )  {^178^^^^^168^196^[REPLACE] } else if  ( tq.matchChomp ( DQ )  )  {^[METHOD] parseAttribute [TYPE] Attribute [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  StringBuilder valueAccum  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  tagName  value  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^if  ( key.length (  )  %  0.5  != 0 ) return Attribute.createFromEncoded ( key, value ) ;^190^191^^^^168^196^[REPLACE] if  ( key.length (  )  != 0 ) return Attribute.createFromEncoded ( key, value ) ;^[METHOD] parseAttribute [TYPE] Attribute [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  StringBuilder valueAccum  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  tagName  value  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^return Attribute.createFromEncoded ( key, value ) ;tq.consume (  ) ;return null;^190^191^192^193^194^168^196^[ADD] if  ( key.length (  )  != 0 ) return Attribute.createFromEncoded ( key, value ) ; else { tq.consume (  ) ; return null;^[METHOD] parseAttribute [TYPE] Attribute [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  StringBuilder valueAccum  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  tagName  value  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^return this;^194^^^^^190^195^[REPLACE] return null;^[METHOD] parseAttribute [TYPE] Attribute [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  StringBuilder valueAccum  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  tagName  value  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^return Attribute.createFromEncoded ( href, value ) ;^191^^^^^168^196^[REPLACE] return Attribute.createFromEncoded ( key, value ) ;^[METHOD] parseAttribute [TYPE] Attribute [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  StringBuilder valueAccum  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  tagName  value  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^return false;^194^^^^^168^196^[REPLACE] return null;^[METHOD] parseAttribute [TYPE] Attribute [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  StringBuilder valueAccum  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  tagName  value  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^String text = tq.consume ( "<" ) ;^199^^^^^198^202^[REPLACE] String text = tq.consumeTo ( "<" ) ;^[METHOD] parseTextNode [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  TextNode textNode  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  tagName  text  value  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^TextNode textNode = TextNode.TextNode ( text, baseUri ) ;^200^^^^^198^202^[REPLACE] TextNode textNode = TextNode.createFromEncoded ( text, baseUri ) ;^[METHOD] parseTextNode [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  TextNode textNode  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  tagName  text  value  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^last (  )  .absUrl ( text )  ;^201^^^^^198^202^[REPLACE] last (  ) .appendChild ( textNode ) ;^[METHOD] parseTextNode [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  TextNode textNode  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  tagName  text  value  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^last (  ) .appendChild ( comment ) ;^201^^^^^198^202^[REPLACE] last (  ) .appendChild ( textNode ) ;^[METHOD] parseTextNode [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  TextNode textNode  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  tagName  text  value  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^tq .consumeTo ( value )  ;^205^^^^^204^209^[REPLACE] tq.consume ( "<![CDATA[" ) ;^[METHOD] parseCdata [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  TextNode textNode  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^String rawText = tq .consumeTo ( tagName )  ;^206^^^^^204^209^[REPLACE] String rawText = tq.chompTo ( "]]>" ) ;^[METHOD] parseCdata [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  TextNode textNode  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^TextNode textNode = new TextNode ( value, baseUri ) ;^207^^^^^204^209^[REPLACE] TextNode textNode = new TextNode ( rawText, baseUri ) ;^[METHOD] parseCdata [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  TextNode textNode  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^last (  ) .appendChild ( comment ) ;^208^^^^^204^209^[REPLACE] last (  ) .appendChild ( textNode ) ;^[METHOD] parseCdata [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  TextNode textNode  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REMOVE]^String data = tq.chompTo ( "</" + tagName ) ;^208^^^^^204^209^[REMOVE] ^[METHOD] parseCdata [TYPE] void [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  TextNode textNode  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  headTag  htmlTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^Element parent = popStackToSuitableContainer ( implicit.tag (  )  ) ;^212^^^^^211^239^[REPLACE] Element parent = popStackToSuitableContainer ( child.tag (  )  ) ;^[METHOD] addChildToParent [TYPE] Element [PARAMETER] Element child boolean isEmptyElement [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  validAncestor  [TYPE]  Element child  head  implicit  parent  root  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  headTag  htmlTag  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^Tag childTag = child.tagName (  ) ;^213^^^^^211^239^[REPLACE] Tag childTag = child.tag (  ) ;^[METHOD] addChildToParent [TYPE] Element [PARAMETER] Element child boolean isEmptyElement [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  validAncestor  [TYPE]  Element child  head  implicit  parent  root  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  headTag  htmlTag  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^^213^^^^^211^239^[ADD] Tag childTag = child.tag (  ) ;^[METHOD] addChildToParent [TYPE] Element [PARAMETER] Element child boolean isEmptyElement [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  validAncestor  [TYPE]  Element child  head  implicit  parent  root  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  headTag  htmlTag  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^boolean validAncestor = stackHasValidParent ( titleTag ) ;^214^^^^^211^239^[REPLACE] boolean validAncestor = stackHasValidParent ( childTag ) ;^[METHOD] addChildToParent [TYPE] Element [PARAMETER] Element child boolean isEmptyElement [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  validAncestor  [TYPE]  Element child  head  implicit  parent  root  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  headTag  htmlTag  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^^214^^^^^211^239^[ADD] boolean validAncestor = stackHasValidParent ( childTag ) ;^[METHOD] addChildToParent [TYPE] Element [PARAMETER] Element child boolean isEmptyElement [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  validAncestor  [TYPE]  Element child  head  implicit  parent  root  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  headTag  htmlTag  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^if  ( validAncestor )  {^216^^^^^211^239^[REPLACE] if  ( !validAncestor )  {^[METHOD] addChildToParent [TYPE] Element [PARAMETER] Element child boolean isEmptyElement [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  validAncestor  [TYPE]  Element child  head  implicit  parent  root  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  headTag  htmlTag  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^if  ( head.tag (  ) .equals ( bodyTag )  )  {^221^^^^^211^239^[REPLACE] if  ( child.tag (  ) .equals ( bodyTag )  )  {^[METHOD] addChildToParent [TYPE] Element [PARAMETER] Element child boolean isEmptyElement [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  validAncestor  [TYPE]  Element child  head  implicit  parent  root  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  headTag  htmlTag  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^Element head = new Element ( headTag, baseUri ) ;implicit.appendChild ( head ) ;^221^222^223^224^^211^239^[ADD] if  ( child.tag (  ) .equals ( bodyTag )  )  { Element head = new Element ( headTag, baseUri ) ; implicit.appendChild ( head ) ; }^[METHOD] addChildToParent [TYPE] Element [PARAMETER] Element child boolean isEmptyElement [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  validAncestor  [TYPE]  Element child  head  implicit  parent  root  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  headTag  htmlTag  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^Element child = new Element ( tag, baseUri, attributes ) ;^222^^^^^211^239^[REPLACE] Element head = new Element ( headTag, baseUri ) ;^[METHOD] addChildToParent [TYPE] Element [PARAMETER] Element child boolean isEmptyElement [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  validAncestor  [TYPE]  Element child  head  implicit  parent  root  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  headTag  htmlTag  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^if  ( !isEmptyElement ) stack.add ( implicit ) ;^229^230^^^^211^239^[REPLACE] if  ( !isEmptyElement ) stack.addLast ( child ) ;^[METHOD] addChildToParent [TYPE] Element [PARAMETER] Element child boolean isEmptyElement [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  validAncestor  [TYPE]  Element child  head  implicit  parent  root  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  headTag  htmlTag  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^^229^230^231^232^^211^239^[ADD] if  ( !isEmptyElement ) stack.addLast ( child ) ; return root; }^[METHOD] addChildToParent [TYPE] Element [PARAMETER] Element child boolean isEmptyElement [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  validAncestor  [TYPE]  Element child  head  implicit  parent  root  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  headTag  htmlTag  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^stack.add ( implicit ) ;^230^^^^^211^239^[REPLACE] stack.addLast ( child ) ;^[METHOD] addChildToParent [TYPE] Element [PARAMETER] Element child boolean isEmptyElement [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  validAncestor  [TYPE]  Element child  head  implicit  parent  root  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  headTag  htmlTag  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^return parent;^231^^^^^211^239^[REPLACE] return root;^[METHOD] addChildToParent [TYPE] Element [PARAMETER] Element child boolean isEmptyElement [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  validAncestor  [TYPE]  Element child  head  implicit  parent  root  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  headTag  htmlTag  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^Tag parentTag = titleTag.getImplicitParent (  ) ;^218^^^^^211^239^[REPLACE] Tag parentTag = childTag.getImplicitParent (  ) ;^[METHOD] addChildToParent [TYPE] Element [PARAMETER] Element child boolean isEmptyElement [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  validAncestor  [TYPE]  Element child  head  implicit  parent  root  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  headTag  htmlTag  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^^218^^^^^211^239^[ADD] Tag parentTag = childTag.getImplicitParent (  ) ;^[METHOD] addChildToParent [TYPE] Element [PARAMETER] Element child boolean isEmptyElement [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  validAncestor  [TYPE]  Element child  head  implicit  parent  root  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  headTag  htmlTag  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^Element implicit = new Element ( titleTag, baseUri ) ;^219^^^^^211^239^[REPLACE] Element implicit = new Element ( parentTag, baseUri ) ;^[METHOD] addChildToParent [TYPE] Element [PARAMETER] Element child boolean isEmptyElement [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  validAncestor  [TYPE]  Element child  head  implicit  parent  root  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  headTag  htmlTag  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^Element root = addChildToParent ( implicit, true ) ;^228^^^^^211^239^[REPLACE] Element root = addChildToParent ( implicit, false ) ;^[METHOD] addChildToParent [TYPE] Element [PARAMETER] Element child boolean isEmptyElement [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  validAncestor  [TYPE]  Element child  head  implicit  parent  root  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  headTag  htmlTag  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^if  ( child.tag (  ) .canContain ( bodyTag )  )  {^221^^^^^211^239^[REPLACE] if  ( child.tag (  ) .equals ( bodyTag )  )  {^[METHOD] addChildToParent [TYPE] Element [PARAMETER] Element child boolean isEmptyElement [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  validAncestor  [TYPE]  Element child  head  implicit  parent  root  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  headTag  htmlTag  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^^221^222^223^224^^211^239^[ADD] if  ( child.tag (  ) .equals ( bodyTag )  )  { Element head = new Element ( headTag, baseUri ) ; implicit.appendChild ( head ) ; }^[METHOD] addChildToParent [TYPE] Element [PARAMETER] Element child boolean isEmptyElement [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  validAncestor  [TYPE]  Element child  head  implicit  parent  root  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  headTag  htmlTag  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^if  ( !isEmptyElement ) stack.addLast ( implicit ) ;^229^230^^^^211^239^[REPLACE] if  ( !isEmptyElement ) stack.addLast ( child ) ;^[METHOD] addChildToParent [TYPE] Element [PARAMETER] Element child boolean isEmptyElement [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  validAncestor  [TYPE]  Element child  head  implicit  parent  root  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  headTag  htmlTag  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^stack.addLast ( implicit ) ;^230^^^^^211^239^[REPLACE] stack.addLast ( child ) ;^[METHOD] addChildToParent [TYPE] Element [PARAMETER] Element child boolean isEmptyElement [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  validAncestor  [TYPE]  Element child  head  implicit  parent  root  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  headTag  htmlTag  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^return root;^230^231^^^^211^239^[ADD] stack.addLast ( child ) ; return root;^[METHOD] addChildToParent [TYPE] Element [PARAMETER] Element child boolean isEmptyElement [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  validAncestor  [TYPE]  Element child  head  implicit  parent  root  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  headTag  htmlTag  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^Element root = addChildToParent ( root, true ) ;^228^^^^^211^239^[REPLACE] Element root = addChildToParent ( implicit, false ) ;^[METHOD] addChildToParent [TYPE] Element [PARAMETER] Element child boolean isEmptyElement [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  validAncestor  [TYPE]  Element child  head  implicit  parent  root  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  headTag  htmlTag  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^parent .absUrl ( text )  ;^234^^^^^211^239^[REPLACE] parent.appendChild ( child ) ;^[METHOD] addChildToParent [TYPE] Element [PARAMETER] Element child boolean isEmptyElement [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  validAncestor  [TYPE]  Element child  head  implicit  parent  root  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  headTag  htmlTag  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^^234^^^^^211^239^[ADD] parent.appendChild ( child ) ;^[METHOD] addChildToParent [TYPE] Element [PARAMETER] Element child boolean isEmptyElement [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  validAncestor  [TYPE]  Element child  head  implicit  parent  root  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  headTag  htmlTag  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^if  ( !validAncestor ) stack.addLast ( child ) ;^236^237^^^^211^239^[REPLACE] if  ( !isEmptyElement ) stack.addLast ( child ) ;^[METHOD] addChildToParent [TYPE] Element [PARAMETER] Element child boolean isEmptyElement [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  validAncestor  [TYPE]  Element child  head  implicit  parent  root  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  headTag  htmlTag  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^stack.addLast ( child ) ;return parent;^236^237^238^239^^211^239^[ADD] if  ( !isEmptyElement ) stack.addLast ( child ) ; return parent; }^[METHOD] addChildToParent [TYPE] Element [PARAMETER] Element child boolean isEmptyElement [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  validAncestor  [TYPE]  Element child  head  implicit  parent  root  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  headTag  htmlTag  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^stack.addLast ( implicit ) ;^237^^^^^211^239^[REPLACE] stack.addLast ( child ) ;^[METHOD] addChildToParent [TYPE] Element [PARAMETER] Element child boolean isEmptyElement [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  validAncestor  [TYPE]  Element child  head  implicit  parent  root  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  headTag  htmlTag  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^return stack.getLast (  ) ;^238^^^^^211^239^[REPLACE] return parent;^[METHOD] addChildToParent [TYPE] Element [PARAMETER] Element child boolean isEmptyElement [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  isEmptyElement  true  validAncestor  [TYPE]  Element child  head  implicit  parent  root  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  headTag  htmlTag  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^if  ( stack.get (  )  - 3 == 0  && childTag.equals ( htmlTag )  ) return true;^242^243^^^^241^253^[REPLACE] if  ( stack.size (  )  == 1 && childTag.equals ( htmlTag )  ) return true;^[METHOD] stackHasValidParent [TYPE] boolean [PARAMETER] Tag childTag [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  Element el  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  headTag  htmlTag  parent2  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack  [TYPE]  int i 
[REPLACE]^return false;^243^^^^^241^253^[REPLACE] return true;^[METHOD] stackHasValidParent [TYPE] boolean [PARAMETER] Tag childTag [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  Element el  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  headTag  htmlTag  parent2  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack  [TYPE]  int i 
[REPLACE]^if  ( parent2.equals ( childTag )  )  {^248^^^^^241^253^[REPLACE] if  ( parent2.isValidParent ( childTag )  )  {^[METHOD] stackHasValidParent [TYPE] boolean [PARAMETER] Tag childTag [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  Element el  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  headTag  htmlTag  parent2  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack  [TYPE]  int i 
[REPLACE]^return false;^249^^^^^241^253^[REPLACE] return true;^[METHOD] stackHasValidParent [TYPE] boolean [PARAMETER] Tag childTag [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  Element el  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  headTag  htmlTag  parent2  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack  [TYPE]  int i 
[REPLACE]^for  ( int i = stack.size (  )  + 1 -1; i >= 0; i-- )  {^245^^^^^241^253^[REPLACE] for  ( int i = stack.size (  )  -1; i >= 0; i-- )  {^[METHOD] stackHasValidParent [TYPE] boolean [PARAMETER] Tag childTag [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  Element el  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  headTag  htmlTag  parent2  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack  [TYPE]  int i 
[REPLACE]^Element el = stack .getLast (  )  ;^246^^^^^241^253^[REPLACE] Element el = stack.get ( i ) ;^[METHOD] stackHasValidParent [TYPE] boolean [PARAMETER] Tag childTag [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  Element el  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  headTag  htmlTag  parent2  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack  [TYPE]  int i 
[REPLACE]^Tag parent2 = el.tagName (  ) ;^247^^^^^241^253^[REPLACE] Tag parent2 = el.tag (  ) ;^[METHOD] stackHasValidParent [TYPE] boolean [PARAMETER] Tag childTag [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  Element el  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  headTag  htmlTag  parent2  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack  [TYPE]  int i 
[ADD]^^247^^^^^241^253^[ADD] Tag parent2 = el.tag (  ) ;^[METHOD] stackHasValidParent [TYPE] boolean [PARAMETER] Tag childTag [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  Element el  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  headTag  htmlTag  parent2  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack  [TYPE]  int i 
[REPLACE]^for  ( int i = stack.size (  )  - 5 -0 ; i >= 0; i-- )  {^245^^^^^241^253^[REPLACE] for  ( int i = stack.size (  )  -1; i >= 0; i-- )  {^[METHOD] stackHasValidParent [TYPE] boolean [PARAMETER] Tag childTag [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  Element el  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  headTag  htmlTag  parent2  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack  [TYPE]  int i 
[ADD]^^245^246^247^248^249^241^253^[ADD] for  ( int i = stack.size (  )  -1; i >= 0; i-- )  { Element el = stack.get ( i ) ; Tag parent2 = el.tag (  ) ; if  ( parent2.isValidParent ( childTag )  )  { return true;^[METHOD] stackHasValidParent [TYPE] boolean [PARAMETER] Tag childTag [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  Element el  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  headTag  htmlTag  parent2  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack  [TYPE]  int i 
[REPLACE]^Element el = stack.add ( i ) ;^246^^^^^241^253^[REPLACE] Element el = stack.get ( i ) ;^[METHOD] stackHasValidParent [TYPE] boolean [PARAMETER] Tag childTag [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  Element el  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  headTag  htmlTag  parent2  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack  [TYPE]  int i 
[REPLACE]^return true;^252^^^^^241^253^[REPLACE] return false;^[METHOD] stackHasValidParent [TYPE] boolean [PARAMETER] Tag childTag [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  Element el  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  headTag  htmlTag  parent2  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack  [TYPE]  int i 
[REPLACE]^if  ( last (  ) .tag (  ) .equals ( titleTag )  ) return last (  ) ;^257^258^^^^255^263^[REPLACE] if  ( last (  ) .tag (  ) .canContain ( tag )  ) return last (  ) ;^[METHOD] popStackToSuitableContainer [TYPE] Element [PARAMETER] Tag tag [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  headTag  htmlTag  parent2  parentTag  tag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^return last (  ) ;stack.removeLast (  ) ;^257^258^259^260^261^255^263^[ADD] if  ( last (  ) .tag (  ) .canContain ( tag )  ) return last (  ) ; else stack.removeLast (  ) ; }^[METHOD] popStackToSuitableContainer [TYPE] Element [PARAMETER] Tag tag [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  headTag  htmlTag  parent2  parentTag  tag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^stack.getLast (  ) ;^260^^^^^255^263^[REPLACE] stack.removeLast (  ) ;^[METHOD] popStackToSuitableContainer [TYPE] Element [PARAMETER] Tag tag [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  headTag  htmlTag  parent2  parentTag  tag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[ADD]^^260^^^^^255^263^[ADD] stack.removeLast (  ) ;^[METHOD] popStackToSuitableContainer [TYPE] Element [PARAMETER] Tag tag [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  headTag  htmlTag  parent2  parentTag  tag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^return parent;^258^^^^^255^263^[REPLACE] return last (  ) ;^[METHOD] popStackToSuitableContainer [TYPE] Element [PARAMETER] Tag tag [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  headTag  htmlTag  parent2  parentTag  tag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^if  ( last (  ) .tag (  ) .canContain ( parentTag )  ) return last (  ) ;^257^258^^^^255^263^[REPLACE] if  ( last (  ) .tag (  ) .canContain ( tag )  ) return last (  ) ;^[METHOD] popStackToSuitableContainer [TYPE] Element [PARAMETER] Tag tag [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  headTag  htmlTag  parent2  parentTag  tag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^return true;^262^^^^^255^263^[REPLACE] return null;^[METHOD] popStackToSuitableContainer [TYPE] Element [PARAMETER] Tag tag [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  headTag  htmlTag  parent2  parentTag  tag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
[REPLACE]^int counter = 3;^267^^^^^265^286^[REPLACE] int counter = 0;^[METHOD] popStackToClose [TYPE] Element [PARAMETER] Tag tag [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  Element el  elToClose  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  elTag  headTag  htmlTag  parent2  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack  [TYPE]  int counter  i 
[ADD]^Element elToClose = null;^267^268^^^^265^286^[ADD] int counter = 0; Element elToClose = null;^[METHOD] popStackToClose [TYPE] Element [PARAMETER] Tag tag [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  Element el  elToClose  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  elTag  headTag  htmlTag  parent2  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack  [TYPE]  int counter  i 
[REPLACE]^Element elToClose = true;^268^^^^^265^286^[REPLACE] Element elToClose = null;^[METHOD] popStackToClose [TYPE] Element [PARAMETER] Tag tag [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  Element el  elToClose  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  elTag  headTag  htmlTag  parent2  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack  [TYPE]  int counter  i 
[REPLACE]^if  ( elTag.isValidParent ( bodyTag )  && elTag.equals ( htmlTag )  )  {^273^^^^^265^286^[REPLACE] if  ( elTag.equals ( bodyTag )  || elTag.equals ( htmlTag )  )  {^[METHOD] popStackToClose [TYPE] Element [PARAMETER] Tag tag [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  Element el  elToClose  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  elTag  headTag  htmlTag  parent2  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack  [TYPE]  int counter  i 
[REPLACE]^}  if  ( elTag.equals ( titleTag )  )  {^275^^^^^265^286^[REPLACE] } else if  ( elTag.equals ( tag )  )  {^[METHOD] popStackToClose [TYPE] Element [PARAMETER] Tag tag [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  Element el  elToClose  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  elTag  headTag  htmlTag  parent2  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack  [TYPE]  int counter  i 
[ADD]^}   break;^275^276^277^278^^265^286^[ADD] else if  ( elTag.equals ( tag )  )  { elToClose = el; break; }^[METHOD] popStackToClose [TYPE] Element [PARAMETER] Tag tag [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  Element el  elToClose  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  elTag  headTag  htmlTag  parent2  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack  [TYPE]  int counter  i 
[REPLACE]^elToClose =  null;^276^^^^^265^286^[REPLACE] elToClose = el;^[METHOD] popStackToClose [TYPE] Element [PARAMETER] Tag tag [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  Element el  elToClose  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  elTag  headTag  htmlTag  parent2  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack  [TYPE]  int counter  i 
[ADD]^^276^277^^^^265^286^[ADD] elToClose = el; break;^[METHOD] popStackToClose [TYPE] Element [PARAMETER] Tag tag [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  Element el  elToClose  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  elTag  headTag  htmlTag  parent2  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack  [TYPE]  int counter  i 
[ADD]^^276^^^^^265^286^[ADD] elToClose = el;^[METHOD] popStackToClose [TYPE] Element [PARAMETER] Tag tag [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  Element el  elToClose  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  elTag  headTag  htmlTag  parent2  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack  [TYPE]  int counter  i 
[REPLACE]^} else if  ( elTag.equals ( titleTag )  )  {^275^^^^^265^286^[REPLACE] } else if  ( elTag.equals ( tag )  )  {^[METHOD] popStackToClose [TYPE] Element [PARAMETER] Tag tag [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  Element el  elToClose  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  elTag  headTag  htmlTag  parent2  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack  [TYPE]  int counter  i 
[ADD]^}   elToClose = el;break;^275^276^277^278^^265^286^[ADD] else if  ( elTag.equals ( tag )  )  { elToClose = el; break; }^[METHOD] popStackToClose [TYPE] Element [PARAMETER] Tag tag [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  Element el  elToClose  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  elTag  headTag  htmlTag  parent2  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack  [TYPE]  int counter  i 
[REPLACE]^for  ( int i = stack.size (  )  + 5 -0 ; i > 0; i-- )  {^269^^^^^265^286^[REPLACE] for  ( int i = stack.size (  )  -1; i > 0; i-- )  {^[METHOD] popStackToClose [TYPE] Element [PARAMETER] Tag tag [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  Element el  elToClose  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  elTag  headTag  htmlTag  parent2  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack  [TYPE]  int counter  i 
[REPLACE]^if  ( elTag .endsWith ( DQ )   && elTag^273^^^^^265^286^[REPLACE] if  ( elTag.equals ( bodyTag )  || elTag.equals ( htmlTag )  )  {^[METHOD] popStackToClose [TYPE] Element [PARAMETER] Tag tag [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  Element el  elToClose  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  elTag  headTag  htmlTag  parent2  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack  [TYPE]  int counter  i 
[ADD]^break;elToClose = el;break;^273^274^275^276^277^265^286^[ADD] if  ( elTag.equals ( bodyTag )  || elTag.equals ( htmlTag )  )  { break; } else if  ( elTag.equals ( tag )  )  { elToClose = el; break;^[METHOD] popStackToClose [TYPE] Element [PARAMETER] Tag tag [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  Element el  elToClose  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  elTag  headTag  htmlTag  parent2  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack  [TYPE]  int counter  i 
[REPLACE]^} else if  ( el  tag    )  {^275^^^^^265^286^[REPLACE] } else if  ( elTag.equals ( tag )  )  {^[METHOD] popStackToClose [TYPE] Element [PARAMETER] Tag tag [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  Element el  elToClose  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  elTag  headTag  htmlTag  parent2  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack  [TYPE]  int counter  i 
[REPLACE]^} else if  ( elTag.equals ( parentTag )  )  {^275^^^^^265^286^[REPLACE] } else if  ( elTag.equals ( tag )  )  {^[METHOD] popStackToClose [TYPE] Element [PARAMETER] Tag tag [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  Element el  elToClose  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  elTag  headTag  htmlTag  parent2  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack  [TYPE]  int counter  i 
[REPLACE]^Element el = stack.add ( i ) ;^271^^^^^265^286^[REPLACE] Element el = stack.get ( i ) ;^[METHOD] popStackToClose [TYPE] Element [PARAMETER] Tag tag [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  Element el  elToClose  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  elTag  headTag  htmlTag  parent2  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack  [TYPE]  int counter  i 
[REPLACE]^Tag elToCloseTag = el.tag (  ) ;^272^^^^^265^286^[REPLACE] Tag elTag = el.tag (  ) ;^[METHOD] popStackToClose [TYPE] Element [PARAMETER] Tag tag [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  Element el  elToClose  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  elTag  headTag  htmlTag  parent2  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack  [TYPE]  int counter  i 
[REPLACE]^for  ( int i = stack.size (  )  /  2 -1; i > 0; i-- )  {^269^^^^^265^286^[REPLACE] for  ( int i = stack.size (  )  -1; i > 0; i-- )  {^[METHOD] popStackToClose [TYPE] Element [PARAMETER] Tag tag [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  Element el  elToClose  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  elTag  headTag  htmlTag  parent2  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack  [TYPE]  int counter  i 
[REPLACE]^Tag elToCloseTag = el.tagName (  ) ;^272^^^^^265^286^[REPLACE] Tag elTag = el.tag (  ) ;^[METHOD] popStackToClose [TYPE] Element [PARAMETER] Tag tag [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  Element el  elToClose  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  elTag  headTag  htmlTag  parent2  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack  [TYPE]  int counter  i 
[REPLACE]^if  ( elToClose == null )  {^280^^^^^265^286^[REPLACE] if  ( elToClose != null )  {^[METHOD] popStackToClose [TYPE] Element [PARAMETER] Tag tag [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  Element el  elToClose  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  elTag  headTag  htmlTag  parent2  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack  [TYPE]  int counter  i 
[ADD]^^280^281^282^283^^265^286^[ADD] if  ( elToClose != null )  { for  ( int i = 0; i < counter; i++ )  { stack.removeLast (  ) ; }^[METHOD] popStackToClose [TYPE] Element [PARAMETER] Tag tag [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  Element el  elToClose  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  elTag  headTag  htmlTag  parent2  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack  [TYPE]  int counter  i 
[REPLACE]^for  ( int i = 0; i  >  counter; i++ )  {^281^^^^^265^286^[REPLACE] for  ( int i = 0; i < counter; i++ )  {^[METHOD] popStackToClose [TYPE] Element [PARAMETER] Tag tag [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  Element el  elToClose  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  elTag  headTag  htmlTag  parent2  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack  [TYPE]  int counter  i 
[ADD]^^281^282^283^^^265^286^[ADD] for  ( int i = 0; i < counter; i++ )  { stack.removeLast (  ) ; }^[METHOD] popStackToClose [TYPE] Element [PARAMETER] Tag tag [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  Element el  elToClose  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  elTag  headTag  htmlTag  parent2  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack  [TYPE]  int counter  i 
[REPLACE]^stack.getLast (  ) ;^282^^^^^265^286^[REPLACE] stack.removeLast (  ) ;^[METHOD] popStackToClose [TYPE] Element [PARAMETER] Tag tag [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  Element el  elToClose  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  elTag  headTag  htmlTag  parent2  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack  [TYPE]  int counter  i 
[ADD]^^282^^^^^265^286^[ADD] stack.removeLast (  ) ;^[METHOD] popStackToClose [TYPE] Element [PARAMETER] Tag tag [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  Element el  elToClose  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  elTag  headTag  htmlTag  parent2  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack  [TYPE]  int counter  i 
[REPLACE]^for  ( int i = 2; i < counter; i++ )  {^281^^^^^265^286^[REPLACE] for  ( int i = 0; i < counter; i++ )  {^[METHOD] popStackToClose [TYPE] Element [PARAMETER] Tag tag [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  Element el  elToClose  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  elTag  headTag  htmlTag  parent2  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack  [TYPE]  int counter  i 
[REPLACE]^for  ( int i = 0; i  >=  counter; i++ )  {^281^^^^^265^286^[REPLACE] for  ( int i = 0; i < counter; i++ )  {^[METHOD] popStackToClose [TYPE] Element [PARAMETER] Tag tag [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  Element el  elToClose  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  elTag  headTag  htmlTag  parent2  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack  [TYPE]  int counter  i 
[REPLACE]^for  ( int i = 0 + 0; i < counter; i++ )  {^281^^^^^265^286^[REPLACE] for  ( int i = 0; i < counter; i++ )  {^[METHOD] popStackToClose [TYPE] Element [PARAMETER] Tag tag [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  Element el  elToClose  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  elTag  headTag  htmlTag  parent2  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack  [TYPE]  int counter  i 
[REPLACE]^return el;^285^^^^^265^286^[REPLACE] return elToClose;^[METHOD] popStackToClose [TYPE] Element [PARAMETER] Tag tag [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  boolean false  true  [TYPE]  Element el  elToClose  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  elTag  headTag  htmlTag  parent2  parentTag  tag  textareaTag  titleTag  [TYPE]  Document doc  [TYPE]  LinkedList stack  [TYPE]  int counter  i 
[REPLACE]^return stack.removeLast (  ) ;^289^^^^^288^290^[REPLACE] return stack.getLast (  ) ;^[METHOD] last [TYPE] Element [PARAMETER] [CLASS] Parser   [TYPE]  TokenQueue tq  [TYPE]  String DQ  SQ  baseUri  bodyHtml  data  href  html  key  rawText  tagName  text  value  [TYPE]  Tag bodyTag  childTag  elTag  headTag  htmlTag  parent2  parentTag  tag  textareaTag  titleTag  [TYPE]  boolean false  true  [TYPE]  Document doc  [TYPE]  LinkedList stack 
