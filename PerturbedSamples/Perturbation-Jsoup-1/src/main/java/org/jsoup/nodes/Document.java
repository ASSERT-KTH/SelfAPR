[REPLACE]^super (   "#root"   , baseUri ) ;^22^^^^^21^23^[REPLACE] super ( Tag.valueOf ( "#root" ) , baseUri ) ;^[METHOD] <init> [TYPE] String) [PARAMETER] String baseUri [CLASS] Document   [TYPE]  boolean false  true  [TYPE]  String baseUri 
[ADD]^^22^^^^^21^23^[ADD] super ( Tag.valueOf ( "#root" ) , baseUri ) ;^[METHOD] <init> [TYPE] String) [PARAMETER] String baseUri [CLASS] Document   [TYPE]  boolean false  true  [TYPE]  String baseUri 
[REPLACE]^baseUri   ;^31^^^^^30^39^[REPLACE] Validate.notNull ( baseUri ) ;^[METHOD] createShell [TYPE] Document [PARAMETER] String baseUri [CLASS] Document   [TYPE]  boolean false  true  [TYPE]  Element html  [TYPE]  String baseUri  [TYPE]  Document doc 
[REPLACE]^Element html = doc.appendElement ( "html" ) ;^33^^^^^30^39^[REPLACE] Document doc = new Document ( baseUri ) ;^[METHOD] createShell [TYPE] Document [PARAMETER] String baseUri [CLASS] Document   [TYPE]  boolean false  true  [TYPE]  Element html  [TYPE]  String baseUri  [TYPE]  Document doc 
[ADD]^Element html = doc.appendElement ( "html" ) ;^33^34^^^^30^39^[ADD] Document doc = new Document ( baseUri ) ; Element html = doc.appendElement ( "html" ) ;^[METHOD] createShell [TYPE] Document [PARAMETER] String baseUri [CLASS] Document   [TYPE]  boolean false  true  [TYPE]  Element html  [TYPE]  String baseUri  [TYPE]  Document doc 
[REPLACE]^Element html = doc.prependElement ( "html" ) ;^34^^^^^30^39^[REPLACE] Element html = doc.appendElement ( "html" ) ;^[METHOD] createShell [TYPE] Document [PARAMETER] String baseUri [CLASS] Document   [TYPE]  boolean false  true  [TYPE]  Element html  [TYPE]  String baseUri  [TYPE]  Document doc 
[REPLACE]^html .prependElement ( baseUri )  ;^35^^^^^30^39^[REPLACE] html.appendElement ( "head" ) ;^[METHOD] createShell [TYPE] Document [PARAMETER] String baseUri [CLASS] Document   [TYPE]  boolean false  true  [TYPE]  Element html  [TYPE]  String baseUri  [TYPE]  Document doc 
[REPLACE]^html.text ( "body" ) ;^36^^^^^30^39^[REPLACE] html.appendElement ( "body" ) ;^[METHOD] createShell [TYPE] Document [PARAMETER] String baseUri [CLASS] Document   [TYPE]  boolean false  true  [TYPE]  Element html  [TYPE]  String baseUri  [TYPE]  Document doc 
[ADD]^^36^^^^^30^39^[ADD] html.appendElement ( "body" ) ;^[METHOD] createShell [TYPE] Document [PARAMETER] String baseUri [CLASS] Document   [TYPE]  boolean false  true  [TYPE]  Element html  [TYPE]  String baseUri  [TYPE]  Document doc 
[REPLACE]^return "#document";^38^^^^^30^39^[REPLACE] return doc;^[METHOD] createShell [TYPE] Document [PARAMETER] String baseUri [CLASS] Document   [TYPE]  boolean false  true  [TYPE]  Element html  [TYPE]  String baseUri  [TYPE]  Document doc 
[REPLACE]^return getElementsByTag ( "body" ) .first (  ) ;^46^^^^^45^47^[REPLACE] return getElementsByTag ( "head" ) .first (  ) ;^[METHOD] head [TYPE] Element [PARAMETER] [CLASS] Document   [TYPE]  boolean false  true 
[REPLACE]^return getElementsByTag ( "head" ) .first (  ) ;^54^^^^^53^55^[REPLACE] return getElementsByTag ( "body" ) .first (  ) ;^[METHOD] body [TYPE] Element [PARAMETER] [CLASS] Document   [TYPE]  boolean false  true 
[REPLACE]^Element titleEl = getElementsByTag ( "title" )  .trim (  )  ;^62^^^^^61^64^[REPLACE] Element titleEl = getElementsByTag ( "title" ) .first (  ) ;^[METHOD] title [TYPE] String [PARAMETER] [CLASS] Document   [TYPE]  boolean false  true  [TYPE]  Element titleEl 
[ADD]^^62^63^^^^61^64^[ADD] Element titleEl = getElementsByTag ( "title" ) .first (  ) ; return titleEl != null ? titleEl.text (  ) .trim (  )  : "";^[METHOD] title [TYPE] String [PARAMETER] [CLASS] Document   [TYPE]  boolean false  true  [TYPE]  Element titleEl 
[REPLACE]^return titleEl != true ? titleEl.text (  ) .text (  )  : "";^63^^^^^61^64^[REPLACE] return titleEl != null ? titleEl.text (  ) .trim (  )  : "";^[METHOD] title [TYPE] String [PARAMETER] [CLASS] Document   [TYPE]  boolean false  true  [TYPE]  Element titleEl 
[REPLACE]^title   ;^72^^^^^71^79^[REPLACE] Validate.notNull ( title ) ;^[METHOD] title [TYPE] void [PARAMETER] String title [CLASS] Document   [TYPE]  boolean false  true  [TYPE]  Element titleEl  [TYPE]  String title 
[REMOVE]^Validate.notNull ( baseUri ) ;^72^^^^^71^79^[REMOVE] ^[METHOD] title [TYPE] void [PARAMETER] String title [CLASS] Document   [TYPE]  boolean false  true  [TYPE]  Element titleEl  [TYPE]  String title 
[REPLACE]^Element html = doc.appendElement ( "html" ) ;^73^^^^^71^79^[REPLACE] Element titleEl = getElementsByTag ( "title" ) .first (  ) ;^[METHOD] title [TYPE] void [PARAMETER] String title [CLASS] Document   [TYPE]  boolean false  true  [TYPE]  Element titleEl  [TYPE]  String title 
[REPLACE]^if  ( titleEl != null )  {^74^^^^^71^79^[REPLACE] if  ( titleEl == null )  {^[METHOD] title [TYPE] void [PARAMETER] String title [CLASS] Document   [TYPE]  boolean false  true  [TYPE]  Element titleEl  [TYPE]  String title 
[REPLACE]^titleEl.appendElement ( title ) ;^77^^^^^71^79^[REPLACE] titleEl.text ( title ) ;^[METHOD] title [TYPE] void [PARAMETER] String title [CLASS] Document   [TYPE]  boolean false  true  [TYPE]  Element titleEl  [TYPE]  String title 
[ADD]^^77^^^^^71^79^[ADD] titleEl.text ( title ) ;^[METHOD] title [TYPE] void [PARAMETER] String title [CLASS] Document   [TYPE]  boolean false  true  [TYPE]  Element titleEl  [TYPE]  String title 
[REPLACE]^head (  ) .appendElement ( "title" ) .select ( title ) ;^75^^^^^71^79^[REPLACE] head (  ) .appendElement ( "title" ) .text ( title ) ;^[METHOD] title [TYPE] void [PARAMETER] String title [CLASS] Document   [TYPE]  boolean false  true  [TYPE]  Element titleEl  [TYPE]  String title 
[ADD]^^75^^^^^71^79^[ADD] head (  ) .appendElement ( "title" ) .text ( title ) ;^[METHOD] title [TYPE] void [PARAMETER] String title [CLASS] Document   [TYPE]  boolean false  true  [TYPE]  Element titleEl  [TYPE]  String title 
[REPLACE]^head (  )  .prependElement ( title )  .text ( title ) ;^75^^^^^71^79^[REPLACE] head (  ) .appendElement ( "title" ) .text ( title ) ;^[METHOD] title [TYPE] void [PARAMETER] String title [CLASS] Document   [TYPE]  boolean false  true  [TYPE]  Element titleEl  [TYPE]  String title 
[REPLACE]^body (  ) .text ( text ) ;^75^^^^^71^79^[REPLACE] head (  ) .appendElement ( "title" ) .text ( title ) ;^[METHOD] title [TYPE] void [PARAMETER] String title [CLASS] Document   [TYPE]  boolean false  true  [TYPE]  Element titleEl  [TYPE]  String title 
[REPLACE]^return new Element (   tagName   , this.baseUri (  )  ) ;^87^^^^^86^88^[REPLACE] return new Element ( Tag.valueOf ( tagName ) , this.baseUri (  )  ) ;^[METHOD] createElement [TYPE] Element [PARAMETER] String tagName [CLASS] Document   [TYPE]  boolean false  true  [TYPE]  String tagName 
[REPLACE]^if  ( select ( "html" )  .text (  )   ) appendElement ( "html" ) ;^96^97^^^^95^110^[REPLACE] if  ( select ( "html" ) .isEmpty (  )  ) appendElement ( "html" ) ;^[METHOD] normalise [TYPE] Document [PARAMETER] [CLASS] Document   [TYPE]  boolean false  true 
[REPLACE]^select ( "html" ) .first (  ) .appendElement ( "body" ) ;^97^^^^^95^110^[REPLACE] appendElement ( "html" ) ;^[METHOD] normalise [TYPE] Document [PARAMETER] [CLASS] Document   [TYPE]  boolean false  true 
[ADD]^^97^^^^^95^110^[ADD] appendElement ( "html" ) ;^[METHOD] normalise [TYPE] Document [PARAMETER] [CLASS] Document   [TYPE]  boolean false  true 
[REPLACE]^if  ( head (  )  != null ) select ( "html" ) .first (  ) .appendElement ( "head" ) ;^98^99^^^^95^110^[REPLACE] if  ( head (  )  == null ) select ( "html" ) .first (  ) .prependElement ( "head" ) ;^[METHOD] normalise [TYPE] Document [PARAMETER] [CLASS] Document   [TYPE]  boolean false  true 
[ADD]^^98^99^100^101^^95^110^[ADD] if  ( head (  )  == null ) select ( "html" ) .first (  ) .prependElement ( "head" ) ; if  ( body (  )  == null ) select ( "html" ) .first (  ) .appendElement ( "body" ) ;^[METHOD] normalise [TYPE] Document [PARAMETER] [CLASS] Document   [TYPE]  boolean false  true 
[REPLACE]^select ( "html" ) .first (  ) .appendElement ( "body" ) ;^99^^^^^95^110^[REPLACE] select ( "html" ) .first (  ) .prependElement ( "head" ) ;^[METHOD] normalise [TYPE] Document [PARAMETER] [CLASS] Document   [TYPE]  boolean false  true 
[REPLACE]^select ( "html" )  .trim (  )  .prependElement ( "head" ) ;^99^^^^^95^110^[REPLACE] select ( "html" ) .first (  ) .prependElement ( "head" ) ;^[METHOD] normalise [TYPE] Document [PARAMETER] [CLASS] Document   [TYPE]  boolean false  true 
[REPLACE]^if  ( body (  )  != null ) select ( "html" )  .trim (  )  .appendElement ( "body" ) ;^100^101^^^^95^110^[REPLACE] if  ( body (  )  == null ) select ( "html" ) .first (  ) .appendElement ( "body" ) ;^[METHOD] normalise [TYPE] Document [PARAMETER] [CLASS] Document   [TYPE]  boolean false  true 
[ADD]^select ( "html" ) .first (  ) .appendElement ( "body" ) ;^100^101^^^^95^110^[ADD] if  ( body (  )  == null ) select ( "html" ) .first (  ) .appendElement ( "body" ) ;^[METHOD] normalise [TYPE] Document [PARAMETER] [CLASS] Document   [TYPE]  boolean false  true 
[REPLACE]^select ( "html" ) .first (  ) .prependElement ( "body" ) ;^101^^^^^95^110^[REPLACE] select ( "html" ) .first (  ) .appendElement ( "body" ) ;^[METHOD] normalise [TYPE] Document [PARAMETER] [CLASS] Document   [TYPE]  boolean false  true 
[REPLACE]^select ( "html" ) .first (  ) .prependElement ( "head" ) ;^101^^^^^95^110^[REPLACE] select ( "html" ) .first (  ) .appendElement ( "body" ) ;^[METHOD] normalise [TYPE] Document [PARAMETER] [CLASS] Document   [TYPE]  boolean false  true 
[REPLACE]^normalise ( select ( "html" ) .first (  )  ) ;^105^^^^^95^110^[REPLACE] normalise ( head (  )  ) ;^[METHOD] normalise [TYPE] Document [PARAMETER] [CLASS] Document   [TYPE]  boolean false  true 
[REMOVE]^body (  ) .text ( text ) ;^105^^^^^95^110^[REMOVE] ^[METHOD] normalise [TYPE] Document [PARAMETER] [CLASS] Document   [TYPE]  boolean false  true 
[REPLACE]^select ( "html" ) .first (  ) .appendElement ( "body" ) ;^106^^^^^95^110^[REPLACE] normalise ( select ( "html" ) .first (  )  ) ;^[METHOD] normalise [TYPE] Document [PARAMETER] [CLASS] Document   [TYPE]  boolean false  true 
[ADD]^^106^^^^^95^110^[ADD] normalise ( select ( "html" ) .first (  )  ) ;^[METHOD] normalise [TYPE] Document [PARAMETER] [CLASS] Document   [TYPE]  boolean false  true 
[REMOVE]^select ( "html" ) .first (  ) .appendElement ( "body" ) ;^106^^^^^95^110^[REMOVE] ^[METHOD] normalise [TYPE] Document [PARAMETER] [CLASS] Document   [TYPE]  boolean false  true 
[REPLACE]^body (  ) .text ( text ) ;^107^^^^^95^110^[REPLACE] normalise ( this ) ;^[METHOD] normalise [TYPE] Document [PARAMETER] [CLASS] Document   [TYPE]  boolean false  true 
[ADD]^^107^^^^^95^110^[ADD] normalise ( this ) ;^[METHOD] normalise [TYPE] Document [PARAMETER] [CLASS] Document   [TYPE]  boolean false  true 
[REPLACE]^return null;^109^^^^^95^110^[REPLACE] return this;^[METHOD] normalise [TYPE] Document [PARAMETER] [CLASS] Document   [TYPE]  boolean false  true 
[REPLACE]^for  ( Node node: toMove )  { element.removeChild ( node ) ;^114^^^^^113^128^[REPLACE] List<Node> toMove = new ArrayList<Node> (  ) ;^[METHOD] normalise [TYPE] void [PARAMETER] Element element [CLASS] Document   [TYPE]  boolean false  true  [TYPE]  Element element  [TYPE]  Node node  [TYPE]  List toMove  [TYPE]  TextNode tn 
[REPLACE]^if  ( ! node instanceof TextNode )  {^116^^^^^113^128^[REPLACE] if  ( node instanceof TextNode )  {^[METHOD] normalise [TYPE] void [PARAMETER] Element element [CLASS] Document   [TYPE]  boolean false  true  [TYPE]  Element element  [TYPE]  Node node  [TYPE]  List toMove  [TYPE]  TextNode tn 
[REPLACE]^if  ( !tn.isBlank (  )  ) null.add ( tn ) ;^118^119^^^^113^128^[REPLACE] if  ( !tn.isBlank (  )  ) toMove.add ( tn ) ;^[METHOD] normalise [TYPE] void [PARAMETER] Element element [CLASS] Document   [TYPE]  boolean false  true  [TYPE]  Element element  [TYPE]  Node node  [TYPE]  List toMove  [TYPE]  TextNode tn 
[ADD]^toMove.add ( tn ) ;^118^119^120^^^113^128^[ADD] if  ( !tn.isBlank (  )  ) toMove.add ( tn ) ; }^[METHOD] normalise [TYPE] void [PARAMETER] Element element [CLASS] Document   [TYPE]  boolean false  true  [TYPE]  Element element  [TYPE]  Node node  [TYPE]  List toMove  [TYPE]  TextNode tn 
[REPLACE]^body (  ) .text ( text ) ;^119^^^^^113^128^[REPLACE] toMove.add ( tn ) ;^[METHOD] normalise [TYPE] void [PARAMETER] Element element [CLASS] Document   [TYPE]  boolean false  true  [TYPE]  Element element  [TYPE]  Node node  [TYPE]  List toMove  [TYPE]  TextNode tn 
[REPLACE]^List<Node> toMove = new ArrayList<Node> (  ) ;^117^^^^^113^128^[REPLACE] TextNode tn =  ( TextNode )  node;^[METHOD] normalise [TYPE] void [PARAMETER] Element element [CLASS] Document   [TYPE]  boolean false  true  [TYPE]  Element element  [TYPE]  Node node  [TYPE]  List toMove  [TYPE]  TextNode tn 
[REPLACE]^if  ( tn.isBlank (  )  ) toMove.add ( tn ) ;^118^119^^^^113^128^[REPLACE] if  ( !tn.isBlank (  )  ) toMove.add ( tn ) ;^[METHOD] normalise [TYPE] void [PARAMETER] Element element [CLASS] Document   [TYPE]  boolean false  true  [TYPE]  Element element  [TYPE]  Node node  [TYPE]  List toMove  [TYPE]  TextNode tn 
[REPLACE]^for  ( Node node: toMove )  { element.removeChild ( node ) ;^115^^^^^113^128^[REPLACE] for  ( Node node: element.childNodes )  {^[METHOD] normalise [TYPE] void [PARAMETER] Element element [CLASS] Document   [TYPE]  boolean false  true  [TYPE]  Element element  [TYPE]  Node node  [TYPE]  List toMove  [TYPE]  TextNode tn 
[ADD]^^117^^^^^113^128^[ADD] TextNode tn =  ( TextNode )  node;^[METHOD] normalise [TYPE] void [PARAMETER] Element element [CLASS] Document   [TYPE]  boolean false  true  [TYPE]  Element element  [TYPE]  Node node  [TYPE]  List toMove  [TYPE]  TextNode tn 
[REPLACE]^for  ( Node node: toMove )  { element.removeChild ( node ) ;^123^^^^^113^128^[REPLACE] for  ( Node node: toMove )  {^[METHOD] normalise [TYPE] void [PARAMETER] Element element [CLASS] Document   [TYPE]  boolean false  true  [TYPE]  Element element  [TYPE]  Node node  [TYPE]  List toMove  [TYPE]  TextNode tn 
[REPLACE]^return super .isEmpty (  )  ;^132^^^^^131^133^[REPLACE] return super.html (  ) ;^[METHOD] outerHtml [TYPE] String [PARAMETER] [CLASS] Document   [TYPE]  boolean false  true 
[REPLACE]^body (  ) .appendElement ( text ) ;^142^^^^^141^144^[REPLACE] body (  ) .text ( text ) ;^[METHOD] text [TYPE] Element [PARAMETER] String text [CLASS] Document   [TYPE]  boolean false  true  [TYPE]  String text 
[REPLACE]^toMove.add ( tn ) ;^142^^^^^141^144^[REPLACE] body (  ) .text ( text ) ;^[METHOD] text [TYPE] Element [PARAMETER] String text [CLASS] Document   [TYPE]  boolean false  true  [TYPE]  String text 
[REPLACE]^return null;^143^^^^^141^144^[REPLACE] return this;^[METHOD] text [TYPE] Element [PARAMETER] String text [CLASS] Document   [TYPE]  boolean false  true  [TYPE]  String text 
[REPLACE]^return doc;^148^^^^^147^149^[REPLACE] return "#document";^[METHOD] nodeName [TYPE] String [PARAMETER] [CLASS] Document   [TYPE]  boolean false  true 
