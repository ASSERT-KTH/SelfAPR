[REPLACE]^a  =  a ;^42^^^^^41^72^[REPLACE] a = OptionBuilder.withDescription ( "A description" ) .create ( 'a' ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^bbb  = null ;^43^^^^^41^72^[REPLACE] bbb = OptionBuilder.create ( "bbb" ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^ddd = OptionBuilder.withLongOpt ( "ddd" ) .create (  ) ; ;^44^^^^^41^72^[REPLACE] c = OptionBuilder.withLongOpt ( "ccc" ) .create ( 'c' ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[ADD]^^44^^^^^41^72^[ADD] c = OptionBuilder.withLongOpt ( "ccc" ) .create ( 'c' ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^c = OptionBuilder.withLongOpt ( "ccc" ) .create ( 'c' ) ; ;^45^^^^^41^72^[REPLACE] ddd = OptionBuilder.withLongOpt ( "ddd" ) .create (  ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^e = OptionBuilder.isRequired ( false ) .create ( "e" ) ;^46^^^^^41^72^[REPLACE] e = OptionBuilder.isRequired ( true ) .create ( "e" ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[ADD]^^46^^^^^41^72^[ADD] e = OptionBuilder.isRequired ( true ) .create ( "e" ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^f ;^47^^^^^41^72^[REPLACE] f = OptionBuilder.hasArg (  ) .withArgName ( "argument" ) .create ( 'f' ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^g = OptionBuilder.hasArgs ( 3 ) .create ( 'g' ) ;^48^^^^^41^72^[REPLACE] g = OptionBuilder.hasArgs ( 5 ) .create ( 'g' ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^i = OptionBuilder.hasOptionalArgs ( 5 ) .create ( 'i' ) ; ;^49^^^^^41^72^[REPLACE] h = OptionBuilder.hasOptionalArg (  ) .create ( 'h' ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^h = OptionBuilder.hasOptionalArg (  ) .create ( 'h' ) ; ;^50^^^^^41^72^[REPLACE] i = OptionBuilder.hasOptionalArgs ( 5 ) .create ( 'i' ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^abcdenew OptionGroup (  )  ; ;^52^^^^^41^72^[REPLACE] aceOptions = new Options (  ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^aceOptions.addOption ( OptionBuilder .isRequired ( false )   ) ;^53^^^^^41^72^[REPLACE] aceOptions.addOption ( OptionBuilder.create ( 'a' )  ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^aceOptions.addOption ( OptionBuilder.hasArgs ( 'a' )  ) ;^53^^^^^41^72^[REPLACE] aceOptions.addOption ( OptionBuilder.create ( 'a' )  ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^aceOptions .addOptionGroup ( og )  ;^54^^^^^41^72^[REPLACE] aceOptions.addOption ( OptionBuilder.create ( 'c' )  ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^aceOptions.addOption ( OptionBuilder .isRequired ( true )   ) ;^54^^^^^41^72^[REPLACE] aceOptions.addOption ( OptionBuilder.create ( 'c' )  ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REMOVE]^c = OptionBuilder.withLongOpt ( "ccc" ) .create ( 'c' ) ;^54^^^^^41^72^[REMOVE] ^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^aceOptions.addOption ( OptionBuilder .isRequired ( false )   ) ;^55^^^^^41^72^[REPLACE] aceOptions.addOption ( OptionBuilder.create ( 'e' )  ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^aceOptions.addOption ( OptionBuilder.hasArgs ( 'e' )  ) ;^55^^^^^41^72^[REPLACE] aceOptions.addOption ( OptionBuilder.create ( 'e' )  ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^aceOptions = new Options (  ) ; ;^57^^^^^41^72^[REPLACE] aceOptionGroup = new OptionGroup (  ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^aceOptionGroup .addOptionGroup ( og )  ;^58^^^^^41^72^[REPLACE] aceOptionGroup.addOption ( OptionBuilder.create ( 'a' )  ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^aceOptionGroup.addOption ( OptionBuilder.hasArgs ( 'a' )  ) ;^58^^^^^41^72^[REPLACE] aceOptionGroup.addOption ( OptionBuilder.create ( 'a' )  ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^aceOptionGroup.addOption ( OptionBuilder.hasArgs ( 'c' )  ) ;^59^^^^^41^72^[REPLACE] aceOptionGroup.addOption ( OptionBuilder.create ( 'c' )  ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^aceOptionGroup.setRequired ( OptionBuilder.create ( 'e' )  ) ;^60^^^^^41^72^[REPLACE] aceOptionGroup.addOption ( OptionBuilder.create ( 'e' )  ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[ADD]^^60^^^^^41^72^[ADD] aceOptionGroup.addOption ( OptionBuilder.create ( 'e' )  ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^aceOptionGroup.addOption ( OptionBuilder .isRequired ( false )   ) ;^60^^^^^41^72^[REPLACE] aceOptionGroup.addOption ( OptionBuilder.create ( 'e' )  ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^aceOptions = new Options (  ) ; ;^62^^^^^41^72^[REPLACE] abcdeOptions = new Options (  ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^abcdeOptions .addOptionGroup ( og )  ;^63^^^^^41^72^[REPLACE] abcdeOptions.addOption ( OptionBuilder.create ( 'd' )  ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^abcdeOptions.addOption (   'd'    ) ;^63^^^^^41^72^[REPLACE] abcdeOptions.addOption ( OptionBuilder.create ( 'd' )  ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^GroupImpl group;^64^^^^^41^72^[REPLACE] OptionGroup og = new OptionGroup (  ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^og .addOptionGroup ( aceOptionGroup )  ;^65^^^^^41^72^[REPLACE] og.addOption ( OptionBuilder.create ( 'a' )  ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^og.addOption ( OptionBuilder.hasArgs ( 'a' )  ) ;^65^^^^^41^72^[REPLACE] og.addOption ( OptionBuilder.create ( 'a' )  ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^og.addOption ( OptionBuilder.hasArgs ( 'c' )  ) ;^66^^^^^41^72^[REPLACE] og.addOption ( OptionBuilder.create ( 'c' )  ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[ADD]^og.addOption ( OptionBuilder.create ( 'e' )  ) ;^66^67^^^^41^72^[ADD] og.addOption ( OptionBuilder.create ( 'c' )  ) ; og.addOption ( OptionBuilder.create ( 'e' )  ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[ADD]^^66^^^^^41^72^[ADD] og.addOption ( OptionBuilder.create ( 'c' )  ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^og .addOptionGroup ( og )  ;^67^^^^^41^72^[REPLACE] og.addOption ( OptionBuilder.create ( 'e' )  ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^og.addOption ( OptionBuilder .isRequired ( true )   ) ;^67^^^^^41^72^[REPLACE] og.addOption ( OptionBuilder.create ( 'e' )  ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^abcdeOptions.addOption ( og ) ;^68^^^^^41^72^[REPLACE] abcdeOptions.addOptionGroup ( og ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[ADD]^^68^^^^^41^72^[ADD] abcdeOptions.addOptionGroup ( og ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^abcdeOptions.addOptionGroup ( OptionBuilder.create ( 'b' )  ) ;^69^^^^^41^72^[REPLACE] abcdeOptions.addOption ( OptionBuilder.create ( 'b' )  ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^abcdeOptions.addOption ( OptionBuilder .isRequired ( false )   ) ;^69^^^^^41^72^[REPLACE] abcdeOptions.addOption ( OptionBuilder.create ( 'b' )  ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[ADD]^^69^^^^^41^72^[ADD] abcdeOptions.addOption ( OptionBuilder.create ( 'b' )  ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^pattern  = null ;^71^^^^^41^72^[REPLACE] pattern = PatternOptionBuilder.parsePattern ( "a%ce:" ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[ADD]^^71^^^^^41^72^[ADD] pattern = PatternOptionBuilder.parsePattern ( "a%ce:" ) ;^[METHOD] setUp [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^assertTrue ( e .isRequired ( false )   ) ;^78^^^^^77^91^[REPLACE] assertTrue ( e.isRequired (  )  ) ;^[METHOD] testOption [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^assertTrue ( e.getId (  )  ) ;^78^^^^^77^91^[REPLACE] assertTrue ( e.isRequired (  )  ) ;^[METHOD] testOption [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^assertEquals ( "[-a <arg>|-c|-e <arg>]",group.toString (  )  ) ;^80^^^^^77^91^[REPLACE] assertEquals ( "A description",a.getDescription (  )  ) ;^[METHOD] testOption [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^assertEquals ( "A description",a.getId (  )  ) ;^80^^^^^77^91^[REPLACE] assertEquals ( "A description",a.getDescription (  )  ) ;^[METHOD] testOption [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REMOVE]^assertEquals ( "[-a <arg>|-c|-e <arg>]",group.toString (  )  ) ;^80^^^^^77^91^[REMOVE] ^[METHOD] testOption [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^assertEquals ( 'a',a.isRequired (  )  ) ;^81^^^^^77^91^[REPLACE] assertEquals ( 'a',a.getId (  )  ) ;^[METHOD] testOption [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^assertEquals ( "[-a]",  a   .toString (  )  ) ;^82^^^^^77^91^[REPLACE] assertEquals ( "[-a]",CLI2Converter.option ( a ) .toString (  )  ) ;^[METHOD] testOption [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^assertEquals ( "[-a]",CLI2Converter.option ( a ) .assertTrue (  )  ) ;^82^^^^^77^91^[REPLACE] assertEquals ( "[-a]",CLI2Converter.option ( a ) .toString (  )  ) ;^[METHOD] testOption [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[ADD]^assertEquals ( "[-bbb]",CLI2Converter.option ( bbb ) .toString (  )  ) ;^82^83^^^^77^91^[ADD] assertEquals ( "[-a]",CLI2Converter.option ( a ) .toString (  )  ) ; assertEquals ( "[-bbb]",CLI2Converter.option ( bbb ) .toString (  )  ) ;^[METHOD] testOption [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^assertEquals ( "[-bbb]",CLI2Converter.option ( bbb ) .assertTrue (  )  ) ;^83^^^^^77^91^[REPLACE] assertEquals ( "[-bbb]",CLI2Converter.option ( bbb ) .toString (  )  ) ;^[METHOD] testOption [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[ADD]^^83^^^^^77^91^[ADD] assertEquals ( "[-bbb]",CLI2Converter.option ( bbb ) .toString (  )  ) ;^[METHOD] testOption [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^assertEquals ( "[-bbb]",CLI2Converter.group ( bbb ) .toString (  )  ) ;^83^^^^^77^91^[REPLACE] assertEquals ( "[-bbb]",CLI2Converter.option ( bbb ) .toString (  )  ) ;^[METHOD] testOption [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^assertEquals ( "[-c  ( --ccc ) ]",CLI2Converter.option ( c ) .assertTrue (  )  ) ;^84^^^^^77^91^[REPLACE] assertEquals ( "[-c  ( --ccc ) ]",CLI2Converter.option ( c ) .toString (  )  ) ;^[METHOD] testOption [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^assertEquals ( "[-c  ( --ccc ) ]",CLI2Converter.option ( c )  .assertTrue ( false )   ) ;^84^^^^^77^91^[REPLACE] assertEquals ( "[-c  ( --ccc ) ]",CLI2Converter.option ( c ) .toString (  )  ) ;^[METHOD] testOption [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^assertEquals ( "[-c  ( --ccc ) ]",CLI2Converter.group ( c ) .toString (  )  ) ;^84^^^^^77^91^[REPLACE] assertEquals ( "[-c  ( --ccc ) ]",CLI2Converter.option ( c ) .toString (  )  ) ;^[METHOD] testOption [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[ADD]^^84^85^^^^77^91^[ADD] assertEquals ( "[-c  ( --ccc ) ]",CLI2Converter.option ( c ) .toString (  )  ) ; assertEquals ( "[--ddd]",CLI2Converter.option ( ddd ) .toString (  )  ) ;^[METHOD] testOption [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^assertEquals ( "[-bbb]",CLI2Converter.option ( bbb ) .toString (  )  ) ;^85^^^^^77^91^[REPLACE] assertEquals ( "[--ddd]",CLI2Converter.option ( ddd ) .toString (  )  ) ;^[METHOD] testOption [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^assertEquals ( "[--ddd]",CLI2Converter.option ( ddd ) .assertTrue (  )  ) ;^85^^^^^77^91^[REPLACE] assertEquals ( "[--ddd]",CLI2Converter.option ( ddd ) .toString (  )  ) ;^[METHOD] testOption [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^assertEquals ( "[--ddd]",CLI2Converter.group ( ddd ) .toString (  )  ) ;^85^^^^^77^91^[REPLACE] assertEquals ( "[--ddd]",CLI2Converter.option ( ddd ) .toString (  )  ) ;^[METHOD] testOption [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REMOVE]^group =  ( GroupImpl ) CLI2Converter.group ( abcdeOptions ) ;^85^^^^^77^91^[REMOVE] ^[METHOD] testOption [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^assertEquals ( "-e",CLI2Converter.group ( e ) .toString (  )  ) ;^86^^^^^77^91^[REPLACE] assertEquals ( "-e",CLI2Converter.option ( e ) .toString (  )  ) ;^[METHOD] testOption [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^assertEquals ( "-e",CLI2Converter.option ( e )  .assertTrue ( false )   ) ;^86^^^^^77^91^[REPLACE] assertEquals ( "-e",CLI2Converter.option ( e ) .toString (  )  ) ;^[METHOD] testOption [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^assertEquals ( "[-f <argument>]",CLI2Converter.group ( f ) .toString (  )  ) ;^87^^^^^77^91^[REPLACE] assertEquals ( "[-f <argument>]",CLI2Converter.option ( f ) .toString (  )  ) ;^[METHOD] testOption [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[ADD]^^87^^^^^77^91^[ADD] assertEquals ( "[-f <argument>]",CLI2Converter.option ( f ) .toString (  )  ) ;^[METHOD] testOption [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^assertEquals ( "[-f <argument>]",  f   .toString (  )  ) ;^87^^^^^77^91^[REPLACE] assertEquals ( "[-f <argument>]",CLI2Converter.option ( f ) .toString (  )  ) ;^[METHOD] testOption [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^assertEquals ( "[-g <arg1> <arg2> <arg3> <arg4> <arg5>]",CLI2Converter.option ( g ) .assertTrue (  )  ) ;^88^^^^^77^91^[REPLACE] assertEquals ( "[-g <arg1> <arg2> <arg3> <arg4> <arg5>]",CLI2Converter.option ( g ) .toString (  )  ) ;^[METHOD] testOption [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[ADD]^^88^89^^^^77^91^[ADD] assertEquals ( "[-g <arg1> <arg2> <arg3> <arg4> <arg5>]",CLI2Converter.option ( g ) .toString (  )  ) ; assertEquals ( "[-h [<arg>]]",CLI2Converter.option ( h ) .toString (  )  ) ;^[METHOD] testOption [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^assertEquals ( "[-g <arg1> <arg2> <arg3> <arg4> <arg5>]",CLI2Converter.group ( g ) .toString (  )  ) ;^88^^^^^77^91^[REPLACE] assertEquals ( "[-g <arg1> <arg2> <arg3> <arg4> <arg5>]",CLI2Converter.option ( g ) .toString (  )  ) ;^[METHOD] testOption [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^assertEquals ( "[-h [<arg>]]",CLI2Converter.group ( h ) .toString (  )  ) ;^89^^^^^77^91^[REPLACE] assertEquals ( "[-h [<arg>]]",CLI2Converter.option ( h ) .toString (  )  ) ;^[METHOD] testOption [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^assertEquals ( "[-h [<arg>]]",CLI2Converter.option ( h ) .assertTrue (  )  ) ;^89^^^^^77^91^[REPLACE] assertEquals ( "[-h [<arg>]]",CLI2Converter.option ( h ) .toString (  )  ) ;^[METHOD] testOption [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[ADD]^^89^^^^^77^91^[ADD] assertEquals ( "[-h [<arg>]]",CLI2Converter.option ( h ) .toString (  )  ) ;^[METHOD] testOption [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^assertEquals ( "[-i [<arg1> [<arg2> [<arg3> [<arg4> [<arg5>]]]]]]",CLI2Converter.group ( i ) .toString (  )  ) ;^90^^^^^77^91^[REPLACE] assertEquals ( "[-i [<arg1> [<arg2> [<arg3> [<arg4> [<arg5>]]]]]]",CLI2Converter.option ( i ) .toString (  )  ) ;^[METHOD] testOption [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true 
[REPLACE]^OptionGroup og = new OptionGroup (  ) ;^96^^^^^95^108^[REPLACE] GroupImpl group;^[METHOD] testGroupOptionGroup [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true  [TYPE]  GroupImpl group 
[REPLACE]^group =  ( GroupImpl ) CLI2Converter.group ( abcdeOptions ) ; ;^98^^^^^95^108^[REPLACE] group =  ( GroupImpl ) CLI2Converter.group ( aceOptionGroup ) ;^[METHOD] testGroupOptionGroup [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true  [TYPE]  GroupImpl group 
[REPLACE]^assertEquals ( "[-a|-c|-e]",group.getMinimum (  )  ) ;^99^^^^^95^108^[REPLACE] assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;^[METHOD] testGroupOptionGroup [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true  [TYPE]  GroupImpl group 
[REPLACE]^assertEquals ( 3,group.getMinimum (  )  ) ;^100^^^^^95^108^[REPLACE] assertEquals ( 0,group.getMinimum (  )  ) ;^[METHOD] testGroupOptionGroup [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true  [TYPE]  GroupImpl group 
[REPLACE]^assertEquals ( 0,group .getMaximum (  )   ) ;^100^^^^^95^108^[REPLACE] assertEquals ( 0,group.getMinimum (  )  ) ;^[METHOD] testGroupOptionGroup [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true  [TYPE]  GroupImpl group 
[REPLACE]^assertEquals ( 1 * 4,group.getMaximum (  )  ) ;^101^^^^^95^108^[REPLACE] assertEquals ( 1,group.getMaximum (  )  ) ;^[METHOD] testGroupOptionGroup [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true  [TYPE]  GroupImpl group 
[ADD]^^101^^^^^95^108^[ADD] assertEquals ( 1,group.getMaximum (  )  ) ;^[METHOD] testGroupOptionGroup [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true  [TYPE]  GroupImpl group 
[REPLACE]^assertEquals ( 1,group.getMinimum (  )  ) ;^101^^^^^95^108^[REPLACE] assertEquals ( 1,group.getMaximum (  )  ) ;^[METHOD] testGroupOptionGroup [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true  [TYPE]  GroupImpl group 
[REPLACE]^aceOptionGroup .OptionGroup (  )  ;^103^^^^^95^108^[REPLACE] aceOptionGroup.setRequired ( true ) ;^[METHOD] testGroupOptionGroup [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true  [TYPE]  GroupImpl group 
[REPLACE]^group =  ( GroupImpl ) CLI2Converter.group ( abcdeOptions ) ; ;^104^^^^^95^108^[REPLACE] group =  ( GroupImpl ) CLI2Converter.group ( aceOptionGroup ) ;^[METHOD] testGroupOptionGroup [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true  [TYPE]  GroupImpl group 
[REPLACE]^assertEquals ( "[-a|-c|-e|-d|-b]",group.toString (  )  ) ;^105^^^^^95^108^[REPLACE] assertEquals ( "-a|-c|-e",group.toString (  )  ) ;^[METHOD] testGroupOptionGroup [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true  [TYPE]  GroupImpl group 
[REPLACE]^assertEquals ( "-a|-c|-e",group.getMinimum (  )  ) ;^105^^^^^95^108^[REPLACE] assertEquals ( "-a|-c|-e",group.toString (  )  ) ;^[METHOD] testGroupOptionGroup [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true  [TYPE]  GroupImpl group 
[REPLACE]^assertEquals ( 1L,group.getMinimum (  )  ) ;^106^^^^^95^108^[REPLACE] assertEquals ( 1,group.getMinimum (  )  ) ;^[METHOD] testGroupOptionGroup [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true  [TYPE]  GroupImpl group 
[REPLACE]^assertEquals ( 1,group .getMaximum (  )   ) ;^106^^^^^95^108^[REPLACE] assertEquals ( 1,group.getMinimum (  )  ) ;^[METHOD] testGroupOptionGroup [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true  [TYPE]  GroupImpl group 
[REPLACE]^assertEquals ( 2,group.getMaximum (  )  ) ;^107^^^^^95^108^[REPLACE] assertEquals ( 1,group.getMaximum (  )  ) ;^[METHOD] testGroupOptionGroup [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true  [TYPE]  GroupImpl group 
[REMOVE]^assertEquals ( "[-a <arg>|-c|-e <arg>]",group.toString (  )  ) ;^107^^^^^95^108^[REMOVE] ^[METHOD] testGroupOptionGroup [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true  [TYPE]  GroupImpl group 
[REPLACE]^assertEquals ( 1,group.getMinimum (  )  ) ;^107^^^^^95^108^[REPLACE] assertEquals ( 1,group.getMaximum (  )  ) ;^[METHOD] testGroupOptionGroup [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true  [TYPE]  GroupImpl group 
[REPLACE]^OptionGroup og = new OptionGroup (  ) ;^114^^^^^112^131^[REPLACE] GroupImpl group;^[METHOD] testGroupOptions [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true  [TYPE]  GroupImpl group 
[ADD]^^114^^^^^112^131^[ADD] GroupImpl group;^[METHOD] testGroupOptions [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true  [TYPE]  GroupImpl group 
[REPLACE]^group =  ( GroupImpl ) CLI2Converter.group ( abcdeOptions ) ; ;^116^^^^^112^131^[REPLACE] group =  ( GroupImpl ) CLI2Converter.group ( aceOptions ) ;^[METHOD] testGroupOptions [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true  [TYPE]  GroupImpl group 
[REPLACE]^assertEquals ( "[-a|-c|-e|-d|-b]",group.toString (  )  ) ;^117^^^^^112^131^[REPLACE] assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;^[METHOD] testGroupOptions [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true  [TYPE]  GroupImpl group 
[REPLACE]^assertEquals ( "[-a|-c|-e]",group .assertTrue ( false )   ) ;^117^^^^^112^131^[REPLACE] assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;^[METHOD] testGroupOptions [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true  [TYPE]  GroupImpl group 
[REPLACE]^assertEquals ( 0L,group.getMinimum (  )  ) ;^118^^^^^112^131^[REPLACE] assertEquals ( 0,group.getMinimum (  )  ) ;^[METHOD] testGroupOptions [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true  [TYPE]  GroupImpl group 
[REPLACE]^assertEquals ( 0,group.getMaximum (  )  ) ;^118^^^^^112^131^[REPLACE] assertEquals ( 0,group.getMinimum (  )  ) ;^[METHOD] testGroupOptions [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true  [TYPE]  GroupImpl group 
[ADD]^^118^119^^^^112^131^[ADD] assertEquals ( 0,group.getMinimum (  )  ) ; assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;^[METHOD] testGroupOptions [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true  [TYPE]  GroupImpl group 
[REPLACE]^assertEquals ( "[-a <arg>|-c|-e <arg>]",group.toString (  )  ) ;^119^^^^^112^131^[REPLACE] assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;^[METHOD] testGroupOptions [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true  [TYPE]  GroupImpl group 
[REPLACE]^assertEquals ( Integer.MAX_VALUE,group.getMinimum (  )  ) ;^119^^^^^112^131^[REPLACE] assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;^[METHOD] testGroupOptions [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true  [TYPE]  GroupImpl group 
[REPLACE]^group =  ( GroupImpl ) CLI2Converter.group ( aceOptionGroup ) ; ;^121^^^^^112^131^[REPLACE] group =  ( GroupImpl ) CLI2Converter.group ( abcdeOptions ) ;^[METHOD] testGroupOptions [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true  [TYPE]  GroupImpl group 
[REPLACE]^assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;^123^^^^^112^131^[REPLACE] assertEquals ( "[-a|-c|-e|-d|-b]",group.toString (  )  ) ;^[METHOD] testGroupOptions [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true  [TYPE]  GroupImpl group 
[REPLACE]^assertEquals ( 0L,group.getMinimum (  )  ) ;^124^^^^^112^131^[REPLACE] assertEquals ( 0,group.getMinimum (  )  ) ;^[METHOD] testGroupOptions [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true  [TYPE]  GroupImpl group 
[REPLACE]^assertEquals ( 0,group.getMaximum (  )  ) ;^124^^^^^112^131^[REPLACE] assertEquals ( 0,group.getMinimum (  )  ) ;^[METHOD] testGroupOptions [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true  [TYPE]  GroupImpl group 
[REMOVE]^assertEquals ( "[-a <arg>|-c|-e <arg>]",group.toString (  )  ) ;^124^^^^^112^131^[REMOVE] ^[METHOD] testGroupOptions [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true  [TYPE]  GroupImpl group 
[REPLACE]^assertEquals ( Integer.MAX_VALUE,group.getMinimum (  )  ) ;^125^^^^^112^131^[REPLACE] assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;^[METHOD] testGroupOptions [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true  [TYPE]  GroupImpl group 
[ADD]^^125^^^^^112^131^[ADD] assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;^[METHOD] testGroupOptions [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true  [TYPE]  GroupImpl group 
[REPLACE]^group =  ( GroupImpl ) CLI2Converter.group ( abcdeOptions ) ; ;^127^^^^^112^131^[REPLACE] group =  ( GroupImpl ) CLI2Converter.group ( pattern ) ;^[METHOD] testGroupOptions [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true  [TYPE]  GroupImpl group 
[REPLACE]^assertEquals ( "[-a <arg>|-c|-e <arg>]",group.getMinimum (  )  ) ;^128^^^^^112^131^[REPLACE] assertEquals ( "[-a <arg>|-c|-e <arg>]",group.toString (  )  ) ;^[METHOD] testGroupOptions [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true  [TYPE]  GroupImpl group 
[REPLACE]^assertEquals ( 0 / 0,group.getMinimum (  )  ) ;^129^^^^^112^131^[REPLACE] assertEquals ( 0,group.getMinimum (  )  ) ;^[METHOD] testGroupOptions [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true  [TYPE]  GroupImpl group 
[REPLACE]^assertEquals ( 0,group.getMaximum (  )  ) ;^129^^^^^112^131^[REPLACE] assertEquals ( 0,group.getMinimum (  )  ) ;^[METHOD] testGroupOptions [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true  [TYPE]  GroupImpl group 
[ADD]^^129^^^^^112^131^[ADD] assertEquals ( 0,group.getMinimum (  )  ) ;^[METHOD] testGroupOptions [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true  [TYPE]  GroupImpl group 
[REPLACE]^assertEquals ( Integer.MAX_VALUE,group.getMinimum (  )  ) ;^130^^^^^112^131^[REPLACE] assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;^[METHOD] testGroupOptions [TYPE] void [PARAMETER] [CLASS] CLI2ConverterTest   [TYPE]  Options abcdeOptions  aceOptions  pattern  [TYPE]  Option a  bbb  c  ddd  e  f  g  h  i  [TYPE]  OptionGroup aceOptionGroup  og  [TYPE]  boolean false  true  [TYPE]  GroupImpl group 
