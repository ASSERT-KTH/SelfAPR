[REPLACE]^private ArrayList tokens ;^33^^^^^^^[REPLACE] private ArrayList tokens = new ArrayList (  ) ;^ [CLASS] PosixParser  
[REPLACE]^eatTheRest = true;^51^^^^^49^54^[REPLACE] eatTheRest = false;^[METHOD] init [TYPE] void [PARAMETER] [CLASS] PosixParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  [TYPE]  boolean eatTheRest  false  true 
[REPLACE]^tokens.ArrayList (  ) ;^52^^^^^49^54^[REPLACE] tokens.clear (  ) ;^[METHOD] init [TYPE] void [PARAMETER] [CLASS] PosixParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  [TYPE]  boolean eatTheRest  false  true 
[ADD]^^52^^^^^49^54^[ADD] tokens.clear (  ) ;^[METHOD] init [TYPE] void [PARAMETER] [CLASS] PosixParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  [TYPE]  boolean eatTheRest  false  true 
[REPLACE]^currentOption = false;^53^^^^^49^54^[REPLACE] currentOption = null;^[METHOD] init [TYPE] void [PARAMETER] [CLASS] PosixParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  [TYPE]  boolean eatTheRest  false  true 
[REPLACE]^gobble ( iter ) ;^97^^^^^96^163^[REPLACE] init (  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^this.options =  null;^98^^^^^96^163^[REPLACE] this.options = options;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[ADD]^^98^^^^^96^163^[ADD] this.options = options;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^Iterator iter =   arguments   .iterator (  ) ;^101^^^^^96^163^[REPLACE] Iterator iter = Arrays.asList ( arguments ) .iterator (  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^String token = false;^102^^^^^96^163^[REPLACE] String token = null;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[ADD]^^105^106^107^^^96^163^[ADD] while  ( iter.hasNext (  )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^else if  ( token.startsWith ( "-" )  ) {^111^112^^^^105^160^[REPLACE] if  ( token.startsWith ( "--" )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^else {^126^127^^^^105^160^[REPLACE] else if  ( "-".equals ( token )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^if  ( token.startsWith ( "-" )  ) {^130^131^^^^105^160^[REPLACE] else if  ( token.startsWith ( "-" )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[ADD]^^130^131^132^^134^105^160^[ADD] else if  ( token.startsWith ( "-" )  ) { int tokenLength = token.length (  ) ; if  ( tokenLength == 2 )^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^if  ( true ) {^149^150^^^^130^157^[REPLACE] if  ( stopAtNonOption ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^tokens.toArray ( token ) ;^155^^^^^149^156^[REPLACE] tokens.add ( token ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^tokens.add ( "-" + ch ) ;^151^^^^^149^156^[REPLACE] process ( token ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^if  ( tokenLength  !=  2 ) {^134^135^^^^130^157^[REPLACE] if  ( tokenLength == 2 ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^else {^138^^^^^130^157^[REPLACE] else if  ( options.hasOption ( token )  )  {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^burstToken ( token, true ) ;^144^^^^^138^145^[REPLACE] burstToken ( token, stopAtNonOption ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^tokens.toArray ( token ) ;^139^^^^^130^157^[REPLACE] tokens.add ( token ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^burstToken ( token, stopAtNonOption ) ;^136^^^^^134^145^[REPLACE] processOptionToken ( token, stopAtNonOption ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^if  ( options.hasOption ( token )  )  {^138^^^^^130^157^[REPLACE] else if  ( options.hasOption ( token )  )  {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[ADD]^tokens.add ( token ) ;^138^139^140^^^130^157^[ADD] else if  ( options.hasOption ( token )  )  { tokens.add ( token ) ; }^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REMOVE]^tokens.add ( iter.next (  )  ) ;^139^^^^^130^157^[REMOVE] ^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^int tokenLength = token .startsWith ( token )  ;^132^^^^^130^157^[REPLACE] int tokenLength = token.length (  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[ADD]^^132^^^^^130^157^[ADD] int tokenLength = token.length (  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^if  ( tokenLength  !=  0 ) {^134^135^^^^105^160^[REPLACE] if  ( tokenLength == 2 ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^if  ( options.hasOption ( token )  )  {^138^^^^^105^160^[REPLACE] else if  ( options.hasOption ( token )  )  {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^tokens.toArray ( token ) ;^139^^^^^105^160^[REPLACE] tokens.add ( token ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[ADD]^^136^^^^^134^145^[ADD] processOptionToken ( token, stopAtNonOption ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^else {^138^^^^^105^160^[REPLACE] else if  ( options.hasOption ( token )  )  {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^boolean hasOption = options.hasOption ( ch ) ;^144^^^^^138^145^[REPLACE] burstToken ( token, stopAtNonOption ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^tokens .toArray ( false )  ;^139^^^^^105^160^[REPLACE] tokens.add ( token ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^if  ( true ) {^149^150^^^^105^160^[REPLACE] if  ( stopAtNonOption ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[ADD]^^149^150^151^152^^105^160^[ADD] if  ( stopAtNonOption ) { process ( token ) ; }^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^tokens .toArray ( null )  ;^155^^^^^149^156^[REPLACE] tokens.add ( token ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^String ch = String.valueOf ( token.charAt ( i )  ) ;^132^^^^^105^160^[REPLACE] int tokenLength = token.length (  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^gobble ( iter ) ;^128^^^^^126^157^[REPLACE] processSingleHyphen ( token ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^else {^130^131^^^^105^160^[REPLACE] else if  ( token.startsWith ( "-" )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^else if  ( stopAtNonOption ) {^149^150^^^^130^157^[REPLACE] if  ( stopAtNonOption ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^if  ( tokenLength  ||  2 ) {^134^135^^^^130^157^[REPLACE] if  ( tokenLength == 2 ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^processOptionToken ( token, true ) ;^136^^^^^134^145^[REPLACE] processOptionToken ( token, stopAtNonOption ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[ADD]^^144^^^^^138^145^[ADD] burstToken ( token, stopAtNonOption ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[ADD]^^139^^^^^130^157^[ADD] tokens.add ( token ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^String ch = String.valueOf ( token.charAt ( i )  ) ;^132^^^^^130^157^[REPLACE] int tokenLength = token.length (  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^if  ( tokenLength  &&  2 ) {^134^135^^^^105^160^[REPLACE] if  ( tokenLength == 2 ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[ADD]^tokens.add ( token ) ;^138^139^140^^^105^160^[ADD] else if  ( options.hasOption ( token )  )  { tokens.add ( token ) ; }^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REMOVE]^tokens.add ( token.substring ( i + 1 )  ) ;^144^^^^^138^145^[REMOVE] ^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^tokens .toArray ( null )  ;^139^^^^^105^160^[REPLACE] tokens.add ( token ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[ADD]^^139^^^^^105^160^[ADD] tokens.add ( token ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REMOVE]^tokens.add ( iter.next (  )  ) ;^155^^^^^149^156^[REMOVE] ^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REMOVE]^tokens.add ( iter.next (  )  ) ;^151^^^^^149^156^[REMOVE] ^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^int tokenLength = token .startsWith ( token )  ;^132^^^^^105^160^[REPLACE] int tokenLength = token.length (  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^if  ( token.indexOf ( '=' )   ==  -1 ) {^113^114^^^^111^157^[REPLACE] if  ( token.indexOf ( '=' )  != -1 ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^tokens.toArray ( token ) ;^121^^^^^113^122^[REPLACE] tokens.add ( token ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^tokens.add ( token.substring ( 0L, token.indexOf ( '=' )  )  ) ;^115^^^^^113^122^[REPLACE] tokens.add ( token.substring ( 0, token.indexOf ( '=' )  )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REMOVE]^tokens.add ( iter.next (  )  ) ;^115^^^^^113^122^[REMOVE] ^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^tokens.add ( token.substring ( 4, token.indexOf ( '=' )  )  ) ;^115^^^^^113^122^[REPLACE] tokens.add ( token.substring ( 0, token.indexOf ( '=' )  )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^tokens.add ( token.substring ( 0, token .valueOf ( null )   )  ) ;^115^^^^^113^122^[REPLACE] tokens.add ( token.substring ( 0, token.indexOf ( '=' )  )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^tokens.add ( token.substring ( token.indexOf ( '=' )  + 1, token.length (  )  *  2 )  ) ;^116^117^^^^113^122^[REPLACE] tokens.add ( token.substring ( token.indexOf ( '=' )  + 1, token.length (  )  )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^tokens.add ( token.substring ( token.indexOf ( '=' )  + 1, token.length (  )  - 5 )  ) ;^116^117^^^^113^122^[REPLACE] tokens.add ( token.substring ( token.indexOf ( '=' )  + 1, token.length (  )  )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^tokens.add ( token.substring ( token.charAt ( '=' )  + 1, token.length (  )  )  ) ;^116^117^^^^113^122^[REPLACE] tokens.add ( token.substring ( token.indexOf ( '=' )  + 1, token.length (  )  )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[ADD]^^116^117^^^^113^122^[ADD] tokens.add ( token.substring ( token.indexOf ( '=' )  + 1, token.length (  )  )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^token .startsWith ( token )   )  ) ;^117^^^^^113^122^[REPLACE] token.length (  )  )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^if  ( token.indexOf ( '=' )   ==  -1 ) {^113^114^^^^105^160^[REPLACE] if  ( token.indexOf ( '=' )  != -1 ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[ADD]^^113^114^115^116^117^105^160^[ADD] if  ( token.indexOf ( '=' )  != -1 ) { tokens.add ( token.substring ( 0, token.indexOf ( '=' )  )  ) ; tokens.add ( token.substring ( token.indexOf ( '=' )  + 1, token.length (  )  )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^tokens.add ( token.substring ( 0 % 1, token.indexOf ( '=' )  )  ) ;^115^^^^^113^122^[REPLACE] tokens.add ( token.substring ( 0, token.indexOf ( '=' )  )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^tokens.add ( token.substring ( 0, token .valueOf ( this )   )  ) ;^115^^^^^113^122^[REPLACE] tokens.add ( token.substring ( 0, token.indexOf ( '=' )  )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^tokens.add ( token.substring ( token.indexOf ( '=' )  + 1, token.size (  )  )  ) ;^116^117^^^^113^122^[REPLACE] tokens.add ( token.substring ( token.indexOf ( '=' )  + 1, token.length (  )  )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^tokens.add ( token.substring ( token.indexOf ( '=' )  + 1, token.length (  )  + 3 )  ) ;^116^117^^^^113^122^[REPLACE] tokens.add ( token.substring ( token.indexOf ( '=' )  + 1, token.length (  )  )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^tokens.add ( iter.next (  )  ) ;^117^^^^^113^122^[REPLACE] token.length (  )  )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[ADD]^^149^150^151^152^^130^157^[ADD] if  ( stopAtNonOption ) { process ( token ) ; }^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[ADD]^^151^^^^^149^156^[ADD] process ( token ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^if  ( tokenLength  !=  2 + 0 ) {^134^135^^^^130^157^[REPLACE] if  ( tokenLength == 2 ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[ADD]^^138^139^140^^^130^157^[ADD] else if  ( options.hasOption ( token )  )  { tokens.add ( token ) ; }^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^if  ( tokenLength  ||  2 ) {^134^135^^^^105^160^[REPLACE] if  ( tokenLength == 2 ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[ADD]^^138^139^140^^^105^160^[ADD] else if  ( options.hasOption ( token )  )  { tokens.add ( token ) ; }^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REMOVE]^tokens.add ( iter.next (  )  ) ;^139^^^^^105^160^[REMOVE] ^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REMOVE]^String ch = String.valueOf ( token.charAt ( i )  ) ;^136^^^^^134^145^[REMOVE] ^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^tokens .toArray ( 1 )  ;^139^^^^^130^157^[REPLACE] tokens.add ( token ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^if  ( tokenLength  ||  4 ) {^134^135^^^^105^160^[REPLACE] if  ( tokenLength == 2 ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^tokens .toArray ( true )  ;^139^^^^^105^160^[REPLACE] tokens.add ( token ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[ADD]^^155^^^^^149^156^[ADD] tokens.add ( token ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^token =   ( String )  null.next (  ) ;^108^^^^^105^160^[REPLACE] token =  ( String )  iter.next (  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^else if  ( token.startsWith ( "-" )  ) {^111^112^^^^96^163^[REPLACE] if  ( token.startsWith ( "--" )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[ADD]^^111^112^113^114^115^96^163^[ADD] if  ( token.startsWith ( "--" )  ) { if  ( token.indexOf ( '=' )  != -1 ) { tokens.add ( token.substring ( 0, token.indexOf ( '=' )  )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^if  ( "-".equals ( token )  ) {^126^127^^^^96^163^[REPLACE] else if  ( "-".equals ( token )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[ADD]^^126^127^128^129^^96^163^[ADD] else if  ( "-".equals ( token )  ) { processSingleHyphen ( token ) ; }^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^else {^130^131^^^^96^163^[REPLACE] else if  ( token.startsWith ( "-" )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[ADD]^^130^131^132^^134^96^163^[ADD] else if  ( token.startsWith ( "-" )  ) { int tokenLength = token.length (  ) ; if  ( tokenLength == 2 )^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^if  ( tokenLength  &&  2 ) {^134^135^^^^130^157^[REPLACE] if  ( tokenLength == 2 ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[ADD]^^134^135^136^137^^130^157^[ADD] if  ( tokenLength == 2 ) { processOptionToken ( token, stopAtNonOption ) ; }^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^else if  ( currentOption.hasArgs (  )  ) {^138^^^^^130^157^[REPLACE] else if  ( options.hasOption ( token )  )  {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^if  ( tokenLength  !=  2 << 0 ) {^134^135^^^^96^163^[REPLACE] if  ( tokenLength == 2 ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^else {^138^^^^^96^163^[REPLACE] else if  ( options.hasOption ( token )  )  {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^tokens.toArray ( token ) ;^139^^^^^96^163^[REPLACE] tokens.add ( token ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^if  ( options.hasOption ( token )  )  {^138^^^^^96^163^[REPLACE] else if  ( options.hasOption ( token )  )  {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[ADD]^tokens.add ( token ) ;^138^139^140^^^96^163^[ADD] else if  ( options.hasOption ( token )  )  { tokens.add ( token ) ; }^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^if  ( true ) {^149^150^^^^96^163^[REPLACE] if  ( stopAtNonOption ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^int tokenLength = token .startsWith ( token )  ;^132^^^^^96^163^[REPLACE] int tokenLength = token.length (  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^if  ( token.startsWith ( "-" )  ) {^130^131^^^^96^163^[REPLACE] else if  ( token.startsWith ( "-" )  ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^tokens .toArray ( 0 )  ;^155^^^^^149^156^[REPLACE] tokens.add ( token ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^tokens .toArray ( false )  ;^139^^^^^130^157^[REPLACE] tokens.add ( token ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^if  ( tokenLength  !=  2 ) {^134^135^^^^96^163^[REPLACE] if  ( tokenLength == 2 ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REMOVE]^tokens.add ( iter.next (  )  ) ;^139^^^^^96^163^[REMOVE] ^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^tokens .toArray ( this )  ;^121^^^^^113^122^[REPLACE] tokens.add ( token ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^tokens.add ( token.substring ( 2, token.indexOf ( '=' )  )  ) ;^115^^^^^113^122^[REPLACE] tokens.add ( token.substring ( 0, token.indexOf ( '=' )  )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[ADD]^^115^^^^^113^122^[ADD] tokens.add ( token.substring ( 0, token.indexOf ( '=' )  )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^tokens.add ( token.substring ( 0, token.charAt ( '=' )  )  ) ;^115^^^^^113^122^[REPLACE] tokens.add ( token.substring ( 0, token.indexOf ( '=' )  )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^tokens.add ( token.substring ( token.indexOf ( '=' )  + 1, token.length (  )  + 4 )  ) ;^116^117^^^^113^122^[REPLACE] tokens.add ( token.substring ( token.indexOf ( '=' )  + 1, token.length (  )  )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[ADD]^^117^^^^^113^122^[ADD] token.length (  )  )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^if  ( token.indexOf ( '=' )   ==  -1 ) {^113^114^^^^96^163^[REPLACE] if  ( token.indexOf ( '=' )  != -1 ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[ADD]^^113^114^115^116^117^96^163^[ADD] if  ( token.indexOf ( '=' )  != -1 ) { tokens.add ( token.substring ( 0, token.indexOf ( '=' )  )  ) ; tokens.add ( token.substring ( token.indexOf ( '=' )  + 1, token.length (  )  )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^tokens.add ( token.substring ( 0 * 4, token.indexOf ( '=' )  )  ) ;^115^^^^^113^122^[REPLACE] tokens.add ( token.substring ( 0, token.indexOf ( '=' )  )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^tokens.add ( token.length ( token.indexOf ( '=' )  + 1, token.length (  )  *  0.5  )  ) ;^116^117^^^^113^122^[REPLACE] tokens.add ( token.substring ( token.indexOf ( '=' )  + 1, token.length (  )  )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^tokens.add ( token.substring ( token.indexOf ( '=' )  + 1, token.length (  )  %  0.5  )  ) ;^116^117^^^^113^122^[REPLACE] tokens.add ( token.substring ( token.indexOf ( '=' )  + 1, token.length (  )  )  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^if  ( tokenLength  ||  0 ) {^134^135^^^^96^163^[REPLACE] if  ( tokenLength == 2 ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^tokens .toArray ( null )  ;^139^^^^^96^163^[REPLACE] tokens.add ( token ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[ADD]^^139^^^^^96^163^[ADD] tokens.add ( token ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^else if  ( stopAtNonOption ) {^149^150^^^^96^163^[REPLACE] if  ( stopAtNonOption ) {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^String ch = String.valueOf ( token.charAt ( i )  ) ;^132^^^^^96^163^[REPLACE] int tokenLength = token.length (  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^tokens .toArray ( null )  ;^139^^^^^130^157^[REPLACE] tokens.add ( token ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^if  ( options.getOption ( token )  )  {^138^^^^^96^163^[REPLACE] else if  ( options.hasOption ( token )  )  {^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^tokens .toArray ( this )  ;^139^^^^^96^163^[REPLACE] tokens.add ( token ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[ADD]^^149^150^151^152^^96^163^[ADD] if  ( stopAtNonOption ) { process ( token ) ; }^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^token =   ( String )  null.next (  ) ;^108^^^^^96^163^[REPLACE] token =  ( String )  iter.next (  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[ADD]^^132^^^^^96^163^[ADD] int tokenLength = token.length (  ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^return  ( String[] )  tokens.ArrayList ( new String[] {  } ) ;^162^^^^^96^163^[REPLACE] return  ( String[] )  tokens.toArray ( new String[] {  } ) ;^[METHOD] flatten [TYPE] String[] [PARAMETER] Options options String[] arguments boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  Options options  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Option currentOption  [TYPE]  String[] arguments  [TYPE]  String token  [TYPE]  int tokenLength 
[REPLACE]^while  ( iter.next (  )  ) {^174^175^^^^170^179^[REPLACE] while  ( iter.hasNext (  )  ) {^[METHOD] gobble [TYPE] void [PARAMETER] Iterator iter [CLASS] PosixParser   [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Options options  [TYPE]  Option currentOption  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true 
[REPLACE]^tokens .toArray ( null )  ;^176^^^^^170^179^[REPLACE] tokens.add ( iter.next (  )  ) ;^[METHOD] gobble [TYPE] void [PARAMETER] Iterator iter [CLASS] PosixParser   [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Options options  [TYPE]  Option currentOption  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true 
[REPLACE]^tokens.add ( iter .hasNext (  )   ) ;^176^^^^^170^179^[REPLACE] tokens.add ( iter.next (  )  ) ;^[METHOD] gobble [TYPE] void [PARAMETER] Iterator iter [CLASS] PosixParser   [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Options options  [TYPE]  Option currentOption  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true 
[REPLACE]^else if  ( currentOption.hasArgs (  )  ) {^172^173^^^^170^179^[REPLACE] if  ( eatTheRest ) {^[METHOD] gobble [TYPE] void [PARAMETER] Iterator iter [CLASS] PosixParser   [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Options options  [TYPE]  Option currentOption  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true 
[REPLACE]^tokens.toArray ( iter.next (  )  ) ;^176^^^^^170^179^[REPLACE] tokens.add ( iter.next (  )  ) ;^[METHOD] gobble [TYPE] void [PARAMETER] Iterator iter [CLASS] PosixParser   [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Options options  [TYPE]  Option currentOption  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true 
[REPLACE]^tokens.add ( iter.hasNext (  )  ) ;^176^^^^^170^179^[REPLACE] tokens.add ( iter.next (  )  ) ;^[METHOD] gobble [TYPE] void [PARAMETER] Iterator iter [CLASS] PosixParser   [TYPE]  ArrayList tokens  [TYPE]  Iterator iter  [TYPE]  Options options  [TYPE]  Option currentOption  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true 
[REPLACE]^if  (  ( currentOption == this )  ) {^196^197^^^^194^214^[REPLACE] if  (  ( currentOption != null )  && currentOption.hasArg (  )  ) {^[METHOD] process [TYPE] void [PARAMETER] String value [CLASS] PosixParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  String value 
[REPLACE]^eatTheRest = false; ;^210^^^^^194^214^[REPLACE] eatTheRest = true;^[METHOD] process [TYPE] void [PARAMETER] String value [CLASS] PosixParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  String value 
[REPLACE]^else if  ( currentOption.hasArgs (  )  ) {^198^199^^^^194^214^[REPLACE] if  ( currentOption.hasArg (  )  ) {^[METHOD] process [TYPE] void [PARAMETER] String value [CLASS] PosixParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  String value 
[REPLACE]^else {^203^204^^^^194^214^[REPLACE] else if  ( currentOption.hasArgs (  )  ) {^[METHOD] process [TYPE] void [PARAMETER] String value [CLASS] PosixParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  String value 
[ADD]^^203^204^205^206^^194^214^[ADD] else if  ( currentOption.hasArgs (  )  ) { tokens.add ( value ) ; }^[METHOD] process [TYPE] void [PARAMETER] String value [CLASS] PosixParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  String value 
[REPLACE]^tokens.toArray ( value ) ;^205^^^^^194^214^[REPLACE] tokens.add ( value ) ;^[METHOD] process [TYPE] void [PARAMETER] String value [CLASS] PosixParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  String value 
[ADD]^^205^^^^^194^214^[ADD] tokens.add ( value ) ;^[METHOD] process [TYPE] void [PARAMETER] String value [CLASS] PosixParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  String value 
[REPLACE]^currentOption = this;^201^^^^^194^214^[REPLACE] currentOption = null;^[METHOD] process [TYPE] void [PARAMETER] String value [CLASS] PosixParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  String value 
[REPLACE]^currentOption = true;^201^^^^^194^214^[REPLACE] currentOption = null;^[METHOD] process [TYPE] void [PARAMETER] String value [CLASS] PosixParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  String value 
[ADD]^^198^199^200^201^202^194^214^[ADD] if  ( currentOption.hasArg (  )  ) { tokens.add ( value ) ; currentOption = null; }^[METHOD] process [TYPE] void [PARAMETER] String value [CLASS] PosixParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  String value 
[REPLACE]^else if  ( currentOption.hasArgs (  )  )^203^204^^^^194^214^[REPLACE] else if  ( currentOption.hasArgs (  )  ) {^[METHOD] process [TYPE] void [PARAMETER] String value [CLASS] PosixParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  String value 
[REPLACE]^else if  ( currentOption.hasArg (  )  ) {^203^204^^^^194^214^[REPLACE] else if  ( currentOption.hasArgs (  )  ) {^[METHOD] process [TYPE] void [PARAMETER] String value [CLASS] PosixParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  String value 
[REPLACE]^currentOption = false;^201^^^^^194^214^[REPLACE] currentOption = null;^[METHOD] process [TYPE] void [PARAMETER] String value [CLASS] PosixParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  String value 
[REPLACE]^eatTheRest = false;^210^^^^^194^214^[REPLACE] eatTheRest = true;^[METHOD] process [TYPE] void [PARAMETER] String value [CLASS] PosixParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  String value 
[REPLACE]^tokens.toArray ( hyphen ) ;^224^^^^^222^225^[REPLACE] tokens.add ( hyphen ) ;^[METHOD] processSingleHyphen [TYPE] void [PARAMETER] String hyphen [CLASS] PosixParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  String hyphen 
[REPLACE]^if  ( this.options.getOption ( token )  ) {^241^242^^^^239^250^[REPLACE] if  ( this.options.hasOption ( token )  ) {^[METHOD] processOptionToken [TYPE] void [PARAMETER] String token boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  String token 
[REPLACE]^else {^246^247^^^^239^250^[REPLACE] else if  ( stopAtNonOption ) {^[METHOD] processOptionToken [TYPE] void [PARAMETER] String token boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  String token 
[REPLACE]^eatTheRest = false;^248^^^^^239^250^[REPLACE] eatTheRest = true;^[METHOD] processOptionToken [TYPE] void [PARAMETER] String token boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  String token 
[REPLACE]^currentOption = options.getOption ( ch ) ; ;^243^^^^^239^250^[REPLACE] currentOption = this.options.getOption ( token ) ;^[METHOD] processOptionToken [TYPE] void [PARAMETER] String token boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  String token 
[ADD]^^243^244^^^^239^250^[ADD] currentOption = this.options.getOption ( token ) ; tokens.add ( token ) ;^[METHOD] processOptionToken [TYPE] void [PARAMETER] String token boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  String token 
[REPLACE]^if  ( true ) {^246^247^^^^239^250^[REPLACE] else if  ( stopAtNonOption ) {^[METHOD] processOptionToken [TYPE] void [PARAMETER] String token boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  [TYPE]  boolean eatTheRest  false  stopAtNonOption  true  [TYPE]  String token 
[REPLACE]^int tokenLength = token .startsWith ( token )  ;^280^^^^^279^308^[REPLACE] int tokenLength = token.length (  ) ;^[METHOD] burstToken [TYPE] void [PARAMETER] String token boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  [TYPE]  boolean eatTheRest  false  hasOption  stopAtNonOption  true  [TYPE]  String ch  token  [TYPE]  int i  tokenLength 
[REPLACE]^else if  ( currentOption.hasArgs (  )  ) {^287^288^^^^279^308^[REPLACE] if  ( hasOption ) {^[METHOD] burstToken [TYPE] void [PARAMETER] String token boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  [TYPE]  boolean eatTheRest  false  hasOption  stopAtNonOption  true  [TYPE]  String ch  token  [TYPE]  int i  tokenLength 
[ADD]^^287^288^289^290^^279^308^[ADD] if  ( hasOption ) { tokens.add ( "-" + ch ) ; currentOption = options.getOption ( ch ) ;^[METHOD] burstToken [TYPE] void [PARAMETER] String token boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  [TYPE]  boolean eatTheRest  false  hasOption  stopAtNonOption  true  [TYPE]  String ch  token  [TYPE]  int i  tokenLength 
[REPLACE]^else if  ( true ) {^299^300^^^^279^308^[REPLACE] else if  ( stopAtNonOption ) {^[METHOD] burstToken [TYPE] void [PARAMETER] String token boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  [TYPE]  boolean eatTheRest  false  hasOption  stopAtNonOption  true  [TYPE]  String ch  token  [TYPE]  int i  tokenLength 
[ADD]^^299^300^301^302^^279^308^[ADD] else if  ( stopAtNonOption ) { process ( token.substring ( i )  ) ; }^[METHOD] burstToken [TYPE] void [PARAMETER] String token boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  [TYPE]  boolean eatTheRest  false  hasOption  stopAtNonOption  true  [TYPE]  String ch  token  [TYPE]  int i  tokenLength 
[REPLACE]^tokens.add ( "-"  !=  ch ) ;^305^^^^^299^306^[REPLACE] tokens.add ( "-" + ch ) ;^[METHOD] burstToken [TYPE] void [PARAMETER] String token boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  [TYPE]  boolean eatTheRest  false  hasOption  stopAtNonOption  true  [TYPE]  String ch  token  [TYPE]  int i  tokenLength 
[REPLACE]^process ( token.charAt ( i )  ) ;^301^^^^^299^306^[REPLACE] process ( token.substring ( i )  ) ;^[METHOD] burstToken [TYPE] void [PARAMETER] String token boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  [TYPE]  boolean eatTheRest  false  hasOption  stopAtNonOption  true  [TYPE]  String ch  token  [TYPE]  int i  tokenLength 
[REMOVE]^tokens.add ( iter.next (  )  ) ;^301^^^^^299^306^[REMOVE] ^[METHOD] burstToken [TYPE] void [PARAMETER] String token boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  [TYPE]  boolean eatTheRest  false  hasOption  stopAtNonOption  true  [TYPE]  String ch  token  [TYPE]  int i  tokenLength 
[REPLACE]^process ( token .substring ( tokenLength , tokenLength )   ) ;^301^^^^^299^306^[REPLACE] process ( token.substring ( i )  ) ;^[METHOD] burstToken [TYPE] void [PARAMETER] String token boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  [TYPE]  boolean eatTheRest  false  hasOption  stopAtNonOption  true  [TYPE]  String ch  token  [TYPE]  int i  tokenLength 
[REPLACE]^if  ( currentOption.hasArg (  )  &&  ( token.length (  )  - 3 !=  ( i + 1 )  )  ) {^292^293^^^^287^306^[REPLACE] if  ( currentOption.hasArg (  )  &&  ( token.length (  )  !=  ( i + 1 )  )  ) {^[METHOD] burstToken [TYPE] void [PARAMETER] String token boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  [TYPE]  boolean eatTheRest  false  hasOption  stopAtNonOption  true  [TYPE]  String ch  token  [TYPE]  int i  tokenLength 
[REPLACE]^tokens.toArray ( token.substring ( i  ||  3 )  ) ;^294^^^^^287^306^[REPLACE] tokens.add ( token.substring ( i + 1 )  ) ;^[METHOD] burstToken [TYPE] void [PARAMETER] String token boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  [TYPE]  boolean eatTheRest  false  hasOption  stopAtNonOption  true  [TYPE]  String ch  token  [TYPE]  int i  tokenLength 
[REPLACE]^tokens.add ( token.substring ( i  ==  1 )  ) ;^294^^^^^287^306^[REPLACE] tokens.add ( token.substring ( i + 1 )  ) ;^[METHOD] burstToken [TYPE] void [PARAMETER] String token boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  [TYPE]  boolean eatTheRest  false  hasOption  stopAtNonOption  true  [TYPE]  String ch  token  [TYPE]  int i  tokenLength 
[REPLACE]^currentOption = this.options.getOption ( token ) ; ;^290^^^^^287^306^[REPLACE] currentOption = options.getOption ( ch ) ;^[METHOD] burstToken [TYPE] void [PARAMETER] String token boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  [TYPE]  boolean eatTheRest  false  hasOption  stopAtNonOption  true  [TYPE]  String ch  token  [TYPE]  int i  tokenLength 
[REPLACE]^if  ( currentOption.hasArg (  )  ) {^292^293^^^^279^308^[REPLACE] if  ( currentOption.hasArg (  )  &&  ( token.length (  )  !=  ( i + 1 )  )  ) {^[METHOD] burstToken [TYPE] void [PARAMETER] String token boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  [TYPE]  boolean eatTheRest  false  hasOption  stopAtNonOption  true  [TYPE]  String ch  token  [TYPE]  int i  tokenLength 
[REPLACE]^tokens.add ( token.substring ( i  &  1 )  ) ;^294^^^^^292^297^[REPLACE] tokens.add ( token.substring ( i + 1 )  ) ;^[METHOD] burstToken [TYPE] void [PARAMETER] String token boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  [TYPE]  boolean eatTheRest  false  hasOption  stopAtNonOption  true  [TYPE]  String ch  token  [TYPE]  int i  tokenLength 
[REPLACE]^tokens.add ( token.substring ( i  |  4 )  ) ;^294^^^^^292^297^[REPLACE] tokens.add ( token.substring ( i + 1 )  ) ;^[METHOD] burstToken [TYPE] void [PARAMETER] String token boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  [TYPE]  boolean eatTheRest  false  hasOption  stopAtNonOption  true  [TYPE]  String ch  token  [TYPE]  int i  tokenLength 
[REPLACE]^if  ( stopAtNonOption ) {^299^300^^^^279^308^[REPLACE] else if  ( stopAtNonOption ) {^[METHOD] burstToken [TYPE] void [PARAMETER] String token boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  [TYPE]  boolean eatTheRest  false  hasOption  stopAtNonOption  true  [TYPE]  String ch  token  [TYPE]  int i  tokenLength 
[REPLACE]^tokens.add ( "-"  <=  ch ) ;^305^^^^^299^306^[REPLACE] tokens.add ( "-" + ch ) ;^[METHOD] burstToken [TYPE] void [PARAMETER] String token boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  [TYPE]  boolean eatTheRest  false  hasOption  stopAtNonOption  true  [TYPE]  String ch  token  [TYPE]  int i  tokenLength 
[REMOVE]^tokens.add ( iter.next (  )  ) ;^305^^^^^299^306^[REMOVE] ^[METHOD] burstToken [TYPE] void [PARAMETER] String token boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  [TYPE]  boolean eatTheRest  false  hasOption  stopAtNonOption  true  [TYPE]  String ch  token  [TYPE]  int i  tokenLength 
[REPLACE]^tokens.add ( iter.next (  )  ) ;^301^^^^^299^306^[REPLACE] process ( token.substring ( i )  ) ;^[METHOD] burstToken [TYPE] void [PARAMETER] String token boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  [TYPE]  boolean eatTheRest  false  hasOption  stopAtNonOption  true  [TYPE]  String ch  token  [TYPE]  int i  tokenLength 
[REPLACE]^for  ( int i = 1; i  >  tokenLength; i++ ) {^282^283^^^^279^308^[REPLACE] for  ( int i = 1; i < tokenLength; i++ ) {^[METHOD] burstToken [TYPE] void [PARAMETER] String token boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  [TYPE]  boolean eatTheRest  false  hasOption  stopAtNonOption  true  [TYPE]  String ch  token  [TYPE]  int i  tokenLength 
[ADD]^^282^283^284^285^^279^308^[ADD] for  ( int i = 1; i < tokenLength; i++ ) { String ch = String.valueOf ( token.charAt ( i )  ) ; boolean hasOption = options.hasOption ( ch ) ;^[METHOD] burstToken [TYPE] void [PARAMETER] String token boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  [TYPE]  boolean eatTheRest  false  hasOption  stopAtNonOption  true  [TYPE]  String ch  token  [TYPE]  int i  tokenLength 
[REPLACE]^else if  ( currentOption.hasArgs (  )  ) {^287^288^^^^282^307^[REPLACE] if  ( hasOption ) {^[METHOD] burstToken [TYPE] void [PARAMETER] String token boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  [TYPE]  boolean eatTheRest  false  hasOption  stopAtNonOption  true  [TYPE]  String ch  token  [TYPE]  int i  tokenLength 
[ADD]^^287^288^289^290^^282^307^[ADD] if  ( hasOption ) { tokens.add ( "-" + ch ) ; currentOption = options.getOption ( ch ) ;^[METHOD] burstToken [TYPE] void [PARAMETER] String token boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  [TYPE]  boolean eatTheRest  false  hasOption  stopAtNonOption  true  [TYPE]  String ch  token  [TYPE]  int i  tokenLength 
[REPLACE]^if  ( stopAtNonOption ) {^299^300^^^^282^307^[REPLACE] else if  ( stopAtNonOption ) {^[METHOD] burstToken [TYPE] void [PARAMETER] String token boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  [TYPE]  boolean eatTheRest  false  hasOption  stopAtNonOption  true  [TYPE]  String ch  token  [TYPE]  int i  tokenLength 
[REPLACE]^tokens.add ( "-"  &  ch ) ;^305^^^^^282^307^[REPLACE] tokens.add ( "-" + ch ) ;^[METHOD] burstToken [TYPE] void [PARAMETER] String token boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  [TYPE]  boolean eatTheRest  false  hasOption  stopAtNonOption  true  [TYPE]  String ch  token  [TYPE]  int i  tokenLength 
[REPLACE]^process ( token.charAt ( i )  ) ;^301^^^^^282^307^[REPLACE] process ( token.substring ( i )  ) ;^[METHOD] burstToken [TYPE] void [PARAMETER] String token boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  [TYPE]  boolean eatTheRest  false  hasOption  stopAtNonOption  true  [TYPE]  String ch  token  [TYPE]  int i  tokenLength 
[REPLACE]^process ( token .substring ( i , i )   ) ;^301^^^^^282^307^[REPLACE] process ( token.substring ( i )  ) ;^[METHOD] burstToken [TYPE] void [PARAMETER] String token boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  [TYPE]  boolean eatTheRest  false  hasOption  stopAtNonOption  true  [TYPE]  String ch  token  [TYPE]  int i  tokenLength 
[REPLACE]^if  ( currentOption.hasArg (  )  ) {^292^293^^^^282^307^[REPLACE] if  ( currentOption.hasArg (  )  &&  ( token.length (  )  !=  ( i + 1 )  )  ) {^[METHOD] burstToken [TYPE] void [PARAMETER] String token boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  [TYPE]  boolean eatTheRest  false  hasOption  stopAtNonOption  true  [TYPE]  String ch  token  [TYPE]  int i  tokenLength 
[REPLACE]^tokens.add ( token.substring ( i  ==  1 - 1 )  ) ;^294^^^^^282^307^[REPLACE] tokens.add ( token.substring ( i + 1 )  ) ;^[METHOD] burstToken [TYPE] void [PARAMETER] String token boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  [TYPE]  boolean eatTheRest  false  hasOption  stopAtNonOption  true  [TYPE]  String ch  token  [TYPE]  int i  tokenLength 
[REPLACE]^tokens.add ( token.length ( i  <  1 )  ) ;^294^^^^^282^307^[REPLACE] tokens.add ( token.substring ( i + 1 )  ) ;^[METHOD] burstToken [TYPE] void [PARAMETER] String token boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  [TYPE]  boolean eatTheRest  false  hasOption  stopAtNonOption  true  [TYPE]  String ch  token  [TYPE]  int i  tokenLength 
[REPLACE]^currentOption = this.options.getOption ( token ) ; ;^290^^^^^282^307^[REPLACE] currentOption = options.getOption ( ch ) ;^[METHOD] burstToken [TYPE] void [PARAMETER] String token boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  [TYPE]  boolean eatTheRest  false  hasOption  stopAtNonOption  true  [TYPE]  String ch  token  [TYPE]  int i  tokenLength 
[REPLACE]^if  ( currentOption.hasArg (  )  &&  ( token.length (  )  *  2 !=  ( i + 1 )  )  ) {^292^293^^^^282^307^[REPLACE] if  ( currentOption.hasArg (  )  &&  ( token.length (  )  !=  ( i + 1 )  )  ) {^[METHOD] burstToken [TYPE] void [PARAMETER] String token boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  [TYPE]  boolean eatTheRest  false  hasOption  stopAtNonOption  true  [TYPE]  String ch  token  [TYPE]  int i  tokenLength 
[ADD]^^292^293^294^^296^282^307^[ADD] if  ( currentOption.hasArg (  )  &&  ( token.length (  )  !=  ( i + 1 )  )  ) { tokens.add ( token.substring ( i + 1 )  ) ; break;^[METHOD] burstToken [TYPE] void [PARAMETER] String token boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  [TYPE]  boolean eatTheRest  false  hasOption  stopAtNonOption  true  [TYPE]  String ch  token  [TYPE]  int i  tokenLength 
[REPLACE]^tokens.add ( token.length ( i  &&  1 )  ) ;^294^^^^^282^307^[REPLACE] tokens.add ( token.substring ( i + 1 )  ) ;^[METHOD] burstToken [TYPE] void [PARAMETER] String token boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  [TYPE]  boolean eatTheRest  false  hasOption  stopAtNonOption  true  [TYPE]  String ch  token  [TYPE]  int i  tokenLength 
[REPLACE]^tokens.add ( token.substring ( i  >=  2 )  ) ;^294^^^^^282^307^[REPLACE] tokens.add ( token.substring ( i + 1 )  ) ;^[METHOD] burstToken [TYPE] void [PARAMETER] String token boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  [TYPE]  boolean eatTheRest  false  hasOption  stopAtNonOption  true  [TYPE]  String ch  token  [TYPE]  int i  tokenLength 
[REMOVE]^tokens.add ( iter.next (  )  ) ;^294^^^^^282^307^[REMOVE] ^[METHOD] burstToken [TYPE] void [PARAMETER] String token boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  [TYPE]  boolean eatTheRest  false  hasOption  stopAtNonOption  true  [TYPE]  String ch  token  [TYPE]  int i  tokenLength 
[REPLACE]^tokens.clear ( "-"  >=  ch ) ;^305^^^^^282^307^[REPLACE] tokens.add ( "-" + ch ) ;^[METHOD] burstToken [TYPE] void [PARAMETER] String token boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  [TYPE]  boolean eatTheRest  false  hasOption  stopAtNonOption  true  [TYPE]  String ch  token  [TYPE]  int i  tokenLength 
[REMOVE]^tokens.add ( iter.next (  )  ) ;^305^^^^^282^307^[REMOVE] ^[METHOD] burstToken [TYPE] void [PARAMETER] String token boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  [TYPE]  boolean eatTheRest  false  hasOption  stopAtNonOption  true  [TYPE]  String ch  token  [TYPE]  int i  tokenLength 
[REPLACE]^tokens.add ( iter.next (  )  ) ;^301^^^^^282^307^[REPLACE] process ( token.substring ( i )  ) ;^[METHOD] burstToken [TYPE] void [PARAMETER] String token boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  [TYPE]  boolean eatTheRest  false  hasOption  stopAtNonOption  true  [TYPE]  String ch  token  [TYPE]  int i  tokenLength 
[REPLACE]^String ch = String .indexOf ( tokenLength )  ;^284^^^^^282^307^[REPLACE] String ch = String.valueOf ( token.charAt ( i )  ) ;^[METHOD] burstToken [TYPE] void [PARAMETER] String token boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  [TYPE]  boolean eatTheRest  false  hasOption  stopAtNonOption  true  [TYPE]  String ch  token  [TYPE]  int i  tokenLength 
[REPLACE]^boolean.getOption = options.hasOption ( ch ) ;^285^^^^^282^307^[REPLACE] boolean hasOption = options.hasOption ( ch ) ;^[METHOD] burstToken [TYPE] void [PARAMETER] String token boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  [TYPE]  boolean eatTheRest  false  hasOption  stopAtNonOption  true  [TYPE]  String ch  token  [TYPE]  int i  tokenLength 
[REPLACE]^currentOption = this.options.getOption ( token ) ; ;^290^^^^^279^308^[REPLACE] currentOption = options.getOption ( ch ) ;^[METHOD] burstToken [TYPE] void [PARAMETER] String token boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  [TYPE]  boolean eatTheRest  false  hasOption  stopAtNonOption  true  [TYPE]  String ch  token  [TYPE]  int i  tokenLength 
[REPLACE]^for  ( int i = 1L; i < tokenLength; i++ ) {^282^283^^^^279^308^[REPLACE] for  ( int i = 1; i < tokenLength; i++ ) {^[METHOD] burstToken [TYPE] void [PARAMETER] String token boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  [TYPE]  boolean eatTheRest  false  hasOption  stopAtNonOption  true  [TYPE]  String ch  token  [TYPE]  int i  tokenLength 
[REPLACE]^String ch = String.valueOf ( token .startsWith ( token )   ) ;^284^^^^^279^308^[REPLACE] String ch = String.valueOf ( token.charAt ( i )  ) ;^[METHOD] burstToken [TYPE] void [PARAMETER] String token boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  [TYPE]  boolean eatTheRest  false  hasOption  stopAtNonOption  true  [TYPE]  String ch  token  [TYPE]  int i  tokenLength 
[REPLACE]^boolean.getOption = options.hasOption ( ch ) ;^285^^^^^279^308^[REPLACE] boolean hasOption = options.hasOption ( ch ) ;^[METHOD] burstToken [TYPE] void [PARAMETER] String token boolean stopAtNonOption [CLASS] PosixParser   [TYPE]  ArrayList tokens  [TYPE]  Options options  [TYPE]  Option currentOption  [TYPE]  boolean eatTheRest  false  hasOption  stopAtNonOption  true  [TYPE]  String ch  token  [TYPE]  int i  tokenLength 
