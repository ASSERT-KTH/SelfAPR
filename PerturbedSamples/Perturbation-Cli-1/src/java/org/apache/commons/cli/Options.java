[REPLACE]^private Map shortOpts  = null ;^45^^^^^^^[REPLACE] private Map shortOpts = new HashMap (  ) ;^ [CLASS] Options  
[REPLACE]^private Map longOpts  = null ;^48^^^^^^^[REPLACE] private Map longOpts = new HashMap (  ) ;^ [CLASS] Options  
[REPLACE]^private List requiredOpts ;^51^^^^^^^[REPLACE] private List requiredOpts = new ArrayList (  ) ;^ [CLASS] Options  
[REPLACE]^private Map optionGroups  = null ;^54^^^^^^^[REPLACE] private Map optionGroups = new HashMap (  ) ;^ [CLASS] Options  
[REPLACE]^Iterator options = group .isRequired (  )  .iterator (  ) ;^71^^^^^69^93^[REPLACE] Iterator options = group.getOptions (  ) .iterator (  ) ;^[METHOD] addOptionGroup [TYPE] Options [PARAMETER] OptionGroup group [CLASS] Options   [TYPE]  Iterator options  [TYPE]  List requiredOpts  [TYPE]  Option option  [TYPE]  OptionGroup group  [TYPE]  boolean false  true  [TYPE]  Map longOpts  optionGroups  shortOpts 
[ADD]^^71^^^^^69^93^[ADD] Iterator options = group.getOptions (  ) .iterator (  ) ;^[METHOD] addOptionGroup [TYPE] Options [PARAMETER] OptionGroup group [CLASS] Options   [TYPE]  Iterator options  [TYPE]  List requiredOpts  [TYPE]  Option option  [TYPE]  OptionGroup group  [TYPE]  boolean false  true  [TYPE]  Map longOpts  optionGroups  shortOpts 
[REPLACE]^if  ( group.getOptions (  )  ) {^73^74^^^^69^93^[REPLACE] if  ( group.isRequired (  )  ) {^[METHOD] addOptionGroup [TYPE] Options [PARAMETER] OptionGroup group [CLASS] Options   [TYPE]  Iterator options  [TYPE]  List requiredOpts  [TYPE]  Option option  [TYPE]  OptionGroup group  [TYPE]  boolean false  true  [TYPE]  Map longOpts  optionGroups  shortOpts 
[REPLACE]^requiredOpts.remove ( group ) ;^75^^^^^69^93^[REPLACE] requiredOpts.add ( group ) ;^[METHOD] addOptionGroup [TYPE] Options [PARAMETER] OptionGroup group [CLASS] Options   [TYPE]  Iterator options  [TYPE]  List requiredOpts  [TYPE]  Option option  [TYPE]  OptionGroup group  [TYPE]  boolean false  true  [TYPE]  Map longOpts  optionGroups  shortOpts 
[ADD]^^75^^^^^69^93^[ADD] requiredOpts.add ( group ) ;^[METHOD] addOptionGroup [TYPE] Options [PARAMETER] OptionGroup group [CLASS] Options   [TYPE]  Iterator options  [TYPE]  List requiredOpts  [TYPE]  Option option  [TYPE]  OptionGroup group  [TYPE]  boolean false  true  [TYPE]  Map longOpts  optionGroups  shortOpts 
[REPLACE]^while  ( options.next (  )  ) {^78^79^^^^69^93^[REPLACE] while  ( options.hasNext (  )  ) {^[METHOD] addOptionGroup [TYPE] Options [PARAMETER] OptionGroup group [CLASS] Options   [TYPE]  Iterator options  [TYPE]  List requiredOpts  [TYPE]  Option option  [TYPE]  OptionGroup group  [TYPE]  boolean false  true  [TYPE]  Map longOpts  optionGroups  shortOpts 
[ADD]^^78^79^80^^^69^93^[ADD] while  ( options.hasNext (  )  ) { Option option =  ( Option )  options.next (  ) ;^[METHOD] addOptionGroup [TYPE] Options [PARAMETER] OptionGroup group [CLASS] Options   [TYPE]  Iterator options  [TYPE]  List requiredOpts  [TYPE]  Option option  [TYPE]  OptionGroup group  [TYPE]  boolean false  true  [TYPE]  Map longOpts  optionGroups  shortOpts 
[REPLACE]^Option option =  ( Option )  options.hasNext (  ) ;^80^^^^^69^93^[REPLACE] Option option =  ( Option )  options.next (  ) ;^[METHOD] addOptionGroup [TYPE] Options [PARAMETER] OptionGroup group [CLASS] Options   [TYPE]  Iterator options  [TYPE]  List requiredOpts  [TYPE]  Option option  [TYPE]  OptionGroup group  [TYPE]  boolean false  true  [TYPE]  Map longOpts  optionGroups  shortOpts 
[REPLACE]^return null;^92^^^^^69^93^[REPLACE] return this;^[METHOD] addOptionGroup [TYPE] Options [PARAMETER] OptionGroup group [CLASS] Options   [TYPE]  Iterator options  [TYPE]  List requiredOpts  [TYPE]  Option option  [TYPE]  OptionGroup group  [TYPE]  boolean false  true  [TYPE]  Map longOpts  optionGroups  shortOpts 
[REPLACE]^return buf.toString (  ) ;^100^^^^^99^101^[REPLACE] return new HashSet ( optionGroups.values (  )  ) ;^[METHOD] getOptionGroups [TYPE] Collection [PARAMETER] [CLASS] Options   [TYPE]  Map longOpts  optionGroups  shortOpts  [TYPE]  List requiredOpts  [TYPE]  boolean false  true 
[REPLACE]^addOption ( opt, false, hasArg, description ) ;^114^^^^^112^117^[REPLACE] addOption ( opt, null, hasArg, description ) ;^[METHOD] addOption [TYPE] Options [PARAMETER] String opt boolean hasArg String description [CLASS] Options   [TYPE]  List requiredOpts  [TYPE]  String description  opt  [TYPE]  boolean false  hasArg  true  [TYPE]  Map longOpts  optionGroups  shortOpts 
[REPLACE]^return null;^116^^^^^112^117^[REPLACE] return this;^[METHOD] addOption [TYPE] Options [PARAMETER] String opt boolean hasArg String description [CLASS] Options   [TYPE]  List requiredOpts  [TYPE]  String description  opt  [TYPE]  boolean false  hasArg  true  [TYPE]  Map longOpts  optionGroups  shortOpts 
[REPLACE]^addOption ( new Option ( opt, longOpt, hasArg, longOpt )  ) ;^132^^^^^129^135^[REPLACE] addOption ( new Option ( opt, longOpt, hasArg, description )  ) ;^[METHOD] addOption [TYPE] Options [PARAMETER] String opt String longOpt boolean hasArg String description [CLASS] Options   [TYPE]  List requiredOpts  [TYPE]  String description  longOpt  opt  [TYPE]  boolean false  hasArg  true  [TYPE]  Map longOpts  optionGroups  shortOpts 
[REPLACE]^return null;^134^^^^^129^135^[REPLACE] return this;^[METHOD] addOption [TYPE] Options [PARAMETER] String opt String longOpt boolean hasArg String description [CLASS] Options   [TYPE]  List requiredOpts  [TYPE]  String description  longOpt  opt  [TYPE]  boolean false  hasArg  true  [TYPE]  Map longOpts  optionGroups  shortOpts 
[REPLACE]^String key = opt.getLongOpt (  ) ;^145^^^^^143^165^[REPLACE] String key = opt.getKey (  ) ;^[METHOD] addOption [TYPE] Options [PARAMETER] Option opt [CLASS] Options   [TYPE]  List requiredOpts  [TYPE]  Option opt  [TYPE]  String key  [TYPE]  boolean false  true  [TYPE]  Map longOpts  optionGroups  shortOpts 
[REPLACE]^if  ( opt.getLongOpt (  )  ) {^148^149^^^^143^165^[REPLACE] if  ( opt.hasLongOpt (  )  ) {^[METHOD] addOption [TYPE] Options [PARAMETER] Option opt [CLASS] Options   [TYPE]  List requiredOpts  [TYPE]  Option opt  [TYPE]  String key  [TYPE]  boolean false  true  [TYPE]  Map longOpts  optionGroups  shortOpts 
[ADD]^^148^149^150^151^^143^165^[ADD] if  ( opt.hasLongOpt (  )  ) { longOpts.put ( opt.getLongOpt (  ) , opt ) ; }^[METHOD] addOption [TYPE] Options [PARAMETER] Option opt [CLASS] Options   [TYPE]  List requiredOpts  [TYPE]  Option opt  [TYPE]  String key  [TYPE]  boolean false  true  [TYPE]  Map longOpts  optionGroups  shortOpts 
[REPLACE]^longOpts.put ( opt.hasLongOpt (  ) , opt ) ;^150^^^^^143^165^[REPLACE] longOpts.put ( opt.getLongOpt (  ) , opt ) ;^[METHOD] addOption [TYPE] Options [PARAMETER] Option opt [CLASS] Options   [TYPE]  List requiredOpts  [TYPE]  Option opt  [TYPE]  String key  [TYPE]  boolean false  true  [TYPE]  Map longOpts  optionGroups  shortOpts 
[REPLACE]^if  ( group.isRequired (  )  ) {^154^155^^^^143^165^[REPLACE] if  ( opt.isRequired (  )   ) {^[METHOD] addOption [TYPE] Options [PARAMETER] Option opt [CLASS] Options   [TYPE]  List requiredOpts  [TYPE]  Option opt  [TYPE]  String key  [TYPE]  boolean false  true  [TYPE]  Map longOpts  optionGroups  shortOpts 
[ADD]^^154^155^156^157^158^143^165^[ADD] if  ( opt.isRequired (  )   ) { if (  requiredOpts.contains ( key )   )  { requiredOpts.remove (  requiredOpts.indexOf ( key )   ) ; }^[METHOD] addOption [TYPE] Options [PARAMETER] Option opt [CLASS] Options   [TYPE]  List requiredOpts  [TYPE]  Option opt  [TYPE]  String key  [TYPE]  boolean false  true  [TYPE]  Map longOpts  optionGroups  shortOpts 
[REPLACE]^if ( !  requiredOpts.contains ( key )   )  {^156^^^^^143^165^[REPLACE] if (  requiredOpts.contains ( key )   )  {^[METHOD] addOption [TYPE] Options [PARAMETER] Option opt [CLASS] Options   [TYPE]  List requiredOpts  [TYPE]  Option opt  [TYPE]  String key  [TYPE]  boolean false  true  [TYPE]  Map longOpts  optionGroups  shortOpts 
[ADD]^requiredOpts.remove (  requiredOpts.indexOf ( key )   ) ;^156^157^158^^^143^165^[ADD] if (  requiredOpts.contains ( key )   )  { requiredOpts.remove (  requiredOpts.indexOf ( key )   ) ; }^[METHOD] addOption [TYPE] Options [PARAMETER] Option opt [CLASS] Options   [TYPE]  List requiredOpts  [TYPE]  Option opt  [TYPE]  String key  [TYPE]  boolean false  true  [TYPE]  Map longOpts  optionGroups  shortOpts 
[REPLACE]^requiredOpts.add (  requiredOpts.indexOf ( key )   ) ;^157^^^^^143^165^[REPLACE] requiredOpts.remove (  requiredOpts.indexOf ( key )   ) ;^[METHOD] addOption [TYPE] Options [PARAMETER] Option opt [CLASS] Options   [TYPE]  List requiredOpts  [TYPE]  Option opt  [TYPE]  String key  [TYPE]  boolean false  true  [TYPE]  Map longOpts  optionGroups  shortOpts 
[ADD]^^157^^^^^143^165^[ADD] requiredOpts.remove (  requiredOpts.indexOf ( key )   ) ;^[METHOD] addOption [TYPE] Options [PARAMETER] Option opt [CLASS] Options   [TYPE]  List requiredOpts  [TYPE]  Option opt  [TYPE]  String key  [TYPE]  boolean false  true  [TYPE]  Map longOpts  optionGroups  shortOpts 
[REPLACE]^requiredOpts.remove (  requiredOpts.contains ( key )   ) ;^157^^^^^143^165^[REPLACE] requiredOpts.remove (  requiredOpts.indexOf ( key )   ) ;^[METHOD] addOption [TYPE] Options [PARAMETER] Option opt [CLASS] Options   [TYPE]  List requiredOpts  [TYPE]  Option opt  [TYPE]  String key  [TYPE]  boolean false  true  [TYPE]  Map longOpts  optionGroups  shortOpts 
[REPLACE]^requiredOpts .indexOf ( false )  ;^157^^^^^143^165^[REPLACE] requiredOpts.remove (  requiredOpts.indexOf ( key )   ) ;^[METHOD] addOption [TYPE] Options [PARAMETER] Option opt [CLASS] Options   [TYPE]  List requiredOpts  [TYPE]  Option opt  [TYPE]  String key  [TYPE]  boolean false  true  [TYPE]  Map longOpts  optionGroups  shortOpts 
[REPLACE]^if  ( shortOpts.containsKey ( opt )  ) {^162^^^^^143^165^[REPLACE] shortOpts.put ( key, opt ) ;^[METHOD] addOption [TYPE] Options [PARAMETER] Option opt [CLASS] Options   [TYPE]  List requiredOpts  [TYPE]  Option opt  [TYPE]  String key  [TYPE]  boolean false  true  [TYPE]  Map longOpts  optionGroups  shortOpts 
[REPLACE]^return null;^164^^^^^143^165^[REPLACE] return this;^[METHOD] addOption [TYPE] Options [PARAMETER] Option opt [CLASS] Options   [TYPE]  List requiredOpts  [TYPE]  Option opt  [TYPE]  String key  [TYPE]  boolean false  true  [TYPE]  Map longOpts  optionGroups  shortOpts 
[REPLACE]^return   helpOptions (  )  ;^174^^^^^172^175^[REPLACE] return Collections.unmodifiableCollection ( helpOptions (  )  ) ;^[METHOD] getOptions [TYPE] Collection [PARAMETER] [CLASS] Options   [TYPE]  Map longOpts  optionGroups  shortOpts  [TYPE]  List requiredOpts  [TYPE]  boolean false  true 
[REPLACE]^Option option =  ( Option )  options.next (  ) ;^184^^^^^182^201^[REPLACE] List opts = new ArrayList ( shortOpts.values (  )  ) ;^[METHOD] helpOptions [TYPE] List [PARAMETER] [CLASS] Options   [TYPE]  Iterator iter  [TYPE]  List opts  requiredOpts  [TYPE]  Object item  [TYPE]  boolean false  true  [TYPE]  Map longOpts  optionGroups  shortOpts 
[REPLACE]^Iterator options = group.getOptions (  ) .iterator (  ) ;^188^^^^^182^201^[REPLACE] Iterator iter = longOpts.values (  ) .iterator (  ) ;^[METHOD] helpOptions [TYPE] List [PARAMETER] [CLASS] Options   [TYPE]  Iterator iter  [TYPE]  List opts  requiredOpts  [TYPE]  Object item  [TYPE]  boolean false  true  [TYPE]  Map longOpts  optionGroups  shortOpts 
[ADD]^^188^^^^^182^201^[ADD] Iterator iter = longOpts.values (  ) .iterator (  ) ;^[METHOD] helpOptions [TYPE] List [PARAMETER] [CLASS] Options   [TYPE]  Iterator iter  [TYPE]  List opts  requiredOpts  [TYPE]  Object item  [TYPE]  boolean false  true  [TYPE]  Map longOpts  optionGroups  shortOpts 
[REPLACE]^if  ( !opts.indexOf ( item )  ) {^194^195^^^^182^201^[REPLACE] if  ( !opts.contains ( item )  ) {^[METHOD] helpOptions [TYPE] List [PARAMETER] [CLASS] Options   [TYPE]  Iterator iter  [TYPE]  List opts  requiredOpts  [TYPE]  Object item  [TYPE]  boolean false  true  [TYPE]  Map longOpts  optionGroups  shortOpts 
[ADD]^^194^195^196^197^^182^201^[ADD] if  ( !opts.contains ( item )  ) { opts.add ( item ) ; }^[METHOD] helpOptions [TYPE] List [PARAMETER] [CLASS] Options   [TYPE]  Iterator iter  [TYPE]  List opts  requiredOpts  [TYPE]  Object item  [TYPE]  boolean false  true  [TYPE]  Map longOpts  optionGroups  shortOpts 
[REPLACE]^opts.remove ( item ) ;^196^^^^^182^201^[REPLACE] opts.add ( item ) ;^[METHOD] helpOptions [TYPE] List [PARAMETER] [CLASS] Options   [TYPE]  Iterator iter  [TYPE]  List opts  requiredOpts  [TYPE]  Object item  [TYPE]  boolean false  true  [TYPE]  Map longOpts  optionGroups  shortOpts 
[REMOVE]^shortOpts.put ( key, opt ) ;^196^^^^^182^201^[REMOVE] ^[METHOD] helpOptions [TYPE] List [PARAMETER] [CLASS] Options   [TYPE]  Iterator iter  [TYPE]  List opts  requiredOpts  [TYPE]  Object item  [TYPE]  boolean false  true  [TYPE]  Map longOpts  optionGroups  shortOpts 
[REPLACE]^Object item = iter.hasNext (  ) ;^192^^^^^182^201^[REPLACE] Object item = iter.next (  ) ;^[METHOD] helpOptions [TYPE] List [PARAMETER] [CLASS] Options   [TYPE]  Iterator iter  [TYPE]  List opts  requiredOpts  [TYPE]  Object item  [TYPE]  boolean false  true  [TYPE]  Map longOpts  optionGroups  shortOpts 
[REPLACE]^if  ( !opts .add ( null )   ) {^194^195^^^^182^201^[REPLACE] if  ( !opts.contains ( item )  ) {^[METHOD] helpOptions [TYPE] List [PARAMETER] [CLASS] Options   [TYPE]  Iterator iter  [TYPE]  List opts  requiredOpts  [TYPE]  Object item  [TYPE]  boolean false  true  [TYPE]  Map longOpts  optionGroups  shortOpts 
[REPLACE]^opts .indexOf ( item )  ;^196^^^^^182^201^[REPLACE] opts.add ( item ) ;^[METHOD] helpOptions [TYPE] List [PARAMETER] [CLASS] Options   [TYPE]  Iterator iter  [TYPE]  List opts  requiredOpts  [TYPE]  Object item  [TYPE]  boolean false  true  [TYPE]  Map longOpts  optionGroups  shortOpts 
[REPLACE]^return  new ArrayList ( shortOpts.values (  )  )  ;^200^^^^^182^201^[REPLACE] return new ArrayList ( opts ) ;^[METHOD] helpOptions [TYPE] List [PARAMETER] [CLASS] Options   [TYPE]  Iterator iter  [TYPE]  List opts  requiredOpts  [TYPE]  Object item  [TYPE]  boolean false  true  [TYPE]  Map longOpts  optionGroups  shortOpts 
[REPLACE]^return buf.toString (  ) ;^211^^^^^209^212^[REPLACE] return requiredOpts;^[METHOD] getRequiredOptions [TYPE] List [PARAMETER] [CLASS] Options   [TYPE]  Map longOpts  optionGroups  shortOpts  [TYPE]  List opts  requiredOpts  [TYPE]  boolean false  true 
[REPLACE]^opt =  Util.stripLeadingHyphens ( null ) ;^222^^^^^220^230^[REPLACE] opt = Util.stripLeadingHyphens ( opt ) ;^[METHOD] getOption [TYPE] Option [PARAMETER] String opt [CLASS] Options   [TYPE]  List opts  requiredOpts  [TYPE]  String opt  [TYPE]  boolean false  true  [TYPE]  Map longOpts  optionGroups  shortOpts 
[REPLACE]^if  ( shortOpts.get ( opt )  ) {^224^225^^^^220^230^[REPLACE] if  ( shortOpts.containsKey ( opt )  ) {^[METHOD] getOption [TYPE] Option [PARAMETER] String opt [CLASS] Options   [TYPE]  List opts  requiredOpts  [TYPE]  String opt  [TYPE]  boolean false  true  [TYPE]  Map longOpts  optionGroups  shortOpts 
[REMOVE]^if  ( requiredOpts.contains ( key )  )  {     requiredOpts.remove ( requiredOpts.indexOf ( key )  ) ; }^224^^^^^220^230^[REMOVE] ^[METHOD] getOption [TYPE] Option [PARAMETER] String opt [CLASS] Options   [TYPE]  List opts  requiredOpts  [TYPE]  String opt  [TYPE]  boolean false  true  [TYPE]  Map longOpts  optionGroups  shortOpts 
[REPLACE]^return  ( Option )  shortOpts .put ( this , null )  ;^226^^^^^220^230^[REPLACE] return  ( Option )  shortOpts.get ( opt ) ;^[METHOD] getOption [TYPE] Option [PARAMETER] String opt [CLASS] Options   [TYPE]  List opts  requiredOpts  [TYPE]  String opt  [TYPE]  boolean false  true  [TYPE]  Map longOpts  optionGroups  shortOpts 
[REPLACE]^return  ( Option )  shortOpts.values ( opt ) ;^226^^^^^220^230^[REPLACE] return  ( Option )  shortOpts.get ( opt ) ;^[METHOD] getOption [TYPE] Option [PARAMETER] String opt [CLASS] Options   [TYPE]  List opts  requiredOpts  [TYPE]  String opt  [TYPE]  boolean false  true  [TYPE]  Map longOpts  optionGroups  shortOpts 
[REPLACE]^return  ( Option )  longOpts .put ( null , true )  ;^229^^^^^220^230^[REPLACE] return  ( Option )  longOpts.get ( opt ) ;^[METHOD] getOption [TYPE] Option [PARAMETER] String opt [CLASS] Options   [TYPE]  List opts  requiredOpts  [TYPE]  String opt  [TYPE]  boolean false  true  [TYPE]  Map longOpts  optionGroups  shortOpts 
[REPLACE]^opt =  Util.stripLeadingHyphens ( null ) ;^242^^^^^240^245^[REPLACE] opt = Util.stripLeadingHyphens ( opt ) ;^[METHOD] hasOption [TYPE] boolean [PARAMETER] String opt [CLASS] Options   [TYPE]  List opts  requiredOpts  [TYPE]  String opt  [TYPE]  boolean false  true  [TYPE]  Map longOpts  optionGroups  shortOpts 
[REPLACE]^return shortOpts.get ( opt )  || longOpts.containsKey ( opt ) ;^244^^^^^240^245^[REPLACE] return shortOpts.containsKey ( opt )  || longOpts.containsKey ( opt ) ;^[METHOD] hasOption [TYPE] boolean [PARAMETER] String opt [CLASS] Options   [TYPE]  List opts  requiredOpts  [TYPE]  String opt  [TYPE]  boolean false  true  [TYPE]  Map longOpts  optionGroups  shortOpts 
[REPLACE]^return  ( OptionGroup )  optionGroups.get ( opt.getLongOpt (  )  ) ;^257^^^^^255^258^[REPLACE] return  ( OptionGroup )  optionGroups.get ( opt.getKey (  )  ) ;^[METHOD] getOptionGroup [TYPE] OptionGroup [PARAMETER] Option opt [CLASS] Options   [TYPE]  List opts  requiredOpts  [TYPE]  Option opt  [TYPE]  boolean false  true  [TYPE]  Map longOpts  optionGroups  shortOpts 
[REPLACE]^String key = opt.getKey (  ) ;^267^^^^^265^276^[REPLACE] StringBuffer buf = new StringBuffer (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Options   [TYPE]  List opts  requiredOpts  [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Map longOpts  optionGroups  shortOpts 
[REPLACE]^Iterator options = group.getOptions (  ) .iterator (  ) ;^269^^^^^265^276^[REPLACE] buf.append ( "[ Options: [ short " ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Options   [TYPE]  List opts  requiredOpts  [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Map longOpts  optionGroups  shortOpts 
[REPLACE]^buf.append ( shortOpts.Object (  )  ) ;^270^^^^^265^276^[REPLACE] buf.append ( shortOpts.toString (  )  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Options   [TYPE]  List opts  requiredOpts  [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Map longOpts  optionGroups  shortOpts 
[REPLACE]^buf.append ( " ]" ) ;^271^^^^^265^276^[REPLACE] buf.append ( " ] [ long " ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Options   [TYPE]  List opts  requiredOpts  [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Map longOpts  optionGroups  shortOpts 
[REPLACE]^shortOpts.put ( key, opt ) ;^272^^^^^265^276^[REPLACE] buf.append ( longOpts ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Options   [TYPE]  List opts  requiredOpts  [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Map longOpts  optionGroups  shortOpts 
[REPLACE]^buf .toString (  )  ;^273^^^^^265^276^[REPLACE] buf.append ( " ]" ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Options   [TYPE]  List opts  requiredOpts  [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Map longOpts  optionGroups  shortOpts 
[ADD]^^273^^^^^265^276^[ADD] buf.append ( " ]" ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Options   [TYPE]  List opts  requiredOpts  [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Map longOpts  optionGroups  shortOpts 
[REPLACE]^return buf.StringBuffer (  ) ;^275^^^^^265^276^[REPLACE] return buf.toString (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Options   [TYPE]  List opts  requiredOpts  [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Map longOpts  optionGroups  shortOpts 
