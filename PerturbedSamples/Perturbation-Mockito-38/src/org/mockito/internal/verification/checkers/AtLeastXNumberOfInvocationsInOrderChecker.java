[REPLACE]^private final Reporter reporter ;^17^^^^^^^[REPLACE] private final Reporter reporter = new Reporter (  ) ;^ [CLASS] AtLeastXNumberOfInvocationsInOrderChecker  
[REPLACE]^private final InvocationsFinder finder  = null ;^18^^^^^^^[REPLACE] private final InvocationsFinder finder = new InvocationsFinder (  ) ;^ [CLASS] AtLeastXNumberOfInvocationsInOrderChecker  
[REPLACE]^List<Invocation> chunk = finder .InvocationsFinder (  )  ;^21^^^^^20^33^[REPLACE] List<Invocation> chunk = finder.findAllMatchingUnverifiedChunks ( invocations, wanted ) ;^[METHOD] check [TYPE] void [PARAMETER] Invocation> invocations InvocationMatcher wanted int wantedCount [CLASS] AtLeastXNumberOfInvocationsInOrderChecker   [TYPE]  boolean false  true  [TYPE]  Invocation i  [TYPE]  InvocationsFinder finder  [TYPE]  Reporter reporter  [TYPE]  InvocationMatcher wanted  [TYPE]  List chunk  invocations  [TYPE]  int actualCount  wantedCount  [TYPE]  Location lastLocation 
[ADD]^^21^22^23^^^20^33^[ADD] List<Invocation> chunk = finder.findAllMatchingUnverifiedChunks ( invocations, wanted ) ;  int actualCount = chunk.size (  ) ;^[METHOD] check [TYPE] void [PARAMETER] Invocation> invocations InvocationMatcher wanted int wantedCount [CLASS] AtLeastXNumberOfInvocationsInOrderChecker   [TYPE]  boolean false  true  [TYPE]  Invocation i  [TYPE]  InvocationsFinder finder  [TYPE]  Reporter reporter  [TYPE]  InvocationMatcher wanted  [TYPE]  List chunk  invocations  [TYPE]  int actualCount  wantedCount  [TYPE]  Location lastLocation 
[REPLACE]^int actualCount = true.size (  ) ;^23^^^^^20^33^[REPLACE] int actualCount = chunk.size (  ) ;^[METHOD] check [TYPE] void [PARAMETER] Invocation> invocations InvocationMatcher wanted int wantedCount [CLASS] AtLeastXNumberOfInvocationsInOrderChecker   [TYPE]  boolean false  true  [TYPE]  Invocation i  [TYPE]  InvocationsFinder finder  [TYPE]  Reporter reporter  [TYPE]  InvocationMatcher wanted  [TYPE]  List chunk  invocations  [TYPE]  int actualCount  wantedCount  [TYPE]  Location lastLocation 
[REPLACE]^if  ( wantedCount  <=  actualCount )  {^25^^^^^20^33^[REPLACE] if  ( wantedCount > actualCount )  {^[METHOD] check [TYPE] void [PARAMETER] Invocation> invocations InvocationMatcher wanted int wantedCount [CLASS] AtLeastXNumberOfInvocationsInOrderChecker   [TYPE]  boolean false  true  [TYPE]  Invocation i  [TYPE]  InvocationsFinder finder  [TYPE]  Reporter reporter  [TYPE]  InvocationMatcher wanted  [TYPE]  List chunk  invocations  [TYPE]  int actualCount  wantedCount  [TYPE]  Location lastLocation 
[REPLACE]^Location lastLocation = finder.getLastLocation ( null ) ;^26^^^^^20^33^[REPLACE] Location lastLocation = finder.getLastLocation ( chunk ) ;^[METHOD] check [TYPE] void [PARAMETER] Invocation> invocations InvocationMatcher wanted int wantedCount [CLASS] AtLeastXNumberOfInvocationsInOrderChecker   [TYPE]  boolean false  true  [TYPE]  Invocation i  [TYPE]  InvocationsFinder finder  [TYPE]  Reporter reporter  [TYPE]  InvocationMatcher wanted  [TYPE]  List chunk  invocations  [TYPE]  int actualCount  wantedCount  [TYPE]  Location lastLocation 
[REPLACE]^Location lastLocation = finder.getLastLocation ( false ) ;^26^^^^^20^33^[REPLACE] Location lastLocation = finder.getLastLocation ( chunk ) ;^[METHOD] check [TYPE] void [PARAMETER] Invocation> invocations InvocationMatcher wanted int wantedCount [CLASS] AtLeastXNumberOfInvocationsInOrderChecker   [TYPE]  boolean false  true  [TYPE]  Invocation i  [TYPE]  InvocationsFinder finder  [TYPE]  Reporter reporter  [TYPE]  InvocationMatcher wanted  [TYPE]  List chunk  invocations  [TYPE]  int actualCount  wantedCount  [TYPE]  Location lastLocation 
[REPLACE]^for  ( Invocation i : chunk )  { i.markVerifiedInOrder (  ) ;^30^^^^^20^33^[REPLACE] for  ( Invocation i : chunk )  {^[METHOD] check [TYPE] void [PARAMETER] Invocation> invocations InvocationMatcher wanted int wantedCount [CLASS] AtLeastXNumberOfInvocationsInOrderChecker   [TYPE]  boolean false  true  [TYPE]  Invocation i  [TYPE]  InvocationsFinder finder  [TYPE]  Reporter reporter  [TYPE]  InvocationMatcher wanted  [TYPE]  List chunk  invocations  [TYPE]  int actualCount  wantedCount  [TYPE]  Location lastLocation 
