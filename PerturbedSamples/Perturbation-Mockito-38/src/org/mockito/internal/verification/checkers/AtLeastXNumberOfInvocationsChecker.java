[REPLACE]^private final Reporter reporter  = null ;^17^^^^^^^[REPLACE] private final Reporter reporter = new Reporter (  ) ;^ [CLASS] AtLeastXNumberOfInvocationsChecker  
[REPLACE]^private final InvocationsFinder finder  = null ;^18^^^^^^^[REPLACE] private final InvocationsFinder finder = new InvocationsFinder (  ) ;^ [CLASS] AtLeastXNumberOfInvocationsChecker  
[REPLACE]^List<Invocation> actualInvocations = finder .InvocationsFinder (  )  ;^21^^^^^20^32^[REPLACE] List<Invocation> actualInvocations = finder.findInvocations ( invocations, wanted ) ;^[METHOD] check [TYPE] void [PARAMETER] Invocation> invocations InvocationMatcher wanted int wantedCount [CLASS] AtLeastXNumberOfInvocationsChecker   [TYPE]  boolean false  true  [TYPE]  Invocation i  [TYPE]  InvocationsFinder finder  [TYPE]  Reporter reporter  [TYPE]  InvocationMatcher wanted  [TYPE]  List actualInvocations  invocations  [TYPE]  int actualCount  wantedCount  [TYPE]  Location lastLocation 
[REPLACE]^int actualCount = null.size (  ) ;^23^^^^^20^32^[REPLACE] int actualCount = actualInvocations.size (  ) ;^[METHOD] check [TYPE] void [PARAMETER] Invocation> invocations InvocationMatcher wanted int wantedCount [CLASS] AtLeastXNumberOfInvocationsChecker   [TYPE]  boolean false  true  [TYPE]  Invocation i  [TYPE]  InvocationsFinder finder  [TYPE]  Reporter reporter  [TYPE]  InvocationMatcher wanted  [TYPE]  List actualInvocations  invocations  [TYPE]  int actualCount  wantedCount  [TYPE]  Location lastLocation 
[ADD]^^23^^^^^20^32^[ADD] int actualCount = actualInvocations.size (  ) ;^[METHOD] check [TYPE] void [PARAMETER] Invocation> invocations InvocationMatcher wanted int wantedCount [CLASS] AtLeastXNumberOfInvocationsChecker   [TYPE]  boolean false  true  [TYPE]  Invocation i  [TYPE]  InvocationsFinder finder  [TYPE]  Reporter reporter  [TYPE]  InvocationMatcher wanted  [TYPE]  List actualInvocations  invocations  [TYPE]  int actualCount  wantedCount  [TYPE]  Location lastLocation 
[REPLACE]^if  ( wantedCount  !=  actualCount )  {^24^^^^^20^32^[REPLACE] if  ( wantedCount > actualCount )  {^[METHOD] check [TYPE] void [PARAMETER] Invocation> invocations InvocationMatcher wanted int wantedCount [CLASS] AtLeastXNumberOfInvocationsChecker   [TYPE]  boolean false  true  [TYPE]  Invocation i  [TYPE]  InvocationsFinder finder  [TYPE]  Reporter reporter  [TYPE]  InvocationMatcher wanted  [TYPE]  List actualInvocations  invocations  [TYPE]  int actualCount  wantedCount  [TYPE]  Location lastLocation 
[REPLACE]^Location lastLocation = finder.getLastLocation ( 0 ) ;^25^^^^^20^32^[REPLACE] Location lastLocation = finder.getLastLocation ( actualInvocations ) ;^[METHOD] check [TYPE] void [PARAMETER] Invocation> invocations InvocationMatcher wanted int wantedCount [CLASS] AtLeastXNumberOfInvocationsChecker   [TYPE]  boolean false  true  [TYPE]  Invocation i  [TYPE]  InvocationsFinder finder  [TYPE]  Reporter reporter  [TYPE]  InvocationMatcher wanted  [TYPE]  List actualInvocations  invocations  [TYPE]  int actualCount  wantedCount  [TYPE]  Location lastLocation 
[REPLACE]^Location lastLocation = finder.getLastLocation ( false ) ;^25^^^^^20^32^[REPLACE] Location lastLocation = finder.getLastLocation ( actualInvocations ) ;^[METHOD] check [TYPE] void [PARAMETER] Invocation> invocations InvocationMatcher wanted int wantedCount [CLASS] AtLeastXNumberOfInvocationsChecker   [TYPE]  boolean false  true  [TYPE]  Invocation i  [TYPE]  InvocationsFinder finder  [TYPE]  Reporter reporter  [TYPE]  InvocationMatcher wanted  [TYPE]  List actualInvocations  invocations  [TYPE]  int actualCount  wantedCount  [TYPE]  Location lastLocation 
[REPLACE]^List<Invocation> actualInvocations = finder.findInvocations ( invocations, wanted ) ;^29^^^^^20^32^[REPLACE] for  ( Invocation i : actualInvocations )  {^[METHOD] check [TYPE] void [PARAMETER] Invocation> invocations InvocationMatcher wanted int wantedCount [CLASS] AtLeastXNumberOfInvocationsChecker   [TYPE]  boolean false  true  [TYPE]  Invocation i  [TYPE]  InvocationsFinder finder  [TYPE]  Reporter reporter  [TYPE]  InvocationMatcher wanted  [TYPE]  List actualInvocations  invocations  [TYPE]  int actualCount  wantedCount  [TYPE]  Location lastLocation 
