[REPLACE]^for  ( T t : collection )  { if  ( !filter.isOut ( t )  )  {^13^^^^^12^20^[REPLACE] LinkedList<T> filtered = new LinkedList<T> (  ) ;^[METHOD] filter [TYPE] <T> [PARAMETER] Collection<T> collection Filter<T> filter [CLASS] ListUtil   [TYPE]  boolean false  true  [TYPE]  T t  [TYPE]  Filter filter  [TYPE]  Collection collection  [TYPE]  LinkedList filtered 
[REPLACE]^if  ( !filter .isOut ( t )   )  {^15^^^^^12^20^[REPLACE] if  ( !filter.isOut ( t )  )  {^[METHOD] filter [TYPE] <T> [PARAMETER] Collection<T> collection Filter<T> filter [CLASS] ListUtil   [TYPE]  boolean false  true  [TYPE]  T t  [TYPE]  Filter filter  [TYPE]  Collection collection  [TYPE]  LinkedList filtered 
[REPLACE]^filtered .LinkedList (  )  ;^16^^^^^12^20^[REPLACE] filtered.add ( t ) ;^[METHOD] filter [TYPE] <T> [PARAMETER] Collection<T> collection Filter<T> filter [CLASS] ListUtil   [TYPE]  boolean false  true  [TYPE]  T t  [TYPE]  Filter filter  [TYPE]  Collection collection  [TYPE]  LinkedList filtered 
[REPLACE]^for  ( T t : collection )  { if  ( !filter.isOut ( t )  )  {^14^^^^^12^20^[REPLACE] for  ( T t : collection )  {^[METHOD] filter [TYPE] <T> [PARAMETER] Collection<T> collection Filter<T> filter [CLASS] ListUtil   [TYPE]  boolean false  true  [TYPE]  T t  [TYPE]  Filter filter  [TYPE]  Collection collection  [TYPE]  LinkedList filtered 
[REPLACE]^return this;^19^^^^^12^20^[REPLACE] return filtered;^[METHOD] filter [TYPE] <T> [PARAMETER] Collection<T> collection Filter<T> filter [CLASS] ListUtil   [TYPE]  boolean false  true  [TYPE]  T t  [TYPE]  Filter filter  [TYPE]  Collection collection  [TYPE]  LinkedList filtered 
