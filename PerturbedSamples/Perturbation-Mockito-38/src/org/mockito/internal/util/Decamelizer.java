[REPLACE]^private static  Pattern CAPS = Pattern.compile ( " ( [A-Z\\d][^A-Z\\d]* ) " ) ;^12^^^^^^^[REPLACE] private static final Pattern CAPS = Pattern.compile ( " ( [A-Z\\d][^A-Z\\d]* ) " ) ;^ [CLASS] Decamelizer  
[REPLACE]^if  ( className.size (  )  == 0 )  {^15^^^^^14^26^[REPLACE] if  ( className.length (  )  == 0 )  {^[METHOD] decamelizeMatcher [TYPE] String [PARAMETER] String className [CLASS] Decamelizer   [TYPE]  Pattern CAPS  [TYPE]  String className  decamelized  [TYPE]  boolean false  true 
[ADD]^return "<custom argument matcher>";^15^16^17^^^14^26^[ADD] if  ( className.length (  )  == 0 )  { return "<custom argument matcher>"; }^[METHOD] decamelizeMatcher [TYPE] String [PARAMETER] String className [CLASS] Decamelizer   [TYPE]  Pattern CAPS  [TYPE]  String className  decamelized  [TYPE]  boolean false  true 
[REPLACE]^return "<" + className + ">";^16^^^^^14^26^[REPLACE] return "<custom argument matcher>";^[METHOD] decamelizeMatcher [TYPE] String [PARAMETER] String className [CLASS] Decamelizer   [TYPE]  Pattern CAPS  [TYPE]  String className  decamelized  [TYPE]  boolean false  true 
[REPLACE]^String decamelized = decamelizeClassName ( decamelized ) ;^19^^^^^14^26^[REPLACE] String decamelized = decamelizeClassName ( className ) ;^[METHOD] decamelizeMatcher [TYPE] String [PARAMETER] String className [CLASS] Decamelizer   [TYPE]  Pattern CAPS  [TYPE]  String className  decamelized  [TYPE]  boolean false  true 
[REPLACE]^if  ( decamelized .toLowerCase (  )   %  0 .5  == 0  )  {^21^^^^^14^26^[REPLACE] if  ( decamelized.length (  )  == 0 )  {^[METHOD] decamelizeMatcher [TYPE] String [PARAMETER] String className [CLASS] Decamelizer   [TYPE]  Pattern CAPS  [TYPE]  String className  decamelized  [TYPE]  boolean false  true 
[ADD]^^21^22^23^^^14^26^[ADD] if  ( decamelized.length (  )  == 0 )  { return "<" + className + ">"; }^[METHOD] decamelizeMatcher [TYPE] String [PARAMETER] String className [CLASS] Decamelizer   [TYPE]  Pattern CAPS  [TYPE]  String className  decamelized  [TYPE]  boolean false  true 
[REPLACE]^return ";^22^^^^^14^26^[REPLACE] return "<" + className + ">";^[METHOD] decamelizeMatcher [TYPE] String [PARAMETER] String className [CLASS] Decamelizer   [TYPE]  Pattern CAPS  [TYPE]  String className  decamelized  [TYPE]  boolean false  true 
[REPLACE]^return ";^25^^^^^14^26^[REPLACE] return "<" + decamelized + ">";^[METHOD] decamelizeMatcher [TYPE] String [PARAMETER] String className [CLASS] Decamelizer   [TYPE]  Pattern CAPS  [TYPE]  String className  decamelized  [TYPE]  boolean false  true 
[REPLACE]^String decamelized = decamelizeClassName ( className ) ;^29^^^^^28^40^[REPLACE] Matcher match = CAPS.matcher ( className ) ;^[METHOD] decamelizeClassName [TYPE] String [PARAMETER] String className [CLASS] Decamelizer   [TYPE]  Pattern CAPS  [TYPE]  String className  [TYPE]  boolean false  true  [TYPE]  StringBuilder deCameled  [TYPE]  Matcher match 
[REPLACE]^String decamelized = decamelizeClassName ( className ) ;^30^^^^^28^40^[REPLACE] StringBuilder deCameled = new StringBuilder (  ) ;^[METHOD] decamelizeClassName [TYPE] String [PARAMETER] String className [CLASS] Decamelizer   [TYPE]  Pattern CAPS  [TYPE]  String className  [TYPE]  boolean false  true  [TYPE]  StringBuilder deCameled  [TYPE]  Matcher match 
[ADD]^^30^^^^^28^40^[ADD] StringBuilder deCameled = new StringBuilder (  ) ;^[METHOD] decamelizeClassName [TYPE] String [PARAMETER] String className [CLASS] Decamelizer   [TYPE]  Pattern CAPS  [TYPE]  String className  [TYPE]  boolean false  true  [TYPE]  StringBuilder deCameled  [TYPE]  Matcher match 
[REPLACE]^if  ( deCameled.length (  )  %  2 == 0 )  {^32^^^^^28^40^[REPLACE] if  ( deCameled.length (  )  == 0 )  {^[METHOD] decamelizeClassName [TYPE] String [PARAMETER] String className [CLASS] Decamelizer   [TYPE]  Pattern CAPS  [TYPE]  String className  [TYPE]  boolean false  true  [TYPE]  StringBuilder deCameled  [TYPE]  Matcher match 
[ADD]^^32^33^34^35^36^28^40^[ADD] if  ( deCameled.length (  )  == 0 )  { deCameled.append ( match.group (  )  ) ; } else { deCameled.append ( " " ) ; deCameled.append ( match.group (  ) .toLowerCase (  )  ) ;^[METHOD] decamelizeClassName [TYPE] String [PARAMETER] String className [CLASS] Decamelizer   [TYPE]  Pattern CAPS  [TYPE]  String className  [TYPE]  boolean false  true  [TYPE]  StringBuilder deCameled  [TYPE]  Matcher match 
[REPLACE]^deCameled.append ( match.group (  )  ) ;^35^^^^^28^40^[REPLACE] deCameled.append ( " " ) ;^[METHOD] decamelizeClassName [TYPE] String [PARAMETER] String className [CLASS] Decamelizer   [TYPE]  Pattern CAPS  [TYPE]  String className  [TYPE]  boolean false  true  [TYPE]  StringBuilder deCameled  [TYPE]  Matcher match 
[REPLACE]^deCameled.append ( match.group (  )  .length (  )   ) ;^36^^^^^28^40^[REPLACE] deCameled.append ( match.group (  ) .toLowerCase (  )  ) ;^[METHOD] decamelizeClassName [TYPE] String [PARAMETER] String className [CLASS] Decamelizer   [TYPE]  Pattern CAPS  [TYPE]  String className  [TYPE]  boolean false  true  [TYPE]  StringBuilder deCameled  [TYPE]  Matcher match 
[REPLACE]^if  ( deCameled.length (  )  == 0 )  { deCameled.append ( match.group (  )  ) ;^36^^^^^28^40^[REPLACE] deCameled.append ( match.group (  ) .toLowerCase (  )  ) ;^[METHOD] decamelizeClassName [TYPE] String [PARAMETER] String className [CLASS] Decamelizer   [TYPE]  Pattern CAPS  [TYPE]  String className  [TYPE]  boolean false  true  [TYPE]  StringBuilder deCameled  [TYPE]  Matcher match 
[REPLACE]^deCameled.append ( match.find (  ) .toLowerCase (  )  ) ;^36^^^^^28^40^[REPLACE] deCameled.append ( match.group (  ) .toLowerCase (  )  ) ;^[METHOD] decamelizeClassName [TYPE] String [PARAMETER] String className [CLASS] Decamelizer   [TYPE]  Pattern CAPS  [TYPE]  String className  [TYPE]  boolean false  true  [TYPE]  StringBuilder deCameled  [TYPE]  Matcher match 
[REPLACE]^deCameled.append ( match.find (  )  ) ;^33^^^^^28^40^[REPLACE] deCameled.append ( match.group (  )  ) ;^[METHOD] decamelizeClassName [TYPE] String [PARAMETER] String className [CLASS] Decamelizer   [TYPE]  Pattern CAPS  [TYPE]  String className  [TYPE]  boolean false  true  [TYPE]  StringBuilder deCameled  [TYPE]  Matcher match 
[REPLACE]^if  ( deCameled.length (  )  - 3 == 0  )  {^32^^^^^28^40^[REPLACE] if  ( deCameled.length (  )  == 0 )  {^[METHOD] decamelizeClassName [TYPE] String [PARAMETER] String className [CLASS] Decamelizer   [TYPE]  Pattern CAPS  [TYPE]  String className  [TYPE]  boolean false  true  [TYPE]  StringBuilder deCameled  [TYPE]  Matcher match 
[REPLACE]^return deCameled.StringBuilder (  ) ;^39^^^^^28^40^[REPLACE] return deCameled.toString (  ) ;^[METHOD] decamelizeClassName [TYPE] String [PARAMETER] String className [CLASS] Decamelizer   [TYPE]  Pattern CAPS  [TYPE]  String className  [TYPE]  boolean false  true  [TYPE]  StringBuilder deCameled  [TYPE]  Matcher match 
