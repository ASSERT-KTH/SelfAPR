[REPLACE]^private  CreationValidator creationValidator;^21^^^^^^^[REPLACE] private final CreationValidator creationValidator;^ [CLASS] MockUtil  
[REPLACE]^this.creationValidator =  null;^24^^^^^23^25^[REPLACE] this.creationValidator = creationValidator;^[METHOD] <init> [TYPE] CreationValidator) [PARAMETER] CreationValidator creationValidator [CLASS] MockUtil   [TYPE]  CreationValidator creationValidator  [TYPE]  boolean false  true 
[ADD]^^24^^^^^23^25^[ADD] this.creationValidator = creationValidator;^[METHOD] <init> [TYPE] CreationValidator) [PARAMETER] CreationValidator creationValidator [CLASS] MockUtil   [TYPE]  CreationValidator creationValidator  [TYPE]  boolean false  true 
[REPLACE]^throw new NotAMockException  (" ")  ;^28^^^^^27^29^[REPLACE] this ( new CreationValidator (  )  ) ;^[METHOD] <init> [TYPE] MockUtil() [PARAMETER] [CLASS] MockUtil   [TYPE]  CreationValidator creationValidator  [TYPE]  boolean false  true 
[REPLACE]^creationValidator.validateType ( true ) ;^32^^^^^31^49^[REPLACE] creationValidator.validateType ( classToMock ) ;^[METHOD] createMock [TYPE] <T> [PARAMETER] Class<T> classToMock MockingProgress progress MockSettingsImpl settings [CLASS] MockUtil   [TYPE]  MockName mockName  [TYPE]  Class[] ancillaryTypes  interfaces  [TYPE]  boolean false  true  [TYPE]  T mock  [TYPE]  MockSettingsImpl settings  [TYPE]  CreationValidator creationValidator  [TYPE]  Class classToMock  [TYPE]  MockHandler mockHandler  [TYPE]  Object spiedInstance  [TYPE]  MockingProgress progress  [TYPE]  MethodInterceptorFilter filter 
[REPLACE]^creationValidator.validateExtraInterfaces ( this, settings .getSpiedInstance (  )   ) ;^33^^^^^31^49^[REPLACE] creationValidator.validateExtraInterfaces ( classToMock, settings.getExtraInterfaces (  )  ) ;^[METHOD] createMock [TYPE] <T> [PARAMETER] Class<T> classToMock MockingProgress progress MockSettingsImpl settings [CLASS] MockUtil   [TYPE]  MockName mockName  [TYPE]  Class[] ancillaryTypes  interfaces  [TYPE]  boolean false  true  [TYPE]  T mock  [TYPE]  MockSettingsImpl settings  [TYPE]  CreationValidator creationValidator  [TYPE]  Class classToMock  [TYPE]  MockHandler mockHandler  [TYPE]  Object spiedInstance  [TYPE]  MockingProgress progress  [TYPE]  MethodInterceptorFilter filter 
[REPLACE]^creationValidator.validateExtraInterfaces ( classToMock, settings.getSpiedInstance (  )  ) ;^33^^^^^31^49^[REPLACE] creationValidator.validateExtraInterfaces ( classToMock, settings.getExtraInterfaces (  )  ) ;^[METHOD] createMock [TYPE] <T> [PARAMETER] Class<T> classToMock MockingProgress progress MockSettingsImpl settings [CLASS] MockUtil   [TYPE]  MockName mockName  [TYPE]  Class[] ancillaryTypes  interfaces  [TYPE]  boolean false  true  [TYPE]  T mock  [TYPE]  MockSettingsImpl settings  [TYPE]  CreationValidator creationValidator  [TYPE]  Class classToMock  [TYPE]  MockHandler mockHandler  [TYPE]  Object spiedInstance  [TYPE]  MockingProgress progress  [TYPE]  MethodInterceptorFilter filter 
[ADD]^^33^^^^^31^49^[ADD] creationValidator.validateExtraInterfaces ( classToMock, settings.getExtraInterfaces (  )  ) ;^[METHOD] createMock [TYPE] <T> [PARAMETER] Class<T> classToMock MockingProgress progress MockSettingsImpl settings [CLASS] MockUtil   [TYPE]  MockName mockName  [TYPE]  Class[] ancillaryTypes  interfaces  [TYPE]  boolean false  true  [TYPE]  T mock  [TYPE]  MockSettingsImpl settings  [TYPE]  CreationValidator creationValidator  [TYPE]  Class classToMock  [TYPE]  MockHandler mockHandler  [TYPE]  Object spiedInstance  [TYPE]  MockingProgress progress  [TYPE]  MethodInterceptorFilter filter 
[REPLACE]^MockName mockName = new MockName ( settings.getMockName (  ) , null ) ;^35^^^^^31^49^[REPLACE] MockName mockName = new MockName ( settings.getMockName (  ) , classToMock ) ;^[METHOD] createMock [TYPE] <T> [PARAMETER] Class<T> classToMock MockingProgress progress MockSettingsImpl settings [CLASS] MockUtil   [TYPE]  MockName mockName  [TYPE]  Class[] ancillaryTypes  interfaces  [TYPE]  boolean false  true  [TYPE]  T mock  [TYPE]  MockSettingsImpl settings  [TYPE]  CreationValidator creationValidator  [TYPE]  Class classToMock  [TYPE]  MockHandler mockHandler  [TYPE]  Object spiedInstance  [TYPE]  MockingProgress progress  [TYPE]  MethodInterceptorFilter filter 
[REPLACE]^MockName mockName = new MockName ( settings.getMockName (  ) , classToMock ) ;^36^^^^^31^49^[REPLACE] MockHandler<T> mockHandler = new MockHandler<T> ( mockName, progress, new MatchersBinder (  ) , settings ) ;^[METHOD] createMock [TYPE] <T> [PARAMETER] Class<T> classToMock MockingProgress progress MockSettingsImpl settings [CLASS] MockUtil   [TYPE]  MockName mockName  [TYPE]  Class[] ancillaryTypes  interfaces  [TYPE]  boolean false  true  [TYPE]  T mock  [TYPE]  MockSettingsImpl settings  [TYPE]  CreationValidator creationValidator  [TYPE]  Class classToMock  [TYPE]  MockHandler mockHandler  [TYPE]  Object spiedInstance  [TYPE]  MockingProgress progress  [TYPE]  MethodInterceptorFilter filter 
[ADD]^^36^^^^^31^49^[ADD] MockHandler<T> mockHandler = new MockHandler<T> ( mockName, progress, new MatchersBinder (  ) , settings ) ;^[METHOD] createMock [TYPE] <T> [PARAMETER] Class<T> classToMock MockingProgress progress MockSettingsImpl settings [CLASS] MockUtil   [TYPE]  MockName mockName  [TYPE]  Class[] ancillaryTypes  interfaces  [TYPE]  boolean false  true  [TYPE]  T mock  [TYPE]  MockSettingsImpl settings  [TYPE]  CreationValidator creationValidator  [TYPE]  Class classToMock  [TYPE]  MockHandler mockHandler  [TYPE]  Object spiedInstance  [TYPE]  MockingProgress progress  [TYPE]  MethodInterceptorFilter filter 
[REPLACE]^MethodInterceptorFilter<MockHandler<T>> filter = new MethodInterceptorFilter<MockHandler<T>> ( classToMock, false ) ;^37^^^^^31^49^[REPLACE] MethodInterceptorFilter<MockHandler<T>> filter = new MethodInterceptorFilter<MockHandler<T>> ( classToMock, mockHandler ) ;^[METHOD] createMock [TYPE] <T> [PARAMETER] Class<T> classToMock MockingProgress progress MockSettingsImpl settings [CLASS] MockUtil   [TYPE]  MockName mockName  [TYPE]  Class[] ancillaryTypes  interfaces  [TYPE]  boolean false  true  [TYPE]  T mock  [TYPE]  MockSettingsImpl settings  [TYPE]  CreationValidator creationValidator  [TYPE]  Class classToMock  [TYPE]  MockHandler mockHandler  [TYPE]  Object spiedInstance  [TYPE]  MockingProgress progress  [TYPE]  MethodInterceptorFilter filter 
[REPLACE]^Class<?>[] interfaces = settings.getSpiedInstance (  ) ;^38^^^^^31^49^[REPLACE] Class<?>[] interfaces = settings.getExtraInterfaces (  ) ;^[METHOD] createMock [TYPE] <T> [PARAMETER] Class<T> classToMock MockingProgress progress MockSettingsImpl settings [CLASS] MockUtil   [TYPE]  MockName mockName  [TYPE]  Class[] ancillaryTypes  interfaces  [TYPE]  boolean false  true  [TYPE]  T mock  [TYPE]  MockSettingsImpl settings  [TYPE]  CreationValidator creationValidator  [TYPE]  Class classToMock  [TYPE]  MockHandler mockHandler  [TYPE]  Object spiedInstance  [TYPE]  MockingProgress progress  [TYPE]  MethodInterceptorFilter filter 
[REPLACE]^Class<?>[] ancillaryTypes  =  interfaces;^39^^^^^31^49^[REPLACE] Class<?>[] ancillaryTypes = interfaces == null ? new Class<?>[0] : interfaces;^[METHOD] createMock [TYPE] <T> [PARAMETER] Class<T> classToMock MockingProgress progress MockSettingsImpl settings [CLASS] MockUtil   [TYPE]  MockName mockName  [TYPE]  Class[] ancillaryTypes  interfaces  [TYPE]  boolean false  true  [TYPE]  T mock  [TYPE]  MockSettingsImpl settings  [TYPE]  CreationValidator creationValidator  [TYPE]  Class classToMock  [TYPE]  MockHandler mockHandler  [TYPE]  Object spiedInstance  [TYPE]  MockingProgress progress  [TYPE]  MethodInterceptorFilter filter 
[REPLACE]^Object spiedInstance = settings.getMockName (  ) ;^40^^^^^31^49^[REPLACE] Object spiedInstance = settings.getSpiedInstance (  ) ;^[METHOD] createMock [TYPE] <T> [PARAMETER] Class<T> classToMock MockingProgress progress MockSettingsImpl settings [CLASS] MockUtil   [TYPE]  MockName mockName  [TYPE]  Class[] ancillaryTypes  interfaces  [TYPE]  boolean false  true  [TYPE]  T mock  [TYPE]  MockSettingsImpl settings  [TYPE]  CreationValidator creationValidator  [TYPE]  Class classToMock  [TYPE]  MockHandler mockHandler  [TYPE]  Object spiedInstance  [TYPE]  MockingProgress progress  [TYPE]  MethodInterceptorFilter filter 
[REPLACE]^T mock = ClassImposterizer.INSTANCE.imposterise ( filter, classToMock, false ) ;^42^^^^^31^49^[REPLACE] T mock = ClassImposterizer.INSTANCE.imposterise ( filter, classToMock, ancillaryTypes ) ;^[METHOD] createMock [TYPE] <T> [PARAMETER] Class<T> classToMock MockingProgress progress MockSettingsImpl settings [CLASS] MockUtil   [TYPE]  MockName mockName  [TYPE]  Class[] ancillaryTypes  interfaces  [TYPE]  boolean false  true  [TYPE]  T mock  [TYPE]  MockSettingsImpl settings  [TYPE]  CreationValidator creationValidator  [TYPE]  Class classToMock  [TYPE]  MockHandler mockHandler  [TYPE]  Object spiedInstance  [TYPE]  MockingProgress progress  [TYPE]  MethodInterceptorFilter filter 
[REPLACE]^if  ( spiedInstance == null )  {^44^^^^^31^49^[REPLACE] if  ( spiedInstance != null )  {^[METHOD] createMock [TYPE] <T> [PARAMETER] Class<T> classToMock MockingProgress progress MockSettingsImpl settings [CLASS] MockUtil   [TYPE]  MockName mockName  [TYPE]  Class[] ancillaryTypes  interfaces  [TYPE]  boolean false  true  [TYPE]  T mock  [TYPE]  MockSettingsImpl settings  [TYPE]  CreationValidator creationValidator  [TYPE]  Class classToMock  [TYPE]  MockHandler mockHandler  [TYPE]  Object spiedInstance  [TYPE]  MockingProgress progress  [TYPE]  MethodInterceptorFilter filter 
[REPLACE]^Object spiedInstance = settings.getSpiedInstance (  ) ;^45^^^^^31^49^[REPLACE] new LenientCopyTool (  ) .copyToMock ( spiedInstance, mock ) ;^[METHOD] createMock [TYPE] <T> [PARAMETER] Class<T> classToMock MockingProgress progress MockSettingsImpl settings [CLASS] MockUtil   [TYPE]  MockName mockName  [TYPE]  Class[] ancillaryTypes  interfaces  [TYPE]  boolean false  true  [TYPE]  T mock  [TYPE]  MockSettingsImpl settings  [TYPE]  CreationValidator creationValidator  [TYPE]  Class classToMock  [TYPE]  MockHandler mockHandler  [TYPE]  Object spiedInstance  [TYPE]  MockingProgress progress  [TYPE]  MethodInterceptorFilter filter 
[REPLACE]^return null;^48^^^^^31^49^[REPLACE] return mock;^[METHOD] createMock [TYPE] <T> [PARAMETER] Class<T> classToMock MockingProgress progress MockSettingsImpl settings [CLASS] MockUtil   [TYPE]  MockName mockName  [TYPE]  Class[] ancillaryTypes  interfaces  [TYPE]  boolean false  true  [TYPE]  T mock  [TYPE]  MockSettingsImpl settings  [TYPE]  CreationValidator creationValidator  [TYPE]  Class classToMock  [TYPE]  MockHandler mockHandler  [TYPE]  Object spiedInstance  [TYPE]  MockingProgress progress  [TYPE]  MethodInterceptorFilter filter 
[REPLACE]^MockName mockName = new MockName ( settings.getMockName (  ) , classToMock ) ;^52^^^^^51^56^[REPLACE] MockHandler<T> oldMockHandler =  ( MockHandler<T> )  getMockHandler ( mock ) ;^[METHOD] resetMock [TYPE] <T> [PARAMETER] T mock MockingProgress progress [CLASS] MockUtil   [TYPE]  MockHandler newMockHandler  oldMockHandler  [TYPE]  boolean false  true  [TYPE]  T mock  [TYPE]  MockingProgress progress  [TYPE]  CreationValidator creationValidator  [TYPE]  MethodInterceptorFilter newFilter 
[REPLACE]^MockHandler<T> newMockHandler = new MockHandler<T> ( 1 ) ;^53^^^^^51^56^[REPLACE] MockHandler<T> newMockHandler = new MockHandler<T> ( oldMockHandler ) ;^[METHOD] resetMock [TYPE] <T> [PARAMETER] T mock MockingProgress progress [CLASS] MockUtil   [TYPE]  MockHandler newMockHandler  oldMockHandler  [TYPE]  boolean false  true  [TYPE]  T mock  [TYPE]  MockingProgress progress  [TYPE]  CreationValidator creationValidator  [TYPE]  MethodInterceptorFilter newFilter 
[REPLACE]^MethodInterceptorFilter<MockHandler<T>> newFilter = new MethodInterceptorFilter<MockHandler<T>> ( Object.class, true ) ;^54^^^^^51^56^[REPLACE] MethodInterceptorFilter<MockHandler<T>> newFilter = new MethodInterceptorFilter<MockHandler<T>> ( Object.class, newMockHandler ) ;^[METHOD] resetMock [TYPE] <T> [PARAMETER] T mock MockingProgress progress [CLASS] MockUtil   [TYPE]  MockHandler newMockHandler  oldMockHandler  [TYPE]  boolean false  true  [TYPE]  T mock  [TYPE]  MockingProgress progress  [TYPE]  CreationValidator creationValidator  [TYPE]  MethodInterceptorFilter newFilter 
[REPLACE]^(  ( Factory )  mock ) .setCallback ( 1, newFilter ) ;^55^^^^^51^56^[REPLACE] (  ( Factory )  mock ) .setCallback ( 0, newFilter ) ;^[METHOD] resetMock [TYPE] <T> [PARAMETER] T mock MockingProgress progress [CLASS] MockUtil   [TYPE]  MockHandler newMockHandler  oldMockHandler  [TYPE]  boolean false  true  [TYPE]  T mock  [TYPE]  MockingProgress progress  [TYPE]  CreationValidator creationValidator  [TYPE]  MethodInterceptorFilter newFilter 
[REPLACE]^if  ( mock != null )  {^59^^^^^58^68^[REPLACE] if  ( mock == null )  {^[METHOD] getMockHandler [TYPE] <T> [PARAMETER] T mock [CLASS] MockUtil   [TYPE]  T mock  [TYPE]  CreationValidator creationValidator  [TYPE]  boolean false  true 
[REPLACE]^return ;^60^^^^^58^68^[REPLACE] throw new NotAMockException  (" ")  ;^[METHOD] getMockHandler [TYPE] <T> [PARAMETER] T mock [CLASS] MockUtil   [TYPE]  T mock  [TYPE]  CreationValidator creationValidator  [TYPE]  boolean false  true 
[ADD]^^60^^^^^58^68^[ADD] throw new NotAMockException  (" ")  ;^[METHOD] getMockHandler [TYPE] <T> [PARAMETER] T mock [CLASS] MockUtil   [TYPE]  T mock  [TYPE]  CreationValidator creationValidator  [TYPE]  boolean false  true 
[REPLACE]^if  ( mock == null )  {^63^^^^^58^68^[REPLACE] if  ( isMockitoMock ( mock )  )  {^[METHOD] getMockHandler [TYPE] <T> [PARAMETER] T mock [CLASS] MockUtil   [TYPE]  T mock  [TYPE]  CreationValidator creationValidator  [TYPE]  boolean false  true 
[REPLACE]^return ;^66^^^^^58^68^[REPLACE] throw new NotAMockException  (" ")  ;^[METHOD] getMockHandler [TYPE] <T> [PARAMETER] T mock [CLASS] MockUtil   [TYPE]  T mock  [TYPE]  CreationValidator creationValidator  [TYPE]  boolean false  true 
[REPLACE]^MockName mockName = new MockName ( settings.getMockName (  ) , classToMock ) ;^66^^^^^58^68^[REPLACE] throw new NotAMockException  (" ")  ;^[METHOD] getMockHandler [TYPE] <T> [PARAMETER] T mock [CLASS] MockUtil   [TYPE]  T mock  [TYPE]  CreationValidator creationValidator  [TYPE]  boolean false  true 
[REPLACE]^return Enhancer.isEnhanced ( mock.getClass (  )  )  && getInterceptor ( mock )  != null;^64^^^^^58^68^[REPLACE] return getInterceptor ( mock ) .getDelegate (  ) ;^[METHOD] getMockHandler [TYPE] <T> [PARAMETER] T mock [CLASS] MockUtil   [TYPE]  T mock  [TYPE]  CreationValidator creationValidator  [TYPE]  boolean false  true 
[REPLACE]^return Enhancer.isEnhanced ( mock.getClass (  )  )  ;^71^^^^^70^72^[REPLACE] return Enhancer.isEnhanced ( mock.getClass (  )  )  && getInterceptor ( mock )  != null;^[METHOD] isMockitoMock [TYPE] <T> [PARAMETER] T mock [CLASS] MockUtil   [TYPE]  T mock  [TYPE]  CreationValidator creationValidator  [TYPE]  boolean false  true 
[REPLACE]^return   isMockitoMock ( mock ) ;^75^^^^^74^76^[REPLACE] return mock != null && isMockitoMock ( mock ) ;^[METHOD] isMock [TYPE] boolean [PARAMETER] Object mock [CLASS] MockUtil   [TYPE]  Object mock  [TYPE]  CreationValidator creationValidator  [TYPE]  boolean false  true 
[REPLACE]^MockName mockName = new MockName ( settings.getMockName (  ) , classToMock ) ;^80^^^^^79^86^[REPLACE] Factory factory =  ( Factory )  mock;^[METHOD] getInterceptor [TYPE] <T> [PARAMETER] T mock [CLASS] MockUtil   [TYPE]  Factory factory  [TYPE]  Callback callback  [TYPE]  boolean false  true  [TYPE]  T mock  [TYPE]  CreationValidator creationValidator 
[ADD]^Callback callback = factory.getCallback ( 0 ) ;^80^81^^^^79^86^[ADD] Factory factory =  ( Factory )  mock; Callback callback = factory.getCallback ( 0 ) ;^[METHOD] getInterceptor [TYPE] <T> [PARAMETER] T mock [CLASS] MockUtil   [TYPE]  Factory factory  [TYPE]  Callback callback  [TYPE]  boolean false  true  [TYPE]  T mock  [TYPE]  CreationValidator creationValidator 
[REPLACE]^Callback callback = factory.getCallback ( 0L ) ;^81^^^^^79^86^[REPLACE] Callback callback = factory.getCallback ( 0 ) ;^[METHOD] getInterceptor [TYPE] <T> [PARAMETER] T mock [CLASS] MockUtil   [TYPE]  Factory factory  [TYPE]  Callback callback  [TYPE]  boolean false  true  [TYPE]  T mock  [TYPE]  CreationValidator creationValidator 
[REPLACE]^if  ( ! callback instanceof MethodInterceptorFilter )  {^82^^^^^79^86^[REPLACE] if  ( callback instanceof MethodInterceptorFilter )  {^[METHOD] getInterceptor [TYPE] <T> [PARAMETER] T mock [CLASS] MockUtil   [TYPE]  Factory factory  [TYPE]  Callback callback  [TYPE]  boolean false  true  [TYPE]  T mock  [TYPE]  CreationValidator creationValidator 
[REPLACE]^return getInterceptor ( mock ) .getDelegate (  ) ;^83^^^^^79^86^[REPLACE] return  ( MethodInterceptorFilter<MockHandler<T>> )  callback;^[METHOD] getInterceptor [TYPE] <T> [PARAMETER] T mock [CLASS] MockUtil   [TYPE]  Factory factory  [TYPE]  Callback callback  [TYPE]  boolean false  true  [TYPE]  T mock  [TYPE]  CreationValidator creationValidator 
[REPLACE]^return false;^85^^^^^79^86^[REPLACE] return null;^[METHOD] getInterceptor [TYPE] <T> [PARAMETER] T mock [CLASS] MockUtil   [TYPE]  Factory factory  [TYPE]  Callback callback  [TYPE]  boolean false  true  [TYPE]  T mock  [TYPE]  CreationValidator creationValidator 
[REPLACE]^return getMockHandler ( mock )  .getSpiedInstance (  )  ;^89^^^^^88^90^[REPLACE] return getMockHandler ( mock ) .getMockName (  ) ;^[METHOD] getMockName [TYPE] MockName [PARAMETER] Object mock [CLASS] MockUtil   [TYPE]  Object mock  [TYPE]  CreationValidator creationValidator  [TYPE]  boolean false  true 
