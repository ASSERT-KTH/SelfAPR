[REPLACE]^private  RealMethod realMethod;^12^^^^^^^[REPLACE] private final RealMethod realMethod;^ [CLASS] FilteredCGLIBProxyRealMethod  
[REPLACE]^return  (  ( HasCGLIBMethodProxy )  realMethod ) .getMethodProxy (  ) ;^15^^^^^14^16^[REPLACE] this ( new CGLIBProxyRealMethod ( methodProxy )  ) ;^[METHOD] <init> [TYPE] MethodProxy) [PARAMETER] MethodProxy methodProxy [CLASS] FilteredCGLIBProxyRealMethod   [TYPE]  RealMethod realMethod  [TYPE]  MethodProxy methodProxy  [TYPE]  boolean false  true 
[REPLACE]^this.realMethod =  null;^19^^^^^18^20^[REPLACE] this.realMethod = realMethod;^[METHOD] <init> [TYPE] RealMethod) [PARAMETER] RealMethod realMethod [CLASS] FilteredCGLIBProxyRealMethod   [TYPE]  RealMethod realMethod  [TYPE]  boolean false  true 
[ADD]^return realMethod.invoke ( target, arguments ) ;new ConditionalStackTraceFilter (  ) .filter ( t ) ;^23^24^25^26^27^22^29^[ADD] try { return realMethod.invoke ( target, arguments ) ; } catch  ( Throwable t )  { new ConditionalStackTraceFilter (  ) .filter ( t ) ; throw t;^[METHOD] invoke [TYPE] Object [PARAMETER] Object target Object[] arguments [CLASS] FilteredCGLIBProxyRealMethod   [TYPE]  Throwable t  [TYPE]  Object target  [TYPE]  boolean false  true  [TYPE]  RealMethod realMethod  [TYPE]  Object[] arguments 
[REPLACE]^return  (  ( HasCGLIBMethodProxy )  realMethod ) .getMethodProxy (  ) ;^24^^^^^22^29^[REPLACE] return realMethod.invoke ( target, arguments ) ;^[METHOD] invoke [TYPE] Object [PARAMETER] Object target Object[] arguments [CLASS] FilteredCGLIBProxyRealMethod   [TYPE]  Throwable t  [TYPE]  Object target  [TYPE]  boolean false  true  [TYPE]  RealMethod realMethod  [TYPE]  Object[] arguments 
[REPLACE]^return ;^27^^^^^22^29^[REPLACE] throw t;^[METHOD] invoke [TYPE] Object [PARAMETER] Object target Object[] arguments [CLASS] FilteredCGLIBProxyRealMethod   [TYPE]  Throwable t  [TYPE]  Object target  [TYPE]  boolean false  true  [TYPE]  RealMethod realMethod  [TYPE]  Object[] arguments 
[REPLACE]^return realMethod.invoke ( target, arguments ) ;^32^^^^^31^33^[REPLACE] return  (  ( HasCGLIBMethodProxy )  realMethod ) .getMethodProxy (  ) ;^[METHOD] getMethodProxy [TYPE] MethodProxy [PARAMETER] [CLASS] FilteredCGLIBProxyRealMethod   [TYPE]  RealMethod realMethod  [TYPE]  boolean false  true 
