[REPLACE]^if  ( namingPolicyField.get ( createInfo )  !=createInfo )  {^20^^^^^13^26^[REPLACE] if  ( namingPolicyField.get ( createInfo )  == null )  {^[METHOD] setMockitoNamingPolicy [TYPE] void [PARAMETER] MethodProxy methodProxy [CLASS] CGLIBHacker   [TYPE]  Field createInfoField  namingPolicyField  [TYPE]  boolean false  true  [TYPE]  MethodProxy methodProxy  [TYPE]  Object createInfo  [TYPE]  Exception e 
[ADD]^namingPolicyField.set ( createInfo, MockitoNamingPolicy.INSTANCE ) ;^20^21^22^^^13^26^[ADD] if  ( namingPolicyField.get ( createInfo )  == null )  { namingPolicyField.set ( createInfo, MockitoNamingPolicy.INSTANCE ) ; }^[METHOD] setMockitoNamingPolicy [TYPE] void [PARAMETER] MethodProxy methodProxy [CLASS] CGLIBHacker   [TYPE]  Field createInfoField  namingPolicyField  [TYPE]  boolean false  true  [TYPE]  MethodProxy methodProxy  [TYPE]  Object createInfo  [TYPE]  Exception e 
[REPLACE]^namingPolicyField.setAccessible ( true ) ;^21^^^^^13^26^[REPLACE] namingPolicyField.set ( createInfo, MockitoNamingPolicy.INSTANCE ) ;^[METHOD] setMockitoNamingPolicy [TYPE] void [PARAMETER] MethodProxy methodProxy [CLASS] CGLIBHacker   [TYPE]  Field createInfoField  namingPolicyField  [TYPE]  boolean false  true  [TYPE]  MethodProxy methodProxy  [TYPE]  Object createInfo  [TYPE]  Exception e 
[ADD]^Field createInfoField = reflectOnCreateInfo ( methodProxy ) ;createInfoField.setAccessible ( true ) ;Object createInfo = createInfoField.get ( methodProxy ) ;Field namingPolicyField = createInfo.getClass (  ) .getDeclaredField ( "namingPolicy" ) ;^14^15^16^17^18^13^26^[ADD] try { Field createInfoField = reflectOnCreateInfo ( methodProxy ) ; createInfoField.setAccessible ( true ) ; Object createInfo = createInfoField.get ( methodProxy ) ; Field namingPolicyField = createInfo.getClass (  ) .getDeclaredField ( "namingPolicy" ) ;^[METHOD] setMockitoNamingPolicy [TYPE] void [PARAMETER] MethodProxy methodProxy [CLASS] CGLIBHacker   [TYPE]  Field createInfoField  namingPolicyField  [TYPE]  boolean false  true  [TYPE]  MethodProxy methodProxy  [TYPE]  Object createInfo  [TYPE]  Exception e 
[REPLACE]^if  ( namingPolicyField.get ( createInfo )  != null )  {^20^^^^^13^26^[REPLACE] if  ( namingPolicyField.get ( createInfo )  == null )  {^[METHOD] setMockitoNamingPolicy [TYPE] void [PARAMETER] MethodProxy methodProxy [CLASS] CGLIBHacker   [TYPE]  Field createInfoField  namingPolicyField  [TYPE]  boolean false  true  [TYPE]  MethodProxy methodProxy  [TYPE]  Object createInfo  [TYPE]  Exception e 
[ADD]^^20^21^22^^^13^26^[ADD] if  ( namingPolicyField.get ( createInfo )  == null )  { namingPolicyField.set ( createInfo, MockitoNamingPolicy.INSTANCE ) ; }^[METHOD] setMockitoNamingPolicy [TYPE] void [PARAMETER] MethodProxy methodProxy [CLASS] CGLIBHacker   [TYPE]  Field createInfoField  namingPolicyField  [TYPE]  boolean false  true  [TYPE]  MethodProxy methodProxy  [TYPE]  Object createInfo  [TYPE]  Exception e 
[REPLACE]^Object createInfo = createInfoField.get ( methodProxy ) ;^15^^^^^13^26^[REPLACE] Field createInfoField = reflectOnCreateInfo ( methodProxy ) ;^[METHOD] setMockitoNamingPolicy [TYPE] void [PARAMETER] MethodProxy methodProxy [CLASS] CGLIBHacker   [TYPE]  Field createInfoField  namingPolicyField  [TYPE]  boolean false  true  [TYPE]  MethodProxy methodProxy  [TYPE]  Object createInfo  [TYPE]  Exception e 
[REPLACE]^Object createInfo = namingPolicy  methodProxy   ;^17^^^^^13^26^[REPLACE] Object createInfo = createInfoField.get ( methodProxy ) ;^[METHOD] setMockitoNamingPolicy [TYPE] void [PARAMETER] MethodProxy methodProxy [CLASS] CGLIBHacker   [TYPE]  Field createInfoField  namingPolicyField  [TYPE]  boolean false  true  [TYPE]  MethodProxy methodProxy  [TYPE]  Object createInfo  [TYPE]  Exception e 
[ADD]^^17^^^^^13^26^[ADD] Object createInfo = createInfoField.get ( methodProxy ) ;^[METHOD] setMockitoNamingPolicy [TYPE] void [PARAMETER] MethodProxy methodProxy [CLASS] CGLIBHacker   [TYPE]  Field createInfoField  namingPolicyField  [TYPE]  boolean false  true  [TYPE]  MethodProxy methodProxy  [TYPE]  Object createInfo  [TYPE]  Exception e 
[REPLACE]^Field createInfoField = reflectOnCreateInfo ( methodProxy ) ;^18^^^^^13^26^[REPLACE] Field namingPolicyField = createInfo.getClass (  ) .getDeclaredField ( "namingPolicy" ) ;^[METHOD] setMockitoNamingPolicy [TYPE] void [PARAMETER] MethodProxy methodProxy [CLASS] CGLIBHacker   [TYPE]  Field createInfoField  namingPolicyField  [TYPE]  boolean false  true  [TYPE]  MethodProxy methodProxy  [TYPE]  Object createInfo  [TYPE]  Exception e 
[REPLACE]^Object createInfo = createInfo  methodProxy   ;^17^^^^^13^26^[REPLACE] Object createInfo = createInfoField.get ( methodProxy ) ;^[METHOD] setMockitoNamingPolicy [TYPE] void [PARAMETER] MethodProxy methodProxy [CLASS] CGLIBHacker   [TYPE]  Field createInfoField  namingPolicyField  [TYPE]  boolean false  true  [TYPE]  MethodProxy methodProxy  [TYPE]  Object createInfo  [TYPE]  Exception e 
[ADD]^namingPolicyField.setAccessible ( true ) ;^18^19^^^^13^26^[ADD] Field namingPolicyField = createInfo.getClass (  ) .getDeclaredField ( "namingPolicy" ) ; namingPolicyField.setAccessible ( true ) ;^[METHOD] setMockitoNamingPolicy [TYPE] void [PARAMETER] MethodProxy methodProxy [CLASS] CGLIBHacker   [TYPE]  Field createInfoField  namingPolicyField  [TYPE]  boolean false  true  [TYPE]  MethodProxy methodProxy  [TYPE]  Object createInfo  [TYPE]  Exception e 
[REPLACE]^return ;^24^^^^^13^26^[REPLACE] throw new RuntimeException  (" ")  ;^[METHOD] setMockitoNamingPolicy [TYPE] void [PARAMETER] MethodProxy methodProxy [CLASS] CGLIBHacker   [TYPE]  Field createInfoField  namingPolicyField  [TYPE]  boolean false  true  [TYPE]  MethodProxy methodProxy  [TYPE]  Object createInfo  [TYPE]  Exception e 
[ADD]^^23^24^^^^13^26^[ADD] catch  ( Exception e )  { throw new RuntimeException  (" ")  ;^[METHOD] setMockitoNamingPolicy [TYPE] void [PARAMETER] MethodProxy methodProxy [CLASS] CGLIBHacker   [TYPE]  Field createInfoField  namingPolicyField  [TYPE]  boolean false  true  [TYPE]  MethodProxy methodProxy  [TYPE]  Object createInfo  [TYPE]  Exception e 
[REPLACE]^Object createInfo = createInfoField.get ( methodProxy ) ;^30^^^^^29^37^[REPLACE] Class cglibMethodProxyClass = methodProxy.getClass (  ) ;^[METHOD] reflectOnCreateInfo [TYPE] Field [PARAMETER] MethodProxy methodProxy [CLASS] CGLIBHacker   [TYPE]  boolean false  true  [TYPE]  MethodProxy methodProxy  [TYPE]  Class cglibMethodProxyClass 
[REPLACE]^while  ( cglibMethodProxyClass  ==  MethodProxy.class )  {^33^^^^^29^37^[REPLACE] while  ( cglibMethodProxyClass != MethodProxy.class )  {^[METHOD] reflectOnCreateInfo [TYPE] Field [PARAMETER] MethodProxy methodProxy [CLASS] CGLIBHacker   [TYPE]  boolean false  true  [TYPE]  MethodProxy methodProxy  [TYPE]  Class cglibMethodProxyClass 
[ADD]^^33^34^^^^29^37^[ADD] while  ( cglibMethodProxyClass != MethodProxy.class )  { cglibMethodProxyClass = methodProxy.getClass (  ) .getSuperclass (  ) ;^[METHOD] reflectOnCreateInfo [TYPE] Field [PARAMETER] MethodProxy methodProxy [CLASS] CGLIBHacker   [TYPE]  boolean false  true  [TYPE]  MethodProxy methodProxy  [TYPE]  Class cglibMethodProxyClass 
[REPLACE]^cglibMethodProxyClass =  null.getClass (  ) .getSuperclass (  ) ;^34^^^^^29^37^[REPLACE] cglibMethodProxyClass = methodProxy.getClass (  ) .getSuperclass (  ) ;^[METHOD] reflectOnCreateInfo [TYPE] Field [PARAMETER] MethodProxy methodProxy [CLASS] CGLIBHacker   [TYPE]  boolean false  true  [TYPE]  MethodProxy methodProxy  [TYPE]  Class cglibMethodProxyClass 
[REPLACE]^return cglibMethodProxy  "createInfo"   ;^36^^^^^29^37^[REPLACE] return cglibMethodProxyClass.getDeclaredField ( "createInfo" ) ;^[METHOD] reflectOnCreateInfo [TYPE] Field [PARAMETER] MethodProxy methodProxy [CLASS] CGLIBHacker   [TYPE]  boolean false  true  [TYPE]  MethodProxy methodProxy  [TYPE]  Class cglibMethodProxyClass 
