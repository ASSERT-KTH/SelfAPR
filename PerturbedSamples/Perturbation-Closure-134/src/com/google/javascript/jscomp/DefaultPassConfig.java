[REPLACE]^private static final String COMPILED_CONSTANT_NAME  = null ;^53^^^^^^^[REPLACE] private static final String COMPILED_CONSTANT_NAME = "COMPILED";^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private static  String CLOSURE_LOCALE_CONSTANT_NAME = "goog.LOCALE";^56^^^^^^^[REPLACE] private static final String CLOSURE_LOCALE_CONSTANT_NAME = "goog.LOCALE";^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^static final DiagnosticType TIGHTEN_TYPES_WITHOUT_TYPE_CHECK ;^59^60^61^^^59^61^[REPLACE] static final DiagnosticType TIGHTEN_TYPES_WITHOUT_TYPE_CHECK = DiagnosticType.error ( "JSC_TIGHTEN_TYPES_WITHOUT_TYPE_CHECK", "TightenTypes requires type checking. Please use --check_types." ) ;^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^static  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR = DiagnosticType.error ( "JSC_CANNOT_USE_PROTOTYPE_AND_VAR", "Rename prototypes and inline variables cannot be used together" ) ;^63^64^65^^^63^65^[REPLACE] static final DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR = DiagnosticType.error ( "JSC_CANNOT_USE_PROTOTYPE_AND_VAR", "Rename prototypes and inline variables cannot be used together" ) ;^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^static final DiagnosticType REPORT_PATH_IO_ERROR ;^68^69^70^^^68^70^[REPLACE] static final DiagnosticType REPORT_PATH_IO_ERROR = DiagnosticType.error ( "JSC_REPORT_PATH_IO_ERROR", "Error writing compiler report to {0}" ) ;^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private  final DiagnosticType INPUT_MAP_PROP_PARSE = DiagnosticType.error ( "JSC_INPUT_MAP_PROP_PARSE", "Input property map parse error: {0}" ) ;^72^73^74^^^72^74^[REPLACE] private static final DiagnosticType INPUT_MAP_PROP_PARSE = DiagnosticType.error ( "JSC_INPUT_MAP_PROP_PARSE", "Input property map parse error: {0}" ) ;^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private static final DiagnosticType INPUT_MAP_VAR_PARSE  = null ;^76^77^78^^^76^78^[REPLACE] private static final DiagnosticType INPUT_MAP_VAR_PARSE = DiagnosticType.error ( "JSC_INPUT_MAP_VAR_PARSE", "Input variable map parse error: {0}" ) ;^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private GlobalNamespace namespaceForChecks = true;^85^^^^^^^[REPLACE] private GlobalNamespace namespaceForChecks = null;^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private TightenTypes tightenTypes = false;^90^^^^^^^[REPLACE] private TightenTypes tightenTypes = null;^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private Set<String> exportedNames  = null ;^93^^^^^^^[REPLACE] private Set<String> exportedNames = null;^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private CrossModuleMethodMotion.IdGenerator crossModuleIdGenerator  = null ;^99^100^^^^99^100^[REPLACE] private CrossModuleMethodMotion.IdGenerator crossModuleIdGenerator = new CrossModuleMethodMotion.IdGenerator (  ) ;^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private Map<String, Integer> cssNames = false;^106^^^^^^^[REPLACE] private Map<String, Integer> cssNames = null;^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private VariableMap variableMap ;^109^^^^^^^[REPLACE] private VariableMap variableMap = null;^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private VariableMap propertyMap ;^112^^^^^^^[REPLACE] private VariableMap propertyMap = null;^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private VariableMap anonymousFunctionNameMap ;^115^^^^^^^[REPLACE] private VariableMap anonymousFunctionNameMap = null;^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private FunctionNames functionNames  = null ;^118^^^^^^^[REPLACE] private FunctionNames functionNames = null;^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^final PassFactory suspiciousCode  = null ;^593^594^^^^593^608^[REPLACE] final PassFactory suspiciousCode = new PassFactory ( "suspiciousCode", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory checkControlStructures ;^625^626^^^^625^631^[REPLACE] private final PassFactory checkControlStructures = new PassFactory ( "checkControlStructures", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private  PassFactory checkRequires = new PassFactory ( "checkRequires", true )  {^634^635^^^^634^640^[REPLACE] private final PassFactory checkRequires = new PassFactory ( "checkRequires", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory checkProvides  = null ;^643^644^^^^643^649^[REPLACE] private final PassFactory checkProvides = new PassFactory ( "checkProvides", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private static final DiagnosticType GENERATE_EXPORTS_ERROR  = null ;^651^652^653^654^^651^655^[REPLACE] private static final DiagnosticType GENERATE_EXPORTS_ERROR = DiagnosticType.error ( "JSC_GENERATE_EXPORTS_ERROR", "Exports can only be generated if export symbol/property " +^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory generateExports ;^658^659^^^^658^672^[REPLACE] private final PassFactory generateExports = new PassFactory ( "generateExports", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory exportTestFunctions ;^675^676^^^^675^687^[REPLACE] private final PassFactory exportTestFunctions = new PassFactory ( "exportTestFunctions", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^final PassFactory gatherRawExports ;^690^691^^^^690^708^[REPLACE] final PassFactory gatherRawExports = new PassFactory ( "gatherRawExports", false )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^final PassFactory closurePrimitives ;^712^713^^^^712^729^[REPLACE] final PassFactory closurePrimitives = new PassFactory ( "processProvidesAndRequires", false )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory closureCheckGetCssName ;^732^733^^^^732^742^[REPLACE] private final PassFactory closureCheckGetCssName = new PassFactory ( "checkMissingGetCssName", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory closureReplaceGetCssName ;^749^750^^^^749^766^[REPLACE] private final PassFactory closureReplaceGetCssName = new PassFactory ( "renameCssNames", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory createSyntheticBlocks  = null ;^772^773^^^^772^780^[REPLACE] private final PassFactory createSyntheticBlocks = new PassFactory ( "createSyntheticBlocks", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^static final PassFactory foldConstants  = null ;^783^784^^^^783^789^[REPLACE] static final PassFactory foldConstants = new PassFactory ( "foldConstants", false )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private  PassFactory checkVars = new PassFactory ( "checkVars", true )  {^792^793^^^^792^798^[REPLACE] private final PassFactory checkVars = new PassFactory ( "checkVars", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final new PassFactory ( "runCustomPasses", true )  {     Override     protected CompilerPass createInternal ( final AbstractCompiler compiler )  {         return runInSerial ( get ( executionTime )  ) ;     } }   {^801^802^^^^801^808^[REPLACE] private final PassFactory checkShadowVars = new PassFactory ( "variableShadowDeclarationCheck", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private  PassFactory checkVariableReferences = new PassFactory ( "checkVariableReferences", true )  {^811^812^^^^811^818^[REPLACE] private final PassFactory checkVariableReferences = new PassFactory ( "checkVariableReferences", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory objectPropertyStringPreprocess  = null ;^821^822^^^^821^827^[REPLACE] private final PassFactory objectPropertyStringPreprocess = new PassFactory ( "ObjectPropertyStringPreprocess", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final new PassFactory ( "runCustomPasses", true )  {     Override     protected CompilerPass createInternal ( final AbstractCompiler compiler )  {         return runInSerial ( get ( executionTime )  ) ;     } }   {^830^831^^^^830^836^[REPLACE] private final PassFactory checkFunctions = new PassFactory ( "checkFunctions", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory checkMethods ;^839^840^^^^839^845^[REPLACE] private final PassFactory checkMethods = new PassFactory ( "checkMethods", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^final PassFactory resolveTypes ;^848^849^^^^848^854^[REPLACE] final PassFactory resolveTypes = new PassFactory ( "resolveTypes", false )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory inferTypes  = null ;^857^858^^^^857^871^[REPLACE] private final PassFactory inferTypes = new PassFactory ( "inferTypes", false )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory checkTypes ;^874^875^^^^874^890^[REPLACE] private final PassFactory checkTypes = new PassFactory ( "checkTypes", false )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory checkControlFlow ;^896^897^^^^896^911^[REPLACE] private final PassFactory checkControlFlow = new PassFactory ( "checkControlFlow", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory checkAccessControls  = null ;^914^915^^^^914^920^[REPLACE] private final PassFactory checkAccessControls = new PassFactory ( "checkAccessControls", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private  AbstractCompiler compiler;^932^^^^^^^[REPLACE] private final AbstractCompiler compiler;^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory checkGlobalNames ;^951^952^^^^951^967^[REPLACE] private final PassFactory checkGlobalNames = new PassFactory ( "Check names", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private  PassFactory checkSuspiciousProperties = new PassFactory ( "checkSuspiciousProperties", true )  {^970^971^^^^970^980^[REPLACE] private final PassFactory checkSuspiciousProperties = new PassFactory ( "checkSuspiciousProperties", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final new PassFactory ( "runCustomPasses", true )  {     Override     protected CompilerPass createInternal ( final AbstractCompiler compiler )  {         return runInSerial ( get ( executionTime )  ) ;     } }   {^983^984^^^^983^991^[REPLACE] private final PassFactory checkStrictMode = new PassFactory ( "checkStrictMode", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^PassFactory processDefines = new PassFactory ( "processDefines", true )  {^994^995^^^^994^1014^[REPLACE] final PassFactory processDefines = new PassFactory ( "processDefines", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory checkConsts ;^1017^1018^^^^1017^1023^[REPLACE] private final PassFactory checkConsts = new PassFactory ( "checkConsts", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory computeFunctionNames ;^1026^1027^^^^1026^1032^[REPLACE] private final PassFactory computeFunctionNames = new PassFactory ( "computeFunctionNames", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory ignoreCajaProperties ;^1035^1036^^^^1035^1041^[REPLACE] private final PassFactory ignoreCajaProperties = new PassFactory ( "ignoreCajaProperties", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final new PassFactory ( "runCustomPasses", true )  {     Override     protected CompilerPass createInternal ( final AbstractCompiler compiler )  {         return runInSerial ( get ( executionTime )  ) ;     } }   {^1044^1045^^^^1044^1050^[REPLACE] private final PassFactory replaceIdGenerators = new PassFactory ( "replaceIdGenerators", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory optimizeArgumentsArray  = null ;^1053^1054^^^^1053^1059^[REPLACE] private final PassFactory optimizeArgumentsArray = new PassFactory ( "optimizeArgumentsArray", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private  PassFactory removeUselessParameters = new PassFactory ( "optimizeParameters", true )  {^1062^1063^^^^1062^1077^[REPLACE] private final PassFactory removeUselessParameters = new PassFactory ( "optimizeParameters", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private  PassFactory removeAbstractMethods = new PassFactory ( "removeAbstractMethods", true )  {^1080^1081^^^^1080^1086^[REPLACE] private final PassFactory removeAbstractMethods = new PassFactory ( "removeAbstractMethods", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory collapseProperties ;^1089^1090^^^^1089^1097^[REPLACE] private final PassFactory collapseProperties = new PassFactory ( "collapseProperties", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory tightenTypesBuilder  = null ;^1103^1104^^^^1103^1113^[REPLACE] private final PassFactory tightenTypesBuilder = new PassFactory ( "tightenTypes", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private  PassFactory disambiguateProperties = new PassFactory ( "disambiguateProperties", true )  {^1116^1117^^^^1116^1127^[REPLACE] private final PassFactory disambiguateProperties = new PassFactory ( "disambiguateProperties", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private  new PassFactory ( "runCustomPasses", true )  {     Override     protected CompilerPass createInternal (  AbstractCompiler compiler )  {         return runInSerial ( get ( executionTime )  ) ;     } }   {^1132^1133^^^^1132^1138^[REPLACE] private final PassFactory chainCalls = new PassFactory ( "chainCalls", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory devirtualizePrototypeMethods  = null ;^1144^1145^^^^1144^1150^[REPLACE] private final PassFactory devirtualizePrototypeMethods = new PassFactory ( "devirtualizePrototypeMethods", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory markPureFunctions  = null ;^1156^1157^^^^1156^1163^[REPLACE] private final PassFactory markPureFunctions = new PassFactory ( "markPureFunctions", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory markNoSideEffectCalls  = null ;^1169^1170^^^^1169^1175^[REPLACE] private final PassFactory markNoSideEffectCalls = new PassFactory ( "markNoSideEffectCalls", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private  PassFactory inlineVariables = new PassFactory ( "inlineVariables", false )  {^1178^1179^^^^1178^1200^[REPLACE] private final PassFactory inlineVariables = new PassFactory ( "inlineVariables", false )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory inlineConstants  = null ;^1203^1204^^^^1203^1210^[REPLACE] private final PassFactory inlineConstants = new PassFactory ( "inlineConstants", false )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private  PassFactory removeConstantExpressions = new PassFactory ( "removeConstantExpressions", false )  {^1215^1216^^^^1215^1221^[REPLACE] private final PassFactory removeConstantExpressions = new PassFactory ( "removeConstantExpressions", false )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private  PassFactory minimizeExitPoints = new PassFactory ( "minimizeExitPoints", false )  {^1226^1227^^^^1226^1232^[REPLACE] private final PassFactory minimizeExitPoints = new PassFactory ( "minimizeExitPoints", false )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory removeUnreachableCode ;^1237^1238^^^^1237^1243^[REPLACE] private final PassFactory removeUnreachableCode = new PassFactory ( "removeUnreachableCode", false )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory removeUnusedPrototypeProperties  = null ;^1248^1249^^^^1248^1256^[REPLACE] private final PassFactory removeUnusedPrototypeProperties = new PassFactory ( "removeUnusedPrototypeProperties", false )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory smartNamePass  = null ;^1262^1263^^^^1262^1288^[REPLACE] private final PassFactory smartNamePass = new PassFactory ( "smartNamePass", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private PassFactory inlineGetters ;^1291^1292^^^^1291^1297^[REPLACE] private PassFactory inlineGetters = new PassFactory ( "inlineGetters", false )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private PassFactory deadAssignmentsElimination  = null ;^1300^1301^^^^1300^1306^[REPLACE] private PassFactory deadAssignmentsElimination = new PassFactory ( "deadAssignmentsElimination", false )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private PassFactory inlineFunctions  = null ;^1309^1310^^^^1309^1323^[REPLACE] private PassFactory inlineFunctions = new PassFactory ( "inlineFunctions", false )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private PassFactory removeUnusedVars  = null ;^1326^1327^^^^1326^1337^[REPLACE] private PassFactory removeUnusedVars = new PassFactory ( "removeUnusedVars", false )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private PassFactory crossModuleCodeMotion ;^1342^1343^^^^1342^1348^[REPLACE] private PassFactory crossModuleCodeMotion = new PassFactory ( "crossModuleCodeMotion", false )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private PassFactory crossModuleMethodMotion  = null ;^1353^1354^^^^1353^1363^[REPLACE] private PassFactory crossModuleMethodMotion = new PassFactory ( "crossModuleMethodMotion", false )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private  PassFactory flowSensitiveInlineVariables = new PassFactory ( "flowSensitiveInlineVariables", true )  {^1366^1367^^^^1366^1372^[REPLACE] private final PassFactory flowSensitiveInlineVariables = new PassFactory ( "flowSensitiveInlineVariables", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory coalesceVariableNames  = null ;^1375^1376^^^^1375^1381^[REPLACE] private final PassFactory coalesceVariableNames = new PassFactory ( "coalesceVariableNames", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory collapseVariableDeclarations  = null ;^1387^1388^^^^1387^1394^[REPLACE] private final PassFactory collapseVariableDeclarations = new PassFactory ( "collapseVariableDeclarations", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory extractPrototypeMemberDeclarations  = null ;^1399^1400^^^^1399^1405^[REPLACE] private final PassFactory extractPrototypeMemberDeclarations = new PassFactory ( "extractPrototypeMemberDeclarations", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory rewriteFunctionExpressions  = null ;^1408^1409^^^^1408^1414^[REPLACE] private final PassFactory rewriteFunctionExpressions = new PassFactory ( "rewriteFunctionExpressions", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory collapseAnonymousFunctions ;^1417^1418^^^^1417^1423^[REPLACE] private final PassFactory collapseAnonymousFunctions = new PassFactory ( "collapseAnonymousFunctions", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory moveFunctionDeclarations  = null ;^1426^1427^^^^1426^1432^[REPLACE] private final PassFactory moveFunctionDeclarations = new PassFactory ( "moveFunctionDeclarations", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private  PassFactory nameUnmappedAnonymousFunctions = new PassFactory ( "nameAnonymousFunctions", true )  {^1434^1435^^^^1434^1440^[REPLACE] private final PassFactory nameUnmappedAnonymousFunctions = new PassFactory ( "nameAnonymousFunctions", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory nameMappedAnonymousFunctions ;^1442^1443^^^^1442^1455^[REPLACE] private final PassFactory nameMappedAnonymousFunctions = new PassFactory ( "nameAnonymousFunctions", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory aliasExternals ;^1458^1459^^^^1458^1465^[REPLACE] private final PassFactory aliasExternals = new PassFactory ( "aliasExternals", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final new PassFactory ( "runCustomPasses", true )  {     Override     protected CompilerPass createInternal ( final AbstractCompiler compiler )  {         return runInSerial ( get ( executionTime )  ) ;     } }   {^1471^1472^^^^1471^1482^[REPLACE] private final PassFactory aliasStrings = new PassFactory ( "aliasStrings", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final new PassFactory ( "runCustomPasses", true )  {     Override     protected CompilerPass createInternal ( final AbstractCompiler compiler )  {         return runInSerial ( get ( executionTime )  ) ;     } }   {^1485^1486^^^^1485^1491^[REPLACE] private final PassFactory aliasKeywords = new PassFactory ( "aliasKeywords", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory objectPropertyStringPostprocess  = null ;^1494^1495^^^^1494^1500^[REPLACE] private final PassFactory objectPropertyStringPostprocess = new PassFactory ( "ObjectPropertyStringPostprocess", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory ambiguateProperties  = null ;^1506^1507^^^^1506^1513^[REPLACE] private final PassFactory ambiguateProperties = new PassFactory ( "ambiguateProperties", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory normalize  = null ;^1516^1517^^^^1516^1523^[REPLACE] private final PassFactory normalize = new PassFactory ( "normalize", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory denormalize ;^1526^1527^^^^1526^1533^[REPLACE] private final PassFactory denormalize = new PassFactory ( "denormalize", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory invertContextualRenaming ;^1536^1537^^^^1536^1542^[REPLACE] private final PassFactory invertContextualRenaming = new PassFactory ( "invertNames", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory renameProperties  = null ;^1547^1548^^^^1547^1569^[REPLACE] private final PassFactory renameProperties = new PassFactory ( "renameProperties", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory renameVars ;^1603^1604^^^^1603^1625^[REPLACE] private final PassFactory renameVars = new PassFactory ( "renameVars", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory renameLabels ;^1648^1649^^^^1648^1654^[REPLACE] private final PassFactory renameLabels = new PassFactory ( "renameLabels", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final new PassFactory ( "runCustomPasses", true )  {     Override     protected CompilerPass createInternal ( final AbstractCompiler compiler )  {         return runInSerial ( get ( executionTime )  ) ;     } }   {^1657^1658^^^^1657^1663^[REPLACE] private final PassFactory convertToDottedProperties = new PassFactory ( "convertToDottedProperties", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory sanityCheckVars ;^1666^1667^^^^1666^1672^[REPLACE] private final PassFactory sanityCheckVars = new PassFactory ( "sanityCheckVars", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private final PassFactory instrumentFunctions ;^1675^1676^^^^1675^1697^[REPLACE] private final PassFactory instrumentFunctions = new PassFactory ( "instrumentFunctions", true )  {^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private  AbstractCompiler compiler;^1770^^^^^^^[REPLACE] private final AbstractCompiler compiler;^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private  String reportPath;^1791^^^^^^^[REPLACE] private final String reportPath;^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^private  boolean useNameReferenceGraph;^1792^^^^^^^[REPLACE] private final boolean useNameReferenceGraph;^ [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker  
[REPLACE]^passes.add ( aliasExternals ) ;^121^^^^^120^122^[REPLACE] super ( options ) ;^[METHOD] <init> [TYPE] CompilerOptions) [PARAMETER] CompilerOptions options [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  [TYPE]  CompilerOptions options  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^this.compiler =  null;^935^^^^^934^936^[REPLACE] this.compiler = compiler;^[METHOD] <init> [TYPE] AbstractCompiler) [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^this ( compiler, JSError.make ( TIGHTEN_TYPES_WITHOUT_TYPE_CHECK )  ) ;^1774^^^^^1773^1775^[REPLACE] this ( compiler, JSError.make ( error )  ) ;^[METHOD] <init> [TYPE] DiagnosticType) [PARAMETER] AbstractCompiler compiler DiagnosticType error [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^this ( compiler,   error    ) ;^1774^^^^^1773^1775^[REPLACE] this ( compiler, JSError.make ( error )  ) ;^[METHOD] <init> [TYPE] DiagnosticType) [PARAMETER] AbstractCompiler compiler DiagnosticType error [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^this.compiler =  null;^1778^^^^^1777^1780^[REPLACE] this.compiler = compiler;^[METHOD] <init> [TYPE] JSError) [PARAMETER] AbstractCompiler compiler JSError error [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^this.error =  null;^1779^^^^^1777^1780^[REPLACE] this.error = error;^[METHOD] <init> [TYPE] JSError) [PARAMETER] AbstractCompiler compiler JSError error [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^this.compiler =  null;^1796^^^^^1794^1799^[REPLACE] this.compiler = compiler;^[METHOD] <init> [TYPE] String,boolean) [PARAMETER] AbstractCompiler compiler String reportPath boolean useNameReferenceGraph [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^this.reportPath =  COMPILED_CONSTANT_NAME;^1797^^^^^1794^1799^[REPLACE] this.reportPath = reportPath;^[METHOD] <init> [TYPE] String,boolean) [PARAMETER] AbstractCompiler compiler String reportPath boolean useNameReferenceGraph [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^this.useNameReferenceGraph =  true;^1798^^^^^1794^1799^[REPLACE] this.useNameReferenceGraph = useNameReferenceGraph;^[METHOD] <init> [TYPE] String,boolean) [PARAMETER] AbstractCompiler compiler String reportPath boolean useNameReferenceGraph [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^return new State ( cssNames == null ? null : Maps.newHashMap ( cssNames ) , exportedNames == null ? null :   exportedNames   ,^126^127^128^129^^125^132^[REPLACE] return new State ( cssNames == null ? null : Maps.newHashMap ( cssNames ) , exportedNames == null ? null : Collections.unmodifiableSet ( exportedNames ) ,^[METHOD] getIntermediateState [TYPE] State [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^this.cssNames = state.cssNames != null ? null : Maps.newHashMap ( state.cssNames ) ;^136^137^^^^135^145^[REPLACE] this.cssNames = state.cssNames == null ? null : Maps.newHashMap ( state.cssNames ) ;^[METHOD] setIntermediateState [TYPE] void [PARAMETER] State state [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  State state  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^this.exportedNames  =  Sets.newHashSet ( state.exportedNames ) ;^138^139^^^^135^145^[REPLACE] this.exportedNames = state.exportedNames == null ? null : Sets.newHashSet ( state.exportedNames ) ;^[METHOD] setIntermediateState [TYPE] void [PARAMETER] State state [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  State state  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^this.crossModuleIdGenerator =  null.crossModuleIdGenerator;^140^^^^^135^145^[REPLACE] this.crossModuleIdGenerator = state.crossModuleIdGenerator;^[METHOD] setIntermediateState [TYPE] void [PARAMETER] State state [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  State state  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^140^^^^^135^145^[ADD] this.crossModuleIdGenerator = state.crossModuleIdGenerator;^[METHOD] setIntermediateState [TYPE] void [PARAMETER] State state [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  State state  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^this.variableMap =  null.variableMap;^141^^^^^135^145^[REPLACE] this.variableMap = state.variableMap;^[METHOD] setIntermediateState [TYPE] void [PARAMETER] State state [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  State state  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^this.propertyMap = state.propertyMap;^141^142^^^^135^145^[ADD] this.variableMap = state.variableMap; this.propertyMap = state.propertyMap;^[METHOD] setIntermediateState [TYPE] void [PARAMETER] State state [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  State state  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^this.propertyMap =  null.propertyMap;^142^^^^^135^145^[REPLACE] this.propertyMap = state.propertyMap;^[METHOD] setIntermediateState [TYPE] void [PARAMETER] State state [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  State state  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^this.anonymousFunctionNameMap =  null.anonymousFunctionNameMap;^143^^^^^135^145^[REPLACE] this.anonymousFunctionNameMap = state.anonymousFunctionNameMap;^[METHOD] setIntermediateState [TYPE] void [PARAMETER] State state [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  State state  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^143^^^^^135^145^[ADD] this.anonymousFunctionNameMap = state.anonymousFunctionNameMap;^[METHOD] setIntermediateState [TYPE] void [PARAMETER] State state [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  State state  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^this.functionNames =  null.functionNames;^144^^^^^135^145^[REPLACE] this.functionNames = state.functionNames;^[METHOD] setIntermediateState [TYPE] void [PARAMETER] State state [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  State state  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^144^^^^^135^145^[ADD] this.functionNames = state.functionNames;^[METHOD] setIntermediateState [TYPE] void [PARAMETER] State state [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  State state  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^List<PassFactory> passes = Lists.newArrayList (  ) ;^149^^^^^148^291^[REPLACE] List<PassFactory> checks = Lists.newArrayList (  ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( options.collapseAnonymousFunctions )  {^151^^^^^148^291^[REPLACE] if  ( options.nameAnonymousFunctionsOnly )  {^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( options.anonymousFunctionNaming  !=  AnonymousFunctionNamingPolicy.MAPPED )  {^152^153^^^^148^291^[REPLACE] if  ( options.anonymousFunctionNaming == AnonymousFunctionNamingPolicy.MAPPED )  {^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^}  else {^155^156^^^^148^291^[REPLACE] } else if  ( options.anonymousFunctionNaming == AnonymousFunctionNamingPolicy.UNMAPPED )  {^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^}   checks.add ( nameUnmappedAnonymousFunctions ) ;^155^156^157^158^^148^291^[ADD] else if  ( options.anonymousFunctionNaming == AnonymousFunctionNamingPolicy.UNMAPPED )  { checks.add ( nameUnmappedAnonymousFunctions ) ; }^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^checks.add ( nameMappedAnonymousFunctions ) ;^157^^^^^155^158^[REPLACE] checks.add ( nameUnmappedAnonymousFunctions ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( nameUnmappedAnonymousFunctions ) ;^154^^^^^152^158^[REPLACE] checks.add ( nameMappedAnonymousFunctions ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^}  if  ( options.anonymousFunctionNaming  &&  AnonymousFunctionNamingPolicy.UNMAPPED )  {^155^156^^^^148^291^[REPLACE] } else if  ( options.anonymousFunctionNaming == AnonymousFunctionNamingPolicy.UNMAPPED )  {^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REMOVE]^passes.add ( removeAbstractMethods ) ;^157^^^^^155^158^[REMOVE] ^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^return null;^159^^^^^148^291^[REPLACE] return checks;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( options.anonymousFunctionNaming  &&  AnonymousFunctionNamingPolicy.MAPPED )  {^152^153^^^^148^291^[REPLACE] if  ( options.anonymousFunctionNaming == AnonymousFunctionNamingPolicy.MAPPED )  {^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^152^153^154^155^^148^291^[ADD] if  ( options.anonymousFunctionNaming == AnonymousFunctionNamingPolicy.MAPPED )  { checks.add ( nameMappedAnonymousFunctions ) ; } else if  ( options.anonymousFunctionNaming ==^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REMOVE]^if  (  ( options.inlineFunctions )  ||  ( options.inlineLocalFunctions )  )  {     passes.add ( inlineFunctions ) ; }^155^^^^^148^291^[REMOVE] ^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^checks .addAll ( null )  ;^157^^^^^155^158^[REPLACE] checks.add ( nameUnmappedAnonymousFunctions ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^return false;^159^^^^^148^291^[REPLACE] return checks;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^} else if  ( options.markNoSideEffectCalls )  {^162^^^^^148^291^[REPLACE] if  ( options.checkSuspiciousCode )  {^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^checks .addAll ( null )  ;^163^^^^^148^291^[REPLACE] checks.add ( suspiciousCode ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^163^^^^^148^291^[ADD] checks.add ( suspiciousCode ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^} else if  ( options.markNoSideEffectCalls )  {^166^^^^^148^291^[REPLACE] if  ( options.checkControlStructures )   {^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^checks.add ( checkControlStructures ) ;^166^167^168^^^148^291^[ADD] if  ( options.checkControlStructures )   { checks.add ( checkControlStructures ) ; }^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^checks .addAll ( null )  ;^167^^^^^148^291^[REPLACE] checks.add ( checkControlStructures ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( options.checkShadowVars.isOn (  )  )  {^170^^^^^148^291^[REPLACE] if  ( options.checkRequires.isOn (  )  )  {^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( removeAbstractMethods ) ;^171^^^^^148^291^[REPLACE] checks.add ( checkRequires ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^171^^^^^148^291^[ADD] checks.add ( checkRequires ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( options.checkShadowVars.isOn (  )  )  {^174^^^^^148^291^[REPLACE] if  ( options.checkProvides.isOn (  )  )  {^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^checks.add ( checkProvides ) ;^174^175^176^^^148^291^[ADD] if  ( options.checkProvides.isOn (  )  )  { checks.add ( checkProvides ) ; }^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^checks .addAll ( this )  ;^175^^^^^148^291^[REPLACE] checks.add ( checkProvides ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REMOVE]^passes.add ( removeAbstractMethods ) ;^175^^^^^148^291^[REMOVE] ^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( options.reserveRawExports )  {^181^^^^^148^291^[REPLACE] if  ( options.generateExports )  {^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REMOVE]^if  ( options.crossModuleCodeMotion )  {     passes.add ( crossModuleCodeMotion ) ; }^181^^^^^148^291^[REMOVE] ^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^checks .addAll ( null )  ;^182^^^^^148^291^[REPLACE] checks.add ( generateExports ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REMOVE]^passes.add ( removeAbstractMethods ) ;^182^^^^^148^291^[REMOVE] ^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^} else if  ( options.markNoSideEffectCalls )  {^185^^^^^148^291^[REPLACE] if  ( options.exportTestFunctions )  {^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( removeAbstractMethods ) ;^186^^^^^148^291^[REPLACE] checks.add ( exportTestFunctions ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^} else if  ( options.markNoSideEffectCalls )  {^189^^^^^148^291^[REPLACE] if  ( options.closurePass )  {^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^checks.addAll ( closurePrimitives.makeOneTimePass (  )  ) ;^190^^^^^148^291^[REPLACE] checks.add ( closurePrimitives.makeOneTimePass (  )  ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^190^^^^^148^291^[ADD] checks.add ( closurePrimitives.makeOneTimePass (  )  ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^checks.add ( closurePrimitives.isOneTimePass (  )  ) ;^190^^^^^148^291^[REPLACE] checks.add ( closurePrimitives.makeOneTimePass (  )  ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  (false ) {^193^^^^^148^291^[REPLACE] if  ( options.closurePass && options.checkMissingGetCssNameLevel.isOn (  )  )  {^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^checks.add ( closureCheckGetCssName ) ;^193^194^195^^^148^291^[ADD] if  ( options.closurePass && options.checkMissingGetCssNameLevel.isOn (  )  )  { checks.add ( closureCheckGetCssName ) ; }^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^checks .addAll ( null )  ;^194^^^^^148^291^[REPLACE] checks.add ( closureCheckGetCssName ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^} else if  ( options.markNoSideEffectCalls )  {^197^^^^^148^291^[REPLACE] if  ( options.closurePass )  {^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^checks.add ( closureCheckGetCssName ) ;^198^^^^^148^291^[REPLACE] checks.add ( closureReplaceGetCssName ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( options.syntheticBlockStartMarker == false )  {^201^^^^^148^291^[REPLACE] if  ( options.syntheticBlockStartMarker != null )  {^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REMOVE]^if  ( options.crossModuleCodeMotion )  {     passes.add ( crossModuleCodeMotion ) ; }^201^^^^^148^291^[REMOVE] ^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^checks .addAll ( null )  ;^203^^^^^148^291^[REPLACE] checks.add ( createSyntheticBlocks ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^203^^^^^148^291^[ADD] checks.add ( createSyntheticBlocks ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^WarningsGuard warningsGuard = options.setWarningLevel (  ) ;^211^^^^^148^291^[REPLACE] WarningsGuard warningsGuard = options.getWarningsGuard (  ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^211^^^^^148^291^[ADD] WarningsGuard warningsGuard = options.getWarningsGuard (  ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  (  !warningsGuard.disables ( DiagnosticGroups.CHECK_VARIABLES )  )  )  {^212^213^214^^^148^291^[REPLACE] if  ( !options.checkSymbols && ( warningsGuard == null || !warningsGuard.disables ( DiagnosticGroups.CHECK_VARIABLES )  )  )  {^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^options .getWarningsGuard (  )  ;^215^216^^^^212^217^[REPLACE] options.setWarningLevel ( DiagnosticGroups.CHECK_VARIABLES, CheckLevel.OFF ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^checks .addAll ( this )  ;^219^^^^^148^291^[REPLACE] checks.add ( checkVars ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^219^^^^^148^291^[ADD] checks.add ( checkVars ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( options.checkFunctions.isOn (  )  )  {^221^^^^^148^291^[REPLACE] if  ( options.checkShadowVars.isOn (  )  )  {^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^checks.add ( checkShadowVars ) ;^221^222^223^^^148^291^[ADD] if  ( options.checkShadowVars.isOn (  )  )  { checks.add ( checkShadowVars ) ; }^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^checks .addAll ( this )  ;^222^^^^^148^291^[REPLACE] checks.add ( checkShadowVars ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^} else if  ( options.markNoSideEffectCalls )  {^225^^^^^148^291^[REPLACE] if  ( options.aggressiveVarCheck.isOn (  )  )  {^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( removeAbstractMethods ) ;^226^^^^^148^291^[REPLACE] checks.add ( checkVariableReferences ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^} else if  ( options.markNoSideEffectCalls )  {^230^^^^^148^291^[REPLACE] if  ( options.processObjectPropertyString )  {^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( removeAbstractMethods ) ;^231^^^^^148^291^[REPLACE] checks.add ( objectPropertyStringPreprocess ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  (   DiagnosticGroups.CHECK_TYPES    )  {^235^^^^^148^291^[REPLACE] if  ( options.enables ( DiagnosticGroups.CHECK_TYPES )  )  {^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^}  if  (   DiagnosticGroups.CHECK_TYPES    )  {^237^^^^^148^291^[REPLACE] } else if  ( options.disables ( DiagnosticGroups.CHECK_TYPES )  )  {^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^options.checkTypes = true;^238^^^^^148^291^[REPLACE] options.checkTypes = false;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^238^^^^^148^291^[ADD] options.checkTypes = false;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^options.checkTypes = true; ;^238^^^^^148^291^[REPLACE] options.checkTypes = false;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^options.checkTypes = false; ;^236^^^^^148^291^[REPLACE] options.checkTypes = true;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^options.checkTypes = false;^236^^^^^148^291^[REPLACE] options.checkTypes = true;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( !options.checkTypes )  {^243^^^^^148^291^[REPLACE] if  ( options.checkTypes )  {^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^243^244^245^246^^148^291^[ADD] if  ( options.checkTypes )  { checks.add ( resolveTypes.makeOneTimePass (  )  ) ; checks.add ( inferTypes.makeOneTimePass (  )  ) ; checks.add ( checkTypes.makeOneTimePass (  )  ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( options.checkShadowVars.isOn (  )  )  {^248^^^^^243^255^[REPLACE] if  ( options.checkFunctions.isOn (  )  )  {^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( removeAbstractMethods ) ;^249^^^^^243^255^[REPLACE] checks.add ( checkFunctions ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( options.checkShadowVars.isOn (  )  )  {^252^^^^^243^255^[REPLACE] if  ( options.checkMethods.isOn (  )  )  {^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REMOVE]^if  ( options.crossModuleCodeMotion )  {     passes.add ( crossModuleCodeMotion ) ; }^252^^^^^243^255^[REMOVE] ^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( removeAbstractMethods ) ;^253^^^^^243^255^[REPLACE] checks.add ( checkMethods ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^checks.add ( resolveTypes .isOneTimePass (  )   ) ;^244^^^^^148^291^[REPLACE] checks.add ( resolveTypes.makeOneTimePass (  )  ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^checks.add ( resolveTypes.isOneTimePass (  )  ) ;^244^^^^^148^291^[REPLACE] checks.add ( resolveTypes.makeOneTimePass (  )  ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^checks.add ( inferTypes.isOneTimePass (  )  ) ;^245^^^^^148^291^[REPLACE] checks.add ( inferTypes.makeOneTimePass (  )  ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^checks.add ( inferTypes .isOneTimePass (  )   ) ;^245^^^^^148^291^[REPLACE] checks.add ( inferTypes.makeOneTimePass (  )  ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^checks.add ( checkTypes .isOneTimePass (  )   ) ;^246^^^^^148^291^[REPLACE] checks.add ( checkTypes.makeOneTimePass (  )  ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( options.checkShadowVars.isOn (  )  )  {^248^^^^^148^291^[REPLACE] if  ( options.checkFunctions.isOn (  )  )  {^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^checks .addAll ( null )  ;^249^^^^^148^291^[REPLACE] checks.add ( checkFunctions ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( options.checkShadowVars.isOn (  )  )  {^252^^^^^148^291^[REPLACE] if  ( options.checkMethods.isOn (  )  )  {^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^checks .addAll ( this )  ;^253^^^^^148^291^[REPLACE] checks.add ( checkMethods ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( options.checkUnreachableCode.isOn (  )  && ( options.checkTypes &&       && ( options.checkTypes && options.checkMissingReturn.^257^258^^^^148^291^[REPLACE] if  ( options.checkUnreachableCode.isOn (  )  || ( options.checkTypes && options.checkMissingReturn.isOn (  )  )  )  {^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^257^258^259^260^^148^291^[ADD] if  ( options.checkUnreachableCode.isOn (  )  || ( options.checkTypes && options.checkMissingReturn.isOn (  )  )  )  { checks.add ( checkControlFlow ) ; }^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^checks .addAll ( null )  ;^259^^^^^257^260^[REPLACE] checks.add ( checkControlFlow ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( options.enables ( DiagnosticGroups.ACCESS_CONTROLS ) ) {^263^264^^^^148^291^[REPLACE] if  ( options.enables ( DiagnosticGroups.ACCESS_CONTROLS ) && options.checkTypes )  {^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( removeAbstractMethods ) ;^265^^^^^263^266^[REPLACE] checks.add ( checkAccessControls ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^265^^^^^263^266^[ADD] checks.add ( checkAccessControls ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( options.checkGlobalThisLevel.isOn (  )  )  {^268^^^^^148^291^[REPLACE] if  ( options.checkGlobalNamesLevel.isOn (  )  )  {^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( removeAbstractMethods ) ;^269^^^^^148^291^[REPLACE] checks.add ( checkGlobalNames ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  (       ) {^272^273^^^^148^291^[REPLACE] if  ( options.checkUndefinedProperties.isOn (  )  || options.checkUnusedPropertiesEarly )  {^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( removeAbstractMethods ) ;^274^^^^^272^275^[REPLACE] checks.add ( checkSuspiciousProperties ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^274^^^^^272^275^[ADD] checks.add ( checkSuspiciousProperties ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  (this && options.checkEs5Strict )  {^277^^^^^148^291^[REPLACE] if  ( options.checkCaja || options.checkEs5Strict )  {^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REMOVE]^if  ( options.ignoreCajaProperties )  {     passes.add ( ignoreCajaProperties ) ; }^277^^^^^148^291^[REMOVE] ^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( removeAbstractMethods ) ;^278^^^^^148^291^[REPLACE] checks.add ( checkStrictMode ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( removeAbstractMethods ) ;^282^^^^^148^291^[REPLACE] checks.add ( processDefines ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  (  options.recordFunctionInformation )  {^284^285^^^^148^291^[REPLACE] if  ( options.instrumentationTemplate != null || options.recordFunctionInformation )  {^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^284^285^286^287^^148^291^[ADD] if  ( options.instrumentationTemplate != null || options.recordFunctionInformation )  { checks.add ( computeFunctionNames ) ; }^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( removeAbstractMethods ) ;^286^^^^^284^287^[REPLACE] checks.add ( computeFunctionNames ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^assertAllOneTimePasses ( false ) ;^289^^^^^148^291^[REPLACE] assertAllOneTimePasses ( checks ) ;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^return true;^290^^^^^148^291^[REPLACE] return checks;^[METHOD] getChecks [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  WarningsGuard warningsGuard  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List checks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^List<PassFactory> checks = Lists.newArrayList (  ) ;^295^^^^^294^533^[REPLACE] List<PassFactory> passes = Lists.newArrayList (  ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( !      )  {^300^^^^^294^533^[REPLACE] if  ( !options.idGenerators.isEmpty (  )  )  {^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( removeAbstractMethods ) ;^301^^^^^294^533^[REPLACE] passes.add ( replaceIdGenerators ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( options.optimizeParameters )  {^305^^^^^294^533^[REPLACE] if  ( options.optimizeArgumentsArray )  {^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^passes.add ( optimizeArgumentsArray ) ;^305^306^307^^^294^533^[ADD] if  ( options.optimizeArgumentsArray )  { passes.add ( optimizeArgumentsArray ) ; }^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes .addAll ( null )  ;^306^^^^^294^533^[REPLACE] passes.add ( optimizeArgumentsArray ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( options.optimizeArgumentsArray )  {^310^^^^^294^533^[REPLACE] if  ( options.optimizeParameters )  {^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( removeAbstractMethods ) ;^311^^^^^294^533^[REPLACE] passes.add ( removeUselessParameters ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( options.closurePass || options.removeAbstractMethods )  {^316^^^^^294^533^[REPLACE] if  ( options.closurePass && options.removeAbstractMethods )  {^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^316^317^318^^^294^533^[ADD] if  ( options.closurePass && options.removeAbstractMethods )  { passes.add ( removeAbstractMethods ) ; }^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes .addAll ( null )  ;^317^^^^^294^533^[REPLACE] passes.add ( removeAbstractMethods ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^317^^^^^294^533^[ADD] passes.add ( removeAbstractMethods ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( options.ignoreCajaProperties )  {^322^^^^^294^533^[REPLACE] if  ( options.collapseProperties )  {^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REMOVE]^if  ( options.crossModuleCodeMotion )  {     passes.add ( crossModuleCodeMotion ) ; }^322^^^^^294^533^[REMOVE] ^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( removeAbstractMethods ) ;^323^^^^^294^533^[REPLACE] passes.add ( collapseProperties ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( !options.checkTypes )  {^327^^^^^294^533^[REPLACE] if  ( options.tightenTypes )  {^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^passes.add ( tightenTypesBuilder ) ;^327^328^329^^^294^533^[ADD] if  ( options.tightenTypes )  { passes.add ( tightenTypesBuilder ) ; }^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes .addAll ( null )  ;^328^^^^^294^533^[REPLACE] passes.add ( tightenTypesBuilder ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( options.ignoreCajaProperties )  {^335^^^^^294^533^[REPLACE] if  ( options.disambiguateProperties )  {^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REMOVE]^if  ( options.crossModuleCodeMotion )  {     passes.add ( crossModuleCodeMotion ) ; }^335^^^^^294^533^[REMOVE] ^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( ambiguateProperties ) ;^336^^^^^294^533^[REPLACE] passes.add ( disambiguateProperties ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^} else if  ( options.markNoSideEffectCalls )  {^339^^^^^294^533^[REPLACE] if  ( options.computeFunctionSideEffects )  {^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^passes.add ( markPureFunctions ) ;^339^340^341^^^294^533^[ADD] if  ( options.computeFunctionSideEffects )  { passes.add ( markPureFunctions ) ; } else if  ( options.markNoSideEffectCalls )  {^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^}  else {^341^^^^^294^533^[REPLACE] } else if  ( options.markNoSideEffectCalls )  {^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( removeAbstractMethods ) ;^351^^^^^294^533^[REPLACE] passes.add ( markNoSideEffectCalls ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( removeAbstractMethods ) ;^340^^^^^294^533^[REPLACE] passes.add ( markPureFunctions ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes .addAll ( null )  ;^351^^^^^294^533^[REPLACE] passes.add ( markNoSideEffectCalls ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( options.checkTypes )  {^354^^^^^294^533^[REPLACE] if  ( options.chainCalls )  {^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes .addAll ( true )  ;^355^^^^^294^533^[REPLACE] passes.add ( chainCalls ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^355^^^^^294^533^[ADD] passes.add ( chainCalls ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^} else if  ( options.markNoSideEffectCalls )  {^362^^^^^294^533^[REPLACE] if  ( options.devirtualizePrototypeMethods )  {^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^362^363^364^^^294^533^[ADD] if  ( options.devirtualizePrototypeMethods )  { passes.add ( devirtualizePrototypeMethods ) ; }^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes .addAll ( this )  ;^363^^^^^294^533^[REPLACE] passes.add ( devirtualizePrototypeMethods ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( options.inlineGetters )  {^368^^^^^294^533^[REPLACE] if  ( options.inlineConstantVars )  {^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^passes.add ( checkConsts ) ;^368^369^370^^^294^533^[ADD] if  ( options.inlineConstantVars )  { passes.add ( checkConsts ) ; }^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( removeAbstractMethods ) ;^369^^^^^294^533^[REPLACE] passes.add ( checkConsts ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( options.collapseProperties )  {^375^^^^^294^533^[REPLACE] if  ( options.ignoreCajaProperties )  {^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( removeAbstractMethods ) ;^376^^^^^294^533^[REPLACE] passes.add ( ignoreCajaProperties ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REMOVE]^passes.add ( removeAbstractMethods ) ;^376^^^^^294^533^[REMOVE] ^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^assertAllOneTimePasses ( null ) ;^379^^^^^294^533^[REPLACE] assertAllOneTimePasses ( passes ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^379^^^^^294^533^[ADD] assertAllOneTimePasses ( passes ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  (  options.reportPath == null )  {^381^^^^^294^533^[REPLACE] if  ( options.smartNameRemoval || options.reportPath != null )  {^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( getCodeRemovingPasses (  )  ) ;^382^^^^^294^533^[REPLACE] passes.addAll ( getCodeRemovingPasses (  )  ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( removeAbstractMethods ) ;^382^^^^^294^533^[REPLACE] passes.addAll ( getCodeRemovingPasses (  )  ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^passes.add ( smartNamePass ) ;^382^383^^^^294^533^[ADD] passes.addAll ( getCodeRemovingPasses (  )  ) ; passes.add ( smartNamePass ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( removeAbstractMethods ) ;^383^^^^^294^533^[REPLACE] passes.add ( smartNamePass ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( options.customPasses == true )  {^386^^^^^294^533^[REPLACE] if  ( options.customPasses != null )  {^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^386^387^388^389^^294^533^[ADD] if  ( options.customPasses != null )  { passes.add ( getCustomPasses ( CustomPassExecutionTime.BEFORE_OPTIMIZATION_LOOP )  ) ; }^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.addAll ( getCustomPasses ( CustomPassExecutionTime.BEFORE_OPTIMIZATION_LOOP )  ) ;^387^388^^^^294^533^[REPLACE] passes.add ( getCustomPasses ( CustomPassExecutionTime.BEFORE_OPTIMIZATION_LOOP )  ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^387^388^^^^294^533^[ADD] passes.add ( getCustomPasses ( CustomPassExecutionTime.BEFORE_OPTIMIZATION_LOOP )  ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( removeAbstractMethods ) ;^391^^^^^294^533^[REPLACE] passes.add ( createEmptyPass ( "beforeMainOptimizations" )  ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^391^392^393^^395^294^533^[ADD] passes.add ( createEmptyPass ( "beforeMainOptimizations" )  ) ;  passes.addAll ( getMainOptimizationLoop (  )  ) ; passes.add ( createEmptyPass ( "beforeModuleMotion" )  ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( getMainOptimizationLoop (  )  ) ;^393^^^^^294^533^[REPLACE] passes.addAll ( getMainOptimizationLoop (  )  ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( removeAbstractMethods ) ;^393^^^^^294^533^[REPLACE] passes.addAll ( getMainOptimizationLoop (  )  ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( createEmptyPass ( "afterModuleMotion" )  ) ;^395^^^^^294^533^[REPLACE] passes.add ( createEmptyPass ( "beforeModuleMotion" )  ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( options.crossModuleMethodMotion )  {^397^^^^^294^533^[REPLACE] if  ( options.crossModuleCodeMotion )  {^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes .addAll ( this )  ;^398^^^^^294^533^[REPLACE] passes.add ( crossModuleCodeMotion ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( options.crossModuleCodeMotion )  {^401^^^^^294^533^[REPLACE] if  ( options.crossModuleMethodMotion )  {^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( crossModuleCodeMotion ) ;^402^^^^^294^533^[REPLACE] passes.add ( crossModuleMethodMotion ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( createEmptyPass ( "beforeModuleMotion" )  ) ;^405^^^^^294^533^[REPLACE] passes.add ( createEmptyPass ( "afterModuleMotion" )  ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^405^^^^^294^533^[ADD] passes.add ( createEmptyPass ( "afterModuleMotion" )  ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( options.customPasses == null )  {^409^^^^^294^533^[REPLACE] if  ( options.customPasses != null )  {^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes .addAll ( null )  ;^410^411^^^^294^533^[REPLACE] passes.add ( getCustomPasses ( CustomPassExecutionTime.AFTER_OPTIMIZATION_LOOP )  ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^} else if  ( options.markNoSideEffectCalls )  {^414^^^^^294^533^[REPLACE] if  ( options.flowSensitiveInlineVariables )  {^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( removeAbstractMethods ) ;^415^^^^^294^533^[REPLACE] passes.add ( flowSensitiveInlineVariables ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( options.nameAnonymousFunctionsOnly )  {^418^^^^^294^533^[REPLACE] if  ( options.collapseAnonymousFunctions )  {^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes .addAll ( false )  ;^419^^^^^294^533^[REPLACE] passes.add ( collapseAnonymousFunctions ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^} else if  ( options.markNoSideEffectCalls )  {^423^^^^^294^533^[REPLACE] if  ( options.moveFunctionDeclarations )  {^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( removeAbstractMethods ) ;^424^^^^^294^533^[REPLACE] passes.add ( moveFunctionDeclarations ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( options.anonymousFunctionNaming  !=  AnonymousFunctionNamingPolicy.MAPPED )  {^427^428^^^^294^533^[REPLACE] if  ( options.anonymousFunctionNaming == AnonymousFunctionNamingPolicy.MAPPED )  {^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^checks.add ( nameMappedAnonymousFunctions ) ;^429^^^^^427^430^[REPLACE] passes.add ( nameMappedAnonymousFunctions ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( options.extractPrototypeMemberDeclarations || ( options.propertyRenaming != PropertyRenamingPolicy.HEURISTIC || options.propertyRenaming != PropertyRenamingPolicy.AGGRESSIVE_HEURISTIC )  )  {^438^439^440^441^^294^533^[REPLACE] if  ( options.extractPrototypeMemberDeclarations && ( options.propertyRenaming != PropertyRenamingPolicy.HEURISTIC && options.propertyRenaming != PropertyRenamingPolicy.AGGRESSIVE_HEURISTIC )  )  {^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^438^439^440^441^442^294^533^[ADD] if  ( options.extractPrototypeMemberDeclarations && ( options.propertyRenaming != PropertyRenamingPolicy.HEURISTIC && options.propertyRenaming != PropertyRenamingPolicy.AGGRESSIVE_HEURISTIC )  )  { passes.add ( extractPrototypeMemberDeclarations ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes .addAll ( false )  ;^442^^^^^438^443^[REPLACE] passes.add ( extractPrototypeMemberDeclarations ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^} else if  ( options.markNoSideEffectCalls )  {^445^^^^^294^533^[REPLACE] if  ( options.coalesceVariableNames )  {^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes .addAll ( null )  ;^446^^^^^294^533^[REPLACE] passes.add ( coalesceVariableNames ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  (  ( options.propertyRenaming == PropertyRenamingPolicy.ALL_UNQUOTED )  )  {^449^450^^^^294^533^[REPLACE] if  ( options.ambiguateProperties && ( options.propertyRenaming == PropertyRenamingPolicy.ALL_UNQUOTED )  )  {^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes .addAll ( false )  ;^451^^^^^449^452^[REPLACE] passes.add ( ambiguateProperties ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( true  ==  PropertyRenamingPolicy.OFF )  {^454^^^^^294^533^[REPLACE] if  ( options.propertyRenaming != PropertyRenamingPolicy.OFF )  {^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^passes.add ( renameProperties ) ;^454^455^456^^^294^533^[ADD] if  ( options.propertyRenaming != PropertyRenamingPolicy.OFF )  { passes.add ( renameProperties ) ; }^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes .addAll ( false )  ;^455^^^^^294^533^[REPLACE] passes.add ( renameProperties ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( options.generateExports )  {^459^^^^^294^533^[REPLACE] if  ( options.reserveRawExports )  {^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^passes.add ( gatherRawExports ) ;^459^460^461^^^294^533^[ADD] if  ( options.reserveRawExports )  { passes.add ( gatherRawExports ) ; }^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( removeAbstractMethods ) ;^460^^^^^294^533^[REPLACE] passes.add ( gatherRawExports ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^} else if  ( options.markNoSideEffectCalls )  {^465^^^^^294^533^[REPLACE] if  ( options.convertToDottedProperties )  {^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes .addAll ( null )  ;^466^^^^^294^533^[REPLACE] passes.add ( convertToDottedProperties ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^466^^^^^294^533^[ADD] passes.add ( convertToDottedProperties ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( options.removeConstantExpressions )  {^473^^^^^294^533^[REPLACE] if  ( options.rewriteFunctionExpressions )  {^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( removeAbstractMethods ) ;^474^^^^^294^533^[REPLACE] passes.add ( rewriteFunctionExpressions ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( options.aliasableStrings.isEmpty (  )  ) {^479^^^^^294^533^[REPLACE] if  ( !options.aliasableStrings.isEmpty (  )  || options.aliasAllStrings )  {^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^passes.add ( aliasStrings ) ;^479^480^481^^^294^533^[ADD] if  ( !options.aliasableStrings.isEmpty (  )  || options.aliasAllStrings )  { passes.add ( aliasStrings ) ; }^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( removeAbstractMethods ) ;^480^^^^^294^533^[REPLACE] passes.add ( aliasStrings ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REMOVE]^passes.add ( removeAbstractMethods ) ;^480^^^^^294^533^[REMOVE] ^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( options.aliasKeywords )  {^483^^^^^294^533^[REPLACE] if  ( options.aliasExternals )  {^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes .addAll ( null )  ;^484^^^^^294^533^[REPLACE] passes.add ( aliasExternals ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( options.aliasExternals )  {^487^^^^^294^533^[REPLACE] if  ( options.aliasKeywords )  {^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^487^488^489^^^294^533^[ADD] if  ( options.aliasKeywords )  { passes.add ( aliasKeywords ) ; }^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( removeAbstractMethods ) ;^488^^^^^294^533^[REPLACE] passes.add ( aliasKeywords ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^} else if  ( options.markNoSideEffectCalls )  {^491^^^^^294^533^[REPLACE] if  ( options.collapseVariableDeclarations )  {^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes .addAll ( 0 )  ;^492^^^^^294^533^[REPLACE] passes.add ( collapseVariableDeclarations ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^492^^^^^294^533^[ADD] passes.add ( collapseVariableDeclarations ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( removeAbstractMethods ) ;^495^^^^^294^533^[REPLACE] passes.add ( denormalize ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( options.instrumentationTemplate == this )  {^497^^^^^294^533^[REPLACE] if  ( options.instrumentationTemplate != null )  {^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes .addAll ( this )  ;^498^^^^^294^533^[REPLACE] passes.add ( instrumentFunctions ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( options.variableRenaming  ==  VariableRenamingPolicy.ALL )  {^501^^^^^294^533^[REPLACE] if  ( options.variableRenaming != VariableRenamingPolicy.ALL )  {^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes .addAll ( false )  ;^505^^^^^294^533^[REPLACE] passes.add ( invertContextualRenaming ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^505^^^^^294^533^[ADD] passes.add ( invertContextualRenaming ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( options.variableRenaming  ==  VariableRenamingPolicy.OFF )  {^509^^^^^294^533^[REPLACE] if  ( options.variableRenaming != VariableRenamingPolicy.OFF )  {^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^passes.add ( renameVars ) ;^509^510^511^^^294^533^[ADD] if  ( options.variableRenaming != VariableRenamingPolicy.OFF )  { passes.add ( renameVars ) ; }^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( renameLabels ) ;^510^^^^^294^533^[REPLACE] passes.add ( renameVars ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^} else if  ( options.markNoSideEffectCalls )  {^514^^^^^294^533^[REPLACE] if  ( options.processObjectPropertyString )  {^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REMOVE]^if  ( options.crossModuleCodeMotion )  {     passes.add ( crossModuleCodeMotion ) ; }^514^^^^^294^533^[REMOVE] ^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( removeAbstractMethods ) ;^515^^^^^294^533^[REPLACE] passes.add ( objectPropertyStringPostprocess ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^} else if  ( options.markNoSideEffectCalls )  {^518^^^^^294^533^[REPLACE] if  ( options.labelRenaming )  {^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REMOVE]^if  ( options.crossModuleCodeMotion )  {     passes.add ( crossModuleCodeMotion ) ; }^518^^^^^294^533^[REMOVE] ^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( renameVars ) ;^519^^^^^294^533^[REPLACE] passes.add ( renameLabels ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^519^^^^^294^533^[ADD] passes.add ( renameLabels ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( null  ||  AnonymousFunctionNamingPolicy.UNMAPPED )  {^522^523^^^^294^533^[REPLACE] if  ( options.anonymousFunctionNaming == AnonymousFunctionNamingPolicy.UNMAPPED )  {^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^checks.add ( nameMappedAnonymousFunctions ) ;^524^^^^^522^525^[REPLACE] passes.add ( nameUnmappedAnonymousFunctions ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( !options.checkTypes )  {^528^^^^^294^533^[REPLACE] if  ( options.checkSymbols )  {^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REMOVE]^if  ( options.crossModuleCodeMotion )  {     passes.add ( crossModuleCodeMotion ) ; }^528^^^^^294^533^[REMOVE] ^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( removeAbstractMethods ) ;^529^^^^^294^533^[REPLACE] passes.add ( sanityCheckVars ) ;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^return null;^532^^^^^294^533^[REPLACE] return passes;^[METHOD] getOptimizations [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^List<PassFactory> checks = Lists.newArrayList (  ) ;^537^^^^^536^556^[REPLACE] List<PassFactory> passes = Lists.newArrayList (  ) ;^[METHOD] getMainOptimizationLoop [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( options.inlineVariables )  {^538^^^^^536^556^[REPLACE] if  ( options.inlineGetters )  {^[METHOD] getMainOptimizationLoop [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( removeAbstractMethods ) ;^539^^^^^536^556^[REPLACE] passes.add ( inlineGetters ) ;^[METHOD] getMainOptimizationLoop [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^539^^^^^536^556^[ADD] passes.add ( inlineGetters ) ;^[METHOD] getMainOptimizationLoop [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( removeAbstractMethods ) ;^542^^^^^536^556^[REPLACE] passes.addAll ( getCodeRemovingPasses (  )  ) ;^[METHOD] getMainOptimizationLoop [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^542^^^^^536^556^[ADD] passes.addAll ( getCodeRemovingPasses (  )  ) ;^[METHOD] getMainOptimizationLoop [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( options.inlineFunctions && options.inlineLocalFunctions )  {^544^^^^^536^556^[REPLACE] if  ( options.inlineFunctions || options.inlineLocalFunctions )  {^[METHOD] getMainOptimizationLoop [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( removeAbstractMethods ) ;^545^^^^^536^556^[REPLACE] passes.add ( inlineFunctions ) ;^[METHOD] getMainOptimizationLoop [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^} else if  ( options.markNoSideEffectCalls )  {^548^^^^^536^556^[REPLACE] if  ( options.removeUnusedVars )  {^[METHOD] getMainOptimizationLoop [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^} else if  ( options.markNoSideEffectCalls )  {^549^^^^^536^556^[REPLACE] if  ( options.deadAssignmentElimination )  {^[METHOD] getMainOptimizationLoop [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^passes.add ( deadAssignmentsElimination ) ;^549^550^551^^^536^556^[ADD] if  ( options.deadAssignmentElimination )  { passes.add ( deadAssignmentsElimination ) ; }^[METHOD] getMainOptimizationLoop [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes .addAll ( this )  ;^550^^^^^536^556^[REPLACE] passes.add ( deadAssignmentsElimination ) ;^[METHOD] getMainOptimizationLoop [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^assertAllLoopablePasses ( null ) ;^554^^^^^536^556^[REPLACE] assertAllLoopablePasses ( passes ) ;^[METHOD] getMainOptimizationLoop [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REMOVE]^passes.add ( removeAbstractMethods ) ;^554^^^^^536^556^[REMOVE] ^[METHOD] getMainOptimizationLoop [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^return false;^555^^^^^536^556^[REPLACE] return passes;^[METHOD] getMainOptimizationLoop [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^List<PassFactory> checks = Lists.newArrayList (  ) ;^560^^^^^559^587^[REPLACE] List<PassFactory> passes = Lists.newArrayList (  ) ;^[METHOD] getCodeRemovingPasses [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( options.inlineVariables && options.inlineLocalVariables )  {^561^^^^^559^587^[REPLACE] if  ( options.inlineVariables || options.inlineLocalVariables )  {^[METHOD] getCodeRemovingPasses [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^} else if  ( options.inlineLocalVariables )  {^563^^^^^559^587^[REPLACE] } else if  ( options.inlineConstantVars )  {^[METHOD] getCodeRemovingPasses [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( removeAbstractMethods ) ;^564^^^^^559^587^[REPLACE] passes.add ( inlineConstants ) ;^[METHOD] getCodeRemovingPasses [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes .addAll ( this )  ;^562^^^^^559^587^[REPLACE] passes.add ( inlineVariables ) ;^[METHOD] getCodeRemovingPasses [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REMOVE]^passes.add ( removeAbstractMethods ) ;^562^^^^^559^587^[REMOVE] ^[METHOD] getCodeRemovingPasses [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^}  else {^563^^^^^559^587^[REPLACE] } else if  ( options.inlineConstantVars )  {^[METHOD] getCodeRemovingPasses [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes .addAll ( 1 )  ;^564^^^^^559^587^[REPLACE] passes.add ( inlineConstants ) ;^[METHOD] getCodeRemovingPasses [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( options.rewriteFunctionExpressions )  {^567^^^^^559^587^[REPLACE] if  ( options.removeConstantExpressions )  {^[METHOD] getCodeRemovingPasses [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REMOVE]^if  ( options.crossModuleCodeMotion )  {     passes.add ( crossModuleCodeMotion ) ; }^567^^^^^559^587^[REMOVE] ^[METHOD] getCodeRemovingPasses [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( removeAbstractMethods ) ;^568^^^^^559^587^[REPLACE] passes.add ( removeConstantExpressions ) ;^[METHOD] getCodeRemovingPasses [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( options.inlineConstantVars )  {^571^^^^^559^587^[REPLACE] if  ( options.foldConstants )  {^[METHOD] getCodeRemovingPasses [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^571^572^573^574^575^559^587^[ADD] if  ( options.foldConstants )  {  passes.add ( minimizeExitPoints ) ; passes.add ( foldConstants ) ; }^[METHOD] getCodeRemovingPasses [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( removeAbstractMethods ) ;^573^^^^^559^587^[REPLACE] passes.add ( minimizeExitPoints ) ;^[METHOD] getCodeRemovingPasses [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^573^^^^^559^587^[ADD] passes.add ( minimizeExitPoints ) ;^[METHOD] getCodeRemovingPasses [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( removeAbstractMethods ) ;^574^^^^^559^587^[REPLACE] passes.add ( foldConstants ) ;^[METHOD] getCodeRemovingPasses [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^} else if  ( options.markNoSideEffectCalls )  {^577^^^^^559^587^[REPLACE] if  ( options.removeDeadCode )  {^[METHOD] getCodeRemovingPasses [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REMOVE]^if  ( options.crossModuleCodeMotion )  {     passes.add ( crossModuleCodeMotion ) ; }^577^^^^^559^587^[REMOVE] ^[METHOD] getCodeRemovingPasses [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes .addAll ( this )  ;^578^^^^^559^587^[REPLACE] passes.add ( removeUnreachableCode ) ;^[METHOD] getCodeRemovingPasses [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^578^^^^^559^587^[ADD] passes.add ( removeUnreachableCode ) ;^[METHOD] getCodeRemovingPasses [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^} else if  ( options.markNoSideEffectCalls )  {^581^^^^^559^587^[REPLACE] if  ( options.removeUnusedPrototypeProperties )  {^[METHOD] getCodeRemovingPasses [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^passes.add ( removeAbstractMethods ) ;^582^^^^^559^587^[REPLACE] passes.add ( removeUnusedPrototypeProperties ) ;^[METHOD] getCodeRemovingPasses [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^assertAllLoopablePasses ( this ) ;^585^^^^^559^587^[REPLACE] assertAllLoopablePasses ( passes ) ;^[METHOD] getCodeRemovingPasses [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^return null;^586^^^^^559^587^[REPLACE] return passes;^[METHOD] getCodeRemovingPasses [TYPE] List [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^List<Callback> callbacks = Lists.newArrayList (  ) ;^598^^^^^597^606^[REPLACE] List<Callback> sharedCallbacks = Lists.newArrayList (  ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List sharedCallbacks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^checks.add ( checkSuspiciousProperties ) ;^599^^^^^597^606^[REPLACE] sharedCallbacks.add ( new CheckAccidentalSemicolon ( CheckLevel.WARNING )  ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List sharedCallbacks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^checks.add ( checkSuspiciousProperties ) ;^600^^^^^597^606^[REPLACE] sharedCallbacks.add ( new CheckSideEffects ( CheckLevel.WARNING )  ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List sharedCallbacks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^600^^^^^597^606^[ADD] sharedCallbacks.add ( new CheckSideEffects ( CheckLevel.WARNING )  ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List sharedCallbacks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( options.checkUnreachableCode.isOn (  )  )  {^601^^^^^597^606^[REPLACE] if  ( options.checkGlobalThisLevel.isOn (  )  )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List sharedCallbacks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^sharedCallbacks .addAll ( null )  ;^602^603^^^^597^606^[REPLACE] sharedCallbacks.add ( new CheckGlobalThis ( compiler, options.checkGlobalThisLevel )  ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List sharedCallbacks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^return combineChecks ( compiler, 1 ) ;^605^^^^^597^606^[REPLACE] return combineChecks ( compiler, sharedCallbacks ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List sharedCallbacks  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^for  ( PassFactory pass : passes )  { Preconditions.checkState ( !pass.isOneTimePass (  )  ) ;^612^^^^^611^615^[REPLACE] for  ( PassFactory pass : passes )  {^[METHOD] assertAllOneTimePasses [TYPE] void [PARAMETER] PassFactory> passes [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^for  ( PassFactory pass : passes )  { Preconditions.checkState ( !pass.isOneTimePass (  )  ) ;^619^^^^^618^622^[REPLACE] for  ( PassFactory pass : passes )  {^[METHOD] assertAllLoopablePasses [TYPE] void [PARAMETER] PassFactory> passes [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List passes  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^return new CrossModuleCodeMotion ( compiler, compiler.getModuleGraph (  )  ) ;^629^^^^^628^630^[REPLACE] return new ControlStructureCheck ( compiler ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^return new CrossModuleCodeMotion ( compiler, compiler.getModuleGraph (  )  ) ;^638^^^^^637^639^[REPLACE] return new CheckRequiresForConstructors ( compiler, options.checkRequires ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^return new CrossModuleCodeMotion ( compiler, compiler.getModuleGraph (  )  ) ;^647^^^^^646^648^[REPLACE] return new CheckProvides ( compiler, options.checkProvides ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^CodingConvention convention = compiler.getModuleGraph (  ) ;^662^^^^^661^671^[REPLACE] CodingConvention convention = compiler.getCodingConvention (  ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  CodingConvention convention  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  (  convention.getExportPropertyFunction (  )  != null )  {^663^664^^^^661^671^[REPLACE] if  ( convention.getExportSymbolFunction (  )  != null && convention.getExportPropertyFunction (  )  != null )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  CodingConvention convention  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^return  new ErrorPass ( compiler, TIGHTEN_TYPES_WITHOUT_TYPE_CHECK )  ;^669^^^^^661^671^[REPLACE] return new ErrorPass ( compiler, GENERATE_EXPORTS_ERROR ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  CodingConvention convention  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^return new GenerateExports ( compiler, convention.getExportPropertyFunction (  ) , convention.getExportPropertyFunction (  )  ) ;^665^666^667^^^661^671^[REPLACE] return new GenerateExports ( compiler, convention.getExportSymbolFunction (  ) , convention.getExportPropertyFunction (  )  ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  CodingConvention convention  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^return new GenerateExports ( compiler, convention .getExportPropertyFunction (  )  , convention.getExportPropertyFunction (  )  ) ;^665^666^667^^^661^671^[REPLACE] return new GenerateExports ( compiler, convention.getExportSymbolFunction (  ) , convention.getExportPropertyFunction (  )  ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  CodingConvention convention  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^CodingConvention convention = compiler.getModuleGraph (  ) ;^679^^^^^678^686^[REPLACE] CodingConvention convention = compiler.getCodingConvention (  ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  CodingConvention convention  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( convention .getExportPropertyFunction (  )   == null )  {^680^^^^^678^686^[REPLACE] if  ( convention.getExportSymbolFunction (  )  != null )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  CodingConvention convention  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^return  new ErrorPass ( compiler, TIGHTEN_TYPES_WITHOUT_TYPE_CHECK )  ;^684^^^^^678^686^[REPLACE] return new ErrorPass ( compiler, GENERATE_EXPORTS_ERROR ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  CodingConvention convention  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^return new ExportTestFunctions ( compiler, convention.getExportPropertyFunction (  )  ) ;^681^682^^^^678^686^[REPLACE] return new ExportTestFunctions ( compiler, convention.getExportSymbolFunction (  )  ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  CodingConvention convention  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^694^695^^^^693^707^[ADD] final GatherRawExports pass = new GatherRawExports ( compiler ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  GatherRawExports pass  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( exportedNames != null )  {^701^^^^^693^707^[REPLACE] if  ( exportedNames == null )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  GatherRawExports pass  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^exportedNames  = null ;^702^^^^^693^707^[REPLACE] exportedNames = Sets.newHashSet (  ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  GatherRawExports pass  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^exportedNames  =  exportedNames ;^702^^^^^693^707^[REPLACE] exportedNames = Sets.newHashSet (  ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  GatherRawExports pass  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^return new CrossModuleCodeMotion ( compiler, compiler.getModuleGraph (  )  ) ;^697^^^^^693^707^[REPLACE] return new CompilerPass (  )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  GatherRawExports pass  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^rproto.process ( externs, root ) ;^700^^^^^699^705^[REPLACE] pass.process ( externs, root ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( exportedNames != this )  {^701^^^^^699^705^[REPLACE] if  ( exportedNames == null )  {^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REMOVE]^if  ( options.gatherCssNames )  {     newCssNames = newHashMap (  ) ; }^701^^^^^699^705^[REMOVE] ^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^exportedNames  =  exportedNames ;^702^^^^^699^705^[REPLACE] exportedNames = Sets.newHashSet (  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^exportedNames  = null ;^702^^^^^699^705^[REPLACE] exportedNames = Sets.newHashSet (  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^exportedNames.addAll ( this.getExportedVariableNames (  )  ) ;^704^^^^^699^705^[REPLACE] exportedNames.addAll ( pass.getExportedVariableNames (  )  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^704^^^^^699^705^[ADD] exportedNames.addAll ( pass.getExportedVariableNames (  )  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^exportedNames.addAll ( null.getExportedVariableNames (  )  ) ;^704^^^^^699^705^[REPLACE] exportedNames.addAll ( pass.getExportedVariableNames (  )  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^exportedNames =  null.getExportedVariableNames (  ) ;^725^^^^^715^728^[REPLACE] exportedNames = pass.getExportedVariableNames (  ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  ProcessClosurePrimitives pass  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^return  new CompilerPass (  )  {     Override     public void process ( Node externs, Node root )  {         pass.process ( externs, root ) ;         if  (  ( exportedNames )  == null )  {             exportedNames = newHashSet (  ) ;         }         exportedNames.addAll ( pass.getExportedVariableNames (  )  ) ;     } }   {^721^^^^^715^728^[REPLACE] return new CompilerPass (  )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  ProcessClosurePrimitives pass  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^pass .getExportedVariableNames (  )  ;^724^^^^^723^726^[REPLACE] pass.process ( externs, root ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^exportedNames =  null.getExportedVariableNames (  ) ;^725^^^^^723^726^[REPLACE] exportedNames = pass.getExportedVariableNames (  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^String reportPath = options.reportPath;^736^^^^^735^741^[REPLACE] String blacklist = options.checkMissingGetCssNameBlacklist;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^Preconditions.checkState (useNameReferenceGraph ;^737^738^^^^735^741^[REPLACE] Preconditions.checkState ( blacklist != null && !blacklist.isEmpty (  ) , "Not checking use of goog.getCssName because of empty blacklist." ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^Preconditions.checkState ( reportPath != null && !blacklist.isEmpty (  ) , "Not checking use of goog.getCssName because of empty blacklist." ) ;^737^738^^^^735^741^[REPLACE] Preconditions.checkState ( blacklist != null && !blacklist.isEmpty (  ) , "Not checking use of goog.getCssName because of empty blacklist." ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^737^738^^^^735^741^[ADD] Preconditions.checkState ( blacklist != null && !blacklist.isEmpty (  ) , "Not checking use of goog.getCssName because of empty blacklist." ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^return new CheckMissingGetCssName ( compiler, options.checkMissingGetCssNameLevel, reportPath ) ;^739^740^^^^735^741^[REPLACE] return new CheckMissingGetCssName ( compiler, options.checkMissingGetCssNameLevel, blacklist ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^} else if  ( options.markNoSideEffectCalls )  {^757^^^^^752^765^[REPLACE] if  ( options.gatherCssNames )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  jsRoot  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^newCssNames  =  newCssNames ;^758^^^^^752^765^[REPLACE] newCssNames = Maps.newHashMap (  ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  jsRoot  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^newCssNames  = null ;^758^^^^^752^765^[REPLACE] newCssNames = Maps.newHashMap (  ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  jsRoot  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^cssNames =  null;^762^^^^^752^765^[REPLACE] cssNames = newCssNames;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  jsRoot  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^return new CrossModuleCodeMotion ( compiler, compiler.getModuleGraph (  )  ) ;^753^^^^^752^765^[REPLACE] return new CompilerPass (  )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  jsRoot  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^Map<String, Integer> newCssNames = this;^756^^^^^752^765^[REPLACE] Map<String, Integer> newCssNames = null;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  jsRoot  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^Map<String, Integer> newCssNames = false;^756^^^^^755^763^[REPLACE] Map<String, Integer> newCssNames = null;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node jsRoot [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  jsRoot  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^} else if  ( options.markNoSideEffectCalls )  {^757^^^^^755^763^[REPLACE] if  ( options.gatherCssNames )  {^[METHOD] process [TYPE] void [PARAMETER] Node externs Node jsRoot [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  jsRoot  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  [TYPE]  FunctionNames functionNames 
[ADD]^newCssNames = Maps.newHashMap (  ) ;^757^758^759^^^755^763^[ADD] if  ( options.gatherCssNames )  { newCssNames = Maps.newHashMap (  ) ; }^[METHOD] process [TYPE] void [PARAMETER] Node externs Node jsRoot [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  jsRoot  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^newCssNames ;^758^^^^^755^763^[REPLACE] newCssNames = Maps.newHashMap (  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node jsRoot [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  jsRoot  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^newCssNames  =  newCssNames ;^758^^^^^755^763^[REPLACE] newCssNames = Maps.newHashMap (  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node jsRoot [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  jsRoot  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^( new ReplaceCssNames ( compiler, newCssNames )  )  .getExportedVariableNames (  )  ;^760^761^^^^755^763^[REPLACE] ( new ReplaceCssNames ( compiler, newCssNames )  ) .process ( externs, jsRoot ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node jsRoot [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  jsRoot  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^760^761^^^^755^763^[ADD] ( new ReplaceCssNames ( compiler, newCssNames )  ) .process ( externs, jsRoot ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node jsRoot [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  jsRoot  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^cssNames =  null;^762^^^^^755^763^[REPLACE] cssNames = newCssNames;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node jsRoot [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  jsRoot  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^return new CrossModuleCodeMotion ( compiler, compiler.getModuleGraph (  )  ) ;^787^^^^^786^788^[REPLACE] return new FoldConstants ( compiler ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^return new VarCheck ( compiler, true ) ;^796^^^^^795^797^[REPLACE] return new VarCheck ( compiler ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^return new CrossModuleCodeMotion ( compiler, compiler.getModuleGraph (  )  ) ;^805^806^^^^804^807^[REPLACE] return new VariableShadowDeclarationCheck ( compiler, options.checkShadowVars ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^return new CrossModuleCodeMotion ( compiler, compiler.getModuleGraph (  )  ) ;^815^816^^^^814^817^[REPLACE] return new VariableReferenceCheck ( compiler, options.aggressiveVarCheck ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^return  new ConvertToDottedProperties ( compiler )  ;^825^^^^^824^826^[REPLACE] return new ObjectPropertyStringPreprocess ( compiler ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^return new MethodCheck ( compiler, options.checkMethods ) ;^834^^^^^833^835^[REPLACE] return new FunctionCheck ( compiler, options.checkFunctions ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^return new FunctionCheck ( compiler, options.checkFunctions ) ;^843^^^^^842^844^[REPLACE] return new MethodCheck ( compiler, options.checkMethods ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^return  new DeadAssignmentsElimination ( compiler )  ;^852^^^^^851^853^[REPLACE] return new GlobalTypeResolver ( compiler ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^return  new CompilerPass (  )  {     Override     public void process ( Node externs, Node root )  {         checkNotNull ( topScope ) ;         checkNotNull ( typedScopeCreator ) ;         TypeCheck check = makeTypeCheck ( compiler ) ;         check.process ( externs, root ) ;         compiler.getErrorManager (  ) .setTypedPercent ( check.getTypedPercent (  )  ) ;     } }   {^861^^^^^860^870^[REPLACE] return new CompilerPass (  )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^topScope   ;^864^^^^^863^868^[REPLACE] Preconditions.checkNotNull ( topScope ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^typedScopeCreator   ;^865^^^^^863^868^[REPLACE] Preconditions.checkNotNull ( typedScopeCreator ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^makeTypeInference ( compiler ) .makeTypeInference ( externs, root ) ;^867^^^^^863^868^[REPLACE] makeTypeInference ( compiler ) .process ( externs, root ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^graphBuilder.process ( externs, root ) ;^867^^^^^863^868^[REPLACE] makeTypeInference ( compiler ) .process ( externs, root ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^return  new CompilerPass (  )  {     Override     public void process ( Node externs, Node root )  {         checkNotNull ( topScope ) ;         checkNotNull ( typedScopeCreator ) ;         makeTypeInference ( compiler ) .process ( externs, root ) ;     } }   {^878^^^^^877^889^[REPLACE] return new CompilerPass (  )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  TypeCheck check  [TYPE]  Map cssNames  newCssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^final GatherRawExports pass = new GatherRawExports ( compiler ) ;^884^^^^^877^889^[REPLACE] TypeCheck check = makeTypeCheck ( compiler ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  TypeCheck check  [TYPE]  Map cssNames  newCssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^Preconditions .checkState (  )  ;^881^^^^^880^887^[REPLACE] Preconditions.checkNotNull ( topScope ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  TypeCheck check  [TYPE]  Map cssNames  newCssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^881^882^^^^880^887^[ADD] Preconditions.checkNotNull ( topScope ) ; Preconditions.checkNotNull ( typedScopeCreator ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  TypeCheck check  [TYPE]  Map cssNames  newCssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^Preconditions .checkState (  )  ;^882^^^^^880^887^[REPLACE] Preconditions.checkNotNull ( typedScopeCreator ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  TypeCheck check  [TYPE]  Map cssNames  newCssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^final GatherRawExports pass = new GatherRawExports ( compiler ) ;^884^^^^^880^887^[REPLACE] TypeCheck check = makeTypeCheck ( compiler ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  TypeCheck check  [TYPE]  Map cssNames  newCssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^c.process ( externs, root ) ;^885^^^^^880^887^[REPLACE] check.process ( externs, root ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  TypeCheck check  [TYPE]  Map cssNames  newCssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^compiler.getErrorManager (  ) .setTypedPercent ( check .process ( externs , externs )   ) ;^886^^^^^880^887^[REPLACE] compiler.getErrorManager (  ) .setTypedPercent ( check.getTypedPercent (  )  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  TypeCheck check  [TYPE]  Map cssNames  newCssNames  [TYPE]  FunctionNames functionNames 
[REMOVE]^compiler, options.anonymousFunctionNaming.getReservedCharacters (  )  ) ;^886^^^^^880^887^[REMOVE] ^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  TypeCheck check  [TYPE]  Map cssNames  newCssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^compiler .setUnnormalized (  )  .setTypedPercent ( check.getTypedPercent (  )  ) ;^886^^^^^880^887^[REPLACE] compiler.getErrorManager (  ) .setTypedPercent ( check.getTypedPercent (  )  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  TypeCheck check  [TYPE]  Map cssNames  newCssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^compiler.getTypeRegistry (  ) .resolveTypesInScope ( topScope ) ;^886^^^^^880^887^[REPLACE] compiler.getErrorManager (  ) .setTypedPercent ( check.getTypedPercent (  )  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  TypeCheck check  [TYPE]  Map cssNames  newCssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^886^^^^^880^887^[ADD] compiler.getErrorManager (  ) .setTypedPercent ( check.getTypedPercent (  )  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  TypeCheck check  [TYPE]  Map cssNames  newCssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^List<Callback> sharedCallbacks = Lists.newArrayList (  ) ;^900^^^^^899^910^[REPLACE] List<Callback> callbacks = Lists.newArrayList (  ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List callbacks  [TYPE]  Map cssNames  newCssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( options.checkFunctions.isOn (  )  )  {^901^^^^^899^910^[REPLACE] if  ( options.checkUnreachableCode.isOn (  )  )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List callbacks  [TYPE]  Map cssNames  newCssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  (  options.checkTypes )  {^905^^^^^899^910^[REPLACE] if  ( options.checkMissingReturn.isOn (  )  && options.checkTypes )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List callbacks  [TYPE]  Map cssNames  newCssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^callbacks .addAll ( null )  ;^906^907^^^^899^910^[REPLACE] callbacks.add ( new CheckMissingReturn ( compiler, options.checkMissingReturn )  ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List callbacks  [TYPE]  Map cssNames  newCssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^return combineChecks ( compiler, sharedCallbacks ) ;^909^^^^^899^910^[REPLACE] return combineChecks ( compiler, callbacks ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List callbacks  [TYPE]  Map cssNames  newCssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^return new CrossModuleCodeMotion ( compiler, compiler.getModuleGraph (  )  ) ;^918^^^^^917^919^[REPLACE] return new CheckAccessControls ( compiler ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^Preconditions.checkArgument ( true.addAll (  )  /  0 .5  > 0  ) ;^925^^^^^923^928^[REPLACE] Preconditions.checkArgument ( callbacks.size (  )  > 0 ) ;^[METHOD] combineChecks [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler Callback> callbacks [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Callback[] array  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List callbacks  [TYPE]  Map cssNames  newCssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^Preconditions.checkArgument ( null.addAll (  )  > 0 ) ;^925^^^^^923^928^[REPLACE] Preconditions.checkArgument ( callbacks.size (  )  > 0 ) ;^[METHOD] combineChecks [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler Callback> callbacks [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Callback[] array  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List callbacks  [TYPE]  Map cssNames  newCssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^Callback[] array = null.toArray ( new Callback[callbacks.size (  ) ] ) ;^926^^^^^923^928^[REPLACE] Callback[] array = callbacks.toArray ( new Callback[callbacks.size (  ) ] ) ;^[METHOD] combineChecks [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler Callback> callbacks [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Callback[] array  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List callbacks  [TYPE]  Map cssNames  newCssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^return new CrossModuleCodeMotion ( compiler, compiler.getModuleGraph (  )  ) ;^927^^^^^923^928^[REPLACE] return new CombinedCompilerPass ( compiler, array ) ;^[METHOD] combineChecks [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler Callback> callbacks [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Callback[] array  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  List callbacks  [TYPE]  Map cssNames  newCssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( topScope != false )  {^940^^^^^939^947^[REPLACE] if  ( topScope == null )  {^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^940^941^942^943^^939^947^[ADD] if  ( topScope == null )  { typedScopeCreator = new MemoizedScopeCreator ( new TypedScopeCreator ( compiler )  ) ; topScope = typedScopeCreator.createScope ( root.getParent (  ) , null ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^compiler.getModuleGraph (  ) .resolveTypesInScope ( topScope ) ;^945^^^^^939^947^[REPLACE] compiler.getTypeRegistry (  ) .resolveTypesInScope ( topScope ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^compiler .getModuleGraph (  )  .resolveTypesInScope ( topScope ) ;^945^^^^^939^947^[REPLACE] compiler.getTypeRegistry (  ) .resolveTypesInScope ( topScope ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^typedScopeCreator ;^941^942^^^^939^947^[REPLACE] typedScopeCreator = new MemoizedScopeCreator ( new TypedScopeCreator ( compiler )  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^topScope = typedScopeCreator.createScope ( root.getParent (  ) , false ) ;^943^^^^^939^947^[REPLACE] topScope = typedScopeCreator.createScope ( root.getParent (  ) , null ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^941^942^^^^939^947^[ADD] typedScopeCreator = new MemoizedScopeCreator ( new TypedScopeCreator ( compiler )  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^topScope = typedScopeCreator.createScope ( root.getParent (  ) , this ) ;^943^^^^^939^947^[REPLACE] topScope = typedScopeCreator.createScope ( root.getParent (  ) , null ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^943^^^^^939^947^[ADD] topScope = typedScopeCreator.createScope ( root.getParent (  ) , null ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^namespaceForChecks =  new GlobalNamespace ( null, jsRoot ) ;^961^^^^^954^966^[REPLACE] namespaceForChecks = new GlobalNamespace ( compiler, jsRoot ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  jsRoot  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^961^^^^^954^966^[ADD] namespaceForChecks = new GlobalNamespace ( compiler, jsRoot ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  jsRoot  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^return new CrossModuleCodeMotion ( compiler, compiler.getModuleGraph (  )  ) ;^955^^^^^954^966^[REPLACE] return new CompilerPass (  )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  jsRoot  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^namespaceForChecks =  new GlobalNamespace ( null, jsRoot ) ;^961^^^^^957^964^[REPLACE] namespaceForChecks = new GlobalNamespace ( compiler, jsRoot ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node jsRoot [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  jsRoot  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  [TYPE]  FunctionNames functionNames 
[ADD]^^962^963^^^^957^964^[ADD] new CheckGlobalNames ( compiler, options.checkGlobalNamesLevel ) .injectNamespace ( namespaceForChecks ) .process ( externs, jsRoot ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node jsRoot [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  jsRoot  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  [TYPE]  FunctionNames functionNames 
[REPLACE]^namespaceForChecks = true;^1010^^^^^997^1013^[REPLACE] namespaceForChecks = null;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  jsRoot  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return new CrossModuleCodeMotion ( compiler, compiler.getModuleGraph (  )  ) ;^998^^^^^997^1013^[REPLACE] return new CompilerPass (  )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  jsRoot  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^Map<String, Node> additionalReplacements = Maps.newHashMap (  ) ;^1001^^^^^997^1013^[REPLACE] Map<String, Node> replacements = getAdditionalReplacements ( options ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  jsRoot  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[ADD]^^1001^^^^^997^1013^[ADD] Map<String, Node> replacements = getAdditionalReplacements ( options ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  jsRoot  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^Map<String, Node> additionalReplacements = Maps.newHashMap (  ) ;^1001^^^^^1000^1011^[REPLACE] Map<String, Node> replacements = getAdditionalReplacements ( options ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node jsRoot [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  jsRoot  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[ADD]^^1001^1002^^^^1000^1011^[ADD] Map<String, Node> replacements = getAdditionalReplacements ( options ) ; replacements.putAll ( options.getDefineReplacements (  )  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node jsRoot [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  jsRoot  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^replacements.putAll ( options.setWarningLevel (  )  ) ;^1002^^^^^1000^1011^[REPLACE] replacements.putAll ( options.getDefineReplacements (  )  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node jsRoot [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  jsRoot  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^replacements.putAll ( options .setWarningLevel (  )   ) ;^1002^^^^^1000^1011^[REPLACE] replacements.putAll ( options.getDefineReplacements (  )  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node jsRoot [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  jsRoot  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^new ProcessDefines ( compiler, false ) .injectNamespace ( namespaceForChecks ) .process ( externs, jsRoot ) ;^1004^1005^^^^1000^1011^[REPLACE] new ProcessDefines ( compiler, replacements ) .injectNamespace ( namespaceForChecks ) .process ( externs, jsRoot ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node jsRoot [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  jsRoot  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^new ProcessDefines ( compiler, 1 ) .injectNamespace ( namespaceForChecks ) .process ( externs, jsRoot ) ;^1004^1005^^^^1000^1011^[REPLACE] new ProcessDefines ( compiler, replacements ) .injectNamespace ( namespaceForChecks ) .process ( externs, jsRoot ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node jsRoot [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  jsRoot  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^namespaceForChecks = this;^1010^^^^^1000^1011^[REPLACE] namespaceForChecks = null;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node jsRoot [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  jsRoot  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return new VarCheck ( compiler ) ;^1021^^^^^1020^1022^[REPLACE] return new ConstCheck ( compiler ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return  (  ( functionNames =  new FunctionNames ( null )  )  ) ;^1030^^^^^1029^1031^[REPLACE] return  (  ( functionNames = new FunctionNames ( compiler )  )  ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return new CrossModuleCodeMotion ( compiler, compiler.getModuleGraph (  )  ) ;^1030^^^^^1029^1031^[REPLACE] return  (  ( functionNames = new FunctionNames ( compiler )  )  ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return new CrossModuleCodeMotion ( compiler, compiler.getModuleGraph (  )  ) ;^1039^^^^^1038^1040^[REPLACE] return new IgnoreCajaProperties ( compiler ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return new CrossModuleCodeMotion ( compiler, compiler.getModuleGraph (  )  ) ;^1048^^^^^1047^1049^[REPLACE] return new ReplaceIdGenerators ( compiler, options.idGenerators ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return new CrossModuleCodeMotion ( compiler, compiler.getModuleGraph (  )  ) ;^1057^^^^^1056^1058^[REPLACE] return new OptimizeArgumentsArray ( compiler ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return  new CompilerPass (  )  {     Override     public void process ( Node externs, Node root )  {         NameAnonymousFunctionsMapped naf = new NameAnonymousFunctionsMapped ( compiler ) ;         naf.process ( externs, root ) ;         anonymousFunctionNameMap = naf.getFunctionMap (  ) ;     } }   {^1066^^^^^1065^1076^[REPLACE] return new CompilerPass (  )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  NameReferenceGraphConstruction c  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^check.process ( externs, root ) ;^1070^^^^^1067^1074^[REPLACE] c.process ( externs, root ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  NameReferenceGraphConstruction c  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return new CrossModuleCodeMotion ( compiler, compiler.getModuleGraph (  )  ) ;^1084^^^^^1083^1085^[REPLACE] return new GoogleCodeRemoval ( compiler ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( options.checkTypes )  {^1107^^^^^1106^1112^[REPLACE] if  ( !options.checkTypes )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[ADD]^return new ErrorPass ( compiler, TIGHTEN_TYPES_WITHOUT_TYPE_CHECK ) ;^1107^1108^1109^^^1106^1112^[ADD] if  ( !options.checkTypes )  { return new ErrorPass ( compiler, TIGHTEN_TYPES_WITHOUT_TYPE_CHECK ) ; }^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return  new ErrorPass ( compiler, GENERATE_EXPORTS_ERROR )  ;^1108^^^^^1106^1112^[REPLACE] return new ErrorPass ( compiler, TIGHTEN_TYPES_WITHOUT_TYPE_CHECK ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^tightenTypes =  new TightenTypes ( null ) ;^1110^^^^^1106^1112^[REPLACE] tightenTypes = new TightenTypes ( compiler ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return new CheckAccessControls ( compiler ) ;^1111^^^^^1106^1112^[REPLACE] return tightenTypes;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( tightenTypes != null )  {^1120^^^^^1119^1126^[REPLACE] if  ( tightenTypes == null )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[ADD]^return DisambiguateProperties.forJSTypeSystem ( compiler ) ;^1120^1121^1122^1123^1124^1119^1126^[ADD] if  ( tightenTypes == null )  { return DisambiguateProperties.forJSTypeSystem ( compiler ) ; } else { return DisambiguateProperties.forConcreteTypeSystem ( compiler, tightenTypes ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return DisambiguateProperties .forJSTypeSystem ( compiler )  ;^1123^1124^^^^1119^1126^[REPLACE] return DisambiguateProperties.forConcreteTypeSystem ( compiler, tightenTypes ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return   compiler   ;^1121^^^^^1119^1126^[REPLACE] return DisambiguateProperties.forJSTypeSystem ( compiler ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return new CrossModuleCodeMotion ( compiler, compiler.getModuleGraph (  )  ) ;^1136^^^^^1135^1137^[REPLACE] return new ChainCalls ( compiler ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return new CrossModuleCodeMotion ( compiler, compiler.getModuleGraph (  )  ) ;^1148^^^^^1147^1149^[REPLACE] return new DevirtualizePrototypeMethods ( compiler ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return new PureFunctionMarker ( compiler, options.debugFunctionSideEffectsPath, true ) ;^1160^1161^^^^1159^1162^[REPLACE] return new PureFunctionMarker ( compiler, options.debugFunctionSideEffectsPath, false ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return new CrossModuleCodeMotion ( compiler, compiler.getModuleGraph (  )  ) ;^1173^^^^^1172^1174^[REPLACE] return new MarkNoSideEffectCalls ( compiler ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^} else if  ( options.markNoSideEffectCalls )  {^1182^^^^^1181^1199^[REPLACE] if  ( isInliningForbidden (  )  )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Mode mode  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( options.inlineGetters )  {^1189^^^^^1181^1199^[REPLACE] if  ( options.inlineVariables )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Mode mode  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[ADD]^^1189^1190^1191^1192^^1181^1199^[ADD] if  ( options.inlineVariables )  { mode = InlineVariables.Mode.ALL; } else if  ( options.inlineLocalVariables )  { mode = InlineVariables.Mode.LOCALS_ONLY;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Mode mode  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^}  if  ( options.inlineLocalVariables )  {^1191^^^^^1181^1199^[REPLACE] } else if  ( options.inlineLocalVariables )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Mode mode  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^throw new RuntimeException  (" ")  ; ;^1194^^^^^1181^1199^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Mode mode  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^mode = InlineVariables.Mode.ALL; ;^1192^^^^^1181^1199^[REPLACE] mode = InlineVariables.Mode.LOCALS_ONLY;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Mode mode  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[ADD]^^1192^^^^^1181^1199^[ADD] mode = InlineVariables.Mode.LOCALS_ONLY;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Mode mode  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^mode = InlineVariables.Mode.LOCALS_ONLY; ;^1190^^^^^1181^1199^[REPLACE] mode = InlineVariables.Mode.ALL;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Mode mode  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^}  else {^1191^^^^^1181^1199^[REPLACE] } else if  ( options.inlineLocalVariables )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Mode mode  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[ADD]^}^1191^1192^1193^1194^1195^1181^1199^[ADD] else if  ( options.inlineLocalVariables )  { mode = InlineVariables.Mode.LOCALS_ONLY; } else { throw new IllegalStateException  (" ")  ; }^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Mode mode  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return ;^1194^^^^^1181^1199^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Mode mode  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return new InlineVariables ( compiler, mode, false ) ;^1197^^^^^1181^1199^[REPLACE] return new InlineVariables ( compiler, mode, true ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Mode mode  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^RenamePrototypes rproto = new RenamePrototypes ( compiler, false, reservedChars, prevPropertyMap ) ;^1188^^^^^1181^1199^[REPLACE] InlineVariables.Mode mode;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Mode mode  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return  new ErrorPass ( compiler, TIGHTEN_TYPES_WITHOUT_TYPE_CHECK )  ;^1186^^^^^1181^1199^[REPLACE] return new ErrorPass ( compiler, CANNOT_USE_PROTOTYPE_AND_VAR ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Mode mode  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[ADD]^^1194^^^^^1181^1199^[ADD] throw new IllegalStateException  (" ")  ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Mode mode  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[ADD]^^1190^^^^^1181^1199^[ADD] mode = InlineVariables.Mode.ALL;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Mode mode  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^} else if  ( options.inlineConstantVars )  {^1191^^^^^1181^1199^[REPLACE] } else if  ( options.inlineLocalVariables )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Mode mode  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return new InlineVariables ( compiler, InlineVariables.Mode.CONSTANTS_ONLY, false ) ;^1207^1208^^^^1206^1209^[REPLACE] return new InlineVariables ( compiler, InlineVariables.Mode.CONSTANTS_ONLY, true ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return new CrossModuleCodeMotion ( compiler, compiler.getModuleGraph (  )  ) ;^1219^^^^^1218^1220^[REPLACE] return new RemoveConstantExpressions ( compiler ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return new CrossModuleCodeMotion ( compiler, compiler.getModuleGraph (  )  ) ;^1230^^^^^1229^1231^[REPLACE] return new MinimizeExitPoints ( compiler ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return new UnreachableCodeElimination ( compiler, false ) ;^1241^^^^^1240^1242^[REPLACE] return new UnreachableCodeElimination ( compiler, true ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( reportPath == null )  {^1273^^^^^1265^1287^[REPLACE] if  ( reportPath != null )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[ADD]^Charsets.UTF_8 ) ;compiler.report ( JSError.make ( REPORT_PATH_IO_ERROR, reportPath )  ) ;^1274^1275^1276^1277^1278^1265^1287^[ADD] try { Files.write ( na.getHtmlReport (  ) , new File ( reportPath ) , Charsets.UTF_8 ) ; } catch  ( IOException e )  { compiler.report ( JSError.make ( REPORT_PATH_IO_ERROR, reportPath )  ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^Files.write ( na .removeUnreferenced (  )  , new File ( blacklist ) , Charsets.UTF_8 ) ;^1275^1276^^^^1265^1287^[REPLACE] Files.write ( na.getHtmlReport (  ) , new File ( reportPath ) , Charsets.UTF_8 ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^Files.write ( na .removeUnreferenced (  )  , new File ( reportPath ) , Charsets.UTF_8 ) ;^1275^1276^^^^1265^1287^[REPLACE] Files.write ( na.getHtmlReport (  ) , new File ( reportPath ) , Charsets.UTF_8 ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^} else if  ( options.markNoSideEffectCalls )  {^1282^^^^^1265^1287^[REPLACE] if  ( options.smartNameRemoval )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[ADD]^na.removeUnreferenced (  ) ;^1282^1283^1284^^^1265^1287^[ADD] if  ( options.smartNameRemoval )  { na.removeUnreferenced (  ) ; }^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^na.getHtmlReport (  ) ;^1283^^^^^1265^1287^[REPLACE] na.removeUnreferenced (  ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^na.getHtmlReport (  )  , Charsets.UTF_8 ) ;^1275^1276^^^^1265^1287^[REPLACE] Files.write ( na.getHtmlReport (  ) , new File ( reportPath ) , Charsets.UTF_8 ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[ADD]^^1275^1276^^^^1265^1287^[ADD] Files.write ( na.getHtmlReport (  ) , new File ( reportPath ) , Charsets.UTF_8 ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^Files.write ( na.removeUnreferenced (  ) , new File ( reportPath ) , Charsets.UTF_8 ) ;^1275^1276^^^^1265^1287^[REPLACE] Files.write ( na.getHtmlReport (  ) , new File ( reportPath ) , Charsets.UTF_8 ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return new CrossModuleCodeMotion ( compiler, compiler.getModuleGraph (  )  ) ;^1266^^^^^1265^1287^[REPLACE] return new CompilerPass (  )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^NameAnalyzer na = new NameAnalyzer ( compiler, true ) ;^1269^^^^^1265^1287^[REPLACE] NameAnalyzer na = new NameAnalyzer ( compiler, false ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^String blacklist = options.checkMissingGetCssNameBlacklist;^1272^^^^^1265^1287^[REPLACE] String reportPath = options.reportPath;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^NameAnalyzer na = new NameAnalyzer ( compiler, true ) ;^1269^^^^^1268^1285^[REPLACE] NameAnalyzer na = new NameAnalyzer ( compiler, false ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^c.process ( externs, root ) ;^1270^^^^^1268^1285^[REPLACE] na.process ( externs, root ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^String blacklist = options.checkMissingGetCssNameBlacklist;^1272^^^^^1268^1285^[REPLACE] String reportPath = options.reportPath;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  (blacklist == null )  {^1273^^^^^1268^1285^[REPLACE] if  ( reportPath != null )  {^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[ADD]^Charsets.UTF_8 ) ;compiler.report ( JSError.make ( REPORT_PATH_IO_ERROR, reportPath )  ) ;^1274^1275^1276^1277^1278^1268^1285^[ADD] try { Files.write ( na.getHtmlReport (  ) , new File ( reportPath ) , Charsets.UTF_8 ) ; } catch  ( IOException e )  { compiler.report ( JSError.make ( REPORT_PATH_IO_ERROR, reportPath )  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^Files.write ( na .removeUnreferenced (  )  , new File ( reportPath ) , Charsets.UTF_8 ) ;^1275^1276^^^^1268^1285^[REPLACE] Files.write ( na.getHtmlReport (  ) , new File ( reportPath ) , Charsets.UTF_8 ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^na.getHtmlReport (  )  , Charsets.UTF_8 ) ;^1275^1276^^^^1268^1285^[REPLACE] Files.write ( na.getHtmlReport (  ) , new File ( reportPath ) , Charsets.UTF_8 ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^} else if  ( options.markNoSideEffectCalls )  {^1282^^^^^1268^1285^[REPLACE] if  ( options.smartNameRemoval )  {^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^na.getHtmlReport (  ) ;^1283^^^^^1268^1285^[REPLACE] na.removeUnreferenced (  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return new CrossModuleCodeMotion ( compiler, compiler.getModuleGraph (  )  ) ;^1295^^^^^1294^1296^[REPLACE] return new InlineGetters ( compiler ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return new CrossModuleCodeMotion ( compiler, compiler.getModuleGraph (  )  ) ;^1304^^^^^1303^1305^[REPLACE] return new DeadAssignmentsElimination ( compiler ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^RenamePrototypes rproto = new RenamePrototypes ( compiler, false, reservedChars, prevPropertyMap ) ;^1313^^^^^1312^1322^[REPLACE] boolean enableBlockInlining = !isInliningForbidden (  ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return new InlineFunctions ( compiler, compiler .setUnnormalized (  )  , options.inlineFunctions,^1314^1315^1316^1317^^1312^1322^[REPLACE] return new InlineFunctions ( compiler, compiler.getUniqueNameIdSupplier (  ) , options.inlineFunctions,^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^boolean preserveAnonymousFunctionNames = options.anonymousFunctionNaming  ==  AnonymousFunctionNamingPolicy.OFF;^1330^1331^^^^1329^1336^[REPLACE] boolean preserveAnonymousFunctionNames = options.anonymousFunctionNaming != AnonymousFunctionNamingPolicy.OFF;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return new RemoveUnusedVars ( compiler, options.removeUnusedVarsInGlobalScope, useNameReferenceGraph ) ;^1332^1333^1334^1335^^1329^1336^[REPLACE] return new RemoveUnusedVars ( compiler, options.removeUnusedVarsInGlobalScope, preserveAnonymousFunctionNames ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return new CrossModuleCodeMotion ( compiler, compiler.getTypeRegistry (  )  ) ;^1346^^^^^1345^1347^[REPLACE] return new CrossModuleCodeMotion ( compiler, compiler.getModuleGraph (  )  ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return new CrossModuleCodeMotion ( compiler, compiler.getModuleGraph (  )  ) ;^1370^^^^^1369^1371^[REPLACE] return new FlowSensitiveInlineVariables ( compiler ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return new CrossModuleCodeMotion ( compiler, compiler.getModuleGraph (  )  ) ;^1379^^^^^1378^1380^[REPLACE] return new CoalesceVariableNames ( compiler, options.generatePseudoNames ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^compiler.setNormalized (  ) ;^1391^^^^^1390^1393^[REPLACE] compiler.setUnnormalized (  ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return new CrossModuleCodeMotion ( compiler, compiler.getModuleGraph (  )  ) ;^1392^^^^^1390^1393^[REPLACE] return new CollapseVariableDeclarations ( compiler ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return new CrossModuleCodeMotion ( compiler, compiler.getModuleGraph (  )  ) ;^1403^^^^^1402^1404^[REPLACE] return new ExtractPrototypeMemberDeclarations ( compiler ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return new CrossModuleCodeMotion ( compiler, compiler.getModuleGraph (  )  ) ;^1412^^^^^1411^1413^[REPLACE] return new FunctionRewriter ( compiler ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return new NameAnonymousFunctions ( compiler ) ;^1421^^^^^1420^1422^[REPLACE] return new CollapseAnonymousFunctions ( compiler ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return new CrossModuleCodeMotion ( compiler, compiler.getModuleGraph (  )  ) ;^1430^^^^^1429^1431^[REPLACE] return new MoveFunctionDeclarations ( compiler ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return new CollapseAnonymousFunctions ( compiler ) ;^1438^^^^^1437^1439^[REPLACE] return new NameAnonymousFunctions ( compiler ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^anonymousFunctionNameMap =  null.getFunctionMap (  ) ;^1451^^^^^1445^1454^[REPLACE] anonymousFunctionNameMap = naf.getFunctionMap (  ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  NameAnonymousFunctionsMapped naf  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return  new CompilerPass (  )  {     Override     public void process ( Node externs, Node root )  {         for  ( CompilerPass pass : passes )  {             pass.process ( externs, root ) ;         }     } }   {^1446^^^^^1445^1454^[REPLACE] return new CompilerPass (  )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  NameAnonymousFunctionsMapped naf  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[ADD]^^1448^1449^^^^1445^1454^[ADD] NameAnonymousFunctionsMapped naf = new NameAnonymousFunctionsMapped ( compiler ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  NameAnonymousFunctionsMapped naf  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^c.process ( externs, root ) ;^1450^^^^^1447^1452^[REPLACE] naf.process ( externs, root ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  NameAnonymousFunctionsMapped naf  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^anonymousFunctionNameMap =  null.getFunctionMap (  ) ;^1451^^^^^1447^1452^[REPLACE] anonymousFunctionNameMap = naf.getFunctionMap (  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  NameAnonymousFunctionsMapped naf  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return new AliasExternals ( compiler, compiler.getTypeRegistry (  ) , options.unaliasableGlobals, options.aliasableGlobals ) ;^1462^1463^^^^1461^1464^[REPLACE] return new AliasExternals ( compiler, compiler.getModuleGraph (  ) , options.unaliasableGlobals, options.aliasableGlobals ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return new AliasStrings ( compiler, compiler.getTypeRegistry (  ) , options.aliasAllStrings ? null : options.aliasableStrings,^1475^1476^1477^1478^^1474^1481^[REPLACE] return new AliasStrings ( compiler, compiler.getModuleGraph (  ) , options.aliasAllStrings ? null : options.aliasableStrings,^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return new CrossModuleCodeMotion ( compiler, compiler.getModuleGraph (  )  ) ;^1489^^^^^1488^1490^[REPLACE] return new AliasKeywords ( compiler ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return  new NameReferenceGraphConstruction ( compiler )  ;^1498^^^^^1497^1499^[REPLACE] return new ObjectPropertyStringPostprocess ( compiler ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return new CrossModuleCodeMotion ( compiler, compiler.getModuleGraph (  )  ) ;^1510^1511^^^^1509^1512^[REPLACE] return new AmbiguateProperties ( compiler, options.anonymousFunctionNaming.getReservedCharacters (  )  ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^compiler.setUnnormalized (  ) ;^1520^^^^^1519^1522^[REPLACE] compiler.setNormalized (  ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REMOVE]^compiler, options.anonymousFunctionNaming.getReservedCharacters (  )  ) ;^1520^^^^^1519^1522^[REMOVE] ^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return new Normalize ( compiler, true ) ;^1521^^^^^1519^1522^[REPLACE] return new Normalize ( compiler, false ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^compiler.setNormalized (  ) ;^1530^^^^^1529^1532^[REPLACE] compiler.setUnnormalized (  ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[ADD]^^1530^^^^^1529^1532^[ADD] compiler.setUnnormalized (  ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return new CrossModuleCodeMotion ( compiler, compiler.getModuleGraph (  )  ) ;^1531^^^^^1529^1532^[REPLACE] return new Denormalize ( compiler ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return   compiler   ;^1540^^^^^1539^1541^[REPLACE] return MakeDeclaredNamesUnique.getContextualRenameInverter ( compiler ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^VariableMap map = true;^1551^^^^^1550^1568^[REPLACE] VariableMap map = null;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  ParseException e  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( options.inputPropertyMapSerialized == this )  {^1552^^^^^1550^1568^[REPLACE] if  ( options.inputPropertyMapSerialized != null )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  ParseException e  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[ADD]^^1552^1553^1554^1555^1556^1550^1568^[ADD] if  ( options.inputPropertyMapSerialized != null )  { try { map = VariableMap.fromBytes ( options.inputPropertyMapSerialized ) ; } catch  ( ParseException e )  { return new ErrorPass ( compiler,^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  ParseException e  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[ADD]^map = VariableMap.fromBytes ( options.inputPropertyMapSerialized ) ;JSError.make ( INPUT_MAP_PROP_PARSE, e.getMessage (  )  )  ) ;^1553^1554^1555^1556^1557^1550^1568^[ADD] try { map = VariableMap.fromBytes ( options.inputPropertyMapSerialized ) ; } catch  ( ParseException e )  { return new ErrorPass ( compiler, JSError.make ( INPUT_MAP_PROP_PARSE, e.getMessage (  )  )  ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  ParseException e  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^map = VariableMap.fromBytes ( options.inputVariableMapSerialized ) ; ;^1554^^^^^1550^1568^[REPLACE] map = VariableMap.fromBytes ( options.inputPropertyMapSerialized ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  ParseException e  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[ADD]^^1554^^^^^1550^1568^[ADD] map = VariableMap.fromBytes ( options.inputPropertyMapSerialized ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  ParseException e  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return new ErrorPass ( compiler, JSError .make (  )   ) ;^1556^1557^^^^1550^1568^[REPLACE] return new ErrorPass ( compiler, JSError.make ( INPUT_MAP_PROP_PARSE, e.getMessage (  )  )  ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  ParseException e  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[ADD]^^1555^1556^1557^^^1550^1568^[ADD] catch  ( ParseException e )  { return new ErrorPass ( compiler, JSError.make ( INPUT_MAP_PROP_PARSE, e.getMessage (  )  )  ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  ParseException e  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return  new ErrorPass ( compiler, make ( INPUT_MAP_VAR_PARSE, e.getMessage (  )  )  )   )  ) ;^1556^1557^^^^1550^1568^[REPLACE] return new ErrorPass ( compiler, JSError.make ( INPUT_MAP_PROP_PARSE, e.getMessage (  )  )  ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  ParseException e  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^final VariableMap prevPropertyMap = variableMap;^1561^^^^^1550^1568^[REPLACE] final VariableMap prevPropertyMap = map;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  ParseException e  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[ADD]^^1561^^^^^1550^1568^[ADD] final VariableMap prevPropertyMap = map;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  ParseException e  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^propertyMap =  runPropertyRenaming ( null, prevPropertyMap, externs, root ) ;^1564^1565^^^^1550^1568^[REPLACE] propertyMap = runPropertyRenaming ( compiler, prevPropertyMap, externs, root ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  ParseException e  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[ADD]^^1564^1565^^^^1550^1568^[ADD] propertyMap = runPropertyRenaming ( compiler, prevPropertyMap, externs, root ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  ParseException e  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return  new CompilerPass (  )  {     Override     public void process ( Node externs, Node root )  {         for  ( CompilerPass pass : passes )  {             pass.process ( externs, root ) ;         }     } }   {^1562^^^^^1550^1568^[REPLACE] return new CompilerPass (  )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  ParseException e  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^propertyMap =  runPropertyRenaming ( null, prevPropertyMap, externs, root ) ;^1564^1565^^^^1563^1566^[REPLACE] propertyMap = runPropertyRenaming ( compiler, prevPropertyMap, externs, root ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return rproto .process ( externs , externs )  ;^1581^^^^^1573^1600^[REPLACE] return rproto.getPropertyMap (  ) ;^[METHOD] runPropertyRenaming [TYPE] VariableMap [PARAMETER] AbstractCompiler compiler VariableMap prevPropertyMap Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  RenameProperties rprop  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  RenamePrototypes rproto  rproto2  [TYPE]  char[] reservedChars  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return rproto.getPropertyMap (  ) ;^1587^^^^^1573^1600^[REPLACE] return rproto2.getPropertyMap (  ) ;^[METHOD] runPropertyRenaming [TYPE] VariableMap [PARAMETER] AbstractCompiler compiler VariableMap prevPropertyMap Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  RenameProperties rprop  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  RenamePrototypes rproto  rproto2  [TYPE]  char[] reservedChars  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return rproto.getPropertyMap (  ) ;^1594^^^^^1573^1600^[REPLACE] return rprop.getPropertyMap (  ) ;^[METHOD] runPropertyRenaming [TYPE] VariableMap [PARAMETER] AbstractCompiler compiler VariableMap prevPropertyMap Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  RenameProperties rprop  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  RenamePrototypes rproto  rproto2  [TYPE]  char[] reservedChars  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^RenamePrototypes rproto = new RenamePrototypes ( compiler, true, reservedChars, prevPropertyMap ) ;^1578^1579^^^^1573^1600^[REPLACE] RenamePrototypes rproto = new RenamePrototypes ( compiler, false, reservedChars, prevPropertyMap ) ;^[METHOD] runPropertyRenaming [TYPE] VariableMap [PARAMETER] AbstractCompiler compiler VariableMap prevPropertyMap Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  RenameProperties rprop  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  RenamePrototypes rproto  rproto2  [TYPE]  char[] reservedChars  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[ADD]^^1578^1579^^^^1573^1600^[ADD] RenamePrototypes rproto = new RenamePrototypes ( compiler, false, reservedChars, prevPropertyMap ) ;^[METHOD] runPropertyRenaming [TYPE] VariableMap [PARAMETER] AbstractCompiler compiler VariableMap prevPropertyMap Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  RenameProperties rprop  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  RenamePrototypes rproto  rproto2  [TYPE]  char[] reservedChars  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^RenamePrototypes rproto2 = new RenamePrototypes ( compiler, false, reservedChars, prevPropertyMap ) ;^1584^1585^^^^1573^1600^[REPLACE] RenamePrototypes rproto2 = new RenamePrototypes ( compiler, true, reservedChars, prevPropertyMap ) ;^[METHOD] runPropertyRenaming [TYPE] VariableMap [PARAMETER] AbstractCompiler compiler VariableMap prevPropertyMap Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  RenameProperties rprop  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  RenamePrototypes rproto  rproto2  [TYPE]  char[] reservedChars  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^RenameProperties rprop = new RenameProperties ( compiler, options.generatePseudoNames, variableMap, reservedChars ) ;^1590^1591^1592^^^1573^1600^[REPLACE] RenameProperties rprop = new RenameProperties ( compiler, options.generatePseudoNames, prevPropertyMap, reservedChars ) ;^[METHOD] runPropertyRenaming [TYPE] VariableMap [PARAMETER] AbstractCompiler compiler VariableMap prevPropertyMap Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  RenameProperties rprop  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  RenamePrototypes rproto  rproto2  [TYPE]  char[] reservedChars  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return ;^1597^1598^^^^1573^1600^[REPLACE] throw new IllegalStateException ( "Unrecognized property renaming policy" ) ;^[METHOD] runPropertyRenaming [TYPE] VariableMap [PARAMETER] AbstractCompiler compiler VariableMap prevPropertyMap Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  RenameProperties rprop  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  RenamePrototypes rproto  rproto2  [TYPE]  char[] reservedChars  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^VariableMap map = true;^1607^^^^^1606^1624^[REPLACE] VariableMap map = null;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  ParseException e  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( options.inputVariableMapSerialized == null )  {^1608^^^^^1606^1624^[REPLACE] if  ( options.inputVariableMapSerialized != null )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  ParseException e  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[ADD]^map = VariableMap.fromBytes ( options.inputVariableMapSerialized ) ;JSError.make ( INPUT_MAP_VAR_PARSE, e.getMessage (  )  )  ) ;^1609^1610^1611^1612^1613^1606^1624^[ADD] try { map = VariableMap.fromBytes ( options.inputVariableMapSerialized ) ; } catch  ( ParseException e )  { return new ErrorPass ( compiler, JSError.make ( INPUT_MAP_VAR_PARSE, e.getMessage (  )  )  ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  ParseException e  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^map = VariableMap.fromBytes ( options.inputPropertyMapSerialized ) ; ;^1610^^^^^1606^1624^[REPLACE] map = VariableMap.fromBytes ( options.inputVariableMapSerialized ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  ParseException e  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return  new ErrorPass ( compiler, make ( INPUT_MAP_PROP_PARSE, e.getMessage (  )  )  )   )  ) ;^1612^1613^^^^1606^1624^[REPLACE] return new ErrorPass ( compiler, JSError.make ( INPUT_MAP_VAR_PARSE, e.getMessage (  )  )  ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  ParseException e  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[ADD]^^1610^^^^^1606^1624^[ADD] map = VariableMap.fromBytes ( options.inputVariableMapSerialized ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  ParseException e  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^final VariableMap prevVariableMap = variableMap;^1617^^^^^1606^1624^[REPLACE] final VariableMap prevVariableMap = map;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  ParseException e  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^variableMap =  runVariableRenaming ( null, prevVariableMap, externs, root ) ;^1620^1621^^^^1606^1624^[REPLACE] variableMap = runVariableRenaming ( compiler, prevVariableMap, externs, root ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  ParseException e  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return  new CompilerPass (  )  {     Override     public void process ( Node externs, Node root )  {         for  ( CompilerPass pass : passes )  {             pass.process ( externs, root ) ;         }     } }   {^1618^^^^^1606^1624^[REPLACE] return new CompilerPass (  )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  ParseException e  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^variableMap =  runVariableRenaming ( null, prevVariableMap, externs, root ) ;^1620^1621^^^^1619^1622^[REPLACE] variableMap = runVariableRenaming ( compiler, prevVariableMap, externs, root ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^boolean preserveAnonymousFunctionNames = options.anonymousFunctionNaming  == null;^1632^1633^^^^1627^1645^[REPLACE] boolean preserveAnonymousFunctionNames = options.anonymousFunctionNaming != AnonymousFunctionNamingPolicy.OFF;^[METHOD] runVariableRenaming [TYPE] VariableMap [PARAMETER] AbstractCompiler compiler VariableMap prevVariableMap Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  char[] reservedChars  [TYPE]  RenameVars rn  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^RenameVars rn = new RenameVars ( compiler, options.renamePrefix, options.variableRenaming  !=  VariableRenamingPolicy.LOCAL,^1634^1635^1636^1637^^1627^1645^[REPLACE] RenameVars rn = new RenameVars ( compiler, options.renamePrefix, options.variableRenaming == VariableRenamingPolicy.LOCAL,^[METHOD] runVariableRenaming [TYPE] VariableMap [PARAMETER] AbstractCompiler compiler VariableMap prevVariableMap Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  char[] reservedChars  [TYPE]  RenameVars rn  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^rn .getExportedVariableNames (  )  ;^1643^^^^^1627^1645^[REPLACE] rn.process ( externs, root ) ;^[METHOD] runVariableRenaming [TYPE] VariableMap [PARAMETER] AbstractCompiler compiler VariableMap prevVariableMap Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  char[] reservedChars  [TYPE]  RenameVars rn  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[ADD]^^1643^^^^^1627^1645^[ADD] rn.process ( externs, root ) ;^[METHOD] runVariableRenaming [TYPE] VariableMap [PARAMETER] AbstractCompiler compiler VariableMap prevVariableMap Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  char[] reservedChars  [TYPE]  RenameVars rn  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return new CollapseAnonymousFunctions ( compiler ) ;^1644^^^^^1627^1645^[REPLACE] return rn.getVariableMap (  ) ;^[METHOD] runVariableRenaming [TYPE] VariableMap [PARAMETER] AbstractCompiler compiler VariableMap prevVariableMap Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  char[] reservedChars  [TYPE]  RenameVars rn  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return new CrossModuleCodeMotion ( compiler, compiler.getModuleGraph (  )  ) ;^1652^^^^^1651^1653^[REPLACE] return new RenameLabels ( compiler ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return new CrossModuleCodeMotion ( compiler, compiler.getModuleGraph (  )  ) ;^1661^^^^^1660^1662^[REPLACE] return new ConvertToDottedProperties ( compiler ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return new VarCheck ( compiler, false ) ;^1670^^^^^1669^1671^[REPLACE] return new VarCheck ( compiler, true ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[ADD]^new FileReader ( options.instrumentationTemplate ) ;^1681^1682^1683^1684^1685^1678^1696^[ADD] try { FileReader templateFile = new FileReader ( options.instrumentationTemplate ) ; ( new InstrumentFunctions ( compiler, functionNames,^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  FileReader templateFile  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[ADD]^^1682^1683^^^^1678^1696^[ADD] FileReader templateFile = new FileReader ( options.instrumentationTemplate ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  FileReader templateFile  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return new CrossModuleCodeMotion ( compiler, compiler.getModuleGraph (  )  ) ;^1679^^^^^1678^1696^[REPLACE] return new CompilerPass (  )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  FileReader templateFile  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[ADD]^new FileReader ( options.instrumentationTemplate ) ;^1681^1682^1683^1684^1685^1680^1694^[ADD] try { FileReader templateFile = new FileReader ( options.instrumentationTemplate ) ; ( new InstrumentFunctions ( compiler, functionNames,^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  FileReader templateFile  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[ADD]^^1689^1690^1691^^^1680^1694^[ADD] catch  ( IOException e )  { compiler.report ( JSError.make ( AbstractCompiler.READ_ERROR,^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  FileReader templateFile  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return new PassFactory ( reportPath, false )  {^1703^^^^^1702^1709^[REPLACE] return new PassFactory ( name, true )  {^[METHOD] createEmptyPass [TYPE] PassFactory [PARAMETER] String name [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  name  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return  (  ( functionNames = new FunctionNames ( compiler )  )  ) ;^1706^^^^^1702^1709^[REPLACE] return runInSerial (  ) ;^[METHOD] createEmptyPass [TYPE] PassFactory [PARAMETER] String name [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  name  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return  (  ( functionNames = new FunctionNames ( compiler )  )  ) ;^1706^^^^^1705^1707^[REPLACE] return runInSerial (  ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  name  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return  new PassFactory ( name, true )  {     Override     protected CompilerPass createInternal ( final AbstractCompiler compiler )  {         return runInSerial (  ) ;     } }   {^1716^^^^^1714^1722^[REPLACE] return new PassFactory ( "runCustomPasses", true )  {^[METHOD] getCustomPasses [TYPE] PassFactory [PARAMETER] CustomPassExecutionTime executionTime [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  CustomPassExecutionTime executionTime  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  name  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return runInSerial (   executionTime    ) ;^1719^^^^^1714^1722^[REPLACE] return runInSerial ( options.customPasses.get ( executionTime )  ) ;^[METHOD] getCustomPasses [TYPE] PassFactory [PARAMETER] CustomPassExecutionTime executionTime [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  CustomPassExecutionTime executionTime  [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  name  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return runInSerial (   executionTime    ) ;^1719^^^^^1718^1720^[REPLACE] return runInSerial ( options.customPasses.get ( executionTime )  ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  name  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return false ;^1729^1730^1731^^^1728^1732^[REPLACE] return options.propertyRenaming == PropertyRenamingPolicy.HEURISTIC || options.propertyRenaming == PropertyRenamingPolicy.AGGRESSIVE_HEURISTIC;^[METHOD] isInliningForbidden [TYPE] boolean [PARAMETER] [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  name  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return new CrossModuleCodeMotion ( compiler, compiler.getModuleGraph (  )  ) ;^1736^^^^^1735^1737^[REPLACE] return runInSerial ( Lists.newArrayList ( passes )  ) ;^[METHOD] runInSerial [TYPE] CompilerPass [PARAMETER]  passes [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  name  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  CompilerPass[] passes  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return  new CompilerPass (  )  {     Override     public void process ( Node externs, Node root )  {         NameAnonymousFunctionsMapped naf = new NameAnonymousFunctionsMapped ( compiler ) ;         naf.process ( externs, root ) ;         anonymousFunctionNameMap = naf.getFunctionMap (  ) ;     } }   {^1742^^^^^1740^1749^[REPLACE] return new CompilerPass (  )  {^[METHOD] runInSerial [TYPE] CompilerPass [PARAMETER] CompilerPass> passes [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  name  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  CompilerPass pass  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Collection passes  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^for  ( CompilerPass pass : passes )  { pass.process ( externs, root ) ;^1744^^^^^1740^1749^[REPLACE] for  ( CompilerPass pass : passes )  {^[METHOD] runInSerial [TYPE] CompilerPass [PARAMETER] CompilerPass> passes [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  name  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  CompilerPass pass  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Collection passes  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[ADD]^^1744^1745^1746^^^1740^1749^[ADD] for  ( CompilerPass pass : passes )  { pass.process ( externs, root ) ; }^[METHOD] runInSerial [TYPE] CompilerPass [PARAMETER] CompilerPass> passes [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  name  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  CompilerPass pass  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Collection passes  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^for  ( CompilerPass pass : passes )  { pass.process ( externs, root ) ;^1744^^^^^1743^1747^[REPLACE] for  ( CompilerPass pass : passes )  {^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  name  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  CompilerPass pass  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^Map<String, Node> additionalReplacements = Maps .newHashMap ( this )  ;^1754^^^^^1752^1766^[REPLACE] Map<String, Node> additionalReplacements = Maps.newHashMap (  ) ;^[METHOD] getAdditionalReplacements [TYPE] Map [PARAMETER] CompilerOptions options [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  name  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  CompilerOptions options  [TYPE]  Map additionalReplacements  cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( options.markAsCompiled ) {^1756^^^^^1752^1766^[REPLACE] if  ( options.markAsCompiled || options.closurePass )  {^[METHOD] getAdditionalReplacements [TYPE] Map [PARAMETER] CompilerOptions options [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  name  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  CompilerOptions options  [TYPE]  Map additionalReplacements  cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^additionalReplacements.put ( CLOSURE_LOCALE_CONSTANT_NAME, Node.newString ( options.locale )  ) ;^1757^^^^^1752^1766^[REPLACE] additionalReplacements.put ( COMPILED_CONSTANT_NAME, new Node ( Token.TRUE )  ) ;^[METHOD] getAdditionalReplacements [TYPE] Map [PARAMETER] CompilerOptions options [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  name  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  CompilerOptions options  [TYPE]  Map additionalReplacements  cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( options.closurePass && options.locale == false )  {^1760^^^^^1752^1766^[REPLACE] if  ( options.closurePass && options.locale != null )  {^[METHOD] getAdditionalReplacements [TYPE] Map [PARAMETER] CompilerOptions options [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  name  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  CompilerOptions options  [TYPE]  Map additionalReplacements  cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^additionalReplacements.put ( CLOSURE_LOCALE_CONSTANT_NAME,   options.locale    ) ;^1761^1762^^^^1752^1766^[REPLACE] additionalReplacements.put ( CLOSURE_LOCALE_CONSTANT_NAME, Node.newString ( options.locale )  ) ;^[METHOD] getAdditionalReplacements [TYPE] Map [PARAMETER] CompilerOptions options [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  name  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  CompilerOptions options  [TYPE]  Map additionalReplacements  cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^options.locale    ) ;^1762^^^^^1752^1766^[REPLACE] Node.newString ( options.locale )  ) ;^[METHOD] getAdditionalReplacements [TYPE] Map [PARAMETER] CompilerOptions options [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  name  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  CompilerOptions options  [TYPE]  Map additionalReplacements  cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return null;^1765^^^^^1752^1766^[REPLACE] return additionalReplacements;^[METHOD] getAdditionalReplacements [TYPE] Map [PARAMETER] CompilerOptions options [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  name  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  CompilerOptions options  [TYPE]  Map additionalReplacements  cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^graphBuilder.process ( externs, root ) ;^1784^^^^^1783^1785^[REPLACE] compiler.report ( error ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  name  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  Map additionalReplacements  cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^DefinitionProvider definitionProvider = true;^1803^^^^^1802^1828^[REPLACE] DefinitionProvider definitionProvider = null;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  name  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  DefinitionProvider definitionProvider  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  PureFunctionIdentifier pureFunctionIdentifier  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  NameReferenceGraphConstruction graphBuilder  [TYPE]  Map additionalReplacements  cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[ADD]^^1803^^^^^1802^1828^[ADD] DefinitionProvider definitionProvider = null;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  name  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  DefinitionProvider definitionProvider  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  PureFunctionIdentifier pureFunctionIdentifier  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  NameReferenceGraphConstruction graphBuilder  [TYPE]  Map additionalReplacements  cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^} else if  ( options.markNoSideEffectCalls )  {^1804^^^^^1802^1828^[REPLACE] if  ( useNameReferenceGraph )  {^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  name  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  DefinitionProvider definitionProvider  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  PureFunctionIdentifier pureFunctionIdentifier  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  NameReferenceGraphConstruction graphBuilder  [TYPE]  Map additionalReplacements  cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^definitionProvider =  null;^1812^^^^^1804^1813^[REPLACE] definitionProvider = defFinder;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  name  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  DefinitionProvider definitionProvider  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  PureFunctionIdentifier pureFunctionIdentifier  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  NameReferenceGraphConstruction graphBuilder  [TYPE]  Map additionalReplacements  cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^PureFunctionIdentifier pureFunctionIdentifier = new PureFunctionIdentifier ( compiler, definitionProvider ) ;^1810^^^^^1804^1813^[REPLACE] SimpleDefinitionFinder defFinder = new SimpleDefinitionFinder ( compiler ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  name  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  DefinitionProvider definitionProvider  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  PureFunctionIdentifier pureFunctionIdentifier  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  NameReferenceGraphConstruction graphBuilder  [TYPE]  Map additionalReplacements  cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[ADD]^^1810^1811^^^^1804^1813^[ADD] SimpleDefinitionFinder defFinder = new SimpleDefinitionFinder ( compiler ) ; defFinder.process ( externs, root ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  name  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  DefinitionProvider definitionProvider  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  PureFunctionIdentifier pureFunctionIdentifier  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  NameReferenceGraphConstruction graphBuilder  [TYPE]  Map additionalReplacements  cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^definitionProvider =  null.getNameReferenceGraph (  ) ;^1808^^^^^1802^1828^[REPLACE] definitionProvider = graphBuilder.getNameReferenceGraph (  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  name  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  DefinitionProvider definitionProvider  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  PureFunctionIdentifier pureFunctionIdentifier  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  NameReferenceGraphConstruction graphBuilder  [TYPE]  Map additionalReplacements  cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^definitionProvider =  null;^1812^^^^^1802^1828^[REPLACE] definitionProvider = defFinder;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  name  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  DefinitionProvider definitionProvider  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  PureFunctionIdentifier pureFunctionIdentifier  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  NameReferenceGraphConstruction graphBuilder  [TYPE]  Map additionalReplacements  cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[ADD]^^1812^^^^^1802^1828^[ADD] definitionProvider = defFinder;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  name  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  DefinitionProvider definitionProvider  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  PureFunctionIdentifier pureFunctionIdentifier  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  NameReferenceGraphConstruction graphBuilder  [TYPE]  Map additionalReplacements  cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^PureFunctionIdentifier pureFunctionIdentifier = new PureFunctionIdentifier ( compiler, definitionProvider ) ;^1810^^^^^1802^1828^[REPLACE] SimpleDefinitionFinder defFinder = new SimpleDefinitionFinder ( compiler ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  name  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  DefinitionProvider definitionProvider  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  PureFunctionIdentifier pureFunctionIdentifier  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  NameReferenceGraphConstruction graphBuilder  [TYPE]  Map additionalReplacements  cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^pureFunctionIdentifier .getExportedVariableNames (  )  ;^1817^^^^^1802^1828^[REPLACE] pureFunctionIdentifier.process ( externs, root ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  name  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  DefinitionProvider definitionProvider  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  PureFunctionIdentifier pureFunctionIdentifier  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  NameReferenceGraphConstruction graphBuilder  [TYPE]  Map additionalReplacements  cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^if  ( blacklist == null )  {^1819^^^^^1802^1828^[REPLACE] if  ( reportPath != null )  {^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  name  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  DefinitionProvider definitionProvider  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  PureFunctionIdentifier pureFunctionIdentifier  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  NameReferenceGraphConstruction graphBuilder  [TYPE]  Map additionalReplacements  cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[ADD]^^1819^1820^1821^1822^1823^1802^1828^[ADD] if  ( reportPath != null )  { try { Files.write ( pureFunctionIdentifier.getDebugReport (  ) , new File ( reportPath ) , Charsets.UTF_8 ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  name  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  DefinitionProvider definitionProvider  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  PureFunctionIdentifier pureFunctionIdentifier  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  NameReferenceGraphConstruction graphBuilder  [TYPE]  Map additionalReplacements  cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[ADD]^Charsets.UTF_8 ) ;^1820^1821^1822^1823^1824^1802^1828^[ADD] try { Files.write ( pureFunctionIdentifier.getDebugReport (  ) , new File ( reportPath ) , Charsets.UTF_8 ) ; } catch  ( IOException e )  {^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  name  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  DefinitionProvider definitionProvider  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  PureFunctionIdentifier pureFunctionIdentifier  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  NameReferenceGraphConstruction graphBuilder  [TYPE]  Map additionalReplacements  cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^pureFunctionIdentifier.getDebugReport (  )  , Charsets.UTF_8 ) ;^1821^1822^1823^^^1802^1828^[REPLACE] Files.write ( pureFunctionIdentifier.getDebugReport (  ) , new File ( reportPath ) , Charsets.UTF_8 ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  name  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  DefinitionProvider definitionProvider  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  PureFunctionIdentifier pureFunctionIdentifier  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  NameReferenceGraphConstruction graphBuilder  [TYPE]  Map additionalReplacements  cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^Files.write ( pureFunctionIdentifier .process ( externs , externs )  , new File ( reportPath ) , Charsets.UTF_8 ) ;^1821^1822^1823^^^1802^1828^[REPLACE] Files.write ( pureFunctionIdentifier.getDebugReport (  ) , new File ( reportPath ) , Charsets.UTF_8 ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  name  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  DefinitionProvider definitionProvider  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  PureFunctionIdentifier pureFunctionIdentifier  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  NameReferenceGraphConstruction graphBuilder  [TYPE]  Map additionalReplacements  cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[ADD]^^1821^1822^1823^1824^1825^1802^1828^[ADD] Files.write ( pureFunctionIdentifier.getDebugReport (  ) , new File ( reportPath ) , Charsets.UTF_8 ) ; } catch  ( IOException e )  { throw new RuntimeException  (" ")  ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  name  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  DefinitionProvider definitionProvider  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  PureFunctionIdentifier pureFunctionIdentifier  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  NameReferenceGraphConstruction graphBuilder  [TYPE]  Map additionalReplacements  cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^throw new IllegalStateException  (" ")  ; ;^1825^^^^^1802^1828^[REPLACE] throw new RuntimeException  (" ")  ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  name  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  DefinitionProvider definitionProvider  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  PureFunctionIdentifier pureFunctionIdentifier  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  NameReferenceGraphConstruction graphBuilder  [TYPE]  Map additionalReplacements  cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^return ;^1825^^^^^1802^1828^[REPLACE] throw new RuntimeException  (" ")  ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] DefaultPassConfig 1 2 3 4 5 6 7 1 8 1 9 10 1 11 12 13 14 15 16 17 18 19 20 1 21 1 22 23 GlobalTypeResolver 24 1 25 26 27 1 28 29 30 31 32 33 1 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 1 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 1 64 65 66 67 68 69 70 71 72 1 73 1 74 75 76 77 1 78 79 80 ErrorPass PureFunctionMarker   [TYPE]  Set exportedNames  [TYPE]  Node externs  root  [TYPE]  String CLOSURE_LOCALE_CONSTANT_NAME  COMPILED_CONSTANT_NAME  blacklist  name  reportPath  [TYPE]  IdGenerator crossModuleIdGenerator  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  IOException e  [TYPE]  GlobalNamespace namespaceForChecks  [TYPE]  PassFactory aliasExternals  aliasKeywords  aliasStrings  ambiguateProperties  chainCalls  checkAccessControls  checkConsts  checkControlFlow  checkControlStructures  checkFunctions  checkGlobalNames  checkMethods  checkProvides  checkRequires  checkShadowVars  checkStrictMode  checkSuspiciousProperties  checkTypes  checkVariableReferences  checkVars  closureCheckGetCssName  closurePrimitives  closureReplaceGetCssName  coalesceVariableNames  collapseAnonymousFunctions  collapseProperties  collapseVariableDeclarations  computeFunctionNames  convertToDottedProperties  createSyntheticBlocks  crossModuleCodeMotion  crossModuleMethodMotion  deadAssignmentsElimination  denormalize  devirtualizePrototypeMethods  disambiguateProperties  exportTestFunctions  extractPrototypeMemberDeclarations  flowSensitiveInlineVariables  foldConstants  gatherRawExports  generateExports  ignoreCajaProperties  inferTypes  inlineConstants  inlineFunctions  inlineGetters  inlineVariables  instrumentFunctions  invertContextualRenaming  markNoSideEffectCalls  markPureFunctions  minimizeExitPoints  moveFunctionDeclarations  nameMappedAnonymousFunctions  nameUnmappedAnonymousFunctions  normalize  objectPropertyStringPostprocess  objectPropertyStringPreprocess  optimizeArgumentsArray  pass  processDefines  removeAbstractMethods  removeConstantExpressions  removeUnreachableCode  removeUnusedPrototypeProperties  removeUnusedVars  removeUselessParameters  renameLabels  renameProperties  renameVars  replaceIdGenerators  resolveTypes  rewriteFunctionExpressions  sanityCheckVars  smartNamePass  suspiciousCode  tightenTypesBuilder  [TYPE]  TightenTypes tightenTypes  [TYPE]  JSError error  [TYPE]  AbstractCompiler compiler  [TYPE]  DefinitionProvider definitionProvider  [TYPE]  boolean enableBlockInlining  false  preserveAnonymousFunctionNames  true  useNameReferenceGraph  [TYPE]  PureFunctionIdentifier pureFunctionIdentifier  [TYPE]  VariableMap anonymousFunctionNameMap  map  prevPropertyMap  prevVariableMap  propertyMap  variableMap  [TYPE]  DiagnosticType CANNOT_USE_PROTOTYPE_AND_VAR  GENERATE_EXPORTS_ERROR  INPUT_MAP_PROP_PARSE  INPUT_MAP_VAR_PARSE  REPORT_PATH_IO_ERROR  TIGHTEN_TYPES_WITHOUT_TYPE_CHECK  error  [TYPE]  NameReferenceGraphConstruction graphBuilder  [TYPE]  Map additionalReplacements  cssNames  newCssNames  replacements  [TYPE]  FunctionNames functionNames 
[REPLACE]^List<Callback> sharedCallbacks = Lists.newArrayList (  ) ;^599^^^^^597^606^[REPLACE] sharedCallbacks.add ( new CheckAccidentalSemicolon ( CheckLevel.WARNING )  ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  List sharedCallbacks 
[REPLACE]^List<Callback> sharedCallbacks = Lists.newArrayList (  ) ;^600^^^^^597^606^[REPLACE] sharedCallbacks.add ( new CheckSideEffects ( CheckLevel.WARNING )  ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  List sharedCallbacks 
[ADD]^^601^602^603^604^^597^606^[ADD] if  ( options.checkGlobalThisLevel.isOn (  )  )  { sharedCallbacks.add ( new CheckGlobalThis ( compiler, options.checkGlobalThisLevel )  ) ; }^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  List sharedCallbacks 
[REPLACE]^return combineChecks ( compiler, false ) ;^605^^^^^597^606^[REPLACE] return combineChecks ( compiler, sharedCallbacks ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  List sharedCallbacks 
[REPLACE]^if  (  convention.getExportPropertyFunction (  )  != true )  {^663^664^^^^661^671^[REPLACE] if  ( convention.getExportSymbolFunction (  )  != null && convention.getExportPropertyFunction (  )  != null )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 5   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  CodingConvention convention 
[REPLACE]^return new GenerateExports ( compiler, convention.getExportSymbolFunction (  ) ,^669^^^^^661^671^[REPLACE] return new ErrorPass ( compiler, GENERATE_EXPORTS_ERROR ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 5   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  CodingConvention convention 
[REPLACE]^return new GenerateExports ( compiler, convention.getExportSymbolFunction (  ) , convention.getExportSymbolFunction (  )  ) ;^665^666^667^^^661^671^[REPLACE] return new GenerateExports ( compiler, convention.getExportSymbolFunction (  ) , convention.getExportPropertyFunction (  )  ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 5   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  CodingConvention convention 
[REPLACE]^if  ( convention.getExportSymbolFunction (  )  == null )  {^680^^^^^678^686^[REPLACE] if  ( convention.getExportSymbolFunction (  )  != null )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 6   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  CodingConvention convention 
[ADD]^^680^681^682^683^684^678^686^[ADD] if  ( convention.getExportSymbolFunction (  )  != null )  { return new ExportTestFunctions ( compiler, convention.getExportSymbolFunction (  )  ) ; } else { return new ErrorPass ( compiler, GENERATE_EXPORTS_ERROR ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 6   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  CodingConvention convention 
[REPLACE]^return new ExportTestFunctions ( compiler, convention.getExportSymbolFunction (  )  ) ;^684^^^^^678^686^[REPLACE] return new ErrorPass ( compiler, GENERATE_EXPORTS_ERROR ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 6   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  CodingConvention convention 
[REPLACE]^return new ErrorPass ( compiler, GENERATE_EXPORTS_ERROR ) ;^681^682^^^^678^686^[REPLACE] return new ExportTestFunctions ( compiler, convention.getExportSymbolFunction (  )  ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 6   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  CodingConvention convention 
[ADD]^^694^695^^^^693^707^[ADD] final GatherRawExports pass = new GatherRawExports ( compiler ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 7 1   [TYPE]  AbstractCompiler compiler  [TYPE]  GatherRawExports pass  [TYPE]  boolean false  true  [TYPE]  Node externs  root 
[REPLACE]^if  ( exportedNames != null )  {^701^^^^^693^707^[REPLACE] if  ( exportedNames == null )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 7 1   [TYPE]  AbstractCompiler compiler  [TYPE]  GatherRawExports pass  [TYPE]  boolean false  true  [TYPE]  Node externs  root 
[ADD]^exportedNames = Sets.newHashSet (  ) ;^701^702^703^^^693^707^[ADD] if  ( exportedNames == null )  { exportedNames = Sets.newHashSet (  ) ; }^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 7 1   [TYPE]  AbstractCompiler compiler  [TYPE]  GatherRawExports pass  [TYPE]  boolean false  true  [TYPE]  Node externs  root 
[REPLACE]^exportedNames ;^702^^^^^693^707^[REPLACE] exportedNames = Sets.newHashSet (  ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 7 1   [TYPE]  AbstractCompiler compiler  [TYPE]  GatherRawExports pass  [TYPE]  boolean false  true  [TYPE]  Node externs  root 
[REPLACE]^exportedNames  =  exportedNames ;^702^^^^^693^707^[REPLACE] exportedNames = Sets.newHashSet (  ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 7 1   [TYPE]  AbstractCompiler compiler  [TYPE]  GatherRawExports pass  [TYPE]  boolean false  true  [TYPE]  Node externs  root 
[REPLACE]^return new CompilerPass (  )  { @Override^697^^^^^693^707^[REPLACE] return new CompilerPass (  )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 7 1   [TYPE]  AbstractCompiler compiler  [TYPE]  GatherRawExports pass  [TYPE]  boolean false  true  [TYPE]  Node externs  root 
[REPLACE]^pass .getExportedVariableNames (  )  ;^700^^^^^699^705^[REPLACE] pass.process ( externs, root ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 7 1   [TYPE]  boolean false  true  [TYPE]  Node externs  root 
[REPLACE]^if  ( exportedNames != this  )  {^701^^^^^699^705^[REPLACE] if  ( exportedNames == null )  {^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 7 1   [TYPE]  boolean false  true  [TYPE]  Node externs  root 
[ADD]^exportedNames = Sets.newHashSet (  ) ;^701^702^703^^^699^705^[ADD] if  ( exportedNames == null )  { exportedNames = Sets.newHashSet (  ) ; }^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 7 1   [TYPE]  boolean false  true  [TYPE]  Node externs  root 
[REPLACE]^exportedNames  =  exportedNames ;^702^^^^^699^705^[REPLACE] exportedNames = Sets.newHashSet (  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 7 1   [TYPE]  boolean false  true  [TYPE]  Node externs  root 
[REPLACE]^exportedNames ;^702^^^^^699^705^[REPLACE] exportedNames = Sets.newHashSet (  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 7 1   [TYPE]  boolean false  true  [TYPE]  Node externs  root 
[REPLACE]^exportedNames.addAll ( this.getExportedVariableNames (  )  ) ;^704^^^^^699^705^[REPLACE] exportedNames.addAll ( pass.getExportedVariableNames (  )  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 7 1   [TYPE]  boolean false  true  [TYPE]  Node externs  root 
[REPLACE]^pass .getExportedVariableNames (  )  ;^700^^^^^699^705^[REPLACE] pass.process ( externs, root ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  Node externs  root 
[REPLACE]^if  ( exportedNames != null )  {^701^^^^^699^705^[REPLACE] if  ( exportedNames == null )  {^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  Node externs  root 
[REPLACE]^exportedNames ;^702^^^^^699^705^[REPLACE] exportedNames = Sets.newHashSet (  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  Node externs  root 
[REPLACE]^exportedNames.addAll ( null.getExportedVariableNames (  )  ) ;^704^^^^^699^705^[REPLACE] exportedNames.addAll ( pass.getExportedVariableNames (  )  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  Node externs  root 
[ADD]^^704^^^^^699^705^[ADD] exportedNames.addAll ( pass.getExportedVariableNames (  )  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  Node externs  root 
[REPLACE]^exportedNames =  null.getExportedVariableNames (  ) ;^725^^^^^715^728^[REPLACE] exportedNames = pass.getExportedVariableNames (  ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 8 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  ProcessClosurePrimitives pass  [TYPE]  Node externs  root 
[REPLACE]^return new CompilerPass (  )  { @Override^721^^^^^715^728^[REPLACE] return new CompilerPass (  )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 8 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  ProcessClosurePrimitives pass  [TYPE]  Node externs  root 
[REPLACE]^pass .getExportedVariableNames (  )  ;^724^^^^^723^726^[REPLACE] pass.process ( externs, root ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 8 1   [TYPE]  boolean false  true  [TYPE]  Node externs  root 
[REPLACE]^exportedNames =  false.getExportedVariableNames (  ) ;^725^^^^^723^726^[REPLACE] exportedNames = pass.getExportedVariableNames (  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 8 1   [TYPE]  boolean false  true  [TYPE]  Node externs  root 
[REPLACE]^exportedNames = pass.getExportedVariableNames (  ) ;^724^^^^^723^726^[REPLACE] pass.process ( externs, root ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  Node externs  root 
[REPLACE]^exportedNames =  null.getExportedVariableNames (  ) ;^725^^^^^723^726^[REPLACE] exportedNames = pass.getExportedVariableNames (  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  Node externs  root 
[REPLACE]^Preconditions.checkState ( blacklist == null ;^737^738^^^^735^741^[REPLACE] Preconditions.checkState ( blacklist != null && !blacklist.isEmpty (  ) , "Not checking use of goog.getCssName because of empty blacklist." ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 9   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  String blacklist 
[ADD]^newCssNames = Maps.newHashMap (  ) ;^757^758^759^^^752^765^[ADD] if  ( options.gatherCssNames )  { newCssNames = Maps.newHashMap (  ) ; }^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 10 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Node externs  jsRoot  [TYPE]  Map newCssNames 
[REPLACE]^newCssNames  = null ;^758^^^^^752^765^[REPLACE] newCssNames = Maps.newHashMap (  ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 10 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Node externs  jsRoot  [TYPE]  Map newCssNames 
[REPLACE]^newCssNames  =  newCssNames ;^758^^^^^752^765^[REPLACE] newCssNames = Maps.newHashMap (  ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 10 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Node externs  jsRoot  [TYPE]  Map newCssNames 
[ADD]^^758^^^^^752^765^[ADD] newCssNames = Maps.newHashMap (  ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 10 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Node externs  jsRoot  [TYPE]  Map newCssNames 
[REPLACE]^cssNames =  this;^762^^^^^752^765^[REPLACE] cssNames = newCssNames;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 10 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Node externs  jsRoot  [TYPE]  Map newCssNames 
[REPLACE]^return new CompilerPass (  )  { @Override^753^^^^^752^765^[REPLACE] return new CompilerPass (  )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 10 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Node externs  jsRoot  [TYPE]  Map newCssNames 
[REPLACE]^Map<String, Integer> newCssNames = false;^756^^^^^752^765^[REPLACE] Map<String, Integer> newCssNames = null;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 10 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Node externs  jsRoot  [TYPE]  Map newCssNames 
[REPLACE]^Map<String, Integer> newCssNames = true;^756^^^^^755^763^[REPLACE] Map<String, Integer> newCssNames = null;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node jsRoot [CLASS] 10 1   [TYPE]  boolean false  true  [TYPE]  Node externs  jsRoot  [TYPE]  Map newCssNames 
[ADD]^^757^758^759^^^755^763^[ADD] if  ( options.gatherCssNames )  { newCssNames = Maps.newHashMap (  ) ; }^[METHOD] process [TYPE] void [PARAMETER] Node externs Node jsRoot [CLASS] 10 1   [TYPE]  boolean false  true  [TYPE]  Node externs  jsRoot  [TYPE]  Map newCssNames 
[REPLACE]^newCssNames  =  newCssNames ;^758^^^^^755^763^[REPLACE] newCssNames = Maps.newHashMap (  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node jsRoot [CLASS] 10 1   [TYPE]  boolean false  true  [TYPE]  Node externs  jsRoot  [TYPE]  Map newCssNames 
[REPLACE]^newCssNames ;^758^^^^^755^763^[REPLACE] newCssNames = Maps.newHashMap (  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node jsRoot [CLASS] 10 1   [TYPE]  boolean false  true  [TYPE]  Node externs  jsRoot  [TYPE]  Map newCssNames 
[REPLACE]^( new ReplaceCssNames ( compiler, newCssNames )  )  .process ( externs , externs )  ;^760^761^^^^755^763^[REPLACE] ( new ReplaceCssNames ( compiler, newCssNames )  ) .process ( externs, jsRoot ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node jsRoot [CLASS] 10 1   [TYPE]  boolean false  true  [TYPE]  Node externs  jsRoot  [TYPE]  Map newCssNames 
[REPLACE]^cssNames =  null;^762^^^^^755^763^[REPLACE] cssNames = newCssNames;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node jsRoot [CLASS] 10 1   [TYPE]  boolean false  true  [TYPE]  Node externs  jsRoot  [TYPE]  Map newCssNames 
[ADD]^^762^^^^^755^763^[ADD] cssNames = newCssNames;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node jsRoot [CLASS] 10 1   [TYPE]  boolean false  true  [TYPE]  Node externs  jsRoot  [TYPE]  Map newCssNames 
[REPLACE]^Map<String, Integer> newCssNames = false;^756^^^^^755^763^[REPLACE] Map<String, Integer> newCssNames = null;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node jsRoot [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  Node externs  jsRoot  [TYPE]  Map newCssNames 
[ADD]^^757^758^759^^^755^763^[ADD] if  ( options.gatherCssNames )  { newCssNames = Maps.newHashMap (  ) ; }^[METHOD] process [TYPE] void [PARAMETER] Node externs Node jsRoot [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  Node externs  jsRoot  [TYPE]  Map newCssNames 
[REPLACE]^newCssNames  =  newCssNames ;^758^^^^^755^763^[REPLACE] newCssNames = Maps.newHashMap (  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node jsRoot [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  Node externs  jsRoot  [TYPE]  Map newCssNames 
[REPLACE]^newCssNames  = null ;^758^^^^^755^763^[REPLACE] newCssNames = Maps.newHashMap (  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node jsRoot [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  Node externs  jsRoot  [TYPE]  Map newCssNames 
[REPLACE]^( new ReplaceCssNames ( compiler, null )  ) .process ( externs, jsRoot ) ;^760^761^^^^755^763^[REPLACE] ( new ReplaceCssNames ( compiler, newCssNames )  ) .process ( externs, jsRoot ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node jsRoot [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  Node externs  jsRoot  [TYPE]  Map newCssNames 
[REPLACE]^cssNames =  null;^762^^^^^755^763^[REPLACE] cssNames = newCssNames;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node jsRoot [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  Node externs  jsRoot  [TYPE]  Map newCssNames 
[REPLACE]^return new CompilerPass (  )  { @Override^861^^^^^860^870^[REPLACE] return new CompilerPass (  )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 20 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Node externs  root 
[REPLACE]^topScope   ;^864^^^^^863^868^[REPLACE] Preconditions.checkNotNull ( topScope ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 20 1   [TYPE]  boolean false  true  [TYPE]  Node externs  root 
[ADD]^^864^865^^^^863^868^[ADD] Preconditions.checkNotNull ( topScope ) ; Preconditions.checkNotNull ( typedScopeCreator ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 20 1   [TYPE]  boolean false  true  [TYPE]  Node externs  root 
[REPLACE]^typedScopeCreator   ;^865^^^^^863^868^[REPLACE] Preconditions.checkNotNull ( typedScopeCreator ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 20 1   [TYPE]  boolean false  true  [TYPE]  Node externs  root 
[REPLACE]^makeTypeInference ( true ) .process ( externs, root ) ;^867^^^^^863^868^[REPLACE] makeTypeInference ( compiler ) .process ( externs, root ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 20 1   [TYPE]  boolean false  true  [TYPE]  Node externs  root 
[REPLACE]^topScope   ;^864^^^^^863^868^[REPLACE] Preconditions.checkNotNull ( topScope ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  Node externs  root 
[ADD]^^864^865^^^^863^868^[ADD] Preconditions.checkNotNull ( topScope ) ; Preconditions.checkNotNull ( typedScopeCreator ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  Node externs  root 
[REPLACE]^typedScopeCreator   ;^865^^^^^863^868^[REPLACE] Preconditions.checkNotNull ( typedScopeCreator ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  Node externs  root 
[ADD]^^865^^^^^863^868^[ADD] Preconditions.checkNotNull ( typedScopeCreator ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  Node externs  root 
[REPLACE]^makeTypeInference ( null ) .process ( externs, root ) ;^867^^^^^863^868^[REPLACE] makeTypeInference ( compiler ) .process ( externs, root ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  Node externs  root 
[REPLACE]^makeTypeInference ( this ) .process ( externs, root ) ;^867^^^^^863^868^[REPLACE] makeTypeInference ( compiler ) .process ( externs, root ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  Node externs  root 
[REPLACE]^return new CompilerPass (  )  { @Override^878^^^^^877^889^[REPLACE] return new CompilerPass (  )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 21 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Node externs  root  [TYPE]  TypeCheck check 
[ADD]^^884^885^^^^877^889^[ADD] TypeCheck check = makeTypeCheck ( compiler ) ; check.process ( externs, root ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 21 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Node externs  root  [TYPE]  TypeCheck check 
[REPLACE]^topScope   ;^881^^^^^880^887^[REPLACE] Preconditions.checkNotNull ( topScope ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 21 1   [TYPE]  boolean false  true  [TYPE]  Node externs  root  [TYPE]  TypeCheck check 
[REPLACE]^typedScopeCreator   ;^882^^^^^880^887^[REPLACE] Preconditions.checkNotNull ( typedScopeCreator ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 21 1   [TYPE]  boolean false  true  [TYPE]  Node externs  root  [TYPE]  TypeCheck check 
[REPLACE]^TypeCheck check = makeTypeCheck ( false ) ;^884^^^^^880^887^[REPLACE] TypeCheck check = makeTypeCheck ( compiler ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 21 1   [TYPE]  boolean false  true  [TYPE]  Node externs  root  [TYPE]  TypeCheck check 
[REPLACE]^check .getTypedPercent (  )  ;^885^^^^^880^887^[REPLACE] check.process ( externs, root ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 21 1   [TYPE]  boolean false  true  [TYPE]  Node externs  root  [TYPE]  TypeCheck check 
[REPLACE]^compiler.getErrorManager (  ) .setTypedPercent ( check .process ( root , externs )   ) ;^886^^^^^880^887^[REPLACE] compiler.getErrorManager (  ) .setTypedPercent ( check.getTypedPercent (  )  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 21 1   [TYPE]  boolean false  true  [TYPE]  Node externs  root  [TYPE]  TypeCheck check 
[REPLACE]^TypeCheck check = makeTypeCheck ( compiler ) ;^886^^^^^880^887^[REPLACE] compiler.getErrorManager (  ) .setTypedPercent ( check.getTypedPercent (  )  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 21 1   [TYPE]  boolean false  true  [TYPE]  Node externs  root  [TYPE]  TypeCheck check 
[REPLACE]^topScope   ;^881^^^^^880^887^[REPLACE] Preconditions.checkNotNull ( topScope ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  Node externs  root  [TYPE]  TypeCheck check 
[REPLACE]^typedScopeCreator   ;^882^^^^^880^887^[REPLACE] Preconditions.checkNotNull ( typedScopeCreator ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  Node externs  root  [TYPE]  TypeCheck check 
[REPLACE]^TypeCheck check = makeTypeCheck ( null ) ;^884^^^^^880^887^[REPLACE] TypeCheck check = makeTypeCheck ( compiler ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  Node externs  root  [TYPE]  TypeCheck check 
[ADD]^^884^^^^^880^887^[ADD] TypeCheck check = makeTypeCheck ( compiler ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  Node externs  root  [TYPE]  TypeCheck check 
[REPLACE]^check .getTypedPercent (  )  ;^885^^^^^880^887^[REPLACE] check.process ( externs, root ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  Node externs  root  [TYPE]  TypeCheck check 
[ADD]^^885^886^^^^880^887^[ADD] check.process ( externs, root ) ; compiler.getErrorManager (  ) .setTypedPercent ( check.getTypedPercent (  )  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  Node externs  root  [TYPE]  TypeCheck check 
[REPLACE]^TypeCheck check = makeTypeCheck ( compiler ) ;^886^^^^^880^887^[REPLACE] compiler.getErrorManager (  ) .setTypedPercent ( check.getTypedPercent (  )  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  Node externs  root  [TYPE]  TypeCheck check 
[ADD]^^886^^^^^880^887^[ADD] compiler.getErrorManager (  ) .setTypedPercent ( check.getTypedPercent (  )  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  Node externs  root  [TYPE]  TypeCheck check 
[REPLACE]^if  ( options.checkMissingReturn.isOn (  )  && options.checkTypes )  {^901^^^^^899^910^[REPLACE] if  ( options.checkUnreachableCode.isOn (  )  )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 22   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  List callbacks 
[ADD]^^901^902^903^904^^899^910^[ADD] if  ( options.checkUnreachableCode.isOn (  )  )  { callbacks.add ( new CheckUnreachableCode ( compiler, options.checkUnreachableCode )  ) ; }^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 22   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  List callbacks 
[REPLACE]^if  ( options.checkMissingReturn.isOn (  )  ) {^905^^^^^899^910^[REPLACE] if  ( options.checkMissingReturn.isOn (  )  && options.checkTypes )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 22   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  List callbacks 
[REPLACE]^return combineChecks ( compiler, null ) ;^909^^^^^899^910^[REPLACE] return combineChecks ( compiler, callbacks ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 22   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  List callbacks 
[REPLACE]^this.compiler =  null;^935^^^^^934^936^[REPLACE] this.compiler = compiler;^[METHOD] <init> [TYPE] AbstractCompiler) [PARAMETER] AbstractCompiler compiler [CLASS] GlobalTypeResolver   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true 
[ADD]^^935^^^^^934^936^[ADD] this.compiler = compiler;^[METHOD] <init> [TYPE] AbstractCompiler) [PARAMETER] AbstractCompiler compiler [CLASS] GlobalTypeResolver   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true 
[REPLACE]^if  ( topScope != null )  {^940^^^^^939^947^[REPLACE] if  ( topScope == null )  {^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] GlobalTypeResolver   [TYPE]  AbstractCompiler compiler  [TYPE]  Node externs  root  [TYPE]  boolean false  true 
[ADD]^^940^941^942^943^^939^947^[ADD] if  ( topScope == null )  { typedScopeCreator = new MemoizedScopeCreator ( new TypedScopeCreator ( compiler )  ) ; topScope = typedScopeCreator.createScope ( root.getParent (  ) , null ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] GlobalTypeResolver   [TYPE]  AbstractCompiler compiler  [TYPE]  Node externs  root  [TYPE]  boolean false  true 
[REPLACE]^topScope = typedScopeCreator.createScope ( root.getParent (  ) , null ) ;^945^^^^^939^947^[REPLACE] compiler.getTypeRegistry (  ) .resolveTypesInScope ( topScope ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] GlobalTypeResolver   [TYPE]  AbstractCompiler compiler  [TYPE]  Node externs  root  [TYPE]  boolean false  true 
[REPLACE]^typedScopeCreator ;^941^942^^^^939^947^[REPLACE] typedScopeCreator = new MemoizedScopeCreator ( new TypedScopeCreator ( compiler )  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] GlobalTypeResolver   [TYPE]  AbstractCompiler compiler  [TYPE]  Node externs  root  [TYPE]  boolean false  true 
[REPLACE]^topScope = typedScopeCreator.createScope ( root.getParent (  ) , true ) ;^943^^^^^939^947^[REPLACE] topScope = typedScopeCreator.createScope ( root.getParent (  ) , null ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] GlobalTypeResolver   [TYPE]  AbstractCompiler compiler  [TYPE]  Node externs  root  [TYPE]  boolean false  true 
[REPLACE]^typedScopeCreator  =  typedScopeCreator ;^941^942^^^^939^947^[REPLACE] typedScopeCreator = new MemoizedScopeCreator ( new TypedScopeCreator ( compiler )  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] GlobalTypeResolver   [TYPE]  AbstractCompiler compiler  [TYPE]  Node externs  root  [TYPE]  boolean false  true 
[REPLACE]^namespaceForChecks =  new GlobalNamespace ( null, jsRoot ) ;^961^^^^^954^966^[REPLACE] namespaceForChecks = new GlobalNamespace ( compiler, jsRoot ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 24 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Node externs  jsRoot 
[ADD]^^961^^^^^954^966^[ADD] namespaceForChecks = new GlobalNamespace ( compiler, jsRoot ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 24 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Node externs  jsRoot 
[REPLACE]^return new CompilerPass (  )  { @Override^955^^^^^954^966^[REPLACE] return new CompilerPass (  )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 24 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Node externs  jsRoot 
[REPLACE]^namespaceForChecks =  new GlobalNamespace ( null, jsRoot ) ;^961^^^^^957^964^[REPLACE] namespaceForChecks = new GlobalNamespace ( compiler, jsRoot ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node jsRoot [CLASS] 24 1   [TYPE]  boolean false  true  [TYPE]  Node externs  jsRoot 
[ADD]^^961^^^^^957^964^[ADD] namespaceForChecks = new GlobalNamespace ( compiler, jsRoot ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node jsRoot [CLASS] 24 1   [TYPE]  boolean false  true  [TYPE]  Node externs  jsRoot 
[ADD]^^962^963^^^^957^964^[ADD] new CheckGlobalNames ( compiler, options.checkGlobalNamesLevel ) .injectNamespace ( namespaceForChecks ) .process ( externs, jsRoot ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node jsRoot [CLASS] 24 1   [TYPE]  boolean false  true  [TYPE]  Node externs  jsRoot 
[REPLACE]^new CheckGlobalNames ( null, options.checkGlobalNamesLevel ) .injectNamespace ( namespaceForChecks ) .process ( externs, jsRoot ) ;^962^963^^^^957^964^[REPLACE] new CheckGlobalNames ( compiler, options.checkGlobalNamesLevel ) .injectNamespace ( namespaceForChecks ) .process ( externs, jsRoot ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node jsRoot [CLASS] 24 1   [TYPE]  boolean false  true  [TYPE]  Node externs  jsRoot 
[REPLACE]^namespaceForChecks =  new GlobalNamespace ( false, jsRoot ) ;^961^^^^^957^964^[REPLACE] namespaceForChecks = new GlobalNamespace ( compiler, jsRoot ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node jsRoot [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  Node externs  jsRoot 
[REPLACE]^new CheckGlobalNames ( null, options.checkGlobalNamesLevel ) .injectNamespace ( namespaceForChecks ) .process ( externs, jsRoot ) ;^962^963^^^^957^964^[REPLACE] new CheckGlobalNames ( compiler, options.checkGlobalNamesLevel ) .injectNamespace ( namespaceForChecks ) .process ( externs, jsRoot ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node jsRoot [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  Node externs  jsRoot 
[REPLACE]^namespaceForChecks = this;^1010^^^^^997^1013^[REPLACE] namespaceForChecks = null;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 27 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Node externs  jsRoot  [TYPE]  Map replacements 
[REPLACE]^return new CompilerPass (  )  { @Override^998^^^^^997^1013^[REPLACE] return new CompilerPass (  )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 27 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Node externs  jsRoot  [TYPE]  Map replacements 
[REPLACE]^Map<String, Node> replacements = getAdditionalReplacements ( options ) ;^1002^^^^^1000^1011^[REPLACE] replacements.putAll ( options.getDefineReplacements (  )  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node jsRoot [CLASS] 27 1   [TYPE]  boolean false  true  [TYPE]  Node externs  jsRoot  [TYPE]  Map replacements 
[REPLACE]^new ProcessDefines ( compiler, replacements ) .injectNamespace ( namespaceForChecks )  .process ( externs , jsRoot )  ;^1004^1005^^^^1000^1011^[REPLACE] new ProcessDefines ( compiler, replacements ) .injectNamespace ( namespaceForChecks ) .process ( externs, jsRoot ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node jsRoot [CLASS] 27 1   [TYPE]  boolean false  true  [TYPE]  Node externs  jsRoot  [TYPE]  Map replacements 
[ADD]^^1004^1005^^^^1000^1011^[ADD] new ProcessDefines ( compiler, replacements ) .injectNamespace ( namespaceForChecks ) .process ( externs, jsRoot ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node jsRoot [CLASS] 27 1   [TYPE]  boolean false  true  [TYPE]  Node externs  jsRoot  [TYPE]  Map replacements 
[REPLACE]^new ProcessDefines ( this, replacements ) .injectNamespace ( namespaceForChecks ) .process ( externs, jsRoot ) ;^1004^1005^^^^1000^1011^[REPLACE] new ProcessDefines ( compiler, replacements ) .injectNamespace ( namespaceForChecks ) .process ( externs, jsRoot ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node jsRoot [CLASS] 27 1   [TYPE]  boolean false  true  [TYPE]  Node externs  jsRoot  [TYPE]  Map replacements 
[REPLACE]^namespaceForChecks = false;^1010^^^^^1000^1011^[REPLACE] namespaceForChecks = null;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node jsRoot [CLASS] 27 1   [TYPE]  boolean false  true  [TYPE]  Node externs  jsRoot  [TYPE]  Map replacements 
[REPLACE]^Map<String, Node> replacements = getAdditionalReplacements ( options ) ;^1002^^^^^1000^1011^[REPLACE] replacements.putAll ( options.getDefineReplacements (  )  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node jsRoot [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  Node externs  jsRoot  [TYPE]  Map replacements 
[ADD]^^1002^^^^^1000^1011^[ADD] replacements.putAll ( options.getDefineReplacements (  )  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node jsRoot [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  Node externs  jsRoot  [TYPE]  Map replacements 
[REPLACE]^new ProcessDefines ( compiler, this ) .injectNamespace ( namespaceForChecks ) .process ( externs, jsRoot ) ;^1004^1005^^^^1000^1011^[REPLACE] new ProcessDefines ( compiler, replacements ) .injectNamespace ( namespaceForChecks ) .process ( externs, jsRoot ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node jsRoot [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  Node externs  jsRoot  [TYPE]  Map replacements 
[REPLACE]^new ProcessDefines ( this, replacements ) .injectNamespace ( namespaceForChecks ) .process ( externs, jsRoot ) ;^1004^1005^^^^1000^1011^[REPLACE] new ProcessDefines ( compiler, replacements ) .injectNamespace ( namespaceForChecks ) .process ( externs, jsRoot ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node jsRoot [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  Node externs  jsRoot  [TYPE]  Map replacements 
[REPLACE]^namespaceForChecks = true;^1010^^^^^1000^1011^[REPLACE] namespaceForChecks = null;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node jsRoot [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  Node externs  jsRoot  [TYPE]  Map replacements 
[REPLACE]^return  (  ( functionNames =  new FunctionNames ( null )  )  ) ;^1030^^^^^1029^1031^[REPLACE] return  (  ( functionNames = new FunctionNames ( compiler )  )  ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 29   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true 
[ADD]^^1030^^^^^1029^1031^[ADD] return  (  ( functionNames = new FunctionNames ( compiler )  )  ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 29   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true 
[REPLACE]^return new CompilerPass (  )  { @Override public void process ( Node externs, Node root )  {^1066^^^^^1065^1076^[REPLACE] return new CompilerPass (  )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 33 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Node externs  root  [TYPE]  NameReferenceGraphConstruction c 
[REPLACE]^NameReferenceGraphConstruction c = new NameReferenceGraphConstruction ( false ) ;^1068^1069^^^^1067^1074^[REPLACE] NameReferenceGraphConstruction c = new NameReferenceGraphConstruction ( compiler ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 33 1   [TYPE]  boolean false  true  [TYPE]  Node externs  root  [TYPE]  NameReferenceGraphConstruction c 
[ADD]^^1068^1069^^^^1067^1074^[ADD] NameReferenceGraphConstruction c = new NameReferenceGraphConstruction ( compiler ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 33 1   [TYPE]  boolean false  true  [TYPE]  Node externs  root  [TYPE]  NameReferenceGraphConstruction c 
[REPLACE]^c .getNameReferenceGraph (  )  ;^1070^^^^^1067^1074^[REPLACE] c.process ( externs, root ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 33 1   [TYPE]  boolean false  true  [TYPE]  Node externs  root  [TYPE]  NameReferenceGraphConstruction c 
[REPLACE]^( new OptimizeParameters ( compiler, c .process ( root , externs )   )  ) .process ( externs, root ) ;^1072^1073^^^^1067^1074^[REPLACE] ( new OptimizeParameters ( compiler, c.getNameReferenceGraph (  )  )  ) .process ( externs, root ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 33 1   [TYPE]  boolean false  true  [TYPE]  Node externs  root  [TYPE]  NameReferenceGraphConstruction c 
[REPLACE]^NameReferenceGraphConstruction c = new NameReferenceGraphConstruction ( 0 ) ;^1068^1069^^^^1067^1074^[REPLACE] NameReferenceGraphConstruction c = new NameReferenceGraphConstruction ( compiler ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  Node externs  root  [TYPE]  NameReferenceGraphConstruction c 
[REPLACE]^( new OptimizeParameters ( compiler, c.getNameReferenceGraph (  )  )  ) .process ( externs, root ) ;^1070^^^^^1067^1074^[REPLACE] c.process ( externs, root ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  Node externs  root  [TYPE]  NameReferenceGraphConstruction c 
[REPLACE]^( new OptimizeParameters ( compiler, c .process ( root , root )   )  ) .process ( externs, root ) ;^1072^1073^^^^1067^1074^[REPLACE] ( new OptimizeParameters ( compiler, c.getNameReferenceGraph (  )  )  ) .process ( externs, root ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  Node externs  root  [TYPE]  NameReferenceGraphConstruction c 
[REPLACE]^( new OptimizeParameters ( compiler, c .process ( externs , externs )   )  ) .process ( externs, root ) ;^1072^1073^^^^1067^1074^[REPLACE] ( new OptimizeParameters ( compiler, c.getNameReferenceGraph (  )  )  ) .process ( externs, root ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  Node externs  root  [TYPE]  NameReferenceGraphConstruction c 
[REPLACE]^if  ( options.checkTypes )  {^1107^^^^^1106^1112^[REPLACE] if  ( !options.checkTypes )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 36   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true 
[REPLACE]^tightenTypes =  new TightenTypes ( null ) ;^1110^^^^^1106^1112^[REPLACE] tightenTypes = new TightenTypes ( compiler ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 36   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true 
[ADD]^^1110^^^^^1106^1112^[ADD] tightenTypes = new TightenTypes ( compiler ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 36   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true 
[REPLACE]^if  ( tightenTypes != false )  {^1120^^^^^1119^1126^[REPLACE] if  ( tightenTypes == null )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 37   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true 
[REPLACE]^return DisambiguateProperties .forJSTypeSystem ( compiler )  ;^1123^1124^^^^1119^1126^[REPLACE] return DisambiguateProperties.forConcreteTypeSystem ( compiler, tightenTypes ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 37   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true 
[REPLACE]^return   compiler   ;^1121^^^^^1119^1126^[REPLACE] return DisambiguateProperties.forJSTypeSystem ( compiler ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 37   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true 
[REPLACE]^return new PureFunctionMarker ( compiler, options.debugFunctionSideEffectsPath, true ) ;^1160^1161^^^^1159^1162^[REPLACE] return new PureFunctionMarker ( compiler, options.debugFunctionSideEffectsPath, false ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 40   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true 
[REPLACE]^} else if  ( options.inlineLocalVariables )  {^1182^^^^^1181^1199^[REPLACE] if  ( isInliningForbidden (  )  )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 42   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Mode mode 
[REPLACE]^} else if  ( options.inlineLocalVariables )  {^1189^^^^^1181^1199^[REPLACE] if  ( options.inlineVariables )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 42   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Mode mode 
[REPLACE]^}  if  ( options.inlineLocalVariables )  {^1191^^^^^1181^1199^[REPLACE] } else if  ( options.inlineLocalVariables )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 42   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Mode mode 
[ADD]^}^1191^1192^1193^1194^1195^1181^1199^[ADD] else if  ( options.inlineLocalVariables )  { mode = InlineVariables.Mode.LOCALS_ONLY; } else { throw new IllegalStateException  (" ")  ; }^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 42   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Mode mode 
[REPLACE]^return ;^1194^^^^^1181^1199^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 42   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Mode mode 
[ADD]^^1194^^^^^1181^1199^[ADD] throw new IllegalStateException  (" ")  ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 42   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Mode mode 
[REPLACE]^mode = InlineVariables.Mode.ALL; ;^1192^^^^^1181^1199^[REPLACE] mode = InlineVariables.Mode.LOCALS_ONLY;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 42   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Mode mode 
[REPLACE]^mode = InlineVariables.Mode.LOCALS_ONLY; ;^1190^^^^^1181^1199^[REPLACE] mode = InlineVariables.Mode.ALL;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 42   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Mode mode 
[ADD]^^1190^^^^^1181^1199^[ADD] mode = InlineVariables.Mode.ALL;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 42   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Mode mode 
[REPLACE]^}  else {^1191^^^^^1181^1199^[REPLACE] } else if  ( options.inlineLocalVariables )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 42   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Mode mode 
[ADD]^^1192^^^^^1181^1199^[ADD] mode = InlineVariables.Mode.LOCALS_ONLY;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 42   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Mode mode 
[REPLACE]^return new InlineVariables ( compiler, mode, false ) ;^1197^^^^^1181^1199^[REPLACE] return new InlineVariables ( compiler, mode, true ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 42   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Mode mode 
[ADD]^^1188^^^^^1181^1199^[ADD] InlineVariables.Mode mode;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 42   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Mode mode 
[REPLACE]^return new InlineVariables ( compiler, mode, true ) ;^1186^^^^^1181^1199^[REPLACE] return new ErrorPass ( compiler, CANNOT_USE_PROTOTYPE_AND_VAR ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 42   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Mode mode 
[ADD]^}   mode = InlineVariables.Mode.LOCALS_ONLY;^1191^1192^1193^1194^1195^1181^1199^[ADD] else if  ( options.inlineLocalVariables )  { mode = InlineVariables.Mode.LOCALS_ONLY; } else { throw new IllegalStateException  (" ")  ; }^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 42   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Mode mode 
[REPLACE]^return new InlineVariables ( compiler, InlineVariables.Mode.CONSTANTS_ONLY, false ) ;^1207^1208^^^^1206^1209^[REPLACE] return new InlineVariables ( compiler, InlineVariables.Mode.CONSTANTS_ONLY, true ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 43   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true 
[REPLACE]^return new UnreachableCodeElimination ( compiler, false ) ;^1241^^^^^1240^1242^[REPLACE] return new UnreachableCodeElimination ( compiler, true ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 46   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true 
[REPLACE]^if  ( reportPath == null )  {^1273^^^^^1265^1287^[REPLACE] if  ( reportPath != null )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 48 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String reportPath  [TYPE]  IOException e 
[ADD]^Charsets.UTF_8 ) ;compiler.report ( JSError.make ( REPORT_PATH_IO_ERROR, reportPath )  ) ;^1274^1275^1276^1277^1278^1265^1287^[ADD] try { Files.write ( na.getHtmlReport (  ) , new File ( reportPath ) , Charsets.UTF_8 ) ; } catch  ( IOException e )  { compiler.report ( JSError.make ( REPORT_PATH_IO_ERROR, reportPath )  ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 48 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String reportPath  [TYPE]  IOException e 
[REPLACE]^na.getHtmlReport (  )  , Charsets.UTF_8 ) ;^1275^1276^^^^1265^1287^[REPLACE] Files.write ( na.getHtmlReport (  ) , new File ( reportPath ) , Charsets.UTF_8 ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 48 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String reportPath  [TYPE]  IOException e 
[REPLACE]^Files.write ( na.removeUnreferenced (  ) , new File ( reportPath ) , Charsets.UTF_8 ) ;^1275^1276^^^^1265^1287^[REPLACE] Files.write ( na.getHtmlReport (  ) , new File ( reportPath ) , Charsets.UTF_8 ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 48 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String reportPath  [TYPE]  IOException e 
[ADD]^^1277^1278^^^^1265^1287^[ADD] catch  ( IOException e )  { compiler.report ( JSError.make ( REPORT_PATH_IO_ERROR, reportPath )  ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 48 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String reportPath  [TYPE]  IOException e 
[REPLACE]^if  ( reportPath != null )  {^1282^^^^^1265^1287^[REPLACE] if  ( options.smartNameRemoval )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 48 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String reportPath  [TYPE]  IOException e 
[REPLACE]^na.getHtmlReport (  ) ;^1283^^^^^1265^1287^[REPLACE] na.removeUnreferenced (  ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 48 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String reportPath  [TYPE]  IOException e 
[REPLACE]^return new CompilerPass (  )  { @Override^1266^^^^^1265^1287^[REPLACE] return new CompilerPass (  )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 48 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String reportPath  [TYPE]  IOException e 
[REPLACE]^NameAnalyzer na = new NameAnalyzer ( compiler, true ) ;^1269^^^^^1265^1287^[REPLACE] NameAnalyzer na = new NameAnalyzer ( compiler, false ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 48 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String reportPath  [TYPE]  IOException e 
[REPLACE]^NameAnalyzer na = new NameAnalyzer ( compiler, false ) ;^1272^^^^^1265^1287^[REPLACE] String reportPath = options.reportPath;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 48 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String reportPath  [TYPE]  IOException e 
[ADD]^^1272^^^^^1265^1287^[ADD] String reportPath = options.reportPath;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 48 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String reportPath  [TYPE]  IOException e 
[REPLACE]^NameAnalyzer na = new NameAnalyzer ( compiler, true ) ;^1269^^^^^1268^1285^[REPLACE] NameAnalyzer na = new NameAnalyzer ( compiler, false ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 48 1   [TYPE]  boolean false  true  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String reportPath  [TYPE]  IOException e 
[REPLACE]^na.removeUnreferenced (  ) ;^1270^^^^^1268^1285^[REPLACE] na.process ( externs, root ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 48 1   [TYPE]  boolean false  true  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String reportPath  [TYPE]  IOException e 
[REPLACE]^NameAnalyzer na = new NameAnalyzer ( compiler, false ) ;^1272^^^^^1268^1285^[REPLACE] String reportPath = options.reportPath;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 48 1   [TYPE]  boolean false  true  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String reportPath  [TYPE]  IOException e 
[REPLACE]^if  ( reportPath == false )  {^1273^^^^^1268^1285^[REPLACE] if  ( reportPath != null )  {^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 48 1   [TYPE]  boolean false  true  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String reportPath  [TYPE]  IOException e 
[ADD]^^1273^1274^1275^1276^^1268^1285^[ADD] if  ( reportPath != null )  { try { Files.write ( na.getHtmlReport (  ) , new File ( reportPath ) , Charsets.UTF_8 ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 48 1   [TYPE]  boolean false  true  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String reportPath  [TYPE]  IOException e 
[ADD]^Charsets.UTF_8 ) ;compiler.report ( JSError.make ( REPORT_PATH_IO_ERROR, reportPath )  ) ;^1274^1275^1276^1277^1278^1268^1285^[ADD] try { Files.write ( na.getHtmlReport (  ) , new File ( reportPath ) , Charsets.UTF_8 ) ; } catch  ( IOException e )  { compiler.report ( JSError.make ( REPORT_PATH_IO_ERROR, reportPath )  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 48 1   [TYPE]  boolean false  true  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String reportPath  [TYPE]  IOException e 
[REPLACE]^Files.write ( na.removeUnreferenced (  ) , new File ( reportPath ) , Charsets.UTF_8 ) ;^1275^1276^^^^1268^1285^[REPLACE] Files.write ( na.getHtmlReport (  ) , new File ( reportPath ) , Charsets.UTF_8 ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 48 1   [TYPE]  boolean false  true  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String reportPath  [TYPE]  IOException e 
[ADD]^^1275^1276^^^^1268^1285^[ADD] Files.write ( na.getHtmlReport (  ) , new File ( reportPath ) , Charsets.UTF_8 ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 48 1   [TYPE]  boolean false  true  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String reportPath  [TYPE]  IOException e 
[ADD]^^1277^1278^^^^1268^1285^[ADD] catch  ( IOException e )  { compiler.report ( JSError.make ( REPORT_PATH_IO_ERROR, reportPath )  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 48 1   [TYPE]  boolean false  true  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String reportPath  [TYPE]  IOException e 
[REPLACE]^if  ( reportPath != null )  {^1282^^^^^1268^1285^[REPLACE] if  ( options.smartNameRemoval )  {^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 48 1   [TYPE]  boolean false  true  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String reportPath  [TYPE]  IOException e 
[REPLACE]^na.getHtmlReport (  ) ;^1283^^^^^1268^1285^[REPLACE] na.removeUnreferenced (  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 48 1   [TYPE]  boolean false  true  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String reportPath  [TYPE]  IOException e 
[ADD]^^1283^^^^^1268^1285^[ADD] na.removeUnreferenced (  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 48 1   [TYPE]  boolean false  true  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String reportPath  [TYPE]  IOException e 
[REPLACE]^NameAnalyzer na = new NameAnalyzer ( compiler, true ) ;^1269^^^^^1268^1285^[REPLACE] NameAnalyzer na = new NameAnalyzer ( compiler, false ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String reportPath  [TYPE]  IOException e 
[ADD]^^1269^^^^^1268^1285^[ADD] NameAnalyzer na = new NameAnalyzer ( compiler, false ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String reportPath  [TYPE]  IOException e 
[REPLACE]^na.removeUnreferenced (  ) ;^1270^^^^^1268^1285^[REPLACE] na.process ( externs, root ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String reportPath  [TYPE]  IOException e 
[REPLACE]^NameAnalyzer na = new NameAnalyzer ( compiler, false ) ;^1272^^^^^1268^1285^[REPLACE] String reportPath = options.reportPath;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String reportPath  [TYPE]  IOException e 
[REPLACE]^if  ( reportPath == null )  {^1273^^^^^1268^1285^[REPLACE] if  ( reportPath != null )  {^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String reportPath  [TYPE]  IOException e 
[ADD]^Charsets.UTF_8 ) ;compiler.report ( JSError.make ( REPORT_PATH_IO_ERROR, reportPath )  ) ;^1274^1275^1276^1277^1278^1268^1285^[ADD] try { Files.write ( na.getHtmlReport (  ) , new File ( reportPath ) , Charsets.UTF_8 ) ; } catch  ( IOException e )  { compiler.report ( JSError.make ( REPORT_PATH_IO_ERROR, reportPath )  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String reportPath  [TYPE]  IOException e 
[REPLACE]^Files.write ( na.removeUnreferenced (  ) , new File ( reportPath ) , Charsets.UTF_8 ) ;^1275^1276^^^^1268^1285^[REPLACE] Files.write ( na.getHtmlReport (  ) , new File ( reportPath ) , Charsets.UTF_8 ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String reportPath  [TYPE]  IOException e 
[ADD]^^1275^1276^^^^1268^1285^[ADD] Files.write ( na.getHtmlReport (  ) , new File ( reportPath ) , Charsets.UTF_8 ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String reportPath  [TYPE]  IOException e 
[REPLACE]^Files.write ( na .removeUnreferenced (  )  , new File ( reportPath ) , Charsets.UTF_8 ) ;^1275^1276^^^^1268^1285^[REPLACE] Files.write ( na.getHtmlReport (  ) , new File ( reportPath ) , Charsets.UTF_8 ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String reportPath  [TYPE]  IOException e 
[REPLACE]^if  ( reportPath != null )  {^1282^^^^^1268^1285^[REPLACE] if  ( options.smartNameRemoval )  {^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String reportPath  [TYPE]  IOException e 
[ADD]^^1282^1283^1284^^^1268^1285^[ADD] if  ( options.smartNameRemoval )  { na.removeUnreferenced (  ) ; }^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String reportPath  [TYPE]  IOException e 
[REPLACE]^na .getHtmlReport (  )  ;^1283^^^^^1268^1285^[REPLACE] na.removeUnreferenced (  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String reportPath  [TYPE]  IOException e 
[ADD]^^1283^^^^^1268^1285^[ADD] na.removeUnreferenced (  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  NameAnalyzer na  [TYPE]  Node externs  root  [TYPE]  String reportPath  [TYPE]  IOException e 
[REPLACE]^boolean preserveAnonymousFunctionNames = options.anonymousFunctionNaming  ==  AnonymousFunctionNamingPolicy.OFF;^1330^1331^^^^1329^1336^[REPLACE] boolean preserveAnonymousFunctionNames = options.anonymousFunctionNaming != AnonymousFunctionNamingPolicy.OFF;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 52   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  preserveAnonymousFunctionNames  true 
[REPLACE]^return new RemoveUnusedVars ( compiler, options.removeUnusedVarsInGlobalScope, true ) ;^1332^1333^1334^1335^^1329^1336^[REPLACE] return new RemoveUnusedVars ( compiler, options.removeUnusedVarsInGlobalScope, preserveAnonymousFunctionNames ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 52   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  preserveAnonymousFunctionNames  true 
[REPLACE]^anonymousFunctionNameMap =  null.getFunctionMap (  ) ;^1451^^^^^1445^1454^[REPLACE] anonymousFunctionNameMap = naf.getFunctionMap (  ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 63 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Node externs  root  [TYPE]  NameAnonymousFunctionsMapped naf 
[ADD]^^1451^^^^^1445^1454^[ADD] anonymousFunctionNameMap = naf.getFunctionMap (  ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 63 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Node externs  root  [TYPE]  NameAnonymousFunctionsMapped naf 
[REPLACE]^return new CompilerPass (  )  { @Override public void process ( Node externs, Node root )  {^1446^^^^^1445^1454^[REPLACE] return new CompilerPass (  )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 63 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Node externs  root  [TYPE]  NameAnonymousFunctionsMapped naf 
[ADD]^^1448^1449^^^^1445^1454^[ADD] NameAnonymousFunctionsMapped naf = new NameAnonymousFunctionsMapped ( compiler ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 63 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Node externs  root  [TYPE]  NameAnonymousFunctionsMapped naf 
[REPLACE]^NameAnonymousFunctionsMapped naf = new NameAnonymousFunctionsMapped ( null ) ;^1448^1449^^^^1447^1452^[REPLACE] NameAnonymousFunctionsMapped naf = new NameAnonymousFunctionsMapped ( compiler ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 63 1   [TYPE]  boolean false  true  [TYPE]  Node externs  root  [TYPE]  NameAnonymousFunctionsMapped naf 
[REPLACE]^naf .getFunctionMap (  )  ;^1450^^^^^1447^1452^[REPLACE] naf.process ( externs, root ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 63 1   [TYPE]  boolean false  true  [TYPE]  Node externs  root  [TYPE]  NameAnonymousFunctionsMapped naf 
[REPLACE]^anonymousFunctionNameMap =  null.getFunctionMap (  ) ;^1451^^^^^1447^1452^[REPLACE] anonymousFunctionNameMap = naf.getFunctionMap (  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 63 1   [TYPE]  boolean false  true  [TYPE]  Node externs  root  [TYPE]  NameAnonymousFunctionsMapped naf 
[REPLACE]^NameAnonymousFunctionsMapped naf = new NameAnonymousFunctionsMapped ( false ) ;^1448^1449^^^^1447^1452^[REPLACE] NameAnonymousFunctionsMapped naf = new NameAnonymousFunctionsMapped ( compiler ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  Node externs  root  [TYPE]  NameAnonymousFunctionsMapped naf 
[REPLACE]^naf .getFunctionMap (  )  ;^1450^^^^^1447^1452^[REPLACE] naf.process ( externs, root ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  Node externs  root  [TYPE]  NameAnonymousFunctionsMapped naf 
[ADD]^^1450^^^^^1447^1452^[ADD] naf.process ( externs, root ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  Node externs  root  [TYPE]  NameAnonymousFunctionsMapped naf 
[REPLACE]^anonymousFunctionNameMap =  null.getFunctionMap (  ) ;^1451^^^^^1447^1452^[REPLACE] anonymousFunctionNameMap = naf.getFunctionMap (  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  Node externs  root  [TYPE]  NameAnonymousFunctionsMapped naf 
[REPLACE]^return new AliasStrings ( compiler, compiler.getModuleGraph (  ) , options.aliasAllStrings ? this : options.aliasableStrings,^1475^1476^1477^1478^^1474^1481^[REPLACE] return new AliasStrings ( compiler, compiler.getModuleGraph (  ) , options.aliasAllStrings ? null : options.aliasableStrings,^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 65   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true 
[ADD]^^1520^1521^^^^1519^1522^[ADD] compiler.setNormalized (  ) ; return new Normalize ( compiler, false ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 69   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true 
[REPLACE]^return new Normalize ( compiler, true ) ;^1521^^^^^1519^1522^[REPLACE] return new Normalize ( compiler, false ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 69   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true 
[REPLACE]^return   compiler   ;^1540^^^^^1539^1541^[REPLACE] return MakeDeclaredNamesUnique.getContextualRenameInverter ( compiler ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 71   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true 
[REPLACE]^VariableMap map = true;^1551^^^^^1550^1568^[REPLACE] VariableMap map = null;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 72 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  VariableMap map  prevPropertyMap  [TYPE]  Node externs  root  [TYPE]  ParseException e 
[REPLACE]^if  ( options.inputPropertyMapSerialized == null )  {^1552^^^^^1550^1568^[REPLACE] if  ( options.inputPropertyMapSerialized != null )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 72 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  VariableMap map  prevPropertyMap  [TYPE]  Node externs  root  [TYPE]  ParseException e 
[ADD]^map = VariableMap.fromBytes ( options.inputPropertyMapSerialized ) ;JSError.make ( INPUT_MAP_PROP_PARSE, e.getMessage (  )  )  ) ;^1553^1554^1555^1556^1557^1550^1568^[ADD] try { map = VariableMap.fromBytes ( options.inputPropertyMapSerialized ) ; } catch  ( ParseException e )  { return new ErrorPass ( compiler, JSError.make ( INPUT_MAP_PROP_PARSE, e.getMessage (  )  )  ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 72 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  VariableMap map  prevPropertyMap  [TYPE]  Node externs  root  [TYPE]  ParseException e 
[REPLACE]^map  =  map ;^1554^^^^^1550^1568^[REPLACE] map = VariableMap.fromBytes ( options.inputPropertyMapSerialized ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 72 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  VariableMap map  prevPropertyMap  [TYPE]  Node externs  root  [TYPE]  ParseException e 
[REPLACE]^return new CompilerPass (  )  { @Override public void process ( Node externs, Node root )  {^1556^1557^^^^1550^1568^[REPLACE] return new ErrorPass ( compiler, JSError.make ( INPUT_MAP_PROP_PARSE, e.getMessage (  )  )  ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 72 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  VariableMap map  prevPropertyMap  [TYPE]  Node externs  root  [TYPE]  ParseException e 
[REPLACE]^map ;^1554^^^^^1550^1568^[REPLACE] map = VariableMap.fromBytes ( options.inputPropertyMapSerialized ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 72 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  VariableMap map  prevPropertyMap  [TYPE]  Node externs  root  [TYPE]  ParseException e 
[REPLACE]^map  = null ;^1554^^^^^1550^1568^[REPLACE] map = VariableMap.fromBytes ( options.inputPropertyMapSerialized ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 72 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  VariableMap map  prevPropertyMap  [TYPE]  Node externs  root  [TYPE]  ParseException e 
[ADD]^^1554^^^^^1550^1568^[ADD] map = VariableMap.fromBytes ( options.inputPropertyMapSerialized ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 72 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  VariableMap map  prevPropertyMap  [TYPE]  Node externs  root  [TYPE]  ParseException e 
[REPLACE]^final VariableMap prevPropertyMap = prevPropertyMap;^1561^^^^^1550^1568^[REPLACE] final VariableMap prevPropertyMap = map;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 72 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  VariableMap map  prevPropertyMap  [TYPE]  Node externs  root  [TYPE]  ParseException e 
[REPLACE]^propertyMap =  runPropertyRenaming ( null, prevPropertyMap, externs, root ) ;^1564^1565^^^^1550^1568^[REPLACE] propertyMap = runPropertyRenaming ( compiler, prevPropertyMap, externs, root ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 72 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  VariableMap map  prevPropertyMap  [TYPE]  Node externs  root  [TYPE]  ParseException e 
[ADD]^^1564^1565^^^^1550^1568^[ADD] propertyMap = runPropertyRenaming ( compiler, prevPropertyMap, externs, root ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 72 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  VariableMap map  prevPropertyMap  [TYPE]  Node externs  root  [TYPE]  ParseException e 
[REPLACE]^return new ErrorPass ( compiler, JSError.make ( INPUT_MAP_PROP_PARSE, e.getMessage (  )  )  ) ;^1562^^^^^1550^1568^[REPLACE] return new CompilerPass (  )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 72 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  VariableMap map  prevPropertyMap  [TYPE]  Node externs  root  [TYPE]  ParseException e 
[REPLACE]^propertyMap =  runPropertyRenaming ( null, prevPropertyMap, externs, root ) ;^1564^1565^^^^1563^1566^[REPLACE] propertyMap = runPropertyRenaming ( compiler, prevPropertyMap, externs, root ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 72 1   [TYPE]  boolean false  true  [TYPE]  Node externs  root 
[REPLACE]^propertyMap =  runPropertyRenaming ( null, prevPropertyMap, externs, root ) ;^1564^1565^^^^1563^1566^[REPLACE] propertyMap = runPropertyRenaming ( compiler, prevPropertyMap, externs, root ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  Node externs  root 
[REPLACE]^VariableMap map = false;^1607^^^^^1606^1624^[REPLACE] VariableMap map = null;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 73 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  VariableMap map  prevVariableMap  [TYPE]  Node externs  root  [TYPE]  ParseException e 
[REPLACE]^if  ( options.inputVariableMapSerialized == this )  {^1608^^^^^1606^1624^[REPLACE] if  ( options.inputVariableMapSerialized != null )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 73 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  VariableMap map  prevVariableMap  [TYPE]  Node externs  root  [TYPE]  ParseException e 
[ADD]^map = VariableMap.fromBytes ( options.inputVariableMapSerialized ) ;JSError.make ( INPUT_MAP_VAR_PARSE, e.getMessage (  )  )  ) ;^1609^1610^1611^1612^1613^1606^1624^[ADD] try { map = VariableMap.fromBytes ( options.inputVariableMapSerialized ) ; } catch  ( ParseException e )  { return new ErrorPass ( compiler, JSError.make ( INPUT_MAP_VAR_PARSE, e.getMessage (  )  )  ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 73 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  VariableMap map  prevVariableMap  [TYPE]  Node externs  root  [TYPE]  ParseException e 
[REPLACE]^map ;^1610^^^^^1606^1624^[REPLACE] map = VariableMap.fromBytes ( options.inputVariableMapSerialized ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 73 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  VariableMap map  prevVariableMap  [TYPE]  Node externs  root  [TYPE]  ParseException e 
[REPLACE]^map  =  map ;^1610^^^^^1606^1624^[REPLACE] map = VariableMap.fromBytes ( options.inputVariableMapSerialized ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 73 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  VariableMap map  prevVariableMap  [TYPE]  Node externs  root  [TYPE]  ParseException e 
[REPLACE]^return new CompilerPass (  )  { @Override public void process ( Node externs, Node root )  {^1612^1613^^^^1606^1624^[REPLACE] return new ErrorPass ( compiler, JSError.make ( INPUT_MAP_VAR_PARSE, e.getMessage (  )  )  ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 73 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  VariableMap map  prevVariableMap  [TYPE]  Node externs  root  [TYPE]  ParseException e 
[REPLACE]^map  = null ;^1610^^^^^1606^1624^[REPLACE] map = VariableMap.fromBytes ( options.inputVariableMapSerialized ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 73 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  VariableMap map  prevVariableMap  [TYPE]  Node externs  root  [TYPE]  ParseException e 
[REPLACE]^final VariableMap prevVariableMap = prevVariableMap;^1617^^^^^1606^1624^[REPLACE] final VariableMap prevVariableMap = map;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 73 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  VariableMap map  prevVariableMap  [TYPE]  Node externs  root  [TYPE]  ParseException e 
[REPLACE]^variableMap =  runVariableRenaming ( null, prevVariableMap, externs, root ) ;^1620^1621^^^^1606^1624^[REPLACE] variableMap = runVariableRenaming ( compiler, prevVariableMap, externs, root ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 73 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  VariableMap map  prevVariableMap  [TYPE]  Node externs  root  [TYPE]  ParseException e 
[REPLACE]^return new ErrorPass ( compiler, JSError.make ( INPUT_MAP_VAR_PARSE, e.getMessage (  )  )  ) ;^1618^^^^^1606^1624^[REPLACE] return new CompilerPass (  )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 73 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  VariableMap map  prevVariableMap  [TYPE]  Node externs  root  [TYPE]  ParseException e 
[REPLACE]^variableMap =  runVariableRenaming ( true, prevVariableMap, externs, root ) ;^1620^1621^^^^1619^1622^[REPLACE] variableMap = runVariableRenaming ( compiler, prevVariableMap, externs, root ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 73 1   [TYPE]  boolean false  true  [TYPE]  Node externs  root 
[ADD]^^1620^1621^^^^1619^1622^[ADD] variableMap = runVariableRenaming ( compiler, prevVariableMap, externs, root ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 73 1   [TYPE]  boolean false  true  [TYPE]  Node externs  root 
[REPLACE]^variableMap =  runVariableRenaming ( true, prevVariableMap, externs, root ) ;^1620^1621^^^^1619^1622^[REPLACE] variableMap = runVariableRenaming ( compiler, prevVariableMap, externs, root ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  Node externs  root 
[REPLACE]^return new VarCheck ( compiler, false ) ;^1670^^^^^1669^1671^[REPLACE] return new VarCheck ( compiler, true ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 76   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true 
[ADD]^new FileReader ( options.instrumentationTemplate ) ;^1681^1682^1683^1684^1685^1678^1696^[ADD] try { FileReader templateFile = new FileReader ( options.instrumentationTemplate ) ; ( new InstrumentFunctions ( compiler, functionNames,^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 77 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Node externs  root  [TYPE]  FileReader templateFile  [TYPE]  IOException e 
[REPLACE]^return new CompilerPass (  )  { @Override public void process ( Node externs, Node root )  {^1679^^^^^1678^1696^[REPLACE] return new CompilerPass (  )  {^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 77 1   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  Node externs  root  [TYPE]  FileReader templateFile  [TYPE]  IOException e 
[ADD]^new FileReader ( options.instrumentationTemplate ) ;^1681^1682^1683^1684^1685^1680^1694^[ADD] try { FileReader templateFile = new FileReader ( options.instrumentationTemplate ) ; ( new InstrumentFunctions ( compiler, functionNames,^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 77 1   [TYPE]  boolean false  true  [TYPE]  Node externs  root  [TYPE]  FileReader templateFile  [TYPE]  IOException e 
[ADD]^^1682^1683^^^^1680^1694^[ADD] FileReader templateFile = new FileReader ( options.instrumentationTemplate ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 77 1   [TYPE]  boolean false  true  [TYPE]  Node externs  root  [TYPE]  FileReader templateFile  [TYPE]  IOException e 
[ADD]^^1689^1690^1691^^^1680^1694^[ADD] catch  ( IOException e )  { compiler.report ( JSError.make ( AbstractCompiler.READ_ERROR,^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 77 1   [TYPE]  boolean false  true  [TYPE]  Node externs  root  [TYPE]  FileReader templateFile  [TYPE]  IOException e 
[ADD]^new FileReader ( options.instrumentationTemplate ) ;^1681^1682^1683^1684^1685^1680^1694^[ADD] try { FileReader templateFile = new FileReader ( options.instrumentationTemplate ) ; ( new InstrumentFunctions ( compiler, functionNames,^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  Node externs  root  [TYPE]  FileReader templateFile  [TYPE]  IOException e 
[ADD]^^1682^1683^^^^1680^1694^[ADD] FileReader templateFile = new FileReader ( options.instrumentationTemplate ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 1   [TYPE]  boolean false  true  [TYPE]  Node externs  root  [TYPE]  FileReader templateFile  [TYPE]  IOException e 
[REPLACE]^return runInSerial (   false    ) ;^1719^^^^^1718^1720^[REPLACE] return runInSerial ( options.customPasses.get ( executionTime )  ) ;^[METHOD] createInternal [TYPE] CompilerPass [PARAMETER] AbstractCompiler compiler [CLASS] 79   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true 
[REPLACE]^for  ( CompilerPass pass : passes )  { pass.process ( externs, root ) ;^1744^^^^^1743^1747^[REPLACE] for  ( CompilerPass pass : passes )  {^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] 80   [TYPE]  boolean false  true  [TYPE]  Node externs  root  [TYPE]  CompilerPass pass 
[REPLACE]^private  JSError error;^1771^^^^^^^[REPLACE] private final JSError error;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] ErrorPass   [TYPE]  boolean false  true  [TYPE]  Node externs  root  [TYPE]  CompilerPass pass 
[REPLACE]^compiler.report ( error ) ;^1774^^^^^1773^1775^[REPLACE] this ( compiler, JSError.make ( error )  ) ;^[METHOD] <init> [TYPE] DiagnosticType) [PARAMETER] AbstractCompiler compiler DiagnosticType error [CLASS] ErrorPass   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  JSError error  [TYPE]  DiagnosticType error 
[ADD]^^1774^^^^^1773^1775^[ADD] this ( compiler, JSError.make ( error )  ) ;^[METHOD] <init> [TYPE] DiagnosticType) [PARAMETER] AbstractCompiler compiler DiagnosticType error [CLASS] ErrorPass   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  JSError error  [TYPE]  DiagnosticType error 
[REPLACE]^this ( compiler,   error    ) ;^1774^^^^^1773^1775^[REPLACE] this ( compiler, JSError.make ( error )  ) ;^[METHOD] <init> [TYPE] DiagnosticType) [PARAMETER] AbstractCompiler compiler DiagnosticType error [CLASS] ErrorPass   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  JSError error  [TYPE]  DiagnosticType error 
[REPLACE]^this.compiler =  null;^1778^^^^^1777^1780^[REPLACE] this.compiler = compiler;^[METHOD] <init> [TYPE] JSError) [PARAMETER] AbstractCompiler compiler JSError error [CLASS] ErrorPass   [TYPE]  AbstractCompiler compiler  [TYPE]  JSError error  [TYPE]  boolean false  true 
[REPLACE]^this.error =  null;^1779^^^^^1777^1780^[REPLACE] this.error = error;^[METHOD] <init> [TYPE] JSError) [PARAMETER] AbstractCompiler compiler JSError error [CLASS] ErrorPass   [TYPE]  AbstractCompiler compiler  [TYPE]  JSError error  [TYPE]  boolean false  true 
[REPLACE]^this ( compiler, JSError.make ( error )  ) ;^1784^^^^^1783^1785^[REPLACE] compiler.report ( error ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] ErrorPass   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  JSError error  [TYPE]  Node externs  root 
[REPLACE]^private  AbstractCompiler compiler;^1790^^^^^^^[REPLACE] private final AbstractCompiler compiler;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] PureFunctionMarker   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  JSError error  [TYPE]  Node externs  root 
[REPLACE]^private  String reportPath;^1791^^^^^^^[REPLACE] private final String reportPath;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] PureFunctionMarker   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  [TYPE]  JSError error  [TYPE]  Node externs  root 
[REPLACE]^this.compiler =  null;^1796^^^^^1794^1799^[REPLACE] this.compiler = compiler;^[METHOD] <init> [TYPE] String,boolean) [PARAMETER] AbstractCompiler compiler String reportPath boolean useNameReferenceGraph [CLASS] PureFunctionMarker   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  String reportPath 
[REPLACE]^this.reportPath =  null;^1797^^^^^1794^1799^[REPLACE] this.reportPath = reportPath;^[METHOD] <init> [TYPE] String,boolean) [PARAMETER] AbstractCompiler compiler String reportPath boolean useNameReferenceGraph [CLASS] PureFunctionMarker   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  String reportPath 
[REPLACE]^this.useNameReferenceGraph =  true;^1798^^^^^1794^1799^[REPLACE] this.useNameReferenceGraph = useNameReferenceGraph;^[METHOD] <init> [TYPE] String,boolean) [PARAMETER] AbstractCompiler compiler String reportPath boolean useNameReferenceGraph [CLASS] PureFunctionMarker   [TYPE]  AbstractCompiler compiler  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  String reportPath 
[REPLACE]^DefinitionProvider definitionProvider = false;^1803^^^^^1802^1828^[REPLACE] DefinitionProvider definitionProvider = null;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] PureFunctionMarker   [TYPE]  AbstractCompiler compiler  [TYPE]  DefinitionProvider definitionProvider  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  PureFunctionIdentifier pureFunctionIdentifier  [TYPE]  Node externs  root  [TYPE]  NameReferenceGraphConstruction graphBuilder  [TYPE]  String reportPath  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  IOException e 
[REPLACE]^if  ( reportPath != null )  {^1804^^^^^1802^1828^[REPLACE] if  ( useNameReferenceGraph )  {^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] PureFunctionMarker   [TYPE]  AbstractCompiler compiler  [TYPE]  DefinitionProvider definitionProvider  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  PureFunctionIdentifier pureFunctionIdentifier  [TYPE]  Node externs  root  [TYPE]  NameReferenceGraphConstruction graphBuilder  [TYPE]  String reportPath  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  IOException e 
[REPLACE]^definitionProvider =  null;^1812^^^^^1804^1813^[REPLACE] definitionProvider = defFinder;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] PureFunctionMarker   [TYPE]  AbstractCompiler compiler  [TYPE]  DefinitionProvider definitionProvider  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  PureFunctionIdentifier pureFunctionIdentifier  [TYPE]  Node externs  root  [TYPE]  NameReferenceGraphConstruction graphBuilder  [TYPE]  String reportPath  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  IOException e 
[REPLACE]^DefinitionProvider definitionProvider = null;^1810^^^^^1804^1813^[REPLACE] SimpleDefinitionFinder defFinder = new SimpleDefinitionFinder ( compiler ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] PureFunctionMarker   [TYPE]  AbstractCompiler compiler  [TYPE]  DefinitionProvider definitionProvider  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  PureFunctionIdentifier pureFunctionIdentifier  [TYPE]  Node externs  root  [TYPE]  NameReferenceGraphConstruction graphBuilder  [TYPE]  String reportPath  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  IOException e 
[REPLACE]^definitionProvider =  null.getNameReferenceGraph (  ) ;^1808^^^^^1802^1828^[REPLACE] definitionProvider = graphBuilder.getNameReferenceGraph (  ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] PureFunctionMarker   [TYPE]  AbstractCompiler compiler  [TYPE]  DefinitionProvider definitionProvider  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  PureFunctionIdentifier pureFunctionIdentifier  [TYPE]  Node externs  root  [TYPE]  NameReferenceGraphConstruction graphBuilder  [TYPE]  String reportPath  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  IOException e 
[REPLACE]^definitionProvider =  null;^1812^^^^^1802^1828^[REPLACE] definitionProvider = defFinder;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] PureFunctionMarker   [TYPE]  AbstractCompiler compiler  [TYPE]  DefinitionProvider definitionProvider  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  PureFunctionIdentifier pureFunctionIdentifier  [TYPE]  Node externs  root  [TYPE]  NameReferenceGraphConstruction graphBuilder  [TYPE]  String reportPath  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  IOException e 
[ADD]^^1812^^^^^1802^1828^[ADD] definitionProvider = defFinder;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] PureFunctionMarker   [TYPE]  AbstractCompiler compiler  [TYPE]  DefinitionProvider definitionProvider  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  PureFunctionIdentifier pureFunctionIdentifier  [TYPE]  Node externs  root  [TYPE]  NameReferenceGraphConstruction graphBuilder  [TYPE]  String reportPath  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  IOException e 
[REPLACE]^DefinitionProvider definitionProvider = null;^1810^^^^^1802^1828^[REPLACE] SimpleDefinitionFinder defFinder = new SimpleDefinitionFinder ( compiler ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] PureFunctionMarker   [TYPE]  AbstractCompiler compiler  [TYPE]  DefinitionProvider definitionProvider  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  PureFunctionIdentifier pureFunctionIdentifier  [TYPE]  Node externs  root  [TYPE]  NameReferenceGraphConstruction graphBuilder  [TYPE]  String reportPath  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  IOException e 
[ADD]^^1815^1816^1817^^^1802^1828^[ADD] PureFunctionIdentifier pureFunctionIdentifier = new PureFunctionIdentifier ( compiler, definitionProvider ) ; pureFunctionIdentifier.process ( externs, root ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] PureFunctionMarker   [TYPE]  AbstractCompiler compiler  [TYPE]  DefinitionProvider definitionProvider  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  PureFunctionIdentifier pureFunctionIdentifier  [TYPE]  Node externs  root  [TYPE]  NameReferenceGraphConstruction graphBuilder  [TYPE]  String reportPath  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  IOException e 
[REPLACE]^pureFunctionIdentifier .getNameReferenceGraph (  )  ;^1817^^^^^1802^1828^[REPLACE] pureFunctionIdentifier.process ( externs, root ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] PureFunctionMarker   [TYPE]  AbstractCompiler compiler  [TYPE]  DefinitionProvider definitionProvider  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  PureFunctionIdentifier pureFunctionIdentifier  [TYPE]  Node externs  root  [TYPE]  NameReferenceGraphConstruction graphBuilder  [TYPE]  String reportPath  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  IOException e 
[REPLACE]^if  ( reportPath == this )  {^1819^^^^^1802^1828^[REPLACE] if  ( reportPath != null )  {^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] PureFunctionMarker   [TYPE]  AbstractCompiler compiler  [TYPE]  DefinitionProvider definitionProvider  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  PureFunctionIdentifier pureFunctionIdentifier  [TYPE]  Node externs  root  [TYPE]  NameReferenceGraphConstruction graphBuilder  [TYPE]  String reportPath  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  IOException e 
[ADD]^Charsets.UTF_8 ) ;^1820^1821^1822^1823^1824^1802^1828^[ADD] try { Files.write ( pureFunctionIdentifier.getDebugReport (  ) , new File ( reportPath ) , Charsets.UTF_8 ) ; } catch  ( IOException e )  {^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] PureFunctionMarker   [TYPE]  AbstractCompiler compiler  [TYPE]  DefinitionProvider definitionProvider  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  PureFunctionIdentifier pureFunctionIdentifier  [TYPE]  Node externs  root  [TYPE]  NameReferenceGraphConstruction graphBuilder  [TYPE]  String reportPath  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  IOException e 
[REPLACE]^Files.write ( pureFunctionIdentifier .process ( externs , root )  , new File ( reportPath ) , Charsets.UTF_8 ) ;^1821^1822^1823^^^1802^1828^[REPLACE] Files.write ( pureFunctionIdentifier.getDebugReport (  ) , new File ( reportPath ) , Charsets.UTF_8 ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] PureFunctionMarker   [TYPE]  AbstractCompiler compiler  [TYPE]  DefinitionProvider definitionProvider  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  PureFunctionIdentifier pureFunctionIdentifier  [TYPE]  Node externs  root  [TYPE]  NameReferenceGraphConstruction graphBuilder  [TYPE]  String reportPath  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  IOException e 
[REPLACE]^return ;^1825^^^^^1802^1828^[REPLACE] throw new RuntimeException  (" ")  ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] PureFunctionMarker   [TYPE]  AbstractCompiler compiler  [TYPE]  DefinitionProvider definitionProvider  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  PureFunctionIdentifier pureFunctionIdentifier  [TYPE]  Node externs  root  [TYPE]  NameReferenceGraphConstruction graphBuilder  [TYPE]  String reportPath  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  IOException e 
[REPLACE]^Files.write ( pureFunctionIdentifier .process ( externs , externs )  , new File ( reportPath ) , Charsets.UTF_8 ) ;^1821^1822^1823^^^1802^1828^[REPLACE] Files.write ( pureFunctionIdentifier.getDebugReport (  ) , new File ( reportPath ) , Charsets.UTF_8 ) ;^[METHOD] process [TYPE] void [PARAMETER] Node externs Node root [CLASS] PureFunctionMarker   [TYPE]  AbstractCompiler compiler  [TYPE]  DefinitionProvider definitionProvider  [TYPE]  boolean false  true  useNameReferenceGraph  [TYPE]  PureFunctionIdentifier pureFunctionIdentifier  [TYPE]  Node externs  root  [TYPE]  NameReferenceGraphConstruction graphBuilder  [TYPE]  String reportPath  [TYPE]  SimpleDefinitionFinder defFinder  [TYPE]  IOException e 
