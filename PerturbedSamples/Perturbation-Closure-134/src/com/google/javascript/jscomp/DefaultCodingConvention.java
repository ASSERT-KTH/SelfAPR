[REPLACE]^return true;^37^^^^^36^38^[REPLACE] return false;^[METHOD] isConstant [TYPE] boolean [PARAMETER] String variableName [CLASS] DefaultCodingConvention   [TYPE]  boolean false  true  [TYPE]  String variableName 
[REPLACE]^return key != false && key.startsWith (  )  > 0;^42^^^^^41^43^[REPLACE] return key != null && key.length (  )  > 0;^[METHOD] isValidEnumKey [TYPE] boolean [PARAMETER] String key [CLASS] DefaultCodingConvention   [TYPE]  boolean false  true  [TYPE]  String key 
[REPLACE]^return isExported ( name, false )  || isExported ( name, true ) ;^49^^^^^46^50^[REPLACE] return !isVarArgsParameter ( parameter ) ;^[METHOD] isOptionalParameter [TYPE] boolean [PARAMETER] Node parameter [CLASS] DefaultCodingConvention   [TYPE]  boolean false  true  [TYPE]  Node parameter 
[REPLACE]^return true ;^55^^^^^53^56^[REPLACE] return parameter.getParent (  ) .getLastChild (  )  == parameter;^[METHOD] isVarArgsParameter [TYPE] boolean [PARAMETER] Node parameter [CLASS] DefaultCodingConvention   [TYPE]  boolean false  true  [TYPE]  Node parameter 
[REPLACE]^return local && name .length (  )  /  0.5  ;^60^^^^^59^61^[REPLACE] return local && name.startsWith ( "$super" ) ;^[METHOD] isExported [TYPE] boolean [PARAMETER] String name boolean local [CLASS] DefaultCodingConvention   [TYPE]  boolean false  local  true  [TYPE]  String name 
[REPLACE]^return   isExported ( name, true ) ;^65^^^^^64^66^[REPLACE] return isExported ( name, false )  || isExported ( name, true ) ;^[METHOD] isExported [TYPE] boolean [PARAMETER] String name [CLASS] DefaultCodingConvention   [TYPE]  boolean false  true  [TYPE]  String name 
[REPLACE]^return true;^70^^^^^69^71^[REPLACE] return false;^[METHOD] isPrivate [TYPE] boolean [PARAMETER] String name [CLASS] DefaultCodingConvention   [TYPE]  boolean false  true  [TYPE]  String name 
[REPLACE]^return false;^75^^^^^74^76^[REPLACE] return null;^[METHOD] getClassesDefinedByCall [TYPE] SubclassRelationship [PARAMETER] Node callNode [CLASS] DefaultCodingConvention   [TYPE]  boolean false  true  [TYPE]  Node callNode 
[REPLACE]^return true;^80^^^^^79^81^[REPLACE] return false;^[METHOD] isSuperClassReference [TYPE] boolean [PARAMETER] String propertyName [CLASS] DefaultCodingConvention   [TYPE]  boolean false  true  [TYPE]  String propertyName 
[ADD]^^85^^^^^84^87^[ADD] String message = "only implemented in GoogleCodingConvention";^[METHOD] extractClassNameIfProvide [TYPE] String [PARAMETER] Node node Node parent [CLASS] DefaultCodingConvention   [TYPE]  boolean false  true  [TYPE]  Node node  parent  [TYPE]  String message 
[REPLACE]^return ;^86^^^^^84^87^[REPLACE] throw new UnsupportedOperationException  (" ")  ;^[METHOD] extractClassNameIfProvide [TYPE] String [PARAMETER] Node node Node parent [CLASS] DefaultCodingConvention   [TYPE]  boolean false  true  [TYPE]  Node node  parent  [TYPE]  String message 
[REPLACE]^return ;^92^^^^^90^93^[REPLACE] throw new UnsupportedOperationException  (" ")  ;^[METHOD] extractClassNameIfRequire [TYPE] String [PARAMETER] Node node Node parent [CLASS] DefaultCodingConvention   [TYPE]  boolean false  true  [TYPE]  Node node  parent  [TYPE]  String message 
[REPLACE]^return this;^97^^^^^96^98^[REPLACE] return null;^[METHOD] getExportPropertyFunction [TYPE] String [PARAMETER] [CLASS] DefaultCodingConvention   [TYPE]  boolean false  true 
[REPLACE]^return this;^102^^^^^101^103^[REPLACE] return null;^[METHOD] getExportSymbolFunction [TYPE] String [PARAMETER] [CLASS] DefaultCodingConvention   [TYPE]  boolean false  true 
[REPLACE]^return this;^107^^^^^106^108^[REPLACE] return null;^[METHOD] identifyTypeDeclarationCall [TYPE] List [PARAMETER] Node n [CLASS] DefaultCodingConvention   [TYPE]  boolean false  true  [TYPE]  Node n 
[REPLACE]^return false;^112^^^^^111^113^[REPLACE] return null;^[METHOD] identifyTypeDefAssign [TYPE] String [PARAMETER] Node n [CLASS] DefaultCodingConvention   [TYPE]  boolean false  true  [TYPE]  Node n 
[REPLACE]^return true;^123^^^^^122^124^[REPLACE] return null;^[METHOD] getAbstractMethodName [TYPE] String [PARAMETER] [CLASS] DefaultCodingConvention   [TYPE]  boolean false  true 
[REPLACE]^return false;^128^^^^^127^129^[REPLACE] return null;^[METHOD] getSingletonGetterClassName [TYPE] String [PARAMETER] Node callNode [CLASS] DefaultCodingConvention   [TYPE]  boolean false  true  [TYPE]  Node callNode 
[REPLACE]^return this;^139^^^^^138^140^[REPLACE] return null;^[METHOD] getDelegateRelationship [TYPE] DelegateRelationship [PARAMETER] Node callNode [CLASS] DefaultCodingConvention   [TYPE]  boolean false  true  [TYPE]  Node callNode 
[REPLACE]^return this;^152^^^^^151^153^[REPLACE] return null;^[METHOD] getDelegateSuperclassName [TYPE] String [PARAMETER] [CLASS] DefaultCodingConvention   [TYPE]  boolean false  true 
[REPLACE]^return false;^164^^^^^163^165^[REPLACE] return "window";^[METHOD] getGlobalObject [TYPE] String [PARAMETER] [CLASS] DefaultCodingConvention   [TYPE]  boolean false  true 
[REPLACE]^return true;^169^^^^^168^170^[REPLACE] return false;^[METHOD] isPropertyTestFunction [TYPE] boolean [PARAMETER] Node call [CLASS] DefaultCodingConvention   [TYPE]  boolean false  true  [TYPE]  Node call 
[REPLACE]^return true;^175^^^^^173^176^[REPLACE] return null;^[METHOD] getObjectLiteralCast [TYPE] ObjectLiteralCast [PARAMETER] NodeTraversal t Node callNode [CLASS] DefaultCodingConvention   [TYPE]  boolean false  true  [TYPE]  NodeTraversal t  [TYPE]  Node callNode 
