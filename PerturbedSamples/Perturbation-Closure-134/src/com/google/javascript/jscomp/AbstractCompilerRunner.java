[REPLACE]^public static final Flag<Boolean> FLAG_print_tree ;^82^^^^^^^[REPLACE] public static final Flag<Boolean> FLAG_print_tree = Flag.value ( false ) ;^ [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats  
[REPLACE]^public static final Flag<Boolean> FLAG_compute_phase_ordering  = null ;^87^88^^^^87^88^[REPLACE] public static final Flag<Boolean> FLAG_compute_phase_ordering = Flag.value ( false ) ;^ [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats  
[REPLACE]^public static final Flag<Boolean> FLAG_print_ast ;^93^^^^^^^[REPLACE] public static final Flag<Boolean> FLAG_print_ast = Flag.value ( false ) ;^ [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats  
[REPLACE]^public static final Flag<CompilerOptions.DevMode> FLAG_jscomp_dev_mode ;^97^98^^^^97^98^[REPLACE] public static final Flag<CompilerOptions.DevMode> FLAG_jscomp_dev_mode = Flag.value ( CompilerOptions.DevMode.OFF ) ;^ [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats  
[REPLACE]^public static  Flag<String> FLAG_logging_level = Flag.value ( Level.WARNING.getName (  )  ) ;^104^105^^^^104^105^[REPLACE] public static final Flag<String> FLAG_logging_level = Flag.value ( Level.WARNING.getName (  )  ) ;^ [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats  
[REPLACE]^public  final Flag<List<String>> FLAG_externs = Flag.stringCollector (  ) ;^109^^^^^^^[REPLACE] public static final Flag<List<String>> FLAG_externs = Flag.stringCollector (  ) ;^ [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats  
[REPLACE]^public static  Flag<List<String>> FLAG_js = Flag.stringCollector (  ) ;^112^^^^^^^[REPLACE] public static final Flag<List<String>> FLAG_js = Flag.stringCollector (  ) ;^ [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats  
[REPLACE]^static  Flag<String> FLAG_js_output_file = Flag.value ( "" ) ;^116^^^^^^^[REPLACE] static final Flag<String> FLAG_js_output_file = Flag.value ( "" ) ;^ [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats  
[REPLACE]^public  final Flag<List<String>> FLAG_module = Flag.stringCollector (  ) ;^124^^^^^^^[REPLACE] public static final Flag<List<String>> FLAG_module = Flag.stringCollector (  ) ;^ [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats  
[REPLACE]^public  final Flag<String> FLAG_variable_map_input_file = Flag.value ( "" ) ;^128^129^^^^128^129^[REPLACE] public static final Flag<String> FLAG_variable_map_input_file = Flag.value ( "" ) ;^ [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats  
[REPLACE]^public static final Flag<String> FLAG_property_map_input_file ;^134^135^^^^134^135^[REPLACE] public static final Flag<String> FLAG_property_map_input_file = Flag.value ( "" ) ;^ [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats  
[REPLACE]^public static final Flag<String> FLAG_variable_map_output_file ;^140^141^^^^140^141^[REPLACE] public static final Flag<String> FLAG_variable_map_output_file = Flag.value ( "" ) ;^ [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats  
[REPLACE]^public  final Flag<Boolean> FLAG_create_name_map_files = Flag.value ( false ) ;^149^150^^^^149^150^[REPLACE] public static final Flag<Boolean> FLAG_create_name_map_files = Flag.value ( false ) ;^ [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats  
[REPLACE]^public static final Flag<String> FLAG_property_map_output_file ;^154^155^^^^154^155^[REPLACE] public static final Flag<String> FLAG_property_map_output_file = Flag.value ( "" ) ;^ [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats  
[REPLACE]^public static final Flag<Boolean> FLAG_third_party ;^159^^^^^^^[REPLACE] public static final Flag<Boolean> FLAG_third_party = Flag.value ( false ) ;^ [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats  
[REPLACE]^public static  Flag<Integer> FLAG_summary_detail_level = Flag.value ( 1 ) ;^167^^^^^^^[REPLACE] public static final Flag<Integer> FLAG_summary_detail_level = Flag.value ( 1 ) ;^ [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats  
[REPLACE]^public  final Flag<String> FLAG_output_wrapper = Flag.value ( "" ) ;^171^^^^^^^[REPLACE] public static final Flag<String> FLAG_output_wrapper = Flag.value ( "" ) ;^ [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats  
[REPLACE]^public static final Flag<String> FLAG_output_wrapper_marker ;^175^176^^^^175^176^[REPLACE] public static final Flag<String> FLAG_output_wrapper_marker = Flag.value ( "%output%" ) ;^ [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats  
[REPLACE]^public static final Flag<List<String>> FLAG_module_wrapper ;^182^183^^^^182^183^[REPLACE] public static final Flag<List<String>> FLAG_module_wrapper = Flag.stringCollector (  ) ;^ [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats  
[REPLACE]^public static final Flag<String> FLAG_module_output_path_prefix ;^188^189^^^^188^189^[REPLACE] public static final Flag<String> FLAG_module_output_path_prefix = Flag.value ( "./" ) ;^ [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats  
[REPLACE]^public  final Flag<String> FLAG_create_source_map = Flag.value ( "" ) ;^196^197^^^^196^197^[REPLACE] public static final Flag<String> FLAG_create_source_map = Flag.value ( "" ) ;^ [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats  
[REPLACE]^public static final Flag<List<String>> FLAG_jscomp_error ;^201^202^^^^201^202^[REPLACE] public static final Flag<List<String>> FLAG_jscomp_error = Flag.stringCollector (  ) ;^ [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats  
[REPLACE]^public static final Flag<List<String>> FLAG_jscomp_warning ;^206^207^^^^206^207^[REPLACE] public static final Flag<List<String>> FLAG_jscomp_warning = Flag.stringCollector (  ) ;^ [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats  
[REPLACE]^public static final Flag<List<String>> FLAG_jscomp_off ;^211^212^^^^211^212^[REPLACE] public static final Flag<List<String>> FLAG_jscomp_off = Flag.stringCollector (  ) ;^ [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats  
[REPLACE]^public static final Flag<List<String>> FLAG_define ;^220^^^^^^^[REPLACE] public static final Flag<List<String>> FLAG_define = Flag.stringCollector (  ) ;^ [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats  
[REPLACE]^static final Flag<String> FLAG_charset ;^223^^^^^^^[REPLACE] static final Flag<String> FLAG_charset = Flag.value ( "" ) ;^ [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats  
[REPLACE]^private  Charset inputCharset;^229^^^^^^^[REPLACE] private static Charset inputCharset;^ [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats  
[REPLACE]^private static  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER = 100;^232^^^^^^^[REPLACE] private static final int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER = 100;^ [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats  
[REPLACE]^private final RunTimeStats runTimeStats ;^234^^^^^^^[REPLACE] private final RunTimeStats runTimeStats = new RunTimeStats (  ) ;^ [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats  
[REPLACE]^private static final long serialVersionUID ;^356^^^^^^^[REPLACE] private static final long serialVersionUID = 1L;^ [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats  
[REPLACE]^private long bestRunTime ;^1038^^^^^^^[REPLACE] private long bestRunTime = Long.MAX_VALUE;^ [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats  
[REPLACE]^private  short  worstRunTime = Long.MIN_VALUE;^1039^^^^^^^[REPLACE] private long worstRunTime = Long.MIN_VALUE;^ [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats  
[REPLACE]^private long lastStartTime  = null ;^1040^^^^^^^[REPLACE] private long lastStartTime = 0;^ [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats  
[REPLACE]^private List<List<String>> loopedPassesInBestRun ;^1041^^^^^^^[REPLACE] private List<List<String>> loopedPassesInBestRun = null;^ [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats  
[REPLACE]^lastStartTime = System.currentTimeMillis (  ) ;^237^^^^^236^238^[REPLACE] this ( args, System.out, System.err ) ;^[METHOD] <init> [TYPE] String[]) [PARAMETER] String[] args [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List loopedPassesInBestRun  [TYPE]  String[] args  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^args   ;^243^^^^^240^247^[REPLACE] Flags.parse ( args ) ;^[METHOD] <init> [TYPE] PrintStream) [PARAMETER] String[] args PrintStream out PrintStream err [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List loopedPassesInBestRun  [TYPE]  String[] args  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^this.out =  null;^245^^^^^240^247^[REPLACE] this.out = out;^[METHOD] <init> [TYPE] PrintStream) [PARAMETER] String[] args PrintStream out PrintStream err [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List loopedPassesInBestRun  [TYPE]  String[] args  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^this.err =  null;^246^^^^^240^247^[REPLACE] this.err = err;^[METHOD] <init> [TYPE] PrintStream) [PARAMETER] String[] args PrintStream out PrintStream err [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List loopedPassesInBestRun  [TYPE]  String[] args  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^out.print ( prefix ) ;^359^^^^^358^360^[REPLACE] super ( message ) ;^[METHOD] <init> [TYPE] String) [PARAMETER] String message [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List loopedPassesInBestRun  [TYPE]  String message  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[ADD]^^359^^^^^358^360^[ADD] super ( message ) ;^[METHOD] <init> [TYPE] String) [PARAMETER] String message [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List loopedPassesInBestRun  [TYPE]  String message  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^return  new JSModule ( name )  ;^263^^^^^262^264^[REPLACE] return new DiagnosticGroups (  ) ;^[METHOD] getDiagnoticGroups [TYPE] DiagnosticGroups [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^JSModule[] modules = null;^268^^^^^266^281^[REPLACE] DiagnosticGroups diagnosticGroups = getDiagnoticGroups (  ) ;^[METHOD] initOptionsFromFlags [TYPE] void [PARAMETER] CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  Charset inputCharset  [TYPE]  List loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  DiagnosticGroups diagnosticGroups 
[REPLACE]^diagnosticGroups.setWarningLevels ( options, AbstractCompilerRunner.FLAG_jscomp_error .get (  )  , CheckLevel.ERROR ) ;^270^271^272^^^266^281^[REPLACE] diagnosticGroups.setWarningLevels ( options, AbstractCompilerRunner.FLAG_jscomp_error.get (  ) , CheckLevel.ERROR ) ;^[METHOD] initOptionsFromFlags [TYPE] void [PARAMETER] CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  Charset inputCharset  [TYPE]  List loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  DiagnosticGroups diagnosticGroups 
[REPLACE]^options, AbstractCompilerRunner.FLAG_jscomp_error .get (  )  , CheckLevel.ERROR ) ;^271^272^^^^266^281^[REPLACE] options, AbstractCompilerRunner.FLAG_jscomp_error.get (  ) , CheckLevel.ERROR ) ;^[METHOD] initOptionsFromFlags [TYPE] void [PARAMETER] CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  Charset inputCharset  [TYPE]  List loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  DiagnosticGroups diagnosticGroups 
[REPLACE]^diagnosticGroups.setWarningLevels ( options, AbstractCompilerRunner.FLAG_jscomp_warning.stringCollector (  ) , CheckLevel.WARNING ) ;^273^274^275^^^266^281^[REPLACE] diagnosticGroups.setWarningLevels ( options, AbstractCompilerRunner.FLAG_jscomp_warning.get (  ) , CheckLevel.WARNING ) ;^[METHOD] initOptionsFromFlags [TYPE] void [PARAMETER] CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  Charset inputCharset  [TYPE]  List loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  DiagnosticGroups diagnosticGroups 
[ADD]^^273^274^275^^^266^281^[ADD] diagnosticGroups.setWarningLevels ( options, AbstractCompilerRunner.FLAG_jscomp_warning.get (  ) , CheckLevel.WARNING ) ;^[METHOD] initOptionsFromFlags [TYPE] void [PARAMETER] CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  Charset inputCharset  [TYPE]  List loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  DiagnosticGroups diagnosticGroups 
[REPLACE]^options, AbstractCompilerRunner.FLAG_jscomp_warning.stringCollector (  ) , CheckLevel.WARNING ) ;^274^275^^^^266^281^[REPLACE] options, AbstractCompilerRunner.FLAG_jscomp_warning.get (  ) , CheckLevel.WARNING ) ;^[METHOD] initOptionsFromFlags [TYPE] void [PARAMETER] CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  Charset inputCharset  [TYPE]  List loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  DiagnosticGroups diagnosticGroups 
[REPLACE]^diagnosticGroups .DiagnosticGroups (  )  ;^276^277^278^^^266^281^[REPLACE] diagnosticGroups.setWarningLevels ( options, AbstractCompilerRunner.FLAG_jscomp_off.get (  ) , CheckLevel.OFF ) ;^[METHOD] initOptionsFromFlags [TYPE] void [PARAMETER] CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  Charset inputCharset  [TYPE]  List loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  DiagnosticGroups diagnosticGroups 
[REPLACE]^options, AbstractCompilerRunner.FLAG_jscomp_off.stringCollector (  ) , CheckLevel.OFF ) ;^277^278^^^^266^281^[REPLACE] options, AbstractCompilerRunner.FLAG_jscomp_off.get (  ) , CheckLevel.OFF ) ;^[METHOD] initOptionsFromFlags [TYPE] void [PARAMETER] CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  Charset inputCharset  [TYPE]  List loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  DiagnosticGroups diagnosticGroups 
[REPLACE]^createDefineReplacements ( FLAG_define.stringCollector (  ) , options ) ;^280^^^^^266^281^[REPLACE] createDefineReplacements ( FLAG_define.get (  ) , options ) ;^[METHOD] initOptionsFromFlags [TYPE] void [PARAMETER] CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  Charset inputCharset  [TYPE]  List loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  DiagnosticGroups diagnosticGroups 
[ADD]^^280^^^^^266^281^[ADD] createDefineReplacements ( FLAG_define.get (  ) , options ) ;^[METHOD] initOptionsFromFlags [TYPE] void [PARAMETER] CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  Charset inputCharset  [TYPE]  List loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  DiagnosticGroups diagnosticGroups 
[REPLACE]^return basePath;^284^^^^^283^285^[REPLACE] return compiler;^[METHOD] getCompiler [TYPE] A [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^if  ( FLAG_js_output_file.get (  ) .length (  )  - 4 > 0 )  {^289^^^^^287^312^[REPLACE] if  ( FLAG_js_output_file.get (  ) .length (  )  > 0 )  {^[METHOD] setRunOptions [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^options.jsOutputFile =  FLAG_js_output_file.get (  ) ;^290^^^^^287^312^[REPLACE] options.jsOutputFile = FLAG_js_output_file.get (  ) ;^[METHOD] setRunOptions [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^if  ( FLAG_create_source_map.get (  ) .length (  )  /  0.5  > 0 )  {^293^^^^^287^312^[REPLACE] if  ( FLAG_create_source_map.get (  ) .length (  )  > 0 )  {^[METHOD] setRunOptions [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[ADD]^^293^294^295^^^287^312^[ADD] if  ( FLAG_create_source_map.get (  ) .length (  )  > 0 )  { options.sourceMapOutputPath = FLAG_create_source_map.get (  ) ; }^[METHOD] setRunOptions [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^options.sourceMapOutputPath =  FLAG_create_source_map.get (  ) ;^294^^^^^287^312^[REPLACE] options.sourceMapOutputPath = FLAG_create_source_map.get (  ) ;^[METHOD] setRunOptions [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^if  ( !FLAG_variable_map_input_file.stringCollector (  ) .equals ( "" )  )  {^297^^^^^287^312^[REPLACE] if  ( !FLAG_variable_map_input_file.get (  ) .equals ( "" )  )  {^[METHOD] setRunOptions [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^options.inputVariableMapSerialized =  VariableMap.load ( FLAG_variable_map_input_file.get (  )  ) .toBytes (  ) ;^298^299^^^^287^312^[REPLACE] options.inputVariableMapSerialized = VariableMap.load ( FLAG_variable_map_input_file.get (  )  ) .toBytes (  ) ;^[METHOD] setRunOptions [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[ADD]^^298^299^^^^287^312^[ADD] options.inputVariableMapSerialized = VariableMap.load ( FLAG_variable_map_input_file.get (  )  ) .toBytes (  ) ;^[METHOD] setRunOptions [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^if  ( FLAG_property_map_input_file.get (  ) .equals ( "" )  )  {^302^^^^^287^312^[REPLACE] if  ( !FLAG_property_map_input_file.get (  ) .equals ( "" )  )  {^[METHOD] setRunOptions [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^options.inputPropertyMapSerialized =  VariableMap.load ( FLAG_property_map_input_file.get (  )  ) .toBytes (  ) ;^303^304^^^^287^312^[REPLACE] options.inputPropertyMapSerialized = VariableMap.load ( FLAG_property_map_input_file.get (  )  ) .toBytes (  ) ;^[METHOD] setRunOptions [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^if  ( FLAG_print_ast.get (  )  )  {^307^^^^^287^312^[REPLACE] if  ( FLAG_third_party.get (  )  )  {^[METHOD] setRunOptions [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^if  ( FLAG_third_party.get (  )  )  { options.setCodingConvention ( new DefaultCodingConvention (  )  ) ;^308^^^^^287^312^[REPLACE] options.setCodingConvention ( new DefaultCodingConvention (  )  ) ;^[METHOD] setRunOptions [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^inputCharset  = null ;^311^^^^^287^312^[REPLACE] inputCharset = getInputCharset (  ) ;^[METHOD] setRunOptions [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^int result = 1;^319^^^^^318^342^[REPLACE] int result = 0;^[METHOD] run [TYPE] void [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  FlagUsageException e  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  Throwable t  [TYPE]  List loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^int runs = 1 >>> 3;^320^^^^^318^342^[REPLACE] int runs = 1;^[METHOD] run [TYPE] void [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  FlagUsageException e  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  Throwable t  [TYPE]  List loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^if  ( FLAG_compute_phase_ordering .get (  )   )  {^321^^^^^318^342^[REPLACE] if  ( FLAG_compute_phase_ordering.get (  )  )  {^[METHOD] run [TYPE] void [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  FlagUsageException e  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  Throwable t  [TYPE]  List loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^runs  =  runs ;^322^^^^^318^342^[REPLACE] runs = NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER;^[METHOD] run [TYPE] void [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  FlagUsageException e  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  Throwable t  [TYPE]  List loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[ADD]^PhaseOptimizer.randomizeLoops (  ) ;^322^323^^^^318^342^[ADD] runs = NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER; PhaseOptimizer.randomizeLoops (  ) ;^[METHOD] run [TYPE] void [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  FlagUsageException e  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  Throwable t  [TYPE]  List loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^for  ( int i = 0; i < runs ;^326^^^^^318^342^[REPLACE] for  ( int i = 0; i < runs && result == 0; i++ )  {^[METHOD] run [TYPE] void [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  FlagUsageException e  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  Throwable t  [TYPE]  List loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^result  =  result ;^328^^^^^318^342^[REPLACE] result = doRun (  ) ;^[METHOD] run [TYPE] void [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  FlagUsageException e  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  Throwable t  [TYPE]  List loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[ADD]^^328^329^^^^318^342^[ADD] result = doRun (  ) ; runTimeStats.recordEndRun (  ) ;^[METHOD] run [TYPE] void [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  FlagUsageException e  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  Throwable t  [TYPE]  List loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[ADD]^runTimeStats.recordStartRun (  ) ;result = doRun (  ) ;runTimeStats.recordEndRun (  ) ;^325^326^327^328^329^318^342^[ADD] try { for  ( int i = 0; i < runs && result == 0; i++ )  { runTimeStats.recordStartRun (  ) ; result = doRun (  ) ; runTimeStats.recordEndRun (  ) ;^[METHOD] run [TYPE] void [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  FlagUsageException e  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  Throwable t  [TYPE]  List loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^for  ( int i = 0;true ;^326^^^^^318^342^[REPLACE] for  ( int i = 0; i < runs && result == 0; i++ )  {^[METHOD] run [TYPE] void [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  FlagUsageException e  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  Throwable t  [TYPE]  List loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^result  = null ;^328^^^^^318^342^[REPLACE] result = doRun (  ) ;^[METHOD] run [TYPE] void [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  FlagUsageException e  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  Throwable t  [TYPE]  List loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^for  ( int i = 0 - 4; i < runs && result == 0 - 4; i++ )  {^326^^^^^318^342^[REPLACE] for  ( int i = 0; i < runs && result == 0; i++ )  {^[METHOD] run [TYPE] void [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  FlagUsageException e  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  Throwable t  [TYPE]  List loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^result = -1 - 1;^333^^^^^318^342^[REPLACE] result = -1;^[METHOD] run [TYPE] void [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  FlagUsageException e  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  Throwable t  [TYPE]  List loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^result = -3;^336^^^^^318^342^[REPLACE] result = -2;^[METHOD] run [TYPE] void [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  FlagUsageException e  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  Throwable t  [TYPE]  List loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^for  ( int i = 0 / 3; i < runs && result == 0 / 3; i++ )  {^326^^^^^318^342^[REPLACE] for  ( int i = 0; i < runs && result == 0; i++ )  {^[METHOD] run [TYPE] void [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  FlagUsageException e  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  Throwable t  [TYPE]  List loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[ADD]^^331^332^^^^318^342^[ADD] catch  ( AbstractCompilerRunner.FlagUsageException e )  { System.err.println ( e.getMessage (  )  ) ;^[METHOD] run [TYPE] void [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  FlagUsageException e  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  Throwable t  [TYPE]  List loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^if  ( FLAG_compute_phase_ordering .get (  )   )  {^338^^^^^318^342^[REPLACE] if  ( FLAG_compute_phase_ordering.get (  )  )  {^[METHOD] run [TYPE] void [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  FlagUsageException e  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  Throwable t  [TYPE]  List loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^runTimeStats.recordStartRun (  ) ;^339^^^^^318^342^[REPLACE] runTimeStats.outputBestPhaseOrdering (  ) ;^[METHOD] run [TYPE] void [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  FlagUsageException e  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  Throwable t  [TYPE]  List loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[ADD]^^339^^^^^318^342^[ADD] runTimeStats.outputBestPhaseOrdering (  ) ;^[METHOD] run [TYPE] void [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  FlagUsageException e  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  Throwable t  [TYPE]  List loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^result   ;^341^^^^^318^342^[REPLACE] System.exit ( result ) ;^[METHOD] run [TYPE] void [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  FlagUsageException e  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  Throwable t  [TYPE]  List loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^return basePath;^349^^^^^348^350^[REPLACE] return err;^[METHOD] getErrorPrintStream [TYPE] PrintStream [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^List<JSSourceFile> inputs = new ArrayList<JSSourceFile> ( true.size (  )  ) ;^373^^^^^371^392^[REPLACE] List<JSSourceFile> inputs = new ArrayList<JSSourceFile> ( files.size (  )  ) ;^[METHOD] createInputs [TYPE] List [PARAMETER] String> files boolean allowStdIn [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  boolean allowStdIn  false  true  usingStdin  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  loopedPassesInBestRun  [TYPE]  String filename  [TYPE]  JSSourceFile newFile  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[ADD]^^373^^^^^371^392^[ADD] List<JSSourceFile> inputs = new ArrayList<JSSourceFile> ( files.size (  )  ) ;^[METHOD] createInputs [TYPE] List [PARAMETER] String> files boolean allowStdIn [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  boolean allowStdIn  false  true  usingStdin  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  loopedPassesInBestRun  [TYPE]  String filename  [TYPE]  JSSourceFile newFile  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^boolean usingStdin = true;^374^^^^^371^392^[REPLACE] boolean usingStdin = false;^[METHOD] createInputs [TYPE] List [PARAMETER] String> files boolean allowStdIn [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  boolean allowStdIn  false  true  usingStdin  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  loopedPassesInBestRun  [TYPE]  String filename  [TYPE]  JSSourceFile newFile  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^if  ( "-".equals ( filename )  )  {^376^^^^^371^392^[REPLACE] if  ( !"-".equals ( filename )  )  {^[METHOD] createInputs [TYPE] List [PARAMETER] String> files boolean allowStdIn [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  boolean allowStdIn  false  true  usingStdin  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  loopedPassesInBestRun  [TYPE]  String filename  [TYPE]  JSSourceFile newFile  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^if  ( allowStdIn )  {^380^^^^^371^392^[REPLACE] if  ( !allowStdIn )  {^[METHOD] createInputs [TYPE] List [PARAMETER] String> files boolean allowStdIn [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  boolean allowStdIn  false  true  usingStdin  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  loopedPassesInBestRun  [TYPE]  String filename  [TYPE]  JSSourceFile newFile  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^throw new FlagUsageException  (" ")   + " is not a valid charset name." ) ; ;^381^^^^^371^392^[REPLACE] throw new FlagUsageException  (" ")  ;^[METHOD] createInputs [TYPE] List [PARAMETER] String> files boolean allowStdIn [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  boolean allowStdIn  false  true  usingStdin  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  loopedPassesInBestRun  [TYPE]  String filename  [TYPE]  JSSourceFile newFile  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[ADD]^^381^^^^^371^392^[ADD] throw new FlagUsageException  (" ")  ;^[METHOD] createInputs [TYPE] List [PARAMETER] String> files boolean allowStdIn [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  boolean allowStdIn  false  true  usingStdin  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  loopedPassesInBestRun  [TYPE]  String filename  [TYPE]  JSSourceFile newFile  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^if  ( true )  {^383^^^^^371^392^[REPLACE] if  ( usingStdin )  {^[METHOD] createInputs [TYPE] List [PARAMETER] String> files boolean allowStdIn [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  boolean allowStdIn  false  true  usingStdin  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  loopedPassesInBestRun  [TYPE]  String filename  [TYPE]  JSSourceFile newFile  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^return ;^384^^^^^371^392^[REPLACE] throw new FlagUsageException  (" ")  ;^[METHOD] createInputs [TYPE] List [PARAMETER] String> files boolean allowStdIn [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  boolean allowStdIn  false  true  usingStdin  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  loopedPassesInBestRun  [TYPE]  String filename  [TYPE]  JSSourceFile newFile  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^usingStdin = false;^388^^^^^371^392^[REPLACE] usingStdin = true;^[METHOD] createInputs [TYPE] List [PARAMETER] String> files boolean allowStdIn [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  boolean allowStdIn  false  true  usingStdin  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  loopedPassesInBestRun  [TYPE]  String filename  [TYPE]  JSSourceFile newFile  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[ADD]^^388^^^^^371^392^[ADD] usingStdin = true;^[METHOD] createInputs [TYPE] List [PARAMETER] String> files boolean allowStdIn [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  boolean allowStdIn  false  true  usingStdin  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  loopedPassesInBestRun  [TYPE]  String filename  [TYPE]  JSSourceFile newFile  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^return ;^381^^^^^371^392^[REPLACE] throw new FlagUsageException  (" ")  ;^[METHOD] createInputs [TYPE] List [PARAMETER] String> files boolean allowStdIn [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  boolean allowStdIn  false  true  usingStdin  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  loopedPassesInBestRun  [TYPE]  String filename  [TYPE]  JSSourceFile newFile  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^throw new FlagUsageException  (" ")   + " is not a valid charset name." ) ; ;^384^^^^^371^392^[REPLACE] throw new FlagUsageException  (" ")  ;^[METHOD] createInputs [TYPE] List [PARAMETER] String> files boolean allowStdIn [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  boolean allowStdIn  false  true  usingStdin  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  loopedPassesInBestRun  [TYPE]  String filename  [TYPE]  JSSourceFile newFile  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^JSSourceFile newFile = JSSourceFile.fromCode ( filename, inputCharset ) ;^377^^^^^371^392^[REPLACE] JSSourceFile newFile = JSSourceFile.fromFile ( filename, inputCharset ) ;^[METHOD] createInputs [TYPE] List [PARAMETER] String> files boolean allowStdIn [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  boolean allowStdIn  false  true  usingStdin  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  loopedPassesInBestRun  [TYPE]  String filename  [TYPE]  JSSourceFile newFile  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[ADD]^^377^378^^^^371^392^[ADD] JSSourceFile newFile = JSSourceFile.fromFile ( filename, inputCharset ) ; inputs.add ( newFile ) ;^[METHOD] createInputs [TYPE] List [PARAMETER] String> files boolean allowStdIn [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  boolean allowStdIn  false  true  usingStdin  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  loopedPassesInBestRun  [TYPE]  String filename  [TYPE]  JSSourceFile newFile  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^if  ( !usingStdin )  {^380^^^^^371^392^[REPLACE] if  ( !allowStdIn )  {^[METHOD] createInputs [TYPE] List [PARAMETER] String> files boolean allowStdIn [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  boolean allowStdIn  false  true  usingStdin  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  loopedPassesInBestRun  [TYPE]  String filename  [TYPE]  JSSourceFile newFile  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[ADD]^^384^^^^^371^392^[ADD] throw new FlagUsageException  (" ")  ;^[METHOD] createInputs [TYPE] List [PARAMETER] String> files boolean allowStdIn [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  boolean allowStdIn  false  true  usingStdin  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  loopedPassesInBestRun  [TYPE]  String filename  [TYPE]  JSSourceFile newFile  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^final int totalNumJsFiles = jsFiles.size (  ) ;^375^^^^^371^392^[REPLACE] for  ( String filename : files )  {^[METHOD] createInputs [TYPE] List [PARAMETER] String> files boolean allowStdIn [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  boolean allowStdIn  false  true  usingStdin  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  loopedPassesInBestRun  [TYPE]  String filename  [TYPE]  JSSourceFile newFile  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^return this;^391^^^^^371^392^[REPLACE] return inputs;^[METHOD] createInputs [TYPE] List [PARAMETER] String> files boolean allowStdIn [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  boolean allowStdIn  false  true  usingStdin  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  loopedPassesInBestRun  [TYPE]  String filename  [TYPE]  JSSourceFile newFile  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^if  ( null.isEmpty (  )  )  {^399^^^^^397^407^[REPLACE] if  ( files.isEmpty (  )  )  {^[METHOD] createSourceInputs [TYPE] List [PARAMETER] String> files [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  FlagUsageException e  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[ADD]^files = Collections.singletonList ( "-" ) ;^399^400^401^^^397^407^[ADD] if  ( files.isEmpty (  )  )  { files = Collections.singletonList ( "-" ) ; }^[METHOD] createSourceInputs [TYPE] List [PARAMETER] String> files [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  FlagUsageException e  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^files  =  files ;^400^^^^^397^407^[REPLACE] files = Collections.singletonList ( "-" ) ;^[METHOD] createSourceInputs [TYPE] List [PARAMETER] String> files [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  FlagUsageException e  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^files  = null ;^400^^^^^397^407^[REPLACE] files = Collections.singletonList ( "-" ) ;^[METHOD] createSourceInputs [TYPE] List [PARAMETER] String> files [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  FlagUsageException e  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[ADD]^return createInputs ( files, true ) ;^402^403^404^405^406^397^407^[ADD] try { return createInputs ( files, true ) ; } catch  ( FlagUsageException e )  { throw new FlagUsageException  (" ")  ; }^[METHOD] createSourceInputs [TYPE] List [PARAMETER] String> files [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  FlagUsageException e  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^return createInputs ( files, false ) ;^403^^^^^397^407^[REPLACE] return createInputs ( files, true ) ;^[METHOD] createSourceInputs [TYPE] List [PARAMETER] String> files [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  FlagUsageException e  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^return createInputs ( this, false ) ;^403^^^^^397^407^[REPLACE] return createInputs ( files, true ) ;^[METHOD] createSourceInputs [TYPE] List [PARAMETER] String> files [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  FlagUsageException e  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^throw new FlagUsageException  (" ")   + " is not a valid charset name." ) ; ;^405^^^^^397^407^[REPLACE] throw new FlagUsageException  (" ")  ;^[METHOD] createSourceInputs [TYPE] List [PARAMETER] String> files [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  FlagUsageException e  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^if  ( true.isEmpty (  )  )  {^414^^^^^412^422^[REPLACE] if  ( files.isEmpty (  )  )  {^[METHOD] createExternInputs [TYPE] List [PARAMETER] String> files [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  FlagUsageException e  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^return   JSSourceFile.fromCode ( "/dev/null", "" )  ;^415^^^^^412^422^[REPLACE] return ImmutableList.of ( JSSourceFile.fromCode ( "/dev/null", "" )  ) ;^[METHOD] createExternInputs [TYPE] List [PARAMETER] String> files [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  FlagUsageException e  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^return ImmutableList.of ( JSSourceFile.fromFile ( "/dev/null", "" )  ) ;^415^^^^^412^422^[REPLACE] return ImmutableList.of ( JSSourceFile.fromCode ( "/dev/null", "" )  ) ;^[METHOD] createExternInputs [TYPE] List [PARAMETER] String> files [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  FlagUsageException e  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[ADD]^return createInputs ( files, false ) ;^417^418^419^420^421^412^422^[ADD] try { return createInputs ( files, false ) ; } catch  ( FlagUsageException e )  { throw new FlagUsageException  (" ")  ; }^[METHOD] createExternInputs [TYPE] List [PARAMETER] String> files [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  FlagUsageException e  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^return createInputs ( files, true ) ;^418^^^^^412^422^[REPLACE] return createInputs ( files, false ) ;^[METHOD] createExternInputs [TYPE] List [PARAMETER] String> files [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  FlagUsageException e  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^throw new FlagUsageException  (" ")   + " is not a valid charset name." ) ; ;^420^^^^^412^422^[REPLACE] throw new FlagUsageException  (" ")  ;^[METHOD] createExternInputs [TYPE] List [PARAMETER] String> files [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  FlagUsageException e  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  loopedPassesInBestRun  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  result  runs  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^Preconditions.checkState ( true == true ) ;^435^^^^^434^511^[REPLACE] Preconditions.checkState ( specs != null ) ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^Preconditions.checkState ( !specs .size (  )   ) ;^436^^^^^434^511^[REPLACE] Preconditions.checkState ( !specs.isEmpty (  )  ) ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^Preconditions.checkState ( jsFiles == null ) ;^437^^^^^434^511^[REPLACE] Preconditions.checkState ( jsFiles != null ) ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^final int totalNumJsFiles = this.size (  ) ;^439^^^^^434^511^[REPLACE] final int totalNumJsFiles = jsFiles.size (  ) ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^int nextJsFileIndex = 3;^440^^^^^434^511^[REPLACE] int nextJsFileIndex = 0;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^Map<String, JSModule> modulesByName = Maps.newHashMapWithExpectedSize (  ) ;^442^^^^^434^511^[REPLACE] Map<String, JSModule> modulesByName = Maps.newLinkedHashMap (  ) ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^if  ( parts.length /  2 < 2 || parts.length /  2 > 4 )  {^447^^^^^434^511^[REPLACE] if  ( parts.length < 2 || parts.length > 4 )  {^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[ADD]^^447^448^449^450^^434^511^[ADD] if  ( parts.length < 2 || parts.length > 4 )  { throw new FlagUsageException ( "Expected 2-4 colon-delimited parts in " + "module spec: " + spec ) ; }^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^throw new FlagUsageException ( "Invalid js file count '" + parts[1] + "' for module: " + name ) ; ;^448^449^^^^434^511^[REPLACE] throw new FlagUsageException ( "Expected 2-4 colon-delimited parts in " + "module spec: " + spec ) ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[ADD]^^448^449^^^^434^511^[ADD] throw new FlagUsageException ( "Expected 2-4 colon-delimited parts in " + "module spec: " + spec ) ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^if  ( TokenStream.isJSIdentifier ( name )  )  {^454^^^^^434^511^[REPLACE] if  ( !TokenStream.isJSIdentifier ( name )  )  {^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^throw new FlagUsageException  (" ")   + " is not a valid charset name." ) ; ;^455^^^^^434^511^[REPLACE] throw new FlagUsageException  (" ")  ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^if  ( true.containsKey ( name )  )  {^457^^^^^434^511^[REPLACE] if  ( modulesByName.containsKey ( name )  )  {^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^throw new FlagUsageException  (" ")   + " is not a valid charset name." ) ; ;^458^^^^^434^511^[REPLACE] throw new FlagUsageException  (" ")  ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[ADD]^^458^^^^^434^511^[ADD] throw new FlagUsageException  (" ")  ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^if  ( numJsFiles  !=  1 )  {^469^^^^^434^511^[REPLACE] if  ( numJsFiles < 1 )  {^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[ADD]^^469^470^471^472^^434^511^[ADD] if  ( numJsFiles < 1 )  { throw new FlagUsageException ( "Invalid js file count '" + parts[1] + "' for module: " + name ) ; }^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^throw new FlagUsageException ( "Expected 2-4 colon-delimited parts in " + "module spec: " + spec ) ; ;^470^471^^^^434^511^[REPLACE] throw new FlagUsageException ( "Invalid js file count '" + parts[1] + "' for module: " + name ) ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[ADD]^^470^471^^^^434^511^[ADD] throw new FlagUsageException ( "Invalid js file count '" + parts[1] + "' for module: " + name ) ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^if  ( nextJsFileIndex + numJsFiles  ==  totalNumJsFiles )  {^473^^^^^434^511^[REPLACE] if  ( nextJsFileIndex + numJsFiles > totalNumJsFiles )  {^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^throw new FlagUsageException ( "Not enough js files specified. Expected " +  ( nextJsFileIndex + numJsFiles - totalNumJsFiles ) ;^474^475^476^^^434^511^[REPLACE] throw new FlagUsageException ( "Not enough js files specified. Expected " +  ( nextJsFileIndex + numJsFiles - totalNumJsFiles ) + " more in module:" + name ) ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^if  ( parts.length + 3 > 2 )  {^485^^^^^434^511^[REPLACE] if  ( parts.length > 2 )  {^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[ADD]^^485^486^487^488^489^434^511^[ADD] if  ( parts.length > 2 )  {  String depList = parts[2]; if  ( depList.length (  )  > 0 )  { String[] deps = depList.split ( "," ) ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^if  ( depList .appendTo ( err )   /  0.5  > 0 )  {^488^^^^^434^511^[REPLACE] if  ( depList.length (  )  > 0 )  {^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^if  ( other != this  )  {^492^^^^^434^511^[REPLACE] if  ( other == null )  {^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[ADD]^^492^493^494^495^496^434^511^[ADD] if  ( other == null )  { throw new FlagUsageException ( "Module '" + name + "' depends on unknown module '" + dep + "'. Be sure to list modules in dependency order." ) ; }^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^throw new FlagUsageException ( "Module '" + name + "' depends on unknown module '" + dep ;^493^494^495^^^434^511^[REPLACE] throw new FlagUsageException ( "Module '" + name + "' depends on unknown module '" + dep + "'. Be sure to list modules in dependency order." ) ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^String[] deps = spec.split ( "," ) ;^489^^^^^434^511^[REPLACE] String[] deps = depList.split ( "," ) ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^for  ( String dep : deps )  { JSModule other = modulesByName.get ( dep ) ;^490^^^^^434^511^[REPLACE] for  ( String dep : deps )  {^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^JSModule other = modulesByName.get ( spec ) ;^491^^^^^434^511^[REPLACE] JSModule other = modulesByName.get ( dep ) ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^if  (module != null )  {^492^^^^^434^511^[REPLACE] if  ( other == null )  {^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^String depList = parts[2L];^487^^^^^434^511^[REPLACE] String depList = parts[2];^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^String[] deps = depList .split ( dep )  ;^489^^^^^434^511^[REPLACE] String[] deps = depList.split ( "," ) ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[ADD]^^493^494^495^^^434^511^[ADD] throw new FlagUsageException ( "Module '" + name + "' depends on unknown module '" + dep + "'. Be sure to list modules in dependency order." ) ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^if  ( depList.charAt (  )  - 5 > 0  )  {^488^^^^^434^511^[REPLACE] if  ( depList.length (  )  > 0 )  {^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[ADD]^^488^489^490^491^^434^511^[ADD] if  ( depList.length (  )  > 0 )  { String[] deps = depList.split ( "," ) ; for  ( String dep : deps )  { JSModule other = modulesByName.get ( dep ) ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^if  ( other !=module )  {^492^^^^^434^511^[REPLACE] if  ( other == null )  {^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^return ;^493^494^495^^^434^511^[REPLACE] throw new FlagUsageException ( "Module '" + name + "' depends on unknown module '" + dep + "'. Be sure to list modules in dependency order." ) ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^if  ( other != false )  {^492^^^^^434^511^[REPLACE] if  ( other == null )  {^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[ADD]^numJsFiles = Integer.parseInt ( parts[1] ) ;numJsFiles = -1;^464^465^466^467^468^434^511^[ADD] try { numJsFiles = Integer.parseInt ( parts[1] ) ; } catch  ( NumberFormatException ignored )  { numJsFiles = -1; }^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^numJsFiles = Integer.parseInt ( parts[4] ) ;^465^^^^^434^511^[REPLACE] numJsFiles = Integer.parseInt ( parts[1] ) ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[ADD]^^465^^^^^434^511^[ADD] numJsFiles = Integer.parseInt ( parts[1] ) ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^numJsFiles = Integer.parseInt ( parts[1L] ) ;^465^^^^^434^511^[REPLACE] numJsFiles = Integer.parseInt ( parts[1] ) ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^numJsFiles = -2;^467^^^^^434^511^[REPLACE] numJsFiles = -1;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^nextJsFileIndex +=  totalNumJsFiles;^483^^^^^434^511^[REPLACE] nextJsFileIndex += numJsFiles;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^for  ( String filename : files )  { if  ( !"-".equals ( filename )  )  {^443^^^^^434^511^[REPLACE] for  ( String spec : specs )  {^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[ADD]^^443^444^^446^^434^511^[ADD] for  ( String spec : specs )  {  String[] parts = spec.split ( ":" ) ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^String[] parts = depList.endsWith ( ":" ) ;^446^^^^^434^511^[REPLACE] String[] parts = spec.split ( ":" ) ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^String name = deps[1];^453^^^^^434^511^[REPLACE] String name = parts[0];^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^JSModule[] modules = null;^460^^^^^434^511^[REPLACE] JSModule module = new JSModule ( name ) ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^int numJsFiles = -3;^463^^^^^434^511^[REPLACE] int numJsFiles = -1;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[ADD]^^463^^^^^434^511^[ADD] int numJsFiles = -1;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^List<String> moduleJsFiles = jsFiles .size (  )  ;^478^479^^^^434^511^[REPLACE] List<String> moduleJsFiles = jsFiles.subList ( nextJsFileIndex, nextJsFileIndex + numJsFiles ) ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^for  ( JSSourceFile input : createInputs ( moduleJsFiles, false )  )  { module.add ( input ) ;^480^^^^^434^511^[REPLACE] for  ( JSSourceFile input : createInputs ( moduleJsFiles, false )  )  {^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^String depList = parts[3];^487^^^^^434^511^[REPLACE] String depList = parts[2];^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^JSModule other = this .stringCollector (  )  ;^491^^^^^434^511^[REPLACE] JSModule other = modulesByName.get ( dep ) ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[ADD]^^491^^^^^434^511^[ADD] JSModule other = modulesByName.get ( dep ) ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^return ;^458^^^^^434^511^[REPLACE] throw new FlagUsageException  (" ")  ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^return ;^474^475^476^^^434^511^[REPLACE] throw new FlagUsageException ( "Not enough js files specified. Expected " +  ( nextJsFileIndex + numJsFiles - totalNumJsFiles ) + " more in module:" + name ) ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^if  ( result  >  totalNumJsFiles )  {^505^^^^^434^511^[REPLACE] if  ( nextJsFileIndex < totalNumJsFiles )  {^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[ADD]^^505^506^507^508^^434^511^[ADD] if  ( nextJsFileIndex < totalNumJsFiles )  { throw new FlagUsageException ( "Too many js files specified. Expected " + nextJsFileIndex + " but found " + totalNumJsFiles ) ; }^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^throw new FlagUsageException ( "Invalid js file count '" + parts[1] + "' for module: " + name ) ; ;^506^507^^^^434^511^[REPLACE] throw new FlagUsageException ( "Too many js files specified. Expected " + nextJsFileIndex + " but found " + totalNumJsFiles ) ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[ADD]^^506^507^508^^^434^511^[ADD] throw new FlagUsageException ( "Too many js files specified. Expected " + nextJsFileIndex + " but found " + totalNumJsFiles ) ; }^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^return modulesByName.size (  ) .toArray ( new JSModule[modulesByName.size (  ) ] ) ;^510^^^^^434^511^[REPLACE] return modulesByName.values (  ) .toArray ( new JSModule[modulesByName.size (  ) ] ) ;^[METHOD] createJsModules [TYPE] JSModule[] [PARAMETER] String> specs String> jsFiles [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException ignored  [TYPE]  String dep  depList  name  spec  [TYPE]  String[] deps  parts  [TYPE]  JSSourceFile input  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule module  other  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map modulesByName 
[REPLACE]^Preconditions.checkState ( null == null ) ;^524^^^^^523^556^[REPLACE] Preconditions.checkState ( specs != null ) ;^[METHOD] parseModuleWrappers [TYPE] Map [PARAMETER] String> specs JSModule[] modules [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  String name  spec  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSModule m  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map wrappers 
[REMOVE]^Preconditions.checkState ( !specs.isEmpty (  )  ) ;^524^^^^^523^556^[REMOVE] ^[METHOD] parseModuleWrappers [TYPE] Map [PARAMETER] String> specs JSModule[] modules [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  String name  spec  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSModule m  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map wrappers 
[REPLACE]^Map<String, String> wrappers =   modules.length   ;^526^527^^^^523^556^[REPLACE] Map<String, String> wrappers = Maps.newHashMapWithExpectedSize ( modules.length ) ;^[METHOD] parseModuleWrappers [TYPE] Map [PARAMETER] String> specs JSModule[] modules [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  String name  spec  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSModule m  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map wrappers 
[REPLACE]^JSModule[] modules = null;^530^^^^^523^556^[REPLACE] for  ( JSModule m : modules )  {^[METHOD] parseModuleWrappers [TYPE] Map [PARAMETER] String> specs JSModule[] modules [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  String name  spec  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSModule m  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map wrappers 
[REPLACE]^if  ( pos  ||  -1 )  {^538^^^^^523^556^[REPLACE] if  ( pos == -1 )  {^[METHOD] parseModuleWrappers [TYPE] Map [PARAMETER] String> specs JSModule[] modules [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  String name  spec  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSModule m  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map wrappers 
[REPLACE]^throw new FlagUsageException ( "Invalid js file count '" + parts[1] + "' for module: " + name ) ; ;^539^540^^^^523^556^[REPLACE] throw new FlagUsageException ( "Expected module wrapper to have " + "<name>:<wrapper> format: " + spec ) ;^[METHOD] parseModuleWrappers [TYPE] Map [PARAMETER] String> specs JSModule[] modules [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  String name  spec  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSModule m  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map wrappers 
[ADD]^^539^540^^^^523^556^[ADD] throw new FlagUsageException ( "Expected module wrapper to have " + "<name>:<wrapper> format: " + spec ) ;^[METHOD] parseModuleWrappers [TYPE] Map [PARAMETER] String> specs JSModule[] modules [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  String name  spec  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSModule m  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map wrappers 
[REPLACE]^if  ( wrappers .values (  )   )  {^545^^^^^523^556^[REPLACE] if  ( !wrappers.containsKey ( name )  )  {^[METHOD] parseModuleWrappers [TYPE] Map [PARAMETER] String> specs JSModule[] modules [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  String name  spec  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSModule m  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map wrappers 
[REPLACE]^throw new FlagUsageException  (" ")   + " is not a valid charset name." ) ; ;^546^^^^^523^556^[REPLACE] throw new FlagUsageException  (" ")  ;^[METHOD] parseModuleWrappers [TYPE] Map [PARAMETER] String> specs JSModule[] modules [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  String name  spec  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSModule m  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map wrappers 
[REPLACE]^if  ( wrapper.contains ( "%s" )  )  {^549^^^^^523^556^[REPLACE] if  ( !wrapper.contains ( "%s" )  )  {^[METHOD] parseModuleWrappers [TYPE] Map [PARAMETER] String> specs JSModule[] modules [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  String name  spec  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSModule m  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map wrappers 
[REMOVE]^if  ( ! ( wrappers.containsKey ( name )  )  )  {     throw new FlagUsageException (  (  ( "Unknown module: '" + name )  + "'" )  ) ; }^549^^^^^523^556^[REMOVE] ^[METHOD] parseModuleWrappers [TYPE] Map [PARAMETER] String> specs JSModule[] modules [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  String name  spec  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSModule m  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map wrappers 
[REPLACE]^return ;^550^551^^^^523^556^[REPLACE] throw new FlagUsageException ( "No %s placeholder in module wrapper: '" + wrapper + "'" ) ;^[METHOD] parseModuleWrappers [TYPE] Map [PARAMETER] String> specs JSModule[] modules [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  String name  spec  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSModule m  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map wrappers 
[REPLACE]^for  ( String filename : files )  { if  ( !"-".equals ( filename )  )  {^534^^^^^523^556^[REPLACE] for  ( String spec : specs )  {^[METHOD] parseModuleWrappers [TYPE] Map [PARAMETER] String> specs JSModule[] modules [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  String name  spec  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSModule m  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map wrappers 
[REPLACE]^int pos = wrapper.indexOf ( ':' ) ;^537^^^^^523^556^[REPLACE] int pos = spec.indexOf ( ':' ) ;^[METHOD] parseModuleWrappers [TYPE] Map [PARAMETER] String> specs JSModule[] modules [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  String name  spec  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSModule m  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map wrappers 
[REPLACE]^String name = spec.substring ( 4, pos ) ;^544^^^^^523^556^[REPLACE] String name = spec.substring ( 0, pos ) ;^[METHOD] parseModuleWrappers [TYPE] Map [PARAMETER] String> specs JSModule[] modules [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  String name  spec  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSModule m  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map wrappers 
[ADD]^^544^^^^^523^556^[ADD] String name = spec.substring ( 0, pos ) ;^[METHOD] parseModuleWrappers [TYPE] Map [PARAMETER] String> specs JSModule[] modules [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  String name  spec  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSModule m  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map wrappers 
[REPLACE]^String wrapper = spec .substring ( NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER , i )  ;^548^^^^^523^556^[REPLACE] String wrapper = spec.substring ( pos + 1 ) ;^[METHOD] parseModuleWrappers [TYPE] Map [PARAMETER] String> specs JSModule[] modules [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  String name  spec  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSModule m  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map wrappers 
[REPLACE]^return ;^539^540^^^^523^556^[REPLACE] throw new FlagUsageException ( "Expected module wrapper to have " + "<name>:<wrapper> format: " + spec ) ;^[METHOD] parseModuleWrappers [TYPE] Map [PARAMETER] String> specs JSModule[] modules [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  String name  spec  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSModule m  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map wrappers 
[REPLACE]^throw new FlagUsageException ( "Expected module wrapper to have " + "<name>:<wrapper> format: " + spec ) ; ;^550^551^^^^523^556^[REPLACE] throw new FlagUsageException ( "No %s placeholder in module wrapper: '" + wrapper + "'" ) ;^[METHOD] parseModuleWrappers [TYPE] Map [PARAMETER] String> specs JSModule[] modules [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  String name  spec  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSModule m  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map wrappers 
[REPLACE]^return null;^555^^^^^523^556^[REPLACE] return wrappers;^[METHOD] parseModuleWrappers [TYPE] Map [PARAMETER] String> specs JSModule[] modules [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  String name  spec  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSModule m  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  Map wrappers 
[REPLACE]^int pos = wrapper.endsWith ( codePlaceholder ) ;^564^^^^^563^593^[REPLACE] int pos = wrapper.indexOf ( codePlaceholder ) ;^[METHOD] writeOutput [TYPE] void [PARAMETER] PrintStream out Compiler compiler String code String wrapper String codePlaceholder [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Compiler compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  String code  codePlaceholder  prefix  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^if  ( pos  ==  -1 )  {^565^^^^^563^593^[REPLACE] if  ( pos != -1 )  {^[METHOD] writeOutput [TYPE] void [PARAMETER] PrintStream out Compiler compiler String code String wrapper String codePlaceholder [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Compiler compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  String code  codePlaceholder  prefix  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^out.println ( wrapper ) ;^591^^^^^565^592^[REPLACE] out.println ( code ) ;^[METHOD] writeOutput [TYPE] void [PARAMETER] PrintStream out Compiler compiler String code String wrapper String codePlaceholder [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Compiler compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  String code  codePlaceholder  prefix  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^if  ( pos  <  0 )  {^568^^^^^563^593^[REPLACE] if  ( pos > 0 )  {^[METHOD] writeOutput [TYPE] void [PARAMETER] PrintStream out Compiler compiler String code String wrapper String codePlaceholder [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Compiler compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  String code  codePlaceholder  prefix  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[ADD]^^568^569^570^571^^563^593^[ADD] if  ( pos > 0 )  { prefix = wrapper.substring ( 0, pos ) ; out.print ( prefix ) ; }^[METHOD] writeOutput [TYPE] void [PARAMETER] PrintStream out Compiler compiler String code String wrapper String codePlaceholder [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Compiler compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  String code  codePlaceholder  prefix  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^prefix = wrapper.substring ( 1, pos ) ;^569^^^^^563^593^[REPLACE] prefix = wrapper.substring ( 0, pos ) ;^[METHOD] writeOutput [TYPE] void [PARAMETER] PrintStream out Compiler compiler String code String wrapper String codePlaceholder [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Compiler compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  String code  codePlaceholder  prefix  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[ADD]^^569^570^^^^563^593^[ADD] prefix = wrapper.substring ( 0, pos ) ; out.print ( prefix ) ;^[METHOD] writeOutput [TYPE] void [PARAMETER] PrintStream out Compiler compiler String code String wrapper String codePlaceholder [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Compiler compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  String code  codePlaceholder  prefix  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^if  ( suffixStart == wrapper.length (  )  - 1 )  {^576^^^^^563^593^[REPLACE] if  ( suffixStart == wrapper.length (  )  )  {^[METHOD] writeOutput [TYPE] void [PARAMETER] PrintStream out Compiler compiler String code String wrapper String codePlaceholder [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Compiler compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  String code  codePlaceholder  prefix  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^out.println ( prefix.substring ( suffixStart )  ) ;^581^^^^^576^582^[REPLACE] out.println ( wrapper.substring ( suffixStart )  ) ;^[METHOD] writeOutput [TYPE] void [PARAMETER] PrintStream out Compiler compiler String code String wrapper String codePlaceholder [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Compiler compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  String code  codePlaceholder  prefix  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^out.close (  ) ;^579^^^^^563^593^[REPLACE] out.println (  ) ;^[METHOD] writeOutput [TYPE] void [PARAMETER] PrintStream out Compiler compiler String code String wrapper String codePlaceholder [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Compiler compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  String code  codePlaceholder  prefix  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^if  ( compiler == null && compiler.getSourceMap (  )  != null )  {^586^^^^^563^593^[REPLACE] if  ( compiler != null && compiler.getSourceMap (  )  != null )  {^[METHOD] writeOutput [TYPE] void [PARAMETER] PrintStream out Compiler compiler String code String wrapper String codePlaceholder [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Compiler compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  String code  codePlaceholder  prefix  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^compiler.getSourceMap (  ) .setWrapperPrefix ( wrapper ) ;^587^^^^^563^593^[REPLACE] compiler.getSourceMap (  ) .setWrapperPrefix ( prefix ) ;^[METHOD] writeOutput [TYPE] void [PARAMETER] PrintStream out Compiler compiler String code String wrapper String codePlaceholder [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Compiler compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  String code  codePlaceholder  prefix  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^compiler.getPropertyMap (  ) .setWrapperPrefix ( prefix ) ;^587^^^^^563^593^[REPLACE] compiler.getSourceMap (  ) .setWrapperPrefix ( prefix ) ;^[METHOD] writeOutput [TYPE] void [PARAMETER] PrintStream out Compiler compiler String code String wrapper String codePlaceholder [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Compiler compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  String code  codePlaceholder  prefix  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^prefix = wrapper.substring ( 0 / 2, pos ) ;^569^^^^^563^593^[REPLACE] prefix = wrapper.substring ( 0, pos ) ;^[METHOD] writeOutput [TYPE] void [PARAMETER] PrintStream out Compiler compiler String code String wrapper String codePlaceholder [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Compiler compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  String code  codePlaceholder  prefix  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^String depList = parts[2];^566^^^^^563^593^[REPLACE] String prefix = "";^[METHOD] writeOutput [TYPE] void [PARAMETER] PrintStream out Compiler compiler String code String wrapper String codePlaceholder [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Compiler compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  String code  codePlaceholder  prefix  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^int suffixStart = totalNumJsFiles + codePlaceholder.length (  )  + 4;^575^^^^^563^593^[REPLACE] int suffixStart = pos + codePlaceholder.length (  ) ;^[METHOD] writeOutput [TYPE] void [PARAMETER] PrintStream out Compiler compiler String code String wrapper String codePlaceholder [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Compiler compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  String code  codePlaceholder  prefix  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^prefix = wrapper.substring ( 0 - 3, pos ) ;^569^^^^^563^593^[REPLACE] prefix = wrapper.substring ( 0, pos ) ;^[METHOD] writeOutput [TYPE] void [PARAMETER] PrintStream out Compiler compiler String code String wrapper String codePlaceholder [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Compiler compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  String code  codePlaceholder  prefix  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^if  ( suffixStart == wrapper.length (  )  %  2 )  {^576^^^^^563^593^[REPLACE] if  ( suffixStart == wrapper.length (  )  )  {^[METHOD] writeOutput [TYPE] void [PARAMETER] PrintStream out Compiler compiler String code String wrapper String codePlaceholder [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Compiler compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  String code  codePlaceholder  prefix  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[ADD]^^576^577^^579^^563^593^[ADD] if  ( suffixStart == wrapper.length (  )  )  {  out.println (  ) ;^[METHOD] writeOutput [TYPE] void [PARAMETER] PrintStream out Compiler compiler String code String wrapper String codePlaceholder [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Compiler compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  String code  codePlaceholder  prefix  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^out.println ( wrapper.charAt ( suffixStart )  ) ;^581^^^^^576^582^[REPLACE] out.println ( wrapper.substring ( suffixStart )  ) ;^[METHOD] writeOutput [TYPE] void [PARAMETER] PrintStream out Compiler compiler String code String wrapper String codePlaceholder [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Compiler compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  String code  codePlaceholder  prefix  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[ADD]^^581^^^^^576^582^[ADD] out.println ( wrapper.substring ( suffixStart )  ) ;^[METHOD] writeOutput [TYPE] void [PARAMETER] PrintStream out Compiler compiler String code String wrapper String codePlaceholder [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Compiler compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  String code  codePlaceholder  prefix  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^out.println ( wrapper.charAt ( totalNumJsFiles )  ) ;^581^^^^^576^582^[REPLACE] out.println ( wrapper.substring ( suffixStart )  ) ;^[METHOD] writeOutput [TYPE] void [PARAMETER] PrintStream out Compiler compiler String code String wrapper String codePlaceholder [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Compiler compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  String code  codePlaceholder  prefix  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^out .println ( prefix )  ;^579^^^^^563^593^[REPLACE] out.println (  ) ;^[METHOD] writeOutput [TYPE] void [PARAMETER] PrintStream out Compiler compiler String code String wrapper String codePlaceholder [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Compiler compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  String code  codePlaceholder  prefix  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[ADD]^^587^^^^^563^593^[ADD] compiler.getSourceMap (  ) .setWrapperPrefix ( prefix ) ;^[METHOD] writeOutput [TYPE] void [PARAMETER] PrintStream out Compiler compiler String code String wrapper String codePlaceholder [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Compiler compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  String code  codePlaceholder  prefix  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^int suffixStart = pos + codePlaceholder.length (  )  %  0.5 ;^575^^^^^563^593^[REPLACE] int suffixStart = pos + codePlaceholder.length (  ) ;^[METHOD] writeOutput [TYPE] void [PARAMETER] PrintStream out Compiler compiler String code String wrapper String codePlaceholder [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Compiler compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  String code  codePlaceholder  prefix  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[ADD]^^575^^^^^563^593^[ADD] int suffixStart = pos + codePlaceholder.length (  ) ;^[METHOD] writeOutput [TYPE] void [PARAMETER] PrintStream out Compiler compiler String code String wrapper String codePlaceholder [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  Compiler compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  String code  codePlaceholder  prefix  wrapper  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^if  ( pathPrefix.length (  )  - 1 > 0 )  {^600^^^^^599^609^[REPLACE] if  ( pathPrefix.length (  )  > 0 )  {^[METHOD] maybeCreateDirsForPath [TYPE] void [PARAMETER] String pathPrefix [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  String dirName  pathPrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^if  ( dirName == this )  {^605^^^^^599^609^[REPLACE] if  ( dirName != null )  {^[METHOD] maybeCreateDirsForPath [TYPE] void [PARAMETER] String pathPrefix [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  String dirName  pathPrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[ADD]^^605^606^607^^^599^609^[ADD] if  ( dirName != null )  { new File ( dirName ) .mkdirs (  ) ; }^[METHOD] maybeCreateDirsForPath [TYPE] void [PARAMETER] String pathPrefix [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  String dirName  pathPrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^new File ( pathPrefix ) .mkdirs (  ) ;^606^^^^^599^609^[REPLACE] new File ( dirName ) .mkdirs (  ) ;^[METHOD] maybeCreateDirsForPath [TYPE] void [PARAMETER] String pathPrefix [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  String dirName  pathPrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^String dirName = dirName.charAt ( pathPrefix.size (  )  - 0  )  == File.separatorChar ? pathPrefix.substring ( 0, pathPrefix.size (  )  - 0  )  : new File ( pathPrefix ) .getParent (  ) ;^601^602^603^604^^599^609^[REPLACE] String dirName = pathPrefix.charAt ( pathPrefix.length (  )  - 1 )  == File.separatorChar ? pathPrefix.substring ( 0, pathPrefix.length (  )  - 1 )  : new File ( pathPrefix ) .getParent (  ) ;^[METHOD] maybeCreateDirsForPath [TYPE] void [PARAMETER] String pathPrefix [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  String dirName  pathPrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[ADD]^^601^602^603^^^599^609^[ADD] String dirName = pathPrefix.charAt ( pathPrefix.length (  )  - 1 )  == File.separatorChar ? pathPrefix.substring ( 0, pathPrefix.length (  )  - 1 )  : new File (^[METHOD] maybeCreateDirsForPath [TYPE] void [PARAMETER] String pathPrefix [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  String dirName  pathPrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^if  ( dirName == null )  {^605^^^^^599^609^[REPLACE] if  ( dirName != null )  {^[METHOD] maybeCreateDirsForPath [TYPE] void [PARAMETER] String pathPrefix [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  String dirName  pathPrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[ADD]^new File ( dirName ) .mkdirs (  ) ;^605^606^607^^^599^609^[ADD] if  ( dirName != null )  { new File ( dirName ) .mkdirs (  ) ; }^[METHOD] maybeCreateDirsForPath [TYPE] void [PARAMETER] String pathPrefix [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  String dirName  pathPrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^new File ( dirName ) .File (  ) ;^606^^^^^599^609^[REPLACE] new File ( dirName ) .mkdirs (  ) ;^[METHOD] maybeCreateDirsForPath [TYPE] void [PARAMETER] String pathPrefix [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  String dirName  pathPrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^String dirName = pathPrefix.charAt ( pathPrefix.size (  )  - 1 )  == File.separatorChar ? pathPrefix.substring ( 0, pathPrefix.size (  )  - 1 )  : new File ( pathPrefix ) .getParent (  ) ;^601^602^603^604^^599^609^[REPLACE] String dirName = pathPrefix.charAt ( pathPrefix.length (  )  - 1 )  == File.separatorChar ? pathPrefix.substring ( 0, pathPrefix.length (  )  - 1 )  : new File ( pathPrefix ) .getParent (  ) ;^[METHOD] maybeCreateDirsForPath [TYPE] void [PARAMETER] String pathPrefix [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List files  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  specs  [TYPE]  String dirName  pathPrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^Level.parse ( FLAG_logging_level.get (  )   ) ;^617^^^^^616^661^[REPLACE] Compiler.setLoggingLevel ( Level.parse ( FLAG_logging_level.get (  )  )  ) ;^[METHOD] doRun [TYPE] int [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSSourceFile[] externs  inputs  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^Compiler.setLogging  FLAG_logging_level.get (  )   ) ;^617^^^^^616^661^[REPLACE] Compiler.setLoggingLevel ( Level.parse ( FLAG_logging_level.get (  )  )  ) ;^[METHOD] doRun [TYPE] int [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSSourceFile[] externs  inputs  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^Compiler.setLoggingLevel ( Level.parse ( FLAG_logging_level.stringCollector (  )  )  ) ;^617^^^^^616^661^[REPLACE] Compiler.setLoggingLevel ( Level.parse ( FLAG_logging_level.get (  )  )  ) ;^[METHOD] doRun [TYPE] int [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSSourceFile[] externs  inputs  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^^617^^^^^616^661^[ADD] Compiler.setLoggingLevel ( Level.parse ( FLAG_logging_level.get (  )  )  ) ;^[METHOD] doRun [TYPE] int [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSSourceFile[] externs  inputs  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^B options = createOptions (  ) ;^619^^^^^616^661^[REPLACE] List<JSSourceFile> externsList = createExterns (  ) ;^[METHOD] doRun [TYPE] int [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSSourceFile[] externs  inputs  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^JSSourceFile[] externs = new JSSourceFile[externsList .subList ( i , result )  ];^620^^^^^616^661^[REPLACE] JSSourceFile[] externs = new JSSourceFile[externsList.size (  ) ];^[METHOD] doRun [TYPE] int [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSSourceFile[] externs  inputs  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^externsList.toArray ( inputs ) ;^621^^^^^616^661^[REPLACE] externsList.toArray ( externs ) ;^[METHOD] doRun [TYPE] int [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSSourceFile[] externs  inputs  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^compiler  =  compiler ;^623^^^^^616^661^[REPLACE] compiler = createCompiler (  ) ;^[METHOD] doRun [TYPE] int [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSSourceFile[] externs  inputs  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^long endTime = System.currentTimeMillis (  ) ;^624^^^^^616^661^[REPLACE] B options = createOptions (  ) ;^[METHOD] doRun [TYPE] int [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSSourceFile[] externs  inputs  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^JSModule[] modules = true;^626^^^^^616^661^[REPLACE] JSModule[] modules = null;^[METHOD] doRun [TYPE] int [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSSourceFile[] externs  inputs  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^^626^627^^^^616^661^[ADD] JSModule[] modules = null; Result result;^[METHOD] doRun [TYPE] int [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSSourceFile[] externs  inputs  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^int result = 0;^627^^^^^616^661^[REPLACE] Result result;^[METHOD] doRun [TYPE] int [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSSourceFile[] externs  inputs  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^out.print ( prefix ) ;^629^^^^^616^661^[REPLACE] setRunOptions ( options ) ;^[METHOD] doRun [TYPE] int [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSSourceFile[] externs  inputs  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REMOVE]^out.print ( prefix ) ;^629^^^^^616^661^[REMOVE] ^[METHOD] doRun [TYPE] int [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSSourceFile[] externs  inputs  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( inputCharset  &&  Charsets.UTF_8 )  {^635^^^^^616^661^[REPLACE] if  ( inputCharset == Charsets.UTF_8 )  {^[METHOD] doRun [TYPE] int [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSSourceFile[] externs  inputs  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.outputCharset =  inputCharset;^638^^^^^635^639^[REPLACE] options.outputCharset = inputCharset;^[METHOD] doRun [TYPE] int [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSSourceFile[] externs  inputs  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^^638^^^^^635^639^[ADD] options.outputCharset = inputCharset;^[METHOD] doRun [TYPE] int [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSSourceFile[] externs  inputs  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.outputCharset =  Charsets.US_ASCII;^636^^^^^616^661^[REPLACE] options.outputCharset = Charsets.US_ASCII;^[METHOD] doRun [TYPE] int [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSSourceFile[] externs  inputs  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^^636^^^^^616^661^[ADD] options.outputCharset = Charsets.US_ASCII;^[METHOD] doRun [TYPE] int [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSSourceFile[] externs  inputs  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.outputCharset =  inputCharset;^638^^^^^616^661^[REPLACE] options.outputCharset = inputCharset;^[METHOD] doRun [TYPE] int [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSSourceFile[] externs  inputs  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^^638^^^^^616^661^[ADD] options.outputCharset = inputCharset;^[METHOD] doRun [TYPE] int [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSSourceFile[] externs  inputs  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( options.jsOutputFile.isEmpty (  )  )  {^641^^^^^616^661^[REPLACE] if  ( !options.jsOutputFile.isEmpty (  )  )  {^[METHOD] doRun [TYPE] int [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSSourceFile[] externs  inputs  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^out =  new PrintStream ( null.jsOutputFile, inputCharset.name (  )  ) ;^642^^^^^616^661^[REPLACE] out = new PrintStream ( options.jsOutputFile, inputCharset.name (  )  ) ;^[METHOD] doRun [TYPE] int [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSSourceFile[] externs  inputs  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^(  ( PrintStreamErrorManager )  compiler.getSourceMap (  )  ) .setSummaryDetailLevel ( FLAG_summary_detail_level.get (  )  ) ;^645^646^^^^616^661^[REPLACE] (  ( PrintStreamErrorManager )  compiler.getErrorManager (  )  ) .setSummaryDetailLevel ( FLAG_summary_detail_level.get (  )  ) ;^[METHOD] doRun [TYPE] int [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSSourceFile[] externs  inputs  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^.setSummaryDetailLevel ( FLAG_summary_detail_level.stringCollector (  )  ) ;^646^^^^^616^661^[REPLACE] .setSummaryDetailLevel ( FLAG_summary_detail_level.get (  )  ) ;^[METHOD] doRun [TYPE] int [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSSourceFile[] externs  inputs  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^List<String> jsFiles = FLAG_js .get (  )  ;^648^^^^^616^661^[REPLACE] List<String> jsFiles = FLAG_js.get (  ) ;^[METHOD] doRun [TYPE] int [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSSourceFile[] externs  inputs  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^List<String> moduleSpecs = FLAG_module.stringCollector (  ) ;^649^^^^^616^661^[REPLACE] List<String> moduleSpecs = FLAG_module.get (  ) ;^[METHOD] doRun [TYPE] int [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSSourceFile[] externs  inputs  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( files.isEmpty (  )  )  {^650^^^^^616^661^[REPLACE] if  ( !moduleSpecs.isEmpty (  )  )  {^[METHOD] doRun [TYPE] int [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSSourceFile[] externs  inputs  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^result = compiler.compile ( externs, modules, options ) ; ;^657^^^^^650^658^[REPLACE] result = compiler.compile ( externs, inputs, options ) ;^[METHOD] doRun [TYPE] int [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSSourceFile[] externs  inputs  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^List<JSSourceFile> inputList = createSourceInputs ( this ) ;^654^^^^^650^658^[REPLACE] List<JSSourceFile> inputList = createSourceInputs ( jsFiles ) ;^[METHOD] doRun [TYPE] int [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSSourceFile[] externs  inputs  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^JSSourceFile[] inputs = new JSSourceFile[inputList .subList ( runs , nextJsFileIndex )  ];^655^^^^^650^658^[REPLACE] JSSourceFile[] inputs = new JSSourceFile[inputList.size (  ) ];^[METHOD] doRun [TYPE] int [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSSourceFile[] externs  inputs  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^modules =  createJsModules ( null, jsFiles ) ;^651^^^^^616^661^[REPLACE] modules = createJsModules ( moduleSpecs, jsFiles ) ;^[METHOD] doRun [TYPE] int [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSSourceFile[] externs  inputs  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^^651^^^^^616^661^[ADD] modules = createJsModules ( moduleSpecs, jsFiles ) ;^[METHOD] doRun [TYPE] int [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSSourceFile[] externs  inputs  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^result = compiler.compile ( externs, inputs, options ) ; ;^652^^^^^616^661^[REPLACE] result = compiler.compile ( externs, modules, options ) ;^[METHOD] doRun [TYPE] int [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSSourceFile[] externs  inputs  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^result = compiler.compile ( externs, modules, options ) ; ;^657^^^^^616^661^[REPLACE] result = compiler.compile ( externs, inputs, options ) ;^[METHOD] doRun [TYPE] int [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSSourceFile[] externs  inputs  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^^657^^^^^616^661^[ADD] result = compiler.compile ( externs, inputs, options ) ;^[METHOD] doRun [TYPE] int [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSSourceFile[] externs  inputs  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^List<JSSourceFile> inputList = createSourceInputs ( null ) ;^654^^^^^616^661^[REPLACE] List<JSSourceFile> inputList = createSourceInputs ( jsFiles ) ;^[METHOD] doRun [TYPE] int [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSSourceFile[] externs  inputs  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^JSSourceFile[] inputs = new JSSourceFile[inputList.add (  ) ];^655^^^^^616^661^[REPLACE] JSSourceFile[] inputs = new JSSourceFile[inputList.size (  ) ];^[METHOD] doRun [TYPE] int [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSSourceFile[] externs  inputs  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^return createExternInputs ( FLAG_externs.get (  )  ) ;^660^^^^^616^661^[REPLACE] return processResults ( result, modules, options ) ;^[METHOD] doRun [TYPE] int [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream err  out  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  JSSourceFile[] externs  inputs  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( options.externExportsPath != null )  {^668^^^^^667^764^[REPLACE] if  ( FLAG_compute_phase_ordering.get (  )  )  {^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[ADD]^^668^669^670^^^667^764^[ADD] if  ( FLAG_compute_phase_ordering.get (  )  )  { return 0; }^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^return 3;^669^^^^^667^764^[REPLACE] return 0;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^return 1;^669^^^^^667^764^[REPLACE] return 0;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^if  ( FLAG_third_party.get (  )  )  {^672^^^^^667^764^[REPLACE] if  ( FLAG_print_ast.get (  )  )  {^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^if  ( compiler.getRoot (  )  != null )  {^673^^^^^667^764^[REPLACE] if  ( compiler.getRoot (  )  == null )  {^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^return 0 * 3;^679^^^^^673^680^[REPLACE] return 0;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^ControlFlowGraph<Node> cfg = compiler.toBytes (  ) ;^676^^^^^673^680^[REPLACE] ControlFlowGraph<Node> cfg = compiler.computeCFG (  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^return 1 + 4;^674^^^^^667^764^[REPLACE] return 1;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^return 1 - 2;^674^^^^^667^764^[REPLACE] return 1;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^return 1;^679^^^^^667^764^[REPLACE] return 0;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^ControlFlowGraph<Node> cfg = compiler.toBytes (  ) ;^676^^^^^667^764^[REPLACE] ControlFlowGraph<Node> cfg = compiler.computeCFG (  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[ADD]^^676^677^^^^667^764^[ADD] ControlFlowGraph<Node> cfg = compiler.computeCFG (  ) ; DotFormatter.appendDot ( compiler.getRoot (  ) , cfg, out ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^if  ( compiler.getRoot (  )  != true )  {^673^^^^^667^764^[REPLACE] if  ( compiler.getRoot (  )  == null )  {^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[ADD]^^673^674^675^676^677^667^764^[ADD] if  ( compiler.getRoot (  )  == null )  { return 1; } else { ControlFlowGraph<Node> cfg = compiler.computeCFG (  ) ; DotFormatter.appendDot ( compiler.getRoot (  ) , cfg, out ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^return 3;^679^^^^^673^680^[REPLACE] return 0;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^ControlFlowGraph<Node> cfg = compiler .toBytes (  )  ;^676^^^^^673^680^[REPLACE] ControlFlowGraph<Node> cfg = compiler.computeCFG (  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[ADD]^^676^^^^^673^680^[ADD] ControlFlowGraph<Node> cfg = compiler.computeCFG (  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^return 0;^674^^^^^667^764^[REPLACE] return 1;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^return 0 >>> 0;^679^^^^^667^764^[REPLACE] return 0;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^if  ( FLAG_print_ast.get (  )  )  {^683^^^^^667^764^[REPLACE] if  ( FLAG_print_tree.get (  )  )  {^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^if  ( compiler.getRoot (  )  != this  )  {^684^^^^^667^764^[REPLACE] if  ( compiler.getRoot (  )  == null )  {^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^return 1;^690^^^^^684^691^[REPLACE] return 0;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^return 1 * 3;^686^^^^^667^764^[REPLACE] return 1;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^return 3;^686^^^^^667^764^[REPLACE] return 1;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^return 1;^690^^^^^667^764^[REPLACE] return 0;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^if  ( compiler.getRoot (  )  != this )  {^684^^^^^667^764^[REPLACE] if  ( compiler.getRoot (  )  == null )  {^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^return 3;^690^^^^^684^691^[REPLACE] return 0;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^return 1 << 3;^686^^^^^667^764^[REPLACE] return 1;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^return 3;^690^^^^^667^764^[REPLACE] return 0;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^if  ( options.externExportsPath != null )  {^694^^^^^667^764^[REPLACE] if  ( result.success )  {^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^if  ( modules != this )  {^695^^^^^667^764^[REPLACE] if  ( modules == null )  {^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^if  ( shouldGenerateMapPerModule ( options )  )  {^712^^^^^695^748^[REPLACE] if  ( !shouldGenerateMapPerModule ( options )  )  {^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^mapOut = openSourceMapStream ( options, moduleFilePrefix, false ) ;^713^^^^^695^748^[REPLACE] mapOut = openSourceMapStream ( options, moduleFilePrefix, null ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^if  ( !shouldGenerateMapPerModule ( options )  )  {^717^^^^^695^748^[REPLACE] if  ( shouldGenerateMapPerModule ( options )  )  {^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^mapOut =  openSourceMapStream ( null, moduleFilePrefix, m.getName (  )  ) ;^718^719^^^^695^748^[REPLACE] mapOut = openSourceMapStream ( options, moduleFilePrefix, m.getName (  )  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[ADD]^^718^719^^^^695^748^[ADD] mapOut = openSourceMapStream ( options, moduleFilePrefix, m.getName (  )  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^if  ( options.sourceMapOutputPath == null )  {^726^^^^^695^748^[REPLACE] if  ( options.sourceMapOutputPath != null )  {^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[ADD]^^726^727^728^^^695^748^[ADD] if  ( options.sourceMapOutputPath != null )  { compiler.getSourceMap (  ) .reset (  ) ; }^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^compiler.getSourceMap (  ) .save (  ) ;^727^^^^^695^748^[REPLACE] compiler.getSourceMap (  ) .reset (  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^compiler.getPropertyMap (  ) .reset (  ) ;^727^^^^^695^748^[REPLACE] compiler.getSourceMap (  ) .reset (  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[ADD]^^727^^^^^695^748^[ADD] compiler.getSourceMap (  ) .reset (  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^if  ( options.sourceMapOutputPath == true )  {^733^^^^^695^748^[REPLACE] if  ( options.sourceMapOutputPath != null )  {^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[ADD]^compiler.getSourceMap (  ) .appendTo ( mapOut, m.getName (  )  ) ;^733^734^735^^^695^748^[ADD] if  ( options.sourceMapOutputPath != null )  { compiler.getSourceMap (  ) .appendTo ( mapOut, m.getName (  )  ) ; }^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^compiler.getSourceMap (  ) .appendStringTree ( mapOut, m.getName (  )  ) ;^734^^^^^695^748^[REPLACE] compiler.getSourceMap (  ) .appendTo ( mapOut, m.getName (  )  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^compiler.getPropertyMap (  ) .appendTo ( mapOut, m.getName (  )  ) ;^734^^^^^695^748^[REPLACE] compiler.getSourceMap (  ) .appendTo ( mapOut, m.getName (  )  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^compiler.getSourceMap (  ) .appendTo ( mapOut, m .parse ( null )   ) ;^734^^^^^695^748^[REPLACE] compiler.getSourceMap (  ) .appendTo ( mapOut, m.getName (  )  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^if  ( shouldGenerateMapPerModule ( options )  && mapOut == null )  {^739^^^^^695^748^[REPLACE] if  ( shouldGenerateMapPerModule ( options )  && mapOut != null )  {^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^mapOut = false;^741^^^^^695^748^[REPLACE] mapOut = null;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^if  ( ps == null )  {^745^^^^^695^748^[REPLACE] if  ( mapOut != null )  {^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^mapOut .PrintStream ( moduleFilePrefix , moduleFilePrefix )  ;^746^^^^^695^748^[REPLACE] mapOut.close (  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^mapOut = openSourceMapStream ( options, moduleFilePrefix, this ) ;^713^^^^^695^748^[REPLACE] mapOut = openSourceMapStream ( options, moduleFilePrefix, null ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[ADD]^^713^^^^^695^748^[ADD] mapOut = openSourceMapStream ( options, moduleFilePrefix, null ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^mapOut = true;^741^^^^^695^748^[REPLACE] mapOut = null;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^String moduleFilePrefix = FLAG_module_output_path_prefix.stringCollector (  ) ;^702^^^^^695^748^[REPLACE] String moduleFilePrefix = FLAG_module_output_path_prefix.get (  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^Map<String, String> moduleWrappers = parseModuleWrappers ( FLAG_module_wrapper .get (  )  , modules ) ;^704^705^^^^695^748^[REPLACE] Map<String, String> moduleWrappers = parseModuleWrappers ( FLAG_module_wrapper.get (  ) , modules ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^PrintStream mapOut = false;^710^^^^^695^748^[REPLACE] PrintStream mapOut = null;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[ADD]^^710^^^^^695^748^[ADD] PrintStream mapOut = null;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^JSModule[] modules = null;^716^^^^^695^748^[REPLACE] for  ( JSModule m : modules )  {^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[ADD]^^716^717^718^719^720^695^748^[ADD] for  ( JSModule m : modules )  { if  ( shouldGenerateMapPerModule ( options )  )  { mapOut = openSourceMapStream ( options, moduleFilePrefix, m.getName (  )  ) ; }^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^PrintStream ps = new PrintStream ( new FileOutputStream ( moduleFilePrefix  ==  m.getName (  )   ==  ".js" )  ) ;^722^723^724^^^695^748^[REPLACE] PrintStream ps = new PrintStream ( new FileOutputStream ( moduleFilePrefix + m.getName (  )  + ".js" )  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^writeOutput ( out, compiler, compiler.toSource (  ) , FLAG_output_wrapper .stringCollector (  ) , FLAG_output_wrapper_marker.get (  )  ) ;^696^697^^^^667^764^[REPLACE] writeOutput ( out, compiler, compiler.toSource (  ) , FLAG_output_wrapper .get (  ) , FLAG_output_wrapper_marker.get (  )  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^writeOutput ( out, compiler, compiler.getSourceMap (  ) , FLAG_output_wrapper .get (  ) , FLAG_output_wrapper_marker.get (  )  ) ;^696^697^^^^667^764^[REPLACE] writeOutput ( out, compiler, compiler.toSource (  ) , FLAG_output_wrapper .get (  ) , FLAG_output_wrapper_marker.get (  )  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[ADD]^^696^697^^^^667^764^[ADD] writeOutput ( out, compiler, compiler.toSource (  ) , FLAG_output_wrapper .get (  ) , FLAG_output_wrapper_marker.get (  )  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^.stringCollector (  ) , FLAG_output_wrapper_marker.get (  )  ) ;^697^^^^^667^764^[REPLACE] .get (  ) , FLAG_output_wrapper_marker.get (  )  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[ADD]^^697^^^^^667^764^[ADD] .get (  ) , FLAG_output_wrapper_marker.get (  )  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^&& options.sourceMapOutputPath.contains ( "%module%" ) ;^700^^^^^667^764^[REPLACE] outputSourceMap ( options, options.jsOutputFile ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REMOVE]^&& options.sourceMapOutputPath.contains ( "%module%" ) ;^700^^^^^667^764^[REMOVE] ^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^if  ( shouldGenerateMapPerModule ( options )  )  {^712^^^^^667^764^[REPLACE] if  ( !shouldGenerateMapPerModule ( options )  )  {^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^mapOut = openSourceMapStream ( options, moduleFilePrefix, false ) ;^713^^^^^667^764^[REPLACE] mapOut = openSourceMapStream ( options, moduleFilePrefix, null ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^if  ( !shouldGenerateMapPerModule ( options )  )  {^717^^^^^667^764^[REPLACE] if  ( shouldGenerateMapPerModule ( options )  )  {^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[ADD]^^717^718^719^720^^667^764^[ADD] if  ( shouldGenerateMapPerModule ( options )  )  { mapOut = openSourceMapStream ( options, moduleFilePrefix, m.getName (  )  ) ; }^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^mapOut =  openSourceMapStream ( null, moduleFilePrefix, m.getName (  )  ) ;^718^719^^^^667^764^[REPLACE] mapOut = openSourceMapStream ( options, moduleFilePrefix, m.getName (  )  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[ADD]^^718^719^^^^667^764^[ADD] mapOut = openSourceMapStream ( options, moduleFilePrefix, m.getName (  )  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^if  ( options.sourceMapOutputPath == null )  {^726^^^^^667^764^[REPLACE] if  ( options.sourceMapOutputPath != null )  {^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[ADD]^^726^727^728^^^667^764^[ADD] if  ( options.sourceMapOutputPath != null )  { compiler.getSourceMap (  ) .reset (  ) ; }^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^compiler.getSourceMap (  )  .writeTo ( true )  ;^727^^^^^667^764^[REPLACE] compiler.getSourceMap (  ) .reset (  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[ADD]^^727^^^^^667^764^[ADD] compiler.getSourceMap (  ) .reset (  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^compiler.getPropertyMap (  ) .reset (  ) ;^727^^^^^667^764^[REPLACE] compiler.getSourceMap (  ) .reset (  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^if  ( options.sourceMapOutputPath == null )  {^733^^^^^667^764^[REPLACE] if  ( options.sourceMapOutputPath != null )  {^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[ADD]^compiler.getSourceMap (  ) .appendTo ( mapOut, m.getName (  )  ) ;^733^734^735^^^667^764^[ADD] if  ( options.sourceMapOutputPath != null )  { compiler.getSourceMap (  ) .appendTo ( mapOut, m.getName (  )  ) ; }^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^compiler.getPropertyMap (  ) .appendTo ( mapOut, m.getName (  )  ) ;^734^^^^^667^764^[REPLACE] compiler.getSourceMap (  ) .appendTo ( mapOut, m.getName (  )  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^compiler .getPropertyMap (  )  .appendTo ( mapOut, m.getName (  )  ) ;^734^^^^^667^764^[REPLACE] compiler.getSourceMap (  ) .appendTo ( mapOut, m.getName (  )  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^if  ( compiler.getPropertyMap (  )  != null )  { compiler.getPropertyMap (  ) .save ( propertyMapOutputPath ) ;^734^^^^^667^764^[REPLACE] compiler.getSourceMap (  ) .appendTo ( mapOut, m.getName (  )  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^if  (  mapOut == null )  {^739^^^^^667^764^[REPLACE] if  ( shouldGenerateMapPerModule ( options )  && mapOut != null )  {^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^mapOut = true;^741^^^^^667^764^[REPLACE] mapOut = null;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^if  ( ps == null )  {^745^^^^^667^764^[REPLACE] if  ( mapOut != null )  {^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^mapOut .PrintStream ( moduleFilePrefix , moduleFilePrefix )  ;^746^^^^^667^764^[REPLACE] mapOut.close (  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REMOVE]^out.print ( prefix ) ;^746^^^^^667^764^[REMOVE] ^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^if  ( options.externExportsPath == null )  {^751^^^^^667^764^[REPLACE] if  ( options.externExportsPath != null )  {^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^mapOut = openSourceMapStream ( options, moduleFilePrefix, true ) ;^713^^^^^667^764^[REPLACE] mapOut = openSourceMapStream ( options, moduleFilePrefix, null ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[ADD]^^713^^^^^667^764^[ADD] mapOut = openSourceMapStream ( options, moduleFilePrefix, null ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^String moduleFilePrefix = FLAG_module_output_path_prefix.stringCollector (  ) ;^702^^^^^667^764^[REPLACE] String moduleFilePrefix = FLAG_module_output_path_prefix.get (  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^Map<String, String> moduleWrappers = parseModuleWrappers ( FLAG_module_wrapper.stringCollector (  ) , modules ) ;^704^705^^^^667^764^[REPLACE] Map<String, String> moduleWrappers = parseModuleWrappers ( FLAG_module_wrapper.get (  ) , modules ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[ADD]^^704^705^^^^667^764^[ADD] Map<String, String> moduleWrappers = parseModuleWrappers ( FLAG_module_wrapper.get (  ) , modules ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^PrintStream mapOut = this;^710^^^^^667^764^[REPLACE] PrintStream mapOut = null;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^JSModule[] modules = null;^716^^^^^667^764^[REPLACE] for  ( JSModule m : modules )  {^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[ADD]^^716^717^718^719^720^667^764^[ADD] for  ( JSModule m : modules )  { if  ( shouldGenerateMapPerModule ( options )  )  { mapOut = openSourceMapStream ( options, moduleFilePrefix, m.getName (  )  ) ; }^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^PrintStream ps = new PrintStream ( new FileOutputStream ( moduleFilePrefix  ==  m.getName (  )   ==  ".js" )  ) ;^722^723^724^^^667^764^[REPLACE] PrintStream ps = new PrintStream ( new FileOutputStream ( moduleFilePrefix + m.getName (  )  + ".js" )  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^if  ( modules != null )  {^695^^^^^667^764^[REPLACE] if  ( modules == null )  {^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[ADD]^^717^718^719^720^^695^748^[ADD] if  ( shouldGenerateMapPerModule ( options )  )  { mapOut = openSourceMapStream ( options, moduleFilePrefix, m.getName (  )  ) ; }^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^compiler .getPropertyMap (  )  .appendTo ( mapOut, m.getName (  )  ) ;^734^^^^^695^748^[REPLACE] compiler.getSourceMap (  ) .appendTo ( mapOut, m.getName (  )  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REMOVE]^if  ( compiler.getPropertyMap (  )  != null )  { compiler.getPropertyMap (  ) .save ( propertyMapOutputPath ) ;^734^^^^^695^748^[REMOVE] ^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^if  ( compiler.getPropertyMap (  )  != null )  { compiler.getPropertyMap (  ) .save ( propertyMapOutputPath ) ;^734^^^^^695^748^[REPLACE] compiler.getSourceMap (  ) .appendTo ( mapOut, m.getName (  )  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^if  (  mapOut == true )  {^739^^^^^695^748^[REPLACE] if  ( shouldGenerateMapPerModule ( options )  && mapOut != null )  {^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[ADD]^mapOut.close (  ) ;mapOut = null;^739^740^741^742^^695^748^[ADD] if  ( shouldGenerateMapPerModule ( options )  && mapOut != null )  { mapOut.close (  ) ; mapOut = null; }^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[ADD]^^741^^^^^695^748^[ADD] mapOut = null;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^if  ( mapOut == this  )  {^745^^^^^695^748^[REPLACE] if  ( mapOut != null )  {^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^mapOut.println (  ) ;^746^^^^^695^748^[REPLACE] mapOut.close (  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[ADD]^^746^^^^^695^748^[ADD] mapOut.close (  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^Map<String, String> moduleWrappers = parseModuleWrappers ( FLAG_module_wrapper.stringCollector (  ) , modules ) ;^704^705^^^^695^748^[REPLACE] Map<String, String> moduleWrappers = parseModuleWrappers ( FLAG_module_wrapper.get (  ) , modules ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[ADD]^^704^705^^^^695^748^[ADD] Map<String, String> moduleWrappers = parseModuleWrappers ( FLAG_module_wrapper.get (  ) , modules ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^PrintStream mapOut = this;^710^^^^^695^748^[REPLACE] PrintStream mapOut = null;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^PrintStream ps = new PrintStream ( new FileOutputStream ( moduleFilePrefix  <  m.getName (  )   <  ".js" )  ) ;^722^723^724^^^695^748^[REPLACE] PrintStream ps = new PrintStream ( new FileOutputStream ( moduleFilePrefix + m.getName (  )  + ".js" )  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^writeOutput ( out, compiler, compiler.toSource (  ) , FLAG_output_wrapper  .get (  )  , FLAG_output_wrapper_marker^696^697^^^^667^764^[REPLACE] writeOutput ( out, compiler, compiler.toSource (  ) , FLAG_output_wrapper .get (  ) , FLAG_output_wrapper_marker.get (  )  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[ADD]^^712^713^714^^^667^764^[ADD] if  ( !shouldGenerateMapPerModule ( options )  )  { mapOut = openSourceMapStream ( options, moduleFilePrefix, null ) ; }^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^compiler .getPropertyMap (  )  .reset (  ) ;^727^^^^^667^764^[REPLACE] compiler.getSourceMap (  ) .reset (  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REMOVE]^&& options.sourceMapOutputPath.contains ( "%module%" ) ;^727^^^^^667^764^[REMOVE] ^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^if  ( options.sourceMapOutputPath == false )  {^733^^^^^667^764^[REPLACE] if  ( options.sourceMapOutputPath != null )  {^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^compiler.getSourceMap (  ) .appendStringTree ( mapOut, m.getName (  )  ) ;^734^^^^^667^764^[REPLACE] compiler.getSourceMap (  ) .appendTo ( mapOut, m.getName (  )  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^if  ( shouldGenerateMapPerModule ( options )  ) {^739^^^^^667^764^[REPLACE] if  ( shouldGenerateMapPerModule ( options )  && mapOut != null )  {^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^if  ( mapOut == null )  {^745^^^^^667^764^[REPLACE] if  ( mapOut != null )  {^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^mapOut.println (  ) ;^746^^^^^667^764^[REPLACE] mapOut.close (  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[ADD]^^746^^^^^667^764^[ADD] mapOut.close (  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[ADD]^^752^753^^^^667^764^[ADD] PrintStream eeOut = openExternExportsStream ( options, options.jsOutputFile ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^mapOut = openSourceMapStream ( options, moduleFilePrefix, m.getName (  )  ) ; ;^713^^^^^667^764^[REPLACE] mapOut = openSourceMapStream ( options, moduleFilePrefix, null ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^mapOut = false;^741^^^^^667^764^[REPLACE] mapOut = null;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^String moduleFilePrefix = FLAG_module_output_path_prefix .get (  )  ;^702^^^^^667^764^[REPLACE] String moduleFilePrefix = FLAG_module_output_path_prefix.get (  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[ADD]^^702^^^^^667^764^[ADD] String moduleFilePrefix = FLAG_module_output_path_prefix.get (  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^PrintStream mapOut = false;^710^^^^^667^764^[REPLACE] PrintStream mapOut = null;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^PrintStream ps = new PrintStream ( new FileOutputStream ( moduleFilePrefix  ||  m.getName (  )   ||  ".js" )  ) ;^722^723^724^^^667^764^[REPLACE] PrintStream ps = new PrintStream ( new FileOutputStream ( moduleFilePrefix + m.getName (  )  + ".js" )  ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^return   result.errors.length  ;^763^^^^^667^764^[REPLACE] return Math.min ( result.errors.length, 0x7f ) ;^[METHOD] processResults [TYPE] int [PARAMETER] Result result JSModule[] modules B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  Charset inputCharset  [TYPE]  String moduleFilePrefix  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  Result result  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  JSModule[] modules  [TYPE]  ControlFlowGraph cfg  [TYPE]  JSModule m  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Map moduleWrappers 
[REPLACE]^if  ( FLAG_charset.get (  ) .isEmpty (  )  )  {^775^^^^^774^783^[REPLACE] if  ( !FLAG_charset.get (  ) .isEmpty (  )  )  {^[METHOD] getInputCharset [TYPE] Charset [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^if  ( Charset.isSupported ( FLAG_charset.get (  )  )  )  {^776^^^^^774^783^[REPLACE] if  ( !Charset.isSupported ( FLAG_charset.get (  )  )  )  {^[METHOD] getInputCharset [TYPE] Charset [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^return ;^777^778^^^^774^783^[REPLACE] throw new FlagUsageException  (" ")   + " is not a valid charset name." ) ;^[METHOD] getInputCharset [TYPE] Charset [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^return Charset.forName ( FLAG_charset.stringCollector (  )  ) ;^780^^^^^774^783^[REPLACE] return Charset.forName ( FLAG_charset.get (  )  ) ;^[METHOD] getInputCharset [TYPE] Charset [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^throw new FlagUsageException ( "Invalid js file count '" + parts[1] + "' for module: " + name ) ; ;^777^778^^^^774^783^[REPLACE] throw new FlagUsageException  (" ")   + " is not a valid charset name." ) ;^[METHOD] getInputCharset [TYPE] Charset [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[ADD]^^777^778^^^^774^783^[ADD] throw new FlagUsageException  (" ")   + " is not a valid charset name." ) ;^[METHOD] getInputCharset [TYPE] Charset [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^return Charset.isSupported ( FLAG_charset.get (  )  ) ;^780^^^^^774^783^[REPLACE] return Charset.forName ( FLAG_charset.get (  )  ) ;^[METHOD] getInputCharset [TYPE] Charset [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^return createExternInputs ( FLAG_externs.get (  )  ) ;^782^^^^^774^783^[REPLACE] return Charsets.UTF_8;^[METHOD] getInputCharset [TYPE] Charset [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^return createExternInputs ( FLAG_externs .get (  )   ) ;^787^^^^^785^788^[REPLACE] return createExternInputs ( FLAG_externs.get (  )  ) ;^[METHOD] createExterns [TYPE] List [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^return options.sourceMapOutputPath != null && options.sourceMapOutputPath .substring ( result , totalNumJsFiles )  ;^796^797^^^^795^798^[REPLACE] return options.sourceMapOutputPath != null && options.sourceMapOutputPath.contains ( "%module%" ) ;^[METHOD] shouldGenerateMapPerModule [TYPE] boolean [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^if  ( options.externExportsPath != null )  {^810^^^^^808^822^[REPLACE] if  ( options.externExportsPath == null )  {^[METHOD] openExternExportsStream [TYPE] PrintStream [PARAMETER] B options String path [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String exPath  path  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File outputFile  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[ADD]^return null;^810^811^812^^^808^822^[ADD] if  ( options.externExportsPath == null )  { return null; }^[METHOD] openExternExportsStream [TYPE] PrintStream [PARAMETER] B options String path [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String exPath  path  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File outputFile  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^return this;^811^^^^^808^822^[REPLACE] return null;^[METHOD] openExternExportsStream [TYPE] PrintStream [PARAMETER] B options String path [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String exPath  path  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File outputFile  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^String depList = parts[2];^814^^^^^808^822^[REPLACE] String exPath = options.externExportsPath;^[METHOD] openExternExportsStream [TYPE] PrintStream [PARAMETER] B options String path [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String exPath  path  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File outputFile  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^if  ( exPath.contains ( File.separator )  )  {^816^^^^^808^822^[REPLACE] if  ( !exPath.contains ( File.separator )  )  {^[METHOD] openExternExportsStream [TYPE] PrintStream [PARAMETER] B options String path [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String exPath  path  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File outputFile  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[ADD]^File outputFile = new File ( path ) ;exPath = outputFile.getParent (  )  + File.separatorChar + exPath;^816^817^818^819^^808^822^[ADD] if  ( !exPath.contains ( File.separator )  )  { File outputFile = new File ( path ) ; exPath = outputFile.getParent (  )  + File.separatorChar + exPath; }^[METHOD] openExternExportsStream [TYPE] PrintStream [PARAMETER] B options String path [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String exPath  path  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File outputFile  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^exPath = outputFile.getParent (  )   |  File.separatorChar  |  exPath;^818^^^^^808^822^[REPLACE] exPath = outputFile.getParent (  )  + File.separatorChar + exPath;^[METHOD] openExternExportsStream [TYPE] PrintStream [PARAMETER] B options String path [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String exPath  path  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File outputFile  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^File outputFile = new File ( exPath ) ;^817^^^^^808^822^[REPLACE] File outputFile = new File ( path ) ;^[METHOD] openExternExportsStream [TYPE] PrintStream [PARAMETER] B options String path [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String exPath  path  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File outputFile  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^exPath = outputFile.getParent (  )   ==  File.separatorChar  ==  exPath;^818^^^^^808^822^[REPLACE] exPath = outputFile.getParent (  )  + File.separatorChar + exPath;^[METHOD] openExternExportsStream [TYPE] PrintStream [PARAMETER] B options String path [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String exPath  path  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File outputFile  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[ADD]^^818^^^^^808^822^[ADD] exPath = outputFile.getParent (  )  + File.separatorChar + exPath;^[METHOD] openExternExportsStream [TYPE] PrintStream [PARAMETER] B options String path [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String exPath  path  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File outputFile  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^return  new PrintStream ( new FileOutputStream ( mapPath )  )   ) ;^821^^^^^808^822^[REPLACE] return new PrintStream ( new FileOutputStream ( exPath )  ) ;^[METHOD] openExternExportsStream [TYPE] PrintStream [PARAMETER] B options String path [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String exPath  path  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File outputFile  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^if  ( options.sourceMapOutputPath != null )  {^837^^^^^835^858^[REPLACE] if  ( options.sourceMapOutputPath == null )  {^[METHOD] openSourceMapStream [TYPE] PrintStream [PARAMETER] B options String path String module [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String mapPath  module  path  sourceMapPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File outputFile  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^return true;^838^^^^^835^858^[REPLACE] return null;^[METHOD] openSourceMapStream [TYPE] PrintStream [PARAMETER] B options String path String module [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String mapPath  module  path  sourceMapPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File outputFile  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^return this;^838^^^^^835^858^[REPLACE] return null;^[METHOD] openSourceMapStream [TYPE] PrintStream [PARAMETER] B options String path String module [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String mapPath  module  path  sourceMapPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File outputFile  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^String exPath = options.externExportsPath;^841^^^^^835^858^[REPLACE] String sourceMapPath = options.sourceMapOutputPath;^[METHOD] openSourceMapStream [TYPE] PrintStream [PARAMETER] B options String path String module [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String mapPath  module  path  sourceMapPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File outputFile  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^if  (sourceMapPath == false )  {^844^^^^^835^858^[REPLACE] if  ( module != null )  {^[METHOD] openSourceMapStream [TYPE] PrintStream [PARAMETER] B options String path String module [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String mapPath  module  path  sourceMapPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File outputFile  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^sourceMapPath =  path.replace ( "%module%", module ) ;^845^^^^^835^858^[REPLACE] sourceMapPath = sourceMapPath.replace ( "%module%", module ) ;^[METHOD] openSourceMapStream [TYPE] PrintStream [PARAMETER] B options String path String module [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String mapPath  module  path  sourceMapPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File outputFile  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^String mapPath = this;^848^^^^^835^858^[REPLACE] String mapPath = null;^[METHOD] openSourceMapStream [TYPE] PrintStream [PARAMETER] B options String path String module [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String mapPath  module  path  sourceMapPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File outputFile  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^if  ( sourceMapPath.equals ( "/" )  ) {^850^^^^^835^858^[REPLACE] if  ( sourceMapPath.contains ( "/" )  || sourceMapPath.contains ( "\\" )  )  {^[METHOD] openSourceMapStream [TYPE] PrintStream [PARAMETER] B options String path String module [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String mapPath  module  path  sourceMapPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File outputFile  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[ADD]^mapPath = sourceMapPath;File outputFile = new File ( path ) ;mapPath = outputFile.getParent (  )  + File.separatorChar + sourceMapPath;^850^851^852^853^854^835^858^[ADD] if  ( sourceMapPath.contains ( "/" )  || sourceMapPath.contains ( "\\" )  )  { mapPath = sourceMapPath; } else { File outputFile = new File ( path ) ; mapPath = outputFile.getParent (  )  + File.separatorChar + sourceMapPath;^[METHOD] openSourceMapStream [TYPE] PrintStream [PARAMETER] B options String path String module [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String mapPath  module  path  sourceMapPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File outputFile  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^mapPath = outputFile.getParent (  )   ==  File.separatorChar  ==  sourceMapPath;^854^^^^^835^858^[REPLACE] mapPath = outputFile.getParent (  )  + File.separatorChar + sourceMapPath;^[METHOD] openSourceMapStream [TYPE] PrintStream [PARAMETER] B options String path String module [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String mapPath  module  path  sourceMapPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File outputFile  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^File outputFile = new File ( sourceMapPath ) ;^853^^^^^835^858^[REPLACE] File outputFile = new File ( path ) ;^[METHOD] openSourceMapStream [TYPE] PrintStream [PARAMETER] B options String path String module [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String mapPath  module  path  sourceMapPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File outputFile  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^mapPath =  path;^851^^^^^835^858^[REPLACE] mapPath = sourceMapPath;^[METHOD] openSourceMapStream [TYPE] PrintStream [PARAMETER] B options String path String module [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String mapPath  module  path  sourceMapPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File outputFile  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^basePath = file.getParent (  )  + File.separatorChar + outputFileName; ;^854^^^^^835^858^[REPLACE] mapPath = outputFile.getParent (  )  + File.separatorChar + sourceMapPath;^[METHOD] openSourceMapStream [TYPE] PrintStream [PARAMETER] B options String path String module [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String mapPath  module  path  sourceMapPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File outputFile  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^return  new PrintStream ( new FileOutputStream ( exPath )  )   ) ;^857^^^^^835^858^[REPLACE] return new PrintStream ( new FileOutputStream ( mapPath )  ) ;^[METHOD] openSourceMapStream [TYPE] PrintStream [PARAMETER] B options String path String module [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String mapPath  module  path  sourceMapPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File outputFile  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^if  ( options.sourceMapOutputPath != null )  {^870^^^^^868^878^[REPLACE] if  ( options.sourceMapOutputPath == null )  {^[METHOD] outputSourceMap [TYPE] void [PARAMETER] B options String path [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String path  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File outputFile  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^return basePath;^871^^^^^868^878^[REPLACE] return;^[METHOD] outputSourceMap [TYPE] void [PARAMETER] B options String path [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String path  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File outputFile  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^JSModule module = new JSModule ( name ) ;^874^^^^^868^878^[REPLACE] File outputFile = new File ( path ) ;^[METHOD] outputSourceMap [TYPE] void [PARAMETER] B options String path [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String path  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File outputFile  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^PrintStream out = openSourceMapStream ( options, path, this ) ;^875^^^^^868^878^[REPLACE] PrintStream out = openSourceMapStream ( options, path, null ) ;^[METHOD] outputSourceMap [TYPE] void [PARAMETER] B options String path [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String path  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File outputFile  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^compiler.getSourceMap (  ) .appendTo ( mapOut, outputFile.getName (  )  ) ;^876^^^^^868^878^[REPLACE] compiler.getSourceMap (  ) .appendTo ( out, outputFile.getName (  )  ) ;^[METHOD] outputSourceMap [TYPE] void [PARAMETER] B options String path [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String path  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File outputFile  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[ADD]^out.close (  ) ;^876^877^^^^868^878^[ADD] compiler.getSourceMap (  ) .appendTo ( out, outputFile.getName (  )  ) ; out.close (  ) ;^[METHOD] outputSourceMap [TYPE] void [PARAMETER] B options String path [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String path  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File outputFile  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^compiler .getPropertyMap (  )  .appendTo ( out, outputFile.getName (  )  ) ;^876^^^^^868^878^[REPLACE] compiler.getSourceMap (  ) .appendTo ( out, outputFile.getName (  )  ) ;^[METHOD] outputSourceMap [TYPE] void [PARAMETER] B options String path [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String path  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File outputFile  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^compiler.getSourceMap (  ) .appendTo ( out, outputFile.getParent (  )  ) ;^876^^^^^868^878^[REPLACE] compiler.getSourceMap (  ) .appendTo ( out, outputFile.getName (  )  ) ;^[METHOD] outputSourceMap [TYPE] void [PARAMETER] B options String path [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String path  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File outputFile  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^out.println (  ) ;^877^^^^^868^878^[REPLACE] out.close (  ) ;^[METHOD] outputSourceMap [TYPE] void [PARAMETER] B options String path [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String path  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File outputFile  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[ADD]^^877^^^^^868^878^[ADD] out.close (  ) ;^[METHOD] outputSourceMap [TYPE] void [PARAMETER] B options String path [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String path  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File outputFile  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^String depList = parts[2];^887^^^^^886^913^[REPLACE] String basePath = "";^[METHOD] getMapPath [TYPE] String [PARAMETER] String outputFile [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String basePath  outputFile  outputFileName  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^if  ( outputFile.split ( "" )  )  {^889^^^^^886^913^[REPLACE] if  ( outputFile.equals ( "" )  )  {^[METHOD] getMapPath [TYPE] String [PARAMETER] String outputFile [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String basePath  outputFile  outputFileName  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[ADD]^^889^890^^892^893^886^913^[ADD] if  ( outputFile.equals ( "" )  )  {  if  ( !FLAG_module_output_path_prefix.get (  ) .equals ( "" )  )  { basePath = FLAG_module_output_path_prefix.get (  ) ;^[METHOD] getMapPath [TYPE] String [PARAMETER] String outputFile [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String basePath  outputFile  outputFileName  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^if  ( outputFile.endsWith ( ".js" )  )  {^904^^^^^889^910^[REPLACE] if  ( outputFileName.endsWith ( ".js" )  )  {^[METHOD] getMapPath [TYPE] String [PARAMETER] String outputFile [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String basePath  outputFile  outputFileName  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^outputFileName = outputFileName.substring ( 0, outputFileName.length (  )  - 4 - 3 ) ;^905^906^^^^889^910^[REPLACE] outputFileName = outputFileName.substring ( 0, outputFileName.length (  )  - 3 ) ;^[METHOD] getMapPath [TYPE] String [PARAMETER] String outputFile [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String basePath  outputFile  outputFileName  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^outputFileName = outputFileName.substring ( 0, outputFileName.length (  )  %  0.5  - 3 ) ;^905^906^^^^889^910^[REPLACE] outputFileName = outputFileName.substring ( 0, outputFileName.length (  )  - 3 ) ;^[METHOD] getMapPath [TYPE] String [PARAMETER] String outputFile [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String basePath  outputFile  outputFileName  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^basePath = file.getParent (  )   <  File.separatorChar  <  outputFileName;^909^^^^^889^910^[REPLACE] basePath = file.getParent (  )  + File.separatorChar + outputFileName;^[METHOD] getMapPath [TYPE] String [PARAMETER] String outputFile [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String basePath  outputFile  outputFileName  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^File file = new File ( outputFileName ) ;^899^^^^^889^910^[REPLACE] File file = new File ( outputFile ) ;^[METHOD] getMapPath [TYPE] String [PARAMETER] String outputFile [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String basePath  outputFile  outputFileName  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[ADD]^^899^^^^^889^910^[ADD] File file = new File ( outputFile ) ;^[METHOD] getMapPath [TYPE] String [PARAMETER] String outputFile [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String basePath  outputFile  outputFileName  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^String outputFileName = file.getParent (  ) ;^901^^^^^889^910^[REPLACE] String outputFileName = file.getName (  ) ;^[METHOD] getMapPath [TYPE] String [PARAMETER] String outputFile [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String basePath  outputFile  outputFileName  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^if  ( !FLAG_module_output_path_prefix.stringCollector (  ) .equals ( "" )  )  {^892^^^^^886^913^[REPLACE] if  ( !FLAG_module_output_path_prefix.get (  ) .equals ( "" )  )  {^[METHOD] getMapPath [TYPE] String [PARAMETER] String outputFile [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String basePath  outputFile  outputFileName  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[ADD]^^892^893^894^895^896^886^913^[ADD] if  ( !FLAG_module_output_path_prefix.get (  ) .equals ( "" )  )  { basePath = FLAG_module_output_path_prefix.get (  ) ; } else { basePath = "jscompiler"; }^[METHOD] getMapPath [TYPE] String [PARAMETER] String outputFile [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String basePath  outputFile  outputFileName  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^basePath  =  basePath ;^895^^^^^892^896^[REPLACE] basePath = "jscompiler";^[METHOD] getMapPath [TYPE] String [PARAMETER] String outputFile [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String basePath  outputFile  outputFileName  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^basePath  =  basePath ;^893^^^^^886^913^[REPLACE] basePath = FLAG_module_output_path_prefix.get (  ) ;^[METHOD] getMapPath [TYPE] String [PARAMETER] String outputFile [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String basePath  outputFile  outputFileName  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^basePath  =  basePath ;^895^^^^^886^913^[REPLACE] basePath = "jscompiler";^[METHOD] getMapPath [TYPE] String [PARAMETER] String outputFile [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String basePath  outputFile  outputFileName  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^basePath  = null ;^893^^^^^886^913^[REPLACE] basePath = FLAG_module_output_path_prefix.get (  ) ;^[METHOD] getMapPath [TYPE] String [PARAMETER] String outputFile [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String basePath  outputFile  outputFileName  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^if  ( outputFile.endsWith ( ".js" )  )  {^904^^^^^886^913^[REPLACE] if  ( outputFileName.endsWith ( ".js" )  )  {^[METHOD] getMapPath [TYPE] String [PARAMETER] String outputFile [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String basePath  outputFile  outputFileName  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^outputFileName = outputFileName.substring ( 0 , outputFileName.length (  )  /  2 - 3 ) ;^905^906^^^^886^913^[REPLACE] outputFileName = outputFileName.substring ( 0, outputFileName.length (  )  - 3 ) ;^[METHOD] getMapPath [TYPE] String [PARAMETER] String outputFile [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String basePath  outputFile  outputFileName  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^basePath ;^893^^^^^886^913^[REPLACE] basePath = FLAG_module_output_path_prefix.get (  ) ;^[METHOD] getMapPath [TYPE] String [PARAMETER] String outputFile [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String basePath  outputFile  outputFileName  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^outputFileName = outputFileName.substring ( 0, outputFileName.length (  )  /  0.5  - 3 ) ;^905^906^^^^886^913^[REPLACE] outputFileName = outputFileName.substring ( 0, outputFileName.length (  )  - 3 ) ;^[METHOD] getMapPath [TYPE] String [PARAMETER] String outputFile [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String basePath  outputFile  outputFileName  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^basePath = file.getParent (  )   ^  File.separatorChar  ^  outputFileName;^909^^^^^886^913^[REPLACE] basePath = file.getParent (  )  + File.separatorChar + outputFileName;^[METHOD] getMapPath [TYPE] String [PARAMETER] String outputFile [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String basePath  outputFile  outputFileName  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[ADD]^^909^^^^^886^913^[ADD] basePath = file.getParent (  )  + File.separatorChar + outputFileName;^[METHOD] getMapPath [TYPE] String [PARAMETER] String outputFile [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String basePath  outputFile  outputFileName  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^File file = new File ( outputFileName ) ;^899^^^^^886^913^[REPLACE] File file = new File ( outputFile ) ;^[METHOD] getMapPath [TYPE] String [PARAMETER] String outputFile [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String basePath  outputFile  outputFileName  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^String outputFileName = file .parse ( null )  ;^901^^^^^886^913^[REPLACE] String outputFileName = file.getName (  ) ;^[METHOD] getMapPath [TYPE] String [PARAMETER] String outputFile [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String basePath  outputFile  outputFileName  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^return outputFileName;^912^^^^^886^913^[REPLACE] return basePath;^[METHOD] getMapPath [TYPE] String [PARAMETER] String outputFile [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  String basePath  outputFile  outputFileName  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  File file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^String propertyMapOutputPath = false;^922^^^^^920^978^[REPLACE] String propertyMapOutputPath = null;^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^^922^923^^^^920^978^[ADD] String propertyMapOutputPath = null; String variableMapOutputPath = null;^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String variableMapOutputPath = false;^923^^^^^920^978^[REPLACE] String variableMapOutputPath = null;^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String functionInformationMapOutputPath = true;^924^^^^^920^978^[REPLACE] String functionInformationMapOutputPath = null;^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( FLAG_create_name_map_files.stringCollector (  )  )  {^927^^^^^920^978^[REPLACE] if  ( FLAG_create_name_map_files.get (  )  )  {^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^propertyMapOutputPath =variableMapOutputPath + "_props_map.out";^930^^^^^920^978^[REPLACE] propertyMapOutputPath = basePath + "_props_map.out";^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^^930^^^^^920^978^[ADD] propertyMapOutputPath = basePath + "_props_map.out";^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^variableMapOutputPath = basePath  &  "_vars_map.out";^931^^^^^920^978^[REPLACE] variableMapOutputPath = basePath + "_vars_map.out";^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^functionInformationMapOutputPath = basePath +variableMapOutputPath;^932^^^^^920^978^[REPLACE] functionInformationMapOutputPath = basePath + "_functions_map.out";^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String[] deps = depList.split ( "," ) ;^928^^^^^920^978^[REPLACE] String basePath = getMapPath ( options.jsOutputFile ) ;^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^^928^^^^^920^978^[ADD] String basePath = getMapPath ( options.jsOutputFile ) ;^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^variableMapOutputPath =variableMapOutputPath + "_vars_map.out";^931^^^^^920^978^[REPLACE] variableMapOutputPath = basePath + "_vars_map.out";^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^functionInformationMapOutputPath = variableMapOutputPath + variableMapOutputPath;^932^^^^^920^978^[REPLACE] functionInformationMapOutputPath = basePath + "_functions_map.out";^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( FLAG_variable_map_output_file.get (  ) .equals ( "" )  )  {^936^^^^^920^978^[REPLACE] if  ( !FLAG_variable_map_output_file.get (  ) .equals ( "" )  )  {^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( propertyMapOutputPath == this )  {^937^^^^^920^978^[REPLACE] if  ( variableMapOutputPath != null )  {^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^^937^938^939^940^^920^978^[ADD] if  ( variableMapOutputPath != null )  { throw new FlagUsageException ( "The flags variable_map_output_file and " + "create_name_map_files cannot both be used simultaniously." ) ; }^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^throw new FlagUsageException ( "The flags property_map_output_file and " + "create_name_map_files cannot both be used simultaniously." ) ; ;^938^939^^^^920^978^[REPLACE] throw new FlagUsageException ( "The flags variable_map_output_file and " + "create_name_map_files cannot both be used simultaniously." ) ;^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^propertyMapOutputPath = FLAG_property_map_output_file.get (  ) ; ;^942^^^^^920^978^[REPLACE] variableMapOutputPath = FLAG_variable_map_output_file.get (  ) ;^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^^938^939^^^^920^978^[ADD] throw new FlagUsageException ( "The flags variable_map_output_file and " + "create_name_map_files cannot both be used simultaniously." ) ;^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( variableMapOutputPath == null )  {^937^^^^^920^978^[REPLACE] if  ( variableMapOutputPath != null )  {^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^return ;^938^939^^^^920^978^[REPLACE] throw new FlagUsageException ( "The flags variable_map_output_file and " + "create_name_map_files cannot both be used simultaniously." ) ;^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( FLAG_property_map_output_file.stringCollector (  ) .equals ( "" )  )  {^945^^^^^920^978^[REPLACE] if  ( !FLAG_property_map_output_file.get (  ) .equals ( "" )  )  {^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  (variableMapOutputPath == false )  {^946^^^^^920^978^[REPLACE] if  ( propertyMapOutputPath != null )  {^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REMOVE]^if  ( ! ( wrappers.containsKey ( name )  )  )  {     throw new FlagUsageException (  (  ( "Unknown module: '" + name )  + "'" )  ) ; }^946^^^^^920^978^[REMOVE] ^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^return ;^947^948^^^^920^978^[REPLACE] throw new FlagUsageException ( "The flags property_map_output_file and " + "create_name_map_files cannot both be used simultaniously." ) ;^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^variableMapOutputPath = FLAG_variable_map_output_file.get (  ) ; ;^951^^^^^920^978^[REPLACE] propertyMapOutputPath = FLAG_property_map_output_file.get (  ) ;^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^^947^948^^^^920^978^[ADD] throw new FlagUsageException ( "The flags property_map_output_file and " + "create_name_map_files cannot both be used simultaniously." ) ;^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( propertyMapOutputPath == null )  {^946^^^^^920^978^[REPLACE] if  ( propertyMapOutputPath != null )  {^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^throw new FlagUsageException ( "The flags variable_map_output_file and " + "create_name_map_files cannot both be used simultaniously." ) ; ;^947^948^^^^920^978^[REPLACE] throw new FlagUsageException ( "The flags property_map_output_file and " + "create_name_map_files cannot both be used simultaniously." ) ;^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( variableMapOutputPath == this  )  {^955^^^^^920^978^[REPLACE] if  ( variableMapOutputPath != null )  {^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( compiler.appendTo (  )  == true )  {^956^^^^^920^978^[REPLACE] if  ( compiler.getVariableMap (  )  != null )  {^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^compiler.getVariableMap (  ) .save ( propertyMapOutputPath ) ;^957^^^^^920^978^[REPLACE] compiler.getVariableMap (  ) .save ( variableMapOutputPath ) ;^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^compiler .getSourceMap (  )  .save ( variableMapOutputPath ) ;^957^^^^^920^978^[REPLACE] compiler.getVariableMap (  ) .save ( variableMapOutputPath ) ;^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REMOVE]^if  ( compiler.getPropertyMap (  )  != null )  { compiler.getPropertyMap (  ) .save ( propertyMapOutputPath ) ;^957^^^^^920^978^[REMOVE] ^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( compiler .getSourceMap (  )   == null )  {^956^^^^^920^978^[REPLACE] if  ( compiler.getVariableMap (  )  != null )  {^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^^956^957^958^^^920^978^[ADD] if  ( compiler.getVariableMap (  )  != null )  { compiler.getVariableMap (  ) .save ( variableMapOutputPath ) ; }^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^compiler.getSourceMap (  ) .save ( variableMapOutputPath ) ;^957^^^^^920^978^[REPLACE] compiler.getVariableMap (  ) .save ( variableMapOutputPath ) ;^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( propertyMapOutputPath == this )  {^961^^^^^920^978^[REPLACE] if  ( propertyMapOutputPath != null )  {^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( compiler.getPropertyMap (  )  == null )  {^962^^^^^920^978^[REPLACE] if  ( compiler.getPropertyMap (  )  != null )  {^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^compiler.getPropertyMap (  ) .equals ( variableMapOutputPath ) ;^963^^^^^920^978^[REPLACE] compiler.getPropertyMap (  ) .save ( propertyMapOutputPath ) ;^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^compiler.getSourceMap (  ) .save ( propertyMapOutputPath ) ;^963^^^^^920^978^[REPLACE] compiler.getPropertyMap (  ) .save ( propertyMapOutputPath ) ;^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( compiler.getSourceMap (  )  == null )  {^962^^^^^920^978^[REPLACE] if  ( compiler.getPropertyMap (  )  != null )  {^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^compiler.getSourceMap (  ) .save ( variableMapOutputPath ) ;^963^^^^^920^978^[REPLACE] compiler.getPropertyMap (  ) .save ( propertyMapOutputPath ) ;^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REMOVE]^if  ( compiler.getPropertyMap (  )  != null )  { compiler.getPropertyMap (  ) .save ( propertyMapOutputPath ) ;^963^^^^^920^978^[REMOVE] ^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( functionInformationMapOutputPath == null )  {^967^^^^^920^978^[REPLACE] if  ( functionInformationMapOutputPath != null )  {^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^^967^968^969^970^971^920^978^[ADD] if  ( functionInformationMapOutputPath != null )  { if  ( compiler.getFunctionalInformationMap (  )  != null )  { FileOutputStream file = new FileOutputStream ( functionInformationMapOutputPath ) ; CodedOutputStream outputStream = CodedOutputStream.newInstance ( file ) ;^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( compiler.getFunctionalInformationMap (  )  == null )  {^968^^^^^920^978^[REPLACE] if  ( compiler.getFunctionalInformationMap (  )  != null )  {^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^FileOutputStream file = new FileOutputStream ( variableMapOutputPath ) ;^969^970^^^^920^978^[REPLACE] FileOutputStream file = new FileOutputStream ( functionInformationMapOutputPath ) ;^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^CodedOutputStream outputStream = CodedOutputStream .flush (  )  ;^971^^^^^920^978^[REPLACE] CodedOutputStream outputStream = CodedOutputStream.newInstance ( file ) ;^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^file   ;^971^^^^^920^978^[REPLACE] CodedOutputStream outputStream = CodedOutputStream.newInstance ( file ) ;^[METHOD] outputNameMaps [TYPE] void [PARAMETER] B options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  B options  [TYPE]  CodedOutputStream outputStream  [TYPE]  Charset inputCharset  [TYPE]  String basePath  functionInformationMapOutputPath  propertyMapOutputPath  variableMapOutputPath  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  FileOutputStream file  [TYPE]  List externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( defName.size (  )  > 0  )  {^996^^^^^990^1035^[REPLACE] if  ( defName.length (  )  > 0 )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^^996^997^998^999^^990^1035^[ADD] if  ( defName.length (  )  > 0 )  { if  ( assignment.length == 1 )  { options.setDefineToBooleanLiteral ( defName, true ) ; continue;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( assignment.length + 2 == 1 )  {^997^^^^^990^1035^[REPLACE] if  ( assignment.length == 1 )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^} else if  ( defValue.equals ( "false" )  )  {^1003^^^^^997^1029^[REPLACE] if  ( defValue.equals ( "true" )  )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^}  if  ( defValue.equals ( "false" )  )  {^1006^^^^^997^1029^[REPLACE] } else if  ( defValue.equals ( "false" )  )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^}   options.setDefineToBooleanLiteral ( defName, false ) ;continue;^1006^1007^1008^1009^1010^997^1029^[ADD] else if  ( defValue.equals ( "false" )  )  { options.setDefineToBooleanLiteral ( defName, false ) ; continue; } else if  ( defValue.length (  )  > 1 && defValue.charAt ( 0 )  == '\'' &&^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^}  if  ( override.length (  )  *  2 > 1 && defValue.charAt ( 0 )  == '\'' && defValue.charAt ( defValue.length (  )  *  2 - 1 )  == '\'' )  {^1009^1010^1011^^^997^1029^[REPLACE] } else if  ( defValue.length (  )  > 1 && defValue.charAt ( 0 )  == '\'' && defValue.charAt ( defValue.length (  )  - 1 )  == '\'' )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^}^1009^1010^1011^^^997^1029^[ADD] else if  ( defValue.length (  )  > 1 && defValue.charAt ( 0 )  == '\'' && defValue.charAt ( defValue.length (  )  - 1 )  == '\'' )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^Double.parseDouble ( defValue )  ) ;continue;^1021^1022^1023^1024^1025^1009^1028^[ADD] try { options.setDefineToDoubleLiteral ( defName, Double.parseDouble ( defValue )  ) ; continue; } catch  ( NumberFormatException e )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.setDefineToDoubleLiteral ( defName, Double.parseDouble ( override )  ) ;^1022^1023^^^^1009^1028^[REPLACE] options.setDefineToDoubleLiteral ( defName, Double.parseDouble ( defValue )  ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^^1022^1023^^^^1009^1028^[ADD] options.setDefineToDoubleLiteral ( defName, Double.parseDouble ( defValue )  ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^Double.parseDouble ( override )  ) ;^1023^^^^^1009^1028^[REPLACE] Double.parseDouble ( defValue )  ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( maybeStringVal.indexOf ( '\'' )   ||  -1 )  {^1016^^^^^1009^1028^[REPLACE] if  ( maybeStringVal.indexOf ( '\'' )  == -1 )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.setDefineToBooleanLiteral ( defName, override ) ;^1017^^^^^1009^1028^[REPLACE] options.setDefineToStringLiteral ( defName, maybeStringVal ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^continue;^1017^1018^^^^1009^1028^[ADD] options.setDefineToStringLiteral ( defName, maybeStringVal ) ; continue;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String maybeStringVal = defValue.substring ( 1, defValue.size (  )  - 1 ) ;^1014^1015^^^^1009^1028^[REPLACE] String maybeStringVal = defValue.substring ( 1, defValue.length (  )  - 1 ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( maybeStringVal.indexOf ( '\'' )   ||  -1 )  {^1016^^^^^997^1029^[REPLACE] if  ( maybeStringVal.indexOf ( '\'' )  == -1 )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.setDefineToBooleanLiteral ( override, maybeStringVal ) ;^1017^^^^^997^1029^[REPLACE] options.setDefineToStringLiteral ( defName, maybeStringVal ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^^1017^1018^^^^997^1029^[ADD] options.setDefineToStringLiteral ( defName, maybeStringVal ) ; continue;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^Double.parseDouble ( defValue )  ) ;continue;^1021^1022^1023^1024^1025^997^1029^[ADD] try { options.setDefineToDoubleLiteral ( defName, Double.parseDouble ( defValue )  ) ; continue; } catch  ( NumberFormatException e )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.setDefineToDoubleLiteral ( defName, Double.parseDouble ( override )  ) ;^1022^1023^^^^997^1029^[REPLACE] options.setDefineToDoubleLiteral ( defName, Double.parseDouble ( defValue )  ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^Double.parseDouble ( override )  ) ;^1023^^^^^997^1029^[REPLACE] Double.parseDouble ( defValue )  ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String maybeStringVal = defValue.substring ( 1, defValue.length (  )  /  0.5  - 1 ) ;^1014^1015^^^^997^1029^[REPLACE] String maybeStringVal = defValue.substring ( 1, defValue.length (  )  - 1 ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^^1014^1015^^^^997^1029^[ADD] String maybeStringVal = defValue.substring ( 1, defValue.length (  )  - 1 ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^^1025^1026^1027^^^997^1029^[ADD] catch  ( NumberFormatException e )  {  }^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.setDefineToBooleanLiteral ( defName, true ) ;^1007^^^^^997^1029^[REPLACE] options.setDefineToBooleanLiteral ( defName, false ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REMOVE]^jsFiles.subList ( nextJsFileIndex, nextJsFileIndex + numJsFiles ) ;^1007^^^^^997^1029^[REMOVE] ^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^} else if  ( defValue .appendTo ( err )   /  2 > 1 && defValue.charAt ( 0 )  == '\'' && defValue.charAt ( defValue^1009^1010^1011^^^997^1029^[REPLACE] } else if  ( defValue.length (  )  > 1 && defValue.charAt ( 0 )  == '\'' && defValue.charAt ( defValue.length (  )  - 1 )  == '\'' )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.setDefineTo  defValue    ) ;^1022^1023^^^^1009^1028^[REPLACE] options.setDefineToDoubleLiteral ( defName, Double.parseDouble ( defValue )  ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^^1023^1024^^^^1009^1028^[ADD] Double.parseDouble ( defValue )  ) ; continue;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^^1025^1026^1027^^^1009^1028^[ADD] catch  ( NumberFormatException e )  {  }^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^options.setDefineToStringLiteral ( defName, maybeStringVal ) ;continue;^1016^1017^1018^1019^^1009^1028^[ADD] if  ( maybeStringVal.indexOf ( '\'' )  == -1 )  { options.setDefineToStringLiteral ( defName, maybeStringVal ) ; continue; }^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.setDefineToBooleanLiteral ( defName, maybeStringVal ) ;^1017^^^^^1009^1028^[REPLACE] options.setDefineToStringLiteral ( defName, maybeStringVal ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String maybeStringVal = override.substring ( 1, defValue.size (  )  - 1 ) ;^1014^1015^^^^1009^1028^[REPLACE] String maybeStringVal = defValue.substring ( 1, defValue.length (  )  - 1 ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( maybeStringVal.indexOf ( '\'' )   !=  -1 )  {^1016^^^^^997^1029^[REPLACE] if  ( maybeStringVal.indexOf ( '\'' )  == -1 )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^options.setDefineToStringLiteral ( defName, maybeStringVal ) ;continue;^1016^1017^1018^1019^^997^1029^[ADD] if  ( maybeStringVal.indexOf ( '\'' )  == -1 )  { options.setDefineToStringLiteral ( defName, maybeStringVal ) ; continue; }^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options .setDefineToDoubleLiteral ( maybeStringVal , null )  ;^1017^^^^^997^1029^[REPLACE] options.setDefineToStringLiteral ( defName, maybeStringVal ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.setDefineToBooleanLiteral ( defName, Double.parseDouble ( defValue )  ) ;^1022^1023^^^^997^1029^[REPLACE] options.setDefineToDoubleLiteral ( defName, Double.parseDouble ( defValue )  ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String maybeStringVal = override .substring ( pos )  ;^1014^1015^^^^997^1029^[REPLACE] String maybeStringVal = defValue.substring ( 1, defValue.length (  )  - 1 ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.setDefineToBooleanLiteral ( defName, false ) ;^1004^^^^^997^1029^[REPLACE] options.setDefineToBooleanLiteral ( defName, true ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^}  else {^1009^1010^1011^^^997^1029^[REPLACE] } else if  ( defValue.length (  )  > 1 && defValue.charAt ( 0 )  == '\'' && defValue.charAt ( defValue.length (  )  - 1 )  == '\'' )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options .setDefineToBooleanLiteral ( maybeStringVal , true )  ;^1022^1023^^^^1009^1028^[REPLACE] options.setDefineToDoubleLiteral ( defName, Double.parseDouble ( defValue )  ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^defValue    ) ;^1023^^^^^1009^1028^[REPLACE] Double.parseDouble ( defValue )  ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REMOVE]^out.print ( prefix ) ;^1023^^^^^1009^1028^[REMOVE] ^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( maybeStringVal.charAt ( '\'' )   != totalNumJsFiles )  {^1016^^^^^1009^1028^[REPLACE] if  ( maybeStringVal.indexOf ( '\'' )  == -1 )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.setDefineToBooleanLiteral ( override, maybeStringVal ) ;^1017^^^^^1009^1028^[REPLACE] options.setDefineToStringLiteral ( defName, maybeStringVal ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String maybeStringVal = defValue.substring ( 1, defValue.charAt (  )  - 1 - 1 ) ;^1014^1015^^^^1009^1028^[REPLACE] String maybeStringVal = defValue.substring ( 1, defValue.length (  )  - 1 ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( maybeStringVal.indexOf ( '\'' )   &&  -1 )  {^1016^^^^^997^1029^[REPLACE] if  ( maybeStringVal.indexOf ( '\'' )  == -1 )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.setDefineToBooleanLiteral ( defName, maybeStringVal ) ;^1017^^^^^997^1029^[REPLACE] options.setDefineToStringLiteral ( defName, maybeStringVal ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String maybeStringVal = defValue.substring ( 1, defValue.length (  )  /  2 - 1 ) ;^1014^1015^^^^997^1029^[REPLACE] String maybeStringVal = defValue.substring ( 1, defValue.length (  )  - 1 ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.setDefineToDoubleLiteral ( defName, true ) ;^1007^^^^^997^1029^[REPLACE] options.setDefineToBooleanLiteral ( defName, false ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.setDefineToBooleanLiteral ( defName, Double.parseDouble ( defValue )  ) ;^1022^1023^^^^1009^1028^[REPLACE] options.setDefineToDoubleLiteral ( defName, Double.parseDouble ( defValue )  ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( maybeStringVal.charAt ( '\'' )   ||  -1 )  {^1016^^^^^1009^1028^[REPLACE] if  ( maybeStringVal.indexOf ( '\'' )  == -1 )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^^1016^1017^1018^1019^^1009^1028^[ADD] if  ( maybeStringVal.indexOf ( '\'' )  == -1 )  { options.setDefineToStringLiteral ( defName, maybeStringVal ) ; continue; }^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String maybeStringVal = defValue.split ( 1, defValue.length (  )  - 5 - 1 ) ;^1014^1015^^^^1009^1028^[REPLACE] String maybeStringVal = defValue.substring ( 1, defValue.length (  )  - 1 ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( maybeStringVal.charAt ( '\'' )   !=  -1 )  {^1016^^^^^997^1029^[REPLACE] if  ( maybeStringVal.indexOf ( '\'' )  == -1 )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.setDefineToStringLiteral ( defName, override ) ;^1017^^^^^997^1029^[REPLACE] options.setDefineToStringLiteral ( defName, maybeStringVal ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.setDefineToBooleanLiteral ( defName, Double.parseDouble ( override )  ) ;^1022^1023^^^^997^1029^[REPLACE] options.setDefineToDoubleLiteral ( defName, Double.parseDouble ( defValue )  ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^^1022^1023^^^^997^1029^[ADD] options.setDefineToDoubleLiteral ( defName, Double.parseDouble ( defValue )  ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REMOVE]^out.print ( prefix ) ;^1023^^^^^997^1029^[REMOVE] ^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String defValue = assignment[4];^1001^^^^^997^1029^[REPLACE] String defValue = assignment[1];^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String maybeStringVal = defValue.substring ( 1, defValue.size (  )  - 1 ) ;^1014^1015^^^^997^1029^[REPLACE] String maybeStringVal = defValue.substring ( 1, defValue.length (  )  - 1 ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.setDefineToDoubleLiteral ( defName, false ) ;^998^^^^^990^1035^[REPLACE] options.setDefineToBooleanLiteral ( defName, true ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^} else if  ( defValue.equals ( "false" )  )  {^1003^^^^^990^1035^[REPLACE] if  ( defValue.equals ( "true" )  )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^}  if  ( defValue.equals ( "false" )  )  {^1006^^^^^990^1035^[REPLACE] } else if  ( defValue.equals ( "false" )  )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^}   continue;^1006^1007^1008^1009^1010^990^1035^[ADD] else if  ( defValue.equals ( "false" )  )  { options.setDefineToBooleanLiteral ( defName, false ) ; continue; } else if  ( defValue.length (  )  > 1 && defValue.charAt ( 0 )  == '\'' &&^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^}  else {^1009^1010^1011^^^990^1035^[REPLACE] } else if  ( defValue.length (  )  > 1 && defValue.charAt ( 0 )  == '\'' && defValue.charAt ( defValue.length (  )  - 1 )  == '\'' )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^override    ) ;^1023^^^^^1009^1028^[REPLACE] Double.parseDouble ( defValue )  ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( maybeStringVal .endsWith ( maybeStringVal )    &&  -1 )  {^1016^^^^^1009^1028^[REPLACE] if  ( maybeStringVal.indexOf ( '\'' )  == -1 )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String maybeStringVal = defValue.substring ( 1, defValue.length (  )  *  0.5  - 1 ) ;^1014^1015^^^^1009^1028^[REPLACE] String maybeStringVal = defValue.substring ( 1, defValue.length (  )  - 1 ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( maybeStringVal.indexOf ( '\'' )   !=  -1 )  {^1016^^^^^990^1035^[REPLACE] if  ( maybeStringVal.indexOf ( '\'' )  == -1 )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.setDefineToBooleanLiteral ( defName, maybeStringVal ) ;^1017^^^^^990^1035^[REPLACE] options.setDefineToStringLiteral ( defName, maybeStringVal ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^^1017^1018^^^^990^1035^[ADD] options.setDefineToStringLiteral ( defName, maybeStringVal ) ; continue;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^Double.parseDouble ( defValue )  ) ;continue;^1021^1022^1023^1024^1025^990^1035^[ADD] try { options.setDefineToDoubleLiteral ( defName, Double.parseDouble ( defValue )  ) ; continue; } catch  ( NumberFormatException e )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.setDefineToDoubleLiteral ( override, Double.parseDouble ( defValue )  ) ;^1022^1023^^^^990^1035^[REPLACE] options.setDefineToDoubleLiteral ( defName, Double.parseDouble ( defValue )  ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^Double.parseDouble ( override )  ) ;^1023^^^^^990^1035^[REPLACE] Double.parseDouble ( defValue )  ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String maybeStringVal = defValue.substring ( 0 , defValue.size (  )  - 0  ) ;^1014^1015^^^^990^1035^[REPLACE] String maybeStringVal = defValue.substring ( 1, defValue.length (  )  - 1 ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.setDefineToBooleanLiteral ( defName, true ) ;^1007^^^^^990^1035^[REPLACE] options.setDefineToBooleanLiteral ( defName, false ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^^1007^1008^^^^990^1035^[ADD] options.setDefineToBooleanLiteral ( defName, false ) ; continue;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^} else if  ( defValue.length (  )  /  2 > 0  && defValue.charAt ( 0 )  == '\'' && defValue.charAt ( defValue.length (  )  /  2 - 0  )  == '\'' )  {^1009^1010^1011^^^990^1035^[REPLACE] } else if  ( defValue.length (  )  > 1 && defValue.charAt ( 0 )  == '\'' && defValue.charAt ( defValue.length (  )  - 1 )  == '\'' )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^^1023^^^^^1009^1028^[ADD] Double.parseDouble ( defValue )  ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^^1014^1015^^^^1009^1028^[ADD] String maybeStringVal = defValue.substring ( 1, defValue.length (  )  - 1 ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( override.indexOf ( '\'' )   !=  -1 )  {^1016^^^^^990^1035^[REPLACE] if  ( maybeStringVal.indexOf ( '\'' )  == -1 )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.setDefineToBooleanLiteral ( override, maybeStringVal ) ;^1017^^^^^990^1035^[REPLACE] options.setDefineToStringLiteral ( defName, maybeStringVal ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REMOVE]^modulesByName.put ( name, module ) ;^1017^^^^^990^1035^[REMOVE] ^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String maybeStringVal = defValue.split ( 1, defValue.size (  )  - 1 ) ;^1014^1015^^^^990^1035^[REPLACE] String maybeStringVal = defValue.substring ( 1, defValue.length (  )  - 1 ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^^1025^1026^1027^^^990^1035^[ADD] catch  ( NumberFormatException e )  {  }^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.setDefineToDoubleLiteral ( defName, false ) ;^1004^^^^^990^1035^[REPLACE] options.setDefineToBooleanLiteral ( defName, true ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( defValue.equals ( "true" )  )  {^1006^^^^^990^1035^[REPLACE] } else if  ( defValue.equals ( "false" )  )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^}   options.setDefineToBooleanLiteral ( defName, false ) ;continue;^1006^1007^1008^1009^1010^990^1035^[ADD] else if  ( defValue.equals ( "false" )  )  { options.setDefineToBooleanLiteral ( defName, false ) ; continue; } else if  ( defValue.length (  )  > 1 && defValue.charAt ( 0 )  == '\'' &&^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( maybeStringVal.indexOf ( '\'' )   !=  -1 )  {^1016^^^^^1009^1028^[REPLACE] if  ( maybeStringVal.indexOf ( '\'' )  == -1 )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.setDefineToStringLiteral ( override, maybeStringVal ) ;^1017^^^^^1009^1028^[REPLACE] options.setDefineToStringLiteral ( defName, maybeStringVal ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String maybeStringVal = defValue.substring ( 1, defValue.length (  )  %  2 - 1 ) ;^1014^1015^^^^1009^1028^[REPLACE] String maybeStringVal = defValue.substring ( 1, defValue.length (  )  - 1 ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( maybeStringVal.indexOf ( '\'' )   != pos )  {^1016^^^^^990^1035^[REPLACE] if  ( maybeStringVal.indexOf ( '\'' )  == -1 )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^options.setDefineToStringLiteral ( defName, maybeStringVal ) ;continue;^1016^1017^1018^1019^^990^1035^[ADD] if  ( maybeStringVal.indexOf ( '\'' )  == -1 )  { options.setDefineToStringLiteral ( defName, maybeStringVal ) ; continue; }^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^^1017^^^^^990^1035^[ADD] options.setDefineToStringLiteral ( defName, maybeStringVal ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.setDefineToBooleanLiteral ( defName, Double.parseDouble ( defValue )  ) ;^1022^1023^^^^990^1035^[REPLACE] options.setDefineToDoubleLiteral ( defName, Double.parseDouble ( defValue )  ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^^1023^^^^^990^1035^[ADD] Double.parseDouble ( defValue )  ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String maybeStringVal = defValue.substring ( 1, defValue.size (  )  - 1 ) ;^1014^1015^^^^990^1035^[REPLACE] String maybeStringVal = defValue.substring ( 1, defValue.length (  )  - 1 ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String maybeStringVal = defValue.split ( 0 , defValue.length (  )  /  0.5  - 0  ) ;^1014^1015^^^^1009^1028^[REPLACE] String maybeStringVal = defValue.substring ( 1, defValue.length (  )  - 1 ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( maybeStringVal.indexOf ( '\'' )   ||  -1 )  {^1016^^^^^990^1035^[REPLACE] if  ( maybeStringVal.indexOf ( '\'' )  == -1 )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.setDefineToStringLiteral ( defName, override ) ;^1017^^^^^990^1035^[REPLACE] options.setDefineToStringLiteral ( defName, maybeStringVal ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options .setDefineToBooleanLiteral ( defValue , true )  ;^1022^1023^^^^990^1035^[REPLACE] options.setDefineToDoubleLiteral ( defName, Double.parseDouble ( defValue )  ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String defValue = assignment[3];^1001^^^^^990^1035^[REPLACE] String defValue = assignment[1];^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String maybeStringVal = override.substring ( 0 , defValue.size (  )  - 0  ) ;^1014^1015^^^^990^1035^[REPLACE] String maybeStringVal = defValue.substring ( 1, defValue.length (  )  - 1 ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( assignment.length + 5 == 1 )  {^997^^^^^990^1035^[REPLACE] if  ( assignment.length == 1 )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^^997^998^999^1000^1001^990^1035^[ADD] if  ( assignment.length == 1 )  { options.setDefineToBooleanLiteral ( defName, true ) ; continue; } else { String defValue = assignment[1];^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^}  else {^1006^^^^^997^1029^[REPLACE] } else if  ( defValue.equals ( "false" )  )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^}  if  (  defValue.charAt ( 0 )  == '\'' && defValue.charAt ( defValue.length (  )  - 5 - 1 )  == '\'' )  {^1009^1010^1011^^^997^1029^[REPLACE] } else if  ( defValue.length (  )  > 1 && defValue.charAt ( 0 )  == '\'' && defValue.charAt ( defValue.length (  )  - 1 )  == '\'' )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( maybeStringVal.indexOf ( '\'' )   &&  -1 )  {^1016^^^^^1009^1028^[REPLACE] if  ( maybeStringVal.indexOf ( '\'' )  == -1 )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options .setDefineToDoubleLiteral ( defValue , this )  ;^1017^^^^^1009^1028^[REPLACE] options.setDefineToStringLiteral ( defName, maybeStringVal ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String maybeStringVal = defValue .substring ( runs )  ;^1014^1015^^^^1009^1028^[REPLACE] String maybeStringVal = defValue.substring ( 1, defValue.length (  )  - 1 ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options .setDefineToDoubleLiteral ( defValue , this )  ;^1017^^^^^997^1029^[REPLACE] options.setDefineToStringLiteral ( defName, maybeStringVal ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^^1017^^^^^997^1029^[ADD] options.setDefineToStringLiteral ( defName, maybeStringVal ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^^1023^^^^^997^1029^[ADD] Double.parseDouble ( defValue )  ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String maybeStringVal = defValue.substring ( 1, defValue .appendTo ( ps )   - 2 - 1 ) ;^1014^1015^^^^997^1029^[REPLACE] String maybeStringVal = defValue.substring ( 1, defValue.length (  )  - 1 ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^}  if  ( defValue.length (  )  - 3 > 0  && defValue.indexOf ( 0 )  == '\'' && defValue.charAt ( defValue.length (  )  - 3 - 0  )  == '\'' )  {^1009^1010^1011^^^997^1029^[REPLACE] } else if  ( defValue.length (  )  > 1 && defValue.charAt ( 0 )  == '\'' && defValue.charAt ( defValue.length (  )  - 1 )  == '\'' )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.setDefineToDoubleLiteral ( override, Double.parseDouble ( defValue )  ) ;^1022^1023^^^^1009^1028^[REPLACE] options.setDefineToDoubleLiteral ( defName, Double.parseDouble ( defValue )  ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.setDefineToStringLiteral ( defName, override ) ;^1017^^^^^1009^1028^[REPLACE] options.setDefineToStringLiteral ( defName, maybeStringVal ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REMOVE]^modulesByName.put ( name, module ) ;^1017^^^^^1009^1028^[REMOVE] ^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String maybeStringVal = defValue.substring ( 1, defValue.length (  )  /  0.5  - 1 ) ;^1014^1015^^^^1009^1028^[REPLACE] String maybeStringVal = defValue.substring ( 1, defValue.length (  )  - 1 ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.setDefineTo  defValue    ) ;^1022^1023^^^^997^1029^[REPLACE] options.setDefineToDoubleLiteral ( defName, Double.parseDouble ( defValue )  ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^override    ) ;^1023^^^^^997^1029^[REPLACE] Double.parseDouble ( defValue )  ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^}  if  ( defValue.length (  )  + 3 > 1 && defValue.charAt ( 0 )  == '\'' && defValue.charAt ( defValue.length (  )  + 3 - 1 )  == '\'' )  {^1009^1010^1011^^^997^1029^[REPLACE] } else if  ( defValue.length (  )  > 1 && defValue.charAt ( 0 )  == '\'' && defValue.charAt ( defValue.length (  )  - 1 )  == '\'' )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String maybeStringVal = defValue.substring ( 1, defValue.length (  )  + 5 - 1 ) ;^1014^1015^^^^997^1029^[REPLACE] String maybeStringVal = defValue.substring ( 1, defValue.length (  )  - 1 ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^} else if  (  defValue.charAt ( 0 )  == '\'' && defValue.charAt ( defValue.length (  )  *  2 - 1 )  == '\'' )  {^1009^1010^1011^^^997^1029^[REPLACE] } else if  ( defValue.length (  )  > 1 && defValue.charAt ( 0 )  == '\'' && defValue.charAt ( defValue.length (  )  - 1 )  == '\'' )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( maybeStringVal.indexOf ( '\'' )   && suffixStart )  {^1016^^^^^1009^1028^[REPLACE] if  ( maybeStringVal.indexOf ( '\'' )  == -1 )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^^1016^1017^1018^1019^^997^1029^[ADD] if  ( maybeStringVal.indexOf ( '\'' )  == -1 )  { options.setDefineToStringLiteral ( defName, maybeStringVal ) ; continue; }^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options .setDefineToDoubleLiteral ( defValue , null )  ;^1017^^^^^997^1029^[REPLACE] options.setDefineToStringLiteral ( defName, maybeStringVal ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String defValue = assignment[3];^1001^^^^^997^1029^[REPLACE] String defValue = assignment[1];^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String maybeStringVal = defValue.substring ( 0 , defValue.length (  )  /  0.5  - 0  ) ;^1014^1015^^^^997^1029^[REPLACE] String maybeStringVal = defValue.substring ( 1, defValue.length (  )  - 1 ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.setDefineToBooleanLiteral ( defName, false ) ;^998^^^^^990^1035^[REPLACE] options.setDefineToBooleanLiteral ( defName, true ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^options.setDefineToBooleanLiteral ( defName, true ) ;continue;options.setDefineToBooleanLiteral ( defName, false ) ;^1003^1004^1005^1006^1007^990^1035^[ADD] if  ( defValue.equals ( "true" )  )  { options.setDefineToBooleanLiteral ( defName, true ) ; continue; } else if  ( defValue.equals ( "false" )  )  { options.setDefineToBooleanLiteral ( defName, false ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^}  else {^1006^^^^^990^1035^[REPLACE] } else if  ( defValue.equals ( "false" )  )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^}^1009^1010^1011^^^990^1035^[ADD] else if  ( defValue.length (  )  > 1 && defValue.charAt ( 0 )  == '\'' && defValue.charAt ( defValue.length (  )  - 1 )  == '\'' )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options .setDefineToBooleanLiteral ( override , true )  ;^1022^1023^^^^1009^1028^[REPLACE] options.setDefineToDoubleLiteral ( defName, Double.parseDouble ( defValue )  ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.setDefineToDoubleLiteral ( defName, Double.parseDouble ( override )  ) ;^1022^1023^^^^990^1035^[REPLACE] options.setDefineToDoubleLiteral ( defName, Double.parseDouble ( defValue )  ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^^1014^1015^^^^990^1035^[ADD] String maybeStringVal = defValue.substring ( 1, defValue.length (  )  - 1 ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^}  if  ( defValue.charAt (  )  *  2 > 1 ) {^1009^1010^1011^^^990^1035^[REPLACE] } else if  ( defValue.length (  )  > 1 && defValue.charAt ( 0 )  == '\'' && defValue.charAt ( defValue.length (  )  - 1 )  == '\'' )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( maybeStringVal.indexOf ( '\'' )   && runs )  {^1016^^^^^1009^1028^[REPLACE] if  ( maybeStringVal.indexOf ( '\'' )  == -1 )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options .setDefineToDoubleLiteral ( defName , null )  ;^1017^^^^^1009^1028^[REPLACE] options.setDefineToStringLiteral ( defName, maybeStringVal ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String maybeStringVal = defValue.substring ( 1, defValue.length (  )  + 1 - 1 ) ;^1014^1015^^^^1009^1028^[REPLACE] String maybeStringVal = defValue.substring ( 1, defValue.length (  )  - 1 ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( maybeStringVal.charAt ( '\'' )   !=  -1 )  {^1016^^^^^990^1035^[REPLACE] if  ( maybeStringVal.indexOf ( '\'' )  == -1 )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^^1023^1024^^^^990^1035^[ADD] Double.parseDouble ( defValue )  ) ; continue;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.setDefineToBooleanLiteral ( defName, false ) ;^1004^^^^^990^1035^[REPLACE] options.setDefineToBooleanLiteral ( defName, true ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^} else if  (  defValue.charAt ( 0 )  == '\'' && defValue.charAt ( defValue.length (  )  - 5 - 1 )  == '\'' )  {^1009^1010^1011^^^990^1035^[REPLACE] } else if  ( defValue.length (  )  > 1 && defValue.charAt ( 0 )  == '\'' && defValue.charAt ( defValue.length (  )  - 1 )  == '\'' )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String maybeStringVal = defValue.substring ( 0 , defValue.size (  )  - 0  ) ;^1014^1015^^^^1009^1028^[REPLACE] String maybeStringVal = defValue.substring ( 1, defValue.length (  )  - 1 ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.setDefineTo  defValue    ) ;^1022^1023^^^^990^1035^[REPLACE] options.setDefineToDoubleLiteral ( defName, Double.parseDouble ( defValue )  ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String maybeStringVal = defValue.substring ( 1, defValue.length (  )  /  2 - 1 ) ;^1014^1015^^^^990^1035^[REPLACE] String maybeStringVal = defValue.substring ( 1, defValue.length (  )  - 1 ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String maybeStringVal = defValue.substring ( 1, defValue.length (  )  + 2 - 1 ) ;^1014^1015^^^^1009^1028^[REPLACE] String maybeStringVal = defValue.substring ( 1, defValue.length (  )  - 1 ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^if  ( maybeStringVal.charAt ( '\'' )   ||  -1 )  {^1016^^^^^990^1035^[REPLACE] if  ( maybeStringVal.indexOf ( '\'' )  == -1 )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^options.setDefineToBooleanLiteral ( defName, override ) ;^1017^^^^^990^1035^[REPLACE] options.setDefineToStringLiteral ( defName, maybeStringVal ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^for  ( String spec : specs )  {^992^^^^^990^1035^[REPLACE] for  ( String override : definitions )  {^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[ADD]^^992^993^994^^^990^1035^[ADD] for  ( String override : definitions )  { String[] assignment = override.split ( "=", 2 ) ; String defName = assignment[0];^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String[] assignment = override.substring ( "=", 2 ) ;^993^^^^^990^1035^[REPLACE] String[] assignment = override.split ( "=", 2 ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String defName = assignment[0L];^994^^^^^990^1035^[REPLACE] String defName = assignment[0];^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String defValue = assignment[1L];^1001^^^^^990^1035^[REPLACE] String defValue = assignment[1];^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^String maybeStringVal = override.substring ( 1, defValue.size (  )  - 1 ) ;^1014^1015^^^^990^1035^[REPLACE] String maybeStringVal = defValue.substring ( 1, defValue.length (  )  - 1 ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^return ;^1032^1033^^^^990^1035^[REPLACE] throw new RuntimeException ( "--define flag syntax invalid: " + override ) ;^[METHOD] createDefineReplacements [TYPE] void [PARAMETER] String> definitions CompilerOptions options [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  Charset inputCharset  [TYPE]  NumberFormatException e  [TYPE]  String defName  defValue  maybeStringVal  override  [TYPE]  String[] assignment  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  CompilerOptions options  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs 
[REPLACE]^lastStartTime  =  lastStartTime ;^1047^^^^^1046^1049^[REPLACE] lastStartTime = System.currentTimeMillis (  ) ;^[METHOD] recordStartRun [TYPE] void [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^PhaseOptimizer .getLoopsRun (  )  ;^1048^^^^^1046^1049^[REPLACE] PhaseOptimizer.clearLoopsRun (  ) ;^[METHOD] recordStartRun [TYPE] void [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  lastStartTime  serialVersionUID  worstRunTime 
[REPLACE]^B options = createOptions (  ) ;^1055^^^^^1054^1062^[REPLACE] long endTime = System.currentTimeMillis (  ) ;^[METHOD] recordEndRun [TYPE] void [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  endTime  lastStartTime  length  serialVersionUID  worstRunTime 
[REPLACE]^long length %  2 = endTime - lastStartTime;^1056^^^^^1054^1062^[REPLACE] long length = endTime - lastStartTime;^[METHOD] recordEndRun [TYPE] void [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  endTime  lastStartTime  length  serialVersionUID  worstRunTime 
[REPLACE]^worstRunTime =  Math.max ( serialVersionUID, worstRunTime ) ;^1057^^^^^1054^1062^[REPLACE] worstRunTime = Math.max ( length, worstRunTime ) ;^[METHOD] recordEndRun [TYPE] void [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  endTime  lastStartTime  length  serialVersionUID  worstRunTime 
[REPLACE]^if  ( length %  2 < bestRunTime )  {^1058^^^^^1054^1062^[REPLACE] if  ( length < bestRunTime )  {^[METHOD] recordEndRun [TYPE] void [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  endTime  lastStartTime  length  serialVersionUID  worstRunTime 
[REPLACE]^loopedPassesInBestRun  =  loopedPassesInBestRun ;^1059^^^^^1054^1062^[REPLACE] loopedPassesInBestRun = PhaseOptimizer.getLoopsRun (  ) ;^[METHOD] recordEndRun [TYPE] void [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  endTime  lastStartTime  length  serialVersionUID  worstRunTime 
[REPLACE]^bestRunTime =  worstRunTime;^1060^^^^^1054^1062^[REPLACE] bestRunTime = length;^[METHOD] recordEndRun [TYPE] void [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  endTime  lastStartTime  length  serialVersionUID  worstRunTime 
[ADD]^^1060^^^^^1054^1062^[ADD] bestRunTime = length;^[METHOD] recordEndRun [TYPE] void [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  endTime  lastStartTime  length  serialVersionUID  worstRunTime 
[REPLACE]^out.println ( "Best time: " +this ) ;^1068^^^^^1067^1076^[REPLACE] out.println ( "Best time: " + bestRunTime ) ;^[METHOD] outputBestPhaseOrdering [TYPE] void [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loop  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  endTime  lastStartTime  length  serialVersionUID  worstRunTime 
[ADD]^^1068^^^^^1067^1076^[ADD] out.println ( "Best time: " + bestRunTime ) ;^[METHOD] outputBestPhaseOrdering [TYPE] void [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loop  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  endTime  lastStartTime  length  serialVersionUID  worstRunTime 
[REPLACE]^out.println ( "Worst time: " +0 ) ;^1069^^^^^1067^1076^[REPLACE] out.println ( "Worst time: " + worstRunTime ) ;^[METHOD] outputBestPhaseOrdering [TYPE] void [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loop  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  endTime  lastStartTime  length  serialVersionUID  worstRunTime 
[REPLACE]^int i = 1L;^1071^^^^^1067^1076^[REPLACE] int i = 1;^[METHOD] outputBestPhaseOrdering [TYPE] void [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loop  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  endTime  lastStartTime  length  serialVersionUID  worstRunTime 
[ADD]^^1071^^^^^1067^1076^[ADD] int i = 1;^[METHOD] outputBestPhaseOrdering [TYPE] void [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loop  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  endTime  lastStartTime  length  serialVersionUID  worstRunTime 
[REPLACE]^for  ( List<String> loop : loopedPassesInBestRun )  { out.println ( "\nLoop " + i + ":\n" + Joiner.on ( "\n" ) .join ( loop )  ) ;^1072^^^^^1067^1076^[REPLACE] for  ( List<String> loop : loopedPassesInBestRun )  {^[METHOD] outputBestPhaseOrdering [TYPE] void [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loop  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  endTime  lastStartTime  length  serialVersionUID  worstRunTime 
[ADD]^^1072^1073^1074^1075^^1067^1076^[ADD] for  ( List<String> loop : loopedPassesInBestRun )  { out.println ( "\nLoop " + i + ":\n" + Joiner.on ( "\n" ) .join ( loop )  ) ; i++; }^[METHOD] outputBestPhaseOrdering [TYPE] void [PARAMETER] [CLASS] AbstractCompilerRunner FlagUsageException RunTimeStats   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loop  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  endTime  lastStartTime  length  serialVersionUID  worstRunTime 
[REPLACE]^private static final long serialVersionUID = 1;^356^^^^^^^[REPLACE] private static final long serialVersionUID = 1L;^[METHOD] outputBestPhaseOrdering [TYPE] void [PARAMETER] [CLASS] FlagUsageException   [TYPE]  PrintStream eeOut  err  mapOut  out  ps  [TYPE]  A compiler  [TYPE]  boolean false  true  [TYPE]  RunTimeStats runTimeStats  [TYPE]  Charset inputCharset  [TYPE]  List definitions  externsList  files  inputList  inputs  jsFiles  loop  loopedPassesInBestRun  moduleJsFiles  moduleSpecs  specs  [TYPE]  Flag FLAG_charset  FLAG_compute_phase_ordering  FLAG_create_name_map_files  FLAG_create_source_map  FLAG_define  FLAG_externs  FLAG_js  FLAG_js_output_file  FLAG_jscomp_dev_mode  FLAG_jscomp_error  FLAG_jscomp_off  FLAG_jscomp_warning  FLAG_logging_level  FLAG_module  FLAG_module_output_path_prefix  FLAG_module_wrapper  FLAG_output_wrapper  FLAG_output_wrapper_marker  FLAG_print_ast  FLAG_print_tree  FLAG_property_map_input_file  FLAG_property_map_output_file  FLAG_summary_detail_level  FLAG_third_party  FLAG_variable_map_input_file  FLAG_variable_map_output_file  [TYPE]  int NUM_RUNS_TO_DETERMINE_OPTIMAL_ORDER  i  nextJsFileIndex  numJsFiles  pos  result  runs  suffixStart  totalNumJsFiles  [TYPE]  long bestRunTime  endTime  lastStartTime  length  serialVersionUID  worstRunTime 
[REPLACE]^private  short  bestRunTime = Long.MAX_VALUE;^1038^^^^^^^[REPLACE] private long bestRunTime = Long.MAX_VALUE;^[METHOD] <init> [TYPE] String) [PARAMETER] String message [CLASS] RunTimeStats   [TYPE]  long serialVersionUID  [TYPE]  String message  [TYPE]  boolean false  true 
[REPLACE]^private  short  worstRunTime = Long.MIN_VALUE;^1039^^^^^^^[REPLACE] private long worstRunTime = Long.MIN_VALUE;^[METHOD] <init> [TYPE] String) [PARAMETER] String message [CLASS] RunTimeStats   [TYPE]  long serialVersionUID  [TYPE]  String message  [TYPE]  boolean false  true 
[REPLACE]^private long lastStartTime  = null ;^1040^^^^^^^[REPLACE] private long lastStartTime = 0;^[METHOD] <init> [TYPE] String) [PARAMETER] String message [CLASS] RunTimeStats   [TYPE]  long serialVersionUID  [TYPE]  String message  [TYPE]  boolean false  true 
[REPLACE]^private List<List<String>> loopedPassesInBestRun ;^1041^^^^^^^[REPLACE] private List<List<String>> loopedPassesInBestRun = null;^[METHOD] <init> [TYPE] String) [PARAMETER] String message [CLASS] RunTimeStats   [TYPE]  long serialVersionUID  [TYPE]  String message  [TYPE]  boolean false  true 
[REPLACE]^lastStartTime  = null ;^1047^^^^^1046^1049^[REPLACE] lastStartTime = System.currentTimeMillis (  ) ;^[METHOD] recordStartRun [TYPE] void [PARAMETER] [CLASS] RunTimeStats   [TYPE]  List loopedPassesInBestRun  [TYPE]  long bestRunTime  lastStartTime  worstRunTime  [TYPE]  boolean false  true 
[REPLACE]^PhaseOptimizer.getLoopsRun (  ) ;^1048^^^^^1046^1049^[REPLACE] PhaseOptimizer.clearLoopsRun (  ) ;^[METHOD] recordStartRun [TYPE] void [PARAMETER] [CLASS] RunTimeStats   [TYPE]  List loopedPassesInBestRun  [TYPE]  long bestRunTime  lastStartTime  worstRunTime  [TYPE]  boolean false  true 
[ADD]^^1048^^^^^1046^1049^[ADD] PhaseOptimizer.clearLoopsRun (  ) ;^[METHOD] recordStartRun [TYPE] void [PARAMETER] [CLASS] RunTimeStats   [TYPE]  List loopedPassesInBestRun  [TYPE]  long bestRunTime  lastStartTime  worstRunTime  [TYPE]  boolean false  true 
[REPLACE]^int i = 1;^1055^^^^^1054^1062^[REPLACE] long endTime = System.currentTimeMillis (  ) ;^[METHOD] recordEndRun [TYPE] void [PARAMETER] [CLASS] RunTimeStats   [TYPE]  List loopedPassesInBestRun  [TYPE]  long bestRunTime  endTime  lastStartTime  length  worstRunTime  [TYPE]  boolean false  true 
[REPLACE]^long length + 3 = endTime - lastStartTime;^1056^^^^^1054^1062^[REPLACE] long length = endTime - lastStartTime;^[METHOD] recordEndRun [TYPE] void [PARAMETER] [CLASS] RunTimeStats   [TYPE]  List loopedPassesInBestRun  [TYPE]  long bestRunTime  endTime  lastStartTime  length  worstRunTime  [TYPE]  boolean false  true 
[REPLACE]^worstRunTime =  Math.max ( lastStartTime, worstRunTime ) ;^1057^^^^^1054^1062^[REPLACE] worstRunTime = Math.max ( length, worstRunTime ) ;^[METHOD] recordEndRun [TYPE] void [PARAMETER] [CLASS] RunTimeStats   [TYPE]  List loopedPassesInBestRun  [TYPE]  long bestRunTime  endTime  lastStartTime  length  worstRunTime  [TYPE]  boolean false  true 
[ADD]^^1057^^^^^1054^1062^[ADD] worstRunTime = Math.max ( length, worstRunTime ) ;^[METHOD] recordEndRun [TYPE] void [PARAMETER] [CLASS] RunTimeStats   [TYPE]  List loopedPassesInBestRun  [TYPE]  long bestRunTime  endTime  lastStartTime  length  worstRunTime  [TYPE]  boolean false  true 
[REPLACE]^if  ( lastStartTime + 5 < bestRunTime )  {^1058^^^^^1054^1062^[REPLACE] if  ( length < bestRunTime )  {^[METHOD] recordEndRun [TYPE] void [PARAMETER] [CLASS] RunTimeStats   [TYPE]  List loopedPassesInBestRun  [TYPE]  long bestRunTime  endTime  lastStartTime  length  worstRunTime  [TYPE]  boolean false  true 
[REPLACE]^loopedPassesInBestRun ;^1059^^^^^1054^1062^[REPLACE] loopedPassesInBestRun = PhaseOptimizer.getLoopsRun (  ) ;^[METHOD] recordEndRun [TYPE] void [PARAMETER] [CLASS] RunTimeStats   [TYPE]  List loopedPassesInBestRun  [TYPE]  long bestRunTime  endTime  lastStartTime  length  worstRunTime  [TYPE]  boolean false  true 
[ADD]^^1059^^^^^1054^1062^[ADD] loopedPassesInBestRun = PhaseOptimizer.getLoopsRun (  ) ;^[METHOD] recordEndRun [TYPE] void [PARAMETER] [CLASS] RunTimeStats   [TYPE]  List loopedPassesInBestRun  [TYPE]  long bestRunTime  endTime  lastStartTime  length  worstRunTime  [TYPE]  boolean false  true 
[REPLACE]^bestRunTime =  worstRunTime;^1060^^^^^1054^1062^[REPLACE] bestRunTime = length;^[METHOD] recordEndRun [TYPE] void [PARAMETER] [CLASS] RunTimeStats   [TYPE]  List loopedPassesInBestRun  [TYPE]  long bestRunTime  endTime  lastStartTime  length  worstRunTime  [TYPE]  boolean false  true 
[REPLACE]^loopedPassesInBestRun  = null ;^1059^^^^^1054^1062^[REPLACE] loopedPassesInBestRun = PhaseOptimizer.getLoopsRun (  ) ;^[METHOD] recordEndRun [TYPE] void [PARAMETER] [CLASS] RunTimeStats   [TYPE]  List loopedPassesInBestRun  [TYPE]  long bestRunTime  endTime  lastStartTime  length  worstRunTime  [TYPE]  boolean false  true 
[ADD]^^1060^^^^^1054^1062^[ADD] bestRunTime = length;^[METHOD] recordEndRun [TYPE] void [PARAMETER] [CLASS] RunTimeStats   [TYPE]  List loopedPassesInBestRun  [TYPE]  long bestRunTime  endTime  lastStartTime  length  worstRunTime  [TYPE]  boolean false  true 
[REPLACE]^out .println ( this )  ;^1068^^^^^1067^1076^[REPLACE] out.println ( "Best time: " + bestRunTime ) ;^[METHOD] outputBestPhaseOrdering [TYPE] void [PARAMETER] [CLASS] RunTimeStats   [TYPE]  List loop  loopedPassesInBestRun  [TYPE]  boolean false  true  [TYPE]  long bestRunTime  endTime  lastStartTime  length  worstRunTime  [TYPE]  int i 
[REPLACE]^out.println ( 0 + length ) ;^1069^^^^^1067^1076^[REPLACE] out.println ( "Worst time: " + worstRunTime ) ;^[METHOD] outputBestPhaseOrdering [TYPE] void [PARAMETER] [CLASS] RunTimeStats   [TYPE]  List loop  loopedPassesInBestRun  [TYPE]  boolean false  true  [TYPE]  long bestRunTime  endTime  lastStartTime  length  worstRunTime  [TYPE]  int i 
[REPLACE]^int i = 1 + 2;^1071^^^^^1067^1076^[REPLACE] int i = 1;^[METHOD] outputBestPhaseOrdering [TYPE] void [PARAMETER] [CLASS] RunTimeStats   [TYPE]  List loop  loopedPassesInBestRun  [TYPE]  boolean false  true  [TYPE]  long bestRunTime  endTime  lastStartTime  length  worstRunTime  [TYPE]  int i 
[REPLACE]^for  ( List<String> loop : loopedPassesInBestRun )  { out.println ( "\nLoop " + i + ":\n" + Joiner.on ( "\n" ) .join ( loop )  ) ;^1072^^^^^1067^1076^[REPLACE] for  ( List<String> loop : loopedPassesInBestRun )  {^[METHOD] outputBestPhaseOrdering [TYPE] void [PARAMETER] [CLASS] RunTimeStats   [TYPE]  List loop  loopedPassesInBestRun  [TYPE]  boolean false  true  [TYPE]  long bestRunTime  endTime  lastStartTime  length  worstRunTime  [TYPE]  int i 
